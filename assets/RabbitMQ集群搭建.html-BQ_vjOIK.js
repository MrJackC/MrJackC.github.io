import{_ as a,c as n,a as i,o as l}from"./app-mWs04Xnh.js";const e={};function r(p,s){return l(),n("div",null,s[0]||(s[0]=[i(`<h1 id="_3-rabbitmq集群搭建" tabindex="-1"><a class="header-anchor" href="#_3-rabbitmq集群搭建"><span>3.RabbitMQ集群搭建</span></a></h1><p>摘要：实际生产应用中都会采用消息队列的集群方案，如果选择RabbitMQ那么有必要了解下它的集群方案原理</p><p>一般来说，如果只是为了学习RabbitMQ或者验证业务工程的正确性那么在本地环境或者测试环境上使用其单实例部署就可以了，但是出于MQ中间件本身的可靠性、并发性、吞吐量和消息堆积能力等问题的考虑，在生产环境上一般都会考虑使用RabbitMQ的集群方案。</p><h3 id="_3-1-集群方案的原理" tabindex="-1"><a class="header-anchor" href="#_3-1-集群方案的原理"><span>3.1 集群方案的原理</span></a></h3><p>RabbitMQ这款消息队列中间件产品本身是基于Erlang编写，Erlang语言天生具备分布式特性（通过同步Erlang集群各节点的magic cookie来实现）。因此，RabbitMQ天然支持Clustering。这使得RabbitMQ本身不需要像ActiveMQ、Kafka那样通过ZooKeeper分别来实现HA方案和保存集群的元数据。集群是保证可靠性的一种方式，同时可以通过水平扩展以达到增加消息吞吐量能力的目的。</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111546188.png" alt="1565245219265" tabindex="0" loading="lazy"><figcaption>1565245219265</figcaption></figure><h3 id="_3-2-单机多实例部署" tabindex="-1"><a class="header-anchor" href="#_3-2-单机多实例部署"><span>3.2 单机多实例部署</span></a></h3><p>由于某些因素的限制，有时候你不得不在一台机器上去搭建一个rabbitmq集群，这个有点类似zookeeper的单机版。真实生成环境还是要配成多机集群的。有关怎么配置多机集群的可以参考其他的资料，这里主要论述如何在单机中配置多个rabbitmq实例。</p><p>主要参考官方文档：<a href="https://www.rabbitmq.com/clustering.html" target="_blank" rel="noopener noreferrer">https://www.rabbitmq.com/clustering.html</a></p><p>首先确保RabbitMQ运行没有问题</p><div class="language-shell line-numbers-mode" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[root@super ~]# rabbitmqctl status</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">Status</span><span style="color:#98C379;--shiki-dark:#98C379;"> of</span><span style="color:#98C379;--shiki-dark:#98C379;"> node</span><span style="color:#98C379;--shiki-dark:#98C379;"> rabbit@super</span><span style="color:#98C379;--shiki-dark:#98C379;"> ...</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[{pid,10232},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {running_applications,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">     [{rabbitmq_management,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;RabbitMQ Management Console&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;3.6.5&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      {rabbitmq_web_dispatch,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;RabbitMQ Web Dispatcher&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;3.6.5&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      {webmachine,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;webmachine&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;1.10.3&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      {mochiweb,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;MochiMedia Web Server&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;2.13.1&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      {rabbitmq_management_agent,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;RabbitMQ Management Agent&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;3.6.5&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      {rabbit,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;RabbitMQ&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;3.6.5&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      {os_mon,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;CPO  CXC 138 46&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;2.4&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      {syntax_tools,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;Syntax tools&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;1.7&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      {inets,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;INETS  CXC 138 49&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;6.2&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      {amqp_client,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;RabbitMQ AMQP Client&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;3.6.5&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      {rabbit_common,[],</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;3.6.5&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      {ssl,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;Erlang/OTP SSL application&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;7.3&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      {public_key,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;Public key infrastructure&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;1.1.1&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      {asn1,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;The Erlang ASN1 compiler version 4.0.2&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;4.0.2&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      {ranch,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;Socket acceptor pool for TCP protocols.&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;1.2.1&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      {mnesia,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;MNESIA  CXC 138 12&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;4.13.3&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      {compiler,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;ERTS  CXC 138 10&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;6.0.3&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      {crypto,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;CRYPTO&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;3.6.3&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      {xmerl,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;XML parser&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;1.3.10&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      {sasl,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;SASL  CXC 138 11&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;2.7&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      {stdlib,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;ERTS  CXC 138 10&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;2.8&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      {kernel,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;ERTS  CXC 138 10&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;4.2&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}]},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {os,{unix,linux}},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {erlang_version,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">     &quot;Erlang/OTP 18 [erts-7.3] [source] [64-bit] [async-threads:64] [hipe] [kernel-poll:true]\\n&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {memory,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">     [{total,56066752},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      {connection_readers,0},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      {connection_writers,0},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      {connection_channels,0},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      {connection_other,2680},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      {queue_procs,268248},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      {queue_slave_procs,0},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      {plugins,1131936},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      {other_proc,18144280},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      {mnesia,125304},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      {mgmt_db,921312},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      {msg_index,69440},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      {other_ets,1413664},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      {binary,755736},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      {code,27824046},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      {atom,1000601},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      {other_system,4409505}]},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {alarms,[]},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {listeners,[{clustering,25672,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;::&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">},{amqp,5672,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;::&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}]},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {vm_memory_high_watermark,0.4},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {vm_memory_limit,411294105},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {disk_free_limit,50000000},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {disk_free,13270233088},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {file_descriptors,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">     [{total_limit,924},{total_used,6},{sockets_limit,829},{sockets_used,0}]},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {processes,[{limit,1048576},{used,262}]},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {run_queue,0},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {uptime,43651},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {kernel,{net_ticktime,60}}]</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>停止rabbitmq服务</p><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[root@super sbin]# service rabbitmq-server stop</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">Stopping</span><span style="color:#98C379;--shiki-dark:#98C379;"> rabbitmq-server:</span><span style="color:#98C379;--shiki-dark:#98C379;"> rabbitmq-server.</span></span></code></pre></div><p>启动第一个节点：</p><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[root@super sbin]# </span><span style="color:#E06C75;--shiki-dark:#E06C75;">RABBITMQ_NODE_PORT</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">5673</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> RABBITMQ_NODENAME</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">rabbit1</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> rabbitmq-server</span><span style="color:#98C379;--shiki-dark:#98C379;"> start</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">              RabbitMQ</span><span style="color:#98C379;--shiki-dark:#98C379;"> 3.6.5.</span><span style="color:#98C379;--shiki-dark:#98C379;"> Copyright</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (C) 2007-2016 Pivotal Software, Inc.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  ##  ##      Licensed under the MPL.  See http://www.rabbitmq.com/</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  ##  ##</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  ##########  Logs: /var/log/rabbitmq/rabbit1.log</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  ######  ##        /var/log/rabbitmq/rabbit1-sasl.log</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  ##########</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">              Starting</span><span style="color:#98C379;--shiki-dark:#98C379;"> broker...</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> completed</span><span style="color:#98C379;--shiki-dark:#98C379;"> with</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 6</span><span style="color:#98C379;--shiki-dark:#98C379;"> plugins.</span></span></code></pre></div><p>启动第二个节点：</p><blockquote><p>web管理插件端口占用,所以还要指定其web插件占用的端口号。</p></blockquote><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[root@super ~]# </span><span style="color:#E06C75;--shiki-dark:#E06C75;">RABBITMQ_NODE_PORT</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">5674</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> RABBITMQ_SERVER_START_ARGS</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;-rabbitmq_management listener [{port,15674}]&quot;</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> RABBITMQ_NODENAME</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">rabbit2</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> rabbitmq-server</span><span style="color:#98C379;--shiki-dark:#98C379;"> start</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">              RabbitMQ</span><span style="color:#98C379;--shiki-dark:#98C379;"> 3.6.5.</span><span style="color:#98C379;--shiki-dark:#98C379;"> Copyright</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (C) 2007-2016 Pivotal Software, Inc.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  ##  ##      Licensed under the MPL.  See http://www.rabbitmq.com/</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  ##  ##</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  ##########  Logs: /var/log/rabbitmq/rabbit2.log</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  ######  ##        /var/log/rabbitmq/rabbit2-sasl.log</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  ##########</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">              Starting</span><span style="color:#98C379;--shiki-dark:#98C379;"> broker...</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> completed</span><span style="color:#98C379;--shiki-dark:#98C379;"> with</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 6</span><span style="color:#98C379;--shiki-dark:#98C379;"> plugins.</span></span></code></pre></div><p>结束命令：</p><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">rabbitmqctl</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -n</span><span style="color:#98C379;--shiki-dark:#98C379;"> rabbit1</span><span style="color:#98C379;--shiki-dark:#98C379;"> stop</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">rabbitmqctl</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -n</span><span style="color:#98C379;--shiki-dark:#98C379;"> rabbit2</span><span style="color:#98C379;--shiki-dark:#98C379;"> stop</span></span></code></pre></div><p>rabbit1操作作为主节点：</p><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[root@super ~]# rabbitmqctl -n rabbit1 stop_app  </span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">Stopping</span><span style="color:#98C379;--shiki-dark:#98C379;"> node</span><span style="color:#98C379;--shiki-dark:#98C379;"> rabbit1@super</span><span style="color:#98C379;--shiki-dark:#98C379;"> ...</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[root@super ~]# rabbitmqctl -n rabbit1 reset	 </span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">Resetting</span><span style="color:#98C379;--shiki-dark:#98C379;"> node</span><span style="color:#98C379;--shiki-dark:#98C379;"> rabbit1@super</span><span style="color:#98C379;--shiki-dark:#98C379;"> ...</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[root@super ~]# rabbitmqctl -n rabbit1 start_app</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">Starting</span><span style="color:#98C379;--shiki-dark:#98C379;"> node</span><span style="color:#98C379;--shiki-dark:#98C379;"> rabbit1@super</span><span style="color:#98C379;--shiki-dark:#98C379;"> ...</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[root@super ~]#</span></span></code></pre></div><p>rabbit2操作为从节点：</p><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[root@super ~]# rabbitmqctl -n rabbit2 stop_app</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">Stopping</span><span style="color:#98C379;--shiki-dark:#98C379;"> node</span><span style="color:#98C379;--shiki-dark:#98C379;"> rabbit2@super</span><span style="color:#98C379;--shiki-dark:#98C379;"> ...</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[root@super ~]# rabbitmqctl -n rabbit2 reset</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">Resetting</span><span style="color:#98C379;--shiki-dark:#98C379;"> node</span><span style="color:#98C379;--shiki-dark:#98C379;"> rabbit2@super</span><span style="color:#98C379;--shiki-dark:#98C379;"> ...</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[root@super ~]# rabbitmqctl -n rabbit2 join_cluster rabbit1@</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;super&#39;</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> ###&#39;&#39;内是主机名换成自己的</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">Clustering</span><span style="color:#98C379;--shiki-dark:#98C379;"> node</span><span style="color:#98C379;--shiki-dark:#98C379;"> rabbit2@super</span><span style="color:#98C379;--shiki-dark:#98C379;"> with</span><span style="color:#98C379;--shiki-dark:#98C379;"> rabbit1@super</span><span style="color:#98C379;--shiki-dark:#98C379;"> ...</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[root@super ~]# rabbitmqctl -n rabbit2 start_app</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">Starting</span><span style="color:#98C379;--shiki-dark:#98C379;"> node</span><span style="color:#98C379;--shiki-dark:#98C379;"> rabbit2@super</span><span style="color:#98C379;--shiki-dark:#98C379;"> ...</span></span></code></pre></div><p>查看集群状态：</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>[root@super ~]# rabbitmqctl cluster_status -n rabbit1</span></span>
<span class="line"><span>Cluster status of node rabbit1@super ...</span></span>
<span class="line"><span>[{nodes,[{disc,[rabbit1@super,rabbit2@super]}]},</span></span>
<span class="line"><span> {running_nodes,[rabbit2@super,rabbit1@super]},</span></span>
<span class="line"><span> {cluster_name,&lt;&lt;&quot;rabbit1@super&quot;&gt;&gt;},</span></span>
<span class="line"><span> {partitions,[]},</span></span>
<span class="line"><span> {alarms,[{rabbit2@super,[]},{rabbit1@super,[]}]}]</span></span></code></pre></div><p>web监控：</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111546249.png" alt="1566065096459" tabindex="0" loading="lazy"><figcaption>1566065096459</figcaption></figure><h3 id="_3-3-集群管理" tabindex="-1"><a class="header-anchor" href="#_3-3-集群管理"><span>3.3 集群管理</span></a></h3><p><strong>rabbitmqctl join_cluster {cluster_node} [–ram]</strong><br> 将节点加入指定集群中。在这个命令执行前需要停止RabbitMQ应用并重置节点。</p><p><strong>rabbitmqctl cluster_status</strong><br> 显示集群的状态。</p><p><strong>rabbitmqctl change_cluster_node_type {disc|ram}</strong><br> 修改集群节点的类型。在这个命令执行前需要停止RabbitMQ应用。</p><p><strong>rabbitmqctl forget_cluster_node [–offline]</strong><br> 将节点从集群中删除，允许离线执行。</p><p><strong>rabbitmqctl update_cluster_nodes {clusternode}</strong></p><p>在集群中的节点应用启动前咨询clusternode节点的最新信息，并更新相应的集群信息。这个和join_cluster不同，它不加入集群。考虑这样一种情况，节点A和节点B都在集群中，当节点A离线了，节点C又和节点B组成了一个集群，然后节点B又离开了集群，当A醒来的时候，它会尝试联系节点B，但是这样会失败，因为节点B已经不在集群中了。</p><p><strong>rabbitmqctl cancel_sync_queue [-p vhost] {queue}</strong><br> 取消队列queue同步镜像的操作。</p><p><strong>rabbitmqctl set_cluster_name {name}</strong><br> 设置集群名称。集群名称在客户端连接时会通报给客户端。Federation和Shovel插件也会有用到集群名称的地方。集群名称默认是集群中第一个节点的名称，通过这个命令可以重新设置。</p><h3 id="_3-4-rabbitmq镜像集群配置" tabindex="-1"><a class="header-anchor" href="#_3-4-rabbitmq镜像集群配置"><span>3.4 RabbitMQ镜像集群配置</span></a></h3><blockquote><p>上面已经完成RabbitMQ默认集群模式，但并不保证队列的高可用性，尽管交换机、绑定这些可以复制到集群里的任何一个节点，但是队列内容不会复制。虽然该模式解决一项目组节点压力，但队列节点宕机直接导致该队列无法应用，只能等待重启，所以要想在队列节点宕机或故障也能正常应用，就要复制队列内容到集群里的每个节点，必须要创建镜像队列。</p><p>镜像队列是基于普通的集群模式的，然后再添加一些策略，所以你还是得先配置普通集群，然后才能设置镜像队列，我们就以上面的集群接着做。</p></blockquote><p><strong>设置的镜像队列可以通过开启的网页的管理端Admin-&gt;Policies，也可以通过命令。</strong></p><blockquote><p>rabbitmqctl set_policy my_ha &quot;^&quot; &#39;{&quot;ha-mode&quot;:&quot;all&quot;}&#39;</p></blockquote><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111546287.png" alt="1566072300852" tabindex="0" loading="lazy"><figcaption>1566072300852</figcaption></figure><blockquote><ul><li>Name:策略名称</li><li>Pattern：匹配的规则，如果是匹配所有的队列，是^.</li><li>Definition:使用ha-mode模式中的all，也就是同步所有匹配的队列。问号链接帮助文档。</li></ul></blockquote><h3 id="_3-5-负载均衡-haproxy" tabindex="-1"><a class="header-anchor" href="#_3-5-负载均衡-haproxy"><span>3.5 负载均衡-HAProxy</span></a></h3><p>HAProxy提供高可用性、负载均衡以及基于TCP和HTTP应用的代理，支持虚拟主机，它是免费、快速并且可靠的一种解决方案,包括Twitter，Reddit，StackOverflow，GitHub在内的多家知名互联网公司在使用。HAProxy实现了一种事件驱动、单一进程模型，此模型支持非常大的并发连接数。</p><h5 id="_3-5-1-安装haproxy" tabindex="-1"><a class="header-anchor" href="#_3-5-1-安装haproxy"><span>3.5.1 安装HAProxy</span></a></h5><div class="language-shell line-numbers-mode" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">//下载依赖包</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">yum</span><span style="color:#98C379;--shiki-dark:#98C379;"> install</span><span style="color:#98C379;--shiki-dark:#98C379;"> gcc</span><span style="color:#98C379;--shiki-dark:#98C379;"> vim</span><span style="color:#98C379;--shiki-dark:#98C379;"> wget</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">//上传haproxy源码包</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">//解压</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">tar</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -zxvf</span><span style="color:#98C379;--shiki-dark:#98C379;"> haproxy-1.6.5.tar.gz</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -C</span><span style="color:#98C379;--shiki-dark:#98C379;"> /usr/local</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">//进入目录、进行编译、安装</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">cd</span><span style="color:#98C379;--shiki-dark:#98C379;"> /usr/local/haproxy-1.6.5</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">make</span><span style="color:#98C379;--shiki-dark:#98C379;"> TARGET=linux31</span><span style="color:#98C379;--shiki-dark:#98C379;"> PREFIX=/usr/local/haproxy</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">make</span><span style="color:#98C379;--shiki-dark:#98C379;"> install</span><span style="color:#98C379;--shiki-dark:#98C379;"> PREFIX=/usr/local/haproxy</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">mkdir</span><span style="color:#98C379;--shiki-dark:#98C379;"> /etc/haproxy</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">//赋权</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">groupadd</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -r</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -g</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 149</span><span style="color:#98C379;--shiki-dark:#98C379;"> haproxy</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">useradd</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -g</span><span style="color:#98C379;--shiki-dark:#98C379;"> haproxy</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -r</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -s</span><span style="color:#98C379;--shiki-dark:#98C379;"> /sbin/nologin</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -u</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 149</span><span style="color:#98C379;--shiki-dark:#98C379;"> haproxy</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">//创建haproxy配置文件</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">mkdir</span><span style="color:#98C379;--shiki-dark:#98C379;"> /etc/haproxy</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">vim</span><span style="color:#98C379;--shiki-dark:#98C379;"> /etc/haproxy/haproxy.cfg</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-5-2-配置haproxy" tabindex="-1"><a class="header-anchor" href="#_3-5-2-配置haproxy"><span>3.5.2 配置HAProxy</span></a></h5><p>配置文件路径：/etc/haproxy/haproxy.cfg</p><div class="language-shell line-numbers-mode" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#logging options</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">global</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">	log</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 127.0.0.1</span><span style="color:#98C379;--shiki-dark:#98C379;"> local0</span><span style="color:#98C379;--shiki-dark:#98C379;"> info</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">	maxconn</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 5120</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">	chroot</span><span style="color:#98C379;--shiki-dark:#98C379;"> /usr/local/haproxy</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">	uid</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 99</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">	gid</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 99</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">	daemon</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">	quiet</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">	nbproc</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 20</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">	pidfile</span><span style="color:#98C379;--shiki-dark:#98C379;"> /var/run/haproxy.pid</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">defaults</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">	log</span><span style="color:#98C379;--shiki-dark:#98C379;"> global</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">	</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">	mode</span><span style="color:#98C379;--shiki-dark:#98C379;"> tcp</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">	option</span><span style="color:#98C379;--shiki-dark:#98C379;"> tcplog</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">	option</span><span style="color:#98C379;--shiki-dark:#98C379;"> dontlognull</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">	retries</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 3</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">	option</span><span style="color:#98C379;--shiki-dark:#98C379;"> redispatch</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">	maxconn</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 2000</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">	contimeout</span><span style="color:#98C379;--shiki-dark:#98C379;"> 5s</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   </span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">     clitimeout</span><span style="color:#98C379;--shiki-dark:#98C379;"> 60s</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">     srvtimeout</span><span style="color:#98C379;--shiki-dark:#98C379;"> 15s</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">	</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#front-end IP for consumers and producters</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">listen</span><span style="color:#98C379;--shiki-dark:#98C379;"> rabbitmq_cluster</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">	bind</span><span style="color:#98C379;--shiki-dark:#98C379;"> 0.0.0.0:5672</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">	</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">	mode</span><span style="color:#98C379;--shiki-dark:#98C379;"> tcp</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	#balance url_param userid</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	#balance url_param session_id check_post 64</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	#balance hdr(User-Agent)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	#balance hdr(host)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	#balance hdr(Host) use_domain_only</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	#balance rdp-cookie</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	#balance leastconn</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	#balance source //ip</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">	</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">	balance</span><span style="color:#98C379;--shiki-dark:#98C379;"> roundrobin</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">	</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        server</span><span style="color:#98C379;--shiki-dark:#98C379;"> node1</span><span style="color:#98C379;--shiki-dark:#98C379;"> 127.0.0.1:5673</span><span style="color:#98C379;--shiki-dark:#98C379;"> check</span><span style="color:#98C379;--shiki-dark:#98C379;"> inter</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 5000</span><span style="color:#98C379;--shiki-dark:#98C379;"> rise</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 2</span><span style="color:#98C379;--shiki-dark:#98C379;"> fall</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 2</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        server</span><span style="color:#98C379;--shiki-dark:#98C379;"> node2</span><span style="color:#98C379;--shiki-dark:#98C379;"> 127.0.0.1:5674</span><span style="color:#98C379;--shiki-dark:#98C379;"> check</span><span style="color:#98C379;--shiki-dark:#98C379;"> inter</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 5000</span><span style="color:#98C379;--shiki-dark:#98C379;"> rise</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 2</span><span style="color:#98C379;--shiki-dark:#98C379;"> fall</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">listen</span><span style="color:#98C379;--shiki-dark:#98C379;"> stats</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">	bind</span><span style="color:#98C379;--shiki-dark:#98C379;"> 172.16.98.133:8100</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">	mode</span><span style="color:#98C379;--shiki-dark:#98C379;"> http</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">	option</span><span style="color:#98C379;--shiki-dark:#98C379;"> httplog</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">	stats</span><span style="color:#98C379;--shiki-dark:#98C379;"> enable</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">	stats</span><span style="color:#98C379;--shiki-dark:#98C379;"> uri</span><span style="color:#98C379;--shiki-dark:#98C379;"> /rabbitmq-stats</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">	stats</span><span style="color:#98C379;--shiki-dark:#98C379;"> refresh</span><span style="color:#98C379;--shiki-dark:#98C379;"> 5s</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动HAproxy负载</p><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">/usr/local/haproxy/sbin/haproxy</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -f</span><span style="color:#98C379;--shiki-dark:#98C379;"> /etc/haproxy/haproxy.cfg</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">//查看haproxy进程状态</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">ps</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -ef</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> | </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">grep</span><span style="color:#98C379;--shiki-dark:#98C379;"> haproxy</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">访问如下地址对mq节点进行监控</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">http://172.16.98.133:8100/rabbitmq-stats</span></span></code></pre></div><p>代码中访问mq集群地址，则变为访问haproxy地址:5672</p>`,53)]))}const t=a(e,[["render",r],["__file","RabbitMQ集群搭建.html.vue"]]),c=JSON.parse('{"path":"/posts/MiddleWare/MQ_Rabbitmq/RabbitMQ%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA.html","title":"3.RabbitMQ集群搭建","lang":"zh-CN","frontmatter":{"created":"2022-09-30 17:46","updated":"2024-10-11 15:46","description":"3.RabbitMQ集群搭建 摘要：实际生产应用中都会采用消息队列的集群方案，如果选择RabbitMQ那么有必要了解下它的集群方案原理 一般来说，如果只是为了学习RabbitMQ或者验证业务工程的正确性那么在本地环境或者测试环境上使用其单实例部署就可以了，但是出于MQ中间件本身的可靠性、并发性、吞吐量和消息堆积能力等问题的考虑，在生产环境上一般都会考虑...","head":[["meta",{"property":"og:url","content":"https://springg.us.kg/posts/MiddleWare/MQ_Rabbitmq/RabbitMQ%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA.html"}],["meta",{"property":"og:site_name","content":"mrjason’s Blog"}],["meta",{"property":"og:title","content":"3.RabbitMQ集群搭建"}],["meta",{"property":"og:description","content":"3.RabbitMQ集群搭建 摘要：实际生产应用中都会采用消息队列的集群方案，如果选择RabbitMQ那么有必要了解下它的集群方案原理 一般来说，如果只是为了学习RabbitMQ或者验证业务工程的正确性那么在本地环境或者测试环境上使用其单实例部署就可以了，但是出于MQ中间件本身的可靠性、并发性、吞吐量和消息堆积能力等问题的考虑，在生产环境上一般都会考虑..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111546188.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-28T01:58:08.000Z"}],["meta",{"property":"article:author","content":"MrJason"}],["meta",{"property":"article:modified_time","content":"2024-10-28T01:58:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"3.RabbitMQ集群搭建\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111546188.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111546249.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111546287.png\\"],\\"dateModified\\":\\"2024-10-28T01:58:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MrJason\\",\\"url\\":\\"https://springg.us.kg\\"}]}"]]},"headers":[{"level":3,"title":"3.1 集群方案的原理","slug":"_3-1-集群方案的原理","link":"#_3-1-集群方案的原理","children":[]},{"level":3,"title":"3.2 单机多实例部署","slug":"_3-2-单机多实例部署","link":"#_3-2-单机多实例部署","children":[]},{"level":3,"title":"3.3 集群管理","slug":"_3-3-集群管理","link":"#_3-3-集群管理","children":[]},{"level":3,"title":"3.4 RabbitMQ镜像集群配置","slug":"_3-4-rabbitmq镜像集群配置","link":"#_3-4-rabbitmq镜像集群配置","children":[]},{"level":3,"title":"3.5 负载均衡-HAProxy","slug":"_3-5-负载均衡-haproxy","link":"#_3-5-负载均衡-haproxy","children":[]}],"git":{"createdTime":1730080688000,"updatedTime":1730080688000,"contributors":[{"name":"MrJason","email":"845886914@qq.com","commits":1}]},"readingTime":{"minutes":6.41,"words":1924},"filePathRelative":"posts/MiddleWare/MQ_Rabbitmq/RabbitMQ集群搭建.md","localizedDate":"2024年10月28日","excerpt":"\\n<p>摘要：实际生产应用中都会采用消息队列的集群方案，如果选择RabbitMQ那么有必要了解下它的集群方案原理</p>\\n<p>一般来说，如果只是为了学习RabbitMQ或者验证业务工程的正确性那么在本地环境或者测试环境上使用其单实例部署就可以了，但是出于MQ中间件本身的可靠性、并发性、吞吐量和消息堆积能力等问题的考虑，在生产环境上一般都会考虑使用RabbitMQ的集群方案。</p>\\n<h3>3.1 集群方案的原理</h3>\\n<p>RabbitMQ这款消息队列中间件产品本身是基于Erlang编写，Erlang语言天生具备分布式特性（通过同步Erlang集群各节点的magic cookie来实现）。因此，RabbitMQ天然支持Clustering。这使得RabbitMQ本身不需要像ActiveMQ、Kafka那样通过ZooKeeper分别来实现HA方案和保存集群的元数据。集群是保证可靠性的一种方式，同时可以通过水平扩展以达到增加消息吞吐量能力的目的。</p>","autoDesc":true}');export{t as comp,c as data};
