import{_ as a,c as n,a as i,o as l}from"./app-BQBjlK2G.js";const e={};function p(o,s){return l(),n("div",null,s[0]||(s[0]=[i(`<h1 id="mysql数据库" tabindex="-1"><a class="header-anchor" href="#mysql数据库"><span>MySQL数据库</span></a></h1><hr><h2 id="一、为什么要使用数据库" tabindex="-1"><a class="header-anchor" href="#一、为什么要使用数据库"><span>一、为什么要使用数据库</span></a></h2><ul><li>持久化(persistence)：<strong>把数据保存到可掉电式存储设备中以供之后使用</strong>。大多数情况下，特别是企业级应用，<strong>数据持久化意味着将内存中的数据保存到硬盘上加以”固化”</strong>，而持久化的实现过程大多通过各种关系数据库来完成。</li><li>持久化的主要作用是<strong>将内存中的数据存储在关系型数据库中</strong>，当然也可以存储在磁盘文件、XML数据文件中。</li></ul><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716141737.png" alt="1554944967857" tabindex="0" loading="lazy"><figcaption>1554944967857</figcaption></figure><hr><h2 id="二、什么是数据库" tabindex="-1"><a class="header-anchor" href="#二、什么是数据库"><span>二、什么是数据库</span></a></h2><h3 id="_2-1-数据库的相关概念" tabindex="-1"><a class="header-anchor" href="#_2-1-数据库的相关概念"><span>2.1 数据库的相关概念</span></a></h3><table><thead><tr><th>DB：数据库（Database）</th></tr></thead><tbody><tr><td>即存储数据的“仓库”。它保存了一系列有组织的数据。</td></tr><tr><td><strong>DBMS：数据库管理系统（Database Management System）</strong></td></tr><tr><td>是一种操纵和管理数据库的大型软件，例如建立、使用和维护数据库。</td></tr><tr><td><strong>SQL：结构化查询语言（Structured Query Language）</strong></td></tr><tr><td>专门用来与数据库通信的语言。</td></tr></tbody></table><h3 id="_2-2-常见的数据库管理系统-dbms" tabindex="-1"><a class="header-anchor" href="#_2-2-常见的数据库管理系统-dbms"><span>2.2 常见的数据库管理系统(DBMS)</span></a></h3><p>目前互联网上常见的数据库管理软件有Sybase、DB2、Oracle、MySQL、Access、MS SQL Server、Informix、PostgreSQL（最符合SQL标准，开放源码，具备商业级DBMS质量）这几种。以下是2020年<strong>DB-Engines Ranking</strong> 对各数据库受欢迎程度进行调查后的统计结果：（查看数据库最新排名:<a href="https://db-engines.com/en/ranking%EF%BC%89" target="_blank" rel="noopener noreferrer">https://db-engines.com/en/ranking）</a></p><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716142533.png" alt="image-20200716142533533" tabindex="0" loading="lazy"><figcaption>image-20200716142533533</figcaption></figure><p>对应的走势图：（<a href="https://db-engines.com/en/ranking_trend%EF%BC%89" target="_blank" rel="noopener noreferrer">https://db-engines.com/en/ranking_trend）</a></p><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716142707.png" alt="image-20200716142707204" tabindex="0" loading="lazy"><figcaption>image-20200716142707204</figcaption></figure><h3 id="_2-3-关系型数据库和非关系型数据库区别" tabindex="-1"><a class="header-anchor" href="#_2-3-关系型数据库和非关系型数据库区别"><span>2.3 关系型数据库和非关系型数据库区别</span></a></h3><p><strong>1.</strong> <strong>实质</strong></p><ul><li><p><strong>关系型数据库</strong>，采用关系模型来组织数据。简单来说，<strong>关系模型指的就是二维表格模型</strong>。类似于Excel工作表。</p></li><li><p><strong>非关系型数据库</strong>，可看成传统关系型数据库的功能阉割版本，基于键值对存储数据，通过减少很少用的功能，来提高性能</p></li></ul><p><strong>2.</strong> <strong>价格</strong></p><p>目前基本上大部分主流的非关系型数据库都是免费的。而比较有名气的关系型数据库，比如Oracle、DB2、SQL Server是收费的。虽然MySQL免费，但它需要做很多工作才能正式用于生产。</p><p><strong>3.</strong> <strong>应用场景</strong></p><p>实际开发中，有很多业务需求，其实并不需要完整的关系型数据库功能，非关系型数据库的功能就足够使用了。这种情况下，使用性能更高、成本更低的非关系型数据库当然是更明智的选择。比如：日志收集、排行榜、定时器等。</p><p><strong>4.</strong> <strong>各自优势</strong></p><ul><li><p><strong>关系型数据库的优势：</strong></p><ul><li><strong>复杂查询</strong><br> 可以用SQL语句方便的在一个表以及多个表之间做非常复杂的数据查询。</li><li><strong>事务支持</strong><br> 使得对于安全性能很高的数据访问要求得以实现。</li></ul></li><li><p><strong>非关系型数据库的优势：</strong></p><ul><li><strong>性能</strong><br> NOSQL是基于键值对的，可以想象成表中的主键和值的对应关系，而且不需要经过SQL层的解析，所以性能非常高。</li><li><strong>可扩展性</strong><br> 同样也是因为基于键值对，数据之间没有耦合性，所以非常容易水平扩展。</li></ul></li></ul><h3 id="_2-4-关系型数据库设计规则" tabindex="-1"><a class="header-anchor" href="#_2-4-关系型数据库设计规则"><span>2.4 关系型数据库设计规则</span></a></h3><ul><li><p><strong>遵循ER模型和三范式</strong></p><ul><li>E entity 代表实体的意思 对应到数据库当中的一张表</li><li>R relationship 代表关系的意思</li></ul></li><li><p><strong>三范式：1、列不能拆分 2、唯一标识 3、关系引用主键</strong></p></li><li><p><strong>具体体现</strong></p><ul><li><p>将数据放到表中，表再放到库中。</p></li><li><p>一个数据库中可以有多个表，每个表都有一个名字，用来标识自己。表名具有唯一性。</p></li><li><p>表具有一些特性，这些特性定义了数据在表中如何存储，类似java和python中 “类”的设计。</p></li><li><p>表由列组成，我们也称为<strong>字段</strong>。每个字段描述了它所含有的数据的意义，<strong>数据表的设计实际上就是对字段的设计</strong>。创建数据表时，为每个字段分配一个数据类型，定义它们的数据长度和字段名。每个字段类似java 或者python中的“实例属性”。</p></li><li><p>表中的数据是按行存储的，一行即为一条记录。</p><p>每一行类似于java或python中的“对象”。</p></li></ul><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716141832.png" alt="1554904472176" tabindex="0" loading="lazy"><figcaption>1554904472176</figcaption></figure><p>类似于生活的存储柜：</p><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716143510.png" alt="image-20200716143510533" tabindex="0" loading="lazy"><figcaption>image-20200716143510533</figcaption></figure></li></ul><h3 id="_2-5-mysql数据库介绍" tabindex="-1"><a class="header-anchor" href="#_2-5-mysql数据库介绍"><span>2.5 MySQL数据库介绍</span></a></h3><p><strong>MySQL</strong>是一种开放源代码的关系型数据库管理系统，开发者为瑞典MySQL AB公司。在2008年1月16号被Sun公司收购。而2009年,SUN又被Oracle收购。目前 MySQL被广泛地应用在Internet上的中小型网站中，分为社区版和商业版。由于其<strong>体积小、速度快、总体拥有成本低，尤其是开放源码这一特点，使得很多互联网公司选择了MySQL作为网站数据库</strong>（Facebook, Twitter, YouTube，阿里的蚂蚁金服，去哪儿，魅族，百度外卖，腾讯）。</p><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716141837.png" alt="1554945212252" tabindex="0" loading="lazy"><figcaption>1554945212252</figcaption></figure><ul><li><p>阿里巴巴/蚂蚁金服主要使用两种关系数据库：OceanBase和MySQL。数据规模：MySQL单台机器TB级，OceanBase单个集群从几个TB到几百个TB皆有。</p></li><li><p>去哪儿：MySQL，Redis，HBase</p></li><li><p>腾讯社交网络主要使用深度定制MySQL数据库+自研NoSQL，规模万台以上服务器，千万级qps。</p></li><li><p>百度外卖目前线上主要使用Mysql、redis等数据库。MySQL 数据数百TB级，redis 数据几TB级。</p></li><li><p>目前魅族OLTP场景主要使用的是MySQL，缓存服务使用的是Redis。数据库实例近1000，数据大小100T+, redis实例1000+。</p></li></ul><hr><h2 id="三、mysql数据库的卸载与安装" tabindex="-1"><a class="header-anchor" href="#三、mysql数据库的卸载与安装"><span>三、MySQL数据库的卸载与安装</span></a></h2><h3 id="_3-1-mysql的卸载" tabindex="-1"><a class="header-anchor" href="#_3-1-mysql的卸载"><span>3.1 MySQL的卸载</span></a></h3><h4 id="步骤一-软件的卸载" tabindex="-1"><a class="header-anchor" href="#步骤一-软件的卸载"><span>步骤一：软件的卸载</span></a></h4><p><strong>方式一：通过控制面板卸载</strong></p><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716141842.png" alt="1554904624331" tabindex="0" loading="lazy"><figcaption>1554904624331</figcaption></figure><p><strong>方式二：通过360或电脑管家等软件卸载</strong></p><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716141842.png" alt="1554904663651" tabindex="0" loading="lazy"><figcaption>1554904663651</figcaption></figure><p><strong>方式三：通过安装包提供的卸载功能卸载</strong></p><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716141844.png" alt="1554904693231" tabindex="0" loading="lazy"><figcaption>1554904693231</figcaption></figure><h4 id="步骤二-清理残余文件" tabindex="-1"><a class="header-anchor" href="#步骤二-清理残余文件"><span>步骤二：清理残余文件</span></a></h4><p>如果再次安装不成功，可以卸载后对残余文件进行清理后再安装。</p><p><strong>操作一：清除安装残余文件</strong></p><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716141849.png" alt="1554904949245" tabindex="0" loading="lazy"><figcaption>1554904949245</figcaption></figure><p><strong>操作二：清除数据残余文件</strong></p><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716143740.png" alt="image-20200716143653770" tabindex="0" loading="lazy"><figcaption>image-20200716143653770</figcaption></figure><blockquote><p>注意：请在卸载前做好数据备份</p><p>在前两步操作完以后，需要重启计算机，然后进行安装即可。<strong>如果仍然安装失败，需要继续操作如下步骤三。</strong></p></blockquote><h4 id="步骤三-清理注册表-选做" tabindex="-1"><a class="header-anchor" href="#步骤三-清理注册表-选做"><span>步骤三：清理注册表（选做）</span></a></h4><p>如何打开注册表编辑器：在系统的搜索框中输入regedit</p><ol><li>HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Services\\Eventlog\\Application\\MySQL服务 目录删除</li><li>HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Services\\MySQL服务 目录删除</li><li>HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet002\\Services\\Eventlog\\Application\\MySQL服务 目录删除</li><li>HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet002\\Services\\MySQL服务 目录删除</li><li>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Eventlog\\Application\\MySQL服务目录删除</li><li>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\MySQL服务删除</li></ol><blockquote><p>注册表中的ControlSet001,ControlSet002,不一定是001和002,可能是ControlSet005、006之类</p><p>sptpitpn::</p></blockquote><h3 id="_3-2-mysql的安装" tabindex="-1"><a class="header-anchor" href="#_3-2-mysql的安装"><span>3.2 MySQL的安装</span></a></h3><p>准备安装</p><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716143749.png" alt="1554907061234" tabindex="0" loading="lazy"><figcaption>1554907061234</figcaption></figure><p>欢迎安装</p><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716143757.png" alt="1554907068327" tabindex="0" loading="lazy"><figcaption>1554907068327</figcaption></figure><p>准许协议</p><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716143827.png" alt="1554907082719" tabindex="0" loading="lazy"><figcaption>1554907082719</figcaption></figure><p>选择安装模式</p><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716143923.png" alt="1554907096758" tabindex="0" loading="lazy"><figcaption>1554907096758</figcaption></figure><blockquote><p>Typical：表示一般常用的组件都会被安装，默认情况下安装到”C:\\Program Files\\MySQL\\MySQL Server 5.5\\”下。</p><p>Complete：表示会安装所有的组件。此套件会占用比较大的磁盘空间。</p><p>Custom：表示用户可以选择要安装的组件，可以更改默认按照的路径。这种按照类型最灵活，适用于高级用户。</p></blockquote><p>选择安装组件及安装路径</p><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716141904.png" alt="1554907133201" tabindex="0" loading="lazy"><figcaption>1554907133201</figcaption></figure><blockquote><p>这里可以选择安装哪些部分，主要是这里可以设置两个路径：</p><ul><li><p>MySQL Server的应用软件的安装路径，默认在<code>“C:\\Program Files\\MySQL\\MySQL Server 5.5\\”</code></p></li><li><p>Server data files的数据存储的目录路径，默认在<code>“C:\\ProgramData\\MySQL\\MySQL Server 5.5\\”</code></p></li></ul><p><strong>建议把数据存储的目录路径修改一下，以防系统崩溃或重装系统时数据保留。</strong></p></blockquote><p>开始安装</p><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716141906.png" alt="1554907228157" tabindex="0" loading="lazy"><figcaption>1554907228157</figcaption></figure><p>安装进度</p><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716143957.png" alt="image-20200716143957676" tabindex="0" loading="lazy"><figcaption>image-20200716143957676</figcaption></figure><p>系统会显示MySQL Enterprise版（企业版）的一些功能介绍界面，可以单击“Next”继续。</p><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716141909.png" alt="1554907261909" tabindex="0" loading="lazy"><figcaption>1554907261909</figcaption></figure><blockquote><p>单击“Finish”按钮完成安装过程。如果想马上配置数据库连接，选择“Launch the MySQL Instance Configuration Wizard”复选框。如果现在没有配置，以后想要配置或重新配置都可以在“MySQL Server”的安装目录的bin目录下（例如：D:\\ProgramFiles\\MySQL5.5\\MySQL Server 5.5\\bin）找到“MySQLInstanceConfig.exe”打开“MySQL Instance Configuration Wizard”向导。</p></blockquote><h3 id="_3-3-mysql的配置" tabindex="-1"><a class="header-anchor" href="#_3-3-mysql的配置"><span>3.3 MySQL的配置</span></a></h3><p>准备开始</p><p>选择配置类型</p><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716141918.png" alt="1554908978185" tabindex="0" loading="lazy"><figcaption>1554908978185</figcaption></figure><blockquote><p>选择配置方式，“Detailed Configuration（手动精确配置）”、“Standard Configuration（标准配置）”，我们选择“Detailed Configuration”，方便熟悉配置过程。</p></blockquote><p>选择MySQL的应用模式</p><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716144047.png" alt="1554909003949" tabindex="0" loading="lazy"><figcaption>1554909003949</figcaption></figure><blockquote><p>Developer Machine，开发测试类型，mysql 占用很少资源<br> Server Machine，服务器类型，使用中等大小的内存<br> Dedicated MySQL Server Machine，专门的数据库服务器，使用当前可用的最大内存。</p></blockquote><p>选择数据库用途选择界面</p><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716141923.png" alt="1554909046069" tabindex="0" loading="lazy"><figcaption>1554909046069</figcaption></figure><blockquote><p>选择mysql数据库的大致用途：<br><strong>“Multifunctional Database（通用多功能型，好）”</strong>：此选项对事务性存储引擎（InnoDB）和非事务性（MyISAM）存储引擎的存取速度都很快。<br><strong>“Transactional Database Only（服务器类型，专注于事务处理，一般）”</strong>：此选项主要优化了事务性存储引擎（InnoDB），但是非事务性（MyISAM）存储引擎也能用。<br><strong>“Non-Transactional Database Only（非事务处理型，较简单）</strong>：主要做一些监控、记数用，对MyISAM数据类型的支持仅限于non-transactional，注意事务性存储引擎（InnoDB）不能用。</p></blockquote><p>配置InnoDB数据文件目录</p><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716141925.png" alt="1554909131039" tabindex="0" loading="lazy"><figcaption>1554909131039</figcaption></figure><blockquote><p>InnoDB的数据文件会在数据库第一次启动的时候创建，默认会创建在MySQL的安装目录下。用户可以根据实际的空间状况进行路径的选择。</p></blockquote><p>并发连接设置</p><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716141927.png" alt="1554909164990" tabindex="0" loading="lazy"><figcaption>1554909164990</figcaption></figure><blockquote><p>选择您的网站的一般mysql 访问量，同时连接的数目，“Decision Support(DSS)/OLAP（决策支持系统，20个左右）”、“Online Transaction Processing(OLTP)（在线事务系统，500个左右）”、 “Manual Setting（手动设置，自己输一个数）”</p></blockquote><p>网络选项设置</p><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716141932.png" alt="1554909196996" tabindex="0" loading="lazy"><figcaption>1554909196996</figcaption></figure><blockquote><ul><li><p>是否启用TCP/IP连接，设定端口，如果不启用，就只能在自己的机器上访问mysql 数据库了，我这里启用，把前面的勾打上</p></li><li><p>Port Number：3306</p></li><li><p>关于防火墙的设置“Add firewall exception ……”需要选中，将MySQL服务的监听端口加为windows防火墙例外，避免防火墙阻断。</p></li><li><p>还可以选择“启用严格语法模式”（Enable Strict Mode），这样MySQL就不会允许细小的语法错误。尽量使用严格语法模式，因为它可以降低<strong>有害数据</strong>进入数据库的可能性。</p></li></ul></blockquote><p>选择字符集</p><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716141932.png" alt="1554909221851" tabindex="0" loading="lazy"><figcaption>1554909221851</figcaption></figure><blockquote><p>注意：如果要用原来数据库的数据，最好能确定原来数据库用的是什么编码，如果这里设置的编码和原来数据库数据的编码不一致，在使用的时候可能会出现乱码。</p><p>这个比较重要，就是对mysql默认数据库语言编码进行设置，第一个是西文编码，第二个是多字节的通用utf8编码，第三个，手工选择字符集。</p><p>提示：</p><p>如果安装时选择了字符集和“utf8”，通过命令行客户端来操作数据库时，有时候会出现乱码，</p><p>这是因为“命令行客户端”默认是GBK字符集，因此客户端与服务器端就出现了不一致的情况，会出现乱码。</p></blockquote><p>可以在客户端执行：</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">mysql</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> names gbk;  </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">可以通过以下命令查看：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">mysql</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> show variables </span><span style="color:#C678DD;--shiki-dark:#C678DD;">like</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;character_set_%&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span></code></pre></div><blockquote><p>说明：</p><p>对于客户端和服务器的交互操作，MySQL提供了3个不同的参数：character_set_client、character_set_connection、character_set_results，分别代表客户端、连接和返回结果的字符集。通常情况下，这3个字符集应该是相同的，才能确保用户写入的数据可以正确的读出和写入。“set names xxx;”命令可以同时修改这3个参数的值，但是需要每次连接都重新设置。</p></blockquote><p>安全选择</p><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716144036.png" alt="1554909644164" tabindex="0" loading="lazy"><figcaption>1554909644164</figcaption></figure><blockquote><p>选择是否将mysql 安装为windows服务，还可以指定Service Name（服务标识名称，例如我这里取名为“MySQL5.5”），是否将mysql的bin目录加入到Windows PATH环境变量中（加入后，就可以直接使用bin下的命令）”，我这里全部打上了勾。</p></blockquote><p>设置密码</p><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716144113.png" alt="1554909665730" tabindex="0" loading="lazy"><figcaption>1554909665730</figcaption></figure><blockquote><p>这一步询问是否要修改默认root 用户（超级管理）的密码（默认为空），“New root password”如果要修改，就在此填入新密码，“Confirm（再输一遍）”内再填一次，防止输错。（如果是重装，并且之前已经设置了密码，在这里更改密码可能会出错，请留空，并将“Modify Security Settings”前面的勾去掉，安装配置完成后另行修改密码）</p><p>“Enable root access from remotemachines（是否允许root 用户在其它的机器或使用IP地址登陆，如果要安全，就不要勾上，如果要方便，就勾上它）”。如果没有勾选，默认只支持localhost和127.0.0.1连接。</p><p>最后“Create An Anonymous Account（新建一个匿名用户，匿名用户可以连接数据库，不能操作数据，包括查询，如果要有操作数据的权限需要单独分配）”，一般就不用勾了。</p></blockquote><p>准备执行界面</p><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716141938.png" alt="1554909714287" tabindex="0" loading="lazy"><figcaption>1554909714287</figcaption></figure><hr><h2 id="四、mysql的使用" tabindex="-1"><a class="header-anchor" href="#四、mysql的使用"><span>四、MySQL的使用</span></a></h2><h3 id="_4-1-启动和停止服务" tabindex="-1"><a class="header-anchor" href="#_4-1-启动和停止服务"><span>4.1 启动和停止服务</span></a></h3><p>关系型数据库分为桌面文件共享型数据库，例如Access，和C/S架构的网络共享型数据库，例如：MySQL，Oracle等。MySQL软件的服务器端必须先启动，客户端才可以连接和使用使用数据库。</p><p>启动服务的方式：</p><h4 id="方式一-图形化方式" tabindex="-1"><a class="header-anchor" href="#方式一-图形化方式"><span>方式一：图形化方式</span></a></h4><p>“我的电脑/计算机”--&gt;右键--&gt;“管理”--&gt;“服务”--&gt;启动和关闭MySQL</p><p>“开始菜单”--&gt;“控制面板”--&gt;“管理工具”--&gt;“服务”--&gt;启动和关闭MySQL</p><p>“任务管理器”--&gt;“服务”--&gt;启动和关闭MySQL</p><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716144226.png" alt="1554910645800" tabindex="0" loading="lazy"><figcaption>1554910645800</figcaption></figure><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716144230.png" alt="1554910661332" tabindex="0" loading="lazy"><figcaption>1554910661332</figcaption></figure><h4 id="方式二-命令行" tabindex="-1"><a class="header-anchor" href="#方式二-命令行"><span>方式二：命令行</span></a></h4><div class="language-cmd" data-ext="cmd" data-title="cmd"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">net  start  MySQL服务名</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">net  stop  MySQL服务名</span></span></code></pre></div><h3 id="_4-2-客户端登录" tabindex="-1"><a class="header-anchor" href="#_4-2-客户端登录"><span>4.2 客户端登录</span></a></h3><h4 id="方式一-mysql自带客户端" tabindex="-1"><a class="header-anchor" href="#方式一-mysql自带客户端"><span>方式一：MySQL自带客户端</span></a></h4><p>“开始菜单”--&gt;MySQL--&gt;MySQL Server 5.5 --&gt; MySQL 5.5 Command Line Client</p><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716144234.png" alt="1554910754482" tabindex="0" loading="lazy"><figcaption>1554910754482</figcaption></figure><blockquote><p>说明：仅限于root用户</p></blockquote><h4 id="方式二-命令行-1" tabindex="-1"><a class="header-anchor" href="#方式二-命令行-1"><span>方式二：命令行</span></a></h4><p><strong>mysql -h 主机名 -P 端口号 -u 用户名 -p密码</strong></p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">例如：mysql -h localhost -P </span><span style="color:#D19A66;--shiki-dark:#D19A66;">3306</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> -u </span><span style="color:#C678DD;--shiki-dark:#C678DD;">root</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> -proot</span></span></code></pre></div><p>注意：</p><p>（1）-p与密码之间不能有空格，其他参数名与参数值之间可以有空格也可以没有空格</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">mysql -hlocalhost -P3306 -uroot -proot</span></span></code></pre></div><p>（2）密码建议在下一行输入</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">mysql -h localhost -P </span><span style="color:#D19A66;--shiki-dark:#D19A66;">3306</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> -u </span><span style="color:#C678DD;--shiki-dark:#C678DD;">root</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> -p</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">Enter </span><span style="color:#C678DD;--shiki-dark:#C678DD;">password</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:****</span></span></code></pre></div><p>（3）如果是连本机：-hlocalhost就可以省略，如果端口号没有修改：-P3306也可以省略</p><p>简写成：</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">mysql -u </span><span style="color:#C678DD;--shiki-dark:#C678DD;">root</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> -p</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">Enter </span><span style="color:#C678DD;--shiki-dark:#C678DD;">password</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:****</span></span></code></pre></div><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716144312.png" alt="1554910994523" tabindex="0" loading="lazy"><figcaption>1554910994523</figcaption></figure><p>连接成功后，有关于MySQL Server服务版本的信息，还有第几次连接的id标识。</p><p>也可以在命令行通过以下方式获取MySQL Server服务版本的信息</p><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716143042.png" alt="1554911047074" tabindex="0" loading="lazy"><figcaption>1554911047074</figcaption></figure><p>或<strong>登录</strong>后，通过以下方式查看当前版本信息：</p><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716141956.png" alt="1554911062159" tabindex="0" loading="lazy"><figcaption>1554911062159</figcaption></figure><h4 id="方式三-可视化工具" tabindex="-1"><a class="header-anchor" href="#方式三-可视化工具"><span>方式三：可视化工具</span></a></h4><p>例如：Navicat Preminum，SQLyog 等工具</p><p>还有其他工具：mysqlfront,phpMyAdmin</p><h5 id="navicat-preminum" tabindex="-1"><a class="header-anchor" href="#navicat-preminum"><span>Navicat Preminum</span></a></h5><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716141958.png" alt="1554911185763" tabindex="0" loading="lazy"><figcaption>1554911185763</figcaption></figure><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716143030.png" alt="1554911194849" tabindex="0" loading="lazy"><figcaption>1554911194849</figcaption></figure><h5 id="sqlyog" tabindex="-1"><a class="header-anchor" href="#sqlyog"><span>SQLyog</span></a></h5><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716143020.png" alt="1554912367592" tabindex="0" loading="lazy"><figcaption>1554912367592</figcaption></figure><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716143007.png" alt="1554912376445" tabindex="0" loading="lazy"><figcaption>1554912376445</figcaption></figure><hr><h2 id="五、常见sql问题示例" tabindex="-1"><a class="header-anchor" href="#五、常见sql问题示例"><span>五、常见SQL问题示例</span></a></h2><h3 id="_5-1-示例小demo" tabindex="-1"><a class="header-anchor" href="#_5-1-示例小demo"><span>5.1 示例小demo</span></a></h3><p>查看当前的MySQL服务器中有哪些数据库</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">mysql</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> SHOW DATABASES;</span></span></code></pre></div><p>使用test数据库</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">mysql</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> USE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> test;</span></span></code></pre></div><p>创建表格</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">mysql</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> CREATE</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> TABLE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> t_stu(</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    -</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span><span style="color:#C678DD;--shiki-dark:#C678DD;">  sid</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> INT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    -</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  sname </span><span style="color:#C678DD;--shiki-dark:#C678DD;">VARCHAR</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">100</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    -</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  gender </span><span style="color:#C678DD;--shiki-dark:#C678DD;">CHAR</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    -</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> );</span></span></code></pre></div><p>查看表结构</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">mysql</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> DESC</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> t_stu;</span></span></code></pre></div><p>插入记录</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">mysql</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> INSERT INTO</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> t_stu </span><span style="color:#C678DD;--shiki-dark:#C678DD;">VALUES</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;张三&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;男&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">mysql</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> INSERT INTO</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> t_stu </span><span style="color:#C678DD;--shiki-dark:#C678DD;">VALUES</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;李四&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;男&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">mysql</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> INSERT INTO</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> t_stu </span><span style="color:#C678DD;--shiki-dark:#C678DD;">VALUES</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;王五&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;男&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span></code></pre></div><p>查看记录</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">mysql</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> SELECT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> * </span><span style="color:#C678DD;--shiki-dark:#C678DD;">FROM</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> t_stu;</span></span></code></pre></div><p>修改记录</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">mysql</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> UPDATE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> t_stu </span><span style="color:#C678DD;--shiki-dark:#C678DD;">SET</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> sname </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;张三丰&#39;</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> WHERE</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> sid</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span></code></pre></div><p>删除记录</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">mysql</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> DELETE</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> FROM</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> t_stu </span><span style="color:#C678DD;--shiki-dark:#C678DD;">WHERE</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> sid</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span></code></pre></div><h3 id="_5-2-错误error-没有选择数据库就操作表格和数据" tabindex="-1"><a class="header-anchor" href="#_5-2-错误error-没有选择数据库就操作表格和数据"><span>5.2 错误ERROR ：没有选择数据库就操作表格和数据</span></a></h3><table><thead><tr><th>ERROR 1046 (3D000): No database selected</th></tr></thead><tbody><tr><td>解决方案一：就是使用“USE 数据库名;”语句，这样接下来的语句就默认针对这个数据库进行操作</td></tr><tr><td>解决方案二：就是所有的表对象前面都加上“数据库.”</td></tr></tbody></table><h3 id="_5-3-在命令行出现乱码问题" tabindex="-1"><a class="header-anchor" href="#_5-3-在命令行出现乱码问题"><span>5.3 在命令行出现乱码问题</span></a></h3><p>安装数据库时选择utf8, 而我们在windows下窗口是GBK的,因此,需要在命令行客户端声明字符集。</p><p>set names gbk;是为了告诉服务器,客户端用的GBK编码,防止乱码。</p><p>mysql&gt; <strong>set names gbk;</strong></p><p>Query OK, 0 rows affected (0.00 sec)</p><p>可以查看字符集</p><p>mysql&gt; <strong>show variables like &#39;character_set_%&#39;;</strong></p><h3 id="_5-4-退出当前错误语句" tabindex="-1"><a class="header-anchor" href="#_5-4-退出当前错误语句"><span>5.4 退出当前错误语句</span></a></h3><p>语句打错以后应该退出本语句,再继续打新语句。</p><p>也可以打<code>ctrl + c</code>,快速退出本语句。</p><h3 id="_5-5-如何破解数据库的密码" tabindex="-1"><a class="header-anchor" href="#_5-5-如何破解数据库的密码"><span>5.5 如何破解数据库的密码</span></a></h3><p>使用安全模式登录。</p><ol><li><p>通过任务管理器或者服务管理,关掉mysqld(服务进程)</p></li><li><p>通过命令行+特殊参数开启mysqld</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">mysqld </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--skip-grant-tables</span></span></code></pre></div></li><li><p>此时,mysqld服务进程已经打开,并且,不需要权限检查</p></li><li><p>mysql -uroot 无密码登陆服务器</p></li><li><p>修改权限表</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--A: </span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">use</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> mysql;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--B: </span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">update</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> user </span><span style="color:#C678DD;--shiki-dark:#C678DD;">set</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> Password</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> password</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;123456&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#C678DD;--shiki-dark:#C678DD;">where</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> User </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;root&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--C: </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">flush privileges;</span></span></code></pre></div></li><li><p>通过任务管理器,关掉mysqld服务进程</p></li><li><p>再次通过服务管理,打mysql服务</p></li><li><p>即可用修改后的新密码登陆</p></li></ol><h3 id="_5-6-命令行客户端的字符集问题" tabindex="-1"><a class="header-anchor" href="#_5-6-命令行客户端的字符集问题"><span>5.6 命令行客户端的字符集问题</span></a></h3><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">mysql</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> INSERT INTO</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> t_stu </span><span style="color:#C678DD;--shiki-dark:#C678DD;">VALUES</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;张三&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;男&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">ERROR </span><span style="color:#D19A66;--shiki-dark:#D19A66;">1366</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (HY000): Incorrect string </span><span style="color:#C678DD;--shiki-dark:#C678DD;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;\\xD5\\xC5\\xC8\\xFD&#39;</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> column </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;sname&#39;</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> at</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> row</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1</span></span></code></pre></div><p>原因：服务器端认为你的客户端的字符集是utf-8，而实际上你的客户端的字符集是GBK。</p><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716142954.png" alt="1554912924219" tabindex="0" loading="lazy"><figcaption>1554912924219</figcaption></figure><p>查看所有字符集：<strong>SHOW VARIABLES LIKE &#39;character_set_%&#39;;</strong></p><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716142009.png" alt="1554912943186" tabindex="0" loading="lazy"><figcaption>1554912943186</figcaption></figure><p>解决方案，设置当前连接的客户端字符集 <strong>“SET NAMES GBK;”</strong></p><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716142011.png" alt="1554912957353" tabindex="0" loading="lazy"><figcaption>1554912957353</figcaption></figure><h3 id="_5-7-查看字符集和校对规则-了解-参考" tabindex="-1"><a class="header-anchor" href="#_5-7-查看字符集和校对规则-了解-参考"><span>5.7 查看字符集和校对规则（了解，参考）</span></a></h3><p>关于SQL的关键字和函数名等不区分大小写，但是对于数据值是否区分大小写，和字符集与校对规则有关。</p><p>ci（大小写不敏感），cs（大小写敏感），_bin（二元，即比较是基于字符编码的值而与language无关）</p><p><strong>1） 查看所有字符集和校对规则</strong></p><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716142014.png" alt="1554913011329" tabindex="0" loading="lazy"><figcaption>1554913011329</figcaption></figure><p><strong>2）查看GBK和UTF-8字符集的校对规则</strong></p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">show collation </span><span style="color:#C678DD;--shiki-dark:#C678DD;">like</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;gbk%&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span></code></pre></div><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716142023.png" alt="1554913047662" tabindex="0" loading="lazy"><figcaption>1554913047662</figcaption></figure><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">show collation </span><span style="color:#C678DD;--shiki-dark:#C678DD;">like</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;utf8%&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span></code></pre></div><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716142023.png" alt="1554913066128" tabindex="0" loading="lazy"><figcaption>1554913066128</figcaption></figure><blockquote><p>utf8_unicode_ci和utf8_general_ci对中、英文来说没有实质的差别。<br> utf8_general_ci 校对速度快，但准确度稍差。<br> utf8_unicode_ci 准确度高，但校对速度稍慢。</p><p>如果你的应用有德语、法语或者俄语，请一定使用utf8_unicode_ci。一般用utf8_general_ci就够了。</p></blockquote><p><strong>3）查看服务器的字符集和校对规则</strong></p><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716142023.png" alt="1554913100475" tabindex="0" loading="lazy"><figcaption>1554913100475</figcaption></figure><p><strong>4）查看和修改某个数据库的字符集和校对规则</strong></p><p>或</p><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716142030.png" alt="1554913125783" tabindex="0" loading="lazy"><figcaption>1554913125783</figcaption></figure><p>修改数据库的字符集和校对规则：</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">ALTER</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> DATABASE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 数据库名称 </span><span style="color:#C678DD;--shiki-dark:#C678DD;">DEFAULT</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> CHARACTER</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> SET</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 字符集名称 【</span><span style="color:#C678DD;--shiki-dark:#C678DD;">COLLATE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 校对规则名称】;</span></span></code></pre></div><p>例如：</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">ALTER</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> DATABASE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ceshi_db </span><span style="color:#C678DD;--shiki-dark:#C678DD;">DEFAULT</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> CHARACTER</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> SET</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> utf8 </span><span style="color:#C678DD;--shiki-dark:#C678DD;">collate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> utf8_general_ci;</span></span></code></pre></div><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716142030.png" alt="1554913175055" tabindex="0" loading="lazy"><figcaption>1554913175055</figcaption></figure><blockquote><p>注意：修改了数据库的默认字符集和校对规则后，原来已经创建的表格的字符集和校对规则并不会改变，如果需要，那么需要单独修改。</p></blockquote><p><strong>5）查看某个表格的字符集和校对规则</strong></p><p>查看字符集：</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">show </span><span style="color:#C678DD;--shiki-dark:#C678DD;">create</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> users;</span></span></code></pre></div><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716142030.png" alt="1554913222667" tabindex="0" loading="lazy"><figcaption>1554913222667</figcaption></figure><p>如果要查看校对规则：</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">show </span><span style="color:#C678DD;--shiki-dark:#C678DD;">table</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> status</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> bookstore </span><span style="color:#C678DD;--shiki-dark:#C678DD;">like</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;%users%&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ;</span></span></code></pre></div><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716142032.png" alt="1554913250394" tabindex="0" loading="lazy"><figcaption>1554913250394</figcaption></figure><p>修改某个表格的字符集和校对规则：</p><p>修改表的默认字符集：</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">ALTER</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> TABLE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 表名称 </span><span style="color:#C678DD;--shiki-dark:#C678DD;">DEFAULT</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> CHARACTER</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> SET</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 字符集名称 【</span><span style="color:#C678DD;--shiki-dark:#C678DD;">COLLATE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 校对规则名称】;</span></span></code></pre></div><p>把表默认的字符集和所有字符列（CHAR,VARCHAR,TEXT）改为新的字符集：</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">ALTER</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> TABLE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 表名称 CONVERT </span><span style="color:#C678DD;--shiki-dark:#C678DD;">TO</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> CHARACTER</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> SET</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 字符集名称 【</span><span style="color:#C678DD;--shiki-dark:#C678DD;">COLLATE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 校对规则名称】;</span></span></code></pre></div><p>例如：ALTER TABLE ceshi_table DEFAULT CHARACTER SET gbk collate gbk_chinese_ci;</p><hr><h2 id="六、mysql的数据类型" tabindex="-1"><a class="header-anchor" href="#六、mysql的数据类型"><span>六、MySQL的数据类型</span></a></h2><p>常用的数据类型有：</p><ul><li><strong>整型（xxxint）</strong></li><li>位类型(bit)</li><li><strong>浮点型</strong>（float和double、real）</li><li>定点数（decimal,numeric）</li><li><strong>日期时间类型</strong>（date,time,datetime,year）</li><li><strong>字符串</strong>（char,varchar,xxxtext）</li><li>二进制数据（xxxBlob、xxbinary）</li><li>枚举（enum）</li><li>集合（set）</li></ul><h3 id="_6-1-整数-xxxint" tabindex="-1"><a class="header-anchor" href="#_6-1-整数-xxxint"><span>6.1 整数（xxxint）</span></a></h3><table><thead><tr><th><strong>整数类型</strong></th><th><strong>字节</strong></th><th>**最小值（有符号/**无符号）</th><th>**最大值（有符号/**无符号）</th></tr></thead><tbody><tr><td>TINYINT</td><td>1</td><td>-128/0</td><td>127/255</td></tr><tr><td>SMALLINT</td><td>2</td><td>-32768/0</td><td>32767/65535</td></tr><tr><td>MEDIUMINT</td><td>3</td><td>-8388608/0</td><td>8388607/1677215</td></tr><tr><td>INT、INTEGER</td><td>4</td><td>-2147483648/0</td><td>2147483647/4294967295</td></tr><tr><td>BIGINT</td><td>8</td><td>-9223372036854775808/0</td><td>9223372036854775807/18446744073709551615</td></tr></tbody></table><p>整数列的可选属性有三个：</p><ul><li>M: 宽度(在0填充的时候才有意义，否则不需要指定)</li><li>unsigned: 无符号类型(非负)</li><li>zerofill: 0填充,(如果某列是zerofill，那么默认就是无符号)，如果指定了zerofill只是表示不够M位时，用0在左边填充，如果超过M位，只要不超过数据存储范围即可</li></ul><p>原来，在 int(M) 中，M 的值跟 int(M) 所占多少存储空间并无任何关系。 int(3)、int(4)、int(8) 在磁盘上都是占用 4 bytes 的存储空间。</p><h3 id="_6-2-浮点型" tabindex="-1"><a class="header-anchor" href="#_6-2-浮点型"><span>6.2 浮点型</span></a></h3><p>对于浮点列类型，在MySQL中单精度值使用4个字节，双精度值使用8个字节</p><ul><li><p>MySQL允许使用非标准语法（其他数据库未必支持，因此如果设计到数据迁移，则最好不要这么用）：FLOAT(M,D)或DOUBLE(M,D)。这里，(M,D)表示该值一共显示M位，其中D表示小数点后几位，M和D又称为精度和标度。例如，定义为FLOAT(5,2)的一个列可以显示为-999.99-999.99。M取值范围为0<sub>255。D取值范围为0</sub>30，同时必须&lt;=M。</p></li><li><p>如果存储时，整数部分超出了范围（如上面的例子中，添加数值为1000.01），MySql就会报错，不允许存这样的值。如果存储时，小数点部分若超出范围，就分以下情况：若四舍五入后，整数部分没有超出范围，则只警告，但能成功操作并四舍五入删除多余的小数位后保存，例如在FLOAT(5,2)列内插入999.009，近似结果是999.01。若四舍五入后，整数部分超出范围，则MySql报错，并拒绝处理。如999.995和-999.995都会报错。</p></li><li><p>说明：小数类型，也可以加unsigned，但是不会改变数据范围，例如：float(3,2) unsigned仍然只能表示0-9.99的范围。</p></li><li><p>float和double在不指定精度时，默认会按照实际的精度（由实际的硬件和操作系统决定）来显示</p></li><li><p>REAL就是DOUBLE ，如果SQL服务器模式包括REAL_AS_FLOAT选项，REAL是FLOAT的同义词而不是DOUBLE的同义词。</p></li></ul><blockquote><p>注意：在编程中，如果用到浮点数，要特别注意误差问题，因为浮点数是不准确的，所以我们要避免使用“=”来判断两个数是否相等。如果希望保证值比较准确，推荐使用定点数数据类型。</p></blockquote><h3 id="_6-3-定点型" tabindex="-1"><a class="header-anchor" href="#_6-3-定点型"><span>6.3 定点型</span></a></h3><ul><li><p>DECIMAL在MySQL内部以字符串形式存放，比浮点数更精确。定点类型占M+2个字节</p></li><li><p>DECIMAL(M,D)与浮点型一样处理规则。M的取值范围为0<sub>65，D的取值范围为0</sub>30，而且必须&lt;=M，超出范围会报错。</p></li><li><p>DECIMAL如果指定精度时，默认的整数位是10，默认的小数位为0。</p></li><li><p>NUMERIC等价于DECIMAL。</p></li></ul><h3 id="_6-4-日期时间类型" tabindex="-1"><a class="header-anchor" href="#_6-4-日期时间类型"><span>6.4 日期时间类型</span></a></h3><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716142852.png" alt="1555605777724" tabindex="0" loading="lazy"><figcaption>1555605777724</figcaption></figure><ul><li>对于year类型，可以输入4位数，例如2018，也可以输入两位数，例如18，如果输入的是两位，“00-68”表示2000-2069年，“70-99”表示1970-1999年。</li><li>&#39;YYYY-MM-DD HH:MM:SS&#39;或&#39;YY-MM-DD HH:MM:SS&#39;，&#39;YYYY-MM-DD&#39;或&#39;YY-MM-DD&#39;格式的字符串。允许“不严格”语法：任何标点符都可以用做日期部分或时间部分之间的间割符。例如，&#39;98-12-31 11:30:45&#39;、&#39;98.12.31 11+30+45&#39;、&#39;98/12/31 11<em>30</em>45&#39;和&#39;98@12@31 11<sup>30</sup>45&#39;是等价的。</li><li>&#39;YYYYMMDD&#39;或&#39;YYMMDD&#39;格式的没有间割符的字符串，假定字符串对于日期类型是有意义的。例如，&#39;19970523&#39;和&#39;970523&#39;被解释为 &#39;1997-05-23&#39;，但&#39;971332&#39;是不合法的(它有一个没有意义的月和日部分)，将变为&#39;0000-00-00&#39;。</li><li>对于包括日期部分间割符的字符串值，如果日和月的值小于10，不需要指定两位数。&#39;1979-6-9&#39;与&#39;1979-06-09&#39;是相同的。同样，对于包括时间部分间割符的字符串值，如果时、分和秒的值小于10，不需要指定两位数。&#39;1979-10-30 1:2:3&#39;与&#39;1979-10-30 01:02:03&#39;相同。</li><li>数字值应为6、8、12或者14位长。如果一个数值是8或14位长，则假定为YYYYMMDD或YYYYMMDDHHMMSS格式，前4位数表示年。如果数字 是6或12位长，则假定为YYMMDD或YYMMDDHHMMSS格式，前2位数表示年。其它数字被解释为仿佛用零填充到了最近的长度。</li><li>一般存注册时间、商品发布时间等，不建议使用datetime存储，而是使用时间戳，因为datetime虽然直观，但不便于计算。而且timestamp还有一个重要特点，就是和时区有关。还有如果插入NULL，会自动设置为当前系统时间。</li></ul><h3 id="_6-5-字符串型" tabindex="-1"><a class="header-anchor" href="#_6-5-字符串型"><span>6.5 字符串型</span></a></h3><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716142845.png" alt="1554913890687" tabindex="0" loading="lazy"><figcaption>1554913890687</figcaption></figure><p><strong>char,varchar,text区别</strong></p><ul><li>char是一种固定长度的类型，varchar则是一种可变长度的类型</li><li>char如果不指定(M)则表示长度默认是1个字符。varchar必须指定(M)。</li><li>char(M)类型的数据列里，每个值都占用M个<strong>字符</strong>，如果某个长度小于M，MySQL就会在它的右边用空格字符补足（在检索操作中那些填补出来的空格字符将被去掉；如果存入时右边本身就带空格，检索时也会被去掉）；在varchar(M)类型的数据列里，每个值只占用刚好够用的字符再加上一个到两个用来记录其长度的字节（即总长度为L字符+1/2字字节）。（4.0版本以下，varchar(20)，指的是20字节，如果存放UTF8汉字时，只能存6个（每个汉字3字节） ；5.0版本以上，varchar(20)，指的是20字符）</li><li>由于某种原因char 固定长度，所以在处理速度上要比varchar快速很多，但相对费存储空间，所以对存储不大，但在速度上有要求的可以使用char类型，反之可以用varchar类型来实例。</li><li>text文本类型，可以存比较大的文本段，搜索速度稍慢，因此如果不是特别大的内容，建议使用char，varchar来代替。还有text类型不用加默认值，加了也没用。而且text和blob类型的数据删除后容易导致“空洞”，使得文件碎片比较多，所以频繁使用的表不建议包含text类型字段，建议单独分出去，单独用一个表。</li></ul><p><strong>哪些情况使用char或varchar更好</strong></p><ul><li>一，存储很短的信息，比如门牌号码101，201……这样很短的信息应该用char，因为varchar还要占个byte用于存储信息长度，本来打算节约存储的现在得不偿失。</li><li>二，固定长度的。比如使用uuid作为主键，那用char应该更合适。因为他固定长度，varchar动态根据长度的特性就消失了，而且还要占个长度信息。</li><li>三，十分频繁改变的column。因为varchar每次存储都要有额外的计算，得到长度等工作，如果一个非常频繁改变的，那就要有很多的精力用于计算，而这些对于char来说是不需要的。</li><li>MyISAM和MEMORY存储引擎中无论使用char还是varchar其实都是作为char类型处理的。</li><li>其他像InnoDB存储引擎，建议使用varchar类型，因为对于InnoDB数据表，内部的行存储格式并没有区分固定长度和可变长度列（所有数据行都使用指向数据列值的头指针），而且主要影响性能的因素是数据行使用的存储总量，由于char平均占用的空间多于varchar，所以除了简短并且固定长度的，其他考虑varchar。</li></ul><h3 id="_6-6-位类型-了解" tabindex="-1"><a class="header-anchor" href="#_6-6-位类型-了解"><span>6.6 位类型（了解）</span></a></h3><p>BIT数据类型可用来保存位字段值。BIT(M)类型允许存储M位值。M范围为1~64，默认为1。</p><p>BIT其实就是存入二进制的值，类似010110。如果存入一个BIT类型的值，位数少于M值，则左补0。如果存入一个BIT类型的值，位数多于M值，MySQL的操作取决于此时有效的SQL模式：如果模式未设置，MySQL将值裁剪到范围的相应端点，并保存裁减好的值。如果模式设置为traditional(“严格模式”)，超出范围的值将被拒绝并提示错误，并且根据SQL标准插入会失败。</p><p>对于位字段，直接使用SELECT命令将不会看到结果，可以用bin()或hex()函数进行读取。</p><h3 id="_6-7-二进制值类型-了解" tabindex="-1"><a class="header-anchor" href="#_6-7-二进制值类型-了解"><span>6.7 二进制值类型（了解）</span></a></h3><p>包括：xxxBLOB和xxxBINARY</p><p>BINARY和VARBINARY类型类似于CHAR和VARCHAR类型，但是不同的是，它们存储的不是字符字符串，而是二进制串。所以它们没有字符集，并且排序和比较基于列值字节的数值值。当保存BINARY(M)值时，在它们右边填充0x00(零字节)值以达到指定长度。取值时不删除尾部的字节。比较时所有字节很重要（因为空格和0x00是不同的，0x00&lt;空格），包括ORDER BY和DISTINCT操作。比如插入&#39;a &#39;会变成&#39;a \\0&#39;。</p><p>BLOB是一个二进制大对象，可以容纳可变数量的数据。有4种BLOB类型：TINYBLOB、BLOB、MEDIUMBLOB和LONGBLOB。它们只是可容纳值的最大长度不同。分别与四种TEXT类型：TINYTEXT、TEXT、MEDIUMTEXT和LONGTEXT对应有相同的最大长度和存储需求。在TEXT或BLOB列的存储或检索过程中，不存在大小写转换。BLOB和TEXT列不能有默认值。BLOB或TEXT对象的最大大小由其类型确定，但在客户端和服务器之间实际可以传递的最大值由可用内存数量和通信缓存区大小确定。你可以通过更改max_allowed_packet变量的值更改消息缓存区的大小，但必须同时修改服务器和客户端程序。</p><h3 id="_6-8-枚举-enum-了解" tabindex="-1"><a class="header-anchor" href="#_6-8-枚举-enum-了解"><span>6.8 枚举（ENUM）（了解）</span></a></h3><p>​ MySql中的ENUM是一个字符串对象，其值来自表创建时在列规定中显式枚举的一列值：</p><ul><li>可以插入空字符串&quot;&quot;和NULL（如果运行NULL的话）。</li><li>如果你将一个非法值插入ENUM(也就是说，允许的值列之外的字符串)，如果是严格模式，将不能插入，如果是非严格模式，将选用第一个元素代替，并警告。</li><li>ENUM最多可以有65,535个成员，需要2个字节存储。</li><li>当创建表时，ENUM成员值的尾部空格将自动被删除。</li></ul><p>例如：enum(‘M’,’F’)</p><p>值的索引规则如下：</p><ul><li>来自列规定的允许的值列中的值从1开始编号。</li><li>空字符串错误值的索引值是0。</li><li>NULL值的索引是NULL。</li></ul><h3 id="_6-9-集合-set-了解" tabindex="-1"><a class="header-anchor" href="#_6-9-集合-set-了解"><span>6.9 集合（SET）（了解）</span></a></h3><p>SET和ENUM类型非常类似，也是一个字符串对象，里面包含0~64个成员。</p><p>SET和ENUM存储上有所不同，SET是根据成员的个数决定存储的字节数。</p><p>SET和ENUM最主要的区别在于SET类型一次可以选择多个成员，而ENUM则只能选择一个。</p><p>例如：set(‘a’,’b’,’c’,’d’)</p><h3 id="_6-10-特殊的null值" tabindex="-1"><a class="header-anchor" href="#_6-10-特殊的null值"><span>6.10 特殊的NULL值</span></a></h3><p><strong>Null特征：</strong></p><p>（1）所有的类型的值都可以是null，包括int、float等数据类型</p><p>（2）空字符串””，不等于null，0也不等于null，false也不等于null</p><p>（3）任何运算符,判断符碰到NULL,都得NULL</p><p>（4）NULL的判断只能用is null,is not null</p><p>（5）NULL 影响查询速度,一般避免使值为NULL</p><p><strong>面试：</strong></p><p><strong>为什么建表时,加not null default &#39;&#39; 或 default 0</strong></p><p>答:不想让表中出现null值.</p><p><strong>为什么不想要的null的值</strong></p><p>答:（1）不好比较,null是一种特殊值,比较时,只能用专门的is null 和 is not null来比较.</p><p>碰到运算符,一律返回null</p><p>（2）效率不高,影响提高索引效果.</p><p>因此,我们往往,在建表时 not null default &#39;&#39; 或 default 0</p><hr><h2 id="七、mysql的逻辑架构与存储引擎" tabindex="-1"><a class="header-anchor" href="#七、mysql的逻辑架构与存储引擎"><span>七、Mysql的逻辑架构与存储引擎</span></a></h2><h3 id="_7-1-mysql的逻辑架构" tabindex="-1"><a class="header-anchor" href="#_7-1-mysql的逻辑架构"><span>7.1 MySQL的逻辑架构</span></a></h3><h3 id="_7-2-逻辑架构" tabindex="-1"><a class="header-anchor" href="#_7-2-逻辑架构"><span>7.2 逻辑架构</span></a></h3><p>MySQL最重要、最与众不同的特性是它的<strong>存储引擎架构</strong>，这种架构的设计将查询处理（Query Processing）及其他系统任务（Server Task）和数据的存储/提取相分离。这种处理和存储分离的设计可以在使用时根据性能、特性，以及其他需求来选择数据存储的方式。</p><p>MySQL中同一个数据库，不同的表格可以选择不同的存储引擎。</p><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716142105.png" alt="1554914228173" tabindex="0" loading="lazy"><figcaption>1554914228173</figcaption></figure><ul><li><p>MyISAM不支持事务、也不支持外键，其优势是访问的速度快，对事务完整性没有要求或者以SELECT、INSERT为主的应用。每个MyISAM在磁盘上存储成三个文件。第一个文件的名字以表的名字开始，扩展名指出文件类型。.frm文件存储表定义。数据文件的扩展名为.MYD (MYData)。索引文件的扩展名是.MYI (MYIndex)。</p></li><li><p>InnoDB存储引擎提供了具有提交、回滚和崩溃恢复能力的事务安全。但是对比MyISAM的存储引擎，InnoDB写的处理效率差一些，并且会占用更多的磁盘空间以保存数据和索引。InnoDB：所有的表都保存在同一个数据文件中，InnoDB表的大小只受限于操作系统文件的大小限制。Myisam只缓存索引，不缓存真实数据；Innodb不仅缓存索引还要缓存真实数据，对内存要求较高，而且内存大小对性能有决定性的影响。</p></li><li><p>MEMORY存储引擎使用存在于内存中的内容来创建表。MEMORY类型的表访问非常的快，因为它的数据是放在内存中的，并且默认使用HASH索引，但是一旦服务关闭，表中的数据就会丢失。主要用于那些内容变化不频繁的代码表或者作为统计操作的中间结果表。</p></li></ul><h3 id="_7-3-查看存储引擎" tabindex="-1"><a class="header-anchor" href="#_7-3-查看存储引擎"><span>7.3 查看存储引擎</span></a></h3><p>查看当前mysql数据库管理软件支持的存储引擎：</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">SHOW ENGINES;</span></span></code></pre></div><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716142052.png" alt="1554914289243" tabindex="0" loading="lazy"><figcaption>1554914289243</figcaption></figure><p>查看默认存储引擎和当前选择的存储引擎：</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">SHOW VARIABLES </span><span style="color:#C678DD;--shiki-dark:#C678DD;">LIKE</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;%storage_engine%&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span></code></pre></div><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716142056.png" alt="1554914334645" tabindex="0" loading="lazy"><figcaption>1554914334645</figcaption></figure><p>创建新表时如果不指定存储引擎，那么系统就会使用默认存储引擎，MySQL5.5之前的默认存储引擎是MyISAM，5.5之后改为了InnoDB。</p><p>查看已经创建的表格的存储引擎：</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">SHOW </span><span style="color:#C678DD;--shiki-dark:#C678DD;">CREATE</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> TABLE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 表名称;</span></span></code></pre></div><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716142056.png" alt="1554914377907" tabindex="0" loading="lazy"><figcaption>1554914377907</figcaption></figure>`,302)]))}const r=a(e,[["render",p],["__file","MySQL数据库.html.vue"]]),c=JSON.parse('{"path":"/posts/BigData/02_Hive%E6%80%BB%E7%BB%93/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93.html","title":"MySQL数据库","lang":"zh-CN","frontmatter":{"typora-root-url":"MySQL数据库.assets","description":"MySQL数据库 一、为什么要使用数据库 持久化(persistence)：把数据保存到可掉电式存储设备中以供之后使用。大多数情况下，特别是企业级应用，数据持久化意味着将内存中的数据保存到硬盘上加以”固化”，而持久化的实现过程大多通过各种关系数据库来完成。 持久化的主要作用是将内存中的数据存储在关系型数据库中，当然也可以存储在磁盘文件、XML数据文件中...","head":[["meta",{"property":"og:url","content":"https://mrjackc.github.io/posts/BigData/02_Hive%E6%80%BB%E7%BB%93/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93.html"}],["meta",{"property":"og:site_name","content":"mrjason’s Blog"}],["meta",{"property":"og:title","content":"MySQL数据库"}],["meta",{"property":"og:description","content":"MySQL数据库 一、为什么要使用数据库 持久化(persistence)：把数据保存到可掉电式存储设备中以供之后使用。大多数情况下，特别是企业级应用，数据持久化意味着将内存中的数据保存到硬盘上加以”固化”，而持久化的实现过程大多通过各种关系数据库来完成。 持久化的主要作用是将内存中的数据存储在关系型数据库中，当然也可以存储在磁盘文件、XML数据文件中..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716141737.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-28T01:58:08.000Z"}],["meta",{"property":"article:author","content":"MrJason"}],["meta",{"property":"article:modified_time","content":"2024-10-28T01:58:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MySQL数据库\\",\\"image\\":[\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716141737.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716142533.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716142707.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716141832.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716143510.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716141837.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716141842.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716141842.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716141844.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716141849.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716143740.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716143749.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716143757.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716143827.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716143923.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716141904.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716141906.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716143957.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716141909.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716141918.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716144047.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716141923.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716141925.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716141927.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716141932.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716141932.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716144036.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716144113.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716141938.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716144226.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716144230.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716144234.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716144312.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716143042.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716141956.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716141958.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716143030.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716143020.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716143007.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716142954.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716142009.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716142011.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716142014.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716142023.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716142023.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716142023.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716142030.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716142030.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716142030.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716142032.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716142852.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716142845.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716142105.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716142052.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716142056.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716142056.png\\"],\\"dateModified\\":\\"2024-10-28T01:58:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MrJason\\",\\"url\\":\\"https://mrjackc.github.io\\"}]}"]]},"headers":[{"level":2,"title":"一、为什么要使用数据库","slug":"一、为什么要使用数据库","link":"#一、为什么要使用数据库","children":[]},{"level":2,"title":"二、什么是数据库","slug":"二、什么是数据库","link":"#二、什么是数据库","children":[{"level":3,"title":"2.1 数据库的相关概念","slug":"_2-1-数据库的相关概念","link":"#_2-1-数据库的相关概念","children":[]},{"level":3,"title":"2.2 常见的数据库管理系统(DBMS)","slug":"_2-2-常见的数据库管理系统-dbms","link":"#_2-2-常见的数据库管理系统-dbms","children":[]},{"level":3,"title":"2.3 关系型数据库和非关系型数据库区别","slug":"_2-3-关系型数据库和非关系型数据库区别","link":"#_2-3-关系型数据库和非关系型数据库区别","children":[]},{"level":3,"title":"2.4 关系型数据库设计规则","slug":"_2-4-关系型数据库设计规则","link":"#_2-4-关系型数据库设计规则","children":[]},{"level":3,"title":"2.5 MySQL数据库介绍","slug":"_2-5-mysql数据库介绍","link":"#_2-5-mysql数据库介绍","children":[]}]},{"level":2,"title":"三、MySQL数据库的卸载与安装","slug":"三、mysql数据库的卸载与安装","link":"#三、mysql数据库的卸载与安装","children":[{"level":3,"title":"3.1 MySQL的卸载","slug":"_3-1-mysql的卸载","link":"#_3-1-mysql的卸载","children":[]},{"level":3,"title":"3.2 MySQL的安装","slug":"_3-2-mysql的安装","link":"#_3-2-mysql的安装","children":[]},{"level":3,"title":"3.3 MySQL的配置","slug":"_3-3-mysql的配置","link":"#_3-3-mysql的配置","children":[]}]},{"level":2,"title":"四、MySQL的使用","slug":"四、mysql的使用","link":"#四、mysql的使用","children":[{"level":3,"title":"4.1 启动和停止服务","slug":"_4-1-启动和停止服务","link":"#_4-1-启动和停止服务","children":[]},{"level":3,"title":"4.2 客户端登录","slug":"_4-2-客户端登录","link":"#_4-2-客户端登录","children":[]}]},{"level":2,"title":"五、常见SQL问题示例","slug":"五、常见sql问题示例","link":"#五、常见sql问题示例","children":[{"level":3,"title":"5.1 示例小demo","slug":"_5-1-示例小demo","link":"#_5-1-示例小demo","children":[]},{"level":3,"title":"5.2 错误ERROR ：没有选择数据库就操作表格和数据","slug":"_5-2-错误error-没有选择数据库就操作表格和数据","link":"#_5-2-错误error-没有选择数据库就操作表格和数据","children":[]},{"level":3,"title":"5.3 在命令行出现乱码问题","slug":"_5-3-在命令行出现乱码问题","link":"#_5-3-在命令行出现乱码问题","children":[]},{"level":3,"title":"5.4 退出当前错误语句","slug":"_5-4-退出当前错误语句","link":"#_5-4-退出当前错误语句","children":[]},{"level":3,"title":"5.5 如何破解数据库的密码","slug":"_5-5-如何破解数据库的密码","link":"#_5-5-如何破解数据库的密码","children":[]},{"level":3,"title":"5.6 命令行客户端的字符集问题","slug":"_5-6-命令行客户端的字符集问题","link":"#_5-6-命令行客户端的字符集问题","children":[]},{"level":3,"title":"5.7 查看字符集和校对规则（了解，参考）","slug":"_5-7-查看字符集和校对规则-了解-参考","link":"#_5-7-查看字符集和校对规则-了解-参考","children":[]}]},{"level":2,"title":"六、MySQL的数据类型","slug":"六、mysql的数据类型","link":"#六、mysql的数据类型","children":[{"level":3,"title":"6.1 整数（xxxint）","slug":"_6-1-整数-xxxint","link":"#_6-1-整数-xxxint","children":[]},{"level":3,"title":"6.2 浮点型","slug":"_6-2-浮点型","link":"#_6-2-浮点型","children":[]},{"level":3,"title":"6.3 定点型","slug":"_6-3-定点型","link":"#_6-3-定点型","children":[]},{"level":3,"title":"6.4 日期时间类型","slug":"_6-4-日期时间类型","link":"#_6-4-日期时间类型","children":[]},{"level":3,"title":"6.5 字符串型","slug":"_6-5-字符串型","link":"#_6-5-字符串型","children":[]},{"level":3,"title":"6.6 位类型（了解）","slug":"_6-6-位类型-了解","link":"#_6-6-位类型-了解","children":[]},{"level":3,"title":"6.7 二进制值类型（了解）","slug":"_6-7-二进制值类型-了解","link":"#_6-7-二进制值类型-了解","children":[]},{"level":3,"title":"6.8 枚举（ENUM）（了解）","slug":"_6-8-枚举-enum-了解","link":"#_6-8-枚举-enum-了解","children":[]},{"level":3,"title":"6.9 集合（SET）（了解）","slug":"_6-9-集合-set-了解","link":"#_6-9-集合-set-了解","children":[]},{"level":3,"title":"6.10 特殊的NULL值","slug":"_6-10-特殊的null值","link":"#_6-10-特殊的null值","children":[]}]},{"level":2,"title":"七、Mysql的逻辑架构与存储引擎","slug":"七、mysql的逻辑架构与存储引擎","link":"#七、mysql的逻辑架构与存储引擎","children":[{"level":3,"title":"7.1 MySQL的逻辑架构","slug":"_7-1-mysql的逻辑架构","link":"#_7-1-mysql的逻辑架构","children":[]},{"level":3,"title":"7.2 逻辑架构","slug":"_7-2-逻辑架构","link":"#_7-2-逻辑架构","children":[]},{"level":3,"title":"7.3 查看存储引擎","slug":"_7-3-查看存储引擎","link":"#_7-3-查看存储引擎","children":[]}]}],"git":{"createdTime":1730080688000,"updatedTime":1730080688000,"contributors":[{"name":"MrJason","email":"845886914@qq.com","commits":1}]},"readingTime":{"minutes":30.09,"words":9026},"filePathRelative":"posts/BigData/02_Hive总结/MySQL数据库.md","localizedDate":"2024年10月28日","excerpt":"\\n<hr>\\n<h2>一、为什么要使用数据库</h2>\\n<ul>\\n<li>持久化(persistence)：<strong>把数据保存到可掉电式存储设备中以供之后使用</strong>。大多数情况下，特别是企业级应用，<strong>数据持久化意味着将内存中的数据保存到硬盘上加以”固化”</strong>，而持久化的实现过程大多通过各种关系数据库来完成。</li>\\n<li>持久化的主要作用是<strong>将内存中的数据存储在关系型数据库中</strong>，当然也可以存储在磁盘文件、XML数据文件中。</li>\\n</ul>\\n<figure><img src=\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716141737.png\\" alt=\\"1554944967857\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>1554944967857</figcaption></figure>","autoDesc":true}');export{r as comp,c as data};
