import{_ as a,c as e,a as n,o as l}from"./app-fWubcX7c.js";const o={};function i(r,s){return l(),e("div",null,s[0]||(s[0]=[n(`<h1 id="mysql-慢日志" tabindex="-1"><a class="header-anchor" href="#mysql-慢日志"><span>MySQL - 慢日志</span></a></h1><h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介"><span>1. 简介</span></a></h2><p>慢日志全称为慢查询日志（Slow Query Log），主要用来记录在 MySQL 中执行时间超过指定时间的 SQL 语句。通过慢查询日志，可以查找出哪些语句的执行效率低，以便进行优化。</p><blockquote><p>开启慢查询日志是有代价的（跟 bin log、optimizer-trace 一样），所以它默认是关闭的</p></blockquote><h3 id="_1-1-获取慢日志开启状态" tabindex="-1"><a class="header-anchor" href="#_1-1-获取慢日志开启状态"><span>1.1 获取慢日志开启状态</span></a></h3><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>show variables like &#39;slow_query%&#39;;</span></span></code></pre></div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403130938981.png" alt="image-20230515094425495" tabindex="0" loading="lazy"><figcaption>image-20230515094425495</figcaption></figure><h3 id="_1-2-查询慢日志超时配置" tabindex="-1"><a class="header-anchor" href="#_1-2-查询慢日志超时配置"><span>1.2 查询慢日志超时配置</span></a></h3><p>SQL 才记录到慢日志，默认是 10 秒</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>show variables like &#39;%long_query%&#39;;</span></span></code></pre></div><h2 id="_2-慢日志配置" tabindex="-1"><a class="header-anchor" href="#_2-慢日志配置"><span>2. 慢日志配置</span></a></h2><h3 id="_2-1-修改方案1-动态修改-重启后失效" tabindex="-1"><a class="header-anchor" href="#_2-1-修改方案1-动态修改-重启后失效"><span>2.1 修改方案1：动态修改（重启后失效）</span></a></h3><p>动态修改参数（重启后失效）</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>set @@global.slow_query_log=1; -- 1 开启，0 关闭，重启后失效 </span></span>
<span class="line"><span>set @@global.long_query_time=3; -- mysql 默认的慢查询时间是 10 秒，另开一个窗口后才会查到最新值 </span></span>
<span class="line"><span></span></span>
<span class="line"><span>show variables like &#39;%long_query%&#39;; </span></span>
<span class="line"><span>show variables like &#39;%slow_query%&#39;;</span></span></code></pre></div><h3 id="_2-2-修改-配置文件my-cnf-重启不失效" tabindex="-1"><a class="header-anchor" href="#_2-2-修改-配置文件my-cnf-重启不失效"><span>2.2 修改 配置文件my.cnf（重启不失效）</span></a></h3><p>默认情况下，MySQL 并没有开启慢日志，可以通过修改 slow_query_log 参数来打开慢日志。与慢日志相关的参数介绍如下：</p><ul><li><strong>slow_query_log</strong>：是否启用慢查询日志，默认为0，可设置为0、1，1表示开启。</li><li><strong>slow_query_log_file</strong>：指定慢查询日志位置及名称，默认值为host_name-slow.log，可指定绝对路径。</li><li><strong>long_query_time</strong>：慢查询执行时间阈值，超过此时间会记录，默认为10，单位为s。</li><li><strong>log_output</strong>：慢查询日志输出目标，默认为file，即输出到文件。</li><li><strong>log_timestamps</strong>：主要是控制 error log、slow log、genera log 日志文件中的显示时区，默认使用UTC时区，建议改为 SYSTEM 系统时区。</li><li><strong>log_queries_not_using_indexes</strong>：是否记录所有未使用索引的查询语句，默认为off。</li><li><strong>min_examined_row_limit</strong>：对于查询扫描行数小于此参数的SQL，将不会记录到慢查询日志中，默认为0。</li><li><strong>log_slow_admin_statements</strong>：慢速管理语句是否写入慢日志中，管理语句包含 alter table、create index 等，默认为 off 即不写入。</li></ul><h4 id="_2-2-1-常用配置" tabindex="-1"><a class="header-anchor" href="#_2-2-1-常用配置"><span>2.2.1 常用配置</span></a></h4><p>在配置文件中，我们可以设置以下几个慢日志相关参数：</p><div class="language-text" data-ext="text" data-title="text"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span># 慢查询日志相关配置，可根据实际情况修改</span></span>
<span class="line"><span>vim /etc/my.cnf </span></span>
<span class="line"><span>[mysqld] </span></span>
<span class="line"><span>slow_query_log = 1</span></span>
<span class="line"><span>slow_query_log_file = /var/log/mysql/mysql-slow.log</span></span>
<span class="line"><span>long_query_time = 2</span></span>
<span class="line"><span>log_timestamps = SYSTEM</span></span>
<span class="line"><span>log_output = FILE</span></span></code></pre></div><h2 id="_3-具体案例" tabindex="-1"><a class="header-anchor" href="#_3-具体案例"><span>3. 具体案例</span></a></h2><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"># 该条SQL执行时间超过阈值</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"># </span><span style="color:#C678DD;--shiki-dark:#C678DD;">Time</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">2023</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">-</span><span style="color:#D19A66;--shiki-dark:#D19A66;">05</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">-15T01:</span><span style="color:#D19A66;--shiki-dark:#D19A66;">30</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;">09</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.796188Z</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"># User</span><span style="color:#E06C75;--shiki-dark:#E06C75;">@Host</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#C678DD;--shiki-dark:#C678DD;">root</span><span style="color:#E06C75;--shiki-dark:#E06C75;">[root]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> @  </span><span style="color:#E06C75;--shiki-dark:#E06C75;">[117.30.56.143]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  Id:   </span><span style="color:#D19A66;--shiki-dark:#D19A66;">205</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"># Query_time: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">922847</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  Lock_time: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">000003</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> Rows_sent: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">10</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  Rows_examined: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">6009</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">SET</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> timestamp</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1684114206</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* ApplicationName=IntelliJ IDEA 2022.3.2 */</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> SELECT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> * </span><span style="color:#C678DD;--shiki-dark:#C678DD;">FROM</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> test_table t</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">                  left join</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> test_table tt </span><span style="color:#C678DD;--shiki-dark:#C678DD;">on</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">         WHERE</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> t</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">name</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> LIKE</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;%test%&#39;</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> AND</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> t</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">id</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> &gt;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> ORDER BY</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> t</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">id</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> DESC</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> LIMIT</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 10</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span></code></pre></div><p>如果启用了慢速查询日志，并且选择了 FILE 作为输出目标，则写入日志的每个语句都以 # 字符开头。对于每一组慢SQL，第一行记录的是该条 SQL 执行的时刻（如果 log_timestamps 参数为 UTC ，则改时间会显示 UTC 时区时间），第二行记录的是执行该语句的用户和 IP 以及链接 id ，第三行的几个字段解释如下：</p><ul><li><strong>Query_time</strong>: duration 语句执行时间，以秒为单位。</li><li><strong>Lock_time</strong>: duration 获取锁的时间(以秒为单位)。</li><li><strong>Rows_sent</strong>: N 发送给 Client 端的行数。</li><li><strong>Rows_examined</strong>: N 服务器层检查的行数(不计算存储引擎内部的任何处理)。</li></ul><p>下面两行分别是此语句执行时候的时间戳和具体慢 SQL 。</p><blockquote><p>在实际环境下，不建议开启 log_queries_not_using_indexes 参数，此参数打开后可能导致慢日志迅速增长。对于慢日志的筛选与分析，我们可以借助 mysqldumpslow、pt-query-digest 等工具来分析。对于慢日志文件，要定期进行归档处理，比如可以暂时关闭慢日志，然后将旧文件重命名，之后再开启慢日志，这样就会写入新的日志文件中，有效减小日志体积。</p></blockquote><h2 id="_4-mysqldumpslow" tabindex="-1"><a class="header-anchor" href="#_4-mysqldumpslow"><span>4. <strong>mysqldumpslow</strong></span></a></h2><blockquote><p>mysql8.0 没有找到mysqldumpslow，还未实际操作</p></blockquote><p><a href="https://link.juejin.cn?target=https%3A%2F%2Fdev.mysql.com%2Fdoc%2Frefman%2F5.7%2Fen%2Fmysqldumpslow.html" target="_blank" rel="noopener noreferrer">官方分析</a></p><p>MySQL 提供了 mysqldumpslow 的工具，在 MySQL 的 bin 目录下。</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">mysqldumpslow </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--help</span></span></code></pre></div><p>例如：查询用时最多的 10 条慢 SQL：</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">mysqldumpslow -s t -t </span><span style="color:#D19A66;--shiki-dark:#D19A66;">10</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> -g </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;select&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> /var/lib/mysql/localhost-</span><span style="color:#D19A66;--shiki-dark:#D19A66;">slow</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">log</span></span></code></pre></div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403130938030.png" alt="image-20230515095146035" tabindex="0" loading="lazy"><figcaption>image-20230515095146035</figcaption></figure><p>Count 代表这个 SQL 执行了多少次；</p><p>Time 代表执行的时间，括号里面是累计时间；</p><p>Lock 表示锁定的时间，括号是累计；</p><p>Rows 表示返回的记录数，括号是累计。</p><p>除了慢查询日志之外，还有一个 SHOW PROFILE 工具可以使用</p><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章"><span>参考文章</span></a></h2><p><a href="https://juejin.cn/post/7092722546306449438" target="_blank" rel="noopener noreferrer">Mysql-如何进行慢SQL查询</a></p><p><a href="https://zhuanlan.zhihu.com/p/373155073" target="_blank" rel="noopener noreferrer">MySQL慢日志全解析！</a></p><p><a href="http://www.datamaker.online/" target="_blank" rel="noopener noreferrer">mysql测试数据生成</a></p>`,43)]))}const p=a(o,[["render",i],["__file","mysql-x-slowlog.html.vue"]]),c=JSON.parse(`{"path":"/posts/Database/MySQL/mysql-x-slowlog.html","title":"MySQL - 慢日志","lang":"zh-CN","frontmatter":{"aliases":"MySQL - 慢日志","tags":null,"cssclass":null,"source":null,"order":920,"category":["数据库","Mysql"],"created":"2024-02-22 10:49","updated":"2024-03-13 09:38","description":"MySQL - 慢日志 1. 简介 慢日志全称为慢查询日志（Slow Query Log），主要用来记录在 MySQL 中执行时间超过指定时间的 SQL 语句。通过慢查询日志，可以查找出哪些语句的执行效率低，以便进行优化。 开启慢查询日志是有代价的（跟 bin log、optimizer-trace 一样），所以它默认是关闭的 1.1 获取慢日志开启状...","watermark":true,"head":[["meta",{"property":"og:url","content":"https://springg.us.kg/posts/Database/MySQL/mysql-x-slowlog.html"}],["meta",{"property":"og:site_name","content":"mrjason’s Blog"}],["meta",{"property":"og:title","content":"MySQL - 慢日志"}],["meta",{"property":"og:description","content":"MySQL - 慢日志 1. 简介 慢日志全称为慢查询日志（Slow Query Log），主要用来记录在 MySQL 中执行时间超过指定时间的 SQL 语句。通过慢查询日志，可以查找出哪些语句的执行效率低，以便进行优化。 开启慢查询日志是有代价的（跟 bin log、optimizer-trace 一样），所以它默认是关闭的 1.1 获取慢日志开启状..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403130938981.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-21T07:03:09.000Z"}],["meta",{"property":"article:author","content":"MrJason"}],["meta",{"property":"article:modified_time","content":"2024-10-21T07:03:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MySQL - 慢日志\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403130938981.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403130938030.png\\"],\\"dateModified\\":\\"2024-10-21T07:03:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MrJason\\",\\"url\\":\\"https://springg.us.kg\\"}]}"]]},"headers":[{"level":2,"title":"1. 简介","slug":"_1-简介","link":"#_1-简介","children":[{"level":3,"title":"1.1 获取慢日志开启状态","slug":"_1-1-获取慢日志开启状态","link":"#_1-1-获取慢日志开启状态","children":[]},{"level":3,"title":"1.2 查询慢日志超时配置","slug":"_1-2-查询慢日志超时配置","link":"#_1-2-查询慢日志超时配置","children":[]}]},{"level":2,"title":"2. 慢日志配置","slug":"_2-慢日志配置","link":"#_2-慢日志配置","children":[{"level":3,"title":"2.1 修改方案1：动态修改（重启后失效）","slug":"_2-1-修改方案1-动态修改-重启后失效","link":"#_2-1-修改方案1-动态修改-重启后失效","children":[]},{"level":3,"title":"2.2 修改 配置文件my.cnf（重启不失效）","slug":"_2-2-修改-配置文件my-cnf-重启不失效","link":"#_2-2-修改-配置文件my-cnf-重启不失效","children":[]}]},{"level":2,"title":"3. 具体案例","slug":"_3-具体案例","link":"#_3-具体案例","children":[]},{"level":2,"title":"4. mysqldumpslow","slug":"_4-mysqldumpslow","link":"#_4-mysqldumpslow","children":[]},{"level":2,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}],"git":{"createdTime":1729494189000,"updatedTime":1729494189000,"contributors":[{"name":"MrJason","email":"845886914@qq.com","commits":1}]},"readingTime":{"minutes":3.9,"words":1170},"filePathRelative":"posts/Database/MySQL/mysql-x-slowlog.md","localizedDate":"2024年10月21日","excerpt":"\\n<h2>1. 简介</h2>\\n<p>慢日志全称为慢查询日志（Slow Query Log），主要用来记录在 MySQL 中执行时间超过指定时间的 SQL 语句。通过慢查询日志，可以查找出哪些语句的执行效率低，以便进行优化。</p>\\n<blockquote>\\n<p>开启慢查询日志是有代价的（跟 bin log、optimizer-trace 一样），所以它默认是关闭的</p>\\n</blockquote>\\n<h3>1.1 获取慢日志开启状态</h3>\\n<div class=\\"language-\\" data-ext=\\"\\" data-title=\\"\\"><pre class=\\"shiki shiki-themes one-dark-pro one-dark-pro vp-code\\" style=\\"background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span>show variables like 'slow_query%';</span></span></code></pre>\\n</div>","autoDesc":true}`);export{p as comp,c as data};
