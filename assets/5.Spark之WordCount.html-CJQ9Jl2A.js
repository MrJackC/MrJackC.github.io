import{_ as a,c as n,a as l,o as B}from"./app-BfIe-EZg.js";const i={};function p(r,s){return B(),n("div",null,s[0]||(s[0]=[l(`<h1 id="spark-之-wordcount" tabindex="-1"><a class="header-anchor" href="#spark-之-wordcount"><span>Spark 之 WordCount</span></a></h1><hr><h2 id="一、14种wordcount实现方式" tabindex="-1"><a class="header-anchor" href="#一、14种wordcount实现方式"><span>一、14种wordcount实现方式</span></a></h2><div class="language-scala" data-ext="scala" data-title="scala"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//数据准备及环境连接：</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> sparkConf</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">SparkConf</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> SparkConf</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">().setMaster(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;local[*]&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">).setAppName(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;map&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> sc</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> SparkContext</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(sparkConf)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> rdd1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">RDD</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">] </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> sc.makeRDD(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;hadoop scala&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;spark spark hello&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;scala&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">), </span><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span></code></pre></div><h3 id="_1-1-方法1-groupby-map" tabindex="-1"><a class="header-anchor" href="#_1-1-方法1-groupby-map"><span>1.1 方法1：groupBy + map</span></a></h3><div class="language-scala" data-ext="scala" data-title="scala"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  //方法1：groupBy + map</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    rdd1.flatMap(_.split(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot; &quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .groupBy(word </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> word)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .map {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        case</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (word, iter) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">          (word, iter.size)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .collect()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .foreach(println)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    println(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;=======如上方法1========&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span></code></pre></div><h3 id="_1-2-方法2-reducebykey" tabindex="-1"><a class="header-anchor" href="#_1-2-方法2-reducebykey"><span>1.2 方法2：reduceByKey</span></a></h3><div class="language-scala" data-ext="scala" data-title="scala"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    //方法2：reduceByKey</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    rdd1.flatMap(_.split(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot; &quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .map((_, </span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .reduceByKey(_ </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> _)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .collect()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .foreach(println)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    println(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;=======如上方法2========&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span></code></pre></div><h3 id="_1-3-方法3-aggregatebykey" tabindex="-1"><a class="header-anchor" href="#_1-3-方法3-aggregatebykey"><span>1.3 方法3：aggregateByKey</span></a></h3><div class="language-scala" data-ext="scala" data-title="scala"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> //方法3：aggregateByKey</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    rdd1.flatMap(_.split(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot; &quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .map((_, </span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .aggregateByKey(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)(_ </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> _, _ </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> _)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .collect()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .foreach(println)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    println(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;=======如上方法3========&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span></code></pre></div><h3 id="_1-4-方法4-foldbykey" tabindex="-1"><a class="header-anchor" href="#_1-4-方法4-foldbykey"><span>1.4 方法4：foldByKey</span></a></h3><div class="language-scala" data-ext="scala" data-title="scala"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> //方法4：foldByKey</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    rdd1.flatMap(_.split(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot; &quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .map((_, </span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .foldByKey(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)(_ </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> _)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .collect()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .foreach(println)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    println(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;=======如上方法4========&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span></code></pre></div><h3 id="_1-5-方法5-combinebykey" tabindex="-1"><a class="header-anchor" href="#_1-5-方法5-combinebykey"><span>1.5 方法5：combineBykey</span></a></h3><div class="language-scala" data-ext="scala" data-title="scala"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    //方法5：combineBykey</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    rdd1.flatMap(_.split(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot; &quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .map((_, </span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .combineByKey(v </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> v, (</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">v1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">v2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> v1 </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> v2, (</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">v1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">v2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> v1 </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> v2)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .collect()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .foreach(println)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    println(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;=======如上方法5========&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span></code></pre></div><h3 id="_1-6-方法6-groupbykey" tabindex="-1"><a class="header-anchor" href="#_1-6-方法6-groupbykey"><span>1.6 方法6：groupByKey</span></a></h3><div class="language-scala" data-ext="scala" data-title="scala"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    //方法6：groupByKey</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    rdd1.flatMap(_.split(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot; &quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .map((_, </span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .groupByKey()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .map {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        case</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (word, iter) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (word, iter.size)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .collect()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .foreach(println)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    println(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;=======如上方法6========&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span></code></pre></div><h3 id="_1-7-方法7-countbykey" tabindex="-1"><a class="header-anchor" href="#_1-7-方法7-countbykey"><span>1.7 方法7：countByKey</span></a></h3><div class="language-scala" data-ext="scala" data-title="scala"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    //方法7：countByKey</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    rdd1.flatMap(_.split(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot; &quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .map((_, </span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .countByKey().foreach(println)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    println(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;=======如上方法7========&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span></code></pre></div><h3 id="_1-8-方法8-countbyvalue" tabindex="-1"><a class="header-anchor" href="#_1-8-方法8-countbyvalue"><span>1.8 方法8：countByValue</span></a></h3><div class="language-scala" data-ext="scala" data-title="scala"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    //方法8：countByValue</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    rdd1.flatMap(_.split(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot; &quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .map((</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, _))</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .countByValue().map {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">      case</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ((num, word), count) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (word, count)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .foreach(println)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    println(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;=======如上方法8========&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span></code></pre></div><h3 id="_1-9-方法9-cogroup" tabindex="-1"><a class="header-anchor" href="#_1-9-方法9-cogroup"><span>1.9 方法9：cogroup</span></a></h3><div class="language-scala" data-ext="scala" data-title="scala"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    //方法9:cogroup</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> rdd2</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> sc.makeRDD(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">((</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;a&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#D19A66;--shiki-dark:#D19A66;">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)))</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    rdd1.flatMap(_.split(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot; &quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .map((_, </span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .cogroup(rdd2).map {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">      case</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (word, (iter1, iter2)) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        (word, iter1.size </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> iter2.size)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .filter(tuple </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> tuple._1 </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">!=</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;a&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .foreach(println)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    println(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;=======如上方法9========&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span></code></pre></div><h3 id="_1-10-方法10-mapvalues" tabindex="-1"><a class="header-anchor" href="#_1-10-方法10-mapvalues"><span>1.10 方法10：mapValues</span></a></h3><div class="language-scala" data-ext="scala" data-title="scala"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    //方法10：mapValues</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    rdd1.flatMap(_.split(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot; &quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .map((_, </span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .groupBy(word </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> word)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .mapValues(_.size)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .map {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        case</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ((word, num), count) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (word, count)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .collect()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .foreach(println)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    println(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;=======如上方法10========&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span></code></pre></div><h3 id="_1-11-方法11-reduce-foldleft" tabindex="-1"><a class="header-anchor" href="#_1-11-方法11-reduce-foldleft"><span>1.11 方法11：reduce + foldLeft</span></a></h3><div class="language-scala line-numbers-mode" data-ext="scala" data-title="scala"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    //方法11：reduce + foldLeft</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> wordcount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">] </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> rdd1.flatMap(_.split(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot; &quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .map(word </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=&gt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">]((word, </span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)))</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .reduce(</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        (map1, map2) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">          map1.foldLeft(map2)((map, kv) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">            val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> word</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> kv._1</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">            val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> count</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Int</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> kv._2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            map.updated(word, map.getOrElse(word, </span><span style="color:#D19A66;--shiki-dark:#D19A66;">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> count)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">          })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      )</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   wordcount.foreach(println)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   println(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;=======如上方法11========&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-12-方法12-aggregate" tabindex="-1"><a class="header-anchor" href="#_1-12-方法12-aggregate"><span>1.12 方法12：aggregate</span></a></h3><div class="language-scala line-numbers-mode" data-ext="scala" data-title="scala"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 12. aggregate</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    rdd.flatMap(_.split(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot; &quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">       .map((_,</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      .aggregate(mutable.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">]())((map,kv) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">      val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> word</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> kv._1</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">      val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> num</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Int</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> kv._2</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      map(word)</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">map.getOrElse(word,</span><span style="color:#D19A66;--shiki-dark:#D19A66;">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> num</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      map</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    },(map1,map2)</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      map1.foldLeft(map2){</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        case</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (map,kv)</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">          map(kv._1)</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">map.getOrElse(kv._1,</span><span style="color:#D19A66;--shiki-dark:#D19A66;">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> kv._2</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">          map</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }).foreach(println)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">     println(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot; ======== 方法12 ===========&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-13-方法13-fold" tabindex="-1"><a class="header-anchor" href="#_1-13-方法13-fold"><span>1.13 方法13：fold</span></a></h3><div class="language-scala" data-ext="scala" data-title="scala"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 13. fold</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    rdd.flatMap(_.split(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot; &quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">       .map(word </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> mutable.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">]((word,</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)))</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">       .fold(mutable.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">]())((map1,map2)</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">         map1.foldLeft(map2){</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">           case</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (map,kv)</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">             map(kv._1)</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">map.getOrElse(kv._1,</span><span style="color:#D19A66;--shiki-dark:#D19A66;">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> kv._2</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">             map</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">           }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">         }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">       }).foreach(println)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">     println(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot; ======== 方法13 ===========&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span></code></pre></div><h3 id="_1-14-方法14-累加器" tabindex="-1"><a class="header-anchor" href="#_1-14-方法14-累加器"><span>1.14 方法14 ：累加器</span></a></h3>`,31)]))}const e=a(i,[["render",p],["__file","5.Spark之WordCount.html.vue"]]),k=JSON.parse('{"path":"/posts/BigData/08_Spark/5.Spark%E4%B9%8BWordCount.html","title":"Spark 之 WordCount","lang":"zh-CN","frontmatter":{"description":"Spark 之 WordCount 一、14种wordcount实现方式 1.1 方法1：groupBy + map 1.2 方法2：reduceByKey 1.3 方法3：aggregateByKey 1.4 方法4：foldByKey 1.5 方法5：combineBykey 1.6 方法6：groupByKey 1.7 方法7：countByKe...","watermark":true,"head":[["meta",{"property":"og:url","content":"https://springg.us.kg/posts/BigData/08_Spark/5.Spark%E4%B9%8BWordCount.html"}],["meta",{"property":"og:site_name","content":"mrjason’s Blog"}],["meta",{"property":"og:title","content":"Spark 之 WordCount"}],["meta",{"property":"og:description","content":"Spark 之 WordCount 一、14种wordcount实现方式 1.1 方法1：groupBy + map 1.2 方法2：reduceByKey 1.3 方法3：aggregateByKey 1.4 方法4：foldByKey 1.5 方法5：combineBykey 1.6 方法6：groupByKey 1.7 方法7：countByKe..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-28T01:58:08.000Z"}],["meta",{"property":"article:author","content":"MrJason"}],["meta",{"property":"article:modified_time","content":"2024-10-28T01:58:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spark 之 WordCount\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-28T01:58:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MrJason\\",\\"url\\":\\"https://springg.us.kg\\"}]}"]]},"headers":[{"level":2,"title":"一、14种wordcount实现方式","slug":"一、14种wordcount实现方式","link":"#一、14种wordcount实现方式","children":[{"level":3,"title":"1.1 方法1：groupBy + map","slug":"_1-1-方法1-groupby-map","link":"#_1-1-方法1-groupby-map","children":[]},{"level":3,"title":"1.2 方法2：reduceByKey","slug":"_1-2-方法2-reducebykey","link":"#_1-2-方法2-reducebykey","children":[]},{"level":3,"title":"1.3 方法3：aggregateByKey","slug":"_1-3-方法3-aggregatebykey","link":"#_1-3-方法3-aggregatebykey","children":[]},{"level":3,"title":"1.4 方法4：foldByKey","slug":"_1-4-方法4-foldbykey","link":"#_1-4-方法4-foldbykey","children":[]},{"level":3,"title":"1.5 方法5：combineBykey","slug":"_1-5-方法5-combinebykey","link":"#_1-5-方法5-combinebykey","children":[]},{"level":3,"title":"1.6 方法6：groupByKey","slug":"_1-6-方法6-groupbykey","link":"#_1-6-方法6-groupbykey","children":[]},{"level":3,"title":"1.7 方法7：countByKey","slug":"_1-7-方法7-countbykey","link":"#_1-7-方法7-countbykey","children":[]},{"level":3,"title":"1.8 方法8：countByValue","slug":"_1-8-方法8-countbyvalue","link":"#_1-8-方法8-countbyvalue","children":[]},{"level":3,"title":"1.9 方法9：cogroup","slug":"_1-9-方法9-cogroup","link":"#_1-9-方法9-cogroup","children":[]},{"level":3,"title":"1.10 方法10：mapValues","slug":"_1-10-方法10-mapvalues","link":"#_1-10-方法10-mapvalues","children":[]},{"level":3,"title":"1.11 方法11：reduce + foldLeft","slug":"_1-11-方法11-reduce-foldleft","link":"#_1-11-方法11-reduce-foldleft","children":[]},{"level":3,"title":"1.12 方法12：aggregate","slug":"_1-12-方法12-aggregate","link":"#_1-12-方法12-aggregate","children":[]},{"level":3,"title":"1.13 方法13：fold","slug":"_1-13-方法13-fold","link":"#_1-13-方法13-fold","children":[]},{"level":3,"title":"1.14 方法14 ：累加器","slug":"_1-14-方法14-累加器","link":"#_1-14-方法14-累加器","children":[]}]}],"git":{"createdTime":1730080688000,"updatedTime":1730080688000,"contributors":[{"name":"MrJason","email":"845886914@qq.com","commits":1}]},"readingTime":{"minutes":1.8,"words":540},"filePathRelative":"posts/BigData/08_Spark/5.Spark之WordCount.md","localizedDate":"2024年10月28日","excerpt":"\\n<hr>\\n<h2>一、14种wordcount实现方式</h2>\\n<div class=\\"language-scala\\" data-ext=\\"scala\\" data-title=\\"scala\\"><pre class=\\"shiki shiki-themes one-dark-pro one-dark-pro vp-code\\" style=\\"background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">//数据准备及环境连接：</span></span>\\n<span class=\\"line\\"><span style=\\"color:#C678DD;--shiki-dark:#C678DD\\">    val</span><span style=\\"color:#E06C75;--shiki-dark:#E06C75\\"> sparkConf</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">: </span><span style=\\"color:#E5C07B;--shiki-dark:#E5C07B\\">SparkConf</span><span style=\\"color:#56B6C2;--shiki-dark:#56B6C2\\"> =</span><span style=\\"color:#C678DD;--shiki-dark:#C678DD\\"> new</span><span style=\\"color:#E5C07B;--shiki-dark:#E5C07B\\"> SparkConf</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">().setMaster(</span><span style=\\"color:#98C379;--shiki-dark:#98C379\\">\\"local[*]\\"</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">).setAppName(</span><span style=\\"color:#98C379;--shiki-dark:#98C379\\">\\"map\\"</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"color:#C678DD;--shiki-dark:#C678DD\\">    val</span><span style=\\"color:#E06C75;--shiki-dark:#E06C75\\"> sc</span><span style=\\"color:#56B6C2;--shiki-dark:#56B6C2\\"> =</span><span style=\\"color:#C678DD;--shiki-dark:#C678DD\\"> new</span><span style=\\"color:#E5C07B;--shiki-dark:#E5C07B\\"> SparkContext</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">(sparkConf)</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#C678DD;--shiki-dark:#C678DD\\">    val</span><span style=\\"color:#E06C75;--shiki-dark:#E06C75\\"> rdd1</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">: </span><span style=\\"color:#E5C07B;--shiki-dark:#E5C07B\\">RDD</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">[</span><span style=\\"color:#E5C07B;--shiki-dark:#E5C07B\\">String</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">] </span><span style=\\"color:#56B6C2;--shiki-dark:#56B6C2\\">=</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\"> sc.makeRDD(</span><span style=\\"color:#E5C07B;--shiki-dark:#E5C07B\\">List</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">(</span><span style=\\"color:#98C379;--shiki-dark:#98C379\\">\\"hadoop scala\\"</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">, </span><span style=\\"color:#98C379;--shiki-dark:#98C379\\">\\"spark spark hello\\"</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">, </span><span style=\\"color:#98C379;--shiki-dark:#98C379\\">\\"scala\\"</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">), </span><span style=\\"color:#D19A66;--shiki-dark:#D19A66\\">2</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">)</span></span></code></pre>\\n</div>","autoDesc":true}');export{e as comp,k as data};
