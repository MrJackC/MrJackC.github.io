import{_ as a,c as n,a as i,o as l}from"./app-4x2aIoqi.js";const e={};function r(p,s){return l(),n("div",null,s[0]||(s[0]=[i(`<h1 id="hive-总结" tabindex="-1"><a class="header-anchor" href="#hive-总结"><span>Hive 总结</span></a></h1><hr><p>总结人：XXX 2020.04.29</p><h2 id="_0-补充" tabindex="-1"><a class="header-anchor" href="#_0-补充"><span>0.补充</span></a></h2><h3 id="_0-1-什么是hive" tabindex="-1"><a class="header-anchor" href="#_0-1-什么是hive"><span>0.1 什么是hive</span></a></h3><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. Hive：由Facebook开源用于解决</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;海量结构化日志&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">的数据统计</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;工具&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. Hive是基于Hadoop的一个</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;数据仓库工具&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">，可以将结构化的数据文件</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;映射&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">为一张表，并提供类SQL查询功能。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;本质&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：将HQL转化成MapReduce程序</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;原理介绍&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   	（</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）Hive处理的数据存储在HDFS</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    （</span><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）Hive分析数据底层的实现是MapReduce</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    （</span><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）执行程序运行在Yarn上</span></span></code></pre></div><h3 id="_0-2-优缺点" tabindex="-1"><a class="header-anchor" href="#_0-2-优缺点"><span>0.2 优缺点</span></a></h3><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 1. 优点：</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">   1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 操作接口采用类SQL语法，提供快速开发的能力（简单、容易上手）。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">   2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 避免了去写MapReduce，减少开发人员的学习成本。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">   3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. Hive的执行延迟比较高，因此Hive常用于数据分析，对实时性要求不高的场合。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">   4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. Hive优势在于处理大数据，对于处理小数据没有优势，因为Hive的执行延迟比较高。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">   5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. Hive支持用户自定义函数，用户可以根据自己的需求来实现自己的函数。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 2. 缺点</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">   1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. Hive的HQL表达能力有限</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">   2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 迭代式算法无法表达</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">   3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 数据挖掘方面不擅长，由于MapReduce数据处理流程的限制，效率更高的算法却无法实现。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">   4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. Hive的效率比较低</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    （</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）Hive自动生成的MapReduce作业，通常情况下不够智能化</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    （</span><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）Hive调优比较困难，粒度较粗</span></span></code></pre></div><h3 id="_0-3-hive架构原理" tabindex="-1"><a class="header-anchor" href="#_0-3-hive架构原理"><span>0.3 Hive架构原理</span></a></h3><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200720000427.png" alt="image-20200720000427660" style="zoom:67%;"><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 1. 用户接口：Client</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">	CLI（command-</span><span style="color:#C678DD;--shiki-dark:#C678DD;">line</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> interface）、JDBC/ODBC(jdbc访问hive)、WEBUI（浏览器访问hive）</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 2. 元数据：Metastore</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">	元数据包括：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">	   a、表名</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">	   b、表所属的数据库（默认是default）</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">	   c、表的拥有者</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">	   d、列/分区字段</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">	   e、表的类型（是否是外部表）、</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">	   f、表的数据所在目录等；</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">	&#39;默认存储在自带的derby数据库中，推荐使用MySQL存储Metastore&#39;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 3. Hadoop</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">	使用HDFS进行存储，使用MapReduce进行计算。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 4. 驱动器：Driver</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">	1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;解析器&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">（</span><span style="color:#C678DD;--shiki-dark:#C678DD;">SQL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> Parser）：将SQL字符串转换成抽象语法树AST，这一步一般都用第三方工具库完成，</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">	   比如antlr；对AST进行语法分析，比如表是否存在、字段是否存在、SQL语义是否有误。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;编译器&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">（Physical Plan）：将AST编译生成逻辑执行计划。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;优化器&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">（Query Optimizer）：对逻辑执行计划进行优化。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;执行器&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">（Execution）：把逻辑执行计划转换成可以运行的物理计划。对于Hive来说，就是MR/Spark。</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_0-4-hive与数据库的比较" tabindex="-1"><a class="header-anchor" href="#_0-4-hive与数据库的比较"><span>0.4 hive与数据库的比较</span></a></h3><blockquote><p>由于 Hive 采用了类似SQL 的查询语言 HQL(Hive Query Language)，因此很容易将 Hive 理解为数据库。其实从结构上来看，Hive 和数据库除了拥有类似的查询语言，再无类似之处</p></blockquote><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 1. 查询语言</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    hive有类似sql的hql查询语言</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 2. 数据更新</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">	1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. hive针对数据仓库而设计，适合读多写少的场景</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">	2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. mysql的数据需要经常进行修改。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 3.  执行延迟</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">	1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. hive没有索引 + 基于mr计算，延迟性高；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">	2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 这个低是有条件的，即数据规模较小，当数据规模大到超过数据库的处理能力的时候，Hive的并行计算显然能体现出优势</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 4. 数据规模</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 支持大数据规模的数据</span></span></code></pre></div><h3 id="_0-5-tez引擎" tabindex="-1"><a class="header-anchor" href="#_0-5-tez引擎"><span>0.5 tez引擎</span></a></h3><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;mr引擎&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：每个任务及任务之间都需要落盘</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;Tez引擎&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：可以将多个有依赖的作业转换为一个作业，这样只需写一次HDFS，且中间节点较少，从而大大提升作业的计算性能。</span></span></code></pre></div><p>![image-20200720001521940](<a href="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic" target="_blank" rel="noopener noreferrer">https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic</a> GO/20200720001522.png)</p><h2 id="一、hivejdbc客户端基本操作" tabindex="-1"><a class="header-anchor" href="#一、hivejdbc客户端基本操作"><span>一、HiveJDBC客户端基本操作</span></a></h2><h3 id="_1-1-hviejdbc的登入与退出" tabindex="-1"><a class="header-anchor" href="#_1-1-hviejdbc的登入与退出"><span>1.1 HvieJDBC的登入与退出</span></a></h3><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 方式一：使用beeline方式</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">访问方式：beeline -u jdbc:hive2://hadoop102:</span><span style="color:#D19A66;--shiki-dark:#D19A66;">10000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> -n lianzp</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">退出方式：！quit  、!exit 、 ctrl + c</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">前提：mysql服务和hiveservice2服务一定要启动</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 方式二： 使用hive的方式</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">访问方式：hive</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">退出方式：quit； exit；</span></span></code></pre></div><h3 id="_1-2-hive常用的交互命令" tabindex="-1"><a class="header-anchor" href="#_1-2-hive常用的交互命令"><span>1.2 Hive常用的交互命令</span></a></h3><blockquote><ul><li><p>“-e” 不进入hive的交互窗口执行sql语句**</p></li><li><p>“-f” 执行脚本中sql语句**</p></li></ul></blockquote><h3 id="_1-3-hive数据类型" tabindex="-1"><a class="header-anchor" href="#_1-3-hive数据类型"><span>1.3 Hive数据类型</span></a></h3><ul><li>基本数据类型</li></ul><table><thead><tr><th>Hive数据类型</th><th>Java数据类型</th><th>长度</th><th>例子</th></tr></thead><tbody><tr><td>TINYINT</td><td>byte</td><td>1byte有符号整数</td><td>20</td></tr><tr><td>SMALINT</td><td>short</td><td>2byte有符号整数</td><td>20</td></tr><tr><td>INT</td><td>int</td><td>4byte有符号整数</td><td>20</td></tr><tr><td>BIGINT</td><td>long</td><td>8byte有符号整数</td><td>20</td></tr><tr><td>BOOLEAN</td><td>boolean</td><td>布尔类型，true或者false</td><td>TRUE FALSE</td></tr><tr><td>FLOAT</td><td>float</td><td>单精度浮点数</td><td>3.14159</td></tr><tr><td>DOUBLE</td><td>double</td><td>双精度浮点数</td><td>3.14159</td></tr><tr><td>STRING</td><td>string</td><td>字符系列。可以指定字符集。可以使用单引号或者双引号。</td><td>‘now is the time’ “for all good men”</td></tr><tr><td>TIMESTAMP</td><td></td><td>时间类型</td><td></td></tr><tr><td>BINARY</td><td></td><td>字节数组</td><td></td></tr></tbody></table><blockquote><ul><li><p>重点关注：int，string，double,bigint ；</p></li><li><p>使用注意事项：在sql中需要指定字段的长度，而在hive中不需要，可以理解为可变参数 ；</p></li><li><p>数据类型的字节数：</p></li></ul><table><thead><tr><th style="text-align:center;">byte</th><th style="text-align:center;">short</th><th style="text-align:center;">int</th><th style="text-align:center;">long</th><th>float</th><th style="text-align:center;">double</th><th style="text-align:center;">char</th></tr></thead><tbody><tr><td style="text-align:center;">1</td><td style="text-align:center;">2</td><td style="text-align:center;">4</td><td style="text-align:center;">8</td><td>4</td><td style="text-align:center;">8</td><td style="text-align:center;">2</td></tr></tbody></table><p>​ 其中float的取值范围比long还要大。</p></blockquote><ul><li><p>集合数据类型</p><table><thead><tr><th style="text-align:center;">数据类型</th><th style="text-align:left;">描述</th><th>语法示例</th></tr></thead><tbody><tr><td style="text-align:center;">STRUCT</td><td style="text-align:left;">和c语言中的struct类似，都可以通过“点”符号访问元素内容。例如，如果某个列的数据类型是STRUCT{first STRING, last STRING},那么第1个元素可以通过字段.first来引用。</td><td>struct()例如struct&lt;street:string, city:string&gt;</td></tr><tr><td style="text-align:center;">MAP</td><td style="text-align:left;">MAP是一组键-值对元组集合，使用数组表示法可以访问数据。例如，如果某个列的数据类型是MAP，其中键值对是’first’-&gt;’John’和’last’-&gt;’Doe’，那么可以通过字段名[‘last’]获取最后一个元素</td><td>map()例如map&lt;string, int&gt;</td></tr><tr><td style="text-align:center;">ARRAY</td><td style="text-align:left;">数组是一组具有相同类型和名称的变量的集合。这些变量称为数组的元素，每个数组元素都有一个编号，编号从零开始。例如，数组值为[‘John’, ‘Doe’]，那么第2个元素可以通过数组名[1]进行引用。</td><td>Array()例如array<code>&lt;string&gt;</code></td></tr></tbody></table></li></ul><p>创建表的实例：</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">create</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> table</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> if</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> not</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> exists</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> test(</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> string,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">friends </span><span style="color:#C678DD;--shiki-dark:#C678DD;">array</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&lt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">string</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,  </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/*--数组的格式--*/</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">children map</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&lt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">string, </span><span style="color:#C678DD;--shiki-dark:#C678DD;">int</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/*--集合的格式--*/</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">address</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> struct</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&lt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">street:string, city:string</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* --Struct格式-- */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">row</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> format delimited fields terminated </span><span style="color:#C678DD;--shiki-dark:#C678DD;">by</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;,&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/*  行 格式      划分属性    以‘，’分割  ，统称为列分割符*/</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">collection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> items terminated </span><span style="color:#C678DD;--shiki-dark:#C678DD;">by</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;_&#39;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/*集合（数组，集合，Struct） 多个元素之间以‘_’ 分割，则要求所有的数据的格式均是一样的*/</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">map keys terminated </span><span style="color:#C678DD;--shiki-dark:#C678DD;">by</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;:&#39;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/*指明集合中key和value以‘：’ 进行分割*/</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">lines terminated </span><span style="color:#C678DD;--shiki-dark:#C678DD;">by</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;\\n&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/*行数据，以换行符进行分割*/</span></span></code></pre></div><p>获取集合中属性的方式：</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">* 	数组：使用索引的方式：字段名</span><span style="color:#E06C75;--shiki-dark:#E06C75;">[index]</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">*</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">*	集合：使用key的值获取：字段名</span><span style="color:#E06C75;--shiki-dark:#E06C75;">[key的值]</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">*</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">*	Struct：使用：</span><span style="color:#D19A66;--shiki-dark:#D19A66;">字段</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">属性值</span></span></code></pre></div><h3 id="_1-4-类型转化" tabindex="-1"><a class="header-anchor" href="#_1-4-类型转化"><span>1.4 类型转化</span></a></h3><ol><li><p>隐式类型转换规则</p><ul><li><p>任何整数类型都可以隐式地转换为一个范围更广的类型，如TINYINT可以转换成INT，INT可以转换成BIGINT；</p></li><li><p>所有整数类型、FLOAT和<strong>STRING</strong>类型都可以隐式地转换成DOUBLE；</p></li><li><p>TINYINT、SMALLINT、INT都可以转换为FLOAT；</p></li><li><p>BOOLEAN类型不可以转换为任何其它的类型。</p></li></ul></li><li><p><strong>CAST操作显示进行数据类型转换</strong></p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 示例：</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">select</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> cast</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;1&#39;</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> as</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) + </span><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  ;  </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 4 */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">select</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;1&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> + </span><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ; </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 4.0 */</span></span></code></pre></div></li></ol><h2 id="二、ddl数据定义" tabindex="-1"><a class="header-anchor" href="#二、ddl数据定义"><span>二、DDL数据定义</span></a></h2><h3 id="_2-1-数据库操作" tabindex="-1"><a class="header-anchor" href="#_2-1-数据库操作"><span>2.1 数据库操作</span></a></h3><h4 id="_2-1-1显示和查询数据库与表信息" tabindex="-1"><a class="header-anchor" href="#_2-1-1显示和查询数据库与表信息"><span>2.1.1显示和查询数据库与表信息</span></a></h4><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.显示数据库</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">show databases;</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.切换数据库</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">use</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 数据库名；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.查询数据库详细信息</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">desc</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> database</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> [extended]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 数据库名</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.查询表的详细信息</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">desc</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> [formatted]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 表名</span></span></code></pre></div><h4 id="_2-1-2-创建数据库" tabindex="-1"><a class="header-anchor" href="#_2-1-2-创建数据库"><span>2.1.2 创建数据库</span></a></h4><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">CREATE</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> DATABASE</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> [IF NOT EXISTS]</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> database_name</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">[COMMENT database_comment]</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">[LOCATION hdfs_path]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">[WITH DBPROPERTIES (property_name=property_value, ...)]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span></code></pre></div><p>实例：</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#C678DD;--shiki-dark:#C678DD;">create</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> database</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> db_hive;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#C678DD;--shiki-dark:#C678DD;">create</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> database</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> if</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> not</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> exists</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> db_hive; </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 加上 if not exists 后，当该数据库已存在时，不抛异常，也不做创建数据库的操作*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#C678DD;--shiki-dark:#C678DD;">create</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> database</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> db_hive2 </span><span style="color:#C678DD;--shiki-dark:#C678DD;">location</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;/db_hive2.db&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/*指定数据创建时，在hdfs上的路径，如果没有此操作，则默认的路径为：/user/hive/warehouse/数据库名*/</span></span></code></pre></div><h4 id="_2-1-3-删除数据库" tabindex="-1"><a class="header-anchor" href="#_2-1-3-删除数据库"><span>2.1.3 删除数据库</span></a></h4><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.删除空的数据库（何为空的数据库？指该数据中没有表）</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">drop</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> database</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> db_hive2 ;</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.当数据库不存在时，避免抛异常</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">drop</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> database</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> if</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> not</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> exists</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> db_hive2 ;</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.当数据库不为空时，加上cascade进行删除</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">drop</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> database</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> if</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> not</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> exists</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> db_hive2  cascade ;</span></span></code></pre></div><h3 id="_2-2-表的操作" tabindex="-1"><a class="header-anchor" href="#_2-2-表的操作"><span>2.2 表的操作</span></a></h3><h4 id="_2-2-1-建表语法" tabindex="-1"><a class="header-anchor" href="#_2-2-1-建表语法"><span>2.2.1 建表语法</span></a></h4><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">CREATE</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> [EXTERNAL]</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> TABLE</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> [IF NOT EXISTS]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> table_name </span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">[(col_name data_type [COMMENT col_comment]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, ...)] </span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">[COMMENT table_comment]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">[PARTITIONED BY (col_name data_type [COMMENT col_comment]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, ...)] </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[</span><span style="color:#C678DD;--shiki-dark:#C678DD;">CLUSTERED</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> BY</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (col_name, col_name, ...) </span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">[SORTED BY (col_name [ASC|DESC]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, ...)] </span><span style="color:#C678DD;--shiki-dark:#C678DD;">INTO</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> num_buckets BUCKETS] </span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">[ROW FORMAT row_format]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">[STORED AS file_format]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">[LOCATION hdfs_path]</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">[TBLPROPERTIES (property_name=property_value, ...)]</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">[AS select_statement]</span></span></code></pre></div><p>各个参数说明：</p><ol><li><p>EXTERNAL ：表示外部表，在删除表时，只会删除mysql中的元数据，在hdfs的真实数据不会被删除，如果没EXTERNAL ，则删除表的时候，元数据和真实数据均为被删除。</p></li><li><p>IF NOT EXISTS ：当表存在时，添加此操作，则不会抛异常，同时也不会执行建表操作。</p></li><li><p>COMMENT ：字段或表的注释；</p></li><li><p>PARTITIONED BY ： 分区**<code>（后面详细讲）</code>**；</p></li><li><p>CLUSTERED BY ： 分桶**（后面详细讲）**；</p></li><li><p>SORTED BY ：文件在hdfs的存储格式 ，存储的方式有：SEQUENCEFILE（二进制序列文件）、TEXTFILE（文本）、RCFILE（列式存储格式文件）</p><p>如果文件数据是纯文本，可以使用STORED AS TEXTFILE。如果数据需要压缩，使用 STORED AS SEQUENCEFILE；</p></li><li><p>ROW FORMAT row_format ：列分割符；</p></li><li><p>LOCATION hdfs_path：指定表在HDFS上的存储位置；默认为当前库下。</p></li><li><p>AS select_statement ：建表时进行加载数据，通过as后面的查询语句。</p></li></ol><h4 id="_2-2-2-管理表与外部表" tabindex="-1"><a class="header-anchor" href="#_2-2-2-管理表与外部表"><span>2.2.2 管理表与外部表</span></a></h4><p>区别：</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.管理表：也称内部表，当删除管理表时，hdfs中的数据和mysql中的元数据均会被删除 </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 控制表的生命周期</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.外部表：当删除管理表时，hdfs中的数据不会被删除，mysql中的元数据会被删除  </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 不能控制表的生命周期</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">在实战过程中，我们一般都是使用外部表。</span></span></code></pre></div><p>内外部表的定义、查看和转换</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.定义：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">创建表单时，加上 </span><span style="color:#C678DD;--shiki-dark:#C678DD;">external</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 关键字则表示为外部表。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.查看：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">通过 </span><span style="color:#C678DD;--shiki-dark:#C678DD;">desc</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> formatted 表名 。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.转换：</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">alter</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 表名 </span><span style="color:#C678DD;--shiki-dark:#C678DD;">set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> tblproperties(</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;EXTERNAL&#39;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;TRUE&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">注意事项：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">a、TRUE :   转换为外部表；</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">b、FALSE ： 转换为内部表;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">c、(</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;EXTERNAL&#39;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;TRUE&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)和(</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;EXTERNAL&#39;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;FALSE&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)为固定写法，均需要大写！</span></span></code></pre></div><h4 id="_2-2-3-修改表" tabindex="-1"><a class="header-anchor" href="#_2-2-3-修改表"><span>2.2.3 修改表</span></a></h4><ol><li>重命名表</li></ol><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 语法：</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">alter</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 旧表名 rename </span><span style="color:#C678DD;--shiki-dark:#C678DD;">to</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 新表名 ；</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 示例：</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">alter</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> dept_partition2 rename </span><span style="color:#C678DD;--shiki-dark:#C678DD;">to</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> dept_partition3;</span></span></code></pre></div><ol start="2"><li>更新列</li></ol><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 语法：</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">alter</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 表名 change 旧列名 新列名 数据类型  </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 示例：</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">alter</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> emp change ename naem string </span><span style="color:#C678DD;--shiki-dark:#C678DD;">first</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> deptno;</span></span></code></pre></div><ol start="3"><li>增加列</li></ol><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 语法：</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">alter</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 表名 </span><span style="color:#C678DD;--shiki-dark:#C678DD;">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 列名 数据类型 </span><span style="color:#E06C75;--shiki-dark:#E06C75;">[字段注释]</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> [first / after  列名]</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 示例：</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">alter</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> emp </span><span style="color:#C678DD;--shiki-dark:#C678DD;">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> loc string ;</span></span></code></pre></div><ol start="4"><li>删除表</li></ol><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 语法：</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">drop</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 表名</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 示例：</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">drop</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> emp ;</span></span></code></pre></div><h2 id="三、dml-操作" tabindex="-1"><a class="header-anchor" href="#三、dml-操作"><span>三、DML 操作</span></a></h2><p><strong>注意事项：</strong></p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>当导入数据时，如果加载本地的文件，并是将数据加载到有分区和分桶表的hive表中时，因为此导入数据的过程会跑mr程序，该本地文件需要在所有节点都需要，不然会报文件不存在异常。</span></span></code></pre></div><h3 id="_3-1-数据的导入" tabindex="-1"><a class="header-anchor" href="#_3-1-数据的导入"><span>3.1 数据的导入</span></a></h3><h4 id="_3-1-1-方式一" tabindex="-1"><a class="header-anchor" href="#_3-1-1-方式一"><span>3.1.1 方式一</span></a></h4><ul><li>使用load</li></ul><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 语法：</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">load</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> data</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> [local]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> inpath </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;数据的路径&#39;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">  [overwrite]</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> into</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 表名 </span><span style="color:#E06C75;--shiki-dark:#E06C75;">[partition (分区字段 = value1) (分区字段 = value2)]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 说明：</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">local</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> : 如果使用了，则</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;数据的路径&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">写linux本地的路径；</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">	    如果未使用，则</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;数据的路径&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">写hdfs上的路径； </span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">partition</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (分区字段 </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> value1)   ：表示数据上传到哪一个分区，后面详细介绍。  </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">overwrite : 表示覆盖写。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 示例：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">本地 ： </span><span style="color:#C678DD;--shiki-dark:#C678DD;">load</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> data</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> local</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> inpath </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;/opt/module/hive/datas/emp&#39;</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> into</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> emp;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">hdfs :  </span><span style="color:#C678DD;--shiki-dark:#C678DD;">load</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> data</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> inpath </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;/user/hive/warehouse/emp&#39;</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> into</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> emp;</span></span></code></pre></div><h4 id="_3-1-2-方式二" tabindex="-1"><a class="header-anchor" href="#_3-1-2-方式二"><span>3.1.2 方式二</span></a></h4><ul><li>通过查询语句向表中进行添加</li></ul><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 语法：</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#C678DD;--shiki-dark:#C678DD;">insert into</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 表名 </span><span style="color:#C678DD;--shiki-dark:#C678DD;">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 字段 </span><span style="color:#C678DD;--shiki-dark:#C678DD;">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 表名； </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 追加的方式，原数据不会丢失</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#C678DD;--shiki-dark:#C678DD;">insert</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> overwrite </span><span style="color:#C678DD;--shiki-dark:#C678DD;">table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 表名 </span><span style="color:#C678DD;--shiki-dark:#C678DD;">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 字段 </span><span style="color:#C678DD;--shiki-dark:#C678DD;">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 表名； </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 覆盖原数据的方式，原数据被覆盖</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#C678DD;--shiki-dark:#C678DD;">insert into</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 表名 </span><span style="color:#C678DD;--shiki-dark:#C678DD;">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 字段 </span><span style="color:#C678DD;--shiki-dark:#C678DD;">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 表名 </span><span style="color:#C678DD;--shiki-dark:#C678DD;">partition</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (分区字段 </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> Value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)； 多分区的插入模式</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 示例：</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#C678DD;--shiki-dark:#C678DD;">insert into</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> emp </span><span style="color:#C678DD;--shiki-dark:#C678DD;">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> id ,</span><span style="color:#C678DD;--shiki-dark:#C678DD;">name</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> emp1;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#C678DD;--shiki-dark:#C678DD;">insert</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> overwrite </span><span style="color:#C678DD;--shiki-dark:#C678DD;">table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> emp  </span><span style="color:#C678DD;--shiki-dark:#C678DD;">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> id ,</span><span style="color:#C678DD;--shiki-dark:#C678DD;">name</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> emp1;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#C678DD;--shiki-dark:#C678DD;">insert into</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> emp </span><span style="color:#C678DD;--shiki-dark:#C678DD;">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> id ,</span><span style="color:#C678DD;--shiki-dark:#C678DD;">name</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> emp1 </span><span style="color:#C678DD;--shiki-dark:#C678DD;">partition</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD;">month</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;2020-02-04&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span></code></pre></div><h4 id="_3-1-3-方式三" tabindex="-1"><a class="header-anchor" href="#_3-1-3-方式三"><span>3.1.3 方式三</span></a></h4><ul><li>创建表并使用查询语句加载数据（As Select）</li></ul><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 语法：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">建表语句 + </span><span style="color:#C678DD;--shiki-dark:#C678DD;">as</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  + 查询语句</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 示例：</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">create</span><span style="color:#E06C75;--shiki-dark:#E06C75;">  [external]</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> table</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> [if not exists]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> emp (</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">id </span><span style="color:#C678DD;--shiki-dark:#C678DD;">int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ,</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> string</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">row</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> format delimited fields terminated </span><span style="color:#C678DD;--shiki-dark:#C678DD;">by</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;\\t&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">as</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> id , </span><span style="color:#C678DD;--shiki-dark:#C678DD;">name</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> emp1;</span></span></code></pre></div><h4 id="_3-1-4-方式四" tabindex="-1"><a class="header-anchor" href="#_3-1-4-方式四"><span>3.1.4 方式四</span></a></h4><ul><li>创建表时使用location的方式</li></ul><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 语法：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">建表语句 + </span><span style="color:#C678DD;--shiki-dark:#C678DD;">location</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> + </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;hdfs数据路径&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 说明：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">数据路径：只能是hdfs上的路径，当该路径是一个目录时，则表示加载该文件夹下的所有文件</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 示例：</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">create</span><span style="color:#E06C75;--shiki-dark:#E06C75;">  [external]</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> table</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> [if not exists]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> emp (</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">id </span><span style="color:#C678DD;--shiki-dark:#C678DD;">int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ,</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> string</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">row</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> format delimited fields terminated </span><span style="color:#C678DD;--shiki-dark:#C678DD;">by</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;\\t&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">location</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;/user/hive/warehouse/emp&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ;</span></span></code></pre></div><h4 id="_3-1-5-方式五" tabindex="-1"><a class="header-anchor" href="#_3-1-5-方式五"><span>3.1.5 方式五</span></a></h4><ul><li>使用import方式</li></ul><p>注意：必须使用export的方式导出以后（导出了元数据和真实数据），再使用import进行导入。</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 示例：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">import </span><span style="color:#C678DD;--shiki-dark:#C678DD;">table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> student2  </span><span style="color:#C678DD;--shiki-dark:#C678DD;">from</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;/user/hive/warehouse/export/student&#39;</span></span></code></pre></div><h3 id="_3-2-数据的导出" tabindex="-1"><a class="header-anchor" href="#_3-2-数据的导出"><span>3.2 数据的导出</span></a></h3><ul><li>说明：数据的导出的方式，使用的情况很少。</li></ul><h4 id="_3-2-1-方式一" tabindex="-1"><a class="header-anchor" href="#_3-2-1-方式一"><span>3.2.1 方式一</span></a></h4><ul><li>insert 方式</li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 语法：</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">insert</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  overwrite    </span><span style="color:#E06C75;--shiki-dark:#E06C75;">[local]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> directory </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;输出文件路径&#39;</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> [row format delimited fields terminated by &#39;分割符&#39;]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 查询语句</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 说明：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">overwrite ：overwrite 是覆盖原文件的数据写入</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">[local]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ：加它，表示导出到本地，不加，则表示导出到hdfs上</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">&#39;输出文件路径&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ： 配合local来的，加了local，则写本地linux路径，不加，则写hdfs路径</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">[row format delimited fields terminated by &#39;分割符&#39;]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ：表示文件输出的格式</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 示例：</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 导入到本地</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）</span><span style="color:#C678DD;--shiki-dark:#C678DD;">insert</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> overwrite </span><span style="color:#C678DD;--shiki-dark:#C678DD;">local</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> directory </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;/opt/module/hive/datas/export/student&#39;</span><span style="color:#C678DD;--shiki-dark:#C678DD;">  select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> * </span><span style="color:#C678DD;--shiki-dark:#C678DD;">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> student;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 导出到本地，并指定导出的行数据的分割符</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）</span><span style="color:#C678DD;--shiki-dark:#C678DD;">insert</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> overwrite </span><span style="color:#C678DD;--shiki-dark:#C678DD;">local</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> directory </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;/opt/module/hive/datas/export/student1&#39;</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> ROW</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> FORMAT DELIMITED FIELDS TERMINATED </span><span style="color:#C678DD;--shiki-dark:#C678DD;">BY</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;\\t&#39;</span><span style="color:#C678DD;--shiki-dark:#C678DD;">  select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> * </span><span style="color:#C678DD;--shiki-dark:#C678DD;">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> student;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 导出到hdfs上，并指定导出的行数据的分割符</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）</span><span style="color:#C678DD;--shiki-dark:#C678DD;">insert</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> overwrite directory </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;/user/lianzp/student2&#39;</span><span style="color:#C678DD;--shiki-dark:#C678DD;">ROW</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> FORMAT DELIMITED FIELDS TERMINATED </span><span style="color:#C678DD;--shiki-dark:#C678DD;">BY</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;\\t&#39;</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> * </span><span style="color:#C678DD;--shiki-dark:#C678DD;">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> student;</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-2-2-方式二" tabindex="-1"><a class="header-anchor" href="#_3-2-2-方式二"><span>3.2.2 方式二</span></a></h4><ul><li>hadoop 的shell命令</li></ul><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 语法：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">hdfs dfs -</span><span style="color:#C678DD;--shiki-dark:#C678DD;">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> hdfs数据的输出路径 linux输入路径</span></span></code></pre></div><h4 id="_3-2-3-方式三" tabindex="-1"><a class="header-anchor" href="#_3-2-3-方式三"><span>3.2.3 方式三</span></a></h4><ul><li>hive 的shell命令</li></ul><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 语法：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">hive -e 查询语句 </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> linux输入路径</span></span></code></pre></div><h4 id="_3-2-4-方式四" tabindex="-1"><a class="header-anchor" href="#_3-2-4-方式四"><span>3.2.4 方式四</span></a></h4><ul><li>export的方式</li></ul><p>说明：export 和 import 主要用于两个hadoop 平台集群之间的hive表迁移。</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 语法：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">export </span><span style="color:#C678DD;--shiki-dark:#C678DD;">table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 表名 </span><span style="color:#C678DD;--shiki-dark:#C678DD;">to</span><span style="color:#98C379;--shiki-dark:#98C379;">  &#39;文件输出路径&#39;</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  -- 此路径为hdfs路径</span></span></code></pre></div><h4 id="_3-2-5-方式五" tabindex="-1"><a class="header-anchor" href="#_3-2-5-方式五"><span>3.2.5 方式五</span></a></h4><ul><li>Sqoop 导出 -- &gt; 后续有课程单独讲解</li></ul><h3 id="_3-3-清除表中数据" tabindex="-1"><a class="header-anchor" href="#_3-3-清除表中数据"><span>3.3 清除表中数据</span></a></h3><ul><li>使用 truncate</li></ul><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 语法：</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">truncate</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 表名 ；</span></span></code></pre></div><h2 id="四、查询" tabindex="-1"><a class="header-anchor" href="#四、查询"><span>四、查询</span></a></h2><h3 id="_4-1-关键词的总结" tabindex="-1"><a class="header-anchor" href="#_4-1-关键词的总结"><span>4.1 关键词的总结</span></a></h3><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 建表：</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) partitioned </span><span style="color:#C678DD;--shiki-dark:#C678DD;">by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> :分区表</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）</span><span style="color:#C678DD;--shiki-dark:#C678DD;">clustered</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  : 分桶表</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 查询：</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） </span><span style="color:#C678DD;--shiki-dark:#C678DD;">order by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> : 全排序</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） distribute </span><span style="color:#C678DD;--shiki-dark:#C678DD;">by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> : 查询中做分区</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） sort </span><span style="color:#C678DD;--shiki-dark:#C678DD;">by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> : 查询中每个MapReduce内部排序</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） cluster </span><span style="color:#C678DD;--shiki-dark:#C678DD;">by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> : 查询中做分区排序</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 窗口函数：</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#C678DD;--shiki-dark:#C678DD;">partition</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> :窗口函数中做分区</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#C678DD;--shiki-dark:#C678DD;">order by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ：窗口函数中做排序</span></span></code></pre></div><h3 id="_4-2-sql执行的顺序" tabindex="-1"><a class="header-anchor" href="#_4-2-sql执行的顺序"><span>4.2 sql执行的顺序</span></a></h3><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. </span><span style="color:#C678DD;--shiki-dark:#C678DD;">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ;</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. </span><span style="color:#C678DD;--shiki-dark:#C678DD;">on</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ;</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. </span><span style="color:#C678DD;--shiki-dark:#C678DD;">join</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ;</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. </span><span style="color:#C678DD;--shiki-dark:#C678DD;">where</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ; </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 不能使用列的别名</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. </span><span style="color:#C678DD;--shiki-dark:#C678DD;">group by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ; </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 不能使用列的别名</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">6</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. </span><span style="color:#C678DD;--shiki-dark:#C678DD;">having</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ; </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 可以使用列的别名</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">7</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. </span><span style="color:#C678DD;--shiki-dark:#C678DD;">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ;</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">8</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. </span><span style="color:#C678DD;--shiki-dark:#C678DD;">distinct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ;</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">9</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. </span><span style="color:#C678DD;--shiki-dark:#C678DD;">order by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ; </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 可以使用列的别名</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">10</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. </span><span style="color:#C678DD;--shiki-dark:#C678DD;">limit</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ; </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 可以使用列的别名</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">注意事项： 表名一旦使用了别名，所有的位置均需使用表的别名。</span></span></code></pre></div><h3 id="_4-3-查询语法" tabindex="-1"><a class="header-anchor" href="#_4-3-查询语法"><span>4.3 查询语法</span></a></h3><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 语法：</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">SELECT</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> [ALL | DISTINCT]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> select_expr, select_expr, ...</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  FROM</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> table_reference</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  [WHERE where_condition]</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  [GROUP BY col_list]</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  [ORDER BY col_list]</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  [CLUST </span><span style="color:#C678DD;--shiki-dark:#C678DD;">BY</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> col_list</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    | </span><span style="color:#E06C75;--shiki-dark:#E06C75;">[DISTRIBUTE BY col_list]</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> [SORT BY col_list]</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  ]</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;"> [LIMIT number]</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 说明：</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;"> DISTINCT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ：去重；</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> CLUST </span><span style="color:#C678DD;--shiki-dark:#C678DD;">BY</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> col_list</span></span></code></pre></div><h3 id="_4-4-基本查询" tabindex="-1"><a class="header-anchor" href="#_4-4-基本查询"><span>4.4 基本查询</span></a></h3><h4 id="_4-4-1-全表和特定列查询" tabindex="-1"><a class="header-anchor" href="#_4-4-1-全表和特定列查询"><span>4.4.1 全表和特定列查询</span></a></h4><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 语法：</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> * </span><span style="color:#C678DD;--shiki-dark:#C678DD;">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 表名 ；  </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 全表查询</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 列名1、列名2 </span><span style="color:#C678DD;--shiki-dark:#C678DD;">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 表名 ； </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 特定列查询</span></span></code></pre></div><h4 id="_4-4-2-别名" tabindex="-1"><a class="header-anchor" href="#_4-4-2-别名"><span>4.4.2 别名</span></a></h4><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">定义： 在查询中紧跟列名，也可以在列名与别名之间加as；</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">注意事项：</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）在hive中，中文的别名使用 一对 </span><span style="color:#98C379;--shiki-dark:#98C379;">\`\`</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 来注释；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）</span><span style="color:#C678DD;--shiki-dark:#C678DD;">as</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 一般可以省略 ；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） </span><span style="color:#C678DD;--shiki-dark:#C678DD;">where</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 、 </span><span style="color:#C678DD;--shiki-dark:#C678DD;">group by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 后面不能使用列的别名；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）</span><span style="color:#C678DD;--shiki-dark:#C678DD;">having</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 、</span><span style="color:#C678DD;--shiki-dark:#C678DD;">order by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 、</span><span style="color:#C678DD;--shiki-dark:#C678DD;">limit</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 可以使用列的别名 ；</span></span></code></pre></div><h4 id="_4-4-3-算术运算符" tabindex="-1"><a class="header-anchor" href="#_4-4-3-算术运算符"><span>4.4.3 算术运算符</span></a></h4><table><thead><tr><th style="text-align:center;">运算符</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">A+B</td><td style="text-align:center;">A和B 相加</td></tr><tr><td style="text-align:center;">A-B</td><td style="text-align:center;">A减去B</td></tr><tr><td style="text-align:center;">A*B</td><td style="text-align:center;">A和B 相乘</td></tr><tr><td style="text-align:center;">A/B</td><td style="text-align:center;">A除以B</td></tr><tr><td style="text-align:center;">A%B</td><td style="text-align:center;">A对B取余</td></tr><tr><td style="text-align:center;">A&amp;B</td><td style="text-align:center;">A和B按位取与</td></tr><tr><td style="text-align:center;">A|B</td><td style="text-align:center;">A和B按位取或</td></tr><tr><td style="text-align:center;">A^B</td><td style="text-align:center;">A和B按位取异或</td></tr><tr><td style="text-align:center;">~A</td><td style="text-align:center;">A按位取反</td></tr></tbody></table><h4 id="_4-4-4-常用函数" tabindex="-1"><a class="header-anchor" href="#_4-4-4-常用函数"><span>4.4.4 常用函数</span></a></h4><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)  c求和 ： sum（）；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） 求平均数 ： </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">avg</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> () ;</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)  求最大值 ： max（）；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） 求最小值 ： min（）；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） 求个数 ： count（）；</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 说明：</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） count（）：不计算null值；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">avg</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> () : 计算平均数时，分母也是不计算null个数的；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） 所以： </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">avg</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (字段) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> sum</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (字段) / </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">count</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(字段)，因此我们在计算一些列的平均值时，一般使用count（*）或者是count（</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）；</span></span></code></pre></div><h4 id="_4-4-5-where-语句" tabindex="-1"><a class="header-anchor" href="#_4-4-5-where-语句"><span>4.4.5 Where 语句</span></a></h4><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） 条件的筛选；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） 紧跟from后面。</span></span></code></pre></div><h4 id="_4-4-6-比较运算符" tabindex="-1"><a class="header-anchor" href="#_4-4-6-比较运算符"><span>4.4.6 比较运算符</span></a></h4><table><thead><tr><th>操作符</th><th style="text-align:center;">支持的数据类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td>A=B</td><td style="text-align:center;">基本数据类型</td><td style="text-align:left;">如果A等于B则返回TRUE，反之返回FALSE</td></tr><tr><td>A&lt;=&gt;B</td><td style="text-align:center;">基本数据类型</td><td style="text-align:left;">如果A和B都为NULL，则返回TRUE，如果一边为NULL，返回False</td></tr><tr><td>A&lt;&gt;B, A!=B</td><td style="text-align:center;">基本数据类型</td><td style="text-align:left;">A或者B为NULL则返回NULL；如果A不等于B，则返回TRUE，反之返回FALSE</td></tr><tr><td>A&lt;B</td><td style="text-align:center;">基本数据类型</td><td style="text-align:left;">A或者B为NULL，则返回NULL；如果A小于B，则返回TRUE，反之返回FALSE</td></tr><tr><td>A&lt;=B</td><td style="text-align:center;">基本数据类型</td><td style="text-align:left;">A或者B为NULL，则返回NULL；如果A小于等于B，则返回TRUE，反之返回FALSE</td></tr><tr><td>A&gt;B</td><td style="text-align:center;">基本数据类型</td><td style="text-align:left;">A或者B为NULL，则返回NULL；如果A大于B，则返回TRUE，反之返回FALSE</td></tr><tr><td>A&gt;=B</td><td style="text-align:center;">基本数据类型</td><td style="text-align:left;">A或者B为NULL，则返回NULL；如果A大于等于B，则返回TRUE，反之返回FALSE</td></tr><tr><td>A [NOT] BETWEEN B AND C</td><td style="text-align:center;">基本数据类型</td><td style="text-align:left;">如果A，B或者C任一为NULL，则结果为NULL。如果A的值大于等于B而且小于或等于C，则结果为TRUE，反之为FALSE。如果使用NOT关键字则可达到相反的效果。</td></tr><tr><td>A IS NULL</td><td style="text-align:center;">所有数据类型</td><td style="text-align:left;">如果A等于NULL，则返回TRUE，反之返回FALSE</td></tr><tr><td>A IS NOT NULL</td><td style="text-align:center;">所有数据类型</td><td style="text-align:left;">如果A不等于NULL，则返回TRUE，反之返回FALSE</td></tr><tr><td>IN(数值1, 数值2)</td><td style="text-align:center;">所有数据类型</td><td style="text-align:left;">使用 IN运算显示列表中的值</td></tr><tr><td>A [NOT] LIKE B</td><td style="text-align:center;">STRING 类型</td><td style="text-align:left;">B是一个SQL下的简单正则表达式，也叫通配符模式，如果A与其匹配的话，则返回TRUE；反之返回FALSE。B的表达式说明如下：‘x%’表示A必须以字母‘x’开头，‘%x’表示A必须以字母’x’结尾，而‘%x%’表示A包含有字母’x’,可以位于开头，结尾或者字符串中间。如果使用NOT关键字则可达到相反的效果。</td></tr><tr><td>A RLIKE B, A REGEXP B</td><td style="text-align:center;">STRING 类型</td><td style="text-align:left;">B是基于java的正则表达式，如果A与其匹配，则返回TRUE；反之返回FALSE。匹配使用的是JDK中的正则表达式接口实现的，因为正则也依据其中的规则。例如，正则表达式必须和整个字符串A相匹配，而不是只需与其字符串匹配。</td></tr></tbody></table><h4 id="_4-4-7-like-和-rlike" tabindex="-1"><a class="header-anchor" href="#_4-4-7-like-和-rlike"><span>4.4.7 like 和 rlike</span></a></h4><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） </span><span style="color:#C678DD;--shiki-dark:#C678DD;">like</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">% : 代表零个或者是多个字符（即时任意字符）	</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">_ : 代表一个字符；</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">\\ :  转义字符；</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） Rlike ：后面紧跟随正则表达式</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> \\ : 转义字符，即屏蔽特殊字符的含义：\\$;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ^ : 从头开始匹配，如：</span><span style="color:#C678DD;--shiki-dark:#C678DD;">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  rlike ^a  : 表示以a开头的name</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> $ : 匹配结尾 ，如  </span><span style="color:#C678DD;--shiki-dark:#C678DD;">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> Rlike t$ ：匹配以t结尾的name</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> * ： </span><span style="color:#D19A66;--shiki-dark:#D19A66;">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">-n 个 ，如 </span><span style="color:#C678DD;--shiki-dark:#C678DD;">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> rlike a* : 匹配 </span><span style="color:#D19A66;--shiki-dark:#D19A66;">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">-n a的name</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">[]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> : 表示范围，如 </span><span style="color:#E06C75;--shiki-dark:#E06C75;">[0-9,a-z]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:匹配0-9或者是a-z都可以。</span></span></code></pre></div><h4 id="_4-4-8-逻辑运算符" tabindex="-1"><a class="header-anchor" href="#_4-4-8-逻辑运算符"><span>4.4.8 逻辑运算符</span></a></h4><table><thead><tr><th>操作符</th><th>含义</th></tr></thead><tbody><tr><td>AND</td><td>逻辑并</td></tr><tr><td>OR</td><td>逻辑或</td></tr><tr><td>NOT</td><td>逻辑否</td></tr></tbody></table><h3 id="_4-5-分组" tabindex="-1"><a class="header-anchor" href="#_4-5-分组"><span>4.5 分组</span></a></h3><h4 id="_4-5-1-group-by" tabindex="-1"><a class="header-anchor" href="#_4-5-1-group-by"><span>4.5.1 group by</span></a></h4><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">- 常和聚合函数在一起;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">- 出现在 </span><span style="color:#C678DD;--shiki-dark:#C678DD;">group by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 中的字段可以出现在 select中，也可以不出现，</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  但是出现在 select中字段（除函数和常量外）必须在group </span><span style="color:#C678DD;--shiki-dark:#C678DD;">by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 出现过的字段。</span></span></code></pre></div><h4 id="_4-5-1-having" tabindex="-1"><a class="header-anchor" href="#_4-5-1-having"><span>4.5.1 Having</span></a></h4><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;"> having</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  与 </span><span style="color:#C678DD;--shiki-dark:#C678DD;">where</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 的不同</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） </span><span style="color:#C678DD;--shiki-dark:#C678DD;">where</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 后面不能写分组函数，但是 </span><span style="color:#C678DD;--shiki-dark:#C678DD;">having</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 可以 ；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） </span><span style="color:#C678DD;--shiki-dark:#C678DD;">having</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 只用于 </span><span style="color:#C678DD;--shiki-dark:#C678DD;">Group by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 分组统计语句；</span></span></code></pre></div><h3 id="_4-6-join" tabindex="-1"><a class="header-anchor" href="#_4-6-join"><span>4.6 join</span></a></h3><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 说明：</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） 常见的7种 </span><span style="color:#C678DD;--shiki-dark:#C678DD;">join</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 要会写；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） 不支持非等值连接；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） 支持满外连接 ： </span><span style="color:#C678DD;--shiki-dark:#C678DD;">full join</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ;</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)  关于主表和从表： </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 左右外连接，主表数据全要，从表数据只要交集的部分。</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 	左外连接 ： 左边为主表，右边为从表 ；</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">	右外连接 ： 右边为主表，左边为从表。</span></span></code></pre></div><h3 id="_4-7-排序" tabindex="-1"><a class="header-anchor" href="#_4-7-排序"><span>4.7 排序</span></a></h3><h4 id="_4-7-1-全局排序-order-by" tabindex="-1"><a class="header-anchor" href="#_4-7-1-全局排序-order-by"><span>4.7.1 全局排序 ： Order By</span></a></h4><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)  全局排序，只能有一个Reducer ；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） </span><span style="color:#C678DD;--shiki-dark:#C678DD;">DESC</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> : 降序 ；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)  </span><span style="color:#C678DD;--shiki-dark:#C678DD;">ASC</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> : 升序（</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;默认值&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） </span><span style="color:#C678DD;--shiki-dark:#C678DD;">Order by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 子句必须在SELECT语句的结尾 ；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)  排序的字段可以是多个；</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">示例：</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> id , </span><span style="color:#C678DD;--shiki-dark:#C678DD;">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ,sal </span><span style="color:#C678DD;--shiki-dark:#C678DD;">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> emp </span><span style="color:#C678DD;--shiki-dark:#C678DD;">order by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> sal </span><span style="color:#C678DD;--shiki-dark:#C678DD;">desc</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ,</span><span style="color:#C678DD;--shiki-dark:#C678DD;">name</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> asc</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 先按照薪水降序，薪水相同的，则按照名字进行升序排序；</span></span></code></pre></div><h4 id="_4-7-2-mapreduce内部排序-sort-by" tabindex="-1"><a class="header-anchor" href="#_4-7-2-mapreduce内部排序-sort-by"><span>4.7.2 mapreduce内部排序 ：sort by</span></a></h4><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)  理解：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">理解为在 reduce 中进行排序。所以一般是需要有多个 reduce 才有作用，是在每个reduce中进行排序，属于局部排序，而不是全局排序。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） 使用场景：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">当数据量很大时，不要进行全局排序，只需要进行局部排序。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） 一般不单独使用，因为无法控制什么样的数据进入同一个 reduce 中；</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 一般配合distribute by 使用，分区排序就是指定什么样的数据会进入同一个reduce中。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） 单独使用时，进入同一个 reduce 任务中的数据是随机的。 </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 伪随机，就是每次计算的结果是一样的，但是进入每一个reduce 中的数据是随机的。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 示例：</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） 设置reducer的个数：</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">set</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> mapreduce</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">job</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.reduces</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 设置reduce个数为3</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） 根据部门编号降序查看员工信息 ： </span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> * </span><span style="color:#C678DD;--shiki-dark:#C678DD;">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> emp sort </span><span style="color:#C678DD;--shiki-dark:#C678DD;">by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> deptno </span><span style="color:#C678DD;--shiki-dark:#C678DD;">desc</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 此时生成3个结果文件，并且每个结果文件中均是按照deptno 进行降序排序。</span></span></code></pre></div><h4 id="_4-7-3-分区排序-distribute-by" tabindex="-1"><a class="header-anchor" href="#_4-7-3-分区排序-distribute-by"><span>4.7.3 分区排序 ： distribute by</span></a></h4><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 理解 ： 类似在 MapReduce 中的自定义分区（</span><span style="color:#C678DD;--shiki-dark:#C678DD;">partition</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ）;</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 一般就是配合 sort </span><span style="color:#C678DD;--shiki-dark:#C678DD;">by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 使用；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 同样，在使用的时候，不能是一个reduce，需要多个reduce；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 什么样的数据会进行同一个reduce 呢 ？</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">  1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）首先，这个分区不是很智能，使用的方式是：分区的字段的 （ hashcode  % reduce的个数 ），计算值相等的，则进入同一个reduce；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">  2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）不会使用toString方式进行分区。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. distribute </span><span style="color:#C678DD;--shiki-dark:#C678DD;">by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 必须写在sort </span><span style="color:#C678DD;--shiki-dark:#C678DD;">by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 的前面；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">6</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. tez 引擎会进行reduce的优化，即假设设置为3个reduce，但是运行时有可能是2个reduce，所以验证时032，需使用mr引擎。</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- set hive.execution.engine=mr;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 示例：</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">insert</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> overwrite </span><span style="color:#C678DD;--shiki-dark:#C678DD;">local</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> directory </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;/opt/module/hive/datas/distribute-result&#39;</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> * </span><span style="color:#C678DD;--shiki-dark:#C678DD;">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> emp distribute </span><span style="color:#C678DD;--shiki-dark:#C678DD;">by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> deptno sort </span><span style="color:#C678DD;--shiki-dark:#C678DD;">by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> empno </span><span style="color:#C678DD;--shiki-dark:#C678DD;">desc</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 假设 reduce = 3 ；</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 先按照deptno进行分区(m = hashcode(deptno) % 3 , m值相等的数据进入同一个分区），然后在分区内进行局部排序，最后将查询的结果导出到本地指定的一个文件中。</span></span></code></pre></div><h4 id="_4-7-4-cluster-by" tabindex="-1"><a class="header-anchor" href="#_4-7-4-cluster-by"><span>4.7.4 Cluster By</span></a></h4><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 理解 ：当distribute </span><span style="color:#C678DD;--shiki-dark:#C678DD;">by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 和 sort </span><span style="color:#C678DD;--shiki-dark:#C678DD;">by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 的字段相同时，可以使用Cluster </span><span style="color:#C678DD;--shiki-dark:#C678DD;">by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 进行替代；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 不能指定排序的顺序，只能是升序。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 示例：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">方式一 ：</span><span style="color:#C678DD;--shiki-dark:#C678DD;">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> * </span><span style="color:#C678DD;--shiki-dark:#C678DD;">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> emp  cluster </span><span style="color:#C678DD;--shiki-dark:#C678DD;">by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> deptno ;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">方式二 ：</span><span style="color:#C678DD;--shiki-dark:#C678DD;">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> * </span><span style="color:#C678DD;--shiki-dark:#C678DD;">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> emp distribute </span><span style="color:#C678DD;--shiki-dark:#C678DD;">by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> deptno sort </span><span style="color:#C678DD;--shiki-dark:#C678DD;">by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> deptno ;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 方式一和方式二是等价的。</span></span></code></pre></div><h2 id="五、-分区表和分桶表" tabindex="-1"><a class="header-anchor" href="#五、-分区表和分桶表"><span>五、 分区表和分桶表</span></a></h2><h3 id="_5-1-分区表" tabindex="-1"><a class="header-anchor" href="#_5-1-分区表"><span>5.1 分区表</span></a></h3><p>分区表的解析：</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 理解：</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） Hive 中的分区就是分目录 ；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） 分区表对应一个hdfs文件系统的独立的文件；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） 实际上是把一个大的数据集根据业务的需求分割成多个小的数集；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） 在查询时，通过where语句进行条件筛选，指定数据在哪个分区内，提高查询的效率；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)  同时用于解决数据倾斜的问题。</span></span></code></pre></div><h4 id="_5-1-1-分区表的基本操作" tabindex="-1"><a class="header-anchor" href="#_5-1-1-分区表的基本操作"><span>5.1.1 分区表的基本操作</span></a></h4><ol><li>创建分区表</li></ol><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 语法：</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">create</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> table</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> [if not exists]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 表名 (</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">字段1 数据类型1，</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">字段2 数据类型2，</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">字段3 数据类型3，</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    ...</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">partition</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (字段1 数据类型1 ， 字段2 数据类型2 ，...) </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 分区，字段不能与表中属性字段相同</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">clustered</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (字段1 ， 字段2 ， ...) </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 分桶，字段来自于表中的字段，所以是没有数据类型的。</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">row</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> format delimited fields terminated </span><span style="color:#C678DD;--shiki-dark:#C678DD;">by</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;\\t&#39;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 分区的字段也是可以作为表的字段使用。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 示例：</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">create</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> table</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> dept_partition</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">deptno </span><span style="color:#C678DD;--shiki-dark:#C678DD;">int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">dname string ,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">loc string</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">partition</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD;">month</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> string , </span><span style="color:#C678DD;--shiki-dark:#C678DD;">day</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> string) </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 二级分区，先按照月进行分区，在月中再根据day进行分区</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">row</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> format delimited fields terminated </span><span style="color:#C678DD;--shiki-dark:#C678DD;">by</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;\\t&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>加载数据</li></ol><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">方式一 ： 常规加载数据 load方式</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 语法：</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">load</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> data</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> local</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> inpath </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;本地数据路径&#39;</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> into</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 表名 </span><span style="color:#C678DD;--shiki-dark:#C678DD;">partition</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (字段1</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;***&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,字段2  </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;***&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 示例：</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">load</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> data</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> local</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> inpath </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;/opt/module/hive/datas/2020-04-04.log&#39;</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> into</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> dept_partition </span><span style="color:#C678DD;--shiki-dark:#C678DD;">partition</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD;">month</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;2020-04&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#C678DD;--shiki-dark:#C678DD;">day</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;04&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">方式二：上传数据后修复 </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 因为单独上传数据到指定的目录下，hive是不能自动读取，需要进行数据的修复</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">第一步： 根据分区字段的信息，创建文件夹，此文件夹与表的路径相同</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">第二步： 本地的数据上传到指定的目录下，使用 【 hdfs dfs -put 本地数据路径 hdfs文件路径 】</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">第三步： 进行数据的修复 ，使用语句 【msck repair </span><span style="color:#C678DD;--shiki-dark:#C678DD;">table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 表名】</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">方式三： 上传数据后添加分区的方式 </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 该方式使用的情况最多</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">第一步和第二步与方式二完全相同；</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">第三步： 执行添加分区的方式</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">alter</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 表名 </span><span style="color:#C678DD;--shiki-dark:#C678DD;">add</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> partition</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (字段1</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;***&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,字段2</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;***&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 实例：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">第一步：hdfs dfs -mkdir -p  /user/hive/warehouse/dept_partition/</span><span style="color:#C678DD;--shiki-dark:#C678DD;">month</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#D19A66;--shiki-dark:#D19A66;">2020</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">-</span><span style="color:#D19A66;--shiki-dark:#D19A66;">04</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/</span><span style="color:#C678DD;--shiki-dark:#C678DD;">day</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#D19A66;--shiki-dark:#D19A66;">04</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">第二步：hdfs dfs -put /opt/module/hive/datas/</span><span style="color:#D19A66;--shiki-dark:#D19A66;">2020</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">-</span><span style="color:#D19A66;--shiki-dark:#D19A66;">04</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">-</span><span style="color:#D19A66;--shiki-dark:#D19A66;">04</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.logs /user/hive/warehouse/dept_partition/</span><span style="color:#C678DD;--shiki-dark:#C678DD;">month</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#D19A66;--shiki-dark:#D19A66;">2020</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">-</span><span style="color:#D19A66;--shiki-dark:#D19A66;">04</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/</span><span style="color:#C678DD;--shiki-dark:#C678DD;">day</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#D19A66;--shiki-dark:#D19A66;">04</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">第三步：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">方式二： msck repair </span><span style="color:#C678DD;--shiki-dark:#C678DD;">table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> dept_partition;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">方式二： </span><span style="color:#C678DD;--shiki-dark:#C678DD;">alter</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> dept_partition </span><span style="color:#C678DD;--shiki-dark:#C678DD;">add</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> partition</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD;">month</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;2020-04&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#C678DD;--shiki-dark:#C678DD;">day</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;04&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>根据分区进行查询</li></ol><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 语法：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">查询语句 + </span><span style="color:#C678DD;--shiki-dark:#C678DD;">where</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 分区字段</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;***&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 示例：</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  * </span><span style="color:#C678DD;--shiki-dark:#C678DD;">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> dept_partition </span><span style="color:#C678DD;--shiki-dark:#C678DD;">where</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> day</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;04&#39;</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> or</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> day</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;05&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ；</span></span></code></pre></div><ol start="4"><li>增加分区</li></ol><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 语法：</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">alter</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 表名 </span><span style="color:#C678DD;--shiki-dark:#C678DD;">add</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> partition</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (字段1</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;***&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,字段2</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;***&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)  </span><span style="color:#C678DD;--shiki-dark:#C678DD;">partition</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  (字段1</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;***&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,字段2</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;***&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 说明：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">增加多个分区时，分区与分区之间使用空格隔开。</span></span></code></pre></div><ol start="5"><li>删除分区</li></ol><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 语法：</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">alter</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 表名 </span><span style="color:#C678DD;--shiki-dark:#C678DD;">drop</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> partition</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (字段1</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;***&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,字段2</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;***&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) , </span><span style="color:#C678DD;--shiki-dark:#C678DD;">partition</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  (字段1</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;***&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,字段2</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;***&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 说明：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">删除的多个分区之间使用</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;,&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">进行分隔。</span></span></code></pre></div><ol start="6"><li>查看多个分区</li></ol><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 语法：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">show partitions 表名；</span></span></code></pre></div><h4 id="_5-1-2-动态分区调整" tabindex="-1"><a class="header-anchor" href="#_5-1-2-动态分区调整"><span>5.1.2 动态分区调整</span></a></h4><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 理解：为什么要使用动态分区呢？</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">在实际的情况中，我们的数据通过前端收集过来以后，一般都是存储在hdfs上面，我们只需要通过 </span><span style="color:#C678DD;--shiki-dark:#C678DD;">insert</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> + 查询语句的方式将数据导入到指定的数据表，在此时需要指定按照什么字段进行分区。</span></span></code></pre></div><ol><li>前期的准备工作--<strong>开启动态分区参数设置</strong></li></ol><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">（</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）开启动态分区功能（默认true，开启）</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">hive</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">exec</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">dynamic</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">partition</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">（</span><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）设置为非严格模式（动态分区的模式，默认strict，表示必须指定至少一个分区为静态分区，nonstrict模式表示允许所有的分区字段都可以使用动态分区。）</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">hive</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">exec</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">dynamic</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">partition</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.mode</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">nonstrict</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">（</span><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）在所有执行MR的节点上，最大一共可以创建多少个动态分区。默认1000</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">hive</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">exec</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">max</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">dynamic</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.partitions</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1000</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">（</span><span style="color:#D19A66;--shiki-dark:#D19A66;">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）在每个执行MR的节点上，最大可以创建多少个动态分区。该参数需要根据实际的数据来设定。比如：源数据中包含了一年的数据，即day字段有365个值，那么该参数就需要设置成大于365，如果使用默认值100，则会报错。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">hive</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">exec</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">max</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">dynamic</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">partitions</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">pernode</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#D19A66;--shiki-dark:#D19A66;">100</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">（</span><span style="color:#D19A66;--shiki-dark:#D19A66;">5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）整个MR Job中，最大可以创建多少个HDFS文件。默认100000</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">hive</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">exec</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">max</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">created</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.files</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#D19A66;--shiki-dark:#D19A66;">100000</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">（</span><span style="color:#D19A66;--shiki-dark:#D19A66;">6</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）当有空分区生成时，是否抛出异常。一般不需要设置。默认false</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">hive</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">error</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#C678DD;--shiki-dark:#C678DD;">on</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">empty</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">partition</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">false</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>实操</li></ol><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 需求：将dept表中的数据按照地区（loc字段），插入到目标表dept——partition的分区中：</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）创建目标dept_partition表</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">create</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> table</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> dept_partition</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">id </span><span style="color:#C678DD;--shiki-dark:#C678DD;">int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> string</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">partitioned </span><span style="color:#C678DD;--shiki-dark:#C678DD;">by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (loc string)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">row</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> format delimited fields terminated </span><span style="color:#C678DD;--shiki-dark:#C678DD;">by</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;\\t&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) 插入数据</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">insert into</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> dept_partition </span><span style="color:#C678DD;--shiki-dark:#C678DD;">partition</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (loc) </span><span style="color:#C678DD;--shiki-dark:#C678DD;">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> deptno , </span><span style="color:#C678DD;--shiki-dark:#C678DD;">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, loc </span><span style="color:#C678DD;--shiki-dark:#C678DD;">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> dept;</span></span></code></pre></div><h3 id="_5-2-分桶表" tabindex="-1"><a class="header-anchor" href="#_5-2-分桶表"><span>5.2 分桶表</span></a></h3><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 理解：为什么会有分桶表？或者说分桶表是用来解决什么问题呢？</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）提供一个数据隔离和优化查询的便利方式，如当某一个表或者是某一个分区的数据量特别大时，通过分桶的方式，可以将数据再进行分解成多个模块，这样在进行查询时，提供了查询的效率。 </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 说明查询的分区操作时自动的。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）什么样的数据会进入同一个桶中呢？</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">通过 （分桶字段的）hashcode % 桶的个数 ，取模数相等的进入同一个桶内。（不适用于TEZ引擎）</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）分桶表针对的是数据文件；而分区是针对数据路径。</span></span></code></pre></div><p>创建分桶表</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">在创建表单时，增加如下语法子句：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">******</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">clustered</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (字段1，字段2，***) </span><span style="color:#C678DD;--shiki-dark:#C678DD;">into</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> num buckets;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">******</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 说明：</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） 字段1-n : 均来自于表中的字段；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） num : 表示分桶的个数。</span></span></code></pre></div><h3 id="_5-3-抽样查询" tabindex="-1"><a class="header-anchor" href="#_5-3-抽样查询"><span>5.3 抽样查询</span></a></h3><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 理解：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">当数据特别大的时候，我们不要通过查询所有的数据来获取数据的情况。</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">例如：工厂生产的产品，OQC 是按比例抽样来判定产品的良率。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 示例：</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> *  </span><span style="color:#C678DD;--shiki-dark:#C678DD;">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> dept tablesample (bucket </span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> of </span><span style="color:#D19A66;--shiki-dark:#D19A66;">4</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> on</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> id);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 说明：</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">on</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> :表示依据哪个字段进行抽样；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ： 表示按照on后面的字段将数据分成几份。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ： 则表示第一份，</span><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 表示第二份。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">如上只是抽样方法中非常简单的一种，还有很多种方式。</span></span></code></pre></div><h2 id="六-、函数-重点" tabindex="-1"><a class="header-anchor" href="#六-、函数-重点"><span>六 、函数 （重点）</span></a></h2><h3 id="_6-1-常用函数" tabindex="-1"><a class="header-anchor" href="#_6-1-常用函数"><span>6.1 常用函数</span></a></h3><p>日期函数：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） unix_timestamp : 返回当前或指定的时间戳；</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">SELECT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  unix_timestamp(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;2020-05-02 11:22:00&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">); </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">==&gt;</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1588418520</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） from_unixtime : 将时间戳转化为日期格式</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">SELECT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> FROM_unixtime(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1588418520</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">); </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">==&gt;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 2020</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">-</span><span style="color:#D19A66;--shiki-dark:#D19A66;">05</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">-</span><span style="color:#D19A66;--shiki-dark:#D19A66;">02</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 11</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;">22</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;">00</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) current_date : 当前日期</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）current_timestamp: 当前日期 + 时间；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）to_date : 获取日期部分</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">6</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）</span><span style="color:#C678DD;--shiki-dark:#C678DD;">year</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/</span><span style="color:#C678DD;--shiki-dark:#C678DD;">month</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/</span><span style="color:#C678DD;--shiki-dark:#C678DD;">day</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/</span><span style="color:#C678DD;--shiki-dark:#C678DD;">hour</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/</span><span style="color:#C678DD;--shiki-dark:#C678DD;">minute</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/</span><span style="color:#C678DD;--shiki-dark:#C678DD;">second</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">() : 获取年、月、日、小时、分、秒</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">7</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）weekofyear(): 当前时间是一年中的第几周</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">8</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）dayofmonth(): 当前时间是一个月中的第几天</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">9</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）months_between() : 两个日期间的月份</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">10</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">datediff</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">() : 两个日期相差的天数</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">11</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) add_months：日期加减月</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">12</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) date_add：日期加天数</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">13</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) date_sub：日期减天数</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">14</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) last_day: 日期的当月的最后一天</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>取整函数</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) round： 四舍五入</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) ceil：  向上取整</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) floor： 向下取整</span></span></code></pre></div><p>字符串函数</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）upper： 转大写</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）lower： 转小写</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）</span><span style="color:#C678DD;--shiki-dark:#C678DD;">length</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">： 长度</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）trim：  前后去空格</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）lpad： 向左补齐，到指定长度</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">6</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）rpad：  向右补齐，到指定长度</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">7</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）regexp_replace： </span><span style="color:#C678DD;--shiki-dark:#C678DD;">SELECT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> regexp_replace(</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;100-200&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;(\\\\d+)&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;num&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) ；</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">	使用正则表达式匹配目标字符串，匹配成功后替换！</span></span></code></pre></div><p>集合操作</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） </span><span style="color:#C678DD;--shiki-dark:#C678DD;">size</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">： 集合中元素的个数</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） map_keys： 返回map中的key</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） map_values: 返回map中的value</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） array_contains: 判断array中是否包含某个元素</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） sort_array： 将array中的元素排序</span></span></code></pre></div><h3 id="_6-2-系统内置函数" tabindex="-1"><a class="header-anchor" href="#_6-2-系统内置函数"><span>6.2 系统内置函数</span></a></h3><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） 查看系统自带的函数</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">show functions;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) 查询函数的用法</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">desc</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> function</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> extended 函数名</span></span></code></pre></div><h3 id="_6-3-常用的内置函数" tabindex="-1"><a class="header-anchor" href="#_6-3-常用的内置函数"><span>6.3 常用的内置函数</span></a></h3><h4 id="_6-3-1-空字段赋值-nvl" tabindex="-1"><a class="header-anchor" href="#_6-3-1-空字段赋值-nvl"><span>6.3.1 空字段赋值 NVL</span></a></h4><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 语法：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">nvl(</span><span style="color:#C678DD;--shiki-dark:#C678DD;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,default_value)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 说明：</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）如果value 为null，则返回default_value ，否则返回vaule；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）如果两个值（</span><span style="color:#C678DD;--shiki-dark:#C678DD;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> , default_value）均为null，则返回null；</span></span></code></pre></div><h4 id="_6-3-2-case-when" tabindex="-1"><a class="header-anchor" href="#_6-3-2-case-when"><span>6.3.2 CASE WHEN</span></a></h4><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 示例：</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  dept_id,</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">  sum</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#C678DD;--shiki-dark:#C678DD;">case</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> sex </span><span style="color:#C678DD;--shiki-dark:#C678DD;">when</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;男&#39;</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> then</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> else</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 0</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> end</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) male_count,</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">  sum</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#C678DD;--shiki-dark:#C678DD;">case</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> sex </span><span style="color:#C678DD;--shiki-dark:#C678DD;">when</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;女&#39;</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> then</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> else</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 0</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> end</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) female_count</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  emp_sex</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">group by</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  dept_id;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  /*  解读：</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  1.按照dept_id 进行分组，同一组的数据先进行计算；</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  2.假设dept_id=10的数据有10条，则10数据分别在sum函数中进行计算，计算完成以后得出一个结果；</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  3.一组数据最后得到一条数据结果。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  */</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_6-3-3-行转列" tabindex="-1"><a class="header-anchor" href="#_6-3-3-行转列"><span>6.3.3 行转列</span></a></h4><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 相关函数</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">concat</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;str1&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;str2&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;str3&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,...) : 表示将str1/str2/str3... 依次进行连接，str1/str2/str3... 可以说任何数据类型；</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 示例：SELECT  concat(&#39;132&#39;,&#39;-&#39;,&#39;456&#39;); ==&gt; 132-456</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) concat_ws(</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;连接符&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">，</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;str1&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;str2&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,...) : 表示使用</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;连接符&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">将str1/str2...依次进行连接，str1/str2...只能是字符串或者是字符串数组。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 示例：</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">SELECT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  concat_ws(</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;-&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;java&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;maven&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">); </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">==&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> java-maven;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">SELECT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  concat_ws(</span><span style="color:#C678DD;--shiki-dark:#C678DD;">null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;java&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;maven&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">); </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">==&gt;</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> null</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> -- 当连接符为null时，结果返回null</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">SELECT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  concat_ws(</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;.&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;www&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#C678DD;--shiki-dark:#C678DD;">array</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;facebook&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;com&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)) ；</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">==&gt;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> www</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">facebook</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.com</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） collect_set(col) : 函数只接受基本数据类型，它的主要作用是将某字段的值进行去重汇总，产生array类型字段</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 示例：</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">SELECT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> COLLECT_set(deptno) </span><span style="color:#C678DD;--shiki-dark:#C678DD;">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> emp; </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">==&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">[20,30,10]</span></span></code></pre></div><h4 id="_6-3-4-列转行" tabindex="-1"><a class="header-anchor" href="#_6-3-4-列转行"><span>6.3.4 列转行</span></a></h4><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 语法：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">lateral view explode (split(字段，分割符)) 表名 </span><span style="color:#C678DD;--shiki-dark:#C678DD;">as</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 列名</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 说明：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">lateral view : 侧写；</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">explode(): 将指定的集合拆解分成多行 </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 炸裂</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">split(字段，分割符) : 将指定的字符串按照分割符封装成一个集合。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 示例：</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">SELECT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> movie,category_name </span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">FROM</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> movie_info </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">lateral VIEW</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">explode(split(category,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;,&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)) movie_info_tmp  </span><span style="color:#C678DD;--shiki-dark:#C678DD;">AS</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> category_name ; </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- categor_name 为炸裂的列名，move_info_tmp为侧写的表名</span></span></code></pre></div><p>![image-20200630212310025](<a href="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic" target="_blank" rel="noopener noreferrer">https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic</a> GO/20200630212310.png)</p><p>![image-20200630212550900](<a href="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic" target="_blank" rel="noopener noreferrer">https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic</a> GO/20200630212551.png)</p><h3 id="_6-4-开窗函数" tabindex="-1"><a class="header-anchor" href="#_6-4-开窗函数"><span>6.4 开窗函数</span></a></h3><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">相关函数说明：开窗函数是为每一条数据进行开窗</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） </span><span style="color:#C678DD;--shiki-dark:#C678DD;">over</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">() : 单独使用此函数，默认的窗口大小为结果集的大小。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） </span><span style="color:#C678DD;--shiki-dark:#C678DD;">partition</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> : 在窗口函数中进行分区</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;"> 	over</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#C678DD;--shiki-dark:#C678DD;">partition</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 字段) ：对结果集内进行分区，每条数据的开窗大小为该结果集中分区集的大小。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#C678DD;--shiki-dark:#C678DD;">over</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">( </span><span style="color:#C678DD;--shiki-dark:#C678DD;">order by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 字段) ： 在窗口函数中只用到了order </span><span style="color:#C678DD;--shiki-dark:#C678DD;">by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 排序时，也会对每条数据进行开一个窗口，默认的开窗大小为：从结果集的开始位置到当前处理数据的位置。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 实例：</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 1.查询在2017年4月份购买过的顾客及总人数</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 解析，顾客全部要，多个顾客，多行，人数为一个值，一行，则是需要进行开窗，因为不是一一匹配的。</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        SELECT</span><span style="color:#C678DD;--shiki-dark:#C678DD;">  name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ,</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">        COUNT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(*)   </span><span style="color:#C678DD;--shiki-dark:#C678DD;">OVER</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> () </span><span style="color:#98C379;--shiki-dark:#98C379;">\`人数\`</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> business </span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        WHERE</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">  SUBSTRING</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(orderdate,</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#D19A66;--shiki-dark:#D19A66;">7</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;2017-04&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        group by</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 2.查询顾客的购买明细及月购买总额</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    SELECT</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ,orderdate ,cost ,</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">    sum</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (cost) </span><span style="color:#C678DD;--shiki-dark:#C678DD;">over</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#C678DD;--shiki-dark:#C678DD;">partition</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> by</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> MONTH</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (orderdate))</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> business;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 3.上述的场景, 将每个顾客的cost按照日期进行累加</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    SELECT</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ,orderdate ,cost ,</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">    sum</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (cost) </span><span style="color:#C678DD;--shiki-dark:#C678DD;">over</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#C678DD;--shiki-dark:#C678DD;">partition</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> by</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> name</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> order by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> orderdate)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> business;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） CURRENT </span><span style="color:#C678DD;--shiki-dark:#C678DD;">ROW</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：当前行</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">	n </span><span style="color:#C678DD;--shiki-dark:#C678DD;">PRECEDING</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：往前n行数据</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">	n </span><span style="color:#C678DD;--shiki-dark:#C678DD;">FOLLOWING</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：往后n行数据</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）</span><span style="color:#C678DD;--shiki-dark:#C678DD;">UNBOUNDED</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：起点，</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">	UNBOUNDED</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> PRECEDING</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 表示从前面的起点 </span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    UNBOUNDED</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> FOLLOWING</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 表示到后面的终点</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">6</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">LAG</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(col,n,default_val)：往前第n行数据</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">7</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">LEAD</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(col,n, default_val)：往后第n行数据</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">8</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">NTILE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(n)：把有序窗口的行分发到指定数据的组中，各个组有编号，编号从1开始，对于每一行，NTILE返回此行所属的组的编号。注意：n必须为int类型。</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">示例：</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 需求：查询前20%时间的订单信息</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> * </span><span style="color:#C678DD;--shiki-dark:#C678DD;">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    select</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,orderdate,cost, </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">ntile</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#C678DD;--shiki-dark:#C678DD;">over</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#C678DD;--shiki-dark:#C678DD;">order by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> orderdate) sorted</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> business</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) t</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">where</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> sorted </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-5-rank" tabindex="-1"><a class="header-anchor" href="#_6-5-rank"><span>6.5 Rank</span></a></h3><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 函数说明</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">RANK</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">() 排序相同时会重复，总数不会变; </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">   -- 1 2 2 4 5 5 7</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">DENSE_RANK</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">() 排序相同时会重复，总数会减少; </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  -- 1 2 2 3 3 4 4 5</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">ROW_NUMBER</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">() 会根据顺序计算。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  -- 1 2 3 4 5 6</span></span></code></pre></div><h3 id="_6-6-自定义函数" tabindex="-1"><a class="header-anchor" href="#_6-6-自定义函数"><span>6.6 自定义函数</span></a></h3><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">自定函数的分类：</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） UDF（User-Defined-</span><span style="color:#C678DD;--shiki-dark:#C678DD;">Function</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 一进一出</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） UDAF（User-Defined Aggregation </span><span style="color:#C678DD;--shiki-dark:#C678DD;">Function</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 聚集函数，多进一出</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">	类似于：count/max/min</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">	</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">） UDTF（User-Defined </span><span style="color:#C678DD;--shiki-dark:#C678DD;">Table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">-Generating Functions） </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 一进多出</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">	如lateral view explode()</span></span></code></pre></div><h4 id="_6-6-1-自定义udf函数" tabindex="-1"><a class="header-anchor" href="#_6-6-1-自定义udf函数"><span>6.6.1 自定义UDF函数</span></a></h4><ol><li>需求：UDF实现计算给定字符串的长度</li></ol><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">示例：</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> my_len(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;abcd&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">); </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">==&gt;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 4</span></span></code></pre></div><ol start="2"><li>创建一个Maven工程</li><li>导入依赖</li></ol><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">dependencies</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">		&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">dependency</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">			&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">org</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">apache</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">hive</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">			&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">hive</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="color:#E06C75;--shiki-dark:#E06C75;">exec</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">			&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">version</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span><span style="color:#D19A66;--shiki-dark:#D19A66;">3.1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#FFFFFF;--shiki-dark:#FFFFFF;">2</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">version</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">		&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">dependency</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">dependencies</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span></span></code></pre></div><ol start="4"><li>创建一个类继承于GenericUDF</li></ol><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">package</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> com.lianzp.hive</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> org.apache.hadoop.hive.ql.exec.UDFArgumentException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> org.apache.hadoop.hive.ql.exec.UDFArgumentLengthException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> org.apache.hadoop.hive.ql.exec.UDFArgumentTypeException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> org.apache.hadoop.hive.ql.metadata.HiveException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> org.apache.hadoop.hive.ql.udf.generic.GenericUDF</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> org.apache.hadoop.hive.serde2.objectinspector.ObjectInspector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> org.apache.hadoop.hive.serde2.objectinspector.primitive.PrimitiveObjectInspectorFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * 自定义UDF函数，需要继承GenericUDF类</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * 需求: 计算指定字符串的长度</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> MyStringLength</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> extends</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> GenericUDF</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> arguments</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> 输入参数类型的鉴别器对象</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@return</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> 返回值类型的鉴别器对象</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@throws</span><span style="color:#E5C07B;font-style:italic;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic;"> UDFArgumentException</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> ObjectInspector</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> initialize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">ObjectInspector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[] </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">arguments</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> throws</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> UDFArgumentException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 判断输入参数的个数</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">arguments</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">length</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> !=</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">            throw</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> UDFArgumentLengthException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;Input Args Length Error!!!&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 判断输入参数的类型</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">!</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">arguments[</span><span style="color:#D19A66;--shiki-dark:#D19A66;">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">].</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getCategory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">equals</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">ObjectInspector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Category</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">PRIMITIVE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)){</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">            throw</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> UDFArgumentTypeException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;Input Args Type Error!!!&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        //函数本身返回值为int，需要返回int类型的鉴别器对象</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> PrimitiveObjectInspectorFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">javaIntObjectInspector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     * 函数的逻辑处理</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> arguments</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> 输入的参数</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@return</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> 返回值</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@throws</span><span style="color:#E5C07B;font-style:italic;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic;"> HiveException</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Object</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> evaluate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">DeferredObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[] </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">arguments</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> throws</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> HiveException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">       if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(arguments[</span><span style="color:#D19A66;--shiki-dark:#D19A66;">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">].</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">==</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">           return</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">       }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">       return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> arguments[</span><span style="color:#D19A66;--shiki-dark:#D19A66;">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">].</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">toString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">length</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> String</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> getDisplayString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[] </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">children</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>打成jar包上传到服务器/opt/module/hive/datas/myudf.jar</li><li>将jar包添加到hive的classpath</li></ol><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> jar /opt/module/hive/datas/</span><span style="color:#D19A66;--shiki-dark:#D19A66;">myudf</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">jar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span></code></pre></div><ol start="7"><li>创建临时函数与开发好的java class关联</li></ol><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">create</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> temporary </span><span style="color:#C678DD;--shiki-dark:#C678DD;">function</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> my_len </span><span style="color:#C678DD;--shiki-dark:#C678DD;">as</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;com.lianzp.hive. MyStringLength&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span></code></pre></div><ol start="8"><li>即可在hql中使用自定义的函数my_len</li></ol><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ename,my_len(ename) ename_len </span><span style="color:#C678DD;--shiki-dark:#C678DD;">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> emp;</span></span></code></pre></div><h4 id="_6-6-2-自定义udtf函数" tabindex="-1"><a class="header-anchor" href="#_6-6-2-自定义udtf函数"><span>6.6.2 自定义UDTF函数</span></a></h4><p>和udf的最大区别就是自定义函数不同。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">package</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> com.lianzp.udtf</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> org.apache.hadoop.hive.ql.exec.UDFArgumentException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> org.apache.hadoop.hive.ql.metadata.HiveException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> org.apache.hadoop.hive.ql.udf.generic.GenericUDTF</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> org.apache.hadoop.hive.serde2.objectinspector.ObjectInspector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> org.apache.hadoop.hive.serde2.objectinspector.ObjectInspectorFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> org.apache.hadoop.hive.serde2.objectinspector.StructObjectInspector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> org.apache.hadoop.hive.serde2.objectinspector.primitive.PrimitiveObjectInspectorFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> java.util.ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> java.util.List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> MyUDTF</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> extends</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> GenericUDTF</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> outList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> StructObjectInspector</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> initialize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">StructObjectInspector</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> argOIs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> throws</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> UDFArgumentException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        //1.定义输出数据的列名和类型</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75;">fieldNames</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">ObjectInspector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75;">fieldOIs</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        //2.添加输出数据的列名和类型</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        fieldNames</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;lineToWord&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        fieldOIs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">PrimitiveObjectInspectorFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">javaStringObjectInspector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> ObjectInspectorFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getStandardStructObjectInspector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(fieldNames, fieldOIs);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> process</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[] </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> throws</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> HiveException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        //1.获取原始数据</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> arg</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> args[</span><span style="color:#D19A66;--shiki-dark:#D19A66;">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">].</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">toString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        //2.获取数据传入的第二个参数，此处为分隔符</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> splitKey</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> args[</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">].</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">toString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        //3.将原始数据按照传入的分隔符进行切分</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[] </span><span style="color:#E06C75;--shiki-dark:#E06C75;">fields</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> arg</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">split</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(splitKey);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        //4.遍历切分后的结果，并写出</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> field</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> :</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> fields) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            //集合为复用的，首先清空集合</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">            outList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">clear</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            //将每一个单词添加至集合</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">            outList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(field);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            //将集合内容写出</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">            forward</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(outList);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> close</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> throws</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> HiveException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="七-、-压缩与存储" tabindex="-1"><a class="header-anchor" href="#七-、-压缩与存储"><span>七 、 压缩与存储</span></a></h2><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">总结几点：</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）不同存储格式的存储文件的大小对比总结：</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">ORC</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> &gt;</span><span style="color:#C678DD;--shiki-dark:#C678DD;">  Parquet</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> &gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  textFile</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）存储文件的查询速度测试：基本相差不大。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 在实际的项目开发当中，hive表的数据存储格式一般选择：orc或parquet；压缩方式一般选择snappy，lzo。</span></span></code></pre></div><p>压缩方式：</p><table><thead><tr><th>压缩格式</th><th>工具</th><th>算法</th><th>文件扩展名</th><th>是否可切分</th></tr></thead><tbody><tr><td>DEFLATE</td><td>无</td><td>DEFLATE</td><td>.deflate</td><td>否</td></tr><tr><td>Gzip</td><td>gzip</td><td>DEFLATE</td><td>.gz</td><td>否</td></tr><tr><td>bzip2</td><td>bzip2</td><td>bzip2</td><td>.bz2</td><td>是</td></tr><tr><td>LZO</td><td>lzop</td><td>LZO</td><td>.lzo</td><td>是</td></tr><tr><td>Snappy</td><td>无</td><td>Snappy</td><td>.snappy</td><td>否</td></tr></tbody></table><p>编码/解码器：</p><table><thead><tr><th>压缩格式</th><th>对应的编码/解码器</th></tr></thead><tbody><tr><td>DEFLATE</td><td>org.apache.hadoop.io.compress.DefaultCodec</td></tr><tr><td>gzip</td><td>org.apache.hadoop.io.compress.GzipCodec</td></tr><tr><td>bzip2</td><td>org.apache.hadoop.io.compress.BZip2Codec</td></tr><tr><td>LZO</td><td>com.hadoop.compression.lzo.LzopCodec</td></tr><tr><td>Snappy</td><td>org.apache.hadoop.io.compress.SnappyCodec</td></tr></tbody></table><p>压缩性能的比较：</p><table><thead><tr><th>压缩算法</th><th>原始文件大小</th><th>压缩文件大小</th><th>压缩速度</th><th>解压速度</th></tr></thead><tbody><tr><td>gzip</td><td>8.3GB</td><td>1.8GB</td><td>17.5MB/s</td><td>58MB/s</td></tr><tr><td>bzip2</td><td>8.3GB</td><td>1.1GB</td><td>2.4MB/s</td><td>9.5MB/s</td></tr><tr><td>LZO</td><td>8.3GB</td><td>2.9GB</td><td>49.3MB/s</td><td>74.6MB/s</td></tr></tbody></table><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">create</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> table</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> log_parquet_snappy</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">track_time string,</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">url</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> string,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">session_id string,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">referer string,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">ip string,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">end_user_id string,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">city_id string</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">row</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> format delimited fields terminated </span><span style="color:#C678DD;--shiki-dark:#C678DD;">by</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;\\t&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">stored </span><span style="color:#C678DD;--shiki-dark:#C678DD;">as</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> parquet</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  -- 指明文件的存储格式</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">tblproperties(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;parquet.compression&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;SNAPPY&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 指明文件的压缩方式</span></span></code></pre></div><p>详情见老师文档。</p><h2 id="八-、企业级优化" tabindex="-1"><a class="header-anchor" href="#八-、企业级优化"><span>八 、企业级优化</span></a></h2><p>见老师文档</p>`,228)]))}const t=a(e,[["render",r],["__file","Hive 总结.html.vue"]]),B=JSON.parse(`{"path":"/posts/BigData/02_Hive%E6%80%BB%E7%BB%93/Hive%20%E6%80%BB%E7%BB%93.html","title":"Hive 总结","lang":"zh-CN","frontmatter":{"description":"Hive 总结 总结人：XXX 2020.04.29 0.补充 0.1 什么是hive 0.2 优缺点 0.3 Hive架构原理 image-20200720000427660 0.4 hive与数据库的比较 由于 Hive 采用了类似SQL 的查询语言 HQL(Hive Query Language)，因此很容易将 Hive 理解为数据库。其实从结构...","watermark":true,"head":[["meta",{"property":"og:url","content":"https://springg.us.kg/posts/BigData/02_Hive%E6%80%BB%E7%BB%93/Hive%20%E6%80%BB%E7%BB%93.html"}],["meta",{"property":"og:site_name","content":"mrjason’s Blog"}],["meta",{"property":"og:title","content":"Hive 总结"}],["meta",{"property":"og:description","content":"Hive 总结 总结人：XXX 2020.04.29 0.补充 0.1 什么是hive 0.2 优缺点 0.3 Hive架构原理 image-20200720000427660 0.4 hive与数据库的比较 由于 Hive 采用了类似SQL 的查询语言 HQL(Hive Query Language)，因此很容易将 Hive 理解为数据库。其实从结构..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200720001522.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-28T01:58:08.000Z"}],["meta",{"property":"article:author","content":"MrJason"}],["meta",{"property":"article:modified_time","content":"2024-10-28T01:58:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Hive 总结\\",\\"image\\":[\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200720001522.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200630212310.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200630212551.png\\"],\\"dateModified\\":\\"2024-10-28T01:58:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MrJason\\",\\"url\\":\\"https://springg.us.kg\\"}]}"]]},"headers":[{"level":2,"title":"0.补充","slug":"_0-补充","link":"#_0-补充","children":[{"level":3,"title":"0.1 什么是hive","slug":"_0-1-什么是hive","link":"#_0-1-什么是hive","children":[]},{"level":3,"title":"0.2 优缺点","slug":"_0-2-优缺点","link":"#_0-2-优缺点","children":[]},{"level":3,"title":"0.3 Hive架构原理","slug":"_0-3-hive架构原理","link":"#_0-3-hive架构原理","children":[]},{"level":3,"title":"0.4 hive与数据库的比较","slug":"_0-4-hive与数据库的比较","link":"#_0-4-hive与数据库的比较","children":[]},{"level":3,"title":"0.5 tez引擎","slug":"_0-5-tez引擎","link":"#_0-5-tez引擎","children":[]}]},{"level":2,"title":"一、HiveJDBC客户端基本操作","slug":"一、hivejdbc客户端基本操作","link":"#一、hivejdbc客户端基本操作","children":[{"level":3,"title":"1.1 HvieJDBC的登入与退出","slug":"_1-1-hviejdbc的登入与退出","link":"#_1-1-hviejdbc的登入与退出","children":[]},{"level":3,"title":"1.2 Hive常用的交互命令","slug":"_1-2-hive常用的交互命令","link":"#_1-2-hive常用的交互命令","children":[]},{"level":3,"title":"1.3 Hive数据类型","slug":"_1-3-hive数据类型","link":"#_1-3-hive数据类型","children":[]},{"level":3,"title":"1.4 类型转化","slug":"_1-4-类型转化","link":"#_1-4-类型转化","children":[]}]},{"level":2,"title":"二、DDL数据定义","slug":"二、ddl数据定义","link":"#二、ddl数据定义","children":[{"level":3,"title":"2.1 数据库操作","slug":"_2-1-数据库操作","link":"#_2-1-数据库操作","children":[]},{"level":3,"title":"2.2 表的操作","slug":"_2-2-表的操作","link":"#_2-2-表的操作","children":[]}]},{"level":2,"title":"三、DML 操作","slug":"三、dml-操作","link":"#三、dml-操作","children":[{"level":3,"title":"3.1 数据的导入","slug":"_3-1-数据的导入","link":"#_3-1-数据的导入","children":[]},{"level":3,"title":"3.2 数据的导出","slug":"_3-2-数据的导出","link":"#_3-2-数据的导出","children":[]},{"level":3,"title":"3.3 清除表中数据","slug":"_3-3-清除表中数据","link":"#_3-3-清除表中数据","children":[]}]},{"level":2,"title":"四、查询","slug":"四、查询","link":"#四、查询","children":[{"level":3,"title":"4.1 关键词的总结","slug":"_4-1-关键词的总结","link":"#_4-1-关键词的总结","children":[]},{"level":3,"title":"4.2 sql执行的顺序","slug":"_4-2-sql执行的顺序","link":"#_4-2-sql执行的顺序","children":[]},{"level":3,"title":"4.3 查询语法","slug":"_4-3-查询语法","link":"#_4-3-查询语法","children":[]},{"level":3,"title":"4.4  基本查询","slug":"_4-4-基本查询","link":"#_4-4-基本查询","children":[]},{"level":3,"title":"4.5 分组","slug":"_4-5-分组","link":"#_4-5-分组","children":[]},{"level":3,"title":"4.6  join","slug":"_4-6-join","link":"#_4-6-join","children":[]},{"level":3,"title":"4.7 排序","slug":"_4-7-排序","link":"#_4-7-排序","children":[]}]},{"level":2,"title":"五、 分区表和分桶表","slug":"五、-分区表和分桶表","link":"#五、-分区表和分桶表","children":[{"level":3,"title":"5.1 分区表","slug":"_5-1-分区表","link":"#_5-1-分区表","children":[]},{"level":3,"title":"5.2 分桶表","slug":"_5-2-分桶表","link":"#_5-2-分桶表","children":[]},{"level":3,"title":"5.3  抽样查询","slug":"_5-3-抽样查询","link":"#_5-3-抽样查询","children":[]}]},{"level":2,"title":"六 、函数 （重点）","slug":"六-、函数-重点","link":"#六-、函数-重点","children":[{"level":3,"title":"6.1 常用函数","slug":"_6-1-常用函数","link":"#_6-1-常用函数","children":[]},{"level":3,"title":"6.2 系统内置函数","slug":"_6-2-系统内置函数","link":"#_6-2-系统内置函数","children":[]},{"level":3,"title":"6.3 常用的内置函数","slug":"_6-3-常用的内置函数","link":"#_6-3-常用的内置函数","children":[]},{"level":3,"title":"6.4 开窗函数","slug":"_6-4-开窗函数","link":"#_6-4-开窗函数","children":[]},{"level":3,"title":"6.5 Rank","slug":"_6-5-rank","link":"#_6-5-rank","children":[]},{"level":3,"title":"6.6 自定义函数","slug":"_6-6-自定义函数","link":"#_6-6-自定义函数","children":[]}]},{"level":2,"title":"七 、 压缩与存储","slug":"七-、-压缩与存储","link":"#七-、-压缩与存储","children":[]},{"level":2,"title":"八 、企业级优化","slug":"八-、企业级优化","link":"#八-、企业级优化","children":[]}],"git":{"createdTime":1730080688000,"updatedTime":1730080688000,"contributors":[{"name":"MrJason","email":"845886914@qq.com","commits":1}]},"readingTime":{"minutes":32.15,"words":9644},"filePathRelative":"posts/BigData/02_Hive总结/Hive 总结.md","localizedDate":"2024年10月28日","excerpt":"\\n<hr>\\n<p>总结人：XXX 2020.04.29</p>\\n<h2>0.补充</h2>\\n<h3>0.1 什么是hive</h3>\\n<div class=\\"language-sql\\" data-ext=\\"sql\\" data-title=\\"sql\\"><pre class=\\"shiki shiki-themes one-dark-pro one-dark-pro vp-code\\" style=\\"background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color:#D19A66;--shiki-dark:#D19A66\\">1</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">. Hive：由Facebook开源用于解决</span><span style=\\"color:#98C379;--shiki-dark:#98C379\\">'海量结构化日志'</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">的数据统计</span><span style=\\"color:#98C379;--shiki-dark:#98C379\\">'工具'</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">。</span></span>\\n<span class=\\"line\\"><span style=\\"color:#D19A66;--shiki-dark:#D19A66\\">2</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">. Hive是基于Hadoop的一个</span><span style=\\"color:#98C379;--shiki-dark:#98C379\\">'数据仓库工具'</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">，可以将结构化的数据文件</span><span style=\\"color:#98C379;--shiki-dark:#98C379\\">'映射'</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">为一张表，并提供类SQL查询功能。</span></span>\\n<span class=\\"line\\"><span style=\\"color:#D19A66;--shiki-dark:#D19A66\\">3</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">. </span><span style=\\"color:#98C379;--shiki-dark:#98C379\\">'本质'</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">：将HQL转化成MapReduce程序</span></span>\\n<span class=\\"line\\"><span style=\\"color:#D19A66;--shiki-dark:#D19A66\\">4</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">. </span><span style=\\"color:#98C379;--shiki-dark:#98C379\\">'原理介绍'</span></span>\\n<span class=\\"line\\"><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">   \\t（</span><span style=\\"color:#D19A66;--shiki-dark:#D19A66\\">1</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">）Hive处理的数据存储在HDFS</span></span>\\n<span class=\\"line\\"><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">    （</span><span style=\\"color:#D19A66;--shiki-dark:#D19A66\\">2</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">）Hive分析数据底层的实现是MapReduce</span></span>\\n<span class=\\"line\\"><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">    （</span><span style=\\"color:#D19A66;--shiki-dark:#D19A66\\">3</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">）执行程序运行在Yarn上</span></span></code></pre>\\n</div>","autoDesc":true}`);export{t as comp,B as data};
