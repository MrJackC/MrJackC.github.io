import{_ as a,c as n,a as i,o as l}from"./app-CZJgH_ea.js";const o={};function p(e,s){return l(),n("div",null,s[0]||(s[0]=[i(`<h1 id="es详解-查询-dsl查询之复合查询详解" tabindex="-1"><a class="header-anchor" href="#es详解-查询-dsl查询之复合查询详解"><span>ES详解 - 查询：DSL查询之复合查询详解</span></a></h1><blockquote><p>在查询中会有多种条件组合的查询，在ElasticSearch中叫复合查询。它提供了5种复合查询方式：<strong>bool query(布尔查询)</strong>、<strong>boosting query(提高查询)</strong>、<strong>constant_score（固定分数查询）</strong>、<strong>dis_max(最佳匹配查询）</strong>、<strong>function_score(函数查询）</strong>。</p></blockquote><h2 id="_0-复合查询引入" tabindex="-1"><a class="header-anchor" href="#_0-复合查询引入"><span>0. 复合查询引入</span></a></h2><p>在前文中，我们使用<code>bool</code>查询来组合多个查询条件。</p><p>比如之前介绍的语句</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">GET</span><span style="color:#98C379;--shiki-dark:#98C379;"> /bank/_search</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">    &quot;bool&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;must&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        { </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;match&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;age&quot;:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;40&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> }</span><span style="color:#98C379;--shiki-dark:#98C379;"> }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      ],</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;must_not&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        { </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;match&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;state&quot;:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;ID&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> }</span><span style="color:#98C379;--shiki-dark:#98C379;"> }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      ]</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>这种查询就是本文要介绍的<strong>复合查询</strong>，并且bool查询只是复合查询一种。</p><h2 id="_1-bool-query-布尔查询" tabindex="-1"><a class="header-anchor" href="#_1-bool-query-布尔查询"><span>1. bool query(布尔查询)</span></a></h2><blockquote><p>通过布尔逻辑将较小的查询组合成较大的查询。</p></blockquote><h3 id="_1-1-概念" tabindex="-1"><a class="header-anchor" href="#_1-1-概念"><span>1.1 概念</span></a></h3><p>Bool查询语法有以下特点</p><ul><li>子查询可以任意顺序出现</li><li>可以嵌套多个查询，包括bool查询</li><li>如果bool查询中没有must条件，should中必须至少满足一条才会返回结果。</li></ul><p>bool查询包含四种操作符，分别是must,should,must_not,filter。他们均是一种数组，数组里面是对应的判断条件。</p><ul><li><code>must</code>： 必须匹配。贡献算分</li><li><code>must_not</code>：过滤子句，必须不能匹配，但不贡献算分</li><li><code>should</code>： 选择性匹配，至少满足一条。贡献算分</li><li><code>filter</code>： 过滤子句，必须匹配，但不贡献算分</li></ul><h3 id="_1-2-一些例子" tabindex="-1"><a class="header-anchor" href="#_1-2-一些例子"><span>1.2 一些例子</span></a></h3><p>看下官方举例</p><ul><li>例子1</li></ul><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">POST</span><span style="color:#98C379;--shiki-dark:#98C379;"> _search</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">    &quot;bool&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> :</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;must&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> :</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        &quot;term&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> :</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;user.id&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> :</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;kimchy&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      },</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;filter&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        &quot;term&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> :</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;tags&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> :</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;production&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      },</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;must_not&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> :</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        &quot;range&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> :</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">          &quot;age&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> :</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;gte&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> :</span><span style="color:#98C379;--shiki-dark:#98C379;"> 10,</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;lte&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> :</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 20</span><span style="color:#98C379;--shiki-dark:#98C379;"> }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      },</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;should&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> :</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        { </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;term&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> :</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;tags&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> :</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;env1&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> }</span><span style="color:#98C379;--shiki-dark:#98C379;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        { </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;term&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> :</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;tags&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> :</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;deployed&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> }</span><span style="color:#98C379;--shiki-dark:#98C379;"> }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      ],</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;minimum_should_match&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> :</span><span style="color:#98C379;--shiki-dark:#98C379;"> 1,</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;boost&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> :</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1.0</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在filter元素下指定的查询对评分没有影响 , 评分返回为0。分数仅受已指定查询的影响。</p><ul><li>例子2</li></ul><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">GET</span><span style="color:#98C379;--shiki-dark:#98C379;"> _search</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">    &quot;bool&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;filter&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        &quot;term&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">          &quot;status&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;active&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>这个例子查询查询为所有文档分配0分，因为没有指定评分查询。</p><ul><li>例子3</li></ul><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">GET</span><span style="color:#98C379;--shiki-dark:#98C379;"> _search</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">    &quot;bool&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;must&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        &quot;match_all&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      },</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;filter&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        &quot;term&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">          &quot;status&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;active&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此bool查询具有match_all查询，该查询为所有文档指定1.0分。</p><ul><li>例子4</li></ul><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">GET</span><span style="color:#98C379;--shiki-dark:#98C379;"> /_search</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">    &quot;bool&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;should&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        { </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;match&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;name.first&quot;:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;query&quot;:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;shay&quot;,</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;_name&quot;:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;first&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> }</span><span style="color:#98C379;--shiki-dark:#98C379;"> }</span><span style="color:#98C379;--shiki-dark:#98C379;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        { </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;match&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;name.last&quot;:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;query&quot;:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;banon&quot;,</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;_name&quot;:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;last&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> }</span><span style="color:#98C379;--shiki-dark:#98C379;"> }</span><span style="color:#98C379;--shiki-dark:#98C379;"> }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      ],</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;filter&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        &quot;terms&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">          &quot;name.last&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [ </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;banon&quot;,</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;kimchy&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> ],</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">          &quot;_name&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;test&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>每个query条件都可以有一个<code>_name</code>属性，用来追踪搜索出的数据到底match了哪个条件。</p><h2 id="_2-boosting-query-提高查询" tabindex="-1"><a class="header-anchor" href="#_2-boosting-query-提高查询"><span>2. boosting query(提高查询)</span></a></h2><blockquote><p>不同于bool查询，bool查询中只要一个子查询条件不匹配那么搜索的数据就不会出现。而boosting query则是降低显示的权重/优先级（即score)。</p></blockquote><h3 id="_2-1-概念" tabindex="-1"><a class="header-anchor" href="#_2-1-概念"><span>2.1 概念</span></a></h3><p>比如搜索逻辑是 name = &#39;apple&#39; and type =&#39;fruit&#39;，对于只满足部分条件的数据，不是不显示，而是降低显示的优先级（即score)</p><h3 id="_2-2-例子" tabindex="-1"><a class="header-anchor" href="#_2-2-例子"><span>2.2 例子</span></a></h3><p>首先创建数据</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">POST</span><span style="color:#98C379;--shiki-dark:#98C379;"> /test-dsl-boosting/_bulk</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{ </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;index&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;_id&quot;:</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1</span><span style="color:#98C379;--shiki-dark:#98C379;"> }}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{ </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;content&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;Apple Mac&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{ </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;index&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;_id&quot;:</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 2</span><span style="color:#98C379;--shiki-dark:#98C379;"> }}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{ </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;content&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;Apple Fruit&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{ </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;index&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;_id&quot;:</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 3</span><span style="color:#98C379;--shiki-dark:#98C379;"> }}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{ </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;content&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;Apple employee like Apple Pie and Apple Juice&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> }</span></span></code></pre></div><p>对匹配<code>pie</code>的做降级显示处理</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">GET</span><span style="color:#98C379;--shiki-dark:#98C379;"> /test-dsl-boosting/_search</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">    &quot;boosting&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;positive&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        &quot;term&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">          &quot;content&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;apple&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      },</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;negative&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        &quot;term&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">          &quot;content&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;pie&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      },</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;negative_boost&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 0.5</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行结果如下</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121427422.png" alt="image-20220805032904414" tabindex="0" loading="lazy"><figcaption>image-20220805032904414</figcaption></figure><h2 id="_3-constant-score-固定分数查询" tabindex="-1"><a class="header-anchor" href="#_3-constant-score-固定分数查询"><span>3. constant_score（固定分数查询）</span></a></h2><blockquote><p>查询某个条件时，固定的返回指定的score；显然当不需要计算score时，只需要filter条件即可，因为filter context忽略score。</p></blockquote><h3 id="_3-1-例子" tabindex="-1"><a class="header-anchor" href="#_3-1-例子"><span>3.1 例子</span></a></h3><p>首先创建数据</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">POST</span><span style="color:#98C379;--shiki-dark:#98C379;"> /test-dsl-constant/_bulk</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{ </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;index&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;_id&quot;:</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1</span><span style="color:#98C379;--shiki-dark:#98C379;"> }}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{ </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;content&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;Apple Mac&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{ </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;index&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;_id&quot;:</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 2</span><span style="color:#98C379;--shiki-dark:#98C379;"> }}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{ </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;content&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;Apple Fruit&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> }</span></span></code></pre></div><p>查询apple</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">GET</span><span style="color:#98C379;--shiki-dark:#98C379;"> /test-dsl-constant/_search</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">    &quot;constant_score&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;filter&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        &quot;term&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;content&quot;:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;apple&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      },</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;boost&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1.2</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>执行结果如下</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121427469.png" alt="image-20220805033131958" tabindex="0" loading="lazy"><figcaption>image-20220805033131958</figcaption></figure><h2 id="_4-dis-max-最佳匹配查询" tabindex="-1"><a class="header-anchor" href="#_4-dis-max-最佳匹配查询"><span>4. dis_max(最佳匹配查询）</span></a></h2><blockquote><p>分离最大化查询（Disjunction Max Query）指的是： 将任何与任一查询匹配的文档作为结果返回，但只将最佳匹配的评分作为查询的评分结果返回 。</p></blockquote><h3 id="_4-1-例子" tabindex="-1"><a class="header-anchor" href="#_4-1-例子"><span>4.1 例子</span></a></h3><p>假设有个网站允许用户搜索博客的内容，以下面两篇博客内容文档为例：</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">POST</span><span style="color:#98C379;--shiki-dark:#98C379;"> /test-dsl-dis-max/_bulk</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{ </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;index&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;_id&quot;:</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1</span><span style="color:#98C379;--shiki-dark:#98C379;"> }}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;title&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;Quick brown rabbits&quot;,&quot;body&quot;:</span><span style="color:#98C379;--shiki-dark:#98C379;">  &quot;Brown rabbits are commonly seen.&quot;}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{ </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;index&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;_id&quot;:</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 2</span><span style="color:#98C379;--shiki-dark:#98C379;"> }}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;title&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;Keeping pets healthy&quot;,&quot;body&quot;:</span><span style="color:#98C379;--shiki-dark:#98C379;">  &quot;My quick brown fox eats rabbits on a regular basis.&quot;}</span></span></code></pre></div><p>用户输入词组 “Brown fox” 然后点击搜索按钮。事先，我们并不知道用户的搜索项是会在 title 还是在 body 字段中被找到，但是，用户很有可能是想搜索相关的词组。用肉眼判断，文档 2 的匹配度更高，因为它同时包括要查找的两个词：</p><p>现在运行以下 bool 查询：</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">GET</span><span style="color:#98C379;--shiki-dark:#98C379;"> /test-dsl-dis-max/_search</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">    &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        &quot;bool&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">            &quot;should&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                { </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;match&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;title&quot;:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;Brown fox&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> }},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                { </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;match&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;body&quot;:</span><span style="color:#98C379;--shiki-dark:#98C379;">  &quot;Brown fox&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> }}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            ]</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121427502.png" alt="image-20220805033531766" tabindex="0" loading="lazy"><figcaption>image-20220805033531766</figcaption></figure><p>为了理解导致这样的原因，需要看下如何计算评分的</p><ul><li><strong>should 条件的计算分数</strong></li></ul><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">GET</span><span style="color:#98C379;--shiki-dark:#98C379;"> /test-dsl-dis-max/_search</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">    &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        &quot;bool&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">            &quot;should&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                { </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;match&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;title&quot;:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;Brown fox&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> }},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                { </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;match&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;body&quot;:</span><span style="color:#98C379;--shiki-dark:#98C379;">  &quot;Brown fox&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> }}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            ]</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>要计算上述分数，首先要计算match的分数</p><blockquote><p>通过把Brown fox 拆词，分别计算每篇文档的分数</p></blockquote><ol><li>第一个match 中 <code>brown的分数</code></li></ol><p>doc 1 分数 = 0.6931471</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121427535.png" alt="image-20220805033748897" tabindex="0" loading="lazy"><figcaption>image-20220805033748897</figcaption></figure><ol><li>title中没有fox，所以第一个match 中 <code>brown fox 的分数 = brown分数 + 0 = 0.6931471</code></li></ol><p>doc 1 分数 = 0.6931471 + 0 = 0.6931471</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121427568.png" alt="image-20220805033933397" tabindex="0" loading="lazy"><figcaption>image-20220805033933397</figcaption></figure><ol><li>第二个 match 中 <code>brown分数</code></li></ol><p>doc 1 分数 = 0.21110919</p><p>doc 2 分数 = 0.160443</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121427595.png" alt="image-20220805034020096" tabindex="0" loading="lazy"><figcaption>image-20220805034020096</figcaption></figure><ol><li>第二个 match 中 <code>fox分数</code></li></ol><p>doc 1 分数 = 0</p><p>doc 2 分数 = 0.60996956</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121427619.png" alt="image-20220805034053756" tabindex="0" loading="lazy"><figcaption>image-20220805034053756</figcaption></figure><ol><li>所以第二个 match 中 <code>brown fox分数 = brown分数 + fox分数</code></li></ol><p>doc 1 分数 = 0.21110919 + 0 = 0.21110919</p><p>doc 2 分数 = 0.160443 + 0.60996956 = 0.77041256</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121427649.png" alt="image-20220805034224993" tabindex="0" loading="lazy"><figcaption>image-20220805034224993</figcaption></figure><ol><li>所以整个语句分数， <code>should分数 = 第一个match + 第二个match分数</code></li></ol><p>doc 1 分数 = 0.6931471 + 0.21110919 = 0.90425634</p><p>doc 2 分数 = 0 + 0.77041256 = 0.77041256</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121427680.png" alt="image-20220805034325939" tabindex="0" loading="lazy"><figcaption>image-20220805034325939</figcaption></figure><ul><li><strong>引入了dis_max</strong></li></ul><p>不使用 bool 查询，可以使用 dis_max 即分离 最大化查询（Disjunction Max Query） 。分离（Disjunction）的意思是 或（or） ，这与可以把结合（conjunction）理解成 与（and） 相对应。分离最大化查询（Disjunction Max Query）指的是： 将任何与任一查询匹配的文档作为结果返回，但只将最佳匹配的评分作为查询的评分结果返回 ：</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">GET</span><span style="color:#98C379;--shiki-dark:#98C379;"> /test-dsl-dis-max/_search</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">    &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        &quot;dis_max&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">            &quot;queries&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                { </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;match&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;title&quot;:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;Brown fox&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> }},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                { </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;match&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;body&quot;:</span><span style="color:#98C379;--shiki-dark:#98C379;">  &quot;Brown fox&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> }}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            ],</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">            &quot;tie_breaker&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 0</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121427711.png" alt="image-20220805034447664" tabindex="0" loading="lazy"><figcaption>image-20220805034447664</figcaption></figure><p>0.77041256怎么来的呢？ 下文给你解释它如何计算出来的。</p><ul><li><strong>dis_max 条件的计算分数</strong></li></ul><p>分数 = 第一个匹配条件分数 + tie_breaker * 第二个匹配的条件的分数 ...</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">GET</span><span style="color:#98C379;--shiki-dark:#98C379;"> /test-dsl-dis-max/_search</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">    &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        &quot;dis_max&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">            &quot;queries&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                { </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;match&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;title&quot;:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;Brown fox&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> }},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                { </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;match&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;body&quot;:</span><span style="color:#98C379;--shiki-dark:#98C379;">  &quot;Brown fox&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> }}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            ],</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">            &quot;tie_breaker&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 0</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>doc 1 分数 = 0.6931471 + 0.21110919 * 0 = 0.6931471</p><p>doc 2 分数 = 0.77041256 = 0.77041256</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121427737.png" alt="image-20220805034624954" tabindex="0" loading="lazy"><figcaption>image-20220805034624954</figcaption></figure><p>这样你就能理解通过dis_max将doc 2 置前了， 当然这里如果缺省<code>tie_breaker</code>字段的话默认就是0，你还可以设置它的比例（在0到1之间）来控制排名。（显然值为1时和should查询是一致的）</p><h2 id="_5-function-score-函数查询" tabindex="-1"><a class="header-anchor" href="#_5-function-score-函数查询"><span>5. function_score(函数查询）</span></a></h2><blockquote><p>简而言之就是用自定义function的方式来计算_score。</p></blockquote><p>可以ES有哪些自定义function呢？</p><ul><li><code>script_score</code> 使用自定义的脚本来完全控制分值计算逻辑。如果你需要以上预定义函数之外的功能，可以根据需要通过脚本进行实现。</li><li><code>weight</code> 对每份文档适用一个简单的提升，且该提升不会被归约：当weight为2时，结果为2 * _score。</li><li><code>random_score</code> 使用一致性随机分值计算来对每个用户采用不同的结果排序方式，对相同用户仍然使用相同的排序方式。</li><li><code>field_value_factor</code> 使用文档中某个字段的值来改变_score，比如将受欢迎程度或者投票数量考虑在内。</li><li><code>衰减函数(Decay Function)</code> - <code>linear</code>，<code>exp</code>，<code>gauss</code></li></ul><h3 id="_5-1-例子" tabindex="-1"><a class="header-anchor" href="#_5-1-例子"><span>5.1 例子</span></a></h3><p>以最简单的random_score 为例</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">GET</span><span style="color:#98C379;--shiki-dark:#98C379;"> /_search</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">    &quot;function_score&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;match_all&quot;:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {}</span><span style="color:#98C379;--shiki-dark:#98C379;"> },</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;boost&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;5&quot;,</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;random_score&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {},</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;boost_mode&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;multiply&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>进一步的，它还可以使用上述function的组合(functions)</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">GET</span><span style="color:#98C379;--shiki-dark:#98C379;"> /_search</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">    &quot;function_score&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;match_all&quot;:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {}</span><span style="color:#98C379;--shiki-dark:#98C379;"> },</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;boost&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;5&quot;,</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;functions&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">          &quot;filter&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;match&quot;:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;test&quot;:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;bar&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> }</span><span style="color:#98C379;--shiki-dark:#98C379;"> },</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">          &quot;random_score&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {},</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">          &quot;weight&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 23</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        },</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">          &quot;filter&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;match&quot;:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;test&quot;:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;cat&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> }</span><span style="color:#98C379;--shiki-dark:#98C379;"> },</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">          &quot;weight&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 42</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      ],</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;max_boost&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> 42,</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;score_mode&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;max&quot;,</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;boost_mode&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;multiply&quot;,</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;min_score&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 42</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>script_score 可以使用如下方式</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">GET</span><span style="color:#98C379;--shiki-dark:#98C379;"> /_search</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">    &quot;function_score&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        &quot;match&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;message&quot;:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;elasticsearch&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      },</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;script_score&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        &quot;script&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">          &quot;source&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;Math.log(2 + doc[&#39;my-int&#39;].value)&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>更多相关内容，可以参考<a href="https://www.elastic.co/guide/en/elasticsearch/reference/7.12/query-dsl-function-score-query.html" target="_blank" rel="noopener noreferrer">官方文档</a></p><blockquote><p>PS: 形成体系化认知以后，具体用的时候查询下即可。</p></blockquote><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章"><span>参考文章</span></a></h2><p><a href="https://pdai.tech/md/db/nosql-es/elasticsearch-x-dsl-com.html" target="_blank" rel="noopener noreferrer"><strong>ES详解 - 查询：DSL查询之复合查询详解</strong></a></p>`,111)]))}const t=a(o,[["render",p],["__file","elasticsearch-x-dsl.html.vue"]]),c=JSON.parse('{"path":"/posts/Database/ES/elasticsearch-x-dsl.html","title":"ES详解 - 查询：DSL查询之复合查询详解","lang":"zh-CN","frontmatter":{"aliases":"ES详解 - 查询：DSL查询之复合查询详解","tags":null,"cssclass":null,"source":null,"order":80,"category":["ElasticSearch"],"created":"2024-02-22 10:49","updated":"2024-03-12 14:28","description":"ES详解 - 查询：DSL查询之复合查询详解 在查询中会有多种条件组合的查询，在ElasticSearch中叫复合查询。它提供了5种复合查询方式：bool query(布尔查询)、boosting query(提高查询)、constant_score（固定分数查询）、dis_max(最佳匹配查询）、function_score(函数查询）。 0. 复合...","watermark":true,"head":[["meta",{"property":"og:url","content":"https://springg.us.kg/posts/Database/ES/elasticsearch-x-dsl.html"}],["meta",{"property":"og:site_name","content":"mrjason’s Blog"}],["meta",{"property":"og:title","content":"ES详解 - 查询：DSL查询之复合查询详解"}],["meta",{"property":"og:description","content":"ES详解 - 查询：DSL查询之复合查询详解 在查询中会有多种条件组合的查询，在ElasticSearch中叫复合查询。它提供了5种复合查询方式：bool query(布尔查询)、boosting query(提高查询)、constant_score（固定分数查询）、dis_max(最佳匹配查询）、function_score(函数查询）。 0. 复合..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121427422.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-21T07:03:09.000Z"}],["meta",{"property":"article:author","content":"MrJason"}],["meta",{"property":"article:modified_time","content":"2024-10-21T07:03:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ES详解 - 查询：DSL查询之复合查询详解\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121427422.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121427469.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121427502.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121427535.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121427568.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121427595.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121427619.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121427649.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121427680.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121427711.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121427737.png\\"],\\"dateModified\\":\\"2024-10-21T07:03:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MrJason\\",\\"url\\":\\"https://springg.us.kg\\"}]}"]]},"headers":[{"level":2,"title":"0. 复合查询引入","slug":"_0-复合查询引入","link":"#_0-复合查询引入","children":[]},{"level":2,"title":"1. bool query(布尔查询)","slug":"_1-bool-query-布尔查询","link":"#_1-bool-query-布尔查询","children":[{"level":3,"title":"1.1 概念","slug":"_1-1-概念","link":"#_1-1-概念","children":[]},{"level":3,"title":"1.2 一些例子","slug":"_1-2-一些例子","link":"#_1-2-一些例子","children":[]}]},{"level":2,"title":"2. boosting query(提高查询)","slug":"_2-boosting-query-提高查询","link":"#_2-boosting-query-提高查询","children":[{"level":3,"title":"2.1 概念","slug":"_2-1-概念","link":"#_2-1-概念","children":[]},{"level":3,"title":"2.2 例子","slug":"_2-2-例子","link":"#_2-2-例子","children":[]}]},{"level":2,"title":"3. constant_score（固定分数查询）","slug":"_3-constant-score-固定分数查询","link":"#_3-constant-score-固定分数查询","children":[{"level":3,"title":"3.1 例子","slug":"_3-1-例子","link":"#_3-1-例子","children":[]}]},{"level":2,"title":"4. dis_max(最佳匹配查询）","slug":"_4-dis-max-最佳匹配查询","link":"#_4-dis-max-最佳匹配查询","children":[{"level":3,"title":"4.1 例子","slug":"_4-1-例子","link":"#_4-1-例子","children":[]}]},{"level":2,"title":"5. function_score(函数查询）","slug":"_5-function-score-函数查询","link":"#_5-function-score-函数查询","children":[{"level":3,"title":"5.1 例子","slug":"_5-1-例子","link":"#_5-1-例子","children":[]}]},{"level":2,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}],"git":{"createdTime":1729494189000,"updatedTime":1729494189000,"contributors":[{"name":"MrJason","email":"845886914@qq.com","commits":1}]},"readingTime":{"minutes":6.79,"words":2037},"filePathRelative":"posts/Database/ES/elasticsearch-x-dsl.md","localizedDate":"2024年10月21日","excerpt":"\\n<blockquote>\\n<p>在查询中会有多种条件组合的查询，在ElasticSearch中叫复合查询。它提供了5种复合查询方式：<strong>bool query(布尔查询)</strong>、<strong>boosting query(提高查询)</strong>、<strong>constant_score（固定分数查询）</strong>、<strong>dis_max(最佳匹配查询）</strong>、<strong>function_score(函数查询）</strong>。</p>\\n</blockquote>\\n<h2>0. 复合查询引入</h2>\\n<p>在前文中，我们使用<code>bool</code>查询来组合多个查询条件。</p>","autoDesc":true}');export{t as comp,c as data};
