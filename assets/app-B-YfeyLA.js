const __vite__fileDeps=["assets/design.html-Cv-fbXlq.js","assets/Mylink-CV2QR6lE.js","assets/public-api.html-DiqgZ3HX.js","assets/component-BTsgfgWb.js","assets/commonjsHelpers-Cpj98o6Y.js","assets/mermaid.core-D9r9FUVD.js","assets/vue-repl-CHZuOUVN.js","assets/commonjsHelpers-BFTU3MAI-BYTysl7I.js","assets/codemirror-editor-Pd-EP7bs.js","assets/APlayer.min-CAgWaKXK.js"],__vite__mapDeps=i=>i.map(i=>__vite__fileDeps[i]);
var Dy=Object.defineProperty;var _y=(s,a,n)=>a in s?Dy(s,a,{enumerable:!0,configurable:!0,writable:!0,value:n}):s[a]=n;var Mt=(s,a,n)=>(_y(s,typeof a!="symbol"?a+"":a,n),n);/**
* @vue/shared v3.5.12
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**//*! #__NO_SIDE_EFFECTS__ */function yo(s){const a=Object.create(null);for(const n of s.split(","))a[n]=1;return n=>n in a}const Es={},Ni=[],dn=()=>{},Sy=()=>!1,Ke=s=>s.charCodeAt(0)===111&&s.charCodeAt(1)===110&&(s.charCodeAt(2)>122||s.charCodeAt(2)<97),uo=s=>s.startsWith("onUpdate:"),Vs=Object.assign,Ao=(s,a)=>{const n=s.indexOf(a);n>-1&&s.splice(n,1)},wy=Object.prototype.hasOwnProperty,Cs=(s,a)=>wy.call(s,a),Z=Array.isArray,Hi=s=>Xe(s)==="[object Map]",le=s=>Xe(s)==="[object Set]",vp=s=>Xe(s)==="[object Date]",ts=s=>typeof s=="function",qs=s=>typeof s=="string",Ga=s=>typeof s=="symbol",Ls=s=>s!==null&&typeof s=="object",$d=s=>(Ls(s)||ts(s))&&ts(s.then)&&ts(s.catch),Qd=Object.prototype.toString,Xe=s=>Qd.call(s),xy=s=>Xe(s).slice(8,-1),Wd=s=>Xe(s)==="[object Object]",vo=s=>qs(s)&&s!=="NaN"&&s[0]!=="-"&&""+parseInt(s,10)===s,Ui=yo(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),kt=s=>{const a=Object.create(null);return n=>a[n]||(a[n]=s(n))},Ly=/-(\w)/g,ha=kt(s=>s.replace(Ly,(a,n)=>n?n.toUpperCase():"")),Ty=/\B([A-Z])/g,_n=kt(s=>s.replace(Ty,"-$1").toLowerCase()),Ye=kt(s=>s.charAt(0).toUpperCase()+s.slice(1)),jt=kt(s=>s?`on${Ye(s)}`:""),ua=(s,a)=>!Object.is(s,a),Rl=(s,...a)=>{for(let n=0;n<s.length;n++)s[n](...a)},Gd=(s,a,n,i=!1)=>{Object.defineProperty(s,a,{configurable:!0,enumerable:!1,writable:i,value:n})},Ul=s=>{const a=parseFloat(s);return isNaN(a)?s:a},Oy=s=>{const a=qs(s)?Number(s):NaN;return isNaN(a)?s:a};let mp;const ht=()=>mp||(mp=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function Ze(s){if(Z(s)){const a={};for(let n=0;n<s.length;n++){const i=s[n],e=qs(i)?Ry(i):Ze(i);if(e)for(const l in e)a[l]=e[l]}return a}else if(qs(s)||Ls(s))return s}const Jy=/;(?![^(]*\))/g,Iy=/:([^]+)/,Py=/\/\*[^]*?\*\//g;function Ry(s){const a={};return s.replace(Py,"").split(Jy).forEach(n=>{if(n){const i=n.split(Iy);i.length>1&&(a[i[0].trim()]=i[1].trim())}}),a}function Zi(s){let a="";if(qs(s))a=s;else if(Z(s))for(let n=0;n<s.length;n++){const i=Zi(s[n]);i&&(a+=i+" ")}else if(Ls(s))for(const n in s)s[n]&&(a+=n+" ");return a.trim()}function ye(s){if(!s)return null;let{class:a,style:n}=s;return a&&!qs(a)&&(s.class=Zi(a)),n&&(s.style=Ze(n)),s}const My="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",jy=yo(My);function Kd(s){return!!s||s===""}function qy(s,a){if(s.length!==a.length)return!1;let n=!0;for(let i=0;n&&i<s.length;i++)n=Fi(s[i],a[i]);return n}function Fi(s,a){if(s===a)return!0;let n=vp(s),i=vp(a);if(n||i)return n&&i?s.getTime()===a.getTime():!1;if(n=Ga(s),i=Ga(a),n||i)return s===a;if(n=Z(s),i=Z(a),n||i)return n&&i?qy(s,a):!1;if(n=Ls(s),i=Ls(a),n||i){if(!n||!i)return!1;const e=Object.keys(s).length,l=Object.keys(a).length;if(e!==l)return!1;for(const t in s){const r=s.hasOwnProperty(t),p=a.hasOwnProperty(t);if(r&&!p||!r&&p||!Fi(s[t],a[t]))return!1}}return String(s)===String(a)}function mo(s,a){return s.findIndex(n=>Fi(n,a))}const Xd=s=>!!(s&&s.__v_isRef===!0),Qn=s=>qs(s)?s:s==null?"":Z(s)||Ls(s)&&(s.toString===Qd||!ts(s.toString))?Xd(s)?Qn(s.value):JSON.stringify(s,Yd,2):String(s),Yd=(s,a)=>Xd(a)?Yd(s,a.value):Hi(a)?{[`Map(${a.size})`]:[...a.entries()].reduce((n,[i,e],l)=>(n[qt(i,l)+" =>"]=e,n),{})}:le(a)?{[`Set(${a.size})`]:[...a.values()].map(n=>qt(n))}:Ga(a)?qt(a):Ls(a)&&!Z(a)&&!Wd(a)?String(a):a,qt=(s,a="")=>{var n;return Ga(s)?`Symbol(${(n=s.description)!=null?n:a})`:s};/**
* @vue/reactivity v3.5.12
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let pa;class Vy{constructor(a=!1){this.detached=a,this._active=!0,this.effects=[],this.cleanups=[],this._isPaused=!1,this.parent=pa,!a&&pa&&(this.index=(pa.scopes||(pa.scopes=[])).push(this)-1)}get active(){return this._active}pause(){if(this._active){this._isPaused=!0;let a,n;if(this.scopes)for(a=0,n=this.scopes.length;a<n;a++)this.scopes[a].pause();for(a=0,n=this.effects.length;a<n;a++)this.effects[a].pause()}}resume(){if(this._active&&this._isPaused){this._isPaused=!1;let a,n;if(this.scopes)for(a=0,n=this.scopes.length;a<n;a++)this.scopes[a].resume();for(a=0,n=this.effects.length;a<n;a++)this.effects[a].resume()}}run(a){if(this._active){const n=pa;try{return pa=this,a()}finally{pa=n}}}on(){pa=this}off(){pa=this.parent}stop(a){if(this._active){let n,i;for(n=0,i=this.effects.length;n<i;n++)this.effects[n].stop();for(n=0,i=this.cleanups.length;n<i;n++)this.cleanups[n]();if(this.scopes)for(n=0,i=this.scopes.length;n<i;n++)this.scopes[n].stop(!0);if(!this.detached&&this.parent&&!a){const e=this.parent.scopes.pop();e&&e!==this&&(this.parent.scopes[this.index]=e,e.index=this.index)}this.parent=void 0,this._active=!1}}}function Zd(){return pa}function zy(s,a=!1){pa&&pa.cleanups.push(s)}let Ps;const Vt=new WeakSet;class sB{constructor(a){this.fn=a,this.deps=void 0,this.depsTail=void 0,this.flags=5,this.next=void 0,this.cleanup=void 0,this.scheduler=void 0,pa&&pa.active&&pa.effects.push(this)}pause(){this.flags|=64}resume(){this.flags&64&&(this.flags&=-65,Vt.has(this)&&(Vt.delete(this),this.trigger()))}notify(){this.flags&2&&!(this.flags&32)||this.flags&8||nB(this)}run(){if(!(this.flags&1))return this.fn();this.flags|=2,Ep(this),iB(this);const a=Ps,n=Qa;Ps=this,Qa=!0;try{return this.fn()}finally{eB(this),Ps=a,Qa=n,this.flags&=-3}}stop(){if(this.flags&1){for(let a=this.deps;a;a=a.nextDep)Co(a);this.deps=this.depsTail=void 0,Ep(this),this.onStop&&this.onStop(),this.flags&=-2}}trigger(){this.flags&64?Vt.add(this):this.scheduler?this.scheduler():this.runIfDirty()}runIfDirty(){br(this)&&this.run()}get dirty(){return br(this)}}let aB=0,Se,we;function nB(s,a=!1){if(s.flags|=8,a){s.next=we,we=s;return}s.next=Se,Se=s}function Eo(){aB++}function Fo(){if(--aB>0)return;if(we){let a=we;for(we=void 0;a;){const n=a.next;a.next=void 0,a.flags&=-9,a=n}}let s;for(;Se;){let a=Se;for(Se=void 0;a;){const n=a.next;if(a.next=void 0,a.flags&=-9,a.flags&1)try{a.trigger()}catch(i){s||(s=i)}a=n}}if(s)throw s}function iB(s){for(let a=s.deps;a;a=a.nextDep)a.version=-1,a.prevActiveLink=a.dep.activeLink,a.dep.activeLink=a}function eB(s){let a,n=s.depsTail,i=n;for(;i;){const e=i.prevDep;i.version===-1?(i===n&&(n=e),Co(i),Ny(i)):a=i,i.dep.activeLink=i.prevActiveLink,i.prevActiveLink=void 0,i=e}s.deps=a,s.depsTail=n}function br(s){for(let a=s.deps;a;a=a.nextDep)if(a.dep.version!==a.version||a.dep.computed&&(lB(a.dep.computed)||a.dep.version!==a.version))return!0;return!!s._dirty}function lB(s){if(s.flags&4&&!(s.flags&16)||(s.flags&=-17,s.globalVersion===Ie))return;s.globalVersion=Ie;const a=s.dep;if(s.flags|=2,a.version>0&&!s.isSSR&&s.deps&&!br(s)){s.flags&=-3;return}const n=Ps,i=Qa;Ps=s,Qa=!0;try{iB(s);const e=s.fn(s._value);(a.version===0||ua(e,s._value))&&(s._value=e,a.version++)}catch(e){throw a.version++,e}finally{Ps=n,Qa=i,eB(s),s.flags&=-3}}function Co(s,a=!1){const{dep:n,prevSub:i,nextSub:e}=s;if(i&&(i.nextSub=e,s.prevSub=void 0),e&&(e.prevSub=i,s.nextSub=void 0),n.subs===s&&(n.subs=i,!i&&n.computed)){n.computed.flags&=-5;for(let l=n.computed.deps;l;l=l.nextDep)Co(l,!0)}!a&&!--n.sc&&n.map&&n.map.delete(n.key)}function Ny(s){const{prevDep:a,nextDep:n}=s;a&&(a.nextDep=n,s.prevDep=void 0),n&&(n.prevDep=a,s.nextDep=void 0)}let Qa=!0;const tB=[];function Xn(){tB.push(Qa),Qa=!1}function Yn(){const s=tB.pop();Qa=s===void 0?!0:s}function Ep(s){const{cleanup:a}=s;if(s.cleanup=void 0,a){const n=Ps;Ps=void 0;try{a()}finally{Ps=n}}}let Ie=0;class Hy{constructor(a,n){this.sub=a,this.dep=n,this.version=n.version,this.nextDep=this.prevDep=this.nextSub=this.prevSub=this.prevActiveLink=void 0}}class yt{constructor(a){this.computed=a,this.version=0,this.activeLink=void 0,this.subs=void 0,this.map=void 0,this.key=void 0,this.sc=0}track(a){if(!Ps||!Qa||Ps===this.computed)return;let n=this.activeLink;if(n===void 0||n.sub!==Ps)n=this.activeLink=new Hy(Ps,this),Ps.deps?(n.prevDep=Ps.depsTail,Ps.depsTail.nextDep=n,Ps.depsTail=n):Ps.deps=Ps.depsTail=n,rB(n);else if(n.version===-1&&(n.version=this.version,n.nextDep)){const i=n.nextDep;i.prevDep=n.prevDep,n.prevDep&&(n.prevDep.nextDep=i),n.prevDep=Ps.depsTail,n.nextDep=void 0,Ps.depsTail.nextDep=n,Ps.depsTail=n,Ps.deps===n&&(Ps.deps=i)}return n}trigger(a){this.version++,Ie++,this.notify(a)}notify(a){Eo();try{for(let n=this.subs;n;n=n.prevSub)n.sub.notify()&&n.sub.dep.notify()}finally{Fo()}}}function rB(s){if(s.dep.sc++,s.sub.flags&4){const a=s.dep.computed;if(a&&!s.dep.subs){a.flags|=20;for(let i=a.deps;i;i=i.nextDep)rB(i)}const n=s.dep.subs;n!==s&&(s.prevSub=n,n&&(n.nextSub=s)),s.dep.subs=s}}const $l=new WeakMap,ui=Symbol(""),fr=Symbol(""),Pe=Symbol("");function aa(s,a,n){if(Qa&&Ps){let i=$l.get(s);i||$l.set(s,i=new Map);let e=i.get(n);e||(i.set(n,e=new yt),e.map=i,e.key=n),e.track()}}function gn(s,a,n,i,e,l){const t=$l.get(s);if(!t){Ie++;return}const r=p=>{p&&p.trigger()};if(Eo(),a==="clear")t.forEach(r);else{const p=Z(s),c=p&&vo(n);if(p&&n==="length"){const B=Number(i);t.forEach((k,h)=>{(h==="length"||h===Pe||!Ga(h)&&h>=B)&&r(k)})}else switch((n!==void 0||t.has(void 0))&&r(t.get(n)),c&&r(t.get(Pe)),a){case"add":p?c&&r(t.get("length")):(r(t.get(ui)),Hi(s)&&r(t.get(fr)));break;case"delete":p||(r(t.get(ui)),Hi(s)&&r(t.get(fr)));break;case"set":Hi(s)&&r(t.get(ui));break}}Fo()}function Uy(s,a){const n=$l.get(s);return n&&n.get(a)}function xi(s){const a=vs(s);return a===s?a:(aa(a,"iterate",Pe),Ma(s)?a:a.map(na))}function ut(s){return aa(s=vs(s),"iterate",Pe),s}const $y={__proto__:null,[Symbol.iterator](){return zt(this,Symbol.iterator,na)},concat(...s){return xi(this).concat(...s.map(a=>Z(a)?xi(a):a))},entries(){return zt(this,"entries",s=>(s[1]=na(s[1]),s))},every(s,a){return un(this,"every",s,a,void 0,arguments)},filter(s,a){return un(this,"filter",s,a,n=>n.map(na),arguments)},find(s,a){return un(this,"find",s,a,na,arguments)},findIndex(s,a){return un(this,"findIndex",s,a,void 0,arguments)},findLast(s,a){return un(this,"findLast",s,a,na,arguments)},findLastIndex(s,a){return un(this,"findLastIndex",s,a,void 0,arguments)},forEach(s,a){return un(this,"forEach",s,a,void 0,arguments)},includes(...s){return Nt(this,"includes",s)},indexOf(...s){return Nt(this,"indexOf",s)},join(s){return xi(this).join(s)},lastIndexOf(...s){return Nt(this,"lastIndexOf",s)},map(s,a){return un(this,"map",s,a,void 0,arguments)},pop(){return ue(this,"pop")},push(...s){return ue(this,"push",s)},reduce(s,...a){return Fp(this,"reduce",s,a)},reduceRight(s,...a){return Fp(this,"reduceRight",s,a)},shift(){return ue(this,"shift")},some(s,a){return un(this,"some",s,a,void 0,arguments)},splice(...s){return ue(this,"splice",s)},toReversed(){return xi(this).toReversed()},toSorted(s){return xi(this).toSorted(s)},toSpliced(...s){return xi(this).toSpliced(...s)},unshift(...s){return ue(this,"unshift",s)},values(){return zt(this,"values",na)}};function zt(s,a,n){const i=ut(s),e=i[a]();return i!==s&&!Ma(s)&&(e._next=e.next,e.next=()=>{const l=e._next();return l.value&&(l.value=n(l.value)),l}),e}const Qy=Array.prototype;function un(s,a,n,i,e,l){const t=ut(s),r=t!==s&&!Ma(s),p=t[a];if(p!==Qy[a]){const k=p.apply(s,l);return r?na(k):k}let c=n;t!==s&&(r?c=function(k,h){return n.call(this,na(k),h,s)}:n.length>2&&(c=function(k,h){return n.call(this,k,h,s)}));const B=p.call(t,c,i);return r&&e?e(B):B}function Fp(s,a,n,i){const e=ut(s);let l=n;return e!==s&&(Ma(s)?n.length>3&&(l=function(t,r,p){return n.call(this,t,r,p,s)}):l=function(t,r,p){return n.call(this,t,na(r),p,s)}),e[a](l,...i)}function Nt(s,a,n){const i=vs(s);aa(i,"iterate",Pe);const e=i[a](...n);return(e===-1||e===!1)&&fo(n[0])?(n[0]=vs(n[0]),i[a](...n)):e}function ue(s,a,n=[]){Xn(),Eo();const i=vs(s)[a].apply(s,n);return Fo(),Yn(),i}const Wy=yo("__proto__,__v_isRef,__isVue"),oB=new Set(Object.getOwnPropertyNames(Symbol).filter(s=>s!=="arguments"&&s!=="caller").map(s=>Symbol[s]).filter(Ga));function Gy(s){Ga(s)||(s=String(s));const a=vs(this);return aa(a,"has",s),a.hasOwnProperty(s)}class pB{constructor(a=!1,n=!1){this._isReadonly=a,this._isShallow=n}get(a,n,i){const e=this._isReadonly,l=this._isShallow;if(n==="__v_isReactive")return!e;if(n==="__v_isReadonly")return e;if(n==="__v_isShallow")return l;if(n==="__v_raw")return i===(e?l?lu:kB:l?BB:dB).get(a)||Object.getPrototypeOf(a)===Object.getPrototypeOf(i)?a:void 0;const t=Z(a);if(!e){let p;if(t&&(p=$y[n]))return p;if(n==="hasOwnProperty")return Gy}const r=Reflect.get(a,n,Ns(a)?a:i);return(Ga(n)?oB.has(n):Wy(n))||(e||aa(a,"get",n),l)?r:Ns(r)?t&&vo(n)?r:r.value:Ls(r)?e?Zn(r):te(r):r}}class cB extends pB{constructor(a=!1){super(!1,a)}set(a,n,i,e){let l=a[n];if(!this._isShallow){const p=Ci(l);if(!Ma(i)&&!Ci(i)&&(l=vs(l),i=vs(i)),!Z(a)&&Ns(l)&&!Ns(i))return p?!1:(l.value=i,!0)}const t=Z(a)&&vo(n)?Number(n)<a.length:Cs(a,n),r=Reflect.set(a,n,i,Ns(a)?a:e);return a===vs(e)&&(t?ua(i,l)&&gn(a,"set",n,i):gn(a,"add",n,i)),r}deleteProperty(a,n){const i=Cs(a,n);a[n];const e=Reflect.deleteProperty(a,n);return e&&i&&gn(a,"delete",n,void 0),e}has(a,n){const i=Reflect.has(a,n);return(!Ga(n)||!oB.has(n))&&aa(a,"has",n),i}ownKeys(a){return aa(a,"iterate",Z(a)?"length":ui),Reflect.ownKeys(a)}}class Ky extends pB{constructor(a=!1){super(!0,a)}set(a,n){return!0}deleteProperty(a,n){return!0}}const Xy=new cB,Yy=new Ky,Zy=new cB(!0);const Dr=s=>s,ml=s=>Reflect.getPrototypeOf(s);function su(s,a,n){return function(...i){const e=this.__v_raw,l=vs(e),t=Hi(l),r=s==="entries"||s===Symbol.iterator&&t,p=s==="keys"&&t,c=e[s](...i),B=n?Dr:a?_r:na;return!a&&aa(l,"iterate",p?fr:ui),{next(){const{value:k,done:h}=c.next();return h?{value:k,done:h}:{value:r?[B(k[0]),B(k[1])]:B(k),done:h}},[Symbol.iterator](){return this}}}}function El(s){return function(...a){return s==="delete"?!1:s==="clear"?void 0:this}}function au(s,a){const n={get(e){const l=this.__v_raw,t=vs(l),r=vs(e);s||(ua(e,r)&&aa(t,"get",e),aa(t,"get",r));const{has:p}=ml(t),c=a?Dr:s?_r:na;if(p.call(t,e))return c(l.get(e));if(p.call(t,r))return c(l.get(r));l!==t&&l.get(e)},get size(){const e=this.__v_raw;return!s&&aa(vs(e),"iterate",ui),Reflect.get(e,"size",e)},has(e){const l=this.__v_raw,t=vs(l),r=vs(e);return s||(ua(e,r)&&aa(t,"has",e),aa(t,"has",r)),e===r?l.has(e):l.has(e)||l.has(r)},forEach(e,l){const t=this,r=t.__v_raw,p=vs(r),c=a?Dr:s?_r:na;return!s&&aa(p,"iterate",ui),r.forEach((B,k)=>e.call(l,c(B),c(k),t))}};return Vs(n,s?{add:El("add"),set:El("set"),delete:El("delete"),clear:El("clear")}:{add(e){!a&&!Ma(e)&&!Ci(e)&&(e=vs(e));const l=vs(this);return ml(l).has.call(l,e)||(l.add(e),gn(l,"add",e,e)),this},set(e,l){!a&&!Ma(l)&&!Ci(l)&&(l=vs(l));const t=vs(this),{has:r,get:p}=ml(t);let c=r.call(t,e);c||(e=vs(e),c=r.call(t,e));const B=p.call(t,e);return t.set(e,l),c?ua(l,B)&&gn(t,"set",e,l):gn(t,"add",e,l),this},delete(e){const l=vs(this),{has:t,get:r}=ml(l);let p=t.call(l,e);p||(e=vs(e),p=t.call(l,e)),r&&r.call(l,e);const c=l.delete(e);return p&&gn(l,"delete",e,void 0),c},clear(){const e=vs(this),l=e.size!==0,t=e.clear();return l&&gn(e,"clear",void 0,void 0),t}}),["keys","values","entries",Symbol.iterator].forEach(e=>{n[e]=su(e,s,a)}),n}function go(s,a){const n=au(s,a);return(i,e,l)=>e==="__v_isReactive"?!s:e==="__v_isReadonly"?s:e==="__v_raw"?i:Reflect.get(Cs(n,e)&&e in i?n:i,e,l)}const nu={get:go(!1,!1)},iu={get:go(!1,!0)},eu={get:go(!0,!1)};const dB=new WeakMap,BB=new WeakMap,kB=new WeakMap,lu=new WeakMap;function tu(s){switch(s){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function ru(s){return s.__v_skip||!Object.isExtensible(s)?0:tu(xy(s))}function te(s){return Ci(s)?s:bo(s,!1,Xy,nu,dB)}function hB(s){return bo(s,!1,Zy,iu,BB)}function Zn(s){return bo(s,!0,Yy,eu,kB)}function bo(s,a,n,i,e){if(!Ls(s)||s.__v_raw&&!(a&&s.__v_isReactive))return s;const l=e.get(s);if(l)return l;const t=ru(s);if(t===0)return s;const r=new Proxy(s,t===2?i:n);return e.set(s,r),r}function Ai(s){return Ci(s)?Ai(s.__v_raw):!!(s&&s.__v_isReactive)}function Ci(s){return!!(s&&s.__v_isReadonly)}function Ma(s){return!!(s&&s.__v_isShallow)}function fo(s){return s?!!s.__v_raw:!1}function vs(s){const a=s&&s.__v_raw;return a?vs(a):s}function ou(s){return!Cs(s,"__v_skip")&&Object.isExtensible(s)&&Gd(s,"__v_skip",!0),s}const na=s=>Ls(s)?te(s):s,_r=s=>Ls(s)?Zn(s):s;function Ns(s){return s?s.__v_isRef===!0:!1}function M(s){return yB(s,!1)}function ms(s){return yB(s,!0)}function yB(s,a){return Ns(s)?s:new pu(s,a)}class pu{constructor(a,n){this.dep=new yt,this.__v_isRef=!0,this.__v_isShallow=!1,this._rawValue=n?a:vs(a),this._value=n?a:na(a),this.__v_isShallow=n}get value(){return this.dep.track(),this._value}set value(a){const n=this._rawValue,i=this.__v_isShallow||Ma(a)||Ci(a);a=i?a:vs(a),ua(a,n)&&(this._rawValue=a,this._value=i?a:na(a),this.dep.trigger())}}function $a(s){return Ns(s)?s.value:s}const cu={get:(s,a,n)=>a==="__v_raw"?s:$a(Reflect.get(s,a,n)),set:(s,a,n,i)=>{const e=s[a];return Ns(e)&&!Ns(n)?(e.value=n,!0):Reflect.set(s,a,n,i)}};function uB(s){return Ai(s)?s:new Proxy(s,cu)}class du{constructor(a){this.__v_isRef=!0,this._value=void 0;const n=this.dep=new yt,{get:i,set:e}=a(n.track.bind(n),n.trigger.bind(n));this._get=i,this._set=e}get value(){return this._value=this._get()}set value(a){this._set(a)}}function Do(s){return new du(s)}function P9(s){const a=Z(s)?new Array(s.length):{};for(const n in s)a[n]=AB(s,n);return a}class Bu{constructor(a,n,i){this._object=a,this._key=n,this._defaultValue=i,this.__v_isRef=!0,this._value=void 0}get value(){const a=this._object[this._key];return this._value=a===void 0?this._defaultValue:a}set value(a){this._object[this._key]=a}get dep(){return Uy(vs(this._object),this._key)}}class ku{constructor(a){this._getter=a,this.__v_isRef=!0,this.__v_isReadonly=!0,this._value=void 0}get value(){return this._value=this._getter()}}function Di(s,a,n){return Ns(s)?s:ts(s)?new ku(s):Ls(s)&&arguments.length>1?AB(s,a,n):M(s)}function AB(s,a,n){const i=s[a];return Ns(i)?i:new Bu(s,a,n)}class hu{constructor(a,n,i){this.fn=a,this.setter=n,this._value=void 0,this.dep=new yt(this),this.__v_isRef=!0,this.deps=void 0,this.depsTail=void 0,this.flags=16,this.globalVersion=Ie-1,this.next=void 0,this.effect=this,this.__v_isReadonly=!n,this.isSSR=i}notify(){if(this.flags|=16,!(this.flags&8)&&Ps!==this)return nB(this,!0),!0}get value(){const a=this.dep.track();return lB(this),a&&(a.version=this.dep.version),this._value}set value(a){this.setter&&this.setter(a)}}function yu(s,a,n=!1){let i,e;return ts(s)?i=s:(i=s.get,e=s.set),new hu(i,e,n)}const Fl={},Ql=new WeakMap;let ci;function uu(s,a=!1,n=ci){if(n){let i=Ql.get(n);i||Ql.set(n,i=[]),i.push(s)}}function Au(s,a,n=Es){const{immediate:i,deep:e,once:l,scheduler:t,augmentJob:r,call:p}=n,c=f=>e?f:Ma(f)||e===!1||e===0?bn(f,1):bn(f);let B,k,h,y,u=!1,A=!1;if(Ns(s)?(k=()=>s.value,u=Ma(s)):Ai(s)?(k=()=>c(s),u=!0):Z(s)?(A=!0,u=s.some(f=>Ai(f)||Ma(f)),k=()=>s.map(f=>{if(Ns(f))return f.value;if(Ai(f))return c(f);if(ts(f))return p?p(f,2):f()})):ts(s)?a?k=p?()=>p(s,2):s:k=()=>{if(h){Xn();try{h()}finally{Yn()}}const f=ci;ci=B;try{return p?p(s,3,[y]):s(y)}finally{ci=f}}:k=dn,a&&e){const f=k,x=e===!0?1/0:e;k=()=>bn(f(),x)}const F=Zd(),C=()=>{B.stop(),F&&Ao(F.effects,B)};if(l&&a){const f=a;a=(...x)=>{f(...x),C()}}let b=A?new Array(s.length).fill(Fl):Fl;const m=f=>{if(!(!(B.flags&1)||!B.dirty&&!f))if(a){const x=B.run();if(e||u||(A?x.some((V,P)=>ua(V,b[P])):ua(x,b))){h&&h();const V=ci;ci=B;try{const P=[x,b===Fl?void 0:A&&b[0]===Fl?[]:b,y];p?p(a,3,P):a(...P),b=x}finally{ci=V}}}else B.run()};return r&&r(m),B=new sB(k),B.scheduler=t?()=>t(m,!1):m,y=f=>uu(f,!1,B),h=B.onStop=()=>{const f=Ql.get(B);if(f){if(p)p(f,4);else for(const x of f)x();Ql.delete(B)}},a?i?m(!0):b=B.run():t?t(m.bind(null,!0),!0):B.run(),C.pause=B.pause.bind(B),C.resume=B.resume.bind(B),C.stop=C,C}function bn(s,a=1/0,n){if(a<=0||!Ls(s)||s.__v_skip||(n=n||new Set,n.has(s)))return s;if(n.add(s),a--,Ns(s))bn(s.value,a,n);else if(Z(s))for(let i=0;i<s.length;i++)bn(s[i],a,n);else if(le(s)||Hi(s))s.forEach(i=>{bn(i,a,n)});else if(Wd(s)){for(const i in s)bn(s[i],a,n);for(const i of Object.getOwnPropertySymbols(s))Object.prototype.propertyIsEnumerable.call(s,i)&&bn(s[i],a,n)}return s}/**
* @vue/runtime-core v3.5.12
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function sl(s,a,n,i){try{return i?s(...i):s()}catch(e){al(e,a,n)}}function Ka(s,a,n,i){if(ts(s)){const e=sl(s,a,n,i);return e&&$d(e)&&e.catch(l=>{al(l,a,n)}),e}if(Z(s)){const e=[];for(let l=0;l<s.length;l++)e.push(Ka(s[l],a,n,i));return e}}function al(s,a,n,i=!0){const e=a?a.vnode:null,{errorHandler:l,throwUnhandledErrorInProduction:t}=a&&a.appContext.config||Es;if(a){let r=a.parent;const p=a.proxy,c=`https://vuejs.org/error-reference/#runtime-${n}`;for(;r;){const B=r.ec;if(B){for(let k=0;k<B.length;k++)if(B[k](s,p,c)===!1)return}r=r.parent}if(l){Xn(),sl(l,null,10,[s,p,c]),Yn();return}}vu(s,n,e,i,t)}function vu(s,a,n,i=!0,e=!1){if(e)throw s;console.error(s)}const da=[];let on=-1;const $i=[];let Vn=null,Pi=0;const vB=Promise.resolve();let Wl=null;function ya(s){const a=Wl||vB;return s?a.then(this?s.bind(this):s):a}function mu(s){let a=on+1,n=da.length;for(;a<n;){const i=a+n>>>1,e=da[i],l=Re(e);l<s||l===s&&e.flags&2?a=i+1:n=i}return a}function _o(s){if(!(s.flags&1)){const a=Re(s),n=da[da.length-1];!n||!(s.flags&2)&&a>=Re(n)?da.push(s):da.splice(mu(a),0,s),s.flags|=1,mB()}}function mB(){Wl||(Wl=vB.then(EB))}function Eu(s){Z(s)?$i.push(...s):Vn&&s.id===-1?Vn.splice(Pi+1,0,s):s.flags&1||($i.push(s),s.flags|=1),mB()}function Cp(s,a,n=on+1){for(;n<da.length;n++){const i=da[n];if(i&&i.flags&2){if(s&&i.id!==s.uid)continue;da.splice(n,1),n--,i.flags&4&&(i.flags&=-2),i(),i.flags&4||(i.flags&=-2)}}}function Gl(s){if($i.length){const a=[...new Set($i)].sort((n,i)=>Re(n)-Re(i));if($i.length=0,Vn){Vn.push(...a);return}for(Vn=a,Pi=0;Pi<Vn.length;Pi++){const n=Vn[Pi];n.flags&4&&(n.flags&=-2),n.flags&8||n(),n.flags&=-2}Vn=null,Pi=0}}const Re=s=>s.id==null?s.flags&2?-1:1/0:s.id;function EB(s){try{for(on=0;on<da.length;on++){const a=da[on];a&&!(a.flags&8)&&(a.flags&4&&(a.flags&=-2),sl(a,a.i,a.i?15:14),a.flags&4||(a.flags&=-2))}}finally{for(;on<da.length;on++){const a=da[on];a&&(a.flags&=-2)}on=-1,da.length=0,Gl(),Wl=null,(da.length||$i.length)&&EB()}}let Ks=null,FB=null;function Kl(s){const a=Ks;return Ks=s,FB=s&&s.type.__scopeId||null,a}function cn(s,a=Ks,n){if(!a||s._n)return s;const i=(...e)=>{i._d&&Op(-1);const l=Kl(a);let t;try{t=s(...e)}finally{Kl(l),i._d&&Op(1)}return t};return i._n=!0,i._c=!0,i._d=!0,i}function Fu(s,a){if(Ks===null)return s;const n=mt(Ks),i=s.dirs||(s.dirs=[]);for(let e=0;e<a.length;e++){let[l,t,r,p=Es]=a[e];l&&(ts(l)&&(l={mounted:l,updated:l}),l.deep&&bn(t),i.push({dir:l,instance:n,value:t,oldValue:void 0,arg:r,modifiers:p}))}return s}function pn(s,a,n,i){const e=s.dirs,l=a&&a.dirs;for(let t=0;t<e.length;t++){const r=e[t];l&&(r.oldValue=l[t].value);let p=r.dir[i];p&&(Xn(),Ka(p,n,8,[s.el,r,s,a]),Yn())}}const Cu=Symbol("_vte"),CB=s=>s.__isTeleport,zn=Symbol("_leaveCb"),Cl=Symbol("_enterCb");function gB(){const s={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return as(()=>{s.isMounted=!0}),il(()=>{s.isUnmounting=!0}),s}const Ja=[Function,Array],bB={mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:Ja,onEnter:Ja,onAfterEnter:Ja,onEnterCancelled:Ja,onBeforeLeave:Ja,onLeave:Ja,onAfterLeave:Ja,onLeaveCancelled:Ja,onBeforeAppear:Ja,onAppear:Ja,onAfterAppear:Ja,onAppearCancelled:Ja},fB=s=>{const a=s.subTree;return a.component?fB(a.component):a},gu={name:"BaseTransition",props:bB,setup(s,{slots:a}){const n=ai(),i=gB();return()=>{const e=a.default&&So(a.default(),!0);if(!e||!e.length)return;const l=DB(e),t=vs(s),{mode:r}=t;if(i.isLeaving)return Ht(l);const p=gp(l);if(!p)return Ht(l);let c=Me(p,t,i,n,h=>c=h);p.type!==ia&&gi(p,c);const B=n.subTree,k=B&&gp(B);if(k&&k.type!==ia&&!di(p,k)&&fB(n).type!==ia){const h=Me(k,t,i,n);if(gi(k,h),r==="out-in"&&p.type!==ia)return i.isLeaving=!0,h.afterLeave=()=>{i.isLeaving=!1,n.job.flags&8||n.update(),delete h.afterLeave},Ht(l);r==="in-out"&&p.type!==ia&&(h.delayLeave=(y,u,A)=>{const F=_B(i,k);F[String(k.key)]=k,y[zn]=()=>{u(),y[zn]=void 0,delete c.delayedLeave},c.delayedLeave=A})}return l}}};function DB(s){let a=s[0];if(s.length>1){for(const n of s)if(n.type!==ia){a=n;break}}return a}const bu=gu;function _B(s,a){const{leavingVNodes:n}=s;let i=n.get(a.type);return i||(i=Object.create(null),n.set(a.type,i)),i}function Me(s,a,n,i,e){const{appear:l,mode:t,persisted:r=!1,onBeforeEnter:p,onEnter:c,onAfterEnter:B,onEnterCancelled:k,onBeforeLeave:h,onLeave:y,onAfterLeave:u,onLeaveCancelled:A,onBeforeAppear:F,onAppear:C,onAfterAppear:b,onAppearCancelled:m}=a,f=String(s.key),x=_B(n,s),V=(j,T)=>{j&&Ka(j,i,9,T)},P=(j,T)=>{const H=T[1];V(j,T),Z(j)?j.every(R=>R.length<=1)&&H():j.length<=1&&H()},W={mode:t,persisted:r,beforeEnter(j){let T=p;if(!n.isMounted)if(l)T=F||p;else return;j[zn]&&j[zn](!0);const H=x[f];H&&di(s,H)&&H.el[zn]&&H.el[zn](),V(T,[j])},enter(j){let T=c,H=B,R=k;if(!n.isMounted)if(l)T=C||c,H=b||B,R=m||k;else return;let ns=!1;const bs=j[Cl]=Js=>{ns||(ns=!0,Js?V(R,[j]):V(H,[j]),W.delayedLeave&&W.delayedLeave(),j[Cl]=void 0)};T?P(T,[j,bs]):bs()},leave(j,T){const H=String(s.key);if(j[Cl]&&j[Cl](!0),n.isUnmounting)return T();V(h,[j]);let R=!1;const ns=j[zn]=bs=>{R||(R=!0,T(),bs?V(A,[j]):V(u,[j]),j[zn]=void 0,x[H]===s&&delete x[H])};x[H]=s,y?P(y,[j,ns]):ns()},clone(j){const T=Me(j,a,n,i,e);return e&&e(T),T}};return W}function Ht(s){if(nl(s))return s=Wn(s),s.children=null,s}function gp(s){if(!nl(s))return CB(s.type)&&s.children?DB(s.children):s;const{shapeFlag:a,children:n}=s;if(n){if(a&16)return n[0];if(a&32&&ts(n.default))return n.default()}}function gi(s,a){s.shapeFlag&6&&s.component?(s.transition=a,gi(s.component.subTree,a)):s.shapeFlag&128?(s.ssContent.transition=a.clone(s.ssContent),s.ssFallback.transition=a.clone(s.ssFallback)):s.transition=a}function So(s,a=!1,n){let i=[],e=0;for(let l=0;l<s.length;l++){let t=s[l];const r=n==null?t.key:String(n)+String(t.key!=null?t.key:l);t.type===js?(t.patchFlag&128&&e++,i=i.concat(So(t.children,a,r))):(a||t.type!==ia)&&i.push(r!=null?Wn(t,{key:r}):t)}if(e>1)for(let l=0;l<i.length;l++)i[l].patchFlag=-2;return i}/*! #__NO_SIDE_EFFECTS__ */function L(s,a){return ts(s)?Vs({name:s.name},a,{setup:s}):s}function wo(s){s.ids=[s.ids[0]+s.ids[2]+++"-",0,0]}function R9(s){const a=ai(),n=ms(null);if(a){const e=a.refs===Es?a.refs={}:a.refs;Object.defineProperty(e,s,{enumerable:!0,get:()=>n.value,set:l=>n.value=l})}return n}function Xl(s,a,n,i,e=!1){if(Z(s)){s.forEach((u,A)=>Xl(u,a&&(Z(a)?a[A]:a),n,i,e));return}if(vi(i)&&!e)return;const l=i.shapeFlag&4?mt(i.component):i.el,t=e?null:l,{i:r,r:p}=s,c=a&&a.r,B=r.refs===Es?r.refs={}:r.refs,k=r.setupState,h=vs(k),y=k===Es?()=>!1:u=>Cs(h,u);if(c!=null&&c!==p&&(qs(c)?(B[c]=null,y(c)&&(k[c]=null)):Ns(c)&&(c.value=null)),ts(p))sl(p,r,12,[t,B]);else{const u=qs(p),A=Ns(p);if(u||A){const F=()=>{if(s.f){const C=u?y(p)?k[p]:B[p]:p.value;e?Z(C)&&Ao(C,l):Z(C)?C.includes(l)||C.push(l):u?(B[p]=[l],y(p)&&(k[p]=B[p])):(p.value=[l],s.k&&(B[s.k]=p.value))}else u?(B[p]=t,y(p)&&(k[p]=t)):A&&(p.value=t,s.k&&(B[s.k]=t))};t?(F.id=-1,Da(F,n)):F()}}}let bp=!1;const Li=()=>{bp||(console.error("Hydration completed but contains mismatches."),bp=!0)},fu=s=>s.namespaceURI.includes("svg")&&s.tagName!=="foreignObject",Du=s=>s.namespaceURI.includes("MathML"),gl=s=>{if(s.nodeType===1){if(fu(s))return"svg";if(Du(s))return"mathml"}},qi=s=>s.nodeType===8;function _u(s){const{mt:a,p:n,o:{patchProp:i,createText:e,nextSibling:l,parentNode:t,remove:r,insert:p,createComment:c}}=s,B=(m,f)=>{if(!f.hasChildNodes()){n(null,m,f),Gl(),f._vnode=m;return}k(f.firstChild,m,null,null,null),Gl(),f._vnode=m},k=(m,f,x,V,P,W=!1)=>{W=W||!!f.dynamicChildren;const j=qi(m)&&m.data==="[",T=()=>A(m,f,x,V,P,j),{type:H,ref:R,shapeFlag:ns,patchFlag:bs}=f;let Js=m.nodeType;f.el=m,bs===-2&&(W=!1,f.dynamicChildren=null);let G=null;switch(H){case mi:Js!==3?f.children===""?(p(f.el=e(""),t(m),m),G=m):G=T():(m.data!==f.children&&(Li(),m.data=f.children),G=l(m));break;case ia:b(m)?(G=l(m),C(f.el=m.content.firstChild,m,x)):Js!==8||j?G=T():G=l(m);break;case Wi:if(j&&(m=l(m),Js=m.nodeType),Js===1||Js===3){G=m;const es=!f.children.length;for(let K=0;K<f.staticCount;K++)es&&(f.children+=G.nodeType===1?G.outerHTML:G.data),K===f.staticCount-1&&(f.anchor=G),G=l(G);return j?l(G):G}else T();break;case js:j?G=u(m,f,x,V,P,W):G=T();break;default:if(ns&1)(Js!==1||f.type.toLowerCase()!==m.tagName.toLowerCase())&&!b(m)?G=T():G=h(m,f,x,V,P,W);else if(ns&6){f.slotScopeIds=P;const es=t(m);if(j?G=F(m):qi(m)&&m.data==="teleport start"?G=F(m,m.data,"teleport end"):G=l(m),a(f,es,null,x,V,gl(es),W),vi(f)){let K;j?(K=ds(js),K.anchor=G?G.previousSibling:es.lastChild):K=m.nodeType===3?Oo(""):ds("div"),K.el=m,f.component.subTree=K}}else ns&64?Js!==8?G=T():G=f.type.hydrate(m,f,x,V,P,W,s,y):ns&128&&(G=f.type.hydrate(m,f,x,V,gl(t(m)),P,W,s,k))}return R!=null&&Xl(R,null,V,f),G},h=(m,f,x,V,P,W)=>{W=W||!!f.dynamicChildren;const{type:j,props:T,patchFlag:H,shapeFlag:R,dirs:ns,transition:bs}=f,Js=j==="input"||j==="option";if(Js||H!==-1){ns&&pn(f,null,x,"created");let G=!1;if(b(m)){G=QB(null,bs)&&x&&x.vnode.props&&x.vnode.props.appear;const K=m.content.firstChild;G&&bs.beforeEnter(K),C(K,m,x),f.el=m=K}if(R&16&&!(T&&(T.innerHTML||T.textContent))){let K=y(m.firstChild,f,m,x,V,P,W);for(;K;){bl(m,1)||Li();const Ss=K;K=K.nextSibling,r(Ss)}}else if(R&8){let K=f.children;K[0]===`
`&&(m.tagName==="PRE"||m.tagName==="TEXTAREA")&&(K=K.slice(1)),m.textContent!==K&&(bl(m,0)||Li(),m.textContent=f.children)}if(T){if(Js||!W||H&48){const K=m.tagName.includes("-");for(const Ss in T)(Js&&(Ss.endsWith("value")||Ss==="indeterminate")||Ke(Ss)&&!Ui(Ss)||Ss[0]==="."||K)&&i(m,Ss,null,T[Ss],void 0,x)}else if(T.onClick)i(m,"onClick",null,T.onClick,void 0,x);else if(H&4&&Ai(T.style))for(const K in T.style)T.style[K]}let es;(es=T&&T.onVnodeBeforeMount)&&Ia(es,x,f),ns&&pn(f,null,x,"beforeMount"),((es=T&&T.onVnodeMounted)||ns||G)&&sk(()=>{es&&Ia(es,x,f),G&&bs.enter(m),ns&&pn(f,null,x,"mounted")},V)}return m.nextSibling},y=(m,f,x,V,P,W,j)=>{j=j||!!f.dynamicChildren;const T=f.children,H=T.length;for(let R=0;R<H;R++){const ns=j?T[R]:T[R]=Ra(T[R]),bs=ns.type===mi;m?(bs&&!j&&R+1<H&&Ra(T[R+1]).type===mi&&(p(e(m.data.slice(ns.children.length)),x,l(m)),m.data=ns.children),m=k(m,ns,V,P,W,j)):bs&&!ns.children?p(ns.el=e(""),x):(bl(x,1)||Li(),n(null,ns,x,null,V,P,gl(x),W))}return m},u=(m,f,x,V,P,W)=>{const{slotScopeIds:j}=f;j&&(P=P?P.concat(j):j);const T=t(m),H=y(l(m),f,T,x,V,P,W);return H&&qi(H)&&H.data==="]"?l(f.anchor=H):(Li(),p(f.anchor=c("]"),T,H),H)},A=(m,f,x,V,P,W)=>{if(bl(m.parentElement,1)||Li(),f.el=null,W){const H=F(m);for(;;){const R=l(m);if(R&&R!==H)r(R);else break}}const j=l(m),T=t(m);return r(m),n(null,f,T,j,x,V,gl(T),P),j},F=(m,f="[",x="]")=>{let V=0;for(;m;)if(m=l(m),m&&qi(m)&&(m.data===f&&V++,m.data===x)){if(V===0)return l(m);V--}return m},C=(m,f,x)=>{const V=f.parentNode;V&&V.replaceChild(m,f);let P=x;for(;P;)P.vnode.el===f&&(P.vnode.el=P.subTree.el=m),P=P.parent},b=m=>m.nodeType===1&&m.tagName==="TEMPLATE";return[B,k]}const fp="data-allow-mismatch",Su={0:"text",1:"children",2:"class",3:"style",4:"attribute"};function bl(s,a){if(a===0||a===1)for(;s&&!s.hasAttribute(fp);)s=s.parentElement;const n=s&&s.getAttribute(fp);if(n==null)return!1;if(n==="")return!0;{const i=n.split(",");return a===0&&i.includes("children")?!0:n.split(",").includes(Su[a])}}ht().requestIdleCallback;ht().cancelIdleCallback;function wu(s,a){if(qi(s)&&s.data==="["){let n=1,i=s.nextSibling;for(;i;){if(i.nodeType===1){if(a(i)===!1)break}else if(qi(i))if(i.data==="]"){if(--n===0)break}else i.data==="["&&n++;i=i.nextSibling}}else a(s)}const vi=s=>!!s.type.__asyncLoader;/*! #__NO_SIDE_EFFECTS__ */function SB(s){ts(s)&&(s={loader:s});const{loader:a,loadingComponent:n,errorComponent:i,delay:e=200,hydrate:l,timeout:t,suspensible:r=!0,onError:p}=s;let c=null,B,k=0;const h=()=>(k++,c=null,y()),y=()=>{let u;return c||(u=c=a().catch(A=>{if(A=A instanceof Error?A:new Error(String(A)),p)return new Promise((F,C)=>{p(A,()=>F(h()),()=>C(A),k+1)});throw A}).then(A=>u!==c&&c?c:(A&&(A.__esModule||A[Symbol.toStringTag]==="Module")&&(A=A.default),B=A,A)))};return L({name:"AsyncComponentWrapper",__asyncLoader:y,__asyncHydrate(u,A,F){const C=l?()=>{const b=l(F,m=>wu(u,m));b&&(A.bum||(A.bum=[])).push(b)}:F;B?C():y().then(()=>!A.isUnmounted&&C())},get __asyncResolved(){return B},setup(){const u=Gs;if(wo(u),B)return()=>Ut(B,u);const A=m=>{c=null,al(m,u,13,!i)};if(r&&u.suspense||se)return y().then(m=>()=>Ut(m,u)).catch(m=>(A(m),()=>i?ds(i,{error:m}):null));const F=M(!1),C=M(),b=M(!!e);return e&&setTimeout(()=>{b.value=!1},e),t!=null&&setTimeout(()=>{if(!F.value&&!C.value){const m=new Error(`Async component timed out after ${t}ms.`);A(m),C.value=m}},t),y().then(()=>{F.value=!0,u.parent&&nl(u.parent.vnode)&&u.parent.update()}).catch(m=>{A(m),C.value=m}),()=>{if(F.value&&B)return Ut(B,u);if(C.value&&i)return ds(i,{error:C.value});if(n&&!b.value)return ds(n)}}})}function Ut(s,a){const{ref:n,props:i,children:e,ce:l}=a.vnode,t=ds(s,i,e);return t.ref=n,t.ce=l,delete a.vnode.ce,t}const nl=s=>s.type.__isKeepAlive;function xu(s,a){wB(s,"a",a)}function Lu(s,a){wB(s,"da",a)}function wB(s,a,n=Gs){const i=s.__wdc||(s.__wdc=()=>{let e=n;for(;e;){if(e.isDeactivated)return;e=e.parent}return s()});if(At(a,i,n),n){let e=n.parent;for(;e&&e.parent;)nl(e.parent.vnode)&&Tu(i,a,n,e),e=e.parent}}function Tu(s,a,n,i){const e=At(a,s,i,!0);si(()=>{Ao(i[a],e)},n)}function At(s,a,n=Gs,i=!1){if(n){const e=n[s]||(n[s]=[]),l=a.__weh||(a.__weh=(...t)=>{Xn();const r=ll(n),p=Ka(a,n,s,t);return r(),Yn(),p});return i?e.unshift(l):e.push(l),l}}const Sn=s=>(a,n=Gs)=>{(!se||s==="sp")&&At(s,(...i)=>a(...i),n)},xB=Sn("bm"),as=Sn("m"),Ou=Sn("bu"),LB=Sn("u"),il=Sn("bum"),si=Sn("um"),Ju=Sn("sp"),Iu=Sn("rtg"),Pu=Sn("rtc");function Ru(s,a=Gs){At("ec",s,a)}const TB="components";function wa(s,a){return JB(TB,s,!0,a)||s}const OB=Symbol.for("v-ndc");function Mu(s){return qs(s)?JB(TB,s,!1)||s:s||OB}function JB(s,a,n=!0,i=!1){const e=Ks||Gs;if(e){const l=e.type;{const r=D6(l,!1);if(r&&(r===a||r===ha(a)||r===Ye(ha(a))))return l}const t=Dp(e[s]||l[s],a)||Dp(e.appContext[s],a);return!t&&i?l:t}}function Dp(s,a){return s&&(s[a]||s[ha(a)]||s[Ye(ha(a))])}function ju(s,a,n,i){let e;const l=n,t=Z(s);if(t||qs(s)){const r=t&&Ai(s);let p=!1;r&&(p=!Ma(s),s=ut(s)),e=new Array(s.length);for(let c=0,B=s.length;c<B;c++)e[c]=a(p?na(s[c]):s[c],c,void 0,l)}else if(typeof s=="number"){e=new Array(s);for(let r=0;r<s;r++)e[r]=a(r+1,r,void 0,l)}else if(Ls(s))if(s[Symbol.iterator])e=Array.from(s,(r,p)=>a(r,p,void 0,l));else{const r=Object.keys(s);e=new Array(r.length);for(let p=0,c=r.length;p<c;p++){const B=r[p];e[p]=a(s[B],B,p,l)}}else e=[];return e}function qu(s,a){for(let n=0;n<a.length;n++){const i=a[n];if(Z(i))for(let e=0;e<i.length;e++)s[i[e].name]=i[e].fn;else i&&(s[i.name]=i.key?(...e)=>{const l=i.fn(...e);return l&&(l.key=i.key),l}:i.fn)}return s}function Vu(s,a,n={},i,e){if(Ks.ce||Ks.parent&&vi(Ks.parent)&&Ks.parent.ce)return a!=="default"&&(n.name=a),Rs(),Wa(js,null,[ds("slot",n,i&&i())],64);let l=s[a];l&&l._c&&(l._d=!1),Rs();const t=l&&IB(l(n)),r=n.key||t&&t.key,p=Wa(js,{key:(r&&!Ga(r)?r:`_${a}`)+(!t&&i?"_fb":"")},t||(i?i():[]),t&&s._===1?64:-2);return l&&l._c&&(l._d=!0),p}function IB(s){return s.some(a=>qe(a)?!(a.type===ia||a.type===js&&!IB(a.children)):!0)?s:null}const Sr=s=>s?ik(s)?mt(s):Sr(s.parent):null,xe=Vs(Object.create(null),{$:s=>s,$el:s=>s.vnode.el,$data:s=>s.data,$props:s=>s.props,$attrs:s=>s.attrs,$slots:s=>s.slots,$refs:s=>s.refs,$parent:s=>Sr(s.parent),$root:s=>Sr(s.root),$host:s=>s.ce,$emit:s=>s.emit,$options:s=>xo(s),$forceUpdate:s=>s.f||(s.f=()=>{_o(s.update)}),$nextTick:s=>s.n||(s.n=ya.bind(s.proxy)),$watch:s=>p6.bind(s)}),$t=(s,a)=>s!==Es&&!s.__isScriptSetup&&Cs(s,a),zu={get({_:s},a){if(a==="__v_skip")return!0;const{ctx:n,setupState:i,data:e,props:l,accessCache:t,type:r,appContext:p}=s;let c;if(a[0]!=="$"){const y=t[a];if(y!==void 0)switch(y){case 1:return i[a];case 2:return e[a];case 4:return n[a];case 3:return l[a]}else{if($t(i,a))return t[a]=1,i[a];if(e!==Es&&Cs(e,a))return t[a]=2,e[a];if((c=s.propsOptions[0])&&Cs(c,a))return t[a]=3,l[a];if(n!==Es&&Cs(n,a))return t[a]=4,n[a];wr&&(t[a]=0)}}const B=xe[a];let k,h;if(B)return a==="$attrs"&&aa(s.attrs,"get",""),B(s);if((k=r.__cssModules)&&(k=k[a]))return k;if(n!==Es&&Cs(n,a))return t[a]=4,n[a];if(h=p.config.globalProperties,Cs(h,a))return h[a]},set({_:s},a,n){const{data:i,setupState:e,ctx:l}=s;return $t(e,a)?(e[a]=n,!0):i!==Es&&Cs(i,a)?(i[a]=n,!0):Cs(s.props,a)||a[0]==="$"&&a.slice(1)in s?!1:(l[a]=n,!0)},has({_:{data:s,setupState:a,accessCache:n,ctx:i,appContext:e,propsOptions:l}},t){let r;return!!n[t]||s!==Es&&Cs(s,t)||$t(a,t)||(r=l[0])&&Cs(r,t)||Cs(i,t)||Cs(xe,t)||Cs(e.config.globalProperties,t)},defineProperty(s,a,n){return n.get!=null?s._.accessCache[a]=0:Cs(n,"value")&&this.set(s,a,n.value,null),Reflect.defineProperty(s,a,n)}};function Yl(s){return Z(s)?s.reduce((a,n)=>(a[n]=null,a),{}):s}function M9(s,a){return!s||!a?s||a:Z(s)&&Z(a)?s.concat(a):Vs({},Yl(s),Yl(a))}let wr=!0;function Nu(s){const a=xo(s),n=s.proxy,i=s.ctx;wr=!1,a.beforeCreate&&_p(a.beforeCreate,s,"bc");const{data:e,computed:l,methods:t,watch:r,provide:p,inject:c,created:B,beforeMount:k,mounted:h,beforeUpdate:y,updated:u,activated:A,deactivated:F,beforeDestroy:C,beforeUnmount:b,destroyed:m,unmounted:f,render:x,renderTracked:V,renderTriggered:P,errorCaptured:W,serverPrefetch:j,expose:T,inheritAttrs:H,components:R,directives:ns,filters:bs}=a;if(c&&Hu(c,i,null),t)for(const es in t){const K=t[es];ts(K)&&(i[es]=K.bind(n))}if(e){const es=e.call(n,n);Ls(es)&&(s.data=te(es))}if(wr=!0,l)for(const es in l){const K=l[es],Ss=ts(K)?K.bind(n,n):ts(K.get)?K.get.bind(n,n):dn,an=!ts(K)&&ts(K.set)?K.set.bind(n):dn,Oa=g({get:Ss,set:an});Object.defineProperty(i,es,{enumerable:!0,configurable:!0,get:()=>Oa.value,set:Ws=>Oa.value=Ws})}if(r)for(const es in r)PB(r[es],i,n,es);if(p){const es=ts(p)?p.call(n):p;Reflect.ownKeys(es).forEach(K=>{ja(K,es[K])})}B&&_p(B,s,"c");function G(es,K){Z(K)?K.forEach(Ss=>es(Ss.bind(n))):K&&es(K.bind(n))}if(G(xB,k),G(as,h),G(Ou,y),G(LB,u),G(xu,A),G(Lu,F),G(Ru,W),G(Pu,V),G(Iu,P),G(il,b),G(si,f),G(Ju,j),Z(T))if(T.length){const es=s.exposed||(s.exposed={});T.forEach(K=>{Object.defineProperty(es,K,{get:()=>n[K],set:Ss=>n[K]=Ss})})}else s.exposed||(s.exposed={});x&&s.render===dn&&(s.render=x),H!=null&&(s.inheritAttrs=H),R&&(s.components=R),ns&&(s.directives=ns),j&&wo(s)}function Hu(s,a,n=dn){Z(s)&&(s=xr(s));for(const i in s){const e=s[i];let l;Ls(e)?"default"in e?l=Fs(e.from||i,e.default,!0):l=Fs(e.from||i):l=Fs(e),Ns(l)?Object.defineProperty(a,i,{enumerable:!0,configurable:!0,get:()=>l.value,set:t=>l.value=t}):a[i]=l}}function _p(s,a,n){Ka(Z(s)?s.map(i=>i.bind(a.proxy)):s.bind(a.proxy),a,n)}function PB(s,a,n,i){let e=i.includes(".")?KB(n,i):()=>n[i];if(qs(s)){const l=a[s];ts(l)&&os(e,l)}else if(ts(s))os(e,s.bind(n));else if(Ls(s))if(Z(s))s.forEach(l=>PB(l,a,n,i));else{const l=ts(s.handler)?s.handler.bind(n):a[s.handler];ts(l)&&os(e,l,s)}}function xo(s){const a=s.type,{mixins:n,extends:i}=a,{mixins:e,optionsCache:l,config:{optionMergeStrategies:t}}=s.appContext,r=l.get(a);let p;return r?p=r:!e.length&&!n&&!i?p=a:(p={},e.length&&e.forEach(c=>Zl(p,c,t,!0)),Zl(p,a,t)),Ls(a)&&l.set(a,p),p}function Zl(s,a,n,i=!1){const{mixins:e,extends:l}=a;l&&Zl(s,l,n,!0),e&&e.forEach(t=>Zl(s,t,n,!0));for(const t in a)if(!(i&&t==="expose")){const r=Uu[t]||n&&n[t];s[t]=r?r(s[t],a[t]):a[t]}return s}const Uu={data:Sp,props:wp,emits:wp,methods:Ce,computed:Ce,beforeCreate:ra,created:ra,beforeMount:ra,mounted:ra,beforeUpdate:ra,updated:ra,beforeDestroy:ra,beforeUnmount:ra,destroyed:ra,unmounted:ra,activated:ra,deactivated:ra,errorCaptured:ra,serverPrefetch:ra,components:Ce,directives:Ce,watch:Qu,provide:Sp,inject:$u};function Sp(s,a){return a?s?function(){return Vs(ts(s)?s.call(this,this):s,ts(a)?a.call(this,this):a)}:a:s}function $u(s,a){return Ce(xr(s),xr(a))}function xr(s){if(Z(s)){const a={};for(let n=0;n<s.length;n++)a[s[n]]=s[n];return a}return s}function ra(s,a){return s?[...new Set([].concat(s,a))]:a}function Ce(s,a){return s?Vs(Object.create(null),s,a):a}function wp(s,a){return s?Z(s)&&Z(a)?[...new Set([...s,...a])]:Vs(Object.create(null),Yl(s),Yl(a??{})):a}function Qu(s,a){if(!s)return a;if(!a)return s;const n=Vs(Object.create(null),s);for(const i in a)n[i]=ra(s[i],a[i]);return n}function RB(){return{app:null,config:{isNativeTag:Sy,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let Wu=0;function Gu(s,a){return function(i,e=null){ts(i)||(i=Vs({},i)),e!=null&&!Ls(e)&&(e=null);const l=RB(),t=new WeakSet,r=[];let p=!1;const c=l.app={_uid:Wu++,_component:i,_props:e,_container:null,_context:l,_instance:null,version:lk,get config(){return l.config},set config(B){},use(B,...k){return t.has(B)||(B&&ts(B.install)?(t.add(B),B.install(c,...k)):ts(B)&&(t.add(B),B(c,...k))),c},mixin(B){return l.mixins.includes(B)||l.mixins.push(B),c},component(B,k){return k?(l.components[B]=k,c):l.components[B]},directive(B,k){return k?(l.directives[B]=k,c):l.directives[B]},mount(B,k,h){if(!p){const y=c._ceVNode||ds(i,e);return y.appContext=l,h===!0?h="svg":h===!1&&(h=void 0),k&&a?a(y,B):s(y,B,h),p=!0,c._container=B,B.__vue_app__=c,mt(y.component)}},onUnmount(B){r.push(B)},unmount(){p&&(Ka(r,c._instance,16),s(null,c._container),delete c._container.__vue_app__)},provide(B,k){return l.provides[B]=k,c},runWithContext(B){const k=Qi;Qi=c;try{return B()}finally{Qi=k}}};return c}}let Qi=null;function ja(s,a){if(Gs){let n=Gs.provides;const i=Gs.parent&&Gs.parent.provides;i===n&&(n=Gs.provides=Object.create(i)),n[s]=a}}function Fs(s,a,n=!1){const i=Gs||Ks;if(i||Qi){const e=Qi?Qi._context.provides:i?i.parent==null?i.vnode.appContext&&i.vnode.appContext.provides:i.parent.provides:void 0;if(e&&s in e)return e[s];if(arguments.length>1)return n&&ts(a)?a.call(i&&i.proxy):a}}const MB={},jB=()=>Object.create(MB),qB=s=>Object.getPrototypeOf(s)===MB;function Ku(s,a,n,i=!1){const e={},l=jB();s.propsDefaults=Object.create(null),VB(s,a,e,l);for(const t in s.propsOptions[0])t in e||(e[t]=void 0);n?s.props=i?e:hB(e):s.type.props?s.props=e:s.props=l,s.attrs=l}function Xu(s,a,n,i){const{props:e,attrs:l,vnode:{patchFlag:t}}=s,r=vs(e),[p]=s.propsOptions;let c=!1;if((i||t>0)&&!(t&16)){if(t&8){const B=s.vnode.dynamicProps;for(let k=0;k<B.length;k++){let h=B[k];if(vt(s.emitsOptions,h))continue;const y=a[h];if(p)if(Cs(l,h))y!==l[h]&&(l[h]=y,c=!0);else{const u=ha(h);e[u]=Lr(p,r,u,y,s,!1)}else y!==l[h]&&(l[h]=y,c=!0)}}}else{VB(s,a,e,l)&&(c=!0);let B;for(const k in r)(!a||!Cs(a,k)&&((B=_n(k))===k||!Cs(a,B)))&&(p?n&&(n[k]!==void 0||n[B]!==void 0)&&(e[k]=Lr(p,r,k,void 0,s,!0)):delete e[k]);if(l!==r)for(const k in l)(!a||!Cs(a,k))&&(delete l[k],c=!0)}c&&gn(s.attrs,"set","")}function VB(s,a,n,i){const[e,l]=s.propsOptions;let t=!1,r;if(a)for(let p in a){if(Ui(p))continue;const c=a[p];let B;e&&Cs(e,B=ha(p))?!l||!l.includes(B)?n[B]=c:(r||(r={}))[B]=c:vt(s.emitsOptions,p)||(!(p in i)||c!==i[p])&&(i[p]=c,t=!0)}if(l){const p=vs(n),c=r||Es;for(let B=0;B<l.length;B++){const k=l[B];n[k]=Lr(e,p,k,c[k],s,!Cs(c,k))}}return t}function Lr(s,a,n,i,e,l){const t=s[n];if(t!=null){const r=Cs(t,"default");if(r&&i===void 0){const p=t.default;if(t.type!==Function&&!t.skipFactory&&ts(p)){const{propsDefaults:c}=e;if(n in c)i=c[n];else{const B=ll(e);i=c[n]=p.call(null,a),B()}}else i=p;e.ce&&e.ce._setProp(n,i)}t[0]&&(l&&!r?i=!1:t[1]&&(i===""||i===_n(n))&&(i=!0))}return i}const Yu=new WeakMap;function zB(s,a,n=!1){const i=n?Yu:a.propsCache,e=i.get(s);if(e)return e;const l=s.props,t={},r=[];let p=!1;if(!ts(s)){const B=k=>{p=!0;const[h,y]=zB(k,a,!0);Vs(t,h),y&&r.push(...y)};!n&&a.mixins.length&&a.mixins.forEach(B),s.extends&&B(s.extends),s.mixins&&s.mixins.forEach(B)}if(!l&&!p)return Ls(s)&&i.set(s,Ni),Ni;if(Z(l))for(let B=0;B<l.length;B++){const k=ha(l[B]);xp(k)&&(t[k]=Es)}else if(l)for(const B in l){const k=ha(B);if(xp(k)){const h=l[B],y=t[k]=Z(h)||ts(h)?{type:h}:Vs({},h),u=y.type;let A=!1,F=!0;if(Z(u))for(let C=0;C<u.length;++C){const b=u[C],m=ts(b)&&b.name;if(m==="Boolean"){A=!0;break}else m==="String"&&(F=!1)}else A=ts(u)&&u.name==="Boolean";y[0]=A,y[1]=F,(A||Cs(y,"default"))&&r.push(k)}}const c=[t,r];return Ls(s)&&i.set(s,c),c}function xp(s){return s[0]!=="$"&&!Ui(s)}const NB=s=>s[0]==="_"||s==="$stable",Lo=s=>Z(s)?s.map(Ra):[Ra(s)],Zu=(s,a,n)=>{if(a._n)return a;const i=cn((...e)=>Lo(a(...e)),n);return i._c=!1,i},HB=(s,a,n)=>{const i=s._ctx;for(const e in s){if(NB(e))continue;const l=s[e];if(ts(l))a[e]=Zu(e,l,i);else if(l!=null){const t=Lo(l);a[e]=()=>t}}},UB=(s,a)=>{const n=Lo(a);s.slots.default=()=>n},$B=(s,a,n)=>{for(const i in a)(n||i!=="_")&&(s[i]=a[i])},s6=(s,a,n)=>{const i=s.slots=jB();if(s.vnode.shapeFlag&32){const e=a._;e?($B(i,a,n),n&&Gd(i,"_",e,!0)):HB(a,i)}else a&&UB(s,a)},a6=(s,a,n)=>{const{vnode:i,slots:e}=s;let l=!0,t=Es;if(i.shapeFlag&32){const r=a._;r?n&&r===1?l=!1:$B(e,a,n):(l=!a.$stable,HB(a,e)),t=a}else a&&(UB(s,a),t={default:1});if(l)for(const r in e)!NB(r)&&t[r]==null&&delete e[r]},Da=sk;function n6(s){return i6(s,_u)}function i6(s,a){const n=ht();n.__VUE__=!0;const{insert:i,remove:e,patchProp:l,createElement:t,createText:r,createComment:p,setText:c,setElementText:B,parentNode:k,nextSibling:h,setScopeId:y=dn,insertStaticContent:u}=s,A=(v,E,D,O=null,w=null,J=null,U=void 0,z=null,q=!!E.dynamicChildren)=>{if(v===E)return;v&&!di(v,E)&&(O=S(v),Ws(v,w,J,!0),v=null),E.patchFlag===-2&&(q=!1,E.dynamicChildren=null);const{type:I,ref:is,shapeFlag:Q}=E;switch(I){case mi:F(v,E,D,O);break;case ia:C(v,E,D,O);break;case Wi:v==null&&b(E,D,O,U);break;case js:R(v,E,D,O,w,J,U,z,q);break;default:Q&1?x(v,E,D,O,w,J,U,z,q):Q&6?ns(v,E,D,O,w,J,U,z,q):(Q&64||Q&128)&&I.process(v,E,D,O,w,J,U,z,q,X)}is!=null&&w&&Xl(is,v&&v.ref,J,E||v,!E)},F=(v,E,D,O)=>{if(v==null)i(E.el=r(E.children),D,O);else{const w=E.el=v.el;E.children!==v.children&&c(w,E.children)}},C=(v,E,D,O)=>{v==null?i(E.el=p(E.children||""),D,O):E.el=v.el},b=(v,E,D,O)=>{[v.el,v.anchor]=u(v.children,E,D,O,v.el,v.anchor)},m=({el:v,anchor:E},D,O)=>{let w;for(;v&&v!==E;)w=h(v),i(v,D,O),v=w;i(E,D,O)},f=({el:v,anchor:E})=>{let D;for(;v&&v!==E;)D=h(v),e(v),v=D;e(E)},x=(v,E,D,O,w,J,U,z,q)=>{E.type==="svg"?U="svg":E.type==="math"&&(U="mathml"),v==null?V(E,D,O,w,J,U,z,q):j(v,E,w,J,U,z,q)},V=(v,E,D,O,w,J,U,z)=>{let q,I;const{props:is,shapeFlag:Q,transition:ss,dirs:ls}=v;if(q=v.el=t(v.type,J,is&&is.is,is),Q&8?B(q,v.children):Q&16&&W(v.children,q,null,O,w,Qt(v,J),U,z),ls&&pn(v,null,O,"created"),P(q,v,v.scopeId,U,O),is){for(const Is in is)Is!=="value"&&!Ui(Is)&&l(q,Is,null,is[Is],J,O);"value"in is&&l(q,"value",null,is.value,J),(I=is.onVnodeBeforeMount)&&Ia(I,O,v)}ls&&pn(v,null,O,"beforeMount");const ys=QB(w,ss);ys&&ss.beforeEnter(q),i(q,E,D),((I=is&&is.onVnodeMounted)||ys||ls)&&Da(()=>{I&&Ia(I,O,v),ys&&ss.enter(q),ls&&pn(v,null,O,"mounted")},w)},P=(v,E,D,O,w)=>{if(D&&y(v,D),O)for(let J=0;J<O.length;J++)y(v,O[J]);if(w){let J=w.subTree;if(E===J||ZB(J.type)&&(J.ssContent===E||J.ssFallback===E)){const U=w.vnode;P(v,U,U.scopeId,U.slotScopeIds,w.parent)}}},W=(v,E,D,O,w,J,U,z,q=0)=>{for(let I=q;I<v.length;I++){const is=v[I]=z?Nn(v[I]):Ra(v[I]);A(null,is,E,D,O,w,J,U,z)}},j=(v,E,D,O,w,J,U)=>{const z=E.el=v.el;let{patchFlag:q,dynamicChildren:I,dirs:is}=E;q|=v.patchFlag&16;const Q=v.props||Es,ss=E.props||Es;let ls;if(D&&ri(D,!1),(ls=ss.onVnodeBeforeUpdate)&&Ia(ls,D,E,v),is&&pn(E,v,D,"beforeUpdate"),D&&ri(D,!0),(Q.innerHTML&&ss.innerHTML==null||Q.textContent&&ss.textContent==null)&&B(z,""),I?T(v.dynamicChildren,I,z,D,O,Qt(E,w),J):U||K(v,E,z,null,D,O,Qt(E,w),J,!1),q>0){if(q&16)H(z,Q,ss,D,w);else if(q&2&&Q.class!==ss.class&&l(z,"class",null,ss.class,w),q&4&&l(z,"style",Q.style,ss.style,w),q&8){const ys=E.dynamicProps;for(let Is=0;Is<ys.length;Is++){const fs=ys[Is],ga=Q[fs],sa=ss[fs];(sa!==ga||fs==="value")&&l(z,fs,ga,sa,w,D)}}q&1&&v.children!==E.children&&B(z,E.children)}else!U&&I==null&&H(z,Q,ss,D,w);((ls=ss.onVnodeUpdated)||is)&&Da(()=>{ls&&Ia(ls,D,E,v),is&&pn(E,v,D,"updated")},O)},T=(v,E,D,O,w,J,U)=>{for(let z=0;z<E.length;z++){const q=v[z],I=E[z],is=q.el&&(q.type===js||!di(q,I)||q.shapeFlag&70)?k(q.el):D;A(q,I,is,null,O,w,J,U,!0)}},H=(v,E,D,O,w)=>{if(E!==D){if(E!==Es)for(const J in E)!Ui(J)&&!(J in D)&&l(v,J,E[J],null,w,O);for(const J in D){if(Ui(J))continue;const U=D[J],z=E[J];U!==z&&J!=="value"&&l(v,J,z,U,w,O)}"value"in D&&l(v,"value",E.value,D.value,w)}},R=(v,E,D,O,w,J,U,z,q)=>{const I=E.el=v?v.el:r(""),is=E.anchor=v?v.anchor:r("");let{patchFlag:Q,dynamicChildren:ss,slotScopeIds:ls}=E;ls&&(z=z?z.concat(ls):ls),v==null?(i(I,D,O),i(is,D,O),W(E.children||[],D,is,w,J,U,z,q)):Q>0&&Q&64&&ss&&v.dynamicChildren?(T(v.dynamicChildren,ss,D,w,J,U,z),(E.key!=null||w&&E===w.subTree)&&WB(v,E,!0)):K(v,E,D,is,w,J,U,z,q)},ns=(v,E,D,O,w,J,U,z,q)=>{E.slotScopeIds=z,v==null?E.shapeFlag&512?w.ctx.activate(E,D,O,U,q):bs(E,D,O,w,J,U,q):Js(v,E,q)},bs=(v,E,D,O,w,J,U)=>{const z=v.component=F6(v,O,w);if(nl(v)&&(z.ctx.renderer=X),C6(z,!1,U),z.asyncDep){if(w&&w.registerDep(z,G,U),!v.el){const q=z.subTree=ds(ia);C(null,q,E,D)}}else G(z,v,E,D,w,J,U)},Js=(v,E,D)=>{const O=E.component=v.component;if(k6(v,E,D))if(O.asyncDep&&!O.asyncResolved){es(O,E,D);return}else O.next=E,O.update();else E.el=v.el,O.vnode=E},G=(v,E,D,O,w,J,U)=>{const z=()=>{if(v.isMounted){let{next:Q,bu:ss,u:ls,parent:ys,vnode:Is}=v;{const ba=GB(v);if(ba){Q&&(Q.el=Is.el,es(v,Q,U)),ba.asyncDep.then(()=>{v.isUnmounted||z()});return}}let fs=Q,ga;ri(v,!1),Q?(Q.el=Is.el,es(v,Q,U)):Q=Is,ss&&Rl(ss),(ga=Q.props&&Q.props.onVnodeBeforeUpdate)&&Ia(ga,ys,Q,Is),ri(v,!0);const sa=Wt(v),Na=v.subTree;v.subTree=sa,A(Na,sa,k(Na.el),S(Na),v,w,J),Q.el=sa.el,fs===null&&h6(v,sa.el),ls&&Da(ls,w),(ga=Q.props&&Q.props.onVnodeUpdated)&&Da(()=>Ia(ga,ys,Q,Is),w)}else{let Q;const{el:ss,props:ls}=E,{bm:ys,m:Is,parent:fs,root:ga,type:sa}=v,Na=vi(E);if(ri(v,!1),ys&&Rl(ys),!Na&&(Q=ls&&ls.onVnodeBeforeMount)&&Ia(Q,fs,E),ri(v,!0),ss&&Ts){const ba=()=>{v.subTree=Wt(v),Ts(ss,v.subTree,v,w,null)};Na&&sa.__asyncHydrate?sa.__asyncHydrate(ss,v,ba):ba()}else{ga.ce&&ga.ce._injectChildStyle(sa);const ba=v.subTree=Wt(v);A(null,ba,D,O,v,w,J),E.el=ba.el}if(Is&&Da(Is,w),!Na&&(Q=ls&&ls.onVnodeMounted)){const ba=E;Da(()=>Ia(Q,fs,ba),w)}(E.shapeFlag&256||fs&&vi(fs.vnode)&&fs.vnode.shapeFlag&256)&&v.a&&Da(v.a,w),v.isMounted=!0,E=D=O=null}};v.scope.on();const q=v.effect=new sB(z);v.scope.off();const I=v.update=q.run.bind(q),is=v.job=q.runIfDirty.bind(q);is.i=v,is.id=v.uid,q.scheduler=()=>_o(is),ri(v,!0),I()},es=(v,E,D)=>{E.component=v;const O=v.vnode.props;v.vnode=E,v.next=null,Xu(v,E.props,O,D),a6(v,E.children,D),Xn(),Cp(v),Yn()},K=(v,E,D,O,w,J,U,z,q=!1)=>{const I=v&&v.children,is=v?v.shapeFlag:0,Q=E.children,{patchFlag:ss,shapeFlag:ls}=E;if(ss>0){if(ss&128){an(I,Q,D,O,w,J,U,z,q);return}else if(ss&256){Ss(I,Q,D,O,w,J,U,z,q);return}}ls&8?(is&16&&Zs(I,w,J),Q!==I&&B(D,Q)):is&16?ls&16?an(I,Q,D,O,w,J,U,z,q):Zs(I,w,J,!0):(is&8&&B(D,""),ls&16&&W(Q,D,O,w,J,U,z,q))},Ss=(v,E,D,O,w,J,U,z,q)=>{v=v||Ni,E=E||Ni;const I=v.length,is=E.length,Q=Math.min(I,is);let ss;for(ss=0;ss<Q;ss++){const ls=E[ss]=q?Nn(E[ss]):Ra(E[ss]);A(v[ss],ls,D,null,w,J,U,z,q)}I>is?Zs(v,w,J,!0,!1,Q):W(E,D,O,w,J,U,z,q,Q)},an=(v,E,D,O,w,J,U,z,q)=>{let I=0;const is=E.length;let Q=v.length-1,ss=is-1;for(;I<=Q&&I<=ss;){const ls=v[I],ys=E[I]=q?Nn(E[I]):Ra(E[I]);if(di(ls,ys))A(ls,ys,D,null,w,J,U,z,q);else break;I++}for(;I<=Q&&I<=ss;){const ls=v[Q],ys=E[ss]=q?Nn(E[ss]):Ra(E[ss]);if(di(ls,ys))A(ls,ys,D,null,w,J,U,z,q);else break;Q--,ss--}if(I>Q){if(I<=ss){const ls=ss+1,ys=ls<is?E[ls].el:O;for(;I<=ss;)A(null,E[I]=q?Nn(E[I]):Ra(E[I]),D,ys,w,J,U,z,q),I++}}else if(I>ss)for(;I<=Q;)Ws(v[I],w,J,!0),I++;else{const ls=I,ys=I,Is=new Map;for(I=ys;I<=ss;I++){const fa=E[I]=q?Nn(E[I]):Ra(E[I]);fa.key!=null&&Is.set(fa.key,I)}let fs,ga=0;const sa=ss-ys+1;let Na=!1,ba=0;const he=new Array(sa);for(I=0;I<sa;I++)he[I]=0;for(I=ls;I<=Q;I++){const fa=v[I];if(ga>=sa){Ws(fa,w,J,!0);continue}let en;if(fa.key!=null)en=Is.get(fa.key);else for(fs=ys;fs<=ss;fs++)if(he[fs-ys]===0&&di(fa,E[fs])){en=fs;break}en===void 0?Ws(fa,w,J,!0):(he[en-ys]=I+1,en>=ba?ba=en:Na=!0,A(fa,E[en],D,null,w,J,U,z,q),ga++)}const up=Na?e6(he):Ni;for(fs=up.length-1,I=sa-1;I>=0;I--){const fa=ys+I,en=E[fa],Ap=fa+1<is?E[fa+1].el:O;he[I]===0?A(null,en,D,Ap,w,J,U,z,q):Na&&(fs<0||I!==up[fs]?Oa(en,D,Ap,2):fs--)}}},Oa=(v,E,D,O,w=null)=>{const{el:J,type:U,transition:z,children:q,shapeFlag:I}=v;if(I&6){Oa(v.component.subTree,E,D,O);return}if(I&128){v.suspense.move(E,D,O);return}if(I&64){U.move(v,E,D,X);return}if(U===js){i(J,E,D);for(let Q=0;Q<q.length;Q++)Oa(q[Q],E,D,O);i(v.anchor,E,D);return}if(U===Wi){m(v,E,D);return}if(O!==2&&I&1&&z)if(O===0)z.beforeEnter(J),i(J,E,D),Da(()=>z.enter(J),w);else{const{leave:Q,delayLeave:ss,afterLeave:ls}=z,ys=()=>i(J,E,D),Is=()=>{Q(J,()=>{ys(),ls&&ls()})};ss?ss(J,ys,Is):Is()}else i(J,E,D)},Ws=(v,E,D,O=!1,w=!1)=>{const{type:J,props:U,ref:z,children:q,dynamicChildren:I,shapeFlag:is,patchFlag:Q,dirs:ss,cacheIndex:ls}=v;if(Q===-2&&(w=!1),z!=null&&Xl(z,null,D,v,!0),ls!=null&&(E.renderCache[ls]=void 0),is&256){E.ctx.deactivate(v);return}const ys=is&1&&ss,Is=!vi(v);let fs;if(Is&&(fs=U&&U.onVnodeBeforeUnmount)&&Ia(fs,E,v),is&6)nn(v.component,D,O);else{if(is&128){v.suspense.unmount(D,O);return}ys&&pn(v,null,E,"beforeUnmount"),is&64?v.type.remove(v,E,D,X,O):I&&!I.hasOnce&&(J!==js||Q>0&&Q&64)?Zs(I,E,D,!1,!0):(J===js&&Q&384||!w&&is&16)&&Zs(q,E,D),O&&Ca(v)}(Is&&(fs=U&&U.onVnodeUnmounted)||ys)&&Da(()=>{fs&&Ia(fs,E,v),ys&&pn(v,null,E,"unmounted")},D)},Ca=v=>{const{type:E,el:D,anchor:O,transition:w}=v;if(E===js){yn(D,O);return}if(E===Wi){f(v);return}const J=()=>{e(D),w&&!w.persisted&&w.afterLeave&&w.afterLeave()};if(v.shapeFlag&1&&w&&!w.persisted){const{leave:U,delayLeave:z}=w,q=()=>U(D,J);z?z(v.el,J,q):q()}else J()},yn=(v,E)=>{let D;for(;v!==E;)D=h(v),e(v),v=D;e(E)},nn=(v,E,D)=>{const{bum:O,scope:w,job:J,subTree:U,um:z,m:q,a:I}=v;Lp(q),Lp(I),O&&Rl(O),w.stop(),J&&(J.flags|=8,Ws(U,v,E,D)),z&&Da(z,E),Da(()=>{v.isUnmounted=!0},E),E&&E.pendingBranch&&!E.isUnmounted&&v.asyncDep&&!v.asyncResolved&&v.suspenseId===E.pendingId&&(E.deps--,E.deps===0&&E.resolve())},Zs=(v,E,D,O=!1,w=!1,J=0)=>{for(let U=J;U<v.length;U++)Ws(v[U],E,D,O,w)},S=v=>{if(v.shapeFlag&6)return S(v.component.subTree);if(v.shapeFlag&128)return v.suspense.next();const E=h(v.anchor||v.el),D=E&&E[Cu];return D?h(D):E};let $=!1;const N=(v,E,D)=>{v==null?E._vnode&&Ws(E._vnode,null,null,!0):A(E._vnode||null,v,E,null,null,null,D),E._vnode=v,$||($=!0,Cp(),Gl(),$=!1)},X={p:A,um:Ws,m:Oa,r:Ca,mt:bs,mc:W,pc:K,pbc:T,n:S,o:s};let us,Ts;return a&&([us,Ts]=a(X)),{render:N,hydrate:us,createApp:Gu(N,us)}}function Qt({type:s,props:a},n){return n==="svg"&&s==="foreignObject"||n==="mathml"&&s==="annotation-xml"&&a&&a.encoding&&a.encoding.includes("html")?void 0:n}function ri({effect:s,job:a},n){n?(s.flags|=32,a.flags|=4):(s.flags&=-33,a.flags&=-5)}function QB(s,a){return(!s||s&&!s.pendingBranch)&&a&&!a.persisted}function WB(s,a,n=!1){const i=s.children,e=a.children;if(Z(i)&&Z(e))for(let l=0;l<i.length;l++){const t=i[l];let r=e[l];r.shapeFlag&1&&!r.dynamicChildren&&((r.patchFlag<=0||r.patchFlag===32)&&(r=e[l]=Nn(e[l]),r.el=t.el),!n&&r.patchFlag!==-2&&WB(t,r)),r.type===mi&&(r.el=t.el)}}function e6(s){const a=s.slice(),n=[0];let i,e,l,t,r;const p=s.length;for(i=0;i<p;i++){const c=s[i];if(c!==0){if(e=n[n.length-1],s[e]<c){a[i]=e,n.push(i);continue}for(l=0,t=n.length-1;l<t;)r=l+t>>1,s[n[r]]<c?l=r+1:t=r;c<s[n[l]]&&(l>0&&(a[i]=n[l-1]),n[l]=i)}}for(l=n.length,t=n[l-1];l-- >0;)n[l]=t,t=a[t];return n}function GB(s){const a=s.subTree.component;if(a)return a.asyncDep&&!a.asyncResolved?a:GB(a)}function Lp(s){if(s)for(let a=0;a<s.length;a++)s[a].flags|=8}const l6=Symbol.for("v-scx"),t6=()=>Fs(l6);function To(s,a){return el(s,null,a)}function r6(s,a){return el(s,null,{flush:"post"})}function o6(s,a){return el(s,null,{flush:"sync"})}function os(s,a,n){return el(s,a,n)}function el(s,a,n=Es){const{immediate:i,deep:e,flush:l,once:t}=n,r=Vs({},n),p=a&&i||!a&&l!=="post";let c;if(se){if(l==="sync"){const y=t6();c=y.__watcherHandles||(y.__watcherHandles=[])}else if(!p){const y=()=>{};return y.stop=dn,y.resume=dn,y.pause=dn,y}}const B=Gs;r.call=(y,u,A)=>Ka(y,B,u,A);let k=!1;l==="post"?r.scheduler=y=>{Da(y,B&&B.suspense)}:l!=="sync"&&(k=!0,r.scheduler=(y,u)=>{u?y():_o(y)}),r.augmentJob=y=>{a&&(y.flags|=4),k&&(y.flags|=2,B&&(y.id=B.uid,y.i=B))};const h=Au(s,a,r);return se&&(c?c.push(h):p&&h()),h}function p6(s,a,n){const i=this.proxy,e=qs(s)?s.includes(".")?KB(i,s):()=>i[s]:s.bind(i,i);let l;ts(a)?l=a:(l=a.handler,n=a);const t=ll(this),r=el(e,l.bind(i),n);return t(),r}function KB(s,a){const n=a.split(".");return()=>{let i=s;for(let e=0;e<n.length&&i;e++)i=i[n[e]];return i}}function j9(s,a,n=Es){const i=ai(),e=ha(a),l=_n(a),t=XB(s,e),r=Do((p,c)=>{let B,k=Es,h;return o6(()=>{const y=s[e];ua(B,y)&&(B=y,c())}),{get(){return p(),n.get?n.get(B):B},set(y){const u=n.set?n.set(y):y;if(!ua(u,B)&&!(k!==Es&&ua(y,k)))return;const A=i.vnode.props;A&&(a in A||e in A||l in A)&&(`onUpdate:${a}`in A||`onUpdate:${e}`in A||`onUpdate:${l}`in A)||(B=y,c()),i.emit(`update:${a}`,u),ua(y,u)&&ua(y,k)&&!ua(u,h)&&c(),k=y,h=u}}});return r[Symbol.iterator]=()=>{let p=0;return{next(){return p<2?{value:p++?t||Es:r,done:!1}:{done:!0}}}},r}const XB=(s,a)=>a==="modelValue"||a==="model-value"?s.modelModifiers:s[`${a}Modifiers`]||s[`${ha(a)}Modifiers`]||s[`${_n(a)}Modifiers`];function c6(s,a,...n){if(s.isUnmounted)return;const i=s.vnode.props||Es;let e=n;const l=a.startsWith("update:"),t=l&&XB(i,a.slice(7));t&&(t.trim&&(e=n.map(B=>qs(B)?B.trim():B)),t.number&&(e=n.map(Ul)));let r,p=i[r=jt(a)]||i[r=jt(ha(a))];!p&&l&&(p=i[r=jt(_n(a))]),p&&Ka(p,s,6,e);const c=i[r+"Once"];if(c){if(!s.emitted)s.emitted={};else if(s.emitted[r])return;s.emitted[r]=!0,Ka(c,s,6,e)}}function YB(s,a,n=!1){const i=a.emitsCache,e=i.get(s);if(e!==void 0)return e;const l=s.emits;let t={},r=!1;if(!ts(s)){const p=c=>{const B=YB(c,a,!0);B&&(r=!0,Vs(t,B))};!n&&a.mixins.length&&a.mixins.forEach(p),s.extends&&p(s.extends),s.mixins&&s.mixins.forEach(p)}return!l&&!r?(Ls(s)&&i.set(s,null),null):(Z(l)?l.forEach(p=>t[p]=null):Vs(t,l),Ls(s)&&i.set(s,t),t)}function vt(s,a){return!s||!Ke(a)?!1:(a=a.slice(2).replace(/Once$/,""),Cs(s,a[0].toLowerCase()+a.slice(1))||Cs(s,_n(a))||Cs(s,a))}function Wt(s){const{type:a,vnode:n,proxy:i,withProxy:e,propsOptions:[l],slots:t,attrs:r,emit:p,render:c,renderCache:B,props:k,data:h,setupState:y,ctx:u,inheritAttrs:A}=s,F=Kl(s);let C,b;try{if(n.shapeFlag&4){const f=e||i,x=f;C=Ra(c.call(x,f,B,k,y,h,u)),b=r}else{const f=a;C=Ra(f.length>1?f(k,{attrs:r,slots:t,emit:p}):f(k,null)),b=a.props?r:d6(r)}}catch(f){Le.length=0,al(f,s,1),C=ds(ia)}let m=C;if(b&&A!==!1){const f=Object.keys(b),{shapeFlag:x}=m;f.length&&x&7&&(l&&f.some(uo)&&(b=B6(b,l)),m=Wn(m,b,!1,!0))}return n.dirs&&(m=Wn(m,null,!1,!0),m.dirs=m.dirs?m.dirs.concat(n.dirs):n.dirs),n.transition&&gi(m,n.transition),C=m,Kl(F),C}const d6=s=>{let a;for(const n in s)(n==="class"||n==="style"||Ke(n))&&((a||(a={}))[n]=s[n]);return a},B6=(s,a)=>{const n={};for(const i in s)(!uo(i)||!(i.slice(9)in a))&&(n[i]=s[i]);return n};function k6(s,a,n){const{props:i,children:e,component:l}=s,{props:t,children:r,patchFlag:p}=a,c=l.emitsOptions;if(a.dirs||a.transition)return!0;if(n&&p>=0){if(p&1024)return!0;if(p&16)return i?Tp(i,t,c):!!t;if(p&8){const B=a.dynamicProps;for(let k=0;k<B.length;k++){const h=B[k];if(t[h]!==i[h]&&!vt(c,h))return!0}}}else return(e||r)&&(!r||!r.$stable)?!0:i===t?!1:i?t?Tp(i,t,c):!0:!!t;return!1}function Tp(s,a,n){const i=Object.keys(a);if(i.length!==Object.keys(s).length)return!0;for(let e=0;e<i.length;e++){const l=i[e];if(a[l]!==s[l]&&!vt(n,l))return!0}return!1}function h6({vnode:s,parent:a},n){for(;a;){const i=a.subTree;if(i.suspense&&i.suspense.activeBranch===s&&(i.el=s.el),i===s)(s=a.vnode).el=n,a=a.parent;else break}}const ZB=s=>s.__isSuspense;function sk(s,a){a&&a.pendingBranch?Z(s)?a.effects.push(...s):a.effects.push(s):Eu(s)}const js=Symbol.for("v-fgt"),mi=Symbol.for("v-txt"),ia=Symbol.for("v-cmt"),Wi=Symbol.for("v-stc"),Le=[];let Sa=null;function Rs(s=!1){Le.push(Sa=s?null:[])}function y6(){Le.pop(),Sa=Le[Le.length-1]||null}let je=1;function Op(s){je+=s,s<0&&Sa&&(Sa.hasOnce=!0)}function ak(s){return s.dynamicChildren=je>0?Sa||Ni:null,y6(),je>0&&Sa&&Sa.push(s),s}function Ba(s,a,n,i,e,l){return ak(Y(s,a,n,i,e,l,!0))}function Wa(s,a,n,i,e){return ak(ds(s,a,n,i,e,!0))}function qe(s){return s?s.__v_isVNode===!0:!1}function di(s,a){return s.type===a.type&&s.key===a.key}const nk=({key:s})=>s??null,Ml=({ref:s,ref_key:a,ref_for:n})=>(typeof s=="number"&&(s=""+s),s!=null?qs(s)||Ns(s)||ts(s)?{i:Ks,r:s,k:a,f:!!n}:s:null);function Y(s,a=null,n=null,i=0,e=null,l=s===js?0:1,t=!1,r=!1){const p={__v_isVNode:!0,__v_skip:!0,type:s,props:a,key:a&&nk(a),ref:a&&Ml(a),scopeId:FB,slotScopeIds:null,children:n,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetStart:null,targetAnchor:null,staticCount:0,shapeFlag:l,patchFlag:i,dynamicProps:e,dynamicChildren:null,appContext:null,ctx:Ks};return r?(Jo(p,n),l&128&&s.normalize(p)):n&&(p.shapeFlag|=qs(n)?8:16),je>0&&!t&&Sa&&(p.patchFlag>0||l&6)&&p.patchFlag!==32&&Sa.push(p),p}const ds=u6;function u6(s,a=null,n=null,i=0,e=null,l=!1){if((!s||s===OB)&&(s=ia),qe(s)){const r=Wn(s,a,!0);return n&&Jo(r,n),je>0&&!l&&Sa&&(r.shapeFlag&6?Sa[Sa.indexOf(s)]=r:Sa.push(r)),r.patchFlag=-2,r}if(_6(s)&&(s=s.__vccOpts),a){a=Ri(a);let{class:r,style:p}=a;r&&!qs(r)&&(a.class=Zi(r)),Ls(p)&&(fo(p)&&!Z(p)&&(p=Vs({},p)),a.style=Ze(p))}const t=qs(s)?1:ZB(s)?128:CB(s)?64:Ls(s)?4:ts(s)?2:0;return Y(s,a,n,i,e,t,l,!0)}function Ri(s){return s?fo(s)||qB(s)?Vs({},s):s:null}function Wn(s,a,n=!1,i=!1){const{props:e,ref:l,patchFlag:t,children:r,transition:p}=s,c=a?v6(e||{},a):e,B={__v_isVNode:!0,__v_skip:!0,type:s.type,props:c,key:c&&nk(c),ref:a&&a.ref?n&&l?Z(l)?l.concat(Ml(a)):[l,Ml(a)]:Ml(a):l,scopeId:s.scopeId,slotScopeIds:s.slotScopeIds,children:r,target:s.target,targetStart:s.targetStart,targetAnchor:s.targetAnchor,staticCount:s.staticCount,shapeFlag:s.shapeFlag,patchFlag:a&&s.type!==js?t===-1?16:t|16:t,dynamicProps:s.dynamicProps,dynamicChildren:s.dynamicChildren,appContext:s.appContext,dirs:s.dirs,transition:p,component:s.component,suspense:s.suspense,ssContent:s.ssContent&&Wn(s.ssContent),ssFallback:s.ssFallback&&Wn(s.ssFallback),el:s.el,anchor:s.anchor,ctx:s.ctx,ce:s.ce};return p&&i&&gi(B,p.clone(B)),B}function Oo(s=" ",a=0){return ds(mi,null,s,a)}function A6(s,a){const n=ds(Wi,null,s);return n.staticCount=a,n}function Gi(s="",a=!1){return a?(Rs(),Wa(ia,null,s)):ds(ia,null,s)}function Ra(s){return s==null||typeof s=="boolean"?ds(ia):Z(s)?ds(js,null,s.slice()):qe(s)?Nn(s):ds(mi,null,String(s))}function Nn(s){return s.el===null&&s.patchFlag!==-1||s.memo?s:Wn(s)}function Jo(s,a){let n=0;const{shapeFlag:i}=s;if(a==null)a=null;else if(Z(a))n=16;else if(typeof a=="object")if(i&65){const e=a.default;e&&(e._c&&(e._d=!1),Jo(s,e()),e._c&&(e._d=!0));return}else{n=32;const e=a._;!e&&!qB(a)?a._ctx=Ks:e===3&&Ks&&(Ks.slots._===1?a._=1:(a._=2,s.patchFlag|=1024))}else ts(a)?(a={default:a,_ctx:Ks},n=32):(a=String(a),i&64?(n=16,a=[Oo(a)]):n=8);s.children=a,s.shapeFlag|=n}function v6(...s){const a={};for(let n=0;n<s.length;n++){const i=s[n];for(const e in i)if(e==="class")a.class!==i.class&&(a.class=Zi([a.class,i.class]));else if(e==="style")a.style=Ze([a.style,i.style]);else if(Ke(e)){const l=a[e],t=i[e];t&&l!==t&&!(Z(l)&&l.includes(t))&&(a[e]=l?[].concat(l,t):t)}else e!==""&&(a[e]=i[e])}return a}function Ia(s,a,n,i=null){Ka(s,a,7,[n,i])}const m6=RB();let E6=0;function F6(s,a,n){const i=s.type,e=(a?a.appContext:s.appContext)||m6,l={uid:E6++,vnode:s,type:i,parent:a,appContext:e,root:null,next:null,subTree:null,effect:null,update:null,job:null,scope:new Vy(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:a?a.provides:Object.create(e.provides),ids:a?a.ids:["",0,0],accessCache:null,renderCache:[],components:null,directives:null,propsOptions:zB(i,e),emitsOptions:YB(i,e),emit:null,emitted:null,propsDefaults:Es,inheritAttrs:i.inheritAttrs,ctx:Es,data:Es,props:Es,attrs:Es,slots:Es,refs:Es,setupState:Es,setupContext:null,suspense:n,suspenseId:n?n.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return l.ctx={_:l},l.root=a?a.root:l,l.emit=c6.bind(null,l),s.ce&&s.ce(l),l}let Gs=null;const ai=()=>Gs||Ks;let st,Tr;{const s=ht(),a=(n,i)=>{let e;return(e=s[n])||(e=s[n]=[]),e.push(i),l=>{e.length>1?e.forEach(t=>t(l)):e[0](l)}};st=a("__VUE_INSTANCE_SETTERS__",n=>Gs=n),Tr=a("__VUE_SSR_SETTERS__",n=>se=n)}const ll=s=>{const a=Gs;return st(s),s.scope.on(),()=>{s.scope.off(),st(a)}},Jp=()=>{Gs&&Gs.scope.off(),st(null)};function ik(s){return s.vnode.shapeFlag&4}let se=!1;function C6(s,a=!1,n=!1){a&&Tr(a);const{props:i,children:e}=s.vnode,l=ik(s);Ku(s,i,l,a),s6(s,e,n);const t=l?g6(s,a):void 0;return a&&Tr(!1),t}function g6(s,a){const n=s.type;s.accessCache=Object.create(null),s.proxy=new Proxy(s.ctx,zu);const{setup:i}=n;if(i){Xn();const e=s.setupContext=i.length>1?f6(s):null,l=ll(s),t=sl(i,s,0,[s.props,e]),r=$d(t);if(Yn(),l(),(r||s.sp)&&!vi(s)&&wo(s),r){if(t.then(Jp,Jp),a)return t.then(p=>{Ip(s,p,a)}).catch(p=>{al(p,s,0)});s.asyncDep=t}else Ip(s,t,a)}else ek(s,a)}function Ip(s,a,n){ts(a)?s.type.__ssrInlineRender?s.ssrRender=a:s.render=a:Ls(a)&&(s.setupState=uB(a)),ek(s,n)}let Pp;function ek(s,a,n){const i=s.type;if(!s.render){if(!a&&Pp&&!i.render){const e=i.template||xo(s).template;if(e){const{isCustomElement:l,compilerOptions:t}=s.appContext.config,{delimiters:r,compilerOptions:p}=i,c=Vs(Vs({isCustomElement:l,delimiters:r},t),p);i.render=Pp(e,c)}}s.render=i.render||dn}{const e=ll(s);Xn();try{Nu(s)}finally{Yn(),e()}}}const b6={get(s,a){return aa(s,"get",""),s[a]}};function f6(s){const a=n=>{s.exposed=n||{}};return{attrs:new Proxy(s.attrs,b6),slots:s.slots,emit:s.emit,expose:a}}function mt(s){return s.exposed?s.exposeProxy||(s.exposeProxy=new Proxy(uB(ou(s.exposed)),{get(a,n){if(n in a)return a[n];if(n in xe)return xe[n](s)},has(a,n){return n in a||n in xe}})):s.proxy}function D6(s,a=!0){return ts(s)?s.displayName||s.name:s.name||a&&s.__name}function _6(s){return ts(s)&&"__vccOpts"in s}const g=(s,a)=>yu(s,a,se);function d(s,a,n){const i=arguments.length;return i===2?Ls(a)&&!Z(a)?qe(a)?ds(s,null,[a]):ds(s,a):ds(s,null,a):(i>3?n=Array.prototype.slice.call(arguments,2):i===3&&qe(n)&&(n=[n]),ds(s,a,n))}const lk="3.5.12";/**
* @vue/runtime-dom v3.5.12
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let Or;const Rp=typeof window<"u"&&window.trustedTypes;if(Rp)try{Or=Rp.createPolicy("vue",{createHTML:s=>s})}catch{}const tk=Or?s=>Or.createHTML(s):s=>s,S6="http://www.w3.org/2000/svg",w6="http://www.w3.org/1998/Math/MathML",Cn=typeof document<"u"?document:null,Mp=Cn&&Cn.createElement("template"),x6={insert:(s,a,n)=>{a.insertBefore(s,n||null)},remove:s=>{const a=s.parentNode;a&&a.removeChild(s)},createElement:(s,a,n,i)=>{const e=a==="svg"?Cn.createElementNS(S6,s):a==="mathml"?Cn.createElementNS(w6,s):n?Cn.createElement(s,{is:n}):Cn.createElement(s);return s==="select"&&i&&i.multiple!=null&&e.setAttribute("multiple",i.multiple),e},createText:s=>Cn.createTextNode(s),createComment:s=>Cn.createComment(s),setText:(s,a)=>{s.nodeValue=a},setElementText:(s,a)=>{s.textContent=a},parentNode:s=>s.parentNode,nextSibling:s=>s.nextSibling,querySelector:s=>Cn.querySelector(s),setScopeId(s,a){s.setAttribute(a,"")},insertStaticContent(s,a,n,i,e,l){const t=n?n.previousSibling:a.lastChild;if(e&&(e===l||e.nextSibling))for(;a.insertBefore(e.cloneNode(!0),n),!(e===l||!(e=e.nextSibling)););else{Mp.innerHTML=tk(i==="svg"?`<svg>${s}</svg>`:i==="mathml"?`<math>${s}</math>`:s);const r=Mp.content;if(i==="svg"||i==="mathml"){const p=r.firstChild;for(;p.firstChild;)r.appendChild(p.firstChild);r.removeChild(p)}a.insertBefore(r,n)}return[t?t.nextSibling:a.firstChild,n?n.previousSibling:a.lastChild]}},Tn="transition",Ae="animation",ae=Symbol("_vtc"),rk={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String},ok=Vs({},bB,rk),L6=s=>(s.displayName="Transition",s.props=ok,s),bi=L6((s,{slots:a})=>d(bu,pk(s),a)),oi=(s,a=[])=>{Z(s)?s.forEach(n=>n(...a)):s&&s(...a)},jp=s=>s?Z(s)?s.some(a=>a.length>1):s.length>1:!1;function pk(s){const a={};for(const R in s)R in rk||(a[R]=s[R]);if(s.css===!1)return a;const{name:n="v",type:i,duration:e,enterFromClass:l=`${n}-enter-from`,enterActiveClass:t=`${n}-enter-active`,enterToClass:r=`${n}-enter-to`,appearFromClass:p=l,appearActiveClass:c=t,appearToClass:B=r,leaveFromClass:k=`${n}-leave-from`,leaveActiveClass:h=`${n}-leave-active`,leaveToClass:y=`${n}-leave-to`}=s,u=T6(e),A=u&&u[0],F=u&&u[1],{onBeforeEnter:C,onEnter:b,onEnterCancelled:m,onLeave:f,onLeaveCancelled:x,onBeforeAppear:V=C,onAppear:P=b,onAppearCancelled:W=m}=a,j=(R,ns,bs)=>{Rn(R,ns?B:r),Rn(R,ns?c:t),bs&&bs()},T=(R,ns)=>{R._isLeaving=!1,Rn(R,k),Rn(R,y),Rn(R,h),ns&&ns()},H=R=>(ns,bs)=>{const Js=R?P:b,G=()=>j(ns,R,bs);oi(Js,[ns,G]),qp(()=>{Rn(ns,R?p:l),vn(ns,R?B:r),jp(Js)||Vp(ns,i,A,G)})};return Vs(a,{onBeforeEnter(R){oi(C,[R]),vn(R,l),vn(R,t)},onBeforeAppear(R){oi(V,[R]),vn(R,p),vn(R,c)},onEnter:H(!1),onAppear:H(!0),onLeave(R,ns){R._isLeaving=!0;const bs=()=>T(R,ns);vn(R,k),vn(R,h),dk(),qp(()=>{R._isLeaving&&(Rn(R,k),vn(R,y),jp(f)||Vp(R,i,F,bs))}),oi(f,[R,bs])},onEnterCancelled(R){j(R,!1),oi(m,[R])},onAppearCancelled(R){j(R,!0),oi(W,[R])},onLeaveCancelled(R){T(R),oi(x,[R])}})}function T6(s){if(s==null)return null;if(Ls(s))return[Gt(s.enter),Gt(s.leave)];{const a=Gt(s);return[a,a]}}function Gt(s){return Oy(s)}function vn(s,a){a.split(/\s+/).forEach(n=>n&&s.classList.add(n)),(s[ae]||(s[ae]=new Set)).add(a)}function Rn(s,a){a.split(/\s+/).forEach(i=>i&&s.classList.remove(i));const n=s[ae];n&&(n.delete(a),n.size||(s[ae]=void 0))}function qp(s){requestAnimationFrame(()=>{requestAnimationFrame(s)})}let O6=0;function Vp(s,a,n,i){const e=s._endId=++O6,l=()=>{e===s._endId&&i()};if(n!=null)return setTimeout(l,n);const{type:t,timeout:r,propCount:p}=ck(s,a);if(!t)return i();const c=t+"end";let B=0;const k=()=>{s.removeEventListener(c,h),l()},h=y=>{y.target===s&&++B>=p&&k()};setTimeout(()=>{B<p&&k()},r+1),s.addEventListener(c,h)}function ck(s,a){const n=window.getComputedStyle(s),i=u=>(n[u]||"").split(", "),e=i(`${Tn}Delay`),l=i(`${Tn}Duration`),t=zp(e,l),r=i(`${Ae}Delay`),p=i(`${Ae}Duration`),c=zp(r,p);let B=null,k=0,h=0;a===Tn?t>0&&(B=Tn,k=t,h=l.length):a===Ae?c>0&&(B=Ae,k=c,h=p.length):(k=Math.max(t,c),B=k>0?t>c?Tn:Ae:null,h=B?B===Tn?l.length:p.length:0);const y=B===Tn&&/\b(transform|all)(,|$)/.test(i(`${Tn}Property`).toString());return{type:B,timeout:k,propCount:h,hasTransform:y}}function zp(s,a){for(;s.length<a.length;)s=s.concat(s);return Math.max(...a.map((n,i)=>Np(n)+Np(s[i])))}function Np(s){return s==="auto"?0:Number(s.slice(0,-1).replace(",","."))*1e3}function dk(){return document.body.offsetHeight}function J6(s,a,n){const i=s[ae];i&&(a=(a?[a,...i]:[...i]).join(" ")),a==null?s.removeAttribute("class"):n?s.setAttribute("class",a):s.className=a}const at=Symbol("_vod"),Bk=Symbol("_vsh"),I6={beforeMount(s,{value:a},{transition:n}){s[at]=s.style.display==="none"?"":s.style.display,n&&a?n.beforeEnter(s):ve(s,a)},mounted(s,{value:a},{transition:n}){n&&a&&n.enter(s)},updated(s,{value:a,oldValue:n},{transition:i}){!a!=!n&&(i?a?(i.beforeEnter(s),ve(s,!0),i.enter(s)):i.leave(s,()=>{ve(s,!1)}):ve(s,a))},beforeUnmount(s,{value:a}){ve(s,a)}};function ve(s,a){s.style.display=a?s[at]:"none",s[Bk]=!a}const kk=Symbol("");function P6(s){const a=ai();if(!a)return;const n=a.ut=(e=s(a.proxy))=>{Array.from(document.querySelectorAll(`[data-v-owner="${a.uid}"]`)).forEach(l=>nt(l,e))},i=()=>{const e=s(a.proxy);a.ce?nt(a.ce,e):Jr(a.subTree,e),n(e)};xB(()=>{r6(i)}),as(()=>{const e=new MutationObserver(i);e.observe(a.subTree.el.parentNode,{childList:!0}),si(()=>e.disconnect())})}function Jr(s,a){if(s.shapeFlag&128){const n=s.suspense;s=n.activeBranch,n.pendingBranch&&!n.isHydrating&&n.effects.push(()=>{Jr(n.activeBranch,a)})}for(;s.component;)s=s.component.subTree;if(s.shapeFlag&1&&s.el)nt(s.el,a);else if(s.type===js)s.children.forEach(n=>Jr(n,a));else if(s.type===Wi){let{el:n,anchor:i}=s;for(;n&&(nt(n,a),n!==i);)n=n.nextSibling}}function nt(s,a){if(s.nodeType===1){const n=s.style;let i="";for(const e in a)n.setProperty(`--${e}`,a[e]),i+=`--${e}: ${a[e]};`;n[kk]=i}}const R6=/(^|;)\s*display\s*:/;function M6(s,a,n){const i=s.style,e=qs(n);let l=!1;if(n&&!e){if(a)if(qs(a))for(const t of a.split(";")){const r=t.slice(0,t.indexOf(":")).trim();n[r]==null&&jl(i,r,"")}else for(const t in a)n[t]==null&&jl(i,t,"");for(const t in n)t==="display"&&(l=!0),jl(i,t,n[t])}else if(e){if(a!==n){const t=i[kk];t&&(n+=";"+t),i.cssText=n,l=R6.test(n)}}else a&&s.removeAttribute("style");at in s&&(s[at]=l?i.display:"",s[Bk]&&(i.display="none"))}const Hp=/\s*!important$/;function jl(s,a,n){if(Z(n))n.forEach(i=>jl(s,a,i));else if(n==null&&(n=""),a.startsWith("--"))s.setProperty(a,n);else{const i=j6(s,a);Hp.test(n)?s.setProperty(_n(i),n.replace(Hp,""),"important"):s[i]=n}}const Up=["Webkit","Moz","ms"],Kt={};function j6(s,a){const n=Kt[a];if(n)return n;let i=ha(a);if(i!=="filter"&&i in s)return Kt[a]=i;i=Ye(i);for(let e=0;e<Up.length;e++){const l=Up[e]+i;if(l in s)return Kt[a]=l}return a}const $p="http://www.w3.org/1999/xlink";function Qp(s,a,n,i,e,l=jy(a)){i&&a.startsWith("xlink:")?n==null?s.removeAttributeNS($p,a.slice(6,a.length)):s.setAttributeNS($p,a,n):n==null||l&&!Kd(n)?s.removeAttribute(a):s.setAttribute(a,l?"":Ga(n)?String(n):n)}function Wp(s,a,n,i,e){if(a==="innerHTML"||a==="textContent"){n!=null&&(s[a]=a==="innerHTML"?tk(n):n);return}const l=s.tagName;if(a==="value"&&l!=="PROGRESS"&&!l.includes("-")){const r=l==="OPTION"?s.getAttribute("value")||"":s.value,p=n==null?s.type==="checkbox"?"on":"":String(n);(r!==p||!("_value"in s))&&(s.value=p),n==null&&s.removeAttribute(a),s._value=n;return}let t=!1;if(n===""||n==null){const r=typeof s[a];r==="boolean"?n=Kd(n):n==null&&r==="string"?(n="",t=!0):r==="number"&&(n=0,t=!0)}try{s[a]=n}catch{}t&&s.removeAttribute(e||a)}function fn(s,a,n,i){s.addEventListener(a,n,i)}function q6(s,a,n,i){s.removeEventListener(a,n,i)}const Gp=Symbol("_vei");function V6(s,a,n,i,e=null){const l=s[Gp]||(s[Gp]={}),t=l[a];if(i&&t)t.value=i;else{const[r,p]=z6(a);if(i){const c=l[a]=U6(i,e);fn(s,r,c,p)}else t&&(q6(s,r,t,p),l[a]=void 0)}}const Kp=/(?:Once|Passive|Capture)$/;function z6(s){let a;if(Kp.test(s)){a={};let i;for(;i=s.match(Kp);)s=s.slice(0,s.length-i[0].length),a[i[0].toLowerCase()]=!0}return[s[2]===":"?s.slice(3):_n(s.slice(2)),a]}let Xt=0;const N6=Promise.resolve(),H6=()=>Xt||(N6.then(()=>Xt=0),Xt=Date.now());function U6(s,a){const n=i=>{if(!i._vts)i._vts=Date.now();else if(i._vts<=n.attached)return;Ka($6(i,n.value),a,5,[i])};return n.value=s,n.attached=H6(),n}function $6(s,a){if(Z(a)){const n=s.stopImmediatePropagation;return s.stopImmediatePropagation=()=>{n.call(s),s._stopped=!0},a.map(i=>e=>!e._stopped&&i&&i(e))}else return a}const Xp=s=>s.charCodeAt(0)===111&&s.charCodeAt(1)===110&&s.charCodeAt(2)>96&&s.charCodeAt(2)<123,Q6=(s,a,n,i,e,l)=>{const t=e==="svg";a==="class"?J6(s,i,t):a==="style"?M6(s,n,i):Ke(a)?uo(a)||V6(s,a,n,i,l):(a[0]==="."?(a=a.slice(1),!0):a[0]==="^"?(a=a.slice(1),!1):W6(s,a,i,t))?(Wp(s,a,i),!s.tagName.includes("-")&&(a==="value"||a==="checked"||a==="selected")&&Qp(s,a,i,t,l,a!=="value")):s._isVueCE&&(/[A-Z]/.test(a)||!qs(i))?Wp(s,ha(a),i,l,a):(a==="true-value"?s._trueValue=i:a==="false-value"&&(s._falseValue=i),Qp(s,a,i,t))};function W6(s,a,n,i){if(i)return!!(a==="innerHTML"||a==="textContent"||a in s&&Xp(a)&&ts(n));if(a==="spellcheck"||a==="draggable"||a==="translate"||a==="form"||a==="list"&&s.tagName==="INPUT"||a==="type"&&s.tagName==="TEXTAREA")return!1;if(a==="width"||a==="height"){const e=s.tagName;if(e==="IMG"||e==="VIDEO"||e==="CANVAS"||e==="SOURCE")return!1}return Xp(a)&&qs(n)?!1:a in s}const hk=new WeakMap,yk=new WeakMap,it=Symbol("_moveCb"),Yp=Symbol("_enterCb"),G6=s=>(delete s.props.mode,s),K6=G6({name:"TransitionGroup",props:Vs({},ok,{tag:String,moveClass:String}),setup(s,{slots:a}){const n=ai(),i=gB();let e,l;return LB(()=>{if(!e.length)return;const t=s.moveClass||`${s.name||"v"}-move`;if(!a7(e[0].el,n.vnode.el,t))return;e.forEach(Y6),e.forEach(Z6);const r=e.filter(s7);dk(),r.forEach(p=>{const c=p.el,B=c.style;vn(c,t),B.transform=B.webkitTransform=B.transitionDuration="";const k=c[it]=h=>{h&&h.target!==c||(!h||/transform$/.test(h.propertyName))&&(c.removeEventListener("transitionend",k),c[it]=null,Rn(c,t))};c.addEventListener("transitionend",k)})}),()=>{const t=vs(s),r=pk(t);let p=t.tag||js;if(e=[],l)for(let c=0;c<l.length;c++){const B=l[c];B.el&&B.el instanceof Element&&(e.push(B),gi(B,Me(B,r,i,n)),hk.set(B,B.el.getBoundingClientRect()))}l=a.default?So(a.default()):[];for(let c=0;c<l.length;c++){const B=l[c];B.key!=null&&gi(B,Me(B,r,i,n))}return ds(p,null,l)}}}),X6=K6;function Y6(s){const a=s.el;a[it]&&a[it](),a[Yp]&&a[Yp]()}function Z6(s){yk.set(s,s.el.getBoundingClientRect())}function s7(s){const a=hk.get(s),n=yk.get(s),i=a.left-n.left,e=a.top-n.top;if(i||e){const l=s.el.style;return l.transform=l.webkitTransform=`translate(${i}px,${e}px)`,l.transitionDuration="0s",s}}function a7(s,a,n){const i=s.cloneNode(),e=s[ae];e&&e.forEach(r=>{r.split(/\s+/).forEach(p=>p&&i.classList.remove(p))}),n.split(/\s+/).forEach(r=>r&&i.classList.add(r)),i.style.display="none";const l=a.nodeType===1?a:a.parentNode;l.appendChild(i);const{hasTransform:t}=ck(i);return l.removeChild(i),t}const Gn=s=>{const a=s.props["onUpdate:modelValue"]||!1;return Z(a)?n=>Rl(a,n):a};function n7(s){s.target.composing=!0}function Zp(s){const a=s.target;a.composing&&(a.composing=!1,a.dispatchEvent(new Event("input")))}const qa=Symbol("_assign"),sc={created(s,{modifiers:{lazy:a,trim:n,number:i}},e){s[qa]=Gn(e);const l=i||e.props&&e.props.type==="number";fn(s,a?"change":"input",t=>{if(t.target.composing)return;let r=s.value;n&&(r=r.trim()),l&&(r=Ul(r)),s[qa](r)}),n&&fn(s,"change",()=>{s.value=s.value.trim()}),a||(fn(s,"compositionstart",n7),fn(s,"compositionend",Zp),fn(s,"change",Zp))},mounted(s,{value:a}){s.value=a??""},beforeUpdate(s,{value:a,oldValue:n,modifiers:{lazy:i,trim:e,number:l}},t){if(s[qa]=Gn(t),s.composing)return;const r=(l||s.type==="number")&&!/^0\d/.test(s.value)?Ul(s.value):s.value,p=a??"";r!==p&&(document.activeElement===s&&s.type!=="range"&&(i&&a===n||e&&s.value.trim()===p)||(s.value=p))}},i7={deep:!0,created(s,a,n){s[qa]=Gn(n),fn(s,"change",()=>{const i=s._modelValue,e=ne(s),l=s.checked,t=s[qa];if(Z(i)){const r=mo(i,e),p=r!==-1;if(l&&!p)t(i.concat(e));else if(!l&&p){const c=[...i];c.splice(r,1),t(c)}}else if(le(i)){const r=new Set(i);l?r.add(e):r.delete(e),t(r)}else t(uk(s,l))})},mounted:ac,beforeUpdate(s,a,n){s[qa]=Gn(n),ac(s,a,n)}};function ac(s,{value:a,oldValue:n},i){s._modelValue=a;let e;if(Z(a))e=mo(a,i.props.value)>-1;else if(le(a))e=a.has(i.props.value);else{if(a===n)return;e=Fi(a,uk(s,!0))}s.checked!==e&&(s.checked=e)}const e7={created(s,{value:a},n){s.checked=Fi(a,n.props.value),s[qa]=Gn(n),fn(s,"change",()=>{s[qa](ne(s))})},beforeUpdate(s,{value:a,oldValue:n},i){s[qa]=Gn(i),a!==n&&(s.checked=Fi(a,i.props.value))}},l7={deep:!0,created(s,{value:a,modifiers:{number:n}},i){const e=le(a);fn(s,"change",()=>{const l=Array.prototype.filter.call(s.options,t=>t.selected).map(t=>n?Ul(ne(t)):ne(t));s[qa](s.multiple?e?new Set(l):l:l[0]),s._assigning=!0,ya(()=>{s._assigning=!1})}),s[qa]=Gn(i)},mounted(s,{value:a}){nc(s,a)},beforeUpdate(s,a,n){s[qa]=Gn(n)},updated(s,{value:a}){s._assigning||nc(s,a)}};function nc(s,a){const n=s.multiple,i=Z(a);if(!(n&&!i&&!le(a))){for(let e=0,l=s.options.length;e<l;e++){const t=s.options[e],r=ne(t);if(n)if(i){const p=typeof r;p==="string"||p==="number"?t.selected=a.some(c=>String(c)===String(r)):t.selected=mo(a,r)>-1}else t.selected=a.has(r);else if(Fi(ne(t),a)){s.selectedIndex!==e&&(s.selectedIndex=e);return}}!n&&s.selectedIndex!==-1&&(s.selectedIndex=-1)}}function ne(s){return"_value"in s?s._value:s.value}function uk(s,a){const n=a?"_trueValue":"_falseValue";return n in s?s[n]:a}const q9={created(s,a,n){fl(s,a,n,null,"created")},mounted(s,a,n){fl(s,a,n,null,"mounted")},beforeUpdate(s,a,n,i){fl(s,a,n,i,"beforeUpdate")},updated(s,a,n,i){fl(s,a,n,i,"updated")}};function t7(s,a){switch(s){case"SELECT":return l7;case"TEXTAREA":return sc;default:switch(a){case"checkbox":return i7;case"radio":return e7;default:return sc}}}function fl(s,a,n,i,e){const t=t7(s.tagName,n.props&&n.props.type)[e];t&&t(s,a,n,i)}const r7=["ctrl","shift","alt","meta"],o7={stop:s=>s.stopPropagation(),prevent:s=>s.preventDefault(),self:s=>s.target!==s.currentTarget,ctrl:s=>!s.ctrlKey,shift:s=>!s.shiftKey,alt:s=>!s.altKey,meta:s=>!s.metaKey,left:s=>"button"in s&&s.button!==0,middle:s=>"button"in s&&s.button!==1,right:s=>"button"in s&&s.button!==2,exact:(s,a)=>r7.some(n=>s[`${n}Key`]&&!a.includes(n))},V9=(s,a)=>{const n=s._withMods||(s._withMods={}),i=a.join(".");return n[i]||(n[i]=(e,...l)=>{for(let t=0;t<a.length;t++){const r=o7[a[t]];if(r&&r(e,a))return}return s(e,...l)})},p7={esc:"escape",space:" ",up:"arrow-up",left:"arrow-left",right:"arrow-right",down:"arrow-down",delete:"backspace"},z9=(s,a)=>{const n=s._withKeys||(s._withKeys={}),i=a.join(".");return n[i]||(n[i]=e=>{if(!("key"in e))return;const l=_n(e.key);if(a.some(t=>t===l||p7[t]===l))return s(e)})},c7=Vs({patchProp:Q6},x6);let Yt,ic=!1;function d7(){return Yt=ic?Yt:n6(c7),ic=!0,Yt}const B7=(...s)=>{const a=d7().createApp(...s),{mount:n}=a;return a.mount=i=>{const e=h7(i);if(e)return n(e,!0,k7(e))},a};function k7(s){if(s instanceof SVGElement)return"svg";if(typeof MathMLElement=="function"&&s instanceof MathMLElement)return"mathml"}function h7(s){return qs(s)?document.querySelector(s):s}var tl=s=>/^[a-z][a-z0-9+.-]*:/.test(s)||s.startsWith("//"),y7=/.md((\?|#).*)?$/,Io=(s,a="/")=>tl(s)||s.startsWith("/")&&!s.startsWith(a)&&!y7.test(s),ni=s=>/^(https?:)?\/\//.test(s),ec=s=>{if(!s||s.endsWith("/"))return s;let a=s.replace(/(^|\/)README.md$/i,"$1index.html");return a.endsWith(".md")?a=a.substring(0,a.length-3)+".html":a.endsWith(".html")||(a=a+".html"),a.endsWith("/index.html")&&(a=a.substring(0,a.length-10)),a},u7="http://.",A7=(s,a)=>{if(!s.startsWith("/")&&a){const n=a.slice(0,a.lastIndexOf("/"));return ec(new URL(`${n}/${s}`,u7).pathname)}return ec(s)},v7=(s,a)=>{const n=Object.keys(s).sort((i,e)=>{const l=e.split("/").length-i.split("/").length;return l!==0?l:e.length-i.length});for(const i of n)if(a.startsWith(i))return i;return"/"},lc=(s,a="/")=>{const n=s.replace(/^(?:https?:)?\/\/[^/]*/,"");return n.startsWith(a)?`/${n.slice(a.length)}`:n},m7=/(#|\?)/,Ak=s=>{const[a,...n]=s.split(m7);return{pathname:a,hashAndQueries:n.join("")}},E7=["link","meta","script","style","noscript","template"],F7=["title","base"],C7=([s,a,n])=>F7.includes(s)?s:E7.includes(s)?s==="meta"&&a.name?`${s}.${a.name}`:s==="template"&&a.id?`${s}.${a.id}`:JSON.stringify([s,Object.entries(a).map(([i,e])=>typeof e=="boolean"?e?[i,""]:null:[i,e]).filter(i=>i!=null).sort(([i],[e])=>i.localeCompare(e)),n]):null,g7=s=>{const a=new Set,n=[];return s.forEach(i=>{const e=C7(i);e&&!a.has(e)&&(a.add(e),n.push(i))}),n},b7=s=>s[0]==="/"?s:`/${s}`,vk=s=>s[s.length-1]==="/"||s.endsWith(".html")?s:`${s}/`,Et=s=>s[s.length-1]==="/"?s.slice(0,-1):s,Po=s=>s[0]==="/"?s.slice(1):s,f7=s=>typeof s=="function",Bn=s=>Object.prototype.toString.call(s)==="[object Object]",Os=s=>typeof s=="string";const D7="modulepreload",_7=function(s){return"/"+s},tc={},o=function(a,n,i){let e=Promise.resolve();if(n&&n.length>0){document.getElementsByTagName("link");const l=document.querySelector("meta[property=csp-nonce]"),t=(l==null?void 0:l.nonce)||(l==null?void 0:l.getAttribute("nonce"));e=Promise.all(n.map(r=>{if(r=_7(r),r in tc)return;tc[r]=!0;const p=r.endsWith(".css"),c=p?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${r}"]${c}`))return;const B=document.createElement("link");if(B.rel=p?"stylesheet":D7,p||(B.as="script",B.crossOrigin=""),B.href=r,t&&B.setAttribute("nonce",t),document.head.appendChild(B),p)return new Promise((k,h)=>{B.addEventListener("load",k),B.addEventListener("error",()=>h(new Error(`Unable to preload CSS for ${r}`)))})}))}return e.then(()=>a()).catch(l=>{const t=new Event("vite:preloadError",{cancelable:!0});if(t.payload=l,window.dispatchEvent(t),!t.defaultPrevented)throw l})},S7=JSON.parse('{"/site/Q&A.html":"/site/Q_A.html","/posts/Git/gitlab-x=problem.html":"/posts/Git/gitlab-x_problem.html","/posts/Java/JavaWeb/Cookie&SessionJsp.html":"/posts/Java/JavaWeb/Cookie_SessionJsp.html","/posts/Java/JavaWeb/EL&Filter&Listener.html":"/posts/Java/JavaWeb/EL_Filter_Listener.html","/posts/Java/JavaWeb/Request&Response.html":"/posts/Java/JavaWeb/Request_Response.html","/posts/Java/JavaWeb/Tomcat&Http%E5%8D%8F%E8%AE%AE.html":"/posts/Java/JavaWeb/Tomcat_Http%E5%8D%8F%E8%AE%AE.html","/posts/Java/Java%E5%9F%BA%E7%A1%80/day03-Switch&%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5.html":"/posts/Java/Java%E5%9F%BA%E7%A1%80/day03-Switch_%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5.html","/posts/Java/Java%E5%9F%BA%E7%A1%80/day04-IDEA&%E6%95%B0%E7%BB%84.html":"/posts/Java/Java%E5%9F%BA%E7%A1%80/day04-IDEA_%E6%95%B0%E7%BB%84.html","/posts/Java/Java%E5%9F%BA%E7%A1%80/day06-Debug&%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0.html":"/posts/Java/Java%E5%9F%BA%E7%A1%80/day06-Debug_%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0.html","/posts/Java/Java%E5%9F%BA%E7%A1%80/day09-ArrayList%E9%9B%86%E5%90%88&%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F.html":"/posts/Java/Java%E5%9F%BA%E7%A1%80/day09-ArrayList%E9%9B%86%E5%90%88_%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F.html","/posts/Java/Java%E9%9B%86%E5%90%88/java-collection-Queue&Stack.html":"/posts/Java/Java%E9%9B%86%E5%90%88/java-collection-Queue_Stack.html","/posts/Java/Java%E9%9B%86%E5%90%88/java-map-HashMap&HashSet.html":"/posts/Java/Java%E9%9B%86%E5%90%88/java-map-HashMap_HashSet.html","/posts/Java/Java%E9%9B%86%E5%90%88/java-map-TreeMap&TreeSet.html":"/posts/Java/Java%E9%9B%86%E5%90%88/java-map-TreeMap_TreeSet.html"}'),w7=Object.fromEntries([["/",{loader:()=>o(()=>import("./index.html-CYjuZAdR.js"),[]),meta:{d:1729494189e3,e:"「一生短暂，过程很美」 致力于分享自己涉及和了解的内容，包括但不限于编程语言、AI体验、世界探索者、极客知识| Exploration & geek enthusiast，Full-stack Front-end Engineer，UX Designer | 与你一起发现更大的世界。",r:{minutes:.88,words:263},t:"主页",i:"home",y:"h"}}],["/about.html",{loader:()=>o(()=>import("./about.html-DrdHbAFX.js"),[]),meta:{d:1678830345e3,l:"2023年3月14日",c:["Blog"],g:["Blog"],e:`
<div class="hint-container info">
<p class="hint-container-title">✨📒</p>
<p>详细记录一下此次建站过程</p>
</div>
<h2>开始</h2>
<p>之前的博客是基于jekyll打造的，要添加和定制化的东西都只能基于html+js+css完成，有些麻烦，所以一直有想更换引擎的想法<br>
直到偶然间发现vuepress，首先是被<code>vue3</code>+<code>typescript</code>+<code>vite</code>吸引，然后看到默认主题属实有点不合符我的期待，自己动手成本又太高，也没有太急着去折腾，直到无意中发现了<br>
<a href="https://theme-hope.vuejs.press/zh/" target="_blank" rel="noopener noreferrer">vuepress-theme-hope</a>，漂亮的外观一下子就吸引到我了，然后去官网深入研究了一番，发现二次开发的成本并不高，对于我来说比较友好，基本都是基于选项的配置型，和一小部分的定制开发，也可以基于vue来写，这让我觉得很合适。所以，一步步折腾了起来……</p>`,r:{minutes:3.03,words:910},t:"关于本站",i:"info",y:"a"}}],["/collect.html",{loader:()=>o(()=>import("./collect.html-CsUapYNn.js"),[]),meta:{d:1729494189e3,e:`<!-- markdownlint-disable -->
`,r:{minutes:1.43,words:429},t:"收藏",i:"home",y:"h"}}],["/friend.html",{loader:()=>o(()=>import("./friend.html-CGpBrgZB.js"),[]),meta:{d:1729494189e3,e:`<h2>小伙伴</h2>
`,r:{minutes:1.41,words:424},t:"友情链接",i:"link",y:"p"}}],["/intro.html",{loader:()=>o(()=>import("./intro.html-6Z7oClA0.js"),[]),meta:{d:16785792e5,l:"2023年3月12日",c:["About"],g:["About"],e:`

<h2>Profile</h2>
<p><em>Exploration &amp; geek enthusiast, full-stack front-end engineer, UX Designer | Currently focusing on cross-platform development with main directions in iOS, ReactNative, Flutter, and Vue | Discovering a bigger world together with you.</em></p>
<div class="hint-container tip">
<p class="hint-container-title">Profile</p>
<p>探索 &amp; 极客 爱好者，大前端工程师，用户体验设计师 |目前主要研究方向在跨平台开发上，iOS、ReactNative、Flutter、Vue是主要方向| 期待与你一起发现更大的世界</p>
</div>`,r:{minutes:1.08,words:324},t:"关于我",i:"people",y:"a"}}],["/visitorsbook.html",{loader:()=>o(()=>import("./visitorsbook.html-DVUyQ0kn.js"),[]),meta:{d:1729494189e3,e:`
<figure><img src="https://tuapi.eees.cc/api.php?category=dongman&amp;px=pc&amp;type=302" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<div class="hint-container tip">
<p class="hint-container-title">博主留言✨📒</p>
<p>欢迎来到留言板，这里是一个和时间无关的地方，一个让你的思绪在文字间蔓延的角落。</p>
<p>在这个喧嚣的世界里，人们总是忙于追逐着生活的节奏，忙碌地奔走于繁琐的工作和琐事之间，但也总有那么一刻，我们需要停下来，静下心来，聆听内心的声音。</p>
<p>博客是我用来记录生活、思考和感悟的地方，每一篇文章都是我用心写下的文字，希望能够传递给更多的人，与大家一起分享我的所思所想。<br>
或许，你此时正在迷茫，或者你已找到了你想要的答案，又或者你只是想要寻找一个宁静的地方，希望我们可以相互启迪，相互学习，共同成长。</p>
<p>🏷 如果你有什么想法、问题或者建议，都可以在这里留言，我会认真阅读每一条留言，尽可能地回复你们的问题和疑虑。同时，我也希望我们能够相互尊重、理解和包容，共同营造一个良好的交流环境。🌤</p>
</div>`,r:{minutes:1.05,words:316},t:"留言板 ✨",i:"mark",y:"p"}}],["/blog/",{loader:()=>o(()=>import("./index.html-Cs7cT1ek.js"),[]),meta:{d:1729494189e3,e:`
<div class="hint-container tip">
<p class="hint-container-title">🧩</p>
<p>这里会记录一些站点建立及后续更新过程中相关的文章</p>
</div>
<h2>目录</h2>
<ul>
<li>
<p><a href="/blog/auto-push">📌 如何利用GitHub Action提交URL到搜索引擎</a></p>
</li>
<li>
<p><a href="/blog/waline-mail">📌 评论插件 Waline 之邮件通知配置</a></p>
</li>
<li>
<p><a href="/about">📌 新站建站过程</a></p>
</li>
<li>
<p><a href="/blog/jekyll">📌 Jekyll的旧站回忆</a></p>
</li>
<li>
<p><a href="/blog/disqus">📌 评论系统从多说迁移到disqus</a></p>
</li>
</ul>`,r:{minutes:.33,words:99},t:"Blog相关",i:"blog",y:"p"}}],["/blog/auto-push.html",{loader:()=>o(()=>import("./auto-push.html-C_0w9yAY.js"),[]),meta:{d:16816896e5,l:"2023年4月17日",c:["Blog"],g:["Blog","GitHub Action"],v:"https://w.wallhaven.cc/full/l3/wallhaven-l3xk6q.jpg",o:!0,e:`<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>这是一个<code>GitHub Actions</code>的配置文件，整体思路是，获取本次更新的url<br>
（通过对比两次提交的sitemap.xml文件），所以触发条件是deploy分支有推送并修改了<code>sitemap.xml</code>文件，再利用python脚本进行url推送到百度、Bing、Google</p>
<p>脚本代码请看这里👉<a href="/posts/Python/submit-url">提交URL到搜索引擎（百度、Bing、Google）</a></p>
</div>
`,r:{minutes:2.8,words:839},t:"如何利用GitHub Action提交URL到搜索引擎",s:"如何自动提交URL到搜索引擎",i:"yaml",y:"a"}}],["/blog/disqus.html",{loader:()=>o(()=>import("./disqus.html-BHJc7vQ3.js"),[]),meta:{d:1492128e6,l:"2017年4月14日",c:["Blog"],g:["Blog"],e:`<blockquote>
<p>由于多说评论系统将于 6 月 1 日下线，所以准备迁移至<a href="https://disqus.com/" target="_blank" rel="noopener noreferrer">disqus</a>，相比较的话对于国内环境还是多说好用一点，毕竟加载快，支持各大媒体的分享，也不用小伙伴们翻墙；而 disqus 分享也只支持 Facebook 和 twitter。。PS:貌似现在又被墙了，以后有时间再换吧，目前就先这样，国内据说<a href="http://changyan.kuaizhan.com/static/help/" target="_blank" rel="noopener noreferrer">畅言</a>还不错</p>
</blockquote>`,r:{minutes:.88,words:263},t:"评论系统从多说迁移到disqus指南",s:"多说迁移到disqus指南",i:"expansion",y:"a"}}],["/blog/jekyll.html",{loader:()=>o(()=>import("./jekyll.html-VBiCMmgl.js"),[]),meta:{d:14781744e5,l:"2016年11月3日",c:["Blog"],g:["Blog"],e:`<blockquote>
<p>“Yeah It's on. ”</p>
</blockquote>
<h2>前言</h2>
<p>Oragekk 的 Blog 就这么开通了。</p>
<p><a href="#build">跳过废话，直接看技术实现 </a></p>
<p>2016 年，11 月 总算有个地方可以好好写点东西了。</p>
<p>作为一个程序员， 看多了别人的 Blog 这种轮子都是酷炫的不要不要的，自己其实一种想搞一个，前两天发现了 GitHub Pages +Jekyll 的技术方案，一下子就上瘾了。</p>
<p>终于可以有自己的自留地了，之前一直在简书上写一些技术类的文章，这次可以有个自己的地盘，想怎么写就怎么写。😝 哈哈。不过这些前端的东西对我也是一种挑战，似懂非懂的看着模板，和一堆 js+css+html 的代码。。一顿头大。。对照着效果，一步步自己改。改好了之后也是蛮有成就感的嘛</p>`,r:{minutes:2.88,words:865},t:"Jekyll旧站回忆",i:"read",y:"a"}}],["/blog/waline-mail.html",{loader:()=>o(()=>import("./waline-mail.html-D8e3rqXe.js"),[]),meta:{d:1680048e6,l:"2023年3月29日",c:["Blog"],g:["Blog"],e:`
<div class="hint-container info">
<p class="hint-container-title">✨</p>
<p>陆续优化中……这次到了评论的邮件通知，由于 waline 带后端，可以开启评论通知，我是部署在 Vercel 上的，配置一下就可以了，模版要感谢<a href="https://blog.ganxb2.com/" target="_blank" rel="noopener noreferrer">小波同学</a></p>
<p>前置注意点</p>
<p>1.邮件要注意每日发信限制，短时密集评论会导致直接被封，禁止发信</p>
<p>2.最好不要使用自己平常使用的邮箱，使用一个单独的邮箱来操作</p>
<p>3.有服务器的同学，自己部署SMTP服务可以不受限制</p>
</div>`,r:{minutes:10.08,words:3023},t:"评论插件 Waline 之邮件通知配置",s:"Waline 之邮件通知配置",i:"waline",y:"a"}}],["/demo/",{loader:()=>o(()=>import("./index.html-C-JLmKRa.js"),[]),meta:{d:1729494189e3,c:["使用指南"],e:`<h2>目录</h2>
<ul>
<li>
<p><a href="/demo/markdown.html" target="_blank">Markdown 展示</a></p>
</li>
<li>
<p><a href="/demo/page.html" target="_blank">页面展示</a></p>
</li>
<li>
<p><a href="/demo/disable.html" target="_blank">禁用展示</a></p>
</li>
<li>
<p><a href="/demo/encrypt.html" target="_blank">加密展示</a></p>
</li>
</ul>`,r:{minutes:.14,words:42},t:"主要功能与配置演示",i:"discover",y:"p"}}],["/demo/disable.html",{loader:()=>o(()=>import("./disable.html-Du_8z29_.js"),[]),meta:{d:1729494189e3,c:["使用指南"],g:["禁用"],e:`<p>你可以通过设置页面的 Frontmatter，在页面禁用功能与布局。</p>
`,r:{minutes:.44,words:132},t:"布局与功能禁用",i:"config",O:3,I:!1,y:"p"}}],["/demo/encrypt.html",{loader:()=>o(()=>import("./encrypt.html-CA4Ue5d9.js"),[]),meta:{d:1729494189e3,c:["使用指南"],g:["文章加密"],n:!0,r:{minutes:.53,words:160},t:"密码加密的文章",i:"lock",I:!1,y:"p"}}],["/demo/markdown.html",{loader:()=>o(()=>import("./markdown.html-BZp0lduf.js"),[]),meta:{d:16760736e5,l:"2023年2月11日",c:["使用指南"],g:["Markdown"],e:`<p>VuePress 主要从 Markdown 文件生成页面。因此，你可以使用它轻松生成文档或博客站点。</p>
<p>你应该创建和编写 Markdown 文件，以便 VuePress 可以根据文件结构将它们转换为不同的页面。</p>
`,r:{minutes:3.32,words:996},t:"Markdown 展示",i:"markdown",O:2,y:"a"}}],["/demo/page.html",{loader:()=>o(()=>import("./page.html-Din9E_5q.js"),[]),meta:{a:"Ms.Hope",d:15778368e5,l:"2020年1月1日",c:["使用指南"],g:["页面配置","使用指南"],u:!1,e:`<p><code>more</code> 注释之前的内容被视为文章摘要。</p>
`,r:{minutes:1.47,words:442},t:"页面配置",i:"page",O:1,I:!1,y:"p"}}],["/demo/slides.html",{loader:()=>o(()=>import("./slides.html-BoE9shI0.js"),[]),meta:{d:15778368e5,l:"2020年1月1日",e:`<!-- markdownlint-disable MD024 MD033 MD051 -->
`,r:{minutes:4.52,words:1356},t:"幻灯片页",i:"slides",I:!1,y:"s"}}],["/news/1.html",{loader:()=>o(()=>import("./1.html-lS7Z94qL.js"),[]),meta:{d:1685664e6,l:"2023年6月2日",e:`<p>我宣布，经过两天的自定义后</p>
<p>🎉说说开始营业了哈哈!!!散花🎉</p>
`,r:{minutes:.15,words:45},t:"从这里开始",i:"support",y:"p"}}],["/news/2.html",{loader:()=>o(()=>import("./2.html-BGyPck_F.js"),[]),meta:{d:16859232e5,l:"2023年6月5日",e:`<p>同样的六月</p>
<p>加油吧💪🏻</p>
<iframe style="border-radius:12px" src="https://open.spotify.com/embed/track/4UPjlT2qK6fODCuLdAv48T?utm_source=generator" width="100%" height="352" frameborder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture" loading="lazy"></iframe>
`,r:{minutes:.18,words:55},t:"六月",i:"support",y:"p"}}],["/news/3.html",{loader:()=>o(()=>import("./3.html-3UKOzlWJ.js"),[]),meta:{d:16859232e5,l:"2023年6月5日",e:`<p>“世间多是方展博，人间难寻小犹太”</p>
`,r:{minutes:.12,words:35},t:"六月",i:"support",y:"p"}}],["/news/4.html",{loader:()=>o(()=>import("./4.html-DUiGx6Nw.js"),[]),meta:{d:16956e8,l:"2023年9月25日",e:`<p>一转眼就快十月了，工作比较忙，有点顾不上更新了哈哈</p>
<p>想加一个音乐播放插件，但是没时间(〒︿〒))</p>
<p>希望接下来一切都好吧，加油！！🎉🎉🎉</p>
`,r:{minutes:.23,words:70},t:"九月",i:"support",y:"p"}}],["/news/5.html",{loader:()=>o(()=>import("./5.html-_-ergU5O.js"),[]),meta:{d:16969824e5,l:"2023年10月11日",e:`<p>嘿~</p>
`,r:{minutes:.22,words:65},t:"十月",i:"support",y:"p"}}],["/news/6.html",{loader:()=>o(()=>import("./6.html-3ncehFbP.js"),[]),meta:{d:17210016e5,l:"2024年7月15日",e:`<p>好喜欢这段话</p>
<p><strong>悟已往之不谏，知来者之可追。</strong><br>
<strong>实迷途其未远，觉今是而昨非。</strong><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--  <em>陶渊明 ·《归去来兮辞》</em></p>
`,r:{minutes:.23,words:69},t:"七月上",i:"support",y:"p"}}],["/news/",{loader:()=>o(()=>import("./index.html-DABQ90TP.js"),[]),meta:{t:"说说",y:"p"}}],["/private/%E4%B8%80%E4%BA%BA%E4%B8%80%E5%8F%A5%E5%AE%8B%E8%AF%8D.html",{loader:()=>o(()=>import("./一人一句宋词.html-DYteVRq3.js"),[]),meta:{d:14845248e5,l:"2017年1月16日",g:["生活"],e:`<figure><img src="https://file.mo7.cc/api/public/bz?idx=1" alt="Bing 每日壁纸" tabindex="0" loading="lazy"><figcaption>Bing 每日壁纸</figcaption></figure>
<blockquote>
<p>写来留待日后慢慢欣赏 😜</p>
</blockquote>
<h3>苏轼</h3>
<p>十年生死两茫茫，<br>
不思量，自难忘。</p>
<h3>陆游</h3>
<p>红酥手，黄藤酒，<br>
满城春色宫墙柳。</p>
<h3>李清照</h3>
<p>此情无计可消除，<br>
才下眉头，却上心头。</p>`,r:{minutes:1.8,words:541},t:"一人一句宋词",i:"alias",y:"a"}}],["/site/Q_A.html",{loader:()=>o(()=>import("./Q_A.html-B1DCl34m.js"),[]),meta:{d:1729556924e3,e:`
<h2>waline 评论插件</h2>
<p><a href="https://console.leancloud.app/apps/fLyHyR8wWAOUpdgZuZmGadUd-MdYXbMMI/settings/keys" target="_blank" rel="noopener noreferrer">leancloud</a></p>
<p><a href="https://waline.js.org/guide/features/reaction.html" target="_blank" rel="noopener noreferrer">waline</a></p>
<p><a href="https://vercel.com/mrjackcs-projects/blog-comments/T9cGMYsinmTAShJyMXyVtqZQG1dX" target="_blank" rel="noopener noreferrer">vercel</a><br>
<a href="https://blog-comments-31kqr5pt2-mrjackcs-projects.vercel.app/ui/profile" target="_blank" rel="noopener noreferrer">评论管理</a></p>`,r:{minutes:.32,words:96},t:"网站常见问题",y:"a"}}],["/site/",{loader:()=>o(()=>import("./index.html-CbR0REGo.js"),[]),meta:{d:253152e6,l:"1978年1月9日",e:`<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>这里放置站点收藏的相关的内容</p>
</div>
<hr>
`,r:{minutes:.11,words:34},t:"站点收藏",i:"sitemap",y:"p"}}],["/site/design.html",{loader:()=>o(()=>import("./design.html-Cv-fbXlq.js"),__vite__mapDeps([0,1])),meta:{d:16811712e5,l:"2023年4月11日",c:["收藏"],g:["工具网站"],e:`<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>素材、设计相关好用的网站</p>
</div>
<h2>工具类</h2>
`,r:{minutes:.24,words:71},t:"素材设计",i:"creative",y:"a"}}],["/site/public-api.html",{loader:()=>o(()=>import("./public-api.html-DiqgZ3HX.js"),__vite__mapDeps([2,1])),meta:{d:16799616e5,l:"2023年3月28日",c:["收藏"],g:["工具网站"],e:`<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>免费公开的API网站，提供多种公共接口服务</p>
</div>
`,r:{minutes:.21,words:63},t:"公开API",i:"api",y:"a"}}],["/posts/Computer-Basics/",{loader:()=>o(()=>import("./index.html-CctD62IK.js"),[]),meta:{d:17047584e5,l:"2024年1月9日",e:`<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>这里放置计算机基础相关的内容</p>
</div>
<hr>
`,r:{minutes:.13,words:40},t:"计算机基础",i:"windows",y:"p"}}],["/posts/Data-Structure/",{loader:()=>o(()=>import("./index.html-DLEglp5R.js"),[]),meta:{d:17099424e5,l:"2024年3月9日",e:`<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>这里放置数据结构与算法相关的内容</p>
</div>
<hr>
`,r:{minutes:.16,words:47},t:"数据结构与算法",i:"table",y:"p"}}],["/posts/Database/",{loader:()=>o(()=>import("./index.html-D4vEvGXH.js"),[]),meta:{d:17126208e5,l:"2024年4月9日",e:`<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>这里放置 数据库 内容</p>
</div>
`,r:{minutes:.09,words:28},t:"数据库",i:"mysql",y:"p"}}],["/posts/Docker/",{loader:()=>o(()=>import("./index.html-koq4m6wy.js"),[]),meta:{d:17172864e5,l:"2024年6月2日",e:`<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>这里放置Docker相关的内容</p>
</div>
<hr>
`,r:{minutes:.09,words:27},t:"Docker",i:"docker",y:"p"}}],["/posts/Docker/docker-03-basic-web-app.html",{loader:()=>o(()=>import("./docker-03-basic-web-app.html-URDu6KEq.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 一个web 应用运行和访问</h2>
<h3>1.1 运行一个 web 应用</h3>
<blockquote>
<p>我们只需要找一个webapp的镜像即可，无需自己再写个程序啥的。接下来让我们尝试使用 docker 构建一个 web 应用程序。</p>
</blockquote>
<p>这里找了一个<code>training/webapp</code>，它是将在docker容器中运行一个 Python Flask web应用。</p>
<div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[root@pdai ~]# docker pull training/webapp</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">Using</span><span style="color:#98C379;--shiki-dark:#98C379"> default</span><span style="color:#98C379;--shiki-dark:#98C379"> tag:</span><span style="color:#98C379;--shiki-dark:#98C379"> latest</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">latest:</span><span style="color:#98C379;--shiki-dark:#98C379"> Pulling</span><span style="color:#98C379;--shiki-dark:#98C379"> from</span><span style="color:#98C379;--shiki-dark:#98C379"> training/webapp</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">Image</span><span style="color:#98C379;--shiki-dark:#98C379"> docker.io/training/webapp:latest</span><span style="color:#98C379;--shiki-dark:#98C379"> uses</span><span style="color:#98C379;--shiki-dark:#98C379"> outdated</span><span style="color:#98C379;--shiki-dark:#98C379"> schema1</span><span style="color:#98C379;--shiki-dark:#98C379"> manifest</span><span style="color:#98C379;--shiki-dark:#98C379"> format.</span><span style="color:#98C379;--shiki-dark:#98C379"> Please</span><span style="color:#98C379;--shiki-dark:#98C379"> upgrade</span><span style="color:#98C379;--shiki-dark:#98C379"> to</span><span style="color:#98C379;--shiki-dark:#98C379"> a</span><span style="color:#98C379;--shiki-dark:#98C379"> schema2</span><span style="color:#98C379;--shiki-dark:#98C379"> image</span><span style="color:#98C379;--shiki-dark:#98C379"> for</span><span style="color:#98C379;--shiki-dark:#98C379"> better</span><span style="color:#98C379;--shiki-dark:#98C379"> future</span><span style="color:#98C379;--shiki-dark:#98C379"> compatibility.</span><span style="color:#98C379;--shiki-dark:#98C379"> More</span><span style="color:#98C379;--shiki-dark:#98C379"> information</span><span style="color:#98C379;--shiki-dark:#98C379"> at</span><span style="color:#98C379;--shiki-dark:#98C379"> https://docs.docker.com/registry/spec/deprecated-schema-v1/</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">e190868d63f8:</span><span style="color:#98C379;--shiki-dark:#98C379"> Pull</span><span style="color:#98C379;--shiki-dark:#98C379"> complete</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">909cd34c6fd7:</span><span style="color:#98C379;--shiki-dark:#98C379"> Pull</span><span style="color:#98C379;--shiki-dark:#98C379"> complete</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">0b9bfabab7c1:</span><span style="color:#98C379;--shiki-dark:#98C379"> Pull</span><span style="color:#98C379;--shiki-dark:#98C379"> complete</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">a3ed95caeb02:</span><span style="color:#98C379;--shiki-dark:#98C379"> Pull</span><span style="color:#98C379;--shiki-dark:#98C379"> complete</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">10bbbc0fc0ff:</span><span style="color:#98C379;--shiki-dark:#98C379"> Pull</span><span style="color:#98C379;--shiki-dark:#98C379"> complete</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">fca59b508e9f:</span><span style="color:#98C379;--shiki-dark:#98C379"> Pull</span><span style="color:#98C379;--shiki-dark:#98C379"> complete</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">e7ae2541b15b:</span><span style="color:#98C379;--shiki-dark:#98C379"> Pull</span><span style="color:#98C379;--shiki-dark:#98C379"> complete</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">9dd97ef58ce9:</span><span style="color:#98C379;--shiki-dark:#98C379"> Pull</span><span style="color:#98C379;--shiki-dark:#98C379"> complete</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">a4c1b0cb7af7:</span><span style="color:#98C379;--shiki-dark:#98C379"> Pull</span><span style="color:#98C379;--shiki-dark:#98C379"> complete</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">Digest:</span><span style="color:#98C379;--shiki-dark:#98C379"> sha256:06e9c1983bd6d5db5fba376ccd63bfa529e8d02f23d5079b8f74a616308fb11d</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">Status:</span><span style="color:#98C379;--shiki-dark:#98C379"> Downloaded</span><span style="color:#98C379;--shiki-dark:#98C379"> newer</span><span style="color:#98C379;--shiki-dark:#98C379"> image</span><span style="color:#98C379;--shiki-dark:#98C379"> for</span><span style="color:#98C379;--shiki-dark:#98C379"> training/webapp:latest</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">docker.io/training/webapp:latest</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[root@pdai ~]# docker images | </span><span style="color:#61AFEF;--shiki-dark:#61AFEF">grep</span><span style="color:#98C379;--shiki-dark:#98C379"> webapp</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">training/webapp</span><span style="color:#98C379;--shiki-dark:#98C379">     latest</span><span style="color:#98C379;--shiki-dark:#98C379">              6fae60ef3446</span><span style="color:#D19A66;--shiki-dark:#D19A66">        4</span><span style="color:#98C379;--shiki-dark:#98C379"> years</span><span style="color:#98C379;--shiki-dark:#98C379"> ago</span><span style="color:#98C379;--shiki-dark:#98C379">         349MB</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:8.95,words:2685},t:"Docker基础 - 一个web应用实例1",y:"a"}}],["/posts/Docker/docker-06-data.html",{loader:()=>o(()=>import("./docker-06-data.html-09rq9LKE.js"),[]),meta:{d:1729494189e3,e:`
<blockquote>
<p>Docker 容器的数据放哪里呢？ 本文带你理解如何在 Docker 内部以及容器之间管理数据</p>
</blockquote>
<h2>1. Docker 数据管理简介</h2>
<blockquote>
<p>实际上我们的容器就好像是一个简易版的操作系统，只不过系统中只安装了我们的程序运行所需要的环境，前边说到我们的容器是可以删除的，那如果删除了，容器中的程序产生的需要持久化的数据怎么办呢？容器运行的时候我们可以进容器去查看，容器一旦删除就什么都没有了。</p>
</blockquote>
<p>所以数据卷就是来解决这个问题的，是<strong>用来将数据持久化到我们宿主机上，与容器间实现数据共享，简单的说就是将宿主机的目录映射到容器中的目录</strong>，应用程序在容器中的目录读写数据会同步到宿主机上，这样容器产生的数据就可以持久化了，比如我们的数据库容器，就可以把数据存储到我们宿主机上的真实磁盘中。</p>`,r:{minutes:5.85,words:1756},t:"Docker基础 - Docker数据卷和数据管理",y:"a"}}],["/posts/Docker/docker-07-network.html",{loader:()=>o(()=>import("./docker-07-network.html-BMRLb5cx.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. Docker网络原理</h2>
<p>当 Docker 启动时，<strong>会自动在主机上创建一个 <code>docker0</code> 虚拟网桥</strong>，实际上是 Linux 的一个 bridge，可以理解为一个软件交换机。它会在挂载到它的网口之间进行转发。</p>
<p>同时，<strong>Docker 随机分配一个本地未占用的私有网段</strong>（在 <a href="https://datatracker.ietf.org/doc/html/rfc1918" target="_blank" rel="noopener noreferrer">RFC1918</a> 中定义）中的一个地址给 <code>docker0</code> 接口。比如典型的 <code>172.17.42.1</code>，掩码为 <code>255.255.0.0</code>。此后启动的容器内的网口也会自动分配一个同一网段（<code>172.17.0.0/16</code>）的地址。</p>`,r:{minutes:10.37,words:3111},t:"Docker基础 - Docker四种网络模式",y:"a"}}],["/posts/Docker/docker-action.html",{loader:()=>o(()=>import("./docker-action.html-DR86tRY4.js"),[]),meta:{d:1729494189e3,e:`
<h2>简介</h2>
<h2>镜像</h2>
<p>可以理解为安装包</p>
<h2>容器</h2>
<p>正在运行的程序</p>
<h2>宿主机</h2>
<p>服务器本身</p>
<h1>安装Docker</h1>
<h2>CentOS安装</h2>
<blockquote>
<p>安装依赖</p>
</blockquote>
<div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">yum</span><span style="color:#98C379;--shiki-dark:#98C379"> install</span><span style="color:#98C379;--shiki-dark:#98C379"> yum-utils</span></span></code></pre>
</div>`,r:{minutes:2.91,words:872},t:"Docker基础 - Docker入门实战快速上手",y:"a"}}],["/posts/Docker/docker-basic-overview.html",{loader:()=>o(()=>import("./docker-basic-overview.html-CojG_UDL.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 仓库，镜像，容器的关系</h2>
<blockquote>
<p>我们再回顾下仓库，镜像，容器的关系（这是官网的图）</p>
</blockquote>
<p>通过下图可以得知，<code>Docker</code>在运行时分为<code>Docker引擎（服务端守护进程）</code>和<code>客户端工具</code>，我们日常使用各种<code>docker命令</code>，其实就是在使用<code>客户端工具</code>与<code>Docker</code>引擎进行交互。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231014062.png" alt="image-20220613201437616" tabindex="0" loading="lazy"><figcaption>image-20220613201437616</figcaption></figure>`,r:{minutes:14.24,words:4273},t:"Docker基础 - 仓库，镜像，容器详解",y:"a"}}],["/posts/Docker/docker-compose-overview.html",{loader:()=>o(()=>import("./docker-compose-overview.html-DXtMiSpJ.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 背景</h2>
<p>我们可以通过<code>Dockerfile</code>文件让用户很方便的定义一个单独的应用容器。然而，在日常工作中，经常会碰到<strong>需要多个容器相互配合来完成某项任务</strong>的情况，或者开发一个<code>Web</code>应用，除了<code>Web</code>服务容器本身，还需要数据库服务容器、缓存容器，甚至还包括负载均衡容器等等。</p>
<p><code>Docker Compose</code>恰好满足了这样的需求，</p>
<ul>
<li>它是用于定义和运行多容器<code>Docker</code>应用程序的工具。</li>
<li>通过<code>Compose</code>，您可以使用<code>YAML</code>文件来配置应用程序所需要的服务。</li>
<li>然后使用一个命令，就可以通过<code>YAML</code>配置文件创建并启动所有服务。</li>
</ul>`,r:{minutes:14.07,words:4221},t:"Docker基础 - DockerCompose详解",y:"a"}}],["/posts/Docker/docker-file-overview.html",{loader:()=>o(()=>import("./docker-file-overview.html-Bg9TwfMR.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>Dokcerfile 是一个用来构建镜像的文本文件，文本内容包含了一条条构建镜像所需的指令和说明</p>
<h2>2. 命令组成</h2>
<table>
<thead>
<tr>
<th>部分</th>
<th>命令</th>
</tr>
</thead>
<tbody>
<tr>
<td>基础镜像信息</td>
<td>FROM</td>
</tr>
<tr>
<td>维护者信息</td>
<td>MAINTAINER、LABEL</td>
</tr>
<tr>
<td>镜像操作指令</td>
<td>RUN、COPY、ADD、EXPOSE、WORKDIR、ONBUILD、USER、VOLUME等</td>
</tr>
<tr>
<td>容器启动时执行指令</td>
<td>CMD、ENTRYPOINT</td>
</tr>
</tbody>
</table>`,r:{minutes:6.3,words:1891},t:"Docker基础 - Dockerfile详解",y:"a"}}],["/posts/Docker/docker-y-manage-portainer.html",{loader:()=>o(()=>import("./docker-y-manage-portainer.html-CPQ_ba_M.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p><a href="https://github.com/portainer/portainer" target="_blank" rel="noopener noreferrer">https://github.com/portainer/portainer</a><br>
Portainer是一个轻量级的管理UI，可让您轻松管理不同的Docker环境（Docker主机或Swarm集群）。 Portainer的意图是易于部署和使用。它由一个可以在任何Docker引擎上运行的容器组成（可以部署为Linux容器或Windows本机容器，也支持其他平台）。 Portainer允许您管理所有Docker资源（容器，映像，卷，网络等）！它与独立的Docker引擎和 Docker Swarm模式兼容。</p>`,r:{minutes:2.06,words:617},t:"docker管理 - 可视化工具Portainer",y:"a"}}],["/posts/Docker/docker-y-one-key-deploy.html",{loader:()=>o(()=>import("./docker-y-one-key-deploy.html-DyDePaHG.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>这里的一键部署 主要以若依前后端分离项目为例，仅提供一个思路，项目实际使用中可根据自己项目情况调整</p>
<h2>2. 环境搭建</h2>
<p><code>Docker</code>是一个虚拟环境容器，可以将你的开发环境、代码、配置文件等一并打包到这个容器中，最终只需要一个命令即可打包发布应用到任意平台中。</p>
<p>1、安装docker</p>
<div class="language-sh" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">yum</span><span style="color:#98C379;--shiki-dark:#98C379"> install</span><span style="color:#98C379;--shiki-dark:#98C379"> https://download.docker.com/linux/fedora/30/x86_64/stable/Packages/containerd.io-1.2.6-3.3.fc30.x86_64.rpm</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">yum</span><span style="color:#98C379;--shiki-dark:#98C379"> install</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -y</span><span style="color:#98C379;--shiki-dark:#98C379"> yum-utils</span><span style="color:#98C379;--shiki-dark:#98C379"> device-mapper-persistent-data</span><span style="color:#98C379;--shiki-dark:#98C379"> lvm2</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">yum-config-manager</span><span style="color:#D19A66;--shiki-dark:#D19A66"> --add-repo</span><span style="color:#98C379;--shiki-dark:#98C379"> https://download.docker.com/linux/centos/docker-ce.repo</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">yum</span><span style="color:#98C379;--shiki-dark:#98C379"> install</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -y</span><span style="color:#98C379;--shiki-dark:#98C379"> docker-ce</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">curl</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -L</span><span style="color:#98C379;--shiki-dark:#98C379"> "https://github.com/docker/compose/releases/download/1.25.0/docker-compose-$(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">uname</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -s</span><span style="color:#98C379;--shiki-dark:#98C379">)-$(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">uname</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -m</span><span style="color:#98C379;--shiki-dark:#98C379">)"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -o</span><span style="color:#98C379;--shiki-dark:#98C379"> /usr/local/bin/docker-compose</span></span></code></pre>
</div>`,r:{minutes:2.2,words:660},t:"集成docker实现一键部署",y:"a"}}],["/posts/Docker/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E4%B8%8E%E5%AE%B9%E5%99%A8%E7%AE%A1%E7%90%86.html",{loader:()=>o(()=>import("./持续集成与容器管理.html-shMPc0sy.js"),[]),meta:{d:1729494189e3,e:`
<p>学习目标：</p>
<ul>
<li>掌握DockerMaven插件的使用</li>
<li>掌握持续集成工具Jenkins的安装与使用</li>
<li>掌握容器管理工具Rancher的安装与使用</li>
<li>掌握时间序列数据库influxDB的安装与使用</li>
<li>掌握容器监控工具cAdvisor的安装与使用</li>
<li>掌握图表工具Grafana的使用</li>
</ul>
<h1>1 DockerMaven插件</h1>
<p>微服务部署有两种方法：</p>
<p>（1）手动部署：首先基于源码打包生成jar包（或war包）,将jar包（或war包）上传至虚拟机并拷贝至JDK容器。</p>`,r:{minutes:15.02,words:4505},t:"持续集成与容器管理",y:"a"}}],["/posts/Git/",{loader:()=>o(()=>import("./index.html-Z-FdE_cg.js"),[]),meta:{d:17179776e5,l:"2024年6月10日",e:`<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>这里放置Git相关的内容</p>
</div>
<hr>
`,r:{minutes:.09,words:27},t:"Git",i:"git",y:"p"}}],["/posts/Git/git-x-gitflow.html",{loader:()=>o(()=>import("./git-x-gitflow.html-H8CTU7nj.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>Git 有多种工作流方式，我们接下来就介绍几种常见的工作流，以便大家选择最适合自己的方式。</p>
<h2>2. 常见工作流</h2>
<h3>2.1 主干开发</h3>
<p>严格意义上说他并不算工作流，所有提交都在主干上</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231016835.png" alt="image-20211209213253441" tabindex="0" loading="lazy"><figcaption>image-20211209213253441</figcaption></figure>`,r:{minutes:5.73,words:1718},t:"git工作流",y:"a"}}],["/posts/Git/git-x-gitignore.html",{loader:()=>o(()=>import("./git-x-gitignore.html-9MUI4HKf.js"),[]),meta:{d:1729494189e3,e:`
<p>在使用git仓库时，我们并不希望将所有的文件都提交到仓库中，需要对一些文件进行屏蔽，有些则要保留</p>
<p>此时我们就需要使用到<code>.gitignore</code>文件</p>
<h2>2. gitignore 文件格式规范</h2>
<ul>
<li>所有空行或#开通的行都会被忽略</li>
<li>可以使用标准的<strong>glob 模式匹配</strong></li>
<li>文件或目录前加<code>/</code>表示仓库根目录的对应文件</li>
<li>匹配模式最后跟反斜杠<code>/</code>说明要忽略目录</li>
<li>要特殊不许了某个文件或目录，可以在模式钱加上取反<code>!</code></li>
</ul>`,r:{minutes:1.61,words:483},t:"gitignore文件屏蔽规则",y:"a"}}],["/posts/Git/git-x-merge.html",{loader:()=>o(()=>import("./git-x-merge.html-CcfXUeLk.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 背景</h2>
<p>git merge的三种操作merge, squash merge, 和rebase merge</p>
<p>举例来说：<br>
假设在master分支的B点拉出一个新的分支dev，经过一段时间开发后：</p>
<ul>
<li>master分支上有两个新的提交M1和M2</li>
<li>dev分支上有三个提交D1，D2，和D3</li>
</ul>
<p>如下图所示：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231017221.png" alt="image-20211210215256075" tabindex="0" loading="lazy"><figcaption>image-20211210215256075</figcaption></figure>`,r:{minutes:3.25,words:975},t:"git merge的三种操作",y:"a"}}],["/posts/Git/git-y-delete-error-commit-file.html",{loader:()=>o(()=>import("./git-y-delete-error-commit-file.html-DQF6UgSE.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 背景</h2>
<p>Git 操作时，经常“不小心”上传一些不必要的（大）文件，或者私密数据，等等。</p>
<p>当然可以从本地把这些文件删除，加入 <code>.gitignore</code>, 避免下次再上传。</p>
<p>然而，<strong>之前已经上传过的，还遗留在 git 历史中</strong></p>
<h2>2. 实例</h2>
<p>如下是一个我误将vue 的第三方依赖node_modules 添加到git 导致.git文件过大</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231018852.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,r:{minutes:.81,words:243},t:"删除.git中的错误提交的文件.md",y:"a"}}],["/posts/Git/gitlab-x-custom-hook.html",{loader:()=>o(()=>import("./gitlab-x-custom-hook.html-BA6YU-KM.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 具体步骤</h2>
<h3>1.1 设置custom_hooks路径</h3>
<p>修改 gitlab 中的<code>vi /etc/gitlab/gitlab.rb</code></p>
<p>增加 custom_hooks_dir 路径：</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>gitlab_shell['custom_hooks_dir'] = "/opt/gitlab/embedded/service/gitlab-shell/hooks"</span></span></code></pre>
</div>`,r:{minutes:1.89,words:566},t:"gitlab配置custom hook",y:"a"}}],["/posts/Git/gitlab-x-install.html",{loader:()=>o(()=>import("./gitlab-x-install.html-Dgi--9-x.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 搭建方式</h2>
<p>gitlab 搭建有两种方式</p>
<ul>
<li>
<p>第一种方法</p>
<p>说白了其实gitlab就是一个web端，打散后其实也是由（nginx，gitaly，redis，gitlab-workhorse...）等这些东西构成；所以你可以一个个组装一个个编译安装；这样你也可以深入去了解gitlab，同时也可以达到最简化（将不必要的东西去掉）</p>
</li>
<li>
<p>第二种方法</p>
<p>rpm 安装。。。官方和社区都有提供</p>
</li>
</ul>
<p>第一种太折腾人了，本文演示第二种方式</p>
<h2>2. 安装</h2>`,r:{minutes:3.68,words:1105},t:"gitlab搭建",y:"a"}}],["/posts/Git/gitlab-x-memory-size.html",{loader:()=>o(()=>import("./gitlab-x-memory-size.html-DG1eM1HD.js"),[]),meta:{d:1729494189e3,e:`
<p>我的服务器配置是2核4G内存，启动gitlab 就占用了很大内存空间(停止gitlab 会释放1.5G内存)</p>
<h2>1. 解决方案</h2>
<h3>1.1 减少 unicorn worker进程数</h3>
<p>我们可以使用 top -ac 先看一下开启了多少unicorn worker进程，gitlab默认开启进程数与CPU内核数相同</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>vim /etc/gitlab/gitlab.rb</span></span>
<span class="line"><span>unicorn['worker_processes'] = 8</span></span></code></pre>
</div>`,r:{minutes:.8,words:240},t:"gitlab内存占用过大",y:"a"}}],["/posts/Git/gitlab-x-runner-action.html",{loader:()=>o(()=>import("./gitlab-x-runner-action.html-CFuQcnvd.js"),[]),meta:{d:1729494189e3,e:`
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231020871.png" alt="image-20191220114358441" tabindex="0" loading="lazy"><figcaption>image-20191220114358441</figcaption></figure>
<p>根据gitlab-runner 的介绍，我们可以看到</p>
<h2>1. 安装Gitlab Runner</h2>
<h2>2. 注册gitlab-runner</h2>
`,r:{minutes:.32,words:96},t:"Gitlab-Runner实践",y:"a"}}],["/posts/Git/gitlab-x-runner-install.html",{loader:()=>o(()=>import("./gitlab-x-runner-install.html-Cov11Nlg.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 安装步骤</h2>
<h3>1.1 安装gitlab-ci-multi-runner</h3>
<ul>
<li>
<p>添加yum源</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>curl -L https://packages.gitlab.com/install/repositories/runner/gitlab-ci-multi-runner/script.rpm.sh | sudo bash</span></span></code></pre>
</div></li>
<li>
<p>安装</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>yum install gitlab-ci-multi-runner</span></span></code></pre>
</div><p>这里是官网的安装教程，其它操作系统的请参考<br>
<a href="https://gitlab.com/gitlab-org/gitlab-ci-multi-runner" target="_blank" rel="noopener noreferrer">https://gitlab.com/gitlab-org/gitlab-ci-multi-runner</a></p>
</li>
</ul>`,r:{minutes:2.3,words:690},t:"Gitlab-Runner的安装与使用",y:"a"}}],["/posts/Git/gitlab-x_problem.html",{loader:()=>o(()=>import("./gitlab-x_problem.html-BAjVIfm2.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. push 提交异常</h2>
<p>push 提交时出现fatal: The remote end hung up unexpectedly异常</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>localhost:android zhangshengzhong$ git push --set-upstream http://gitlab.isture.com/zsz/android-gitbook.git master</span></span>
<span class="line"><span>Counting objects: 245, done.</span></span>
<span class="line"><span>Delta compression using up to 8 threads.</span></span>
<span class="line"><span>Compressing objects: 100% (214/214), done.</span></span>
<span class="line"><span>error: RPC failed; result=22, HTTP code = 41383 MiB/s</span></span>
<span class="line"><span>fatal: The remote end hung up unexpectedly</span></span>
<span class="line"><span>Writing objects: 100% (245/245), 15.83 MiB | 6.85 MiB/s, done.</span></span>
<span class="line"><span>Total 245 (delta 7), reused 0 (delta 0)</span></span>
<span class="line"><span>fatal: The remote end hung up unexpectedly</span></span>
<span class="line"><span>Everything up-to-date</span></span></code></pre>
</div>`,r:{minutes:.73,words:218},t:"问题集锦",y:"a"}}],["/posts/Java/",{loader:()=>o(()=>import("./index.html-m_VPlOno.js"),[]),meta:{d:1719792e6,l:"2024年7月1日",e:`<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>这里放置Java相关的内容</p>
</div>
<hr>
`,r:{minutes:.09,words:27},t:"Java",i:"java",y:"p"}}],["/posts/Linux/",{loader:()=>o(()=>import("./index.html-BTAy4k3-.js"),[]),meta:{d:253152e6,l:"1978年1月9日",e:`<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>这里放置 Linux 相关的内容</p>
</div>
`,r:{minutes:.09,words:27},t:"Linux",i:"linux",y:"p"}}],["/posts/Linux/iterm2-pure.html",{loader:()=>o(()=>import("./iterm2-pure.html-HWzqbayI.js"),[]),meta:{d:1679676037e3,l:"2023年3月24日",c:["Linux"],g:["terminal","Linux"],e:`<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>之前介绍了ZSH的安装和使用，这次把最终成果介绍一下，就是ZSH + iTerm2 + Pure</p>
<p>前置工作：安装ZSH，请参照之前的文章👉<a href="/posts/Linux/zsh.html" target="_blank">zsh安装</a></p>
</div>
`,r:{minutes:3.58,words:1075},t:"终端究极美化iTerm2+Pure",i:"hk-zsh",y:"a"}}],["/posts/Linux/linux-a-shell.html",{loader:()=>o(()=>import("./linux-a-shell.html-CqpdVV-X.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>Shell 是一个命令解释器,它为用户提供了一个向 Linux 内核发送请求以便运行程序界面系统级程序,用户可以用 Shell 来启动、挂起、停止甚至是编写一些程序。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231032989.png" alt="image-20220330153029197" tabindex="0" loading="lazy"><figcaption>image-20220330153029197</figcaption></figure>`,r:{minutes:6.23,words:1870},t:"shell入门",y:"a"}}],["/posts/Linux/linux-j-all-tools.html",{loader:()=>o(()=>import("./linux-j-all-tools.html-DUcxJFqJ.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>常用的命令有glances 和 dstat</p>
<h2>2. 命令</h2>
<h3>2.1 glances</h3>
<p>glances 是一个用来监视 GNU/Linux 和 FreeBSD 操作系统的 GPL 授权的全能工具。</p>
<p>Glances 会用一下几种颜色来代表状态：</p>
<ul>
<li>绿色：OK（一切正常）</li>
<li>蓝色：CAREFUL（需要注意）</li>
<li>紫色：WARNING（警告）</li>
<li>红色：CRITICAL（严重）。</li>
</ul>
<p>阀值可以在配置文件中设置，一般阀值被默认设置为（careful=50、warning=70、critical=90）</p>`,r:{minutes:.59,words:176},t:"Linux系统监控全能工具",y:"a"}}],["/posts/Linux/linux-j-cpu.html",{loader:()=>o(()=>import("./linux-j-cpu.html-C3SjGyvn.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>常用命令有top 和mpstat</p>
<h2>2.命令</h2>
<h3>2.1 top</h3>
<h4>2.1.1 简介</h4>
<p>top命令 可以实时动态地查看系统的整体运行情况。</p>
<h4>2.1.2 语法：</h4>
<div class="language-scss" data-ext="scss" data-title="scss"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">top (选项)</span></span></code></pre>
</div>`,r:{minutes:1.68,words:504},t:"Linux CPU监控",y:"a"}}],["/posts/Linux/linux-j-disk.html",{loader:()=>o(()=>import("./linux-j-disk.html-CO_SXbCQ.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>linux磁盘监控命令主要有，df，iostat,iotop</p>
<h2>2. 监控命令</h2>
<h3>2.1 df</h3>
<h4>2.1.1 简介</h4>
<p>df命令 用于显示磁盘分区上的可使用的磁盘空间。如果没有文件名被指定，则显示当前所有被挂载的文件系统，默认以 KB 为单位。</p>
<h4>2.1.2 语法：</h4>
<div class="language-erlang" data-ext="erlang" data-title="erlang"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">df</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (选项) (参数)</span></span></code></pre>
</div>`,r:{minutes:3.14,words:943},t:"Linux磁盘监控",y:"a"}}],["/posts/Linux/linux-j-load.html",{loader:()=>o(()=>import("./linux-j-load.html-DuINZIyh.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>Linux load averages 是系统负载平均值（system load averages），它将正在运行的线程（任务）对系统的需求显示为平均运行数和等待线程数。Linux load averages 可以衡量任务对系统的需求，并且它可能大于系统当前正在处理的数量，大多数工具将其显示为三个平均值，分别为 1、5 和 15 分钟值。</p>
<h3>1.1 查看命令</h3>
<p>以下为系统中显示 Linux load averages 的实例：</p>
<div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 方法一：uptime</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">$</span><span style="color:#98C379;--shiki-dark:#98C379"> uptime</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF"> 16:48:24</span><span style="color:#98C379;--shiki-dark:#98C379"> up</span><span style="color:#98C379;--shiki-dark:#98C379">  4:11,</span><span style="color:#D19A66;--shiki-dark:#D19A66">  1</span><span style="color:#98C379;--shiki-dark:#98C379"> user,</span><span style="color:#98C379;--shiki-dark:#98C379">  load</span><span style="color:#98C379;--shiki-dark:#98C379"> average:</span><span style="color:#98C379;--shiki-dark:#98C379"> 25.25,</span><span style="color:#98C379;--shiki-dark:#98C379"> 23.40,</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 23.46</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 方法二：top</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">top</span><span style="color:#98C379;--shiki-dark:#98C379"> -</span><span style="color:#98C379;--shiki-dark:#98C379"> 16:48:42</span><span style="color:#98C379;--shiki-dark:#98C379"> up</span><span style="color:#98C379;--shiki-dark:#98C379">  4:12,</span><span style="color:#D19A66;--shiki-dark:#D19A66">  1</span><span style="color:#98C379;--shiki-dark:#98C379"> user,</span><span style="color:#98C379;--shiki-dark:#98C379">  load</span><span style="color:#98C379;--shiki-dark:#98C379"> average:</span><span style="color:#98C379;--shiki-dark:#98C379"> 25.25,</span><span style="color:#98C379;--shiki-dark:#98C379"> 23.14,</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 23.37</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 方法三：cat /proc/loadavg</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">$</span><span style="color:#98C379;--shiki-dark:#98C379"> cat</span><span style="color:#98C379;--shiki-dark:#98C379"> /proc/loadavg</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">25.72</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 23.19</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 23.35</span><span style="color:#98C379;--shiki-dark:#98C379"> 42/3411</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 43603</span></span></code></pre>
</div>`,r:{minutes:4.36,words:1309},t:"Linux概念 - Load 平均负载",y:"a"}}],["/posts/Linux/linux-j-mem.html",{loader:()=>o(()=>import("./linux-j-mem.html-D0sdEN8p.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>内存监控主要有free 和 vmstat</p>
<h2>2. 监控命令</h2>
<h3>2.1 free</h3>
<p>Linux free命令用于显示内存状态。</p>
<p>free指令会显示内存的使用情况，包括实体内存，虚拟的交换文件内存，共享内存区段，以及系统核心使用的缓冲区等。</p>
<h4>2.1.1 语法</h4>
<div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">free</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> [-bkmotV][-s </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">间隔秒数</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">]</span></span></code></pre>
</div>`,r:{minutes:4.54,words:1361},t:"Linux内存监控",y:"a"}}],["/posts/Linux/linux-j-monitor-overview.html",{loader:()=>o(()=>import("./linux-j-monitor-overview.html-qCHRdCSk.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>以下命令以Ubuntu 18.04 LTS 系统为准。</p>
<table>
<thead>
<tr>
<th>命令</th>
<th>功能</th>
<th>实例</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>free</td>
<td>查看内存使用情况，包括物理内存和虚拟内存</td>
<td>free -h 或 free -m</td>
<td></td>
</tr>
<tr>
<td>vmstat</td>
<td>对系统的整体情况进行统计，包括内核进程、虚拟内存、磁盘、陷阱和 CPU 活动的统计信息</td>
<td>vmstat 2 100</td>
<td></td>
</tr>
<tr>
<td>top</td>
<td>实时显示系统中各个进程的资源占用状况及总体状况</td>
<td>top</td>
<td></td>
</tr>
<tr>
<td>mpstat</td>
<td>实时系统监控工具，它会报告与CPU相关的统计信息</td>
<td>mpstat</td>
<td></td>
</tr>
<tr>
<td>sar</td>
<td>收集、报告和保存CPU、内存、输入输出端口使用情况</td>
<td>sar -n DEV 3 100</td>
<td></td>
</tr>
<tr>
<td>netstat</td>
<td>检验本机各端口的网络连接情况，用于显示与IP、TCP、UDP和ICMP协议相关的统计数据</td>
<td>netstat -a</td>
<td></td>
</tr>
<tr>
<td>tcpdump</td>
<td>用于捕捉或者过滤网络上指定接口上接收或者传输的TCP/IP包</td>
<td>tcpdump -i eth0 -c 3</td>
<td></td>
</tr>
<tr>
<td>iptraf</td>
<td>用来生成包括TCP信息、UDP计数、ICMP和OSPF信息、以太网负载信息、节点状态信息、IP校验和错误等等统计数据</td>
<td>iptraf</td>
<td></td>
</tr>
<tr>
<td>iostat</td>
<td>收集显示系统存储设备输入和输出状态统计</td>
<td>iostat -x -k 2 100</td>
<td></td>
</tr>
<tr>
<td>lsof</td>
<td>查看进程打开的文件的工具，查看监听端口</td>
<td>lsof -i :3000</td>
<td></td>
</tr>
<tr>
<td>atop</td>
<td>显示的是各种系统资源（CPU, memory, network, I/O, kernel）的综合，并且在高负载的情况下进行了彩色标注</td>
<td>atop</td>
<td></td>
</tr>
<tr>
<td>htop</td>
<td>它和top命令十分相似，高级的交互式的实时linux进程监控工具</td>
<td>htop</td>
<td></td>
</tr>
<tr>
<td>ps</td>
<td>最基本同时也是非常强大的进程查看命令</td>
<td>ps aux</td>
<td>grep php</td>
</tr>
<tr>
<td>glances</td>
<td>监视 CPU，平均负载，内存，网络流量，磁盘 I/O，其他处理器 和 文件系统 空间的利用情况</td>
<td>glances</td>
<td></td>
</tr>
<tr>
<td>dstat</td>
<td>全能系统信息统计工具，可用于替换vmstat、iostat、netstat、nfsstat和ifstat这些命令的工具</td>
<td>dstat</td>
<td></td>
</tr>
<tr>
<td>uptime</td>
<td>用于查看服务器运行了多长时间以及有多少个用户登录，快速获知服务器的负荷情况</td>
<td>uptime</td>
<td></td>
</tr>
<tr>
<td>dmesg</td>
<td>主要用来显示内核信息。使用dmesg可以有效诊断机器硬件故障或者添加硬件出现的问题</td>
<td>dmesg</td>
<td></td>
</tr>
<tr>
<td>mpstat</td>
<td>用于报告多路CPU主机的每颗CPU活动情况，以及整个主机的CPU情况</td>
<td>mpstat 2 3</td>
<td></td>
</tr>
<tr>
<td>nmon</td>
<td>监控CPU、内存、I/O、文件系统及网络资源。对于内存的使用，它可以实时的显示 总/剩余内存、交换空间等信息</td>
<td>nmon</td>
<td></td>
</tr>
<tr>
<td>mytop</td>
<td>用于监控 mysql 的线程和性能。它能让你实时查看数据库以及正在处理哪些查询</td>
<td>mytop</td>
<td></td>
</tr>
<tr>
<td>iftop</td>
<td>用来监控网卡的实时流量（可以指定网段）、反向解析IP、显示端口信息等</td>
<td>iftop</td>
<td></td>
</tr>
<tr>
<td>jnettop</td>
<td>以相同的方式来监测网络流量但比 iftop 更形象。它还支持自定义的文本输出，并能以友好的交互方式来深度分析日志</td>
<td>jnettop</td>
<td></td>
</tr>
<tr>
<td>ngrep</td>
<td>网络层的 grep。它使用 pcap ，允许通过指定扩展正则表达式或十六进制表达式来匹配数据包</td>
<td>ngrep</td>
<td></td>
</tr>
<tr>
<td>nmap</td>
<td>可以扫描你服务器开放的端口并且可以检测正在使用哪个操作系统</td>
<td>nmap localhost</td>
<td></td>
</tr>
<tr>
<td>du</td>
<td>查看Linux系统中某目录的大小</td>
<td>du -sh *</td>
<td></td>
</tr>
<tr>
<td>fdisk</td>
<td>查看硬盘及分区信息</td>
<td>fdisk -l</td>
<td></td>
</tr>
</tbody>
</table>`,r:{minutes:13.03,words:3908},t:"Linux系统监控命令汇总",y:"a"}}],["/posts/Linux/linux-j-net.html",{loader:()=>o(()=>import("./linux-j-net.html-D5xUaros.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>linux中网络监控命令主要是netstat 和sar</p>
<h2>2. 监控命令</h2>
<h3>2.1 netstat</h3>
<h4>2.1.1 简介</h4>
<p>netstat命令一般用于检验本机各端口的网络连接情况，用于显示与IP、TCP、UDP和ICMP协议相关的统计数据。</p>
<h4>2.1.2 常用实例：</h4>
<div class="language-sh" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">netstat</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -aup</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 输出所有UDP连接状况</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">netstat</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -atp</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 输出所有TCP连接状况</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">netstat</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -s</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # 显示各个协议的网络统计信息</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">netstat</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -i</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # 显示网卡列表</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">netstat</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -r</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # 显示路由表信息</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">netstat</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -l</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # 只显示监听端口</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">netstat</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -lt</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">       # 只列出所有监听 tcp 端口</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">netstat</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -lu</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">       # 只列出所有监听 udp 端口</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">netstat</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -lx</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">       # 只列出所有监听 UNIX 端口</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">netstat</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -p或--programs</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # 显示正在使用Socket的程序识别码和程序名称；</span></span></code></pre>
</div>`,r:{minutes:1.77,words:532},t:"Linux网络监控",y:"a"}}],["/posts/Linux/linux-j-ps.html",{loader:()=>o(()=>import("./linux-j-ps.html-DsoXSswV.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>进程监控命令ps</p>
<h2>2. 命令</h2>
<h3>2.1 ps</h3>
<h4>2.1.1 简介</h4>
<p>ps（Process Status，进程状态）命令 用于报告当前系统的进程状态。</p>
<h4>2.1.2 语法</h4>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>ps [参数]</span></span></code></pre>
</div>`,r:{minutes:2.92,words:875},t:"Linux进程监控",y:"a"}}],["/posts/Linux/linux-k-awk.html",{loader:()=>o(()=>import("./linux-k-awk.html-jDmtBS-r.js"),[]),meta:{d:1729494189e3,e:`
<h2>1 简介</h2>
<p>awk是一个强大的文本分析工具，相对于grep的查找，sed的编辑，awk在其对数据分析并生成报告时，显得尤为强大。简单来说awk就是把文件逐行的读入，以空格为默认分隔符将每行切片，切开的部分再进行各种分析处理。</p>
<h2>2 语法</h2>
<div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">awk</span><span style="color:#98C379;--shiki-dark:#98C379"> '{pattern + action}'</span><span style="color:#98C379;--shiki-dark:#98C379"> {filenames}</span></span></code></pre>
</div>`,r:{minutes:5.86,words:1759},t:"awk强大的文本分析命令",y:"a"}}],["/posts/Linux/linux-k-compress.html",{loader:()=>o(()=>import("./linux-k-compress.html-EWtRBRyh.js"),[]),meta:{d:1729494189e3,e:`
<h2>1.  tar命令详解</h2>
<h3>1.1 五个独立命令</h3>
<p>这五个是独立的命令，压缩解压都要<strong>用到其中一个</strong>，<strong>可以和别的命令连用但只能用其中一个</strong>。</p>
<p>-c: 建立压缩档案</p>
<p>-x：解压</p>
<p>-t：查看内容</p>
<p>-r：向压缩归档文件末尾追加文件</p>
<p>-u：更新原压缩包中的文件</p>
<h3>1.2 可选命令</h3>
<p>下面的参数是根据需要在压缩或解压档案时可选的。</p>
<p>-z：有gzip属性的</p>
<p>-j：有bz2属性的</p>`,r:{minutes:1.71,words:513},t:"Linux文件解压",y:"a"}}],["/posts/Linux/linux-k-cut.html",{loader:()=>o(()=>import("./linux-k-cut.html-DR3FGsu2.js"),[]),meta:{d:1729494189e3,e:`
<h2>1 简介</h2>
<p>cut 命令从文件的每一行剪切字节、字符和字段并将这些字节、字符和字段写至标准输出。</p>
<blockquote>
<p>如果不指定 File 参数，cut 命令将读取标准输入。必须指定 -b、-c 或 -f 标志之一。</p>
</blockquote>
<h2>2 语法</h2>
<div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">cut</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  [-bn] [file] 或 cut [-c] [file]  或  cut [-df] [file]</span></span></code></pre>
</div>`,r:{minutes:6.12,words:1837},t:"cut切分命令",y:"a"}}],["/posts/Linux/linux-k-grep.html",{loader:()=>o(()=>import("./linux-k-grep.html-CYZ1VgLs.js"),[]),meta:{d:1729494189e3,e:`
<h2>1 简介</h2>
<p>Linux系统中grep命令是一种强大的<strong>文本搜索工具</strong>，它能使用<strong>正则表达式搜索文本</strong>，并把匹 <strong>配的行</strong>打印出来。grep全称是Global Regular Expression Print，表示全局正则表达式版本，它的使用权限是所有用户。</p>
<p>grep的工作方式是这样的，它在一个或多个文件中搜索字符串模板。如果模板包括空格，则必须被引用，模板后的所有字符串被看作文件名。搜索的结果被送到标准输出，不影响原文件内容。</p>
<p>grep可用于shell脚本，因为grep通过返回一个状态值来说明搜索的状态，如果<strong>模板搜索成功，则返回0，如果搜索不成功，则返回1</strong>，如果搜索的文件不存在，则返回2。我们利用这些返回值就可进行一些自动化的文本处理工作。</p>`,r:{minutes:3.66,words:1097},t:"Linux-grep文本搜索",y:"a"}}],["/posts/Linux/linux-k-sed.html",{loader:()=>o(()=>import("./linux-k-sed.html-BFuGmibf.js"),[]),meta:{d:1729494189e3,e:`
<h2>1 简介</h2>
<p>sed是一个很好的文件处理工具，本身是一个管道命令，主要是以行为单位进行处理，可以将数据行进行替换、删除、新增、选取等特定工作</p>
<h2>2 sed 语法</h2>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>sed [-nefri] ‘command’ 输入文本</span></span></code></pre>
</div>`,r:{minutes:2.71,words:813},t:"sed替换/查找/删除命令",y:"a"}}],["/posts/Linux/linux-k-sort.html",{loader:()=>o(()=>import("./linux-k-sort.html-CfLJePWu.js"),[]),meta:{d:1729494189e3,e:`
<h2>1 简介</h2>
<p>sort命令是帮我们依据不同的数据类型进行排序</p>
<blockquote>
<p>sort可针对文本文件的内容，以行为单位来排序。</p>
</blockquote>
<h2>2 语法</h2>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>sort [-bcfMnrtk][源文件][-o 输出文件]</span></span></code></pre>
</div>`,r:{minutes:3.53,words:1059},t:"sort排序命令",y:"a"}}],["/posts/Linux/linux-k-txt-overview.html",{loader:()=>o(()=>import("./linux-k-txt-overview.html-DIPG3JD2.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>Linux常用文本操作命令，包括wc(统计)、cut(切分)、sort(排序)、uniq(去重)、grep(查找)、sed(替换、插入、删除)、awk(文本分析)。</p>
<h2>2. sed替换/查找/删除命令</h2>
<h3>2.1 简介</h3>
<p>sed是一个很好的文件处理工具，本身是一个管道命令，主要是以行为单位进行处理，可以将数据行进行替换、删除、新增、选取等特定工作</p>
<h3>2.2 sed 语法</h3>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>sed [-nefri] ‘command’ 输入文本</span></span></code></pre>
</div>`,r:{minutes:19.77,words:5931},t:"Linux文本操作命令汇总",y:"a"}}],["/posts/Linux/linux-k-uniq.html",{loader:()=>o(()=>import("./linux-k-uniq.html-D_B4DCwl.js"),[]),meta:{d:1729494189e3,e:`
<h2>1 简介</h2>
<p>uniq命令可以去除排序过的文件中的重复行</p>
<blockquote>
<p>因此uniq经常和sort合用。也就是说，为了使uniq起作用，所有的重复行必须是相邻的。</p>
</blockquote>
<h2>2 简介</h2>
<div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">uniq</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> [-icu]</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">选项与参数：</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">-i</span><span style="color:#98C379;--shiki-dark:#98C379">   ：忽略大小写字符的不同；</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">-c</span><span style="color:#98C379;--shiki-dark:#98C379">  ：进行计数</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">-u</span><span style="color:#98C379;--shiki-dark:#98C379">  ：只显示唯一的行</span></span></code></pre>
</div>`,r:{minutes:.81,words:243},t:"uniq去重命令",y:"a"}}],["/posts/Linux/linux-k-wc.html",{loader:()=>o(()=>import("./linux-k-wc.html-D9tbvU_U.js"),[]),meta:{d:1729494189e3,e:`
<h2>1 简介</h2>
<p>统计文件里面有多少单词，多少行，多少字符。</p>
<h2>2 wc语法</h2>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span> wc [-lwm]</span></span></code></pre>
</div>`,r:{minutes:.5,words:150},t:"wc统计命令",y:"a"}}],["/posts/Linux/linux-x-find-overview.html",{loader:()=>o(()=>import("./linux-x-find-overview.html-DNg7k27Q.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>linux 常用的文件查找命令有（find, grep, which, whereis, locate）</p>
<table>
<thead>
<tr>
<th></th>
<th>find</th>
<th>which</th>
<th>whereis</th>
<th>locate</th>
</tr>
</thead>
<tbody>
<tr>
<td>文件支持</td>
<td>所有文件类型</td>
<td>可执行文件</td>
<td>二进制文件、源文件、帮助文档</td>
<td>所有文件类型</td>
</tr>
<tr>
<td>查找路径</td>
<td>可指定，默认遍历当前路径及其子路径</td>
<td>环境变量PATH</td>
<td>数据库索引</td>
<td>数据库索引</td>
</tr>
<tr>
<td>查找原理</td>
<td>遍历磁盘</td>
<td>遍历PATH所指定的目录，寻找完全匹配filename的可执行文件</td>
<td>数据库索引，对去除.之后的所有字符后的filename进行完全匹配</td>
<td>数据库索引，绝对路径，部分匹配</td>
</tr>
<tr>
<td>查找效率/速度</td>
<td>低</td>
<td>高</td>
<td>高</td>
<td>高</td>
</tr>
<tr>
<td>适合场景</td>
<td>能使用which，whereis，locate时，尽量不使用find</td>
<td>可执行文件的查询</td>
<td>二进制文件，源文件、帮助文档的查找</td>
<td>模糊查找（由于默认是部分匹配，会列出很多无关文件）</td>
</tr>
</tbody>
</table>`,r:{minutes:10.35,words:3104},t:"Linux下各种查找命令汇总",y:"a"}}],["/posts/Linux/linux-x-find.html",{loader:()=>o(()=>import("./linux-x-find.html-Cz_kHnaX.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>find是最常见和最强大的查找命令，你可以用它找到任何你想找的文件。</p>
<h2>2 命令语法</h2>
<div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">find</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> &lt; </span><span style="color:#98C379;--shiki-dark:#98C379">path</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> &gt; &lt; </span><span style="color:#98C379;--shiki-dark:#98C379">expression</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> &gt; &lt; </span><span style="color:#98C379;--shiki-dark:#98C379">cmd</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> &gt;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">find</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> &lt;</span><span style="color:#98C379;--shiki-dark:#98C379">指定目</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">录&gt; &lt;</span><span style="color:#98C379;--shiki-dark:#98C379">指定条</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">件&gt; &lt;</span><span style="color:#98C379;--shiki-dark:#98C379">指定动</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">作&gt;</span></span></code></pre>
</div>`,r:{minutes:1.98,words:595},t:"Linux - 查找文件",y:"a"}}],["/posts/Linux/linux-x-locate.html",{loader:()=>o(()=>import("./linux-x-locate.html-C9pypyMw.js"),[]),meta:{d:1729494189e3,e:`
<h2>1 简介</h2>
<p>locate命令其实是“find -name”的另一种写法，但是要比后者快得多，原因在于它不搜索具体目录，<strong>而是搜索一个数据库（/var/lib/locatedb），这个数据库中含有本地所有文件信息</strong>。Linux系统自动创建这个数据库，并且<strong>每天自动更新一次</strong>，所以使用locate命令查不到最新变动过的文件。为了避免这种情况，可以在使用locate之前，先使用updatedb命令，手动更新数据库。</p>
<h2>2 命令语法</h2>
<div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">locate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> [OPTION]… [PATTERN]…</span></span></code></pre>
</div>`,r:{minutes:2.18,words:653},t:"Linux-locate查找文件",y:"a"}}],["/posts/Linux/linux-x-whereis.html",{loader:()=>o(()=>import("./linux-x-whereis.html-D8ZY7w7w.js"),[]),meta:{d:1729494189e3,e:`
<h2>1 简介</h2>
<p><strong>whereis命令只能用于程序名的搜索</strong>，而且只搜索二进制文件（参数-b）、man说明文件（参数-m）和源代码文件（参数-s）。如果省略参数，则返回所有信息。</p>
<p>搜索来源是数据库索引</p>
<blockquote>
<p>在搜索一些进程位置时，</p>
<ul>
<li>
<p>如果是可执行文件，which的准确性会好一点</p>
</li>
<li>
<p>但如果只是普通程序，可能并不会加入PATH，可以使用whereis 搜索</p>
</li>
</ul>
</blockquote>
<h2>2 文件支持</h2>`,r:{minutes:.64,words:192},t:"Linux-whereis搜索二进制文件",y:"a"}}],["/posts/Linux/linux-x-which.html",{loader:()=>o(()=>import("./linux-x-which.html-DoUYpZm5.js"),[]),meta:{d:1729494189e3,e:`
<h2>1 简介</h2>
<p><strong>查看可执行文件的位置</strong></p>
<p>which命令的作用是，<strong>在PATH变量指定的路径中</strong>，搜索某个系统命令的位置，并且返回第一个搜索结果。</p>
<blockquote>
<p>也就是说，使用which命令，就可以看到某个系统命令是否存在，以及执行的到底是哪一个位置的命令。</p>
</blockquote>
<h2>2 命令语法</h2>
<p>which 可执行文件名称</p>
<h2>3 命令参数</h2>
<ul>
<li>-a 如果有多个匹配结果则打印所有结果:</li>
<li>-n 指定文件名长度，指定的长度必须大于或等于所有文件中最长的文件名。</li>
<li>-p 与-n参数相同，但此处的包括了文件的路径。</li>
<li>-w 指定输出时栏位的宽度。</li>
<li>-V 显示版本信息</li>
</ul>`,r:{minutes:.93,words:278},t:"Linux-which查看可执行文件",y:"a"}}],["/posts/Linux/linux-y-cpu-top.html",{loader:()=>o(()=>import("./linux-y-cpu-top.html-BwDvgJ59.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 占用CPU资源最多的10个进程</h2>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>ps aux|head -1;ps aux|grep -v PID|sort -rn -k +3|head</span></span></code></pre>
</div>`,r:{minutes:.32,words:96},t:"Linux查看哪些进程占用CPU内存资源多",y:"a"}}],["/posts/Linux/linux-y-firewalld.html",{loader:()=>o(()=>import("./linux-y-firewalld.html-02bmu7lg.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. firewalld的基本使用</h2>
<ul>
<li>
<p>启动： systemctl start firewalld</p>
</li>
<li>
<p>关闭： systemctl stop firewalld</p>
</li>
<li>
<p>查看状态： systemctl status firewalld</p>
</li>
<li>
<p>开机禁用 ： systemctl disable firewalld</p>
</li>
<li>
<p>开机启用 ： systemctl enable firewalld</p>
</li>
</ul>
<h2>2. systemctl 老版本操作</h2>`,r:{minutes:1.4,words:419},t:"Centos防火墙firewalld操作",y:"a"}}],["/posts/Linux/linux-y-ftp-install.html",{loader:()=>o(()=>import("./linux-y-ftp-install.html-DI6uY1GO.js"),[]),meta:{d:1729494189e3,e:`
<h2>1.安装vsftpd</h2>
<p>安装前先查看ftp 是否已经安装，使用yum 安装</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>vsftpd -v</span></span>
<span class="line"><span>yum -y install vsftpd</span></span></code></pre>
</div>`,r:{minutes:2.58,words:774},t:"安装FTP服务",y:"a"}}],["/posts/Linux/linux-y-pid-localtion.html",{loader:()=>o(()=>import("./linux-y-pid-localtion.html-BsgcetUW.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 根据端口号查pid</h2>
<p>仅有端口号时，需要根据端口号先查出进程号</p>
<ul>
<li>
<p>方式一：losf</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>losf -i:{port}</span></span></code></pre>
</div><p>![image-20191023093133400](/Users/zhangshengzhong/Library/Application Support/typora-user-images/image-20191023093133400.png)</p>
</li>
<li>
<p>方式二：netstat</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>netstat -tunlp|grep {port}</span></span></code></pre>
</div><p>![image-20191023093229618](/Users/zhangshengzhong/Library/Application Support/typora-user-images/image-20191023093229618.png)</p>
</li>
</ul>`,r:{minutes:.43,words:130},t:"根据端口号/进程号查项目位置",y:"a"}}],["/posts/Linux/linux-z-swap.html",{loader:()=>o(()=>import("./linux-z-swap.html-DHLCDaCa.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. Swap交换分区概念</h2>
<p>Linux内核为了提高读写效率与速度，会将文件在内存中进行缓存，这部分内存就是Cache Memory(缓存内存)。<strong>即使你的程序运行结束后，Cache Memory也不会自动释放。<strong>这就会导致你再Linux系统中</strong>程序频繁读写文件</strong>后，你会发现<strong>可用内存变少</strong>。当系统的无力内存不够用的时候，就需要将无力内存的一部分释放出来，以供当前运行的程序使用。</p>
<p>那些被释放的空间可能来自一些很长时间没有什么操作的程序，这些**被释放的空间被临时保存到Swap空间中，**等到那些程序要运行时，再从Swap分区中恢复保存的数据到内存中。这样，系统总是在物理内存不够时，才进行Swap交换。</p>`,r:{minutes:2.19,words:657},t:"Linux Swap交换分区",y:"a"}}],["/posts/Linux/linux-z-tldr.html",{loader:()=>o(()=>import("./linux-z-tldr.html-BanugLZ0.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 背景</h2>
<p>对于很多使用终端的Linux和Mac用户，使用Terminal最难的就是要记住众多的Linux命令了。比如：<code>ssh</code>，<code>curl</code>，<code>grep</code>等，经常会记不住参数的顺序。这个时候通常在使用的时候通过man阅读长长的文档，从中对比一个个参数，这样费时又费力。</p>
<p>今天要介绍的一个好用的工具叫<code>tldr</code>，tldr全称Too long, Don’t read，翻译成中文就是[太长不读]。<code>tldr</code>根据二八原则将命令的常用场景给出示例，让人一看就懂。</p>`,r:{minutes:.98,words:295},t:"Linux命令行学习-tldr",y:"a"}}],["/posts/Linux/linux-z-view-ip.html",{loader:()=>o(()=>import("./linux-z-view-ip.html-COYGMjYy.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 查看内网IP</h2>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>ifconfig</span></span>
<span class="line"><span># 简化输出</span></span>
<span class="line"><span>ifconfig | grep inet</span></span>
<span class="line"><span>或</span></span>
<span class="line"><span>ip addr</span></span></code></pre>
</div>`,r:{minutes:.17,words:50},t:"centos7 - 查看内网ip和外网ip",y:"a"}}],["/posts/Linux/unix-linux-note.html",{loader:()=>o(()=>import("./unix-linux-note.html-NPrsQxQr.js"),[]),meta:{d:14289696e5,l:"2015年4月14日",c:["Linux"],g:["OS","Unix","Linux"],e:`<blockquote>
<p>This document is not completed and will be updated anytime.</p>
</blockquote>
<h2>Catagory</h2>
<ul>
<li><a href="#catagory">Catagory</a></li>
<li><a href="#unix">Unix</a></li>
<li><a href="#unix-like">Unix-like</a>
<ul>
<li><a href="#single-unix-specification">Single UNIX Specification</a></li>
<li><a href="#apple-ios">Apple iOS</a></li>
<li><a href="#xnu-kernel">XNU Kernel</a></li>
</ul>
</li>
<li><a href="#linux">Linux</a>
<ul>
<li><a href="#linux-kernel">Linux Kernel</a></li>
<li><a href="#gnu-project">GNU Project</a></li>
<li><a href="#android">Android</a></li>
<li><a href="#android-kernel">Android Kernel</a></li>
<li><a href="#android-rom">Android ROM</a></li>
<li><a href="#chrome-os">Chrome OS</a></li>
<li><a href="#chromium-os">Chromium OS</a></li>
</ul>
</li>
</ul>`,r:{minutes:7.66,words:2299},t:"Unix/Linux 扫盲笔记",i:"linux",y:"a"}}],["/posts/Linux/zsh.html",{loader:()=>o(()=>import("./zsh.html-DzChsCj9.js"),[]),meta:{d:15639264e5,l:"2019年7月24日",c:["Linux"],g:["terminal","Linux"],e:`<blockquote>
<p>MacOS 自带的 bash 作为几乎所有 Linux 发行版的默认终端，正常使用时没什么问题的</p>
<p>这里介绍一个更强大的终端神器</p>
</blockquote>
<h2>目录</h2>

<h2>背景介绍</h2>
<p>在 unix 内核的操作系统中,当然现在衍生出好多分支,linux ,OS X 都算.</p>
<p>shell 就算和上面这些系统内核指令打交道的一座桥梁,我们通过键盘输入一种自己容易记忆识别的符号标识(shell 命令)</p>
<p>然后 shell 解析这种命令再反馈给内核去执行一系列操作.</p>
<p>zsh 和 shell 有什么关系呢?</p>`,r:{minutes:4.54,words:1361},t:"更优雅强大的终端ZSH",i:"hk-zsh",y:"a"}}],["/posts/Python/",{loader:()=>o(()=>import("./index.html-CSAuzwJu.js"),[]),meta:{d:17172e8,l:"2024年6月1日",e:`<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>这里放置 python相关 内容</p>
</div>
`,r:{minutes:.09,words:26},t:"Python",i:"python",y:"p"}}],["/posts/Python/python-12306-coty-code.html",{loader:()=>o(()=>import("./python-12306-coty-code.html-c7yugDdh.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 背景</h2>
<p>在做项目的时候，遇到铁路城市编码问题。其中：BJP为北京站编码；TJP为天津站编码。</p>
<p>我们在信息查询-&gt;正晚点-&gt;可以看到station_name.js返回了城市编码信息</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410131415320.png" alt="image-20210202094628947" tabindex="0" loading="lazy"><figcaption>image-20210202094628947</figcaption></figure>`,r:{minutes:1.36,words:409},t:"python爬取12306城市编码转换",y:"a"}}],["/posts/Python/python-advantage.html",{loader:()=>o(()=>import("./python-advantage.html-X6DztA8D.js"),[]),meta:{d:1729494189e3,e:`
<h2>2. 学习过程中感悟的python强大之处</h2>
<ol>
<li>
<p>文件处理强大</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>with open('index.html', 'wb') as f:</span></span>
<span class="line"><span>    f.write(req.content)</span></span></code></pre>
</div><p>以上代码就直接保存文件，也不需要异常处理，关闭流等操作</p>
</li>
</ol>`,r:{minutes:.19,words:57},t:"Python优势",y:"a"}}],["/posts/Python/python-baotu.html",{loader:()=>o(()=>import("./python-baotu.html-DawR71K6.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>下载包图网的视频资源到本地</p>
<h2>2. 涉及知识点</h2>
<ol>
<li>
<p>isinstance() 判断对象类型</p>
<p>函数来判断一个对象是否是一个已知的类型</p>
<div class="language-python" data-ext="python" data-title="python"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">if</span><span style="color:#C678DD;--shiki-dark:#C678DD"> not</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> isinstance</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">self</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.useragent, </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">str</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">):</span></span></code></pre>
</div></li>
<li>
<p>多线程</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">t1 </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> threading</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">Thread</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(target</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">self</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">request</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#E06C75;--shiki-dark:#E06C75">  # request线程，进行生产者任务</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">t1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">start</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#E06C75;--shiki-dark:#E06C75">  # 线程启动</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">t1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">join</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#E06C75;--shiki-dark:#E06C75">  # 等待其他线程结束，再结束 线程</span></span></code></pre>
</div></li>
<li>
<p>zip/unzip使用</p>
</li>
</ol>`,r:{minutes:3.96,words:1189},t:"python爬取包图网",y:"a"}}],["/posts/Python/python-beautiful-soup-started.html",{loader:()=>o(()=>import("./python-beautiful-soup-started.html-DAbkKIiT.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p><strong>Beautiful Soup</strong> 是一个可以从 <strong>HTML</strong> 或 <strong>XML</strong> 文件中提取数据的 <strong>Python</strong> 库.它能够通过你喜欢的转换器实现惯用的文档导航,查找,修改文档的方式.<strong>Beautiful Soup</strong> 会帮你节省数小时甚至数天的工作时间.</p>
<h2>2. 简单用法</h2>
<p>将一段文档传入 <strong>BeautifulSoup</strong> 的构造方法,就能得到一个文档的对象, 可以传入一段字符串或一个文件句柄.</p>`,r:{minutes:4.42,words:1326},t:"BeautifulSoup入门",y:"a"}}],["/posts/Python/python-db-ddl.html",{loader:()=>o(()=>import("./python-db-ddl.html-CL7MHCZ1.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 背景</h2>
<p>项目启动阶段先设计了数据库文档，再将数据库文档转化为建表语句（DDL）时，无论是手写sql还是用客户端工具，都需要涉及大量的复制操作。十分劳累</p>
<h2>2. 思路</h2>
<p>将数据库word的word 复制到excel，读取excel。根据自己的业务规则读取</p>
<blockquote>
<p>读取整份数据库文档word，读取word 格式影响较大。而且涉及到的数据表太多，我们批量替换很容易出问题。还是单表操作更保险</p>
</blockquote>
<p>数据库word</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404230952967.png" alt="image-20210518101735640" tabindex="0" loading="lazy"><figcaption>image-20210518101735640</figcaption></figure>`,r:{minutes:2.36,words:707},t:"Python将数据库文档转DDL建表语句",y:"a"}}],["/posts/Python/python-douban-rating.html",{loader:()=>o(()=>import("./python-douban-rating.html-BaajIbgI.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>读取豆瓣影评，并根据影评分析出影评关键词</p>
<h2>2. 涉及知识点</h2>
<ol>
<li>
<p>requests.Session() 会话保持</p>
<blockquote>
<p>requests库的session会话对象可以跨请求保持某些参数，说白了，就是比如你使用session成功的登录了某个网站，则在再次使用该session对象求求该网站的其他网页都会默认使用该session之前使用的cookie等参数</p>
</blockquote>
</li>
<li>
<p>requests 请求网络代理</p>
<p>如果需要使用代理，你可以通过为任意请求方法提供 proxies 参数来配置单个请求:</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>import requests </span></span>
<span class="line"><span>proxies = { "http": "http://10.10.1.10:3128", "https": "http://10.10.1.10:1080", } </span></span>
<span class="line"><span>requests.get("http://example.org", proxies=proxies)</span></span></code></pre>
</div></li>
<li>
<p>输入</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>kind = int(input("请选择搜索类型：1.根据电影链接 2.根据电影id 3.根据电影名："))</span></span></code></pre>
</div></li>
<li>
<p>selenium 模拟操作,通过xpath查找元素</p>
</li>
</ol>`,r:{minutes:4.88,words:1464},t:"python爬取豆瓣影评分析",y:"a"}}],["/posts/Python/python-lxml.html",{loader:()=>o(()=>import("./python-lxml.html-Bb90N5V3.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>lxml 是一个流行的解析库，使用Xpath语法</p>
<h2>2. Xpath常用语法</h2>
<p>XPath 使用路径表达式在 XML 文档中选取节点。节点是通过沿着路径或者 step 来选取的。</p>
<h3>2.1 选取节点</h3>
<p>下面列出了最有用的路径表达式：</p>
<table>
<thead>
<tr>
<th>表达式</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>nodename</td>
<td>选取此节点的所有子节点。</td>
</tr>
<tr>
<td>/</td>
<td>从根节点选取。</td>
</tr>
<tr>
<td>//</td>
<td>从匹配选择的当前节点选择文档中的节点，而不考虑它们的位置。</td>
</tr>
<tr>
<td>.</td>
<td>选取当前节点。</td>
</tr>
<tr>
<td>..</td>
<td>选取当前节点的父节点。</td>
</tr>
<tr>
<td>@</td>
<td>选取属性。</td>
</tr>
</tbody>
</table>`,r:{minutes:4.25,words:1274},t:"lxml入门",y:"a"}}],["/posts/Python/python-maimai.html",{loader:()=>o(()=>import("./python-maimai.html-DyFtvepN.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>该项目主要是根据<a href="https://github.com/Joezhangs/PythonSpider/tree/master/Item5%EF%BC%9Aspider_maimai" target="_blank" rel="noopener noreferrer">github项目爬取脉脉网</a> 学习，并根据自己的业务需求改造</p>
<h3>1.1 页面爬取的内容</h3>
<blockquote>
<p>这是一个基于python3而写的爬虫，爬取的网站的脉脉网(<a href="https://maimai.cn/" target="_blank" rel="noopener noreferrer">https://maimai.cn/</a>)，在搜索框中搜索“CHO”，并切换到“人脉”选项卡，点击姓名，进入详情页，爬取其详细信息</p>
</blockquote>`,r:{minutes:1.61,words:482},t:"python爬取脉脉",y:"a"}}],["/posts/Python/python-proxy.html",{loader:()=>o(()=>import("./python-proxy.html-D4rTbnxQ.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 背景</h2>
<p>反爬虫技术中最常见的技术就是封ip，那么我们如何对抗呢？我们可以使用高匿ip。这个高匿ip只存活1-2分钟。我们每格10秒换一个ip</p>
<h2>2. 使用</h2>
<p><a href="https://www.xiaoxiangdaili.com/ip-short/guide" target="_blank" rel="noopener noreferrer">https://www.xiaoxiangdaili.com/ip-short/guide</a></p>
<ol>
<li>
<p>申请试用</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404230953800.png" alt="image-20210302095623043" tabindex="0" loading="lazy"><figcaption>image-20210302095623043</figcaption></figure>
</li>
<li>
<p>获取代理的ip</p>
<p><a href="https://api.xiaoxiangdaili.com/ip/get?appKey=683854977391022080&amp;appSecret=IXhGvwsx&amp;cnt=20&amp;wt=json" target="_blank" rel="noopener noreferrer">https://api.xiaoxiangdaili.com/ip/get?appKey=683854977391022080&amp;appSecret=IXhGvwsx&amp;cnt=20&amp;wt=json</a></p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404230953845.png" alt="image-20210302100007951" tabindex="0" loading="lazy"><figcaption>image-20210302100007951</figcaption></figure>
</li>
</ol>`,r:{minutes:1.72,words:516},t:"小象代理",y:"a"}}],["/posts/Python/python-scrapy-ajax.html",{loader:()=>o(()=>import("./python-scrapy-ajax.html-CLtVcAwG.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 什么是AJAX?</h2>
<blockquote>
<p>AJAX即“Asynchronous Javascript And XML”（异步JavaScript和XML），是指一种创建交互式网页应用的网页开发技术。</p>
<p>AJAX = 异步 JavaScript和XML（标准通用标记语言的子集）。</p>
<p>AJAX 是一种用于创建快速动态网页的技术。</p>
<p>通过在后台与服务器进行少量数据交换，AJAX 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。</p>
</blockquote>
<h2>2. 两个Chrome插件</h2>`,r:{minutes:4.35,words:1306},t:"Scrapy入门（四）-抓取AJAX异步加载网页",y:"a"}}],["/posts/Python/python-scrapy-debugging-spiders.html",{loader:()=>o(()=>import("./python-scrapy-debugging-spiders.html-6ZockVx0.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 背景</h2>
<p>而Scrapy的爬虫通常是在命令行中启动的，我们怎么去调试呢？</p>
<h2>2. 调试部署</h2>
<ol>
<li>
<p>首先在setting.py同级目录下创建run.py文件。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404230954313.png" alt="image-20210311105958418" tabindex="0" loading="lazy"><figcaption>image-20210311105958418</figcaption></figure>
</li>
</ol>`,r:{minutes:.58,words:174},t:"Scrapy入门（三）-调试(Debugging)Spiders",y:"a"}}],["/posts/Python/python-scrapy-douban-top250.html",{loader:()=>o(()=>import("./python-scrapy-douban-top250.html-BLPMehaV.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>上一篇我们已经大致了解了Scrapy的基本情况，并写了一个简单的小demo。这次我会以爬取豆瓣电影TOP250为例进一步为大家讲解一个完整爬虫的流程。</p>
<h2>2. 观察页面结构</h2>
<p><a href="https://movie.douban.com/top250" target="_blank" rel="noopener noreferrer">豆瓣电影 Top250</a></p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404230955032.png" alt="image-20210311085829131" tabindex="0" loading="lazy"><figcaption>image-20210311085829131</figcaption></figure>`,r:{minutes:8.98,words:2693},t:"Scrapy入门（二）-爬取豆瓣电影TOP250",y:"a"}}],["/posts/Python/python-scrapy-started.html",{loader:()=>o(()=>import("./python-scrapy-started.html-Ci3jLt0b.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>Scrapy 是一个为了爬取网站数据，提取结构性数据而编写的应用框架。</p>
<h3>1.1 与Requests+BeautifulSoup 的区别</h3>
<ul>
<li>
<p>Requests+BeautifulSoup</p>
<p>适合快速实现的小项目</p>
</li>
<li>
<p>scrapy</p>
<p>大的工程化项目</p>
</li>
</ul>
<h2>2. 架构概览</h2>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404230955513.png" alt="image-20210310164531835" tabindex="0" loading="lazy"><figcaption>image-20210310164531835</figcaption></figure>`,r:{minutes:4.69,words:1408},t:"Scrapy入门",y:"a"}}],["/posts/Python/python-selenium-started.html",{loader:()=>o(()=>import("./python-selenium-started.html-DgbsK-Y8.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>Selenium是 自动化测试工具。它支持各种浏览器，包括 Chrome，Safari，Firefox 等主流界面式浏览器。主要用电脑模拟人操作浏览器网页，可以实现自动化，测试等</p>
<h2>2. 初步体验</h2>
<blockquote>
<p>忽略安装Selenium 和 浏览器驱动安装和配置，如有需求自行百度</p>
</blockquote>
<p>运行如下代码，会自动打开浏览器，然后访问百度。</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>from selenium import webdriver</span></span>
<span class="line"><span></span></span>
<span class="line"><span>browser = webdriver.Chrome()</span></span>
<span class="line"><span># browser = webdriver.Chrome(r"C:\\Users\\Administrator\\Downloads\\chromedriver_win32\\chromedriver.exe")</span></span>
<span class="line"><span>browser.get('http://www.baidu.com/')</span></span></code></pre>
</div>`,r:{minutes:3.89,words:1166},t:"Selenium入门",y:"a"}}],["/posts/Python/python-sms.html",{loader:()=>o(()=>import("./python-sms.html-CtinMg68.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 背景</h2>
<p>我们在做某些网站的测试或者爬虫的时候，需要注册该平台。但并不希望暴露自己的手机号，那么这些免费短信平台就派上用场了</p>
<h2>2. 使用</h2>
<p><a href="https://www.yinsiduanxin.com/china-phone-number.html" target="_blank" rel="noopener noreferrer">隐私短信</a></p>
<ol>
<li>
<p>首页有非常多的手机号也已选择</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404230956884.png" alt="image-20210302093933352" tabindex="0" loading="lazy"><figcaption>image-20210302093933352</figcaption></figure>
</li>
<li>
<p>复制手机号到各平台注册</p>
</li>
<li>
<p>详情查看验证码</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404230956929.png" alt="image-20210302094047504" tabindex="0" loading="lazy"><figcaption>image-20210302094047504</figcaption></figure>
</li>
</ol>`,r:{minutes:.4,words:120},t:"免费短信注册各平台",y:"a"}}],["/posts/Python/python-tieba.html",{loader:()=>o(()=>import("./python-tieba.html-DxW2icIc.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>指定贴吧名和需要的条数，将贴吧内容下载到本地</p>
<h2>2. 涉及知识点</h2>
<ul>
<li>requests 发起网络请求</li>
<li>python文件操作
<ul>
<li>open() 函数用于打开一个文件，创建一个 <strong>file</strong> 对象，相关的方法才可以调用它进行读写。</li>
<li>f.write("hello\\n")：写入数据</li>
</ul>
</li>
</ul>
<h2>3. 完整代码</h2>
<div class="language-python line-numbers-mode" data-ext="python" data-title="python"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">#!/usr/bin/python3</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># -*- coding: utf-8 -*-</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> requests</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> TiebaSpider</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">():</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    def</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> __init__</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;font-style:italic;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic">self</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;font-style:italic;--shiki-dark:#D19A66;--shiki-dark-font-style:italic">kw</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;font-style:italic;--shiki-dark:#D19A66;--shiki-dark-font-style:italic">max_pn</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        self</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.max_pn </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> max_pn</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        self</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.kw </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> kw</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        self</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.base_url </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379"> "https://tieba.baidu.com/f?kw=</span><span style="color:#D19A66;--shiki-dark:#D19A66">{}</span><span style="color:#98C379;--shiki-dark:#98C379">&amp;ie=utf-8&amp;pn=</span><span style="color:#D19A66;--shiki-dark:#D19A66">{}</span><span style="color:#98C379;--shiki-dark:#98C379">"</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        self</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.headers </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">            "User-Agent"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.110 Safari/537.36"</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        pass</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    def</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> get_url_list</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;font-style:italic;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic">self</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">        '''</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">        获取 url 列表</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">        :return:</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">        '''</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # 写法一</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">        '''</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">        url_list = []</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">        for pn in range(0,self.max_pn,50):</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">            url = self.base_url.format(self.kw,pn)</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">            url_list.append(url)</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">        return url_list</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">        '''</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # 写法二</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> [</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">self</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.base_url.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">format</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">self</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.kw, pn) </span><span style="color:#C678DD;--shiki-dark:#C678DD">for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> pn </span><span style="color:#C678DD;--shiki-dark:#C678DD">in</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> range</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">self</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.max_pn, </span><span style="color:#D19A66;--shiki-dark:#D19A66">50</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    def</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> get_content</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;font-style:italic;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic">self</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;font-style:italic;--shiki-dark:#D19A66;--shiki-dark-font-style:italic">url</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">        '''</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">        发送请求获取响应内容</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">        :param url:</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">        :return:</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">        '''</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        response </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> requests.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">            url</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">url,</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">            headers</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">self</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.headers</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> response.content</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    def</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> get_items</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;font-style:italic;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic">self</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;font-style:italic;--shiki-dark:#D19A66;--shiki-dark-font-style:italic">content</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;font-style:italic;--shiki-dark:#D19A66;--shiki-dark-font-style:italic">index</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">        '''</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">        从响应内容中提取数据</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">        :param content:</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">        :return:</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">        '''</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        with</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> open</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">'tieba-</span><span style="color:#D19A66;--shiki-dark:#D19A66">{}</span><span style="color:#98C379;--shiki-dark:#98C379">.html'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">format</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(index), </span><span style="color:#98C379;--shiki-dark:#98C379">'wb'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">as</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> f:</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            f.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">write</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(content)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#D19A66;--shiki-dark:#D19A66"> None</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    def</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> save_items</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;font-style:italic;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic">self</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;font-style:italic;--shiki-dark:#D19A66;--shiki-dark-font-style:italic">items</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">        '''</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">        保存数据</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">        :param items:</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">        :return:</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">        '''</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        pass</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    def</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> run</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;font-style:italic;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic">self</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # 1. 获取 url 列表</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        url_list </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> self</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get_url_list</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> url </span><span style="color:#C678DD;--shiki-dark:#C678DD">in</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> url_list:</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            # 2. 发送请求获取响应</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            content </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> self</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get_content</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(url)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            # 3. 从响应中提取数据</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            items </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> self</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get_items</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(content, url_list.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">index</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(url) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            # 4. 保存数据</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            self</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">save_items</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(items)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        pass</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> __name__</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> ==</span><span style="color:#98C379;--shiki-dark:#98C379"> '__main__'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    spider </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> TiebaSpider</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"英雄联盟"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;--shiki-dark:#D19A66">150</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    spider.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">run</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.08,words:323},t:"python爬取百度贴吧（难度1星）",y:"a"}}],["/posts/Python/python-wordcloud.html",{loader:()=>o(()=>import("./python-wordcloud.html-DNhQ36K2.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>基于Python的词云生成类库,很好用,而且功能强大。可以根据文本的词条内容划分出词组的</p>
<p>github: <a href="https://github.com/amueller/word_cloud" target="_blank" rel="noopener noreferrer">https://github.com/amueller/word_cloud</a></p>
<p>效果如下：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404230957262.png" alt="image-20210204151203285" tabindex="0" loading="lazy"><figcaption>image-20210204151203285</figcaption></figure>`,r:{minutes:1.52,words:455},t:"wordcloud入门",y:"a"}}],["/posts/Python/python-x-anaconda.html",{loader:()=>o(()=>import("./python-x-anaconda.html-j1lA-FY7.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 概述</h2>
<p>很多学习python的初学者甚至学了有一段时间的人接触到anaconda或者其他虚拟环境工具时觉得无从下手, 其主要原因就是不明白这些工具究竟有什么用, 是用来做什么的, 为什么要这么做, 比如笔者一开始也是不明白为啥除了python之外我还需要这么一个东西, 他和python到底有啥联系和区别, 为啥能用来管理python.</p>
<p>在使用过之后我才逐渐发现其实anaconda等环境管理工具究竟在做啥, 以及为什么我们需要他们来管理我们的python环境</p>
<p>首先我们需要先去了解Anaconda诞生的目的.再去了解Anaconda的使用方法.</p>`,r:{minutes:9.64,words:2891},t:"Python环境 - Anaconda使用指南",y:"a"}}],["/posts/Python/python-x-xpath.html",{loader:()=>o(()=>import("./python-x-xpath.html-GU8pwPCx.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 概述</h2>
<p>XPath，全称 XML Path Language，即 XML 路径语言，它是一门在XML文档中查找信息的语言。XPath 最初设计是用来搜寻XML文档的，但是它同样适用于 HTML 文档的搜索。</p>
<p>所以在做爬虫时，我们完全可以使用 XPath 来做相应的信息抽取，本节我们来介绍一下 XPath 的基本用法。</p>
<blockquote>
<p>XPath 的选择功能十分强大，它提供了非常简洁明了的路径选择表达式，另外它还提供了超过 100 个内建函数用于字符串、数值、时间的匹配以及节点、序列的处理等等，几乎所有我们想要定位的节点都可以用XPath来选择。</p>
<p>XPath 于 1999 年 11 月 16 日 成为 W3C 标准，它被设计为供 XSLT、XPointer 以及其他 XML 解析软件使用，更多的文档可以访问其官方网站：<a href="https://link.zhihu.com/?target=https%3A//www.w3.org/TR/xpath/" target="_blank" rel="noopener noreferrer">https://www.w3.org/TR/xpath/</a>。</p>
</blockquote>`,r:{minutes:3.6,words:1080},t:"Python爬虫 - XPath详解",y:"a"}}],["/posts/Redis/",{loader:()=>o(()=>import("./index.html-DgalYE1V.js"),[]),meta:{d:17188416e5,l:"2024年6月20日",e:`<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>这里放置 Redis 相关的内容</p>
</div>
`,r:{minutes:.09,words:27},t:"Redis",i:"redis",y:"p"}}],["/posts/Redis/db-redis-data-type-special.html",{loader:()=>o(()=>import("./db-redis-data-type-special.html-CPZD18Oh.js"),[]),meta:{d:1729494189e3,c:["数据库","Redis"],g:null,e:`
<blockquote>
<p>很少使用，了解有这么个东西就可以了</p>
</blockquote>
<blockquote>
<p>Redis除了上文中5种基础数据类型，还有三种特殊的数据类型，分别是 <strong>HyperLogLogs</strong>（基数统计）， <strong>Bitmaps</strong> (位图) 和 <strong>geospatial</strong> （地理位置）</p>
</blockquote>
<h2>1. HyperLogLogs（基数统计）</h2>
<blockquote>
<p>Redis 2.8.9 版本更新了 Hyperloglog 数据结构！</p>
</blockquote>`,r:{minutes:4.94,words:1482},t:"Redis入门 - 3种特殊类型详解",O:40,y:"a"}}],["/posts/Redis/db-redis-data-type-stream.html",{loader:()=>o(()=>import("./db-redis-data-type-stream.html-CJM5yUxR.js"),[]),meta:{d:1729494189e3,c:["数据库","Redis"],g:null,e:`
<blockquote>
<p>Redis5.0 中还增加了一个数据类型Stream，它借鉴了Kafka的设计，是一个新的强大的支持多播的可持久化的消息队列。</p>
</blockquote>
<h2>1. 为什么会设计Stream</h2>
<blockquote>
<p>Redis5.0 中还增加了一个数据结构Stream，从字面上看是流类型，但其实从功能上看，应该是Redis对消息队列（MQ，Message Queue）的完善实现。</p>
</blockquote>
<p>用过Redis做消息队列的都了解，基于Reids的消息队列实现有很多种，例如：</p>
<ul>
<li>PUB/SUB，订阅/发布模式
<ul>
<li>但是发布订阅模式是无法持久化的，如果出现网络断开、Redis 宕机等，消息就会被丢弃；</li>
</ul>
</li>
<li>基于<strong>List LPUSH+BRPOP</strong> 或者 基于<strong>Sorted-Set</strong>的实现
<ul>
<li>支持了持久化，但是不支持多播，分组消费等</li>
</ul>
</li>
</ul>`,r:{minutes:16.82,words:5046},t:"Redis进阶 - 数据类型：Stream详解",O:50,y:"a"}}],["/posts/Redis/db-redis-data-types.html",{loader:()=>o(()=>import("./db-redis-data-types.html-_Z35Fv85.js"),[]),meta:{d:1729494189e3,c:["数据库","Redis"],g:null,e:`
<h2>1. Redis数据结构简介</h2>
<p>首先对redis来说，所有的key（键）都是字符串。我们在谈基础数据结构时，讨论的是存储值的数据类型，主要包括常见的5种数据类型，分别是：String、List、Set、Zset、Hash。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403131013259.png" alt="image-20220622210134108" tabindex="0" loading="lazy"><figcaption>image-20220622210134108</figcaption></figure>`,r:{minutes:7.52,words:2257},t:"Redis入门 - 数据类型：5种基础数据类型详解",O:30,y:"a"}}],["/posts/Redis/db-redis-hash.html",{loader:()=>o(()=>import("./db-redis-hash.html-F0oVH4cY.js"),[]),meta:{d:1729494189e3,c:["数据库","Redis"],g:null,e:`
<h2>1. 普通hash</h2>
<p>普通hash也就是最简单的hash算法，即</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>index = hash(key) % N</span></span></code></pre>
</div>`,r:{minutes:5.05,words:1516},t:"Redis集群：hash寻址算法",y:"a"}}],["/posts/Redis/db-redis-introduce.html",{loader:()=>o(()=>import("./db-redis-introduce.html-DbQWJPyN.js"),[]),meta:{d:1729494189e3,c:["数据库","Redis"],g:null,e:`
<h2>1. 什么是redis</h2>
<p>Redis是一款内存高速缓存数据库。Redis全称为：<strong>Remote Dictionary Server</strong>（远程数据(字典)服务），使用C语言编写，Redis是一个key-value存储系统（键值存储系统），支持丰富的数据类型，如：String、list、set、zset、hash。</p>
<p>Redis是一种支持key-value等多种数据结构的存储系统。可用于缓存，事件发布或订阅，高速队列等场景。支持网络，提供字符串，哈希，列表，队列，集合结构直接存取，基于内存，可持久化。</p>
<h2>2. 为什么要使用Redis</h2>`,r:{minutes:6.07,words:1820},t:"Redis入门 - Redis概念和基础",O:20,y:"a"}}],["/posts/Redis/db-redis-x-cache.html",{loader:()=>o(()=>import("./db-redis-x-cache.html-NT2xUoRJ.js"),[]),meta:{d:1729494189e3,c:["数据库","Redis"],g:null,e:`
<blockquote>
<p>Redis最常用的一个场景就是作为缓存，本文主要探讨Redis作为缓存，在实践中可能会有哪些问题？比如一致性, 穿击, 穿透, 雪崩, 污染等。</p>
</blockquote>
<h2>1. 为什么要理解Redis缓存问题</h2>
<p>在高并发的业务场景下，数据库大多数情况都是用户并发访问最薄弱的环节。所以，就需要使用redis做一个缓冲操作，让请求先访问到redis，而不是直接访问Mysql等数据库。这样可以大大缓解数据库的压力。</p>
<p>当缓存库出现时，必须要考虑如下问题：</p>
<ul>
<li>缓存穿透</li>
<li>缓存穿击</li>
<li>缓存雪崩</li>
<li>缓存污染（或者满了）</li>
<li>缓存和数据库一致性</li>
</ul>`,r:{minutes:14.94,words:4483},t:"Redis进阶 -  Redis缓存问题：一致性, 穿击, 穿透, 雪崩, 污染等",O:310,y:"a"}}],["/posts/Redis/db-redis-x-cluster.html",{loader:()=>o(()=>import("./db-redis-x-cluster.html-WLpVxko0.js"),[]),meta:{d:1729494189e3,c:["数据库","Redis"],g:null,e:`
<blockquote>
<p>前面两篇文章，<a href="">主从复制</a>和<a href="">哨兵机制</a>保障了高可用，就读写分离而言虽然slave节点扩展了主从的读并发能力，但是<strong>写能力</strong>和<strong>存储能力</strong>是无法进行扩展，就只能是master节点能够承载的上限。如果面对海量数据那么必然需要构建master（主节点分片)之间的集群，同时必然需要吸收高可用（主从复制和哨兵机制）能力，即每个master分片节点还需要有slave节点，这是分布式系统中典型的纵向扩展（集群的分片技术）的体现；所以在Redis 3.0版本中对应的设计就是Redis Cluster。</p>
</blockquote>`,r:{minutes:33.78,words:10135},t:"Redis进阶 - 高可拓展：分片技术（Redis Cluster）详解",O:230,y:"a"}}],["/posts/Redis/db-redis-x-consistency.html",{loader:()=>o(()=>import("./db-redis-x-consistency.html-BZ1U2Bwr.js"),[]),meta:{d:1729494189e3,c:["数据库","Redis"],g:null,e:`
<h2>0. 前言</h2>
<p>直接先抛一下结论：<strong>在满足实时性的条件下，不存在两者完全保存一致的方案，只有最终一致性方案。</strong> 根据网上的众多解决方案，总结出 6 种，直接看目录：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403131015166.png" alt="image-20221129233458742" tabindex="0" loading="lazy"><figcaption>image-20221129233458742</figcaption></figure>`,r:{minutes:5.92,words:1776},t:"Redis进阶 - 如何保障MySQL和Redis的数据一致性？",O:309,y:"a"}}],["/posts/Redis/db-redis-x-copy.html",{loader:()=>o(()=>import("./db-redis-x-copy.html-BxZ0Yhjm.js"),[]),meta:{d:1729494189e3,c:["数据库","Redis"],g:null,e:`
<blockquote>
<p>我们知道要避免单点故障，即保证高可用，便需要冗余（副本）方式提供集群服务。而Redis 提供了主从库模式，以保证数据副本的一致，主从库之间采用的是读写分离的方式。本文主要阐述Redis的主从复制。</p>
</blockquote>
<h2>1. 主从复制概述</h2>
<blockquote>
<p>主从复制，是指将一台Redis服务器的数据，复制到其他的Redis服务器。前者称为主节点(master)，后者称为从节点(slave)；数据的复制是单向的，只能由主节点到从节点。</p>
</blockquote>
<p><strong>主从复制的作用</strong>主要包括：</p>`,r:{minutes:17.88,words:5363},t:"Redis进阶 - 高可用：主从复制详解",O:210,y:"a"}}],["/posts/Redis/db-redis-x-event.html",{loader:()=>o(()=>import("./db-redis-x-event.html-BaLuAknz.js"),[]),meta:{d:1729494189e3,c:["数据库","Redis"],g:null,e:`
<blockquote>
<p>Redis 采用事件驱动机制来处理大量的网络IO。它并没有使用 libevent 或者 libev 这样的成熟开源方案，而是自己实现一个非常简洁的事件驱动库 ae_event</p>
</blockquote>
<h2>1. 事件机制</h2>
<blockquote>
<p>Redis中的事件驱动库只关注网络IO，以及定时器。</p>
</blockquote>
<p>该事件库处理下面两类事件：</p>
<ul>
<li><strong>文件事件</strong>(file event)：用于处理 Redis 服务器和客户端之间的网络IO。</li>
<li><strong>时间事件</strong>(time eveat)：Redis 服务器中的一些操作（比如serverCron函数）需要在给定的时间点执行，而时间事件就是处理这类定时操作的。</li>
</ul>`,r:{minutes:17.54,words:5263},t:"Redis进阶 - 事件：Redis事件机制详解",O:160,y:"a"}}],["/posts/Redis/db-redis-x-hot-key.html",{loader:()=>o(()=>import("./db-redis-x-hot-key.html-Cj_I1Czj.js"),[]),meta:{d:1729494189e3,c:["数据库","Redis"],g:null,e:`
<h2>0. 引言</h2>
<p>其实热key问题说来也很简单，就是瞬间有几十万的请求去访问redis上某个固定的key，从而压垮缓存服务的情情况。<br>
其实生活中也是有不少这样的例子。比如XX明星结婚。那么关于XX明星的Key就会瞬间增大，就会出现热数据问题。</p>
<blockquote>
<p><code>ps:</code>hot key和big key问题，大家一定要有所了解。</p>
</blockquote>
<p>本文预计分为如下几个部分</p>
<ul>
<li>热key问题</li>
<li>如何发现</li>
<li>业内方案</li>
</ul>
<h2>1. 热Key问题</h2>`,r:{minutes:6.19,words:1856},t:"Redis进阶 - Redis热key问题",O:311,y:"a"}}],["/posts/Redis/db-redis-x-performance.html",{loader:()=>o(()=>import("./db-redis-x-performance.html-BFNbjoKa.js"),[]),meta:{d:1729494189e3,c:["数据库","Redis"],g:null,e:`
<blockquote>
<p>Redis 的性能问题，涉及到的知识点非常广，几乎涵盖了 CPU、内存、网络、甚至磁盘的方方面面；同时还需要对上文中一些基础或底层有详细的了解。</p>
</blockquote>
<h2>1. 前言</h2>
<blockquote>
<p>Redis 作为优秀的内存数据库，其拥有非常高的性能，单个实例的 OPS 能够达到 10W 左右。但也正因此如此，当我们在使用 Redis 时，如果发现操作延迟变大的情况，就会与我们的预期不符。</p>
</blockquote>
<p>你也许或多或少地，也遇到过以下这些场景：</p>
<ul>
<li>在 Redis 上执行同样的命令，为什么有时响应很快，有时却很慢？</li>
<li>为什么 Redis 执行 SET、DEL 命令耗时也很久？</li>
<li>为什么我的 Redis 突然慢了一波，之后又恢复正常了？</li>
<li>为什么我的 Redis 稳定运行了很久，突然从某个时间点开始变慢了？</li>
<li>...</li>
</ul>`,r:{minutes:40.73,words:12220},t:"Redis进阶 - 性能调优：Redis性能调优详解",O:350,y:"a"}}],["/posts/Redis/db-redis-x-pub-sub.html",{loader:()=>o(()=>import("./db-redis-x-pub-sub.html-MrHh8QHH.js"),[]),meta:{d:1729494189e3,c:["数据库","Redis"],g:null,e:`
<h2>1. Redis发布订阅简介</h2>
<blockquote>
<p>Redis 发布订阅(pub/sub)是一种消息通信模式：发送者(pub)发送消息，订阅者(sub)接收消息。</p>
</blockquote>
<p>Redis 的 SUBSCRIBE 命令可以让客户端订阅任意数量的频道， 每当有新信息发送到被订阅的频道时， 信息就会被发送给所有订阅指定频道的客户端。</p>
<h3>1.1 例子</h3>
<p>作为例子， 下图展示了频道 channel1 ， 以及订阅这个频道的三个客户端 —— client2 、 client5 和 client1 之间的关系：</p>
`,r:{minutes:8.22,words:2467},t:"Redis进阶 - 消息传递：发布订阅模式详解",O:150,y:"a"}}],["/posts/Redis/db-redis-x-rdb-aof.html",{loader:()=>o(()=>import("./db-redis-x-rdb-aof.html-4SK0jGwO.js"),[]),meta:{d:1729494189e3,c:["数据库","Redis"],g:null,e:`
<blockquote>
<p>为了防止数据丢失以及服务重启时能够恢复数据，Redis支持数据的持久化，主要分为两种方式，分别是RDB和AOF; 当然实际场景下还会使用这两种的混合模式。</p>
</blockquote>
<h2>1. Redis持久化简介</h2>
<blockquote>
<p>从两个点，我们来了解下Redis持久化</p>
</blockquote>
<ul>
<li><strong>为什么需要持久化</strong>？</li>
</ul>
<p>Redis是个基于内存的数据库。那服务一旦宕机，内存中的数据将全部丢失。通常的解决方案是从后端数据库恢复这些数据，但后端数据库有性能瓶颈，如果是大数据量的恢复，</p>`,r:{minutes:24.8,words:7439},t:"Redis进阶 - 持久化：RDB和AOF机制详解",O:140,y:"a"}}],["/posts/Redis/db-redis-x-redis-object.html",{loader:()=>o(()=>import("./db-redis-x-redis-object.html-CCCu5wXV.js"),[]),meta:{d:1729494189e3,c:["数据库","Redis"],g:null,e:`
<h2>1. 引入:从哪里开始学习底层？</h2>
<blockquote>
<p>我在整理Redis底层设计时，发现网上其实是有很多资料的，但是缺少一种自上而下的承接。这里我将收集很多网上的资料并重新组织，来帮助你更好的理解Redis底层设计。</p>
</blockquote>
<p>我们在前文已经阐述了<a href="https://java.isture.com/redis/started/Redis%E5%85%A5%E9%97%A8-5%E7%A7%8D%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E8%AF%A6%E8%A7%A3.html" target="_blank" rel="noopener noreferrer">Redis 5种基础数据类型详解</a>和<a href="https://java.isture.com/redis/started/Redis%E5%85%A5%E9%97%A8Stream%E8%AF%A6%E8%A7%A3.html" target="_blank" rel="noopener noreferrer">Redis入门 - 数据结构：Stream详解</a>；那么这些基础类型的底层是如何实现的呢？</p>`,r:{minutes:7.98,words:2393},t:"Redis进阶 - 数据类型：对象机制详解",O:110,y:"a"}}],["/posts/Redis/db-redis-x-trans.html",{loader:()=>o(()=>import("./db-redis-x-trans.html-B5vfCFA1.js"),[]),meta:{d:1729494189e3,c:["数据库","Redis"],g:null,e:`
<blockquote>
<p>Redis 事务的本质是一组命令的集合。事务支持一次执行多个命令，一个事务中所有命令都会被序列化。在事务执行过程，会按照顺序串行化执行队列中的命令，其他客户端提交的命令请求不会插入到事务执行命令序列中。</p>
</blockquote>
<h2>1. 什么是Redis事务</h2>
<p>Redis 事务的本质是一组命令的集合。事务支持一次执行多个命令，一个事务中所有命令都会被序列化。在事务执行过程，会按照顺序串行化执行队列中的命令，其他客户端提交的命令请求不会插入到事务执行命令序列中。</p>
<p>总结说：redis事务就是一次性、顺序性、排他性的执行一个队列中的一系列命令。</p>`,r:{minutes:9.15,words:2744},t:"Redis进阶 - 事务：Redis事务详解",O:170,y:"a"}}],["/posts/Redis/db-redis-y-install-remote.html",{loader:()=>o(()=>import("./db-redis-y-install-remote.html-BoLMBeRJ.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h3>1.1 注释 bind 127.0.0.1</h3>
<p><strong>注释掉bind 127.0.0.1可以使所有的ip访问redis</strong></p>
<p>若是想指定多个ip访问，但并不是全部的ip访问，可以bind</p>
<p>vim /usr/local/redis/bin/redis.conf</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>#bind 127.0.0.1</span></span></code></pre>
</div>`,r:{minutes:.64,words:193},t:"开启远程访问",y:"a"}}],["/posts/Redis/db-redis-y-install-sentinel.html",{loader:()=>o(()=>import("./db-redis-y-install-sentinel.html-C2QNtOjj.js"),[]),meta:{d:1729494189e3,c:["数据库","Redis"],g:null,e:`
<blockquote>
<p>在上文主从复制的基础上，如果主节点出现故障该怎么办呢？ 在 Redis 主从集群中，哨兵机制是实现主从库自动切换的关键机制，它有效地解决了主从复制模式下故障转移的问题。</p>
</blockquote>
<h2>1. 哨兵机制（Redis Sentinel）</h2>
<blockquote>
<p>Redis Sentinel，即Redis哨兵，在Redis 2.8版本开始引入。哨兵的核心功能是主节点的自动故障转移。</p>
</blockquote>
<p>下图是一个典型的哨兵集群监控的逻辑图：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/image-20220626115009263.png" alt="image-20220626115009263" tabindex="0" loading="lazy"><figcaption>image-20220626115009263</figcaption></figure>`,r:{minutes:6.49,words:1947},t:"Redis进阶 - 高可用：哨兵机制（Redis Sentinel）详解",O:220,y:"a"}}],["/posts/Redis/db-redis-y-install.html",{loader:()=>o(()=>import("./db-redis-y-install.html-CZg8Pq1L.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 具体安装步骤</h2>
<h3>1.1 使用wget命令下载</h3>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>wget http://download.redis.io/releases/redis-5.0.5.tar.gz</span></span></code></pre>
</div>`,r:{minutes:1.7,words:510},t:"Redis安装",y:"a"}}],["/posts/Redis/redis-x-cache-penetration.html",{loader:()=>o(()=>import("./redis-x-cache-penetration.html-FJ1GJ69u.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p>一般是黑客故意去请求缓存中不存在的数据，导致所有的请求都落到数据库上，造成数据库短时间内承受大量请求而崩掉</p>
<blockquote>
<p>我们redis中的数据都是从数据库中放进来的，他之所以会穿透是因为在redis里面没有查到，在数据库里也没有查到。</p>
<p>这样数据库就不能吧这条数据放到redis里，redis就拿不到那条数据。你每次要来那条数据的时候，都要去查数据库，然后数据库还没有一个反馈，这样就是一个恶性循环。导致了缓存穿透</p>
<p>如果大量的访问或者恶意的攻击，你直接去查你那条没有的数据。他会给你的数据库造成很大压力。也就是说他跳过了redis缓存。我们使用redis 就是为了减少数据库压力，但是现在redis 就没有起到相应的作用。这样就给数据库造成了很大压力</p>
</blockquote>`,r:{minutes:1.73,words:520},t:"Redis缓存穿透",y:"a"}}],["/posts/Redis/redis-x-quest-key.html",{loader:()=>o(()=>import("./redis-x-quest-key.html-DfzN4DkQ.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p>所谓 redis 的并发竞争 key 的问题也就是多个系统同时对一个key 进行操作，但是最后执行的顺序和我们期望的顺序不同，这样也就导致了结果的不同</p>
<h2>2.解决方案</h2>
<h2>2.1 分布式锁</h2>
<p>分布式锁（zookeeper 和 redis 都可以实现分布式锁）。（如果不存在 Redis 的并发竞争 Key 问题，不要使用分布式锁，这样会影响性能）</p>
<blockquote>
<p>基于zookeeper临时有序节点可以实现的分布式锁。大致思想为：每个客户端对某个方法加锁时，在zookeeper上的与该方法对应的指定节点的目录下，生成一个唯一的瞬时有序节点。 判断是否获取锁的方式很简单，只需要判断有序节点中序号最小的一个。 当释放锁的时候，只需将这个瞬时节点删除即可。同时，其可以避免服务宕机导致的锁无法释放，而产生的死锁问题。完成业务流程后，删除对应的子节点释放锁。</p>
<p>在实践中，当然是从以可靠性为主。所以首推Zookeeper。</p>
</blockquote>`,r:{minutes:1.14,words:342},t:"如何解决 Redis 的并发竞争 Key 问题",y:"a"}}],["/posts/Redis/redis-x-question-ache-valanche.html",{loader:()=>o(()=>import("./redis-x-question-ache-valanche.html-B-Qb8LKl.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p>缓存同一时间大面积的失效，所以，后面的请求都会落到数据库上，造成<strong>数据库短时间内承受大量请求而崩掉</strong></p>
<h2>2. 解决办法</h2>
<ul>
<li>事前：尽量保证整个 redis 集群的高可用性，发现机器宕机尽快补上。选择合适的内存淘汰策略</li>
<li>事中：本地chcache缓存 + hystrix限流&amp;降级，避免Mysql崩掉</li>
<li>事后：利用 redis 持久化机制保存的数据尽快恢复缓存</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403131024185.png" alt="image-20191008225446152" tabindex="0" loading="lazy"><figcaption>image-20191008225446152</figcaption></figure>`,r:{minutes:.53,words:158},t:"Redis缓存雪崩",y:"a"}}],["/posts/Redis/redis-x-question-double-write.html",{loader:()=>o(()=>import("./redis-x-question-double-write.html-CWWG3MIE.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1.引言</h2>
<ul>
<li>在读取缓存方面的方案流程图</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403131024116.png" alt="image-20191008234809789" tabindex="0" loading="lazy"><figcaption>image-20191008234809789</figcaption></figure>
<ul>
<li>
<p>更新缓存方面</p>
<p>对于更新完数据库，是更新缓存，还是删除缓存，又或者是先删除缓存，再更新数据库，其实大家存在很大的争议。</p>
</li>
</ul>`,r:{minutes:7.42,words:2227},t:"Redis保证缓存与数据库双写时的数据一致性",y:"a"}}],["/posts/Redis/redis-x-questuin-cache-warm-up.html",{loader:()=>o(()=>import("./redis-x-questuin-cache-warm-up.html-Cv__6mMx.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p>缓存预热就是系统上线后，<strong>将相关的缓存数据直接加载到缓存系统</strong></p>
<p>这样可以避免在用户请求的时候，先查询数据库，然后再将数据缓存的问题！用户直接查询事先被预热的缓存数据！</p>
<h2>2.解决方案</h2>
<h3>2.1 缓存刷新页面</h3>
<p>直接写个缓存刷新页面，上线时手工操作</p>
<h3>2.2 项目启动自动加载</h3>
<p>数据量不大，可以在项目启动的时候自动进行加载</p>
<p>目的就是在系统上线前，将数据加载到缓存中。</p>
`,r:{minutes:.61,words:182},t:"Redis缓存预热",y:"a"}}],["/posts/Redis/redis-x-sentinel-install.html",{loader:()=>o(()=>import("./redis-x-sentinel-install.html-BAxBEhoa.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. Redis 集群整体架构</h2>
<p>这里我们采用的集群整体架构就是<strong>主从结构+哨兵（sentinel）</strong>，实现容灾的自动切换，如下图所示：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/image-20220621211239642.png" alt="image-20220621211239642" tabindex="0" loading="lazy"><figcaption>image-20220621211239642</figcaption></figure>`,r:{minutes:14.1,words:4230},t:"Redis集群搭建详解",y:"a"}}],["/posts/Redis/redis-y-action-bloom.html",{loader:()=>o(()=>import("./redis-y-action-bloom.html-DPVDFeHq.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 使用场景</h2>
<p>比如有如下几个需求：</p>
<ol>
<li>
<p>原本有10亿个号码，现在又来了10万个号码，要快速准确判断这10万个号码是否在10亿个号码库中？</p>
<ul>
<li>解决办法一：将10亿个号码存入数据库中，进行数据库查询，准确性有了，但是速度会比较慢。</li>
<li>解决办法二：将10亿号码放入内存中，比如Redis缓存中，这里我们算一下占用内存大小：10亿*8字节=8GB，通过内存查询，准确性和速度都有了，但是大约8gb的内存空间，挺浪费内存空间的。</li>
</ul>
</li>
<li>
<p>接触过爬虫的，应该有这么一个需求，需要爬虫的网站千千万万，对于一个新的网站url，我们如何判断这个url我们是否已经爬过了？</p>
<p>解决办法还是上面的两种，很显然，都不太好。</p>
</li>
<li>
<p>同理还有垃圾邮箱的过滤。</p>
</li>
</ol>`,r:{minutes:5.48,words:1643},t:"Redis布隆过滤器",y:"a"}}],["/posts/Redis/redis-y-action-client.html",{loader:()=>o(()=>import("./redis-y-action-client.html-R2R24zMz.js"),[]),meta:{d:1729494189e3,g:null,e:`
<p>在spring boot2之后，对redis连接的支持，默认就采用了lettuce。这就一定程度说明了lettuce 和Jedis的优劣。</p>
<h2>1. redis 常见连接客户端</h2>
<ul>
<li>
<p>Jedis：是老牌的Redis的Java实现客户端，提供了比较全面的Redis命令的支持</p>
<p>优势：比较全面的提供了Redis的操作特性</p>
</li>
<li>
<p>Redisson：实现了分布式和可扩展的Java数据结构。</p>
<p>优势：促使使用者对Redis的关注分离，提供很多分布式相关操作服务，例如，<strong>分布式锁，分布式集合，可通过Redis支持延迟队列</strong></p>
</li>
<li>
<p>Lettuce：高级Redis客户端，用于线程安全同步，异步和响应使用，支持集群，Sentinel，管道和编码器。</p>
<p>优势：<strong>基于Netty框架的事件驱动的通信层</strong>，其方法调用是异步的。Lettuce的API是<strong>线程安全</strong>的，所以可以操作单个Lettuce连接来完成各种操作</p>
</li>
</ul>`,r:{minutes:1.88,words:563},t:"redis连接客户端选择：Jedis,Redisson,Lettuce",y:"a"}}],["/posts/Redis/redis-y-action-gen-test-data.html",{loader:()=>o(()=>import("./redis-y-action-gen-test-data.html-DOW9tWvJ.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. Linux Bash下面执行</h2>
<div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">((</span><span style="color:#E06C75;--shiki-dark:#E06C75">i</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#E06C75;--shiki-dark:#E06C75">i</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;=</span><span style="color:#D19A66;--shiki-dark:#D19A66">20000000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#E06C75;--shiki-dark:#E06C75">i</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">++</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)); </span><span style="color:#C678DD;--shiki-dark:#C678DD">do</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> echo</span><span style="color:#98C379;--shiki-dark:#98C379"> "set k</span><span style="color:#E06C75;--shiki-dark:#E06C75">$i</span><span style="color:#98C379;--shiki-dark:#98C379"> v</span><span style="color:#E06C75;--shiki-dark:#E06C75">$i</span><span style="color:#98C379;--shiki-dark:#98C379">"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> &gt;&gt; </span><span style="color:#98C379;--shiki-dark:#98C379">/tmp/redisTest.txt</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ;</span><span style="color:#C678DD;--shiki-dark:#C678DD">done</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span></code></pre>
</div>`,r:{minutes:.71,words:213},t:"批量生成redis测试数据方法",y:"a"}}],["/posts/Redis/redis-y-action-springboot.html",{loader:()=>o(()=>import("./redis-y-action-springboot.html-CzcQ5zQ1.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 基本集成使用</h2>
<h3>1.1 引入依赖</h3>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">   &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">org</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">springframework</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">boot</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">   &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">spring</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E06C75;--shiki-dark:#E06C75">boot</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E06C75;--shiki-dark:#E06C75">starter</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E06C75;--shiki-dark:#E06C75">data</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E06C75;--shiki-dark:#E06C75">redis</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span></code></pre>
</div>`,r:{minutes:2.43,words:728},t:"Spring Boot集成redis使用",y:"a"}}],["/posts/Redis/redis-y-action.html",{loader:()=>o(()=>import("./redis-y-action.html-CPdLpLxE.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 基础步骤</h2>
<ol>
<li>
<p>maven添加redis依赖</p>
<div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">&lt;!--redis依赖配置--&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;org.springframework.boot&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;spring-boot-starter-data-redis&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">exclusions</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">exclusion</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;io.lettuce&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;lettuce-core&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">exclusion</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">exclusions</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;redis.clients&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;jedis&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">scope</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;runtime&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">scope</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>添加yml 配置</p>
<div class="language-yml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">server</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  port</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#D19A66;--shiki-dark:#D19A66">8080</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">spring</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  redis</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    database</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    host</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">localhost</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    port</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#D19A66;--shiki-dark:#D19A66">6379</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    password</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    timeout</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#D19A66;--shiki-dark:#D19A66">5000</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">redis</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  database</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">case</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    admin</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">'ums:admin'</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  expire</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    common</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#D19A66;--shiki-dark:#D19A66">86400</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # 24小时</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>添加redis配置</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">package</span><span style="color:#C678DD;--shiki-dark:#C678DD"> com.zszdevelop.redisdemo.config</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> com.fasterxml.jackson.annotation.JsonAutoDetect</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> com.fasterxml.jackson.annotation.PropertyAccessor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> com.fasterxml.jackson.databind.ObjectMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.context.annotation.Bean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.context.annotation.Configuration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.data.redis.connection.RedisConnectionFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.data.redis.core.RedisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.data.redis.serializer.StringRedisSerializer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@author</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">: zsz</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * @create: 2021-01-05 16:32</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * @描述:</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> **/</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Configuration</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> RedisConfigure</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Bean</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> RedisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">RedisConnectionFactory</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> factory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        RedisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75">template</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> RedisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        template</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setConnectionFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(factory);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Jackson2JsonRedisSerializer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75">jackson2JsonRedisSerializer</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Jackson2JsonRedisSerializer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        ObjectMapper</span><span style="color:#E06C75;--shiki-dark:#E06C75"> mapper</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> ObjectMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        mapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setVisibility</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PropertyAccessor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ALL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">JsonAutoDetect</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Visibility</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ANY</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//        mapper.activateDefaultTyping(mapper.getPolymorphicTypeValidator(), ObjectMapper.DefaultTyping.NON_FINAL);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        jackson2JsonRedisSerializer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setObjectMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(mapper);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        StringRedisSerializer</span><span style="color:#E06C75;--shiki-dark:#E06C75"> stringRedisSerializer</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> StringRedisSerializer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        template</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setKeySerializer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(stringRedisSerializer);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        template</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setHashKeySerializer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(stringRedisSerializer);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        template</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setValueSerializer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(jackson2JsonRedisSerializer);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        template</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setHashValueSerializer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(jackson2JsonRedisSerializer);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        template</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">afterPropertiesSet</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> template;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>redisService</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">package</span><span style="color:#C678DD;--shiki-dark:#C678DD"> com.zszdevelop.redisdemo.service</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> java.util.List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> java.util.Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> java.util.Set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * redis操作Service</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> interface</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> RedisService</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 保存属性</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#C678DD;--shiki-dark:#C678DD">long</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> time</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 保存属性</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 获取属性</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Object</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 删除属性</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Boolean</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> del</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 批量删除属性</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Long</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> del</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">keys</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 设置过期时间</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Boolean</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> expire</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#C678DD;--shiki-dark:#C678DD">long</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> time</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 获取过期时间</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Long</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getExpire</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 判断是否有该属性</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Boolean</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> hasKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 按delta递增</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Long</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> incr</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#C678DD;--shiki-dark:#C678DD">long</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> delta</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 按delta递减</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Long</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> decr</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#C678DD;--shiki-dark:#C678DD">long</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> delta</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 获取Hash结构中的属性</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Object</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> hGet</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> hashKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 向Hash结构中放入一个属性</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Boolean</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> hSet</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> hashKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#C678DD;--shiki-dark:#C678DD">long</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> time</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 向Hash结构中放入一个属性</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> hSet</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> hashKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 直接获取整个Hash结构</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> hGetAll</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 直接设置整个Hash结构</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Boolean</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> hSetAll</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#C678DD;--shiki-dark:#C678DD">long</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> time</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 直接设置整个Hash结构</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> hSetAll</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#C678DD;--shiki-dark:#C678DD">?</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 删除Hash结构中的属性</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> hDel</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">... </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">hashKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 判断Hash结构中是否有该属性</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Boolean</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> hHasKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> hashKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * Hash结构中属性递增</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Long</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> hIncr</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> hashKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> delta</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * Hash结构中属性递减</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Long</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> hDecr</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> hashKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> delta</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 获取Set结构</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> sMembers</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 向Set结构中添加属性</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Long</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> sAdd</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">... </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">values</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 向Set结构中添加属性</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Long</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> sAdd</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#C678DD;--shiki-dark:#C678DD">long</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> time</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">... </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">values</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 是否为Set中的属性</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Boolean</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> sIsMember</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 获取Set结构的长度</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Long</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> sSize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 删除Set结构中的属性</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Long</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> sRemove</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">... </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">values</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 获取List结构中的属性</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> lRange</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#C678DD;--shiki-dark:#C678DD">long</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> start</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#C678DD;--shiki-dark:#C678DD">long</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> end</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 获取List结构的长度</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Long</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> lSize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 根据索引获取List中的属性</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Object</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> lIndex</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#C678DD;--shiki-dark:#C678DD">long</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> index</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 向List结构中添加属性</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Long</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> lPush</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 向List结构中添加属性</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Long</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> lPush</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#C678DD;--shiki-dark:#C678DD">long</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> time</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 向List结构中批量添加属性</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Long</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> lPushAll</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">... </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">values</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 向List结构中批量添加属性</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Long</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> lPushAll</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> time</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">... </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">values</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 从List结构中移除属性</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Long</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> lRemove</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#C678DD;--shiki-dark:#C678DD">long</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> count</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>RedisService实现类</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">package</span><span style="color:#C678DD;--shiki-dark:#C678DD"> com.zszdevelop.redisdemo.service.impl</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> com.zszdevelop.redisdemo.service.RedisService</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.beans.factory.annotation.Autowired</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.data.redis.core.RedisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.stereotype.Service</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> java.util.List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> java.util.Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> java.util.Set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> java.util.concurrent.TimeUnit</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * redis操作实现类</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Service</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> RedisServiceImpl</span><span style="color:#C678DD;--shiki-dark:#C678DD"> implements</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> RedisService</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Autowired</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> RedisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#C678DD;--shiki-dark:#C678DD">long</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> time</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">opsForValue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key, value, time, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">TimeUnit</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SECONDS</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">opsForValue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key, value);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Object</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">opsForValue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Boolean</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> del</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">delete</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Long</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> del</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">keys</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">delete</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(keys);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Boolean</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> expire</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#C678DD;--shiki-dark:#C678DD">long</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> time</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">expire</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key, time, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">TimeUnit</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SECONDS</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Long</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getExpire</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getExpire</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">TimeUnit</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SECONDS</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Boolean</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> hasKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">hasKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Long</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> incr</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#C678DD;--shiki-dark:#C678DD">long</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> delta</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">opsForValue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">increment</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key, delta);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Long</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> decr</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#C678DD;--shiki-dark:#C678DD">long</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> delta</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">opsForValue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">increment</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key, </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">delta);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Object</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> hGet</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> hashKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">opsForHash</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key, hashKey);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Boolean</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> hSet</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> hashKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#C678DD;--shiki-dark:#C678DD">long</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> time</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">opsForHash</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key, hashKey, value);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> expire</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key, time);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> hSet</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> hashKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">opsForHash</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key, hashKey, value);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> hGetAll</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">opsForHash</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">entries</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Boolean</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> hSetAll</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#C678DD;--shiki-dark:#C678DD">long</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> time</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">opsForHash</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">putAll</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key, map);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> expire</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key, time);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> hSetAll</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#C678DD;--shiki-dark:#C678DD">?</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">opsForHash</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">putAll</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key, map);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> hDel</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">... </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">hashKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">opsForHash</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">delete</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key, hashKey);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Boolean</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> hHasKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> hashKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">opsForHash</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">hasKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key, hashKey);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Long</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> hIncr</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> hashKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> delta</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">opsForHash</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">increment</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key, hashKey, delta);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Long</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> hDecr</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> hashKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> delta</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">opsForHash</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">increment</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key, hashKey, </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">delta);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> sMembers</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">opsForSet</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">members</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Long</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> sAdd</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">... </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">values</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">opsForSet</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key, values);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Long</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> sAdd</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#C678DD;--shiki-dark:#C678DD">long</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> time</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">... </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">values</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> count</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">opsForSet</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key, values);</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">        expire</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key, time);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> count;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Boolean</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> sIsMember</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">opsForSet</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isMember</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key, value);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Long</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> sSize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">opsForSet</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">size</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Long</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> sRemove</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">... </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">values</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">opsForSet</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">remove</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key, values);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> lRange</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#C678DD;--shiki-dark:#C678DD">long</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> start</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#C678DD;--shiki-dark:#C678DD">long</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> end</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">opsForList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">range</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key, start, end);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Long</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> lSize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">opsForList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">size</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Object</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> lIndex</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#C678DD;--shiki-dark:#C678DD">long</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> index</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">opsForList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">index</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key, index);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Long</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> lPush</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">opsForList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">rightPush</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key, value);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Long</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> lPush</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#C678DD;--shiki-dark:#C678DD">long</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> time</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> index</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">opsForList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">rightPush</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key, value);</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">        expire</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key, time);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> index;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Long</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> lPushAll</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">... </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">values</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">opsForList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">rightPushAll</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key, values);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Long</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> lPushAll</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> time</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">... </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">values</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> count</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">opsForList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">rightPushAll</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key, values);</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">        expire</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key, time);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> count;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Long</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> lRemove</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#C678DD;--shiki-dark:#C678DD">long</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> count</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">opsForList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">remove</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key, count, value);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
</ol>`,r:{minutes:5.31,words:1592},t:"SpringBoot集成redis项目范例",y:"a"}}],["/posts/Redis/redis-z-interview-apply.html",{loader:()=>o(()=>import("./redis-z-interview-apply.html-yr1ViSc3.js"),[]),meta:{d:1729494189e3,c:["数据库","Redis"],g:null,e:`
<h2>1 Redis 客户端有哪些？</h2>
<p>Redisson、Jedis、lettuce等等，官方推荐使用Redisson。</p>
<p>Redisson是一个高级的分布式协调Redis客服端，能帮助用户在分布式环境中轻松实现一些Java的对象 (Bloom filter, BitSet, Set, SetMultimap, ScoredSortedSet, SortedSet, Map, ConcurrentMap, List, ListMultimap, Queue, BlockingQueue, Deque, BlockingDeque, Semaphore, Lock, ReadWriteLock, AtomicLong, CountDownLatch, Publish / Subscribe, HyperLogLog)。</p>`,r:{minutes:5.21,words:1563},t:"Redis面试 - 应用场景",O:1100,y:"a"}}],["/posts/Redis/redis-z-interview-basic.html",{loader:()=>o(()=>import("./redis-z-interview-basic.html-B6aIY55W.js"),[]),meta:{d:1729494189e3,c:["数据库","Redis"],g:null,e:`
<h2>1 什么是Redis，为什么用Redis？</h2>
<p>Redis是一种支持key-value等多种数据结构的存储系统。可用于缓存，事件发布或订阅，高速队列等场景。支持网络，提供字符串，哈希，列表，队列，集合结构直接存取，基于内存，可持久化。</p>
<ul>
<li>读写性能优异
<ul>
<li>Redis能读的速度是110000次/s,写的速度是81000次/s （测试条件见下一节）。</li>
</ul>
</li>
<li>数据类型丰富
<ul>
<li>Redis支持二进制案例的 Strings, Lists, Hashes, Sets 及 Ordered Sets 数据类型操作。</li>
</ul>
</li>
<li>原子性
<ul>
<li>Redis的所有操作都是原子性的，同时Redis还支持对几个操作全并后的原子性执行。</li>
</ul>
</li>
<li>丰富的特性
<ul>
<li>Redis支持 publish/subscribe, 通知, key 过期等特性。</li>
</ul>
</li>
<li>持久化
<ul>
<li>Redis支持RDB, AOF等持久化方式</li>
</ul>
</li>
<li>发布订阅
<ul>
<li>Redis支持发布/订阅模式</li>
</ul>
</li>
<li>分布式
<ul>
<li>Redis Cluster</li>
</ul>
</li>
</ul>`,r:{minutes:3.4,words:1021},t:"Redis面试 - 常规问题",O:1030,y:"a"}}],["/posts/Redis/redis-z-interview-cluster.html",{loader:()=>o(()=>import("./redis-z-interview-cluster.html-5EsfmVQp.js"),[]),meta:{d:1729494189e3,c:["数据库","Redis"],g:null,e:`
<h2>1 什么是Redis Cluster？</h2>
<p>Redis-cluster是一种服务器Sharding技术，Redis3.0以后版本正式提供支持。</p>
<h2>2 说说Redis哈希槽的概念？为什么是16384个？</h2>
<p>Redis-cluster没有使用一致性hash，而是引入了<strong>哈希槽</strong>的概念。Redis-cluster中有16384(即2的14次方）个哈希槽，每个key通过CRC16校验后对16383取模来决定放置哪个槽。Cluster中的每个节点负责一部分hash槽（hash slot）。</p>
<p>比如集群中存在三个节点，则可能存在的一种分配如下：</p>`,r:{minutes:2.13,words:638},t:"Redis面试 - 集群-分片技术",O:1100,y:"a"}}],["/posts/Redis/redis-z-interview-datatype.html",{loader:()=>o(()=>import("./redis-z-interview-datatype.html-2rPRFlLM.js"),[]),meta:{d:1729494189e3,c:["数据库","Redis"],g:null,e:`
<h2>1 Redis 有哪些数据类型？</h2>
<ul>
<li><strong>5种基础数据类型</strong>，分别是：String、List、Set、Zset、Hash。</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403131028133.png" alt="image-20220628220310533" tabindex="0" loading="lazy"><figcaption>image-20220628220310533</figcaption></figure>`,r:{minutes:9.84,words:2953},t:"Redis面试 - 数据类型和数据结构",O:1040,y:"a"}}],["/posts/Redis/redis-z-interview-master-salve.html",{loader:()=>o(()=>import("./redis-z-interview-master-salve.html-SRg5r4Uw.js"),[]),meta:{d:1729494189e3,c:["数据库","Redis"],g:null,e:`
<h2>1 Redis集群的主从复制模型是怎样的？</h2>
<p>主从复制，是指将一台Redis服务器的数据，复制到其他的Redis服务器。前者称为主节点(master)，后者称为从节点(slave)；数据的复制是单向的，只能由主节点到从节点。</p>
<p><strong>主从复制的作用</strong>主要包括：</p>
<ul>
<li><strong>数据冗余</strong>：主从复制实现了数据的热备份，是持久化之外的一种数据冗余方式。</li>
<li><strong>故障恢复</strong>：当主节点出现问题时，可以由从节点提供服务，实现快速的故障恢复；实际上是一种服务的冗余。</li>
<li><strong>负载均衡</strong>：在主从复制的基础上，配合读写分离，可以由主节点提供写服务，由从节点提供读服务（即写Redis数据时应用连接主节点，读Redis数据时应用连接从节点），分担服务器负载；尤其是在写少读多的场景下，通过多个从节点分担读负载，可以大大提高Redis服务器的并发量。</li>
<li><strong>高可用基石</strong>：除了上述作用以外，主从复制还是哨兵和集群能够实施的基础，因此说主从复制是Redis高可用的基础。</li>
</ul>`,r:{minutes:11.01,words:3304},t:"Redis面试 - 集群-主从复制",O:1070,y:"a"}}],["/posts/Redis/redis-z-interview-new.html",{loader:()=>o(()=>import("./redis-z-interview-new.html-Cp06EGXd.js"),[]),meta:{d:1729494189e3,c:["数据库","Redis"],g:null,e:`
<h2>1 Redis单线程模型？ 在6.0之前如何提高多核CPU的利用率？</h2>
<p>可以在同一个服务器部署多个Redis的实例，并把他们当作不同的服务器来使用，在某些时候，无论如何一个服务器是不够的， 所以，如果你想使用多个CPU，你可以考虑一下分片（shard）。</p>
<h2>2 Redis6.0之前的版本真的是单线程的吗?</h2>
<p>Redis在处理客户端请求时,包括获取(socket读)、解析、执行、内容返回(socket写)等都是由一个顺序串行的主线程执行的,这就是所谓的 单线程.单如果严格讲,从Redis4.0之后并不是单线程,除了主线程之外,它也有后台线程在处理一些较为缓慢的操作,例如 清理脏数据, 无用链接的释放, 大key的删除, 数据持久化bgsave,bgrewriteaof等,都是在主线程之外的子线程单独执行的.</p>`,r:{minutes:5.03,words:1510},t:"Redis面试 - 新版本",O:1120,y:"a"}}],["/posts/Redis/redis-z-interview-other.html",{loader:()=>o(()=>import("./redis-z-interview-other.html-Cx4JpdUI.js"),[]),meta:{d:1729494189e3,c:["数据库","Redis"],g:null,e:`
<h2>1 Redis事件机制?</h2>
<p>Redis中的事件驱动库只关注网络IO，以及定时器。该事件库处理下面两类事件：</p>
<ul>
<li><strong>文件事件</strong>(file event)：用于处理 Redis 服务器和客户端之间的网络IO。</li>
<li><strong>时间事件</strong>(time eveat)：Redis 服务器中的一些操作（比如serverCron函数）需要在给定的时间点执行，而时间事件就是处理这类定时操作的。</li>
</ul>
<p>事件驱动库的代码主要是在<code>src/ae.c</code>中实现的，其示意图如下所示。</p>`,r:{minutes:4.49,words:1347},t:"Redis面试 -  其他特性",O:1130,y:"a"}}],["/posts/Redis/redis-z-interview-overview-detail.html",{loader:()=>o(()=>import("./redis-z-interview-overview-detail.html-Df1_24ub.js"),[]),meta:{d:1729494189e3,c:["数据库","Redis"],g:null,e:`
<h2>1. 常规问题</h2>
<h3>1.1 什么是Redis，为什么用Redis？</h3>
<p>Redis是一种支持key-value等多种数据结构的存储系统。可用于缓存，事件发布或订阅，高速队列等场景。支持网络，提供字符串，哈希，列表，队列，集合结构直接存取，基于内存，可持久化。</p>
<ul>
<li>读写性能优异
<ul>
<li>Redis能读的速度是110000次/s,写的速度是81000次/s （测试条件见下一节）。</li>
</ul>
</li>
<li>数据类型丰富
<ul>
<li>Redis支持二进制案例的 Strings, Lists, Hashes, Sets 及 Ordered Sets 数据类型操作。</li>
</ul>
</li>
<li>原子性
<ul>
<li>Redis的所有操作都是原子性的，同时Redis还支持对几个操作全并后的原子性执行。</li>
</ul>
</li>
<li>丰富的特性
<ul>
<li>Redis支持 publish/subscribe, 通知, key 过期等特性。</li>
</ul>
</li>
<li>持久化
<ul>
<li>Redis支持RDB, AOF等持久化方式</li>
</ul>
</li>
<li>发布订阅
<ul>
<li>Redis支持发布/订阅模式</li>
</ul>
</li>
<li>分布式
<ul>
<li>Redis Cluster</li>
</ul>
</li>
</ul>`,r:{minutes:69.96,words:20989},t:"Redis面试 - redis问题总结(答案版)",O:1020,y:"a"}}],["/posts/Redis/redis-z-interview-overview.html",{loader:()=>o(()=>import("./redis-z-interview-overview.html-DzWWUf1m.js"),[]),meta:{d:1729494189e3,c:["数据库","Redis"],g:null,e:`
<blockquote>
<p>Redis 面试会有哪些问题呢？或者学完整个体系，如何去用问题测试自己的理解呢？</p>
</blockquote>
<h2>1. 常规问题</h2>
<ul>
<li>什么是redis，为什么要使用它</li>
<li>redis一般有哪些使用场景</li>
<li>redis为什么快</li>
</ul>
<h2>2. 数据类型和数据结构</h2>
<ul>
<li>redis有哪些数据类型</li>
<li>redis数据类型有哪些命令</li>
<li>谈谈redis的对象机制（redisObject)</li>
<li>redis数据类型有哪些底层数据结构</li>
<li>为什么要设计sds？</li>
<li>一个字符串类型的值能存储最大容量是多少？512M</li>
<li>为什么会设计Stream</li>
<li>Stream用在什么样场景</li>
<li>消息ID的设计是否考虑了时间回拨的问题</li>
</ul>`,r:{minutes:4.66,words:1397},t:"Redis面试 - redis问题总结",O:1010,y:"a"}}],["/posts/Redis/redis-z-interview-persistence.html",{loader:()=>o(()=>import("./redis-z-interview-persistence.html-C-cN03Pd.js"),[]),meta:{d:1729494189e3,c:["数据库","Redis"],g:null,e:`
<h2>1 Redis 的持久化机制是什么？各自的优缺点？一般怎么用？</h2>
<ol>
<li>RDB持久化是把当前进程数据生成快照保存到磁盘上的过程; 针对RDB不适合实时持久化的问题，Redis提供了AOF持久化方式来解决.</li>
<li>AOF是“写后”日志，Redis先执行命令，把数据写入内存，然后才记录日志。日志里记录的是Redis收到的每一条命令，这些命令是以文本形式保存。</li>
<li>Redis 4.0 中提出了一个<strong>混合使用 AOF 日志和内存快照</strong>的方法。简单来说，内存快照以一定的频率执行，在两次快照之间，使用 AOF 日志记录这期间的所有命令操作。</li>
</ol>`,r:{minutes:18,words:5400},t:"Redis面试 - 持久化和内存",O:1050,y:"a"}}],["/posts/Redis/redis-z-interview-sentinel.html",{loader:()=>o(()=>import("./redis-z-interview-sentinel.html-BiwOpglh.js"),[]),meta:{d:1729494189e3,c:["数据库","Redis"],g:null,e:`
<h2>1 Redis哨兵机制？哨兵实现了什么功能呢?</h2>
<p>哨兵的核心功能是主节点的自动故障转移。</p>
<p>下图是一个典型的哨兵集群监控的逻辑图：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403131040356.png" alt="image-20220628230005184" tabindex="0" loading="lazy"><figcaption>image-20220628230005184</figcaption></figure>
<p>哨兵实现了什么功能呢？下面是Redis官方文档的描述：</p>`,r:{minutes:5.62,words:1687},t:"Redis面试 - 集群-哨兵机制",O:1090,y:"a"}}],["/posts/Redis/redis-z-interview-tran.html",{loader:()=>o(()=>import("./redis-z-interview-tran.html-DVFWpBol.js"),[]),meta:{d:1729494189e3,c:["数据库","Redis"],g:null,e:`
<h2>1 什么是redis事务？</h2>
<p>Redis 事务的本质是一组命令的集合。事务支持一次执行多个命令，一个事务中所有命令都会被序列化。在事务执行过程，会按照顺序串行化执行队列中的命令，其他客户端提交的命令请求不会插入到事务执行命令序列中。</p>
<p>总结说：redis事务就是一次性、顺序性、排他性的执行一个队列中的一系列命令。</p>
<h2>2 Redis事务相关命令？</h2>
<p>MULTI 、 EXEC 、 DISCARD 和 WATCH 是 Redis 事务相关的命令。</p>
<ul>
<li>MULTI ：开启事务，redis会将后续的命令逐个放入队列中，然后使用EXEC命令来原子化执行这个命令系列。</li>
<li>EXEC：执行事务中的所有操作命令。</li>
<li>DISCARD：取消事务，放弃执行事务块中的所有命令。</li>
<li>WATCH：监视一个或多个key,如果事务在执行前，这个key(或多个key)被其他命令修改，则事务被中断，不会执行事务中的任何命令。</li>
<li>UNWATCH：取消WATCH对所有key的监视</li>
</ul>`,r:{minutes:6.12,words:1837},t:"Redis面试 - 事务",O:1060,y:"a"}}],["/posts/Redis/%E7%AC%AC%E4%B8%80%E7%AB%A0%20Redis%E5%9F%BA%E7%A1%80.html",{loader:()=>o(()=>import("./第一章 Redis基础.html-CUnFsWXa.js"),[]),meta:{d:1729494189e3,g:null,e:`
<p><strong>课程计划</strong></p>
<table>
<thead>
<tr>
<th>1. Redis 入 门</th>
<th><strong>（了解）</strong></th>
<th><strong>（操作）</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>2.&nbsp;数据类型</td>
<td><strong>（重点）</strong></td>
<td><strong>（操作）</strong></td>
<td><strong>（理解）</strong></td>
</tr>
<tr>
<td>3.&nbsp;常用指令</td>
<td></td>
<td><strong>（操作）</strong></td>
<td></td>
</tr>
<tr>
<td>4.&nbsp;Jedis</td>
<td><strong>（重点）</strong></td>
<td><strong>（操作）</strong></td>
<td></td>
</tr>
<tr>
<td>5.&nbsp;持 久 化</td>
<td><strong>（重点）</strong></td>
<td></td>
<td><strong>（理解）</strong></td>
</tr>
<tr>
<td>6.&nbsp;数据删除与淘汰策略</td>
<td></td>
<td></td>
<td><strong>（理解）</strong></td>
</tr>
<tr>
<td>7.&nbsp;主从复制</td>
<td><strong>（重点）</strong></td>
<td><strong>（操作）</strong></td>
<td><strong>（理解）</strong></td>
</tr>
<tr>
<td>8.&nbsp;哨 兵</td>
<td><strong>（重点）</strong></td>
<td><strong>（操作）</strong></td>
<td><strong>（理解）</strong></td>
</tr>
<tr>
<td>9.&nbsp;Cluster集群方案</td>
<td><strong>（重点）</strong></td>
<td><strong>（操作）</strong></td>
<td><strong>（理解）</strong></td>
</tr>
<tr>
<td>10.&nbsp;企业级缓存解决方案</td>
<td><strong>（重点）</strong></td>
<td></td>
<td><strong>（理解）</strong></td>
</tr>
<tr>
<td>11.&nbsp;性能指标监控</td>
<td><strong>（了解）</strong></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>`,r:{minutes:53.48,words:16045},t:"第一章 Redis基础",y:"a"}}],["/posts/Redis/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20Redis%E9%AB%98%E7%BA%A7.html",{loader:()=>o(()=>import("./第二章 Redis高级.html-D9mLHQGO.js"),[]),meta:{d:1729494189e3,e:`
<h2>学习目标</h2>
<p>目标1：能够说出redis中的数据删除策与略淘汰策略</p>
<p>目标2：能够说出主从复制的概念，工作流程以及场景问题及解决方案</p>
<p>目标3：能够说出哨兵的作用以及工作原理，以及如何启用哨兵</p>
<p>目标4：能够说出集群的架构设计，完成集群的搭建</p>
<p>目标5：能够说出缓存预热，雪崩，击穿，穿透的概念，能说出redis的相关监控指标</p>
<h2>1.数据删除与淘汰策略</h2>
<h3>1.1 过期数据</h3>
<h4><strong>1.1.1 Redis中的数据特征</strong></h4>
<p>Redis是一种内存级数据库，所有数据均存放在内存中，内存中的数据可以通过TTL指令获取其状态</p>`,r:{minutes:35.49,words:10647},t:"第二章：Redis高级",y:"a"}}],["/posts/Web/",{loader:()=>o(()=>import("./index.html-BZQdFfVy.js"),[]),meta:{d:17145216e5,l:"2024年5月1日",e:`<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>这里放置前端相关的内容</p>
</div>
<hr>
`,r:{minutes:.1,words:31},t:"前端开发",i:"code",y:"p"}}],["/posts/Computer-Basics/Computer-Composition/",{loader:()=>o(()=>import("./index.html-DWHuT8JY.js"),[]),meta:{d:17099424e5,l:"2024年3月9日",e:`<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>这里放置计算机组成原理相关的内容</p>
</div>
<hr>
`,r:{minutes:.17,words:50},t:"计算机组成原理",i:"grid",O:3,y:"p"}}],["/posts/Computer-Basics/Computer-Composition/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90.html",{loader:()=>o(()=>import("./计算机组成.html-6wJgtZTC.js"),[]),meta:{d:170679216e4,l:"2024年2月1日",c:["计算机组成原理"],g:["计算机组成原理"],e:`
<p>计算机组成原理思维导图</p>
<h1>计算机组成</h1>
<h2>第一章 计算机系统概论</h2>
<h3>冯诺依曼型计算机特点</h3>
<ul>
<li>1.计算机由运算器，控制器，存储器，输入和输出设备5部分组成</li>
<li>2.采用存储程序的方式，程序和数据放在同一个存储器中，并以二进制表示。</li>
<li>3.指令由操作码和地址码组成</li>
<li>4.指令在存储器中按执行顺序存放，由指令计数器(即程序计数器PC)指明要执行的指令所在的储存单元地址，一般按顺序递增，但可按运算结果或外界条件而改变</li>
<li>5.机器以运算器为中心，输入输出设备与存储器间的数据传送都通过运算器</li>
</ul>`,r:{minutes:31.93,words:9579},t:"1、计算机组成原理",y:"a"}}],["/posts/Computer-Basics/Computer-Network/",{loader:()=>o(()=>import("./index.html-D0JdBwgh.js"),[]),meta:{d:17074368e5,l:"2024年2月9日",e:`<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>这里放置计算机网络相关的内容</p>
</div>
<hr>
`,r:{minutes:.15,words:44},t:"计算机网络",i:"network",O:2,y:"p"}}],["/posts/Computer-Basics/Computer-Network/%E7%AC%AC%201%20%E7%AB%A0%20%20%20%E6%A6%82%E8%BF%B0.html",{loader:()=>o(()=>import("./第 1 章   概述.html-oMgP7t5u.js"),[]),meta:{d:170679216e4,l:"2024年2月1日",c:["计算机网络"],g:["计算机网络"],e:`
<h2>计算机网络在信息时代中的作用</h2>
<h3>21 世纪的一些重要特征就是数字化、网络化和信息化，它是一个以网络为核心的信息时代。</h3>
<h3>网络现已成为信息社会的命脉和发展知识经济的重要基础。</h3>
<h3>网络是指“三网”，即电信网络、有线电视网络和计算机网络。</h3>
<h3>发展最快的并起到核心作用的是计算机网络。</h3>
<h3>因特网(Internet)的发展</h3>
<ul>
<li>进入 20 世纪 90 年代以后，以因特网为代表的计算机网络得到了飞速的发展。</li>
<li>已从最初的教育科研网络逐步发展成为商业网络。</li>
<li>已成为仅次于全球电话网的世界第二大网络。</li>
</ul>`,r:{minutes:15.32,words:4596},t:"1、计算机网络概述",y:"a"}}],["/posts/Computer-Basics/Computer-Network/%E7%AC%AC%202%20%E7%AB%A0%20%20%E7%89%A9%E7%90%86%E5%B1%82.html",{loader:()=>o(()=>import("./第 2 章  物理层.html-XAiZMepp.js"),[]),meta:{d:170687856e4,l:"2024年2月2日",c:["计算机网络"],g:["计算机网络"],e:`
<h2>物理层的基本概念</h2>
<h3>物理层的主要任务描述为确定与传输媒体的接口的一些特性</h3>
<ul>
<li>机械特性    指明接口所用接线器的形状和尺寸、引线数目和排列、固定和锁定装置等等。</li>
<li>电气特性    指明在接口电缆的各条线上出现的电压的范围。</li>
<li>功能特性    指明某条线上出现的某一电平的电压表示何种意义。</li>
<li>过程特性    指明对于不同功能的各种可能事件的出现顺序。</li>
</ul>
<h2>数据通信的基础知识</h2>
<h3>数据通信系统的模型</h3>
<ul>
<li></li>
</ul>
<h3>有关信道的几个基本概念</h3>`,r:{minutes:5.77,words:1730},t:"2、物理层",y:"a"}}],["/posts/Computer-Basics/Computer-Network/%E7%AC%AC%203%20%E7%AB%A0%20%20%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82.html",{loader:()=>o(()=>import("./第 3 章  数据链路层.html-CgDAZ1KO.js"),[]),meta:{d:170696496e4,l:"2024年2月3日",c:["计算机网络"],g:["计算机网络"],e:`
<h2>使用点对点信道的数据链路层</h2>
<h3>数据链路和帧</h3>
<ul>
<li>数据链路层使用的信道主要有以下两种类型：
<ul>
<li>点对点信道。这种信道使用一对一的点对点通信方式。</li>
<li>广播信道。这种信道使用一对多的广播通信方式，因此过程比较复杂。广播信道上连接的主机很多，因此必须使用专用的共享信道协议来协调这些主机的数据发</li>
</ul>
</li>
<li>数据链路层模型</li>
<li>链路(link)是一条无源的点到点的物理线路段，中间没有任何其他的交换结点。</li>
<li>数据链路(data link) 除了物理线路外，还必须有通信协议来控制这些数据的传输。若把实现这些协议的硬件和软件加到链路上，就构成了数据链路。</li>
<li>数据链路层传送的是帧</li>
</ul>`,r:{minutes:10.38,words:3115},t:"3、数据链路层",y:"a"}}],["/posts/Computer-Basics/Computer-Network/%E7%AC%AC%204%20%E7%AB%A0%20%20%E7%BD%91%E7%BB%9C%E5%B1%82.html",{loader:()=>o(()=>import("./第 4 章  网络层.html-Cyi7hgGm.js"),[]),meta:{d:170705136e4,l:"2024年2月4日",c:["计算机网络"],g:["计算机网络"],e:`
<h2>网络层提供的两种服务</h2>
<h3>虚电路服务</h3>
<h3>数据报服务</h3>
<h3>概要: 虚电路服务与数据报服务的对比</h3>
<h2>网际协议 IP</h2>
<h3>网际协议 IP 是 TCP/IP 体系中两个最主要的协议之一。与 IP 协议配套使用的还有四个协议：</h3>
<ul>
<li>地址解析协议 ARP (Address Resolution Protocol)</li>
<li>逆地址解析协议 RARP   (Reverse Address Resolution Protocol)</li>
<li>网际控制报文协议 ICMP   (Internet Control Message Protocol)</li>
<li>网际组管理协议 IGMP   (Internet Group Management Protocol)</li>
<li>概要: 示意图</li>
</ul>`,r:{minutes:14.64,words:4393},t:"4、网络层",y:"a"}}],["/posts/Computer-Basics/Computer-Network/%E7%AC%AC%205%20%E7%AB%A0%20%20%E8%BF%90%E8%BE%93%E5%B1%82.html",{loader:()=>o(()=>import("./第 5 章  运输层.html-BDo90S1S.js"),[]),meta:{d:170713776e4,l:"2024年2月5日",c:["计算机网络"],g:["计算机网络"],e:`
<h2>运输层协议概述</h2>
<h3>进程之间的通信</h3>
<ul>
<li>运输层向它上面的应用层提供通信服务，它属于面向通信部分的最高层，同时也是用户功能中的最低层。</li>
<li>两个主机进行通信实际上就是两个主机中的应用进程互相通信。</li>
<li>应用进程之间的通信又称为端到端的通信。</li>
<li>运输层协议和网络层协议的主要区别</li>
</ul>
<h3>运输层的两个主要协议</h3>
<ul>
<li>(1) 用户数据报协议 UDP(User Datagram Protocol)
<ul>
<li>UDP 传送的数据单位协议是 UDP 报文或用户数据报。</li>
</ul>
</li>
<li>(2) 传输控制协议 TCP(Transmission Control Protocol)
<ul>
<li>TCP 传送的数据单位协议是 TCP 报文段(segment)</li>
</ul>
</li>
</ul>`,r:{minutes:10.64,words:3192},t:"5、运输层",y:"a"}}],["/posts/Computer-Basics/Computer-Network/%E7%AC%AC%206%20%E7%AB%A0%20%20%E5%BA%94%E7%94%A8%E5%B1%82.html",{loader:()=>o(()=>import("./第 6 章  应用层.html-CaVANjyx.js"),[]),meta:{d:170713776e4,l:"2024年2月5日",c:["计算机网络"],g:["计算机网络"],e:`
<h2>域名系统 DNS</h2>
<h3>域名系统概述</h3>
<ul>
<li>DNS 是一个分布式数据库，提供了主机名和 IP 地址之间相互转换的服务。这里的分布式数据库是指，每个站点只保留它自己的那部分数据。</li>
</ul>
<h3>因特网的域名结构</h3>
<ul>
<li>域名具有层次结构，从上到下依次为：根域名、顶级域名、二级域名。</li>
</ul>
<h3>域名服务器</h3>
<ul>
<li>一个服务器所负责管辖的（或有权限的）范围叫做区(zone)。</li>
<li>每一个区设置相应的权限域名服务器，用来保存该区中的所有主机的域名到IP地址的映射。</li>
<li></li>
<li>DNS 可以使用 UDP 或者 TCP 进行传输，使用的端口号都为 53。大多数情况下 DNS 使用 UDP 进行传输，这就要求域名解析器和域名服务器都必须自己处理超时和重传从而保证可靠性。在两种情况下会使用 TCP 进行传输：
<ul>
<li>如果返回的响应超过的 512 字节（UDP 最大只支持 512 字节的数据）。</li>
<li>区域传送（区域传送是主域名服务器向辅助域名服务器传送变化的那部分数据）。</li>
</ul>
</li>
</ul>`,r:{minutes:12.1,words:3630},t:"6、应用层",y:"a"}}],["/posts/Computer-Basics/Operating-System/",{loader:()=>o(()=>import("./index.html-CsqbNGb-.js"),[]),meta:{d:17047584e5,l:"2024年1月9日",e:`<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>这里放置计算机操作系统相关的内容</p>
</div>
<hr>
`,r:{minutes:.17,words:50},t:"计算机操作系统",i:"windows",O:1,y:"p"}}],["/posts/Computer-Basics/Operating-System/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BC%95%E8%AE%BA.html",{loader:()=>o(()=>import("./第一章 操作系统引论.html-C-PTqYL1.js"),[]),meta:{d:170409936e4,l:"2024年1月1日",c:["操作系统"],g:["操作系统"],e:`
<h2>1.操作系统的目标和功能</h2>
<h3>目标</h3>
<ul>
<li>方便性</li>
<li>有效性
<ul>
<li>提高系统资源利用率</li>
<li>提高系统吞吐量</li>
</ul>
</li>
<li>可扩充性</li>
<li>开放性</li>
</ul>
<h3>作用</h3>
<ul>
<li>OS作为用户与计算机硬件系统之间的接口
<ul>
<li>命令方式</li>
<li>系统调用方式</li>
<li>图标–窗口方式</li>
</ul>
</li>
<li>OS实现了对计算机资源的抽象</li>
</ul>
<h2>2.操作系统的发展过程</h2>`,r:{minutes:2.66,words:798},t:"2、操作系统引论",y:"a"}}],["/posts/Computer-Basics/Operating-System/%E7%AC%AC%E4%B8%83%E7%AB%A0%20%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86.html",{loader:()=>o(()=>import("./第七章 文件管理.html-DnQj1jpU.js"),[]),meta:{d:170411736e4,l:"2024年1月1日",c:["操作系统"],g:["操作系统"],e:`
<h2>数据项</h2>
<h3>基本数据项</h3>
<h3>组合数据项</h3>
<h2>记录</h2>
<h3>记录是一组相关数据项的集合，用于描述一个对象在某个方面的属性</h3>
<h2>文件</h2>
<h3>文件类型</h3>
<h3>文件长度</h3>
<h3>文件的物理位置</h3>
<h3>文件的建立时间</h3>
<h2>文件操作</h2>
<h3>创建文件</h3>
<h3>删除文件</h3>
<h3>读文件</h3>
<h3>写文件</h3>
<h3>设置文件读写的位置</h3>
<h2>文件的逻辑结构</h2>
<h3>顺序文件</h3>
<h3>记录寻址</h3>`,r:{minutes:.98,words:293},t:"8、文件管理",y:"a"}}],["/posts/Computer-Basics/Operating-System/%E7%AC%AC%E4%B8%89%E7%AB%A0%20%E5%A4%84%E7%90%86%E6%9C%BA%E8%B0%83%E5%BA%A6%E4%B8%8E%E6%AD%BB%E9%94%81.html",{loader:()=>o(()=>import("./第三章 处理机调度与死锁.html-DbpfNpym.js"),[]),meta:{d:170410536e4,l:"2024年1月1日",c:["操作系统"],g:["操作系统"],e:`
<h2>处理机调度算法的目标</h2>
<h3>处理机调度算法的共同目标</h3>
<ul>
<li>资源利用率:CPU的利用率=CPU有效工作时间/(CPU有效工作时间+CPU空闲等待时间)</li>
<li>公平性</li>
<li>平衡性</li>
<li>策略强制执行</li>
</ul>
<h3>批处理系统的目标</h3>
<ul>
<li>平均周转时间短</li>
<li>系统吞吐量高</li>
<li>处理机利用率高</li>
</ul>
<h3>分时系统的目标</h3>
<ul>
<li>响应时间快</li>
<li>均衡性</li>
</ul>
<h3>实时系统目标</h3>`,r:{minutes:11.93,words:3578},t:"4、处理机调度与死锁",y:"a"}}],["/posts/Computer-Basics/Operating-System/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E8%BF%9B%E7%A8%8B%E7%9A%84%E6%8F%8F%E8%BF%B0%E4%B8%8E%E6%8E%A7%E5%88%B6.html",{loader:()=>o(()=>import("./第二章 进程的描述与控制.html-CabXQHcF.js"),[]),meta:{d:170410296e4,l:"2024年1月1日",c:["操作系统"],g:["操作系统"],e:`
<h2>前驱图和程序执行</h2>
<h2>程序并发执行</h2>
<h3>程序的并发执行</h3>
<h3>程序并发执行时的特征</h3>
<ul>
<li>间断性</li>
<li>失去封闭性</li>
<li>不可再现性</li>
</ul>
<h2>进程的描述</h2>
<h3>进程的定义</h3>
<ul>
<li>进程是程序的一次执行</li>
<li>进程是一个程序及其数据在处理机上顺序执行时所发生的活动</li>
<li>进程是具有独立功能的程序在一个数据集合上运行的过程，它是系统进行资源分配和调度的一个独立单位</li>
</ul>
<h3>进程的特征</h3>
<ul>
<li>动态性</li>
<li>并发性</li>
<li>独立性</li>
<li>异步性</li>
</ul>`,r:{minutes:7.2,words:2159},t:"3、进程的描述与控制",y:"a"}}],["/posts/Computer-Basics/Operating-System/%E7%AC%AC%E4%BA%94%E7%AB%A0%20%E8%99%9A%E6%8B%9F%E5%AD%98%E5%82%A8%E5%99%A8.html",{loader:()=>o(()=>import("./第五章 虚拟存储器.html-CINtwTh4.js"),[]),meta:{d:170411016e4,l:"2024年1月1日",c:["操作系统"],g:["操作系统"],e:`
<h2>常规存储管理方式的特征</h2>
<h3>一次性</h3>
<h3>驻留性</h3>
<h2>局部性原理</h2>
<h3>程序在执行时将呈现出局部性特征，即在一较短的时间内，程序的执行仅局限于某个部分，相应地，它所访问的存储空间也局限于某个区域</h3>
<h3>时间局限性</h3>
<ul>
<li>如果程序中的某条指令一旦执行， 则不久以后该指令可能再次执行；如果某数据被访问过， 则不久以后该数据可能再次被访问。产生时间局限性的典型原因，是由于在程序中存在着大量的循环操作</li>
</ul>
<h3>空间局限性</h3>
<ul>
<li>一旦程序访问了某个存储单元，在不久之后，其附近的存储单元也将被访问，即程序在一段时间内所访问的地址，可能集中在一定的范围之内，其典型情况便是程序的顺序执行。</li>
</ul>`,r:{minutes:3.56,words:1067},t:"6、虚拟存储器",y:"a"}}],["/posts/Computer-Basics/Operating-System/%E7%AC%AC%E5%85%AD%E7%AB%A0%20%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E7%B3%BB%E7%BB%9F.html",{loader:()=>o(()=>import("./第六章 输入输出系统.html-CnG0WWpN.js"),[]),meta:{d:170411376e4,l:"2024年1月1日",c:["操作系统"],g:["操作系统"],e:`
<h2>I/O系统的功能，模型和接口</h2>
<h3>I/O系统管理的对象是I/O设备和相应的设备控制器。</h3>
<h3>I/O系统的基本功能</h3>
<ul>
<li>隐藏物理设备的细节</li>
<li>与设备的无关性</li>
<li>提高处理机和I/O设备的利用率</li>
<li>对I/O设备进行控制</li>
<li>确保对设备的正确共享</li>
<li>错误处理</li>
</ul>
<h3>I/O软件的层次结构</h3>
<ul>
<li>用户层I/O软件</li>
<li>设备独立性软件</li>
<li>设备驱动程序（厂家开发）</li>
<li>中断处理程序</li>
<li>硬件</li>
</ul>`,r:{minutes:11.3,words:3389},t:"7、输入输出系统",y:"a"}}],["/posts/Computer-Basics/Operating-System/%E7%AC%AC%E5%9B%9B%E7%AB%A0%20%E5%AD%98%E5%82%A8%E5%99%A8%E7%AE%A1%E7%90%86.html",{loader:()=>o(()=>import("./第四章 存储器管理.html-D2bzLYmL.js"),[]),meta:{d:170410656e4,l:"2024年1月1日",c:["操作系统"],g:["操作系统"],e:`
<h2>存储器的层次结构</h2>
<h3>多层结构的存储系统</h3>
<ul>
<li>存储器的多层结构
<ul>
<li>CPU寄存器</li>
<li>主存</li>
<li>辅存</li>
</ul>
</li>
<li>可执行存储器
<ul>
<li>寄存器和主存的总称</li>
<li>访问速度快，进程可以在很少的时钟周期内用一条load或store指令完成存取。</li>
</ul>
</li>
</ul>
<h3>主存储器与寄存器</h3>
<h3>高速缓存和磁盘缓存</h3>
<h2>程序的装入和链接</h2>
<h3>步骤</h3>
<ul>
<li>编译
<ul>
<li>源程序 -&gt;目标模块（Object modules）--------Compiler
<ul>
<li>由编译程序对用户源程序进行编译，形成若干个目标模块</li>
</ul>
</li>
</ul>
</li>
<li>链接
<ul>
<li>一组目标模块 -&gt;装入模块 （Load Module）----------Linker
<ul>
<li>由链接程序将编译后形成的一组目标模板以及它们所需要的库函数链接在一起，形成一个完整的装入模块</li>
</ul>
</li>
</ul>
</li>
<li>装入
<ul>
<li>装入模块 -&gt;内存  --------Loader
<ul>
<li>由装入程序将装入模块装入内存</li>
</ul>
</li>
</ul>
</li>
</ul>`,r:{minutes:10.08,words:3023},t:"5、存储器管理",y:"a"}}],["/posts/Computer-Basics/Operating-System/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html",{loader:()=>o(()=>import("./计算机操作系统.html-BceepoCg.js"),[]),meta:{d:170409576e4,l:"2024年1月1日",c:["操作系统"],g:["操作系统"],e:`
<h2>目录</h2>
<h2>一.操作系统引论</h2>
<h3>1.操作系统的目标和功能</h3>
<ul>
<li>目标
<ul>
<li>方便性</li>
<li>有效性
<ul>
<li>提高系统资源利用率</li>
<li>提高系统吞吐量</li>
</ul>
</li>
<li>可扩充性</li>
<li>开放性</li>
</ul>
</li>
<li>作用
<ul>
<li>OS作为用户与计算机硬件系统之间的接口
<ul>
<li>命令方式</li>
<li>系统调用方式</li>
<li>图标–窗口方式</li>
</ul>
</li>
<li>OS实现了对计算机资源的抽象</li>
</ul>
</li>
</ul>`,r:{minutes:47.16,words:14147},t:"1、计算机操作系统概述",y:"a"}}],["/posts/Data-Structure/Algorithm/",{loader:()=>o(()=>import("./index.html-CW6cLyEz.js"),[]),meta:{d:17101152e5,l:"2024年3月11日",e:`<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>这里放置算法相关的内容</p>
</div>
<hr>
`,r:{minutes:.12,words:35},t:"算法",i:"flow",O:1,y:"p"}}],["/posts/Data-Structure/Structure/",{loader:()=>o(()=>import("./index.html-C-VNmrhu.js"),[]),meta:{d:17099424e5,l:"2024年3月9日",e:`<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>这里放置数据结构相关的内容</p>
</div>
<hr>
`,r:{minutes:.14,words:41},t:"数据结构",i:"table",O:1,y:"p"}}],["/posts/Data-Structure/Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.html",{loader:()=>o(()=>import("./数据结构.html-9DrHVGhJ.js"),[]),meta:{d:171005736e4,l:"2024年3月10日",c:["数据结构"],g:["数据结构"],e:`
<h2>第一章：数据结构</h2>
<p>基本概念</p>
<h3>定义</h3>
<ul>
<li>在任何问题中，数据元素都不是孤立存在的，而是在它们之间存在着某种关系，这种数据元素相互之间的关系称为结构（Structure）。数据结构是相互之间存在一种或多种特定关系的数据元素的集合。数据结构包括三方面的内容：逻辑结构、存储结构和数据的运算。数据的逻辑结构和存储结构是密不可分的两个方面，一个算法的设计取决于所选定的逻辑结构，而算法的实现依赖于所采用的存储结构。</li>
</ul>
<h3>逻辑结构</h3>
<ul>
<li>逻辑结构是指数据元素之间的逻辑关系，即从逻辑关系上描述数据。它与数据的存储无关，是独立于计算机的</li>
<li>数据的逻辑结构分为线性结构和非线性结构
<ul>
<li>集合 结构中的数据元素之间除了“同属于一个集合”的关系外，别无其他关系。 类似于数学上的集合</li>
<li>线性结构 结构中的数据元素之间只存在一对一的关系。比如排队</li>
<li>树形结构 结构中的数据元素之间存在一对多的关系。比如家族族谱</li>
<li>图状结构或网状结构 结构中的数据元素之间存在多对多的关系。 比如地图</li>
</ul>
</li>
</ul>`,r:{minutes:18.73,words:5619},t:"1、数据结构概念",y:"a"}}],["/posts/Data-Structure/Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%842.html",{loader:()=>o(()=>import("./数据结构2.html-Dj1bNktv.js"),[]),meta:{d:171005748e4,l:"2024年3月10日",c:["数据结构"],g:["数据结构"],e:`<h2>第五章：图</h2>
<h3>图的基本概念</h3>
<ul>
<li>定义：<br>
树是N（N≥0）个结点的有限集合，N=0时，称为空树，这是一种特殊情况。在任意一棵非空树中应满足：<br>
1）有且仅有一个特定的称为根的结点。<br>
2）当N&gt;1时，其余结点可分为m（m&gt;0）个互不相交的有限集合T1，T2，…，Tm，其中每一个集合本身又是一棵树，并且称为根结点的子树。
<ul>
<li>图G由顶点集V和边集E组成，记为G=(V，E)
<ul>
<li>V(G)表示图G中顶点的有限非空集。<br>
用|V|表示图G中顶点的个数，也称为图G的阶</li>
<li>E(G)表示图G中顶点之间的关系（边）集合。<br>
用|E|表示图G中边的条数。</li>
</ul>
</li>
</ul>
</li>
<li>分类
<ul>
<li>有向图
<ul>
<li>有向边（弧）的有限集合
<ul>
<li>弧是顶点的有序对</li>
<li>&lt;v,w&gt;</li>
<li>v是弧尾，w是弧头</li>
<li>v邻接到w或w邻接自v</li>
</ul>
</li>
</ul>
</li>
<li>无向图
<ul>
<li>无向边的有限集合
<ul>
<li>边是顶点的无序对</li>
<li>（v,w）</li>
<li>（v,w）=(w,v)</li>
<li>w，v互为邻接点</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>简单图
<ul>
<li>1.不存在顶点到自身的边</li>
<li>2.同一条边不重复出现</li>
</ul>
</li>
<li>多重图
<ul>
<li>若图G中某两个结点之间的边数多于一条，又允许顶点通过通过同一个边和自己关联</li>
</ul>
</li>
<li>完全图
<ul>
<li>无向完全图
<ul>
<li>如果任意两个顶点之间都存在边</li>
</ul>
</li>
<li>有向完全图
<ul>
<li>如果任意两个顶点之间都存在方向相反的两条弧</li>
</ul>
</li>
</ul>
</li>
<li>子图</li>
<li>连通图：图中任意两个顶点都是连通的</li>
<li>连通分量：无向图中的极大连通子图
<ul>
<li>连通
<ul>
<li>顶点A到顶点B有路径</li>
</ul>
</li>
<li>极大
<ul>
<li>1.顶点足够多</li>
<li>2.极大连通子图包含这些依附这些顶点的所有边</li>
</ul>
</li>
<li>结论1:如果一个图有n个顶点，并且有小于n-1条边，则此图必是非连通图。</li>
<li>概要: 找连通分量的方法：<br>
从选取一个顶点开始，以这个顶点作为一个子图，然后逐个添加与这个子图相连的顶点和边直到所有相连的顶点都加入该子图</li>
</ul>
</li>
<li>强连通：顶点V到顶点W和顶点W到顶点V都有路径</li>
<li>强连通图：图中任一对顶点都是强连通的</li>
<li>连通图的生成树：包含图中全部n个顶点，但是只有n-1条边的极小连通子图
<ul>
<li>结论2:生成树去掉一条边则变成非连通图，加上一条边就会形成回路。</li>
</ul>
</li>
<li>度：以该顶点为一个端点的边数目
<ul>
<li>无向图中顶点V的度是指依附于该顶点的边的条数，记为TD(v)</li>
<li>有向图中顶点V的度分为出度和入度
<ul>
<li>入度（ID）是以顶点v为终点的有向边的数目</li>
<li>出度（OD）是以顶点V为起点的有向边的数目</li>
</ul>
</li>
</ul>
</li>
<li>简单路径和简单回路：顶点不重复出现的路径称为简单路径。对于回路，除了第一个和最后一个顶点其余顶点不重复出现的回路称为简单回路</li>
<li>权和网：图中每条边考研赋予一定意义的数值，这个数值叫做这条边的权，有权值得图称为带权图，也叫做网</li>
<li>路径和路径长度：顶点p到q之间的路径是指顶点序列怕保存的，p,a,b,c,d,……q。路径上边的数目就是路径长度</li>
<li>回路（环）：第一个和最后一个顶点相同的路径称为回路或者环</li>
<li>距离：从顶点u到v的最短路径长度。不存在路径则为无穷</li>
</ul>`,r:{minutes:35.65,words:10695},t:"2、数据结构-图",y:"a"}}],["/posts/Database/DM/",{loader:()=>o(()=>import("./index.html-CKqt9tv0.js"),[]),meta:{d:17127936e5,l:"2024年4月11日",e:`<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>这里放置达梦数据库相关的内容</p>
</div>
<hr>
`,r:{minutes:.15,words:44},t:"达梦数据库",i:"mysql",O:2,y:"p"}}],["/posts/Database/DM/dm-manage-sql.html",{loader:()=>o(()=>import("./dm-manage-sql.html-YRNfpDAn.js"),[]),meta:{d:1729494189e3,e:`
<div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">--查询数据库版本</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> * </span><span style="color:#C678DD;--shiki-dark:#C678DD">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  v$</span><span style="color:#C678DD;--shiki-dark:#C678DD">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">--查询授权信息</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> * </span><span style="color:#C678DD;--shiki-dark:#C678DD">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  v$license;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">--查询服务器信息</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> * </span><span style="color:#C678DD;--shiki-dark:#C678DD">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  V$SYSTEMINFO;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">--查询会话连接信息</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> * </span><span style="color:#C678DD;--shiki-dark:#C678DD">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  v$</span><span style="color:#C678DD;--shiki-dark:#C678DD">sessions</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">select</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">  count</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(*),</span><span style="color:#C678DD;--shiki-dark:#C678DD">state</span><span style="color:#C678DD;--shiki-dark:#C678DD"> from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> v$</span><span style="color:#C678DD;--shiki-dark:#C678DD">sessions</span><span style="color:#C678DD;--shiki-dark:#C678DD"> group by</span><span style="color:#C678DD;--shiki-dark:#C678DD"> state</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">select</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">  count</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(*),clnt_ip </span><span style="color:#C678DD;--shiki-dark:#C678DD">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> v$</span><span style="color:#C678DD;--shiki-dark:#C678DD">sessions</span><span style="color:#C678DD;--shiki-dark:#C678DD"> group by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> clnt_ip;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">--查看数据库服务器配置参数</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> * </span><span style="color:#C678DD;--shiki-dark:#C678DD">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  v$dm_ini;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">--查询最近的 SQL 执行记录</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> * </span><span style="color:#C678DD;--shiki-dark:#C678DD">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  v$sql_history;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">--查询某个用户下所有的表</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> * </span><span style="color:#C678DD;--shiki-dark:#C678DD">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  user_tables; </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">--查询当前用户下所有的表</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> * </span><span style="color:#C678DD;--shiki-dark:#C678DD">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  all_tables </span><span style="color:#C678DD;--shiki-dark:#C678DD">where</span><span style="color:#C678DD;--shiki-dark:#C678DD"> owner</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">’TEST’; </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">--dba 用户查询某个模式下的所有表</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">--查询某个用户下所有表字段</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> * </span><span style="color:#C678DD;--shiki-dark:#C678DD">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  all_tab_cols </span><span style="color:#C678DD;--shiki-dark:#C678DD">where</span><span style="color:#C678DD;--shiki-dark:#C678DD"> owner</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">’TEST’;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">--查看表注释</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> * </span><span style="color:#C678DD;--shiki-dark:#C678DD">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  ALL_TAB_COMMENTS </span><span style="color:#C678DD;--shiki-dark:#C678DD">where</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ower</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">’TEST’;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">--查看字段注释</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> * </span><span style="color:#C678DD;--shiki-dark:#C678DD">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  ALL_COL_COMMENTS </span><span style="color:#C678DD;--shiki-dark:#C678DD">where</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ower</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">’TEST’;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">select</span><span style="color:#98C379;--shiki-dark:#98C379"> '实例名称'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> 数据库选项,INSTANCE_NAME 数据库集群相关参数值 </span><span style="color:#C678DD;--shiki-dark:#C678DD">FROM</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> v$instance </span><span style="color:#C678DD;--shiki-dark:#C678DD">union all</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">select</span><span style="color:#98C379;--shiki-dark:#98C379"> '数据库版本'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,substr(svr_version,instr(svr_version,</span><span style="color:#98C379;--shiki-dark:#98C379">'('</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">FROM</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> v$instance </span><span style="color:#C678DD;--shiki-dark:#C678DD">union all</span><span style="color:#C678DD;--shiki-dark:#C678DD">   SELECT</span><span style="color:#98C379;--shiki-dark:#98C379"> '字符集'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#C678DD;--shiki-dark:#C678DD">CASE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> SF_GET_UNICODE_FLAG()</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">WHEN</span><span style="color:#98C379;--shiki-dark:#98C379"> '0'</span><span style="color:#C678DD;--shiki-dark:#C678DD"> THEN</span><span style="color:#98C379;--shiki-dark:#98C379"> 'GBK18030'</span><span style="color:#C678DD;--shiki-dark:#C678DD"> WHEN</span><span style="color:#98C379;--shiki-dark:#98C379"> '1'</span><span style="color:#C678DD;--shiki-dark:#C678DD"> then</span><span style="color:#98C379;--shiki-dark:#98C379"> 'UTF-8'</span><span style="color:#C678DD;--shiki-dark:#C678DD"> when</span><span style="color:#98C379;--shiki-dark:#98C379"> '2'</span><span style="color:#C678DD;--shiki-dark:#C678DD"> then</span><span style="color:#98C379;--shiki-dark:#98C379"> 'EUC-KR'</span><span style="color:#C678DD;--shiki-dark:#C678DD"> end</span><span style="color:#C678DD;--shiki-dark:#C678DD"> union all</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">SELECT</span><span style="color:#98C379;--shiki-dark:#98C379"> '页大小'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">cast</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">PAGE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()/</span><span style="color:#D19A66;--shiki-dark:#D19A66">1024</span><span style="color:#C678DD;--shiki-dark:#C678DD"> as</span><span style="color:#C678DD;--shiki-dark:#C678DD"> varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">union all</span><span style="color:#C678DD;--shiki-dark:#C678DD">   SELECT</span><span style="color:#98C379;--shiki-dark:#98C379"> '簇大小'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">cast</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(SF_GET_EXTENT_SIZE() </span><span style="color:#C678DD;--shiki-dark:#C678DD">as</span><span style="color:#C678DD;--shiki-dark:#C678DD"> varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">union all</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">SELECT</span><span style="color:#98C379;--shiki-dark:#98C379"> '大小写敏感'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">cast</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(SF_GET_CASE_SENSITIVE_FLAG() </span><span style="color:#C678DD;--shiki-dark:#C678DD">as</span><span style="color:#C678DD;--shiki-dark:#C678DD"> varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">union all</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">select</span><span style="color:#98C379;--shiki-dark:#98C379"> '数据库模式'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,MODE$ </span><span style="color:#C678DD;--shiki-dark:#C678DD">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> v$instance </span><span style="color:#C678DD;--shiki-dark:#C678DD">union all</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">select</span><span style="color:#98C379;--shiki-dark:#98C379"> '唯一魔数'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">cast</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(permanent_magic </span><span style="color:#C678DD;--shiki-dark:#C678DD">as</span><span style="color:#C678DD;--shiki-dark:#C678DD"> varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">union all</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">select</span><span style="color:#98C379;--shiki-dark:#98C379"> 'LSN'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">cast</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(cur_lsn </span><span style="color:#C678DD;--shiki-dark:#C678DD">as</span><span style="color:#C678DD;--shiki-dark:#C678DD"> varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> v$rlog;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.13,words:339},t:"达梦数据库管理常用 SQL 命令",y:"a"}}],["/posts/Database/DM/dm-operation-config-helper.html",{loader:()=>o(()=>import("./dm-operation-config-helper.html-IW0tAuoJ.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 初始化数据库步骤</h2>
<ol>
<li>
<p>打开DM数据库配置助手</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121410851.png" alt="image-20210629101426485" tabindex="0" loading="lazy"><figcaption>image-20210629101426485</figcaption></figure>
</li>
</ol>
<h3>1.1 步骤1：选择操作方式</h3>
<p>用户可选择创建数据库实例、删除数据库实例、注册数据库服务和删除数据库服务</p>`,r:{minutes:2.66,words:797},t:"达梦数据库-数据库配置助手（初始化，删除数据库）",y:"a"}}],["/posts/Database/DM/dm-operation-console.html",{loader:()=>o(()=>import("./dm-operation-console.html-B3NU2ekH.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 概述</h2>
<p>DM控制台工具是管理和维护数据库的基本工具。因为控制台是通过dm.ini 参数来连接实例的，所以该工具必须在DM 实例服务端运行。 无法向DM Manager 工具和 DM Monitor 那样远程连接。</p>
<ul>
<li>Windows 平台直接在程序里调用控制台工具来启动。</li>
<li>Linux 平台，执行DM_HOME/tool/console 启动。</li>
</ul>
<h2>2. 用控制台工具可以提供如下功能</h2>
<ul>
<li>服务器参数配置</li>
<li>脱机备份与还原</li>
<li>查看系统信息</li>
<li>查看许可证信息</li>
</ul>`,r:{minutes:2.09,words:627},t:"达梦数据库-控制台工具（备份，恢复）",y:"a"}}],["/posts/Database/DM/dm-operation-create-user.html",{loader:()=>o(()=>import("./dm-operation-create-user.html-C4TCBasL.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 创建用户</h2>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">create</span><span style="color:#C678DD;--shiki-dark:#C678DD"> tablespace</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> "</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">TEST</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">" datafile </span><span style="color:#98C379;--shiki-dark:#98C379">'/mypath/TEST.DBF'</span><span style="color:#C678DD;--shiki-dark:#C678DD"> size</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 180</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> autoextend </span><span style="color:#C678DD;--shiki-dark:#C678DD">on</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> maxsize </span><span style="color:#D19A66;--shiki-dark:#D19A66">16777215</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> CACHE </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> NORMAL;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">create</span><span style="color:#C678DD;--shiki-dark:#C678DD"> user</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> "</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">TEST</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">" identified </span><span style="color:#C678DD;--shiki-dark:#C678DD">by</span><span style="color:#98C379;--shiki-dark:#98C379"> "mypassword"</span><span style="color:#C678DD;--shiki-dark:#C678DD"> limit</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> failed_login_attemps </span><span style="color:#D19A66;--shiki-dark:#D19A66">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, password_lock_time </span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, password_grace_time </span><span style="color:#D19A66;--shiki-dark:#D19A66">10</span><span style="color:#C678DD;--shiki-dark:#C678DD"> default</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> tablespace </span><span style="color:#98C379;--shiki-dark:#98C379">"TEST"</span><span style="color:#C678DD;--shiki-dark:#C678DD"> default</span><span style="color:#C678DD;--shiki-dark:#C678DD"> index</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> tablespace </span><span style="color:#98C379;--shiki-dark:#98C379">"TEST"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">grant</span><span style="color:#98C379;--shiki-dark:#98C379"> "DBA"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">"RESOURCE"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">"PUBLIC"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">"SOI"</span><span style="color:#C678DD;--shiki-dark:#C678DD"> to</span><span style="color:#98C379;--shiki-dark:#98C379"> "TEST"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">grant</span><span style="color:#C678DD;--shiki-dark:#C678DD"> CREATE</span><span style="color:#C678DD;--shiki-dark:#C678DD"> SCHEMA</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#C678DD;--shiki-dark:#C678DD">CREATE</span><span style="color:#C678DD;--shiki-dark:#C678DD"> TABLE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#C678DD;--shiki-dark:#C678DD">CREATE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> VIEW,</span><span style="color:#C678DD;--shiki-dark:#C678DD">CREATE</span><span style="color:#C678DD;--shiki-dark:#C678DD"> PROCEDURE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#C678DD;--shiki-dark:#C678DD">CREATE</span><span style="color:#C678DD;--shiki-dark:#C678DD"> SEQUENCE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#C678DD;--shiki-dark:#C678DD">CREATE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> TRIGGER,</span><span style="color:#C678DD;--shiki-dark:#C678DD">CREATE</span><span style="color:#C678DD;--shiki-dark:#C678DD"> INDEX</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#C678DD;--shiki-dark:#C678DD">CREATE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> CONTEXT </span><span style="color:#C678DD;--shiki-dark:#C678DD">INDEX</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#C678DD;--shiki-dark:#C678DD">CREATE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> LINK </span><span style="color:#C678DD;--shiki-dark:#C678DD">to</span><span style="color:#98C379;--shiki-dark:#98C379"> "TEST"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">CREATE</span><span style="color:#C678DD;--shiki-dark:#C678DD"> SCHEMA</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> "</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">TEST</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">" AUTHORIZATION </span><span style="color:#98C379;--shiki-dark:#98C379">"TEST"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span></code></pre>
</div>`,r:{minutes:.43,words:128},t:"达梦数据库-SQL创建用户与授权",y:"a"}}],["/posts/Database/DM/dm-operation-dmrman.html",{loader:()=>o(()=>import("./dm-operation-dmrman.html-BPLuKL1E.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p>我们再Windows中,我们可以使用图形化客户端工具进行备份还原，但是在Linux 中就不太好使了。需要使用DMRMAN</p>
<h2>2. 使用步骤</h2>
<p>前置步骤</p>
<ol>
<li>停止服务</li>
</ol>
<div class="language-sh" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">   systemctl</span><span style="color:#98C379;--shiki-dark:#98C379"> stop</span><span style="color:#98C379;--shiki-dark:#98C379"> DmServiceDAMENG.service</span></span></code></pre>
</div>`,r:{minutes:.6,words:179},t:"达梦数据库-DMRMAN（备份，恢复）",y:"a"}}],["/posts/Database/DM/dm-operation-dts.html",{loader:()=>o(()=>import("./dm-operation-dts.html-Be6UXxkj.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h1>1. 具体操作</h1>
<h3>1.1 打开 DM 数据迁移工具 DTS</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121415066.png" alt="image-20210629095241281" tabindex="0" loading="lazy"><figcaption>image-20210629095241281</figcaption></figure>
<h3>1.2 新建工程</h3>
<p>空白位置点击新建工程</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121415116.png" alt="image-20210629095346165" tabindex="0" loading="lazy"><figcaption>image-20210629095346165</figcaption></figure>`,r:{minutes:1.64,words:493},t:"达梦数据库迁移工具DTS",y:"a"}}],["/posts/Database/DM/dm-problem-contection.html",{loader:()=>o(()=>import("./dm-problem-contection.html-CoGNOtoB.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 背景</h2>
<p>windows下可以使用达梦提供的工具,mac下使用datagrip连接达梦数据库</p>
<h2>2.解决</h2>
<ol>
<li>
<p>首先下载达梦的驱动包放在本地</p>
</li>
<li>
<p>点击加号</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121416562.png" alt="image-20210915140348269" tabindex="0" loading="lazy"><figcaption>image-20210915140348269</figcaption></figure>
</li>
<li>
<p>导入驱动包</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121416611.png" alt="image-20210915140420817" tabindex="0" loading="lazy"><figcaption>image-20210915140420817</figcaption></figure>
</li>
<li>
<p>配置</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121416648.png" alt="image-20211112094915173" tabindex="0" loading="lazy"><figcaption>image-20211112094915173</figcaption></figure>
</li>
</ol>`,r:{minutes:.43,words:130},t:"mac下使用datagrip连接达梦数据库",y:"a"}}],["/posts/Database/DM/dm-problem-keys-domain.html",{loader:()=>o(()=>import("./dm-problem-keys-domain.html-CIuuXisS.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 问题背景</h2>
<p>在项目运行时发现ORACLE 没问题的语句，在达梦出现了问题</p>
<div class="language-sh" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">  @SQL:</span><span style="color:#98C379;--shiki-dark:#98C379">  SELECT</span><span style="color:#98C379;--shiki-dark:#98C379"> WorkID,Domain,</span><span style="color:#98C379;--shiki-dark:#98C379"> FROM</span><span style="color:#98C379;--shiki-dark:#98C379"> Test</span><span style="color:#98C379;--shiki-dark:#98C379"> WHERE</span><span style="color:#98C379;--shiki-dark:#98C379"> WorkID</span><span style="color:#98C379;--shiki-dark:#98C379"> =:WorkID</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">  @Param:</span><span style="color:#98C379;--shiki-dark:#98C379"> Num=1,</span><span style="color:#98C379;--shiki-dark:#98C379"> WorkID=</span><span style="color:#D19A66;--shiki-dark:#D19A66">1386</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">  @异常信息:</span><span style="color:#98C379;--shiki-dark:#98C379"> 第</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span><span style="color:#98C379;--shiki-dark:#98C379"> 行,</span><span style="color:#98C379;--shiki-dark:#98C379"> 第</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1483</span><span style="color:#98C379;--shiki-dark:#98C379"> 列[Domain]附近出现错误:</span><span style="color:#98C379;--shiki-dark:#98C379">  语法分析出错]</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">java.lang.RuntimeException:</span><span style="color:#98C379;--shiki-dark:#98C379"> @运行查询在</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">RunSQLReturnTable_200705_Ora</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#98C379;--shiki-dark:#98C379">出错。</span></span></code></pre>
</div>`,r:{minutes:2.28,words:685},t:"达梦数据库-关键字（domain等）导致的异常",y:"a"}}],["/posts/Database/DM/dm-problem-schema.html",{loader:()=>o(()=>import("./dm-problem-schema.html-HFWIEDVC.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 问题背景</h2>
<p>在达梦数据库中，SQL 查询时，需要加上模式名（数据库名）才能访问</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121417786.png" alt="image-20210629143738277" tabindex="0" loading="lazy"><figcaption>image-20210629143738277</figcaption></figure>
<h3>2. 问题原因</h3>
<p>其实这是把Mysql或者SQLSERVER的思维代入DM数据库造成的，Mysql的体系架构是单实例多库的，一个用户可以访问多个数据库，然后指定当前数据库写SQL的时候就不用带上数据库名了。</p>`,r:{minutes:1.76,words:528},t:"达梦数据库-写SQL如何才能不带上模式名？",y:"a"}}],["/posts/Database/ES/",{loader:()=>o(()=>import("./index.html-J23LO_0x.js"),[]),meta:{d:17127936e5,l:"2024年4月11日",e:`<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>这里放置ElasticSearch相关的内容</p>
</div>
<hr>
`,r:{minutes:.11,words:32},t:"ElasticSearch",i:"mysql",O:3,y:"p"}}],["/posts/Database/ES/elasticsearch-action-goods-search.html",{loader:()=>o(()=>import("./elasticsearch-action-goods-search.html-BJvtwT0N.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. Spring Data Elasticsearch</h2>
<p>Spring Data Elasticsearch是Spring提供的一种以Spring Data风格来操作数据存储的方式，它可以避免编写大量的样板代码。</p>
<h3>1.1 常用注解</h3>
<h5>@Document</h5>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//标示映射到Elasticsearch文档上的领域对象</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> @</span><span style="color:#C678DD;--shiki-dark:#C678DD">interface</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Document</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  //索引库名次，mysql中数据库的概念</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    String</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> indexName</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  //文档类型，mysql中表的概念</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    String</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> type</span><span style="color:#E06C75;--shiki-dark:#E06C75">() </span><span style="color:#C678DD;--shiki-dark:#C678DD">default</span><span style="color:#98C379;--shiki-dark:#98C379"> ""</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  //默认分片数</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    short</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> shards</span><span style="color:#E06C75;--shiki-dark:#E06C75">() </span><span style="color:#C678DD;--shiki-dark:#C678DD">default</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  //默认副本数量</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    short</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> replicas</span><span style="color:#E06C75;--shiki-dark:#E06C75">() </span><span style="color:#C678DD;--shiki-dark:#C678DD">default</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
</div>`,r:{minutes:22.13,words:6638},t:"Elasticsearch实现商品搜索",y:"a"}}],["/posts/Database/ES/elasticsearch-demo.html",{loader:()=>o(()=>import("./elasticsearch-demo.html-SB1Q2_N6.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 索引管理</h2>
<h3>1.1 查看索引</h3>
<div class="language-json" data-ext="json" data-title="json"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">GET /case/_mapping</span></span></code></pre>
</div>`,r:{minutes:4.46,words:1337},t:"Es - 测试demo",y:"a"}}],["/posts/Database/ES/elasticsearch-easy-es.html",{loader:()=>o(()=>import("./elasticsearch-easy-es.html-C18stGb-.js"),[]),meta:{d:1729494189e3,c:["es"],g:null,e:`
<h2>1. ES索引的keyword类型和text类型</h2>
<p>ES中的keyword类型,和MySQL中的字段基本上差不多,当我们需要对查询字段进行精确匹配,左模糊,右模糊,全模糊,排序聚合等操作时,需要该字段的索引类型为keyword类型,否则你会发现查询没有查出想要的结果,甚至报错. 比如EE中常用的API eq(),like(),distinct()等都需要字段类型为keyword类型.</p>
<p>当我们需要对字段进行分词查询时,需要该字段的类型为text类型,并且指定分词器(不指定就用ES默认分词器,效果通常不理想). 比如EE中常用的API match()等都需要字段类型为text类型. 当使用match查询时未查询到预期结果时,可以先检查索引类型,然后再检查分词器,因为如果一个词没被分词器分出来,那结果也是查询不出来的.</p>`,r:{minutes:8.07,words:2420},t:"ES框架 - Easy-Es中的注意点",O:1210,y:"a"}}],["/posts/Database/ES/elasticsearch-field-type.html",{loader:()=>o(()=>import("./elasticsearch-field-type.html-wsrphL-e.js"),[]),meta:{d:1729494189e3,c:["ElasticSearch"],g:null,e:`
<p>在学习 ES 文档相关操作之前，我们先学习 ES 中常用的字段类型。</p>
<h2>1. 字段类型</h2>
<h3>1.1 text</h3>
<p>当一个字段的内容<strong>需要被全文检索</strong>时，可以使用<code>text</code>类型，</p>
<p>优点</p>
<ul>
<li>
<p><strong>支持长内容的存储</strong>，比如检索文章内容、商品信息等。</p>
</li>
<li>
<p><strong>该类型的字段内容在保存时会被分词器分析，并且拆分成多个词项</strong></p>
<p>然后根据拆分后的词项生成对应的索引，根据关键字检索时可能会将关键字分词，用分好的词从之前生成的索引中去匹配，进而找到对应的文档。</p>
</li>
</ul>`,r:{minutes:9.81,words:2943},t:"ES详解 - ES字段类型",O:35,y:"a"}}],["/posts/Database/ES/elasticsearch-filebeat.html",{loader:()=>o(()=>import("./elasticsearch-filebeat.html-DOdqzUby.js"),[]),meta:{d:1729494189e3,c:["es"],g:null,e:`
<h2>1. 简介</h2>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121422257.png" alt="image-20230518173244820" tabindex="0" loading="lazy"><figcaption>image-20230518173244820</figcaption></figure>
<h3>1.1 Filebeat和Beats的关系</h3>
<p>首先Filebeat是Beats中的一员。</p>
<p>Beats在是一个轻量级日志采集器，其实Beats家族有6个成员，早期的ELK架构中使用Logstash收集、解析日志，但是Logstash对内存、CPU、io等资源消耗比较高。相比Logstash，Beats所占系统的CPU和内存几乎可以忽略不计。</p>`,r:{minutes:4.76,words:1427},t:"ELK实战 - Filebeat收集Nginx日志",O:1120,y:"a"}}],["/posts/Database/ES/elasticsearch-install.html",{loader:()=>o(()=>import("./elasticsearch-install.html-CEL0BVjE.js"),[]),meta:{d:1729494189e3,c:["ElasticSearch"],g:null,e:`
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121423632.png" alt="image-20220803230055166" tabindex="0" loading="lazy"><figcaption>image-20220803230055166</figcaption></figure>
<h2>1. 简介</h2>
<p>ELK是Elasticsearch+Logstash+Kibana简称</p>
<ul>
<li>Elasticsearch 是一个分布式的搜索和分析引擎，可以用于全文检索、结构化检索和分析，并能将这三者结合起来。Elasticsearch 基于 Lucene 开发，现在是使用最广的开源搜索引擎之一。</li>
<li>Logstash 简单来说就是一根具备实时数据传输能力的管道，负责将数据信息从管道的输入端传输到管道的输出端，与此同时这根管道还可以让你根据自己的需求在中间加上滤网，Logstash提供了很多功能强大的滤网以满足你的各种应用场景。</li>
<li>Kibana 是一个开源的分析与可视化平台，设计出来用于和Elasticsearch一起使用的。你可以用kibana搜索、查看、交互存放在Elasticsearch索引里的数据，使用各种不同的图标、表格、地图等，kibana能够很轻易的展示高级数据分析与可视化。</li>
</ul>`,r:{minutes:1.76,words:528},t:"ES详解 - Docker安装Elk",O:30,y:"a"}}],["/posts/Database/ES/elasticsearch-interview-base.html",{loader:()=>o(()=>import("./elasticsearch-interview-base.html-DdTyjBFs.js"),[]),meta:{d:1729494189e3,c:["es"],g:null,e:`
<h2>1. ElasticSearch基础</h2>
<h3>1.1 什么是Elasticsearch：</h3>
<p>Elasticsearch 是基于 Lucene 的 Restful 的分布式实时全文搜索引擎，每个字段都被索引并可被搜索，可以快速存储、搜索、分析海量的数据。</p>
<blockquote>
<p>全文检索是指对每一个词建立一个索引，指明该词在文章中出现的次数和位置。当查询时，根据事先建立的索引进行查找，并将查找的结果反馈给用户的检索方式。这个过程类似于通过字典中的检索字表查</p>
</blockquote>
<h3>1.2 Elasticsearch 的基本概念：</h3>`,r:{minutes:14,words:4199},t:"ES面试 - ElasticSearch面试（基础篇）",O:2010,y:"a"}}],["/posts/Database/ES/elasticsearch-interview-scene.html",{loader:()=>o(()=>import("./elasticsearch-interview-scene.html-CWNzeyPB.js"),[]),meta:{d:1729494189e3,c:["es"],g:null,e:`
<h2>1. elasticsearch 了解多少，说说你们公司 es 的集群架构，索引数据大小，分片有多少</h2>
<blockquote>
<p>面试官：想了解应聘者之前公司接触的 ES 使用场景、规模，有没有做过比较大规模的索引设计、规划、调优。</p>
</blockquote>
<p>解答：</p>
<p>如实结合自己的实践场景回答即可。</p>
<p>比如：ES 集群架构 13 个节点，索引根据通道不同共 20+索引，根据日期，每日</p>
<p>递增 20+，索引：10 分片，每日递增 1 亿+数据，</p>
<p>每个通道每天索引大小控制：150GB 之内。</p>
<h2>2. 调优手段</h2>`,r:{minutes:21.74,words:6522},t:"ES面试 - ElasticSearch面试（场景篇）",O:2020,y:"a"}}],["/posts/Database/ES/elasticsearch-kibana-kql.html",{loader:()=>o(()=>import("./elasticsearch-kibana-kql.html-DWpFO1yG.js"),[]),meta:{d:1729494189e3,c:["es"],g:null,e:`
<h2>1. 简介</h2>
<p>KQL：（Kibana Query Language ）查询语法是Kibana为了简化ES查询设计的一套简单查询语法，Kibana支持索引字段和语法补全，可以非常方便的查询数据。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121424648.png" alt="image-20230506144617336" tabindex="0" loading="lazy"><figcaption>image-20230506144617336</figcaption></figure>`,r:{minutes:3.61,words:1082},t:"ELK日志 - Kibana中的KQL语法",O:1110,y:"a"}}],["/posts/Database/ES/elasticsearch-started.html",{loader:()=>o(()=>import("./elasticsearch-started.html-XuCd_hn0.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p>Elasticsearch 是一个分布式、可扩展、实时的搜索与数据分析引擎。 它能从项目一开始就赋予你的数据以搜索、分析和探索的能力，可用于实现全文搜索和实时数据统计。</p>
<p>它可以快速地储存、搜索和分析海量数据。维基百科、Stack Overflow、Github 都采用它。</p>
<h2>2. 安装</h2>
<p><a href="microservice/log/elk/ELK%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86">安装参考</a>:</p>
<p><a href="http://java.isture.com/microservice/log/elk/ELK%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86.html" target="_blank" rel="noopener noreferrer">http://java.isture.com/microservice/log/elk/ELK日志收集.html</a></p>`,r:{minutes:6.3,words:1891},t:"Elasticsearch入门",y:"a"}}],["/posts/Database/ES/elasticsearch-vs-solr.html",{loader:()=>o(()=>import("./elasticsearch-vs-solr.html-BdpcCdks.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>solr和Elasticsearch都是基于Lucene搜索服务器基础之上开发的，<strong>高性能</strong>的企业级搜索服务器【他们都是基于分词技术构<strong>建倒排索引</strong>的方式进行查询】</p>
<h2>2. 对比</h2>
<table>
<thead>
<tr>
<th>比较类目</th>
<th>solr</th>
<th>Elasticsearch</th>
</tr>
</thead>
<tbody>
<tr>
<td>诞生时间</td>
<td>2004</td>
<td>2010</td>
</tr>
<tr>
<td>搜索基础</td>
<td>Lucene搜索</td>
<td>Lucene搜索</td>
</tr>
<tr>
<td>实时建立索引</td>
<td><strong>solr会产生io阻塞，效率低</strong></td>
<td>不阻塞，效率高</td>
</tr>
<tr>
<td>不断动态添加数据</td>
<td><strong>检索效率变低</strong></td>
<td>变化不大</td>
</tr>
<tr>
<td>自身系统管理</td>
<td>利用zookeeper进行分布式管理</td>
<td><strong>自身带有分布式系统管理功能</strong></td>
</tr>
<tr>
<td>部署</td>
<td>一般都要部署到web服务器上，如tomcat。启动tomcat的时候需要配置tomcat与solr的关联</td>
<td>自带运行功能，下载安装包直接安装就行</td>
</tr>
<tr>
<td>功用范围</td>
<td>官网提供的功能</td>
<td>更专注核心搜索，其它依赖<strong>第三方插件</strong></td>
</tr>
<tr>
<td>支持索引方式</td>
<td>HTML、PDF、微软 Office 系列软件格式以及 JSON、XML、CSV 等纯文本格式</td>
<td><strong>仅支持json文件格式</strong></td>
</tr>
<tr>
<td>社区和开发者</td>
<td>apache 软件基金和社区支持</td>
<td>单一商业实体及其员工</td>
</tr>
<tr>
<td>节点发现</td>
<td>Apache Zookeeper ,在大师项目中成熟且经过实战测试</td>
<td>Zen内置于ES本身，需要专用的主节点才能进行分裂脑保护</td>
</tr>
<tr>
<td>高速缓存</td>
<td>全局，每个段更改无效</td>
<td><strong>每段，更适合动态更改数据</strong></td>
</tr>
<tr>
<td>分析引挚性能</td>
<td>非常适合精确计算的静态数据</td>
<td>结果的准确性取决于数据放置</td>
</tr>
<tr>
<td>全文搜索功能</td>
<td>基于lucene语文分析，多建议，拼写检查，丰富的高亮显示支持</td>
<td>基于Lucene语文分析，单一建议API实现</td>
</tr>
<tr>
<td>DevOps支持</td>
<td>尚未完全，还在完善中。。</td>
<td>非常好的API</td>
</tr>
<tr>
<td>机器学习</td>
<td>内置-在流聚合之上，专注于逻辑回归和学习排名贡献模块</td>
<td>商业功能，专注于异常和异常值以及时间序列数据</td>
</tr>
</tbody>
</table>`,r:{minutes:1.7,words:511},t:"Solr与ES搜索引擎技术选择",y:"a"}}],["/posts/Database/ES/elasticsearch-x-agg-bucket.html",{loader:()=>o(()=>import("./elasticsearch-x-agg-bucket.html-WFWxfA_s.js"),[]),meta:{d:1729494189e3,c:["ElasticSearch"],g:null,e:`
<blockquote>
<p>除了查询之外，最常用的聚合了，ElasticSearch提供了三种聚合方式： <strong>桶聚合（Bucket Aggregation)</strong>，<strong>指标聚合（Metric Aggregation)</strong> 和 <strong>管道聚合（Pipline Aggregation)</strong>。本文主要讲讲<strong>桶聚合（Bucket Aggregation)</strong>。</p>
</blockquote>
<h2>1. 聚合的引入</h2>
<p>我们在SQL结果中常有：</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">SELECT</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> COUNT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(color) </span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">FROM</span><span style="color:#C678DD;--shiki-dark:#C678DD"> table</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">GROUP BY</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> color</span></span></code></pre>
</div>`,r:{minutes:8.7,words:2610},t:"ES详解 - 聚合：聚合查询之Bucket聚合详解",O:110,y:"a"}}],["/posts/Database/ES/elasticsearch-x-agg-metric.html",{loader:()=>o(()=>import("./elasticsearch-x-agg-metric.html-C4pdfIVj.js"),[]),meta:{d:1729494189e3,c:["ElasticSearch"],g:null,e:`
<blockquote>
<p>前文主要讲了 ElasticSearch提供的三种聚合方式之<strong>桶聚合（Bucket Aggregation)</strong>，本文主要讲讲<strong>指标聚合（Metric Aggregation)</strong>。</p>
</blockquote>
<h2>1. 如何理解metric聚合</h2>
<blockquote>
<p>在<a href="https://pdai.tech/md/db/nosql-es/elasticsearch-x-agg-bucket.html" target="_blank" rel="noopener noreferrer">bucket聚合</a>中，我画了一张图辅助你构筑体系，那么metric聚合又如何理解呢？</p>
</blockquote>`,r:{minutes:6.15,words:1844},t:"ES详解 - 聚合：聚合查询之Metric聚合详解",O:130,y:"a"}}],["/posts/Database/ES/elasticsearch-x-agg-pipeline.html",{loader:()=>o(()=>import("./elasticsearch-x-agg-pipeline.html-CPcJwhnO.js"),[]),meta:{d:1729494189e3,c:["ElasticSearch"],g:null,e:`
<blockquote>
<p>前文主要讲了 ElasticSearch提供的三种聚合方式之指标聚合（Metric Aggregation)，本文主要讲讲管道聚合（Pipeline Aggregation)。简单而言就是让上一步的聚合结果成为下一个聚合的输入，这就是管道。</p>
</blockquote>
<h2>1. 如何理解pipeline聚合</h2>
<blockquote>
<p>如何理解管道聚合呢？最重要的是要站在设计者角度看这个功能的要实现的目的：让上一步的聚合结果成为下一个聚合的输入，这就是管道。</p>
</blockquote>
<h3>1.1 管道机制的常见场景</h3>`,r:{minutes:4.18,words:1255},t:"ES详解 - 聚合：聚合查询之Pipline聚合详解",O:140,y:"a"}}],["/posts/Database/ES/elasticsearch-x-dsl-full-text.html",{loader:()=>o(()=>import("./elasticsearch-x-dsl-full-text.html-DCUD4xJY.js"),[]),meta:{d:1729494189e3,c:["ElasticSearch"],g:null,e:`
<blockquote>
<p>DSL查询极为常用的是对文本进行搜索，我们叫全文搜索，本文主要对全文搜索进行详解。</p>
</blockquote>
<h2>0. 写在前面:谈谈如何从官网学习</h2>
<blockquote>
<p>提示</p>
<p>很多读者在看官方文档学习时存在一个误区，以DSL中full text查询为例，其实内容是非常多的， 没有取舍/没重点去阅读， 要么需要花很多时间，要么头脑一片浆糊。所以这里重点谈谈我的理解。</p>
</blockquote>
<p>一些理解：</p>
<ul>
<li>第一点：<strong>全局观</strong>，即我们现在学习内容在整个体系的哪个位置？</li>
</ul>`,r:{minutes:7.44,words:2233},t:"ES详解 - 查询：DSL查询之全文搜索详解",O:90,y:"a"}}],["/posts/Database/ES/elasticsearch-x-dsl-term.html",{loader:()=>o(()=>import("./elasticsearch-x-dsl-term.html-DdabGmAi.js"),[]),meta:{d:1729494189e3,c:["ElasticSearch"],g:null,e:`
<blockquote>
<p>DSL查询另一种极为常用的是对词项进行搜索，官方文档中叫”term level“查询，本文主要对term level搜索进行详解。</p>
</blockquote>
<h2>1. Term查询引入</h2>
<p>如前文所述，查询分基于文本查询和基于词项的查询:</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121429826.png" alt="image-20220805222938003" tabindex="0" loading="lazy"><figcaption>image-20220805222938003</figcaption></figure>`,r:{minutes:2.56,words:768},t:"ES详解 - 查询：DSL查询之Term详解",O:100,y:"a"}}],["/posts/Database/ES/elasticsearch-x-dsl.html",{loader:()=>o(()=>import("./elasticsearch-x-dsl.html-CX0JfRRu.js"),[]),meta:{d:1729494189e3,c:["ElasticSearch"],g:null,e:`
<blockquote>
<p>在查询中会有多种条件组合的查询，在ElasticSearch中叫复合查询。它提供了5种复合查询方式：<strong>bool query(布尔查询)</strong>、<strong>boosting query(提高查询)</strong>、<strong>constant_score（固定分数查询）</strong>、<strong>dis_max(最佳匹配查询）</strong>、<strong>function_score(函数查询）</strong>。</p>
</blockquote>
<h2>0. 复合查询引入</h2>
<p>在前文中，我们使用<code>bool</code>查询来组合多个查询条件。</p>`,r:{minutes:6.79,words:2037},t:"ES详解 - 查询：DSL查询之复合查询详解",O:80,y:"a"}}],["/posts/Database/ES/elasticsearch-x-index-mapping.html",{loader:()=>o(()=>import("./elasticsearch-x-index-mapping.html-BJmkhaS4.js"),[]),meta:{d:1729494189e3,c:["ElasticSearch"],g:null,e:`
<blockquote>
<p>了解基本使用后，我们从索引操作的角度看看如何对索引进行管理。</p>
</blockquote>
<h2>1. 索引管理的引入</h2>
<p>我们在前文中增加文档时，如下的语句会动态创建一个customer的index：</p>
<div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">PUT</span><span style="color:#98C379;--shiki-dark:#98C379"> /customer/_doc/1</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">  "name"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">:</span><span style="color:#98C379;--shiki-dark:#98C379"> "John Doe"</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
</div>`,r:{minutes:3.06,words:919},t:"ES详解 - 索引：索引管理详解",O:60,y:"a"}}],["/posts/Database/ES/elasticsearch-x-index-template.html",{loader:()=>o(()=>import("./elasticsearch-x-index-template.html-dduBMQtE.js"),[]),meta:{d:1729494189e3,c:["ElasticSearch"],g:null,e:`
<blockquote>
<p>前文介绍了索引的一些操作，特别是手动创建索引，但是批量和脚本化必然需要提供一种模板方式快速构建和管理索引，这就是本文要介绍的索引模板(Index Template)，它是一种告诉Elasticsearch在创建索引时如何配置索引的方法。为了更好的复用性，在7.8中还引入了组件模板。</p>
</blockquote>
<h2>1.1. 索引模板</h2>
<blockquote>
<p>索引模板是一种告诉Elasticsearch在创建索引时如何配置索引的方法。</p>
</blockquote>
<ul>
<li><strong>使用方式</strong></li>
</ul>`,r:{minutes:3.62,words:1086},t:"ES详解 - 索引：索引模板(Index Template)详解",O:70,y:"a"}}],["/posts/Database/ES/elasticsearch-x-introduce-1.html",{loader:()=>o(()=>import("./elasticsearch-x-introduce-1.html-CjQKX48E.js"),[]),meta:{d:1729494189e3,c:["ElasticSearch"],g:null,e:`
<blockquote>
<p>在学习ElasticSearch之前，先简单了解下ES流行度，使用背景，以及相关概念等。</p>
</blockquote>
<h2>1. 为什么需要学习ElasticSearch</h2>
<blockquote>
<p>根据<a href="https://db-engines.com/en/ranking" target="_blank" rel="noopener noreferrer">DB Engine的排名</a>显示，ElasticSearch是最受欢迎的企业级搜索引擎。</p>
</blockquote>
<p>下图红色勾选的是我们前面的系列详解的，除此之外你可以看到搜索库ElasticSearch在前十名内：</p>`,r:{minutes:6.79,words:2036},t:"ES详解 - 认知：ElasticSearch基础概念",O:10,y:"a"}}],["/posts/Database/ES/elasticsearch-x-introduce-2.html",{loader:()=>o(()=>import("./elasticsearch-x-introduce-2.html-CcljdMvS.js"),[]),meta:{d:1729494189e3,c:["ElasticSearch"],g:null,e:`
<blockquote>
<p>在了解ElaticSearch之后，我们还要了解Elastic背后的生态即我们常说的ELK；与此同时，还会给你展示ElasticSearch的案例场景，让你在学习ES前对它有个全局的印象。</p>
</blockquote>
<h2>1. Elastic Stack生态</h2>
<blockquote>
<p>Beats + Logstash + ElasticSearch + Kibana</p>
</blockquote>
<p>如下是我从官方博客中找到图，这张图展示了ELK生态以及基于ELK的场景（最上方）</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121432120.png" alt="image-20220802220951170" tabindex="0" loading="lazy"><figcaption>image-20220802220951170</figcaption></figure>`,r:{minutes:5.56,words:1667},t:"ES详解 - 认知：Elastic Stack生态和场景方案",O:20,y:"a"}}],["/posts/Database/ES/elasticsearch-x-usage.html",{loader:()=>o(()=>import("./elasticsearch-x-usage.html-RX7xaNVP.js"),[]),meta:{d:1729494189e3,c:["ElasticSearch"],g:null,e:`
<blockquote>
<p>安装完ElasticSearch 和 Kibana后，为了快速上手，我们通过官网GitHub提供的一个数据进行入门学习，主要包括<strong>查询数据</strong>和<strong>聚合数据</strong>。</p>
</blockquote>
<h2>1. 入门：从索引文档开始</h2>
<ul>
<li>索引一个文档</li>
</ul>
<div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">PUT</span><span style="color:#98C379;--shiki-dark:#98C379"> /customer/_doc/1</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">  "name"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">:</span><span style="color:#98C379;--shiki-dark:#98C379"> "John Doe"</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
</div>`,r:{minutes:4.61,words:1384},t:"ES详解 - 入门：查询和聚合的基础使用",O:40,y:"a"}}],["/posts/Database/ES/elasticsearch-y-peformance.html",{loader:()=>o(()=>import("./elasticsearch-y-peformance.html-DXI91wBQ.js"),[]),meta:{d:1729494189e3,c:["ElasticSearch"],g:null,e:`
<blockquote>
<p>Elasticsearch 作为一个开箱即用的产品，在生产环境上线之后，我们其实不一定能确保其的性能和稳定性。如何根据实际情况提高服务的性能，其实有很多技巧。这章我们分享从实战经验中总结出来的 elasticsearch 性能优化，主要从硬件配置优化、索引优化设置、查询方面优化、数据结构优化、集群架构优化等方面讲解。</p>
</blockquote>
<h2>1. 硬件配置优化</h2>
<blockquote>
<p>升级硬件设备配置一直都是提高服务能力最快速有效的手段，在系统层面能够影响应用性能的一般包括三个因素：CPU、内存和 IO，可以从这三方面进行 ES 的性能优化工作。</p>
</blockquote>`,r:{minutes:25.3,words:7591},t:"ES详解 - 优化：ElasticSearch性能优化详解",O:210,y:"a"}}],["/posts/Database/ES/elasticsearch-y-th-1.html",{loader:()=>o(()=>import("./elasticsearch-y-th-1.html-BsQE6nSc.js"),[]),meta:{d:1729494189e3,c:["ElasticSearch"],g:null,e:`
<blockquote>
<p>在学习ElasticSearch原理时，我推荐你先通过官方博客中的一篇图解文章(虽然是基于2.x版本）来构筑对ES的初步认知（这种认识是体系上的快速认知）</p>
</blockquote>
<h2>1. 前言</h2>
<p>本文先自上而下，后自底向上的介绍ElasticSearch的底层工作原理，试图回答以下问题：</p>
<ul>
<li>为什么我的搜索 <code>*foo-bar*</code> 无法匹配 <code>foo-bar</code> ？</li>
<li>为什么增加更多的文件会压缩索引（Index）？</li>
<li>为什么ElasticSearch占用很多内存？</li>
</ul>`,r:{minutes:8.05,words:2415},t:"ES详解 - 原理：从图解构筑对ES原理的初步认知",O:210,y:"a"}}],["/posts/Database/ES/elasticsearch-y-th-2.html",{loader:()=>o(()=>import("./elasticsearch-y-th-2.html-CdrtrNgW.js"),[]),meta:{d:1729494189e3,c:["ElasticSearch"],g:null,e:`
<blockquote>
<p>通过上文图解了解了ES整体的原理后，我们便可以基于此知识体系下梳理下ES的整体结构以及相关的知识点，这将帮助你更好的理解ElasticSearch索引文档和搜索文档的原理。</p>
</blockquote>
<h2>1. ElasticSearch整体结构</h2>
<blockquote>
<p>通过上文，在通过图解了解了ES整体的原理后，我们梳理下ES的整体结构</p>
</blockquote>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121446784.png" alt="image-20220807223012609" tabindex="0" loading="lazy"><figcaption>image-20220807223012609</figcaption></figure>`,r:{minutes:5.91,words:1774},t:"ES详解 - 原理：ES原理知识点补充和整体结构",O:220,y:"a"}}],["/posts/Database/ES/elasticsearch-y-th-3.html",{loader:()=>o(()=>import("./elasticsearch-y-th-3.html-JtFgYRqH.js"),[]),meta:{d:1729494189e3,c:["ElasticSearch"],g:null,e:`
<blockquote>
<p>ElasticSearch中最重要原理是文档的索引和文档的读取，本文带你理解ES文档的索引过程。</p>
</blockquote>
<h2>1. 文档索引步骤顺序</h2>
<h3>1.1 单个文档</h3>
<p>新建单个文档所需要的步骤顺序：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121523027.png" alt="image-20220808204133507" tabindex="0" loading="lazy"><figcaption>image-20220808204133507</figcaption></figure>`,r:{minutes:20.23,words:6068},t:"ES详解 - 原理：ES原理之索引文档流程详解",O:230,y:"a"}}],["/posts/Database/ES/elasticsearch-y-th-4.html",{loader:()=>o(()=>import("./elasticsearch-y-th-4.html-CNyKXpDl.js"),[]),meta:{d:1729494189e3,c:["ElasticSearch"],g:null,e:`
<blockquote>
<p>ElasticSearch中最重要原理是文档的索引和文档的读取，前文介绍了索引文档流程，本文带你理解ES文档的读取过程。</p>
</blockquote>
<h2>1. 文档查询步骤顺序</h2>
<blockquote>
<p>先看下整体的查询流程</p>
</blockquote>
<h3>1.1 单个文档</h3>
<p>以下是从主分片或者副本分片检索文档的步骤顺序：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121522859.png" alt="image-20220808221429209" tabindex="0" loading="lazy"><figcaption>image-20220808221429209</figcaption></figure>`,r:{minutes:17.24,words:5173},t:"ES详解 - 原理：ES原理之读取文档流程详解",O:240,y:"a"}}],["/posts/Database/MongoDB/",{loader:()=>o(()=>import("./index.html-GoP9HA8z.js"),[]),meta:{d:17127936e5,l:"2024年4月11日",e:`<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>这里放置MongoDB数据库相关的内容</p>
</div>
<hr>
`,r:{minutes:.12,words:35},t:"MongoDB",i:"mysql",O:4,y:"p"}}],["/posts/Database/MongoDB/mongo-x-basic.html",{loader:()=>o(()=>import("./mongo-x-basic.html-Dhm_G5Gm.js"),[]),meta:{d:1729494189e3,c:["mongodb"],g:null,e:`
<h2>1. 什么是NoSQL？</h2>
<p>NoSQL是一种非关系型DMS，不需要固定的架构，可以避免joins链接，并且易于扩展。NoSQL数据库用于具有庞大数据存储需求的分布式数据存储。NoSQL用于大数据和实时Web应用程序。例如，像Twitter，Facebook，Google这样的大型公司，每天可能产生TB级的用户数据。</p>
<p>NoSQL数据库代表“<strong>不仅仅是SQL</strong>”或“不是SQL”。虽然NoRELNoSQL会是一个更好的名词。Carl Strozz在1998年引入了NoSQL概念。</p>
<p>传统的RDBMS使用SQL语法来存储和查询数据。相反，NoSQL数据库系统包含可存储结构化，半结构化，非结构化和多态数据的多种数据库技术。</p>`,r:{minutes:6.49,words:1947},t:"Mongo入门 - MongoDB基础概念",O:20,y:"a"}}],["/posts/Database/MongoDB/mongo-x-overview.html",{loader:()=>o(()=>import("./mongo-x-overview.html-BOtxW8WE.js"),[]),meta:{d:1729494189e3,c:["mongodb"],g:null,e:`
<h2>1. 知识体系</h2>
<p>MongoDB学习引入</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403130819080.png" alt="image-20230111213527528" tabindex="0" loading="lazy"><figcaption>image-20230111213527528</figcaption></figure>
<p>MongoDB生态</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403130819155.png" alt="image-20230111213723547" tabindex="0" loading="lazy"><figcaption>image-20230111213723547</figcaption></figure>`,r:{minutes:.24,words:72},t:"Mongo知识体系详解",O:10,y:"a"}}],["/posts/Database/MongoDB/mongo-x-usage-1.html",{loader:()=>o(()=>import("./mongo-x-usage-1.html-CHSZyx3Q.js"),[]),meta:{d:1729494189e3,c:["mongodb"],g:null,e:`
<blockquote>
<p>在理解MongoDB基础概念后，本文将介绍MongoDB的安装和最基本的CURD操作。</p>
</blockquote>
<h2>1. MongoDB安装</h2>
<p>MongoDB的安装比较简单，可参考官方文档或使用docker 安装、不过多介绍</p>
<h2>2. CRUD操作</h2>
<p><a href="https://docs.mongodb.com/v3.6/crud/" target="_blank" rel="noopener noreferrer">官方CRUD文档</a></p>
<h3>2.1 Insert</h3>
<ul>
<li>图例</li>
</ul>`,r:{minutes:6.36,words:1907},t:"Mongo入门 - 基本使用：安装和CRUD",O:40,y:"a"}}],["/posts/Database/MongoDB/mongo-x-usage-2.html",{loader:()=>o(()=>import("./mongo-x-usage-2.html-D17vcTnN.js"),[]),meta:{d:1729494189e3,c:["mongodb"],g:null,e:`
<blockquote>
<p>在了解MongoDB的基本CRUD操作后，常用的其它操作还有对字段的索引以及对字段的聚合操作。</p>
</blockquote>
<h2>1. 聚合 - Aggregation Pipline</h2>
<blockquote>
<p>类似于将SQL中的group by + order by + left join ... 等操作管道化。</p>
</blockquote>
<h3>1.1 常规使用</h3>
<ul>
<li>图例理解</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403130821538.png" alt="image-20230111222615479" tabindex="0" loading="lazy"><figcaption>image-20230111222615479</figcaption></figure>`,r:{minutes:6.38,words:1915},t:"Mongo入门 - 基本使用：索引和聚合",O:50,y:"a"}}],["/posts/Database/MongoDB/mongo-x-usage-4.html",{loader:()=>o(()=>import("./mongo-x-usage-4.html-0n07Hy86.js"),[]),meta:{d:1729494189e3,c:["mongodb"],g:null,e:`
<blockquote>
<p>本文为低优先级，只是向你介绍下MongoDB提供的原生的JavaAPI；而大多数公司使用Spring框架，会使用Spring Data对MongoDB原生API的封装，比如JPA，MongoTemplate等。</p>
</blockquote>
<h2>1. MongoDB Driver</h2>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">&lt;!-- https://mvnrepository.com/artifact/org.mongodb/mongo-java-driver --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;org.mongodb&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;mongo-java-driver&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;3.12.6&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
</div>`,r:{minutes:.96,words:287},t:"Mongo入门 - 基本使用：Java API",O:70,y:"a"}}],["/posts/Database/MongoDB/mongo-x-usage-5.html",{loader:()=>o(()=>import("./mongo-x-usage-5.html-DT1HYSGb.js"),[]),meta:{d:1729494189e3,c:["mongodb"],g:null,e:`
<blockquote>
<p>本文为主要介绍Spring Data对MongoDB原生API的封装，比如Spring-data-mongo，MongoTemplate等。以及原生API和Spring data系列之间的关系。</p>
</blockquote>
<h2>1. Spring Data 与 MongoDB</h2>
<blockquote>
<p>在初学使用者而言，常会分不清Spring-data-jpa, spring-data-mongo, springboot-data-mongo-starter以及mongo-driver之间的关联关系， 本节将带你理解它们之间的关系。</p>
</blockquote>`,r:{minutes:1.62,words:487},t:"Mongo入门 - 基本使用：Spring集成",O:80,y:"a"}}],["/posts/Database/MongoDB/mongo-y-arch.html",{loader:()=>o(()=>import("./mongo-y-arch.html-D30J7LOm.js"),[]),meta:{d:1729494189e3,c:["mongodb"],g:null,e:`
<blockquote>
<p>上面章节已经对MongoDB生态中工具以及使用有了基础，后续文章我们将开始理解MongoDB是如何支撑这些功能的。我们将从最基本的MongoDB的体系结构开始介绍，主要包括<code>MongoDB的包结构</code>，<code>MongoDB的数据逻辑结构</code>，<code>MongoDB的数据文件结构</code>。其中围绕着MongoDB的数据文件结构，将为我们后续介绍MongoDB的存储引擎详解打下基础。</p>
</blockquote>
<h2>1. MongoDB包组件结构</h2>
<blockquote>
<p>主要是MongoDB数据库服务以及一些工具。</p>
</blockquote>`,r:{minutes:6.38,words:1913},t:"Mongo进阶 - MongoDB体系结构",O:110,y:"a"}}],["/posts/Database/MongoDB/mongo-y-ds.html",{loader:()=>o(()=>import("./mongo-y-ds.html-OkQbaiyI.js"),[]),meta:{d:1729494189e3,c:["mongodb"],g:null,e:`
<blockquote>
<p>MongoDB的WiredTiger存储引擎背后采用了什么样的数据结构呢？本文将从<code>常见引擎数据结构</code>，<code>典型B-Tree数据结构</code>，<code>磁盘数据结构</code>, <code>内存数据结构</code>, <code>Page数据结构</code>等方面详解介绍。</p>
</blockquote>
<h2>1. 存储引擎及常见数据结构</h2>
<p>存储引擎要做的事情无外乎是将磁盘上的数据读到内存并返回给应用，或者将应用修改的数据由内存写到磁盘上。如何设计一种高效的数据结构和算法是所有存储引擎要考虑的根本问题，目前大多数流行的存储引擎是基于B-Tree或LSM(Log Structured Merge) Tree这两种数据结构来设计的。</p>`,r:{minutes:7.04,words:2111},t:"Mongo进阶 - WT引擎：数据结构",O:130,y:"a"}}],["/posts/Database/MongoDB/mongo-y-introduce.html",{loader:()=>o(()=>import("./mongo-y-introduce.html-JEBCm97O.js"),[]),meta:{d:1729494189e3,c:["mongodb"],g:null,e:`
<p>WiredTiger从被MongoDB收购到成为MongoDB的默认存储引擎的一年半得到了迅猛的发展，也逐步被外部熟知。WiredTiger（以下简称WT）是一个优秀的单机数据库存储引擎，它拥有诸多的特性，既支持BTree索引，也支持LSM Tree索引，支持行存储和列存储，实现ACID级别事务、支持大到4G的记录等。WT的产生不是因为这些特性，而是和计算机发展的现状息息相关。</p>
<p>现代计算机近20年来CPU的计算能力和内存容量飞速发展，但磁盘的访问速度并没有得到相应的提高，WT就是在这样的一个情况下研发出来，它设计了充分利用CPU并行计算的内存模型的无锁并行框架，使得WT引擎在多核CPU上的表现优于其他存储引擎。针对磁盘存储特性，WT实现了一套基于BLOCK/Extent的友好的磁盘访问算法，使得WT在数据压缩和磁盘I/O访问上优势明显。实现了基于snapshot技术的ACID事务，snapshot技术大大简化了WT的事务模型，摒弃了传统的事务锁隔离又同时能保证事务的ACID。WT根据现代内存容量特性实现了一种基于Hazard Pointer 的LRU cache模型，充分利用了内存容量的同时又能拥有很高的事务读写并发。</p>`,r:{minutes:1.55,words:465},t:"Mongo进阶 - 原理和WiredTiger引擎",O:120,y:"a"}}],["/posts/Database/MongoDB/mongo-y-page.html",{loader:()=>o(()=>import("./mongo-y-page.html-CJCGMFxV.js"),[]),meta:{d:1729494189e3,c:["mongodb"],g:null,e:`
<blockquote>
<p>通过前文我们了解到数据以page为单位加载到cache; 有必要系统的分析一页page的生命周期、状态以及相关参数的配置，这对后续MongoDB的性能调优和故障问题的定位和解决有帮助。</p>
</blockquote>
<h2>1. 为什么要了解Page生命周期</h2>
<p>通过前文我们了解到数据以page为单位加载到cache、cache里面又会生成各种不同类型的page及为不同类型的page分配不同大小的内存、eviction触发机制和reconcile动作都发生在page上、page大小持续增加时会被分割成多个小page，所有这些操作都是围绕一个page来完成的。</p>`,r:{minutes:6.69,words:2007},t:"Mongo进阶 - WT引擎：Page生命周期",O:140,y:"a"}}],["/posts/Database/MongoDB/mongodb-action-base.html",{loader:()=>o(()=>import("./mongodb-action-base.html-BPAauldT.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. Spring Data Mongodb</h2>
<h3>1.1 简介</h3>
<p>Spring Data Mongodb是Spring提供的一种以Spring Data风格来操作数据存储的方式，它可以避免编写大量的样板代码。</p>
<h3>1.2 常用注解</h3>
<ul>
<li>@Document:标示映射到Mongodb文档上的领域对象</li>
<li>@Id:标示某个域为ID域</li>
<li>@Indexed:标示某个字段为Mongodb的索引字段</li>
</ul>
<h3>1.3 Spring Data 方式的数据操作</h3>
<p><strong>继承MongoRepository接口可以获得常用的数据操作方法</strong></p>`,r:{minutes:3.51,words:1052},t:"spring-data-mongodb文档基础操作",y:"a"}}],["/posts/Database/MongoDB/mongodb-action-bluk-operation.html",{loader:()=>o(()=>import("./mongodb-action-bluk-operation.html-Dl51beS1.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p>MongoTemplate 作为 Spring 对 <a href="https://so.csdn.net/so/search?q=MongoDB&amp;spm=1001.2101.3001.7020" target="_blank" rel="noopener noreferrer">MongoDB</a> 提供的操作类，支持数据的批量操作。本文将介绍使用 MongoTemplate 实现批量插入和批量更新的功能。</p>
<h2>2. 批量插入</h2>
<h3>2.1 方式一：mongoTemplate.insert</h3>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 批量新增博客</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> addBatchParam</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@return</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ApiResult</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> addBatch</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">BlogAddBatchParam</span><span style="color:#E06C75;--shiki-dark:#E06C75"> addBatchParam) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">BlogEntity</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> blogEntityList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> addBatchParam</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getBlogList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">stream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(blogAddParam </span><span style="color:#C678DD;--shiki-dark:#C678DD">-&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            BlogEntity</span><span style="color:#E06C75;--shiki-dark:#E06C75"> blogEntity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> BlogEntity</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            BeanUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">copyProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(blogAddParam, blogEntity);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> blogEntity;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">collect</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Collectors</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">toList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        mongoTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">insert</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(blogEntityList, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">BlogEntity</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ApiResult</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">success</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.23,words:368},t:"SpringMongoTemplate批量操作",y:"a"}}],["/posts/Database/MongoDB/mongodb-action-cursor.html",{loader:()=>o(()=>import("./mongodb-action-cursor.html-DDHEgi2i.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 背景</h2>
<p>对于数据量巨大的情况下，使用mongoTemplate.find()方法返回一个列表，对服务器压力非常大</p>
<blockquote>
<p>在我的项目中数据量140w，我多线程分页批量查询。执行没多长时间就会导致mongo服务器奔溃。使用cursor则没有这个问题</p>
</blockquote>
<p>mongoTemplate提供了另外一种方法，使用游标逐个获取数据，同时可以指定只获取哪些域，而不是全部获取回来。</p>
<h2>2. 案例</h2>
<h3>2.1 案例1</h3>
<p>将Query 转为Document，而Document 又实现了Bson .所以大部分情况我们Query还是可以用的</p>`,r:{minutes:2.92,words:877},t:"MongoTemplate使用Cursor处理大数量的数据",y:"a"}}],["/posts/Database/MongoDB/mongodb-action-custom-query.html",{loader:()=>o(()=>import("./mongodb-action-custom-query.html-CTEoK50J.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 背景</h2>
<p>我们spring-data-mongodb 默认的 <code>MongoRepository</code>接口只能实现一些简单的固定查询。如果遇到复杂的情况完全应付不过来。</p>
<h3>1.1 场景需求</h3>
<p>例如：我们要查询用户的需求</p>
<ol>
<li>默认查询所有用户</li>
<li>可以根据用户名模糊查询</li>
<li>根据部门、用户状态查询</li>
</ol>
<p>这几种情况，可能只执行一种，或要组合其他几种。</p>
<p>常用的MongoRepository 的实现如下</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 查询用户</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@author</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> zsz</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * @date 2021-16-16</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> interface</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> UserRepository</span><span style="color:#C678DD;--shiki-dark:#C678DD"> extends</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> MongoRepository</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">User</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 根据用户名模糊查询用户(方式一)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> username</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> pageable</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@return</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Page</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">User</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> findByUsernameLike</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> username</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Pageable</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> pageable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 使用正则表达式模糊查询（方式二）</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Query</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">" { 'username': ?#{ ([0].username == null) or ([0].username.length() == 0)  ? {$exists:true} : {$regex: [0].username } } } "</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Page</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">User</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> selectUserByUsernameLike2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">User</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> user</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Pageable</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> pageable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">	}</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:9.67,words:2901},t:"spring-data-mongodb的自定义Query查询",y:"a"}}],["/posts/Database/MongoDB/mongodb-action-multiple-datasources.html",{loader:()=>o(()=>import("./mongodb-action-multiple-datasources.html-Cq_fameE.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 集成步骤</h2>
<ol>
<li>
<p>添加maven依赖</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;org.springframework.boot&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;spring-boot-starter-data-mongodb&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
</div></li>
<li>
<p>配置文件</p>
<div class="language-yml" data-ext="yml" data-title="yml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">spring</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  data</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    mongodb</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      primary</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        uri</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">mongodb://localhost:27017/db1</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      secondary</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        uri</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">mongodb://localhost:27017/db2</span></span></code></pre>
</div></li>
<li>
<p>主数据库配置文件PrimaryMongoConfig</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">package</span><span style="color:#C678DD;--shiki-dark:#C678DD"> com.zszdevelop.mongomultidemo.config</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> com.mongodb.MongoClientURI</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.boot.autoconfigure.mongo.MongoProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.boot.context.properties.ConfigurationProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.context.annotation.Bean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.context.annotation.Configuration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.context.annotation.Primary</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.data.mongodb.MongoDbFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.data.mongodb.core.MongoTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.data.mongodb.core.SimpleMongoDbFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.data.mongodb.repository.config.EnableMongoRepositories</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Configuration</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">EnableMongoRepositories</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">basePackages</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span><span style="color:#98C379;--shiki-dark:#98C379">"com.zszdevelop.mongomultidemo.domain.primary"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">"com.zszdevelop.mongomultidemo.repository.primary"</span><span style="color:#E06C75;--shiki-dark:#E06C75">}</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">        mongoTemplateRef</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "primaryMongoTemplate"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> PrimaryMongoConfig</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Bean</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Primary</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ConfigurationProperties</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">prefix</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">"spring.data.mongodb.primary"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> MongoProperties</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> primaryMongoProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> MongoProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Primary</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Bean</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">name</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "primaryMongoTemplate"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> MongoTemplate</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> primaryMongoTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#C678DD;--shiki-dark:#C678DD"> throws</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Exception</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> MongoTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">primaryFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">primaryMongoProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()));</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Bean</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Primary</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD"> 		public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> MongoDatabaseFactory</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> primaryFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">MongoProperties</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> mongoProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> SimpleMongoClientDatabaseFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">primaryMongoProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getUri</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>副数据库配置文件PrimaryMongoConfig</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">package</span><span style="color:#C678DD;--shiki-dark:#C678DD"> com.zszdevelop.mongomultidemo.config</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> com.mongodb.MongoClientURI</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.boot.autoconfigure.mongo.MongoProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.boot.context.properties.ConfigurationProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.context.annotation.Bean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.context.annotation.Configuration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.context.annotation.Primary</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.data.mongodb.MongoDbFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.data.mongodb.core.MongoTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.data.mongodb.core.SimpleMongoDbFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.data.mongodb.repository.config.EnableMongoRepositories</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Configuration</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">EnableMongoRepositories</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">basePackages</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span><span style="color:#98C379;--shiki-dark:#98C379">"com.zszdevelop.mongomultidemo.domain.secondary"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">"com.zszdevelop.mongomultidemo.repository.secondary"</span><span style="color:#E06C75;--shiki-dark:#E06C75">} </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">        mongoTemplateRef</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "secondaryMongoTemplate"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SecondaryMongoConfig</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Bean</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ConfigurationProperties</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">prefix</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">"spring.data.mongodb.secondary"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> MongoProperties</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> secondaryMongoProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> MongoProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Bean</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">name</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "secondaryMongoTemplate"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> MongoTemplate</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> secondaryMongoTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#C678DD;--shiki-dark:#C678DD"> throws</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Exception</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> MongoTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">secondaryFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">secondaryMongoProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()));</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Bean</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">     @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Bean</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> MongoDatabaseFactory</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> secondaryFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">MongoProperties</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> mongoProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#C678DD;--shiki-dark:#C678DD"> throws</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Exception</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        SimpleMongoClientDatabaseFactory</span><span style="color:#E06C75;--shiki-dark:#E06C75"> simpleMongoClientDbFactory</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> SimpleMongoClientDatabaseFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">secondaryMongoProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getUri</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  simpleMongoClientDbFactory;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>用户实体类（存储在副数据库）</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">package</span><span style="color:#C678DD;--shiki-dark:#C678DD"> com.zszdevelop.mongomultidemo.domain.secondary</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> lombok.Data</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> lombok.experimental.Accessors</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.data.annotation.Id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.data.mongodb.core.mapping.Document</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> java.io.Serializable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> java.time.Instant</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Data</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Accessors</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">chain</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> true</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Document</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">collection</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "t_user"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> User</span><span style="color:#C678DD;--shiki-dark:#C678DD"> implements</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Serializable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> final</span><span style="color:#C678DD;--shiki-dark:#C678DD"> long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> serialVersionUID </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> -</span><span style="color:#D19A66;--shiki-dark:#D19A66">7229906944062898852L</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /** ID */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Id</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /** 用户名 */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> username</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /** 年龄 */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Integer</span><span style="color:#E06C75;--shiki-dark:#E06C75"> age</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /** 注册时间 */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Instant</span><span style="color:#E06C75;--shiki-dark:#E06C75"> registerTime</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>用户查询仓库（副数据库）</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">package</span><span style="color:#C678DD;--shiki-dark:#C678DD"> com.zszdevelop.mongomultidemo.repository.secondary</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> com.zszdevelop.mongomultidemo.domain.secondary.User</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.data.mongodb.repository.MongoRepository</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> java.util.List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> interface</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> UserRepository</span><span style="color:#C678DD;--shiki-dark:#C678DD"> extends</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> MongoRepository</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">User</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 通过用户名查询</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> username</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 用户名</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@return</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">User</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> findAllByUsername</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> username</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>登录日志实体（主数据库）</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">package</span><span style="color:#C678DD;--shiki-dark:#C678DD"> com.zszdevelop.mongomultidemo.domain.primary</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> lombok.Data</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> lombok.experimental.Accessors</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.data.annotation.Id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> java.io.Serializable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> java.time.Instant</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Data</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Accessors</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">chain</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> true</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> LoginLog</span><span style="color:#C678DD;--shiki-dark:#C678DD"> implements</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Serializable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> final</span><span style="color:#C678DD;--shiki-dark:#C678DD"> long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> serialVersionUID </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> -</span><span style="color:#D19A66;--shiki-dark:#D19A66">6694661682102504919L</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /** ID */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Id</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /** 用户ID */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> uid</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /** 用户名 */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> username</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /** 登录时间 */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Instant</span><span style="color:#E06C75;--shiki-dark:#E06C75"> loginTime</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>登录日志查询仓库（主数据库）</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">package</span><span style="color:#C678DD;--shiki-dark:#C678DD"> com.zszdevelop.mongomultidemo.repository.primary</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> com.zszdevelop.mongomultidemo.domain.primary.LoginLog</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.data.mongodb.repository.MongoRepository</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> interface</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> LoginLogRepository</span><span style="color:#C678DD;--shiki-dark:#C678DD"> extends</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> MongoRepository</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">LoginLog</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
</div></li>
</ol>`,r:{minutes:2.89,words:866},t:"Mongodb多数据源",y:"a"}}],["/posts/Database/MongoDB/mongodb-action-query.html",{loader:()=>o(()=>import("./mongodb-action-query.html-BT1bNFXC.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p>spring-data-mongodb 的查询方法定义的两种方式</p>
<ol>
<li>根据方法名来自动推测</li>
<li>自定义查询（复杂场景）</li>
</ol>
<h2>2. @Query注解</h2>
<h3>2.1 基础查询</h3>
<p>Mongodb使用的是基于json的查询语句。</p>
<p>通过将org.springframework.data.mongodb.repository.Query批注添加到存储库查询方法，可以指定要使用的MongoDB JSON查询字符串，而不是从方法名称派生查询，如以下示例所示：</p>
<div class="language-kotlin" data-ext="kotlin" data-title="kotlin"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> interface</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> PersonRepository</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> extends MongoRepository</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">Person, String</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">  @Query</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"{ 'firstname' : ?0 }"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  List</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">Person</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> findByThePersonsFirstname</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(String firstname);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
</div>`,r:{minutes:3.2,words:959},t:"spring-data-mongodb的Query查询",y:"a"}}],["/posts/Database/MongoDB/mongodb-action-template-repository.html",{loader:()=>o(()=>import("./mongodb-action-template-repository.html-C0N2e1vp.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p><code>Spring Data</code> 操作 <code>MongoDB</code> 做 <code>CRUD</code> 的时候一般会使用两种方式MongoTemplate和MongoRepositor。本文就这两种方式做个简单的对比介绍，并对我们在业务中经常使用到的查询做一些举例。</p>
<h2>2. 数据准备</h2>
<p>其中使用到的 <code>User</code> 类如下<br>
<code>User.java</code> 如下</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.data.annotation.*</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.data.mongodb.core.index.Indexed</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.data.mongodb.core.mapping.Document</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Document</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">collection</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "User"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> User</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">	@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Id</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">	private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> _id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">	private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">	private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Integer</span><span style="color:#E06C75;--shiki-dark:#E06C75"> age</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">		</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">	// 只在本文最后一部分使用</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">	// @CreatedDate</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">	// @Indexed</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">	// private DateTime createdAt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">	// @LastModifiedDate</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">	// @Indexed</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">	// private DateTime updatedAt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:4.59,words:1377},t:"MongoTemplate和MongoRepository总结",y:"a"}}],["/posts/Database/MongoDB/mongodb-backup-import.html",{loader:()=>o(()=>import("./mongodb-backup-import.html-w0c9HmXx.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p>MongoDB官方提供了两套数据导入导出工具，一般来说，</p>
<ul>
<li>mongodump和mongorestore
<ul>
<li>进行整库导出导入时使用</li>
<li>操作的数据是BSON格式，进行大量dump和restore时效率较高。</li>
</ul>
</li>
<li>mongoexport和mongoimport
<ul>
<li>进行单个集合导出导入时使用</li>
<li>操作的数据是JSON格式，可读性较高</li>
</ul>
</li>
</ul>
<h2>2. mongoexport（导出）</h2>
<h3>2.1 参数</h3>`,r:{minutes:2.54,words:761},t:"MongoDB数据导入与导出",y:"a"}}],["/posts/Database/MongoDB/mongodb-backup.html",{loader:()=>o(()=>import("./mongodb-backup.html-CNI0YGHN.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p>MongoDB官方提供了两套数据导入导出工具，一般来说，</p>
<ul>
<li>mongodump和mongorestore
<ul>
<li>进行整库导出导入时使用</li>
<li>操作的数据是BSON格式，进行大量dump和restore时效率较高。</li>
</ul>
</li>
<li>mongoexport和mongoimport
<ul>
<li>进行单个集合导出导入时使用</li>
<li>操作的数据是JSON格式，可读性较高</li>
</ul>
</li>
</ul>
<h2>2. mongodump（备份）</h2>
<h3>2.1 说明</h3>`,r:{minutes:3.97,words:1192},t:"MongoDB数据备份与还原",y:"a"}}],["/posts/Database/MongoDB/mongodb-index-overview.html",{loader:()=>o(()=>import("./mongodb-index-overview.html-BefjMSJl.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 概述</h2>
<p>我们使用索引的目的是什么呢？</p>
<p>终极目的：借助索引快速搜索，有效减少了扫描的行数</p>
<p>精髓：不止要有索引，索引的过滤性还要好，区分度要足够高，这才是好的设计</p>
<h2>2. 索引的类型</h2>
<h3>2.1 唯一索引</h3>
<p>唯一索引是索引具有的一种属性，让索引具备唯一性，确保这张表中，该条索引数据不会重复出现。在每一次insert和update操作时，都会进行索引的唯一性校验，保证该索引的字段组合在表中唯一。</p>
<div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">db</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">containers</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">createIndex</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">({</span><span style="color:#E06C75;--shiki-dark:#E06C75">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">},{</span><span style="color:#E06C75;--shiki-dark:#E06C75">unique</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span><span style="color:#D19A66;--shiki-dark:#D19A66">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E06C75;--shiki-dark:#E06C75">background</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#D19A66;--shiki-dark:#D19A66">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">})</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">db</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">packages</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">createIndex</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">({ </span><span style="color:#E06C75;--shiki-dark:#E06C75">appId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> },{</span><span style="color:#E06C75;--shiki-dark:#E06C75">unique</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span><span style="color:#D19A66;--shiki-dark:#D19A66">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E06C75;--shiki-dark:#E06C75">background</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#D19A66;--shiki-dark:#D19A66">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">})</span></span></code></pre>
</div>`,r:{minutes:12.83,words:3848},t:"mongoDB索引详解",y:"a"}}],["/posts/Database/MongoDB/mongodb-problem-repair.html",{loader:()=>o(()=>import("./mongodb-problem-repair.html-Dbuph9yX.js"),[]),meta:{d:1729494189e3,g:null,e:`<h2>mongodb异常关闭后，如何修复启动</h2>
<h2>1. 背景</h2>
<p>当独立的<code>mongod</code>实例禁用日记功能时，<strong>不正常的关闭可能会使数据处于不一致状态</strong>。异常关闭后，如果存在非空的<code>mongod.lock</code>文件，则mongod实例在重新启动时记录以下消息：</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>Detected unclean shutdown - mongod.lock is not empty.</span></span></code></pre>
</div>`,r:{minutes:1.21,words:362},t:"",y:"a"}}],["/posts/Database/MongoDB/mongodb-problem-slow.html",{loader:()=>o(()=>import("./mongodb-problem-slow.html-CuH2zKvn.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 背景</h2>
<p>我单个collection 有100多万数据，单单一个count查询就要1分多钟，其他分页查数据也是慢成狗了。甚至有时候服务器直接挂掉</p>
<p>但是这个数据量在robo 3t 很快，但在我的代码和idea 的datagrid 中就特别慢。</p>
<p>经过一系列的排查大致可以从几个方面入手</p>
<h2>2. 解决</h2>
<h3>2.1 降低mongodb 版本</h3>
<p>原本spring-boot版本为2.5.x 关联的mongo版本为4.x</p>
<blockquote>
<p>4.x版本改动比较大，查询的优化可能没做好导致</p>
</blockquote>`,r:{minutes:.8,words:241},t:"mongodb大数据量查询慢问题",y:"a"}}],["/posts/Database/MongoDB/mongodb-started.html",{loader:()=>o(()=>import("./mongodb-started.html-DSBBz4Y3.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 连接mongodb</h2>
<div class="language-sh" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">//</span><span style="color:#98C379;--shiki-dark:#98C379"> mongo</span><span style="color:#98C379;--shiki-dark:#98C379"> 远程主机ip或DNS:MongoDB端口号/数据库名</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -u</span><span style="color:#98C379;--shiki-dark:#98C379"> user</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -p</span><span style="color:#98C379;--shiki-dark:#98C379"> password</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">mongo</span><span style="color:#98C379;--shiki-dark:#98C379"> 192.168.1.200:27017/test</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -u</span><span style="color:#98C379;--shiki-dark:#98C379"> user</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -p</span><span style="color:#98C379;--shiki-dark:#98C379"> password</span></span></code></pre>
</div>`,r:{minutes:5.75,words:1726},t:"MongoDB入门",y:"a"}}],["/posts/Database/MongoDB/mongodb-x-sql-mongo-aggregation.html",{loader:()=>o(()=>import("./mongodb-x-sql-mongo-aggregation.html-B9QJzD8o.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p>聚合管道 （ <a href="https://docs.mongodb.com/manual/core/aggregation-pipeline/" target="_blank" rel="noopener noreferrer">aggregation pipeline</a>） 让 MongoDB 提供与 SQL 中的许多常见数据聚合操作相对应的，原生的聚合功能。</p>
<h3>1.1 术语</h3>
<p>下表概述了常见的 SQL 聚合术语、函数和概念以及相应的 MongoDB 聚合操作符（ <a href="https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline/#aggregation-pipeline-operator-reference" target="_blank" rel="noopener noreferrer">aggregation operators</a>）：</p>`,r:{minutes:2.77,words:832},t:"从SQL到MongoDB之聚合篇",y:"a"}}],["/posts/Database/MongoDB/mongodb-x-sql-mongo-overview.html",{loader:()=>o(()=>import("./mongodb-x-sql-mongo-overview.html-CpyXNKo-.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 概念对应关系</h2>
<p>SQL 术语和概念以及相应的 MongoDB 术语和概念.</p>
<p>下表介绍了各种 SQL 术语和概念以及相应的 MongoDB 术语和概念.</p>
<table>
<thead>
<tr>
<th>SQL术语/概念</th>
<th>MongoDB 术语/概念</th>
</tr>
</thead>
<tbody>
<tr>
<td>database</td>
<td><a href="https://docs.mongodb.com/manual/reference/glossary/#term-database" target="_blank" rel="noopener noreferrer">database</a></td>
</tr>
<tr>
<td>table</td>
<td><a href="https://docs.mongodb.com/manual/reference/glossary/#term-collection" target="_blank" rel="noopener noreferrer">collection</a></td>
</tr>
<tr>
<td>row</td>
<td><a href="https://docs.mongodb.com/manual/reference/glossary/#term-document" target="_blank" rel="noopener noreferrer">document</a>或 <a href="https://docs.mongodb.com/manual/reference/glossary/#term-bson" target="_blank" rel="noopener noreferrer">BSON</a>document</td>
</tr>
<tr>
<td>column</td>
<td><a href="https://docs.mongodb.com/manual/reference/glossary/#term-field" target="_blank" rel="noopener noreferrer">field</a></td>
</tr>
<tr>
<td>index</td>
<td><a href="https://docs.mongodb.com/manual/reference/glossary/#term-index" target="_blank" rel="noopener noreferrer">index</a></td>
</tr>
<tr>
<td>table joins （表联接）</td>
<td><a href="https://docs.mongodb.com/manual/reference/operator/aggregation/lookup/#pipe._S_lookup" target="_blank" rel="noopener noreferrer">$lookup</a>, <code>embedded documents （嵌入式文档）</code></td>
</tr>
<tr>
<td>primary key 指定任何唯一的列或者列组合作为主键</td>
<td><a href="https://docs.mongodb.com/manual/reference/glossary/#term-primary-key" target="_blank" rel="noopener noreferrer">primary key </a>在 MongoDB 中, 主键自动设置为 <a href="https://docs.mongodb.com/manual/reference/glossary/#term-id" target="_blank" rel="noopener noreferrer">_id </a>字段</td>
</tr>
<tr>
<td>aggregation (如：group by)</td>
<td><code>aggregation pipeline （聚合管道）</code>参考： <a href="https://docs.mongodb.com/manual/reference/sql-aggregation-comparison/" target="_blank" rel="noopener noreferrer">SQL to Aggregation Mapping Chart</a></td>
</tr>
<tr>
<td>SELECT INTO NEW_TABLE</td>
<td><a href="https://docs.mongodb.com/manual/reference/operator/aggregation/out/#pipe._S_out" target="_blank" rel="noopener noreferrer">$out </a>参考： <a href="https://docs.mongodb.com/manual/reference/sql-aggregation-comparison/" target="_blank" rel="noopener noreferrer">SQL to Aggregation Mapping Chart</a></td>
</tr>
<tr>
<td>MERGE INTO TABLE</td>
<td><a href="https://docs.mongodb.com/manual/reference/operator/aggregation/merge/#pipe._S_merge" target="_blank" rel="noopener noreferrer">$merge</a>（从MongoDB 4.2开始可用） 参考： <a href="https://docs.mongodb.com/manual/reference/sql-aggregation-comparison/" target="_blank" rel="noopener noreferrer">SQL to Aggregation Mapping Chart</a></td>
</tr>
<tr>
<td>transactions</td>
<td><a href="https://docs.mongodb.com/manual/core/transactions/" target="_blank" rel="noopener noreferrer">transactions</a></td>
</tr>
</tbody>
</table>`,r:{minutes:4.51,words:1353},t:"从SQL到MongoDB之概念篇",y:"a"}}],["/posts/Database/MySQL/MySQL%E5%9F%BA%E7%A1%80-01.html",{loader:()=>o(()=>import("./MySQL基础-01.html-BSdQ6MXF.js"),[]),meta:{d:1729494189e3,c:["数据库","Mysql"],g:null,e:`
<h3>一、数据库的基本概念</h3>
<h4>1.为什么要学数据库？</h4>
<ul>
<li>之前我们如果想将一些数据实现永久化存储，可以怎么做呢？没错。使用IO流的技术将数据保存到本地文件中</li>
<li>但是接下来我有这样一个需求：将下面的user.txt文件中的王五年龄修改为35</li>
</ul>
<div class="language-txt" data-ext="txt" data-title="txt"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>张三 23 男</span></span>
<span class="line"><span>李四 24 男</span></span>
<span class="line"><span>王五 25 女</span></span>
<span class="line"><span>赵六 26 女</span></span>
<span class="line"><span>周七 27 男</span></span></code></pre>
</div>`,r:{minutes:18.47,words:5540},t:"MySQL基础",O:1,y:"a"}}],["/posts/Database/MySQL/MySQL%E8%BF%9B%E9%98%B6-02.html",{loader:()=>o(()=>import("./MySQL进阶-02.html-BA99E9yR.js"),[]),meta:{d:1729494189e3,c:["数据库","Mysql"],g:null,e:`
<h3>一、约束</h3>
<h4>1.外键约束</h4>
<ul>
<li>
<p>外键约束概念</p>
<ul>
<li>让表和表之间产生关系，从而保证数据的准确性！</li>
</ul>
</li>
<li>
<p>建表时添加外键约束</p>
<ul>
<li>为什么要有外键约束</li>
</ul>
<div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 创建db2数据库</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">CREATE</span><span style="color:#C678DD;--shiki-dark:#C678DD"> DATABASE</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> db2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 使用db2数据库</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">USE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> db2;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 创建user用户表</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">CREATE</span><span style="color:#C678DD;--shiki-dark:#C678DD"> TABLE</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> USER</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">	id </span><span style="color:#C678DD;--shiki-dark:#C678DD">INT</span><span style="color:#C678DD;--shiki-dark:#C678DD"> PRIMARY KEY</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> AUTO_INCREMENT,    </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- id</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">	NAME</span><span style="color:#C678DD;--shiki-dark:#C678DD"> VARCHAR</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">20</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">NOT NULL</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">             -- 姓名</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 添加用户数据</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">INSERT INTO</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> USER </span><span style="color:#C678DD;--shiki-dark:#C678DD">VALUES</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD">NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'张三'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">),(</span><span style="color:#C678DD;--shiki-dark:#C678DD">NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'李四'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">),(</span><span style="color:#C678DD;--shiki-dark:#C678DD">NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'王五'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 创建orderlist订单表</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">CREATE</span><span style="color:#C678DD;--shiki-dark:#C678DD"> TABLE</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> orderlist</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">	id </span><span style="color:#C678DD;--shiki-dark:#C678DD">INT</span><span style="color:#C678DD;--shiki-dark:#C678DD"> PRIMARY KEY</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> AUTO_INCREMENT,    </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- id</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">	number</span><span style="color:#C678DD;--shiki-dark:#C678DD"> VARCHAR</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">20</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">NOT NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,          </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 订单编号</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">	uid</span><span style="color:#C678DD;--shiki-dark:#C678DD"> INT</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                               -- 订单所属用户</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 添加订单数据</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">INSERT INTO</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> orderlist </span><span style="color:#C678DD;--shiki-dark:#C678DD">VALUES</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD">NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'hm001'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">),(</span><span style="color:#C678DD;--shiki-dark:#C678DD">NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'hm002'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">),</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'hm003'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">),(</span><span style="color:#C678DD;--shiki-dark:#C678DD">NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'hm004'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">),</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'hm005'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">),(</span><span style="color:#C678DD;--shiki-dark:#C678DD">NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'hm006'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 添加一个订单，但是没有所属用户。这合理吗？</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">INSERT INTO</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> orderlist </span><span style="color:#C678DD;--shiki-dark:#C678DD">VALUES</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD">NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'hm007'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">8</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 删除王五这个用户，但是订单表中王五还有很多个订单呢。这合理吗？</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">DELETE</span><span style="color:#C678DD;--shiki-dark:#C678DD"> FROM</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> USER </span><span style="color:#C678DD;--shiki-dark:#C678DD">WHERE</span><span style="color:#C678DD;--shiki-dark:#C678DD"> NAME</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">'王五'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 所以我们需要添加外键约束，让两张表产生关系</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li>外键约束格式</li>
</ul>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">CONSTRAINT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> 外键名 </span><span style="color:#C678DD;--shiki-dark:#C678DD">FOREIGN KEY</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (本表外键列名) </span><span style="color:#C678DD;--shiki-dark:#C678DD">REFERENCES</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> 主表名(主表主键列名)</span></span></code></pre>
</div><ul>
<li>创建表添加外键约束</li>
</ul>
<div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 创建user用户表</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">CREATE</span><span style="color:#C678DD;--shiki-dark:#C678DD"> TABLE</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> USER</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">	id </span><span style="color:#C678DD;--shiki-dark:#C678DD">INT</span><span style="color:#C678DD;--shiki-dark:#C678DD"> PRIMARY KEY</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> AUTO_INCREMENT,    </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- id</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">	NAME</span><span style="color:#C678DD;--shiki-dark:#C678DD"> VARCHAR</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">20</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">NOT NULL</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">             -- 姓名</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 添加用户数据</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">INSERT INTO</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> USER </span><span style="color:#C678DD;--shiki-dark:#C678DD">VALUES</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD">NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'张三'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">),(</span><span style="color:#C678DD;--shiki-dark:#C678DD">NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'李四'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">),(</span><span style="color:#C678DD;--shiki-dark:#C678DD">NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'王五'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 创建orderlist订单表</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">CREATE</span><span style="color:#C678DD;--shiki-dark:#C678DD"> TABLE</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> orderlist</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">	id </span><span style="color:#C678DD;--shiki-dark:#C678DD">INT</span><span style="color:#C678DD;--shiki-dark:#C678DD"> PRIMARY KEY</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> AUTO_INCREMENT,    </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- id</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">	number</span><span style="color:#C678DD;--shiki-dark:#C678DD"> VARCHAR</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">20</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">NOT NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,          </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 订单编号</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">	uid</span><span style="color:#C678DD;--shiki-dark:#C678DD"> INT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,                              </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 订单所属用户</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">	CONSTRAINT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ou_fk1 </span><span style="color:#C678DD;--shiki-dark:#C678DD">FOREIGN KEY</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD">uid</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">REFERENCES</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> USER(id)   </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 添加外键约束</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 添加订单数据</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">INSERT INTO</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> orderlist </span><span style="color:#C678DD;--shiki-dark:#C678DD">VALUES</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD">NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'hm001'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">),(</span><span style="color:#C678DD;--shiki-dark:#C678DD">NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'hm002'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">),</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'hm003'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">),(</span><span style="color:#C678DD;--shiki-dark:#C678DD">NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'hm004'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">),</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'hm005'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">),(</span><span style="color:#C678DD;--shiki-dark:#C678DD">NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'hm006'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 添加一个订单，但是没有所属用户。无法添加</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">INSERT INTO</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> orderlist </span><span style="color:#C678DD;--shiki-dark:#C678DD">VALUES</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD">NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'hm007'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">8</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 删除王五这个用户，但是订单表中王五还有很多个订单呢。无法删除</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">DELETE</span><span style="color:#C678DD;--shiki-dark:#C678DD"> FROM</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> USER </span><span style="color:#C678DD;--shiki-dark:#C678DD">WHERE</span><span style="color:#C678DD;--shiki-dark:#C678DD"> NAME</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">'王五'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>删除外键约束</p>
</li>
</ul>`,r:{minutes:19.41,words:5823},t:"MySQL进阶",O:2,y:"a"}}],["/posts/Database/MySQL/MySQL%E9%AB%98%E7%BA%A7-03.html",{loader:()=>o(()=>import("./MySQL高级-03.html-BgMYi3Yk.js"),[]),meta:{d:1729494189e3,c:["数据库","Mysql"],g:null,e:`
<h3>一、MySQL存储过程和函数</h3>
<h4>1.存储过程和函数的概念</h4>
<ul>
<li>存储过程和函数是 事先经过编译并存储在数据库中的一段 SQL 语句的集合</li>
</ul>
<h4>2.存储过程和函数的好处</h4>
<ul>
<li>存储过程和函数可以重复使用，减轻开发人员的工作量。类似于java中方法可以多次调用</li>
<li>减少网络流量，存储过程和函数位于服务器上，调用的时候只需要传递名称和参数即可</li>
<li>减少数据在数据库和应用服务器之间的传输，可以提高数据处理的效率</li>
<li>将一些业务逻辑在数据库层面来实现，可以减少代码层面的业务处理</li>
</ul>`,r:{minutes:23.88,words:7163},t:"MySQL高级",O:3,y:"a"}}],["/posts/Database/MySQL/MySQL%E9%AB%98%E7%BA%A7-04.html",{loader:()=>o(()=>import("./MySQL高级-04.html-DyzWorWK.js"),[]),meta:{d:1729494189e3,c:["数据库","Mysql"],g:null,e:`
<h3>一、MySQL存储引擎</h3>
<h4>1.MySQL体系结构</h4>
<ul>
<li>体系结构的概念
<ul>
<li>任何一套系统当中，每个部件都能起到一定的作用！</li>
</ul>
</li>
<li>MySQL的体系结构</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403130940265.png" alt="02" tabindex="0" loading="lazy"><figcaption>02</figcaption></figure>`,r:{minutes:41.06,words:12317},t:"MySQL高级",O:4,y:"a"}}],["/posts/Database/MySQL/",{loader:()=>o(()=>import("./index.html-CEy6XPNx.js"),[]),meta:{d:17127936e5,l:"2024年4月11日",e:`<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>这里放置MySQL数据库相关的内容</p>
</div>
<hr>
`,r:{minutes:.12,words:35},t:"MySQL",i:"mysql",O:1,y:"p"}}],["/posts/Database/MySQL/SQL-%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0.html",{loader:()=>o(()=>import("./SQL-窗口函数.html-CJ35G_2K.js"),[]),meta:{d:171009354e4,l:"2024年3月10日",c:["数据库"],g:["MySQL"],e:`
<h3>一. 什么是窗口函数</h3>
<h4>基本含义</h4>
<p>窗口限定一个范围，它可以理解为满足某些条件的记录集合，窗口函数也就是在窗口范围内执行的函数。</p>
<h4>基本语法</h4>
<p>窗口函数有over关键字，指定函数执行的范围，可分为三部分：分组子句(partition by)，排序子句(order by)，窗口子句(rows)</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">函数名</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#C678DD;--shiki-dark:#C678DD"> over</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD">partition</span><span style="color:#C678DD;--shiki-dark:#C678DD"> by</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> &lt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">分组的列</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#C678DD;--shiki-dark:#C678DD"> order by</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> &lt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">排序的列</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#C678DD;--shiki-dark:#C678DD"> rows</span><span style="color:#C678DD;--shiki-dark:#C678DD"> between</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> &lt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">起始行</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#C678DD;--shiki-dark:#C678DD"> and</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> &lt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">终止行</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span></code></pre>
</div>`,r:{minutes:8.46,words:2539},t:"12、SQL窗口函数",y:"a"}}],["/posts/Database/MySQL/SQL%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0%EF%BC%88%E4%BA%8C%EF%BC%89.html",{loader:()=>o(()=>import("./SQL窗口函数（二）.html-CWXx7I1v.js"),[]),meta:{d:171009714e4,l:"2024年3月10日",c:["数据库"],g:["MySQL"],e:`
<h3>题目一</h3>
<h4>表格</h4>
<table>
<thead>
<tr>
<th>user_id</th>
<th>login_date</th>
</tr>
</thead>
<tbody>
<tr>
<td>A</td>
<td>2022-09-02</td>
</tr>
<tr>
<td>A</td>
<td>2022-09-03</td>
</tr>
<tr>
<td>A</td>
<td>2022-09-04</td>
</tr>
<tr>
<td>B</td>
<td>2021-11-25</td>
</tr>
<tr>
<td>B</td>
<td>2021-12-31</td>
</tr>
<tr>
<td>C</td>
<td>2022-01-01</td>
</tr>
<tr>
<td>C</td>
<td>2022-04-04</td>
</tr>
<tr>
<td>C</td>
<td>2022-09-03</td>
</tr>
<tr>
<td>C</td>
<td>2022-09-04</td>
</tr>
<tr>
<td>C</td>
<td>2022-09-05</td>
</tr>
<tr>
<td>A</td>
<td>2022-09-03</td>
</tr>
<tr>
<td>D</td>
<td>2022-10-20</td>
</tr>
<tr>
<td>D</td>
<td>2022-10-21</td>
</tr>
<tr>
<td>A</td>
<td>2022-10-03</td>
</tr>
<tr>
<td>D</td>
<td>2022-10-22</td>
</tr>
<tr>
<td>D</td>
<td>2022-10-23</td>
</tr>
<tr>
<td>B</td>
<td>2022-01-04</td>
</tr>
<tr>
<td>B</td>
<td>2022-01-05</td>
</tr>
<tr>
<td>B</td>
<td>2022-11-16</td>
</tr>
<tr>
<td>B</td>
<td>2022-11-17</td>
</tr>
</tbody>
</table>`,r:{minutes:3.61,words:1082},t:"13、SQL窗口函数（二）",y:"a"}}],["/posts/Database/MySQL/mysql-c-index-btree.html",{loader:()=>o(()=>import("./mysql-c-index-btree.html-DOfTQJMN.js"),[]),meta:{d:1729494189e3,c:["数据库"],g:null,e:`
<h2>1. 影响索引查询效率的主要原因</h2>
<ol>
<li>
<p>索引存储在磁盘上</p>
<p>索引本身也很大，不可能全部存储在内存中，因此索引往往以索引文件的形式存储在磁盘上</p>
</li>
<li>
<p>磁盘I/O存取慢</p>
<p>索引在查找过程汇总要产生磁盘I/O消耗，相对于内存存储，<strong>I/O存储的消耗要高几个数量级</strong></p>
</li>
</ol>
<p>所以索引的结构组织要尽量减少查找过程<strong>中磁盘I/O的存取次数，提升索引效率</strong></p>
<h2>2. 为什么磁盘存储慢</h2>
<h3>2.1 磁盘存取原理</h3>`,r:{minutes:4.5,words:1351},t:"B+TREE索引的优势",O:40,y:"a"}}],["/posts/Database/MySQL/mysql-c-index-impl.html",{loader:()=>o(()=>import("./mysql-c-index-impl.html-CvOWygop.js"),[]),meta:{d:1729494189e3,c:["数据库"],g:null,e:`
<h2>1. 聚簇索引</h2>
<p>MyISAM 和 InnoDB 都使用B+Tree索引结构，但底层索引存储不同，MyISAM 采用非聚簇索引，而InnoDB采用聚簇索引</p>
<ul>
<li>聚簇索引：索引和数据文件为同一个文件</li>
<li>非聚簇索引：索引和数据文件 分开的索引</li>
</ul>
<h2>2. MyISAM 索引原理</h2>
<h3>2.1 底层存储结构</h3>
<ul>
<li>frm：定义表</li>
<li>myi: myisam索引</li>
<li>myd：myisam数据</li>
</ul>
<h3>2.2 myISAM 索引结构特性</h3>`,r:{minutes:4.33,words:1298},t:"索引实现",y:"a"}}],["/posts/Database/MySQL/mysql-c-index-right.html",{loader:()=>o(()=>import("./mysql-c-index-right.html-DfYRWi3W.js"),[]),meta:{d:1729494189e3,c:["数据库"],g:null,e:`
<h2>1. 什么是联合索引</h2>
<p>联合索引就是由多列组合成的索引</p>
<h2>2. 什么是最左匹配原则</h2>
<h3>2.1 简单概述</h3>
<p>假设我们有两列a，b。我们对ab设置一个联合索引，我们再where 语句中</p>
<ul>
<li>调用a=？ and b=?,他就会走ab索引。</li>
<li>调用where a=？ 他也会走ab索引</li>
<li>调用where b=？，不走ab 索引</li>
</ul>
<h3>2.2 定义</h3>
<ol>
<li>mysql 会一直向右匹配知道遇到范围查询（&gt;、&lt;、between、like）就会停止匹配，比如a=3 and b=4 and c&gt;5 and d=6 如果建立（a,b,c,d）顺序的所有，d是用不到索引的，如果建立（a,b,d,c）的索引则都可以用到，a、b、d的顺序可以任意调整</li>
<li>=和in 可以乱序，比如a=1 and b=2 and c=3 建立（a,b,c）索引可以任意顺序，mysql的查询优化器会帮你优化成索引可以识别的形式</li>
</ol>`,r:{minutes:1.41,words:422},t:"联合索引-最左匹配原则成因",y:"a"}}],["/posts/Database/MySQL/mysql-c-index-structure.html",{loader:()=>o(()=>import("./mysql-c-index-structure.html-De0cvdPD.js"),[]),meta:{d:1729494189e3,c:["数据库"],g:null,e:`
<h2>1. 顺序查找</h2>
<p><strong>算法复杂度：O(n)</strong></p>
<p>最基本的查询算法，复杂度O(n),大数据量时此算法效率非常糟糕</p>
<h2>2. 二叉树查找(binary tree search)</h2>
<p><strong>算法复杂度：O(log2n)</strong></p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403130844979.png" alt="image-20190904230943376" tabindex="0" loading="lazy"><figcaption>image-20190904230943376</figcaption></figure>`,r:{minutes:3,words:900},t:"索引常见的数据结构",y:"a"}}],["/posts/Database/MySQL/mysql-c-index-uni.html",{loader:()=>o(()=>import("./mysql-c-index-uni.html-uttglrWV.js"),[]),meta:{d:1729494189e3,c:["数据库"],g:null,e:`
<h2>1. 什么是联合索引</h2>
<p>两个或更多个列上的索引被称为联合索引，联合索引又叫复合索引。</p>
<p>对于联合索引：</p>
<ul>
<li>MySql从左到右使用索引中字段</li>
<li>一个查询可以只使用索引中的一部分，但只能是最左部分（最左前缀）</li>
</ul>
<p>例如：</p>
<p>索引是key index（a,b,c） 可以支持<strong>a|a,b|a,b,c</strong>，三种组合查找，但不支持b,c 进行查找。当最左侧字段是常量引用时，索引就十分有效</p>
<h2>2. 需要遵循的规则</h2>
<ol>
<li>需要加索引的字段，要在where条件中</li>
<li>数据量少的字段不需要加索引</li>
<li>如何where条件中是or关系，加索引不起作用</li>
<li>符合最左前缀原则</li>
</ol>`,r:{minutes:3.76,words:1128},t:"联合索引",y:"a"}}],["/posts/Database/MySQL/mysql-c-index.html",{loader:()=>o(()=>import("./mysql-c-index.html-D8tZ1z1a.js"),[]),meta:{d:1729494189e3,c:["数据库"],g:null,e:`
<h2>1. 为什么要使用索引</h2>
<p>因为索引能避免使用全表扫描去查询数据，提升检索效率</p>
<h2>2. 什么样的信息能成为索引</h2>
<p>主键、唯一键等，只要能让数据具有一定区分性的字段</p>
<h2>3. 索引的数据结构</h2>
<p>主流的B+tree、hash结构，bitmap</p>
<h2>4. 索引是建立得越多越好吗</h2>
<ul>
<li>数据量小的表不需要建立索引，建立会增加二外的索引开销</li>
<li>数据变更需要维护索引，因此更多的索引意味着更多的维护成本</li>
<li>更多的索引也需要更多的空间</li>
</ul>
`,r:{minutes:.62,words:187},t:"索引",y:"a"}}],["/posts/Database/MySQL/mysql-x-backup.html",{loader:()=>o(()=>import("./mysql-x-backup.html-DrqaC9jG.js"),[]),meta:{d:1729494189e3,c:["数据库","Mysql"],g:null,e:`
<h2>1. 简介</h2>
<p>备份方案主要分为</p>
<ul>
<li>mysqldump</li>
<li>xtrabackup(推荐)</li>
</ul>
<h2>2. mysqldump 命令备份</h2>
<p>mysqldump 可以导出MYSQL表中的数据</p>
<p>mysqldump该工具会将数据查出来，转换成insert语句，写入到某个文件中，相当于数据备份。</p>
<p>我们获取到该文件，然后执行相应的insert语句，就能创建相关的表，并且写入数据了，这就相当于数据还原。</p>
<blockquote>
<p>mysqldump命令的语法为：mysqldump -h主机名 -P端口 -u用户名 -p密码 参数1,参数2.... &gt; 文件名称.sql</p>
</blockquote>`,r:{minutes:1.52,words:456},t:"MySQL - 备份",O:910,y:"a"}}],["/posts/Database/MySQL/mysql-x-optimize-bigtable-action.html",{loader:()=>o(()=>import("./mysql-x-optimize-bigtable-action.html-BHGNOiev.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 场景问题</h2>
<p>有个用户操作记录表6个月的数据量近2000万，保留最近一年的数据量达到4000万，查询速度极慢，日常卡死。严重影响业务</p>
<h2>2. 方案概述</h2>
<ul>
<li>
<p>方案一：优化现有mysql数据库</p>
<p>优点：不影响现有业务，源程序不需要修改代码，成本低</p>
<p>缺点：有优化瓶颈，数据量过亿就玩不动了</p>
</li>
<li>
<p>方案二：升级数据库类型</p>
<p>换一种100%兼容mysql的数据库</p>
<p>优点：不影响现有业务，源程序不需要修改代码，你几乎不需要做任何操作就能提升数据库性能</p>
<p>缺点：多花钱</p>
</li>
<li>
<p>方案三：一步到位，大数据解决方案，更换newsql/nosql数据库</p>
<p>优点：扩展性强，成本低，没有数据容量瓶颈</p>
<p>缺点：需要修改源程序代码</p>
</li>
</ul>`,r:{minutes:10.75,words:3224},t:"大表优化过程",y:"a"}}],["/posts/Database/MySQL/mysql-x-optimize-bigtable.html",{loader:()=>o(()=>import("./mysql-x-optimize-bigtable.html-ilKPtnQI.js"),[]),meta:{d:1729494189e3,c:["数据库"],g:null,e:`
<p>当MySQL单表记录数据过大，数据库的CRUD性能会明显下降，一些常见的优化措施</p>
<h2>1. 限制数据的范围</h2>
<p>务必禁止不带任何限制数据范围的查询语句</p>
<blockquote>
<p>例如：我们当用户在查询订单历史的时候，可以控制在一个范围内；</p>
</blockquote>
<h2>2. 读/写分离</h2>
<p>经典的数据库拆分方案，主库负责写，从库负责读</p>
<h2>3. 垂直分区</h2>
<p><strong>根据数据库里面的数据表的相关性进行拆分</strong></p>
<blockquote>
<p>例如：用户表中既有用户登录信息又有用户基本信息，可以将用户表拆分成两个单独的表，甚至放到单独的库做分库</p>
</blockquote>`,r:{minutes:2.81,words:843},t:"大表优化",y:"a"}}],["/posts/Database/MySQL/mysql-x-optimize-decompose-connection.html",{loader:()=>o(()=>import("./mysql-x-optimize-decompose-connection.html-CM_WmxLV.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 大连接查询分解好处</h2>
<p>将一个大连接查询分解成对每一个表进行一次单表查询，然后将结果在应用程序中进行关联，这样做的好处有:</p>
<ul>
<li><strong>让缓存更高效</strong>。对于连接查询，如果其中一个表发生变化，那么整个查询缓存就无法使用。而分解后的多个查询，即使其中一个表发生变化，对其它表的查询缓存依然可以使用。</li>
<li>分解成多个单表查询，这些<strong>单表查询的缓存结果更可能被其它查询使用到</strong>，从而减少冗余记录的查询。</li>
<li><strong>减少锁竞争</strong>；</li>
<li>在应用层进行连接，可以更容易对数据库进行拆分，从而<strong>更容易做到高性能和可伸缩</strong>。</li>
<li>查询本身效率也可能会有所提升。例如下面的例子中，使用 IN() 代替连接查询，可以让 MySQL 按照 ID 顺序进行查询，这可能比随机的连接要更高效。</li>
</ul>`,r:{minutes:1.18,words:354},t:"分解大连接查询",y:"a"}}],["/posts/Database/MySQL/mysql-x-optimize-execute.html",{loader:()=>o(()=>import("./mysql-x-optimize-execute.html-Bk7SZv8X.js"),[]),meta:{d:1729494189e3,c:["Mysql","数据库"],g:null,e:`
<p>本文会分析一个sql 语句在MySQL中的执行流程，包括</p>
<ul>
<li>sql的查询在Mysql内部会怎么流转</li>
<li>sql语句的更新是怎么完成的</li>
</ul>
<p>分析之前会先看Mysql的基础架构</p>
<ul>
<li>知道Mysql由哪些组件组成</li>
<li>这些组件有什么作用</li>
<li>可以帮助我们解决什么问题</li>
</ul>
<h2>1. MySQL 基础架构分析</h2>
<h3>1.1 MySQL 基本架构概览</h3>
<p>下图是Mysql 的一个简要架构图，从下面的可以清晰的看到用户的SQL语句在MySQL内部是如何执行的</p>`,r:{minutes:10.29,words:3088},t:"MySQL - 一条SQL语句执行过程",O:340,y:"a"}}],["/posts/Database/MySQL/mysql-x-optimize-explain.html",{loader:()=>o(()=>import("./mysql-x-optimize-explain.html-RNZ0ZPuP.js"),[]),meta:{d:1729494189e3,c:["Mysql","数据库"],g:null,e:`
<h2>1. 简介</h2>
<p>MySQL 提供了一个EXPLAIN 命令，他可以对 SELECT语句进行分析，并输出SELECT 执行的详细信息，以供开发人员针对性优化</p>
<p>EXPLAIN 命令语法十分简单，在SELECT 语句前加上EXPLAIN</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>EXPLAIN SELECT * FROM user_info WHERE id &lt;300;</span></span></code></pre>
</div>`,r:{minutes:11,words:3299},t:"MySQL - Explain使用分析",O:220,y:"a"}}],["/posts/Database/MySQL/mysql-x-optimize-like.html",{loader:()=>o(()=>import("./mysql-x-optimize-like.html-C9pxKRx5.js"),[]),meta:{d:1729494189e3,g:null,e:'\n<h2>1. 背景</h2>\n<p>在使用mysql进行模糊查询的时候，很自容的会用到 like 语句，通常情况下，在数量小的时候，不容易看出查询效率，<strong>但在数据量达到百万级，千万级的时候</strong>，查询的效率就很容易显现出来。这个时候查询的效率就显得很重要！</p>\n<p>一般情况下like模糊查询的写法为（field已建立索引）</p>\n<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>SELECT `column` FROM `table` WHERE `field` like `%keyword%`</span></span></code></pre>\n</div>',r:{minutes:1.77,words:532},t:"like模糊查询优化",y:"a"}}],["/posts/Database/MySQL/mysql-x-optimize-slow.html",{loader:()=>o(()=>import("./mysql-x-optimize-slow.html-DQonyKX2.js"),[]),meta:{d:1729494189e3,c:["Mysql","数据库"],g:null,e:`
<h2>1. 建索引的几大原则</h2>
<ol>
<li>最左前缀匹配原则，非常重要的原则，mysql会一直向右匹配直到遇到范围查询(<code>&gt;</code>、<code>&lt;</code>、<code>between</code>、<code>like</code>)就停止匹配，比如<code>a = 1 and b = 2 and c &gt; 3 and d = 4</code> 如果建立(a,b,c,d)顺序的索引，d是用不到索引的，如果建立(a,b,d,c)的索引则都可以用到，a,b,d的顺序可以任意调整。</li>
<li>=和in可以乱序，比如<code>a = 1 and b = 2 and c = 3</code> 建立(a,b,c)索引可以任意顺序，mysql的查询优化器会帮你优化成索引可以识别的形式</li>
<li>尽量选择区分度高的列作为索引，区分度的公式是<code>count(distinct col)/count(*)</code>，表示字段不重复的比例，比例越大我们扫描的记录数越少，唯一键的区分度是1，而一些状态、性别字段可能在大数据面前区分度就是0，那可能有人会问，这个比例有什么经验值吗？使用场景不同，这个值也很难确定，一般需要join的字段我们都要求是0.1以上，即平均1条扫描10条记录。</li>
<li>索引列不能参与计算，保持列“干净”，比如<code>from_unixtime(create_time) = ’2014-05-29’</code>就不能使用到索引，原因很简单，b+树中存的都是数据表中的字段值，但进行检索时，需要把所有元素都应用函数才能比较，显然成本太大。所以语句应该写成create_time = unix_timestamp(’2014-05-29’)。</li>
<li>尽量的扩展索引，不要新建索引。比如表中已经有a的索引，现在要加(a,b)的索引，那么只需要修改原来的索引即可。</li>
</ol>`,r:{minutes:11.62,words:3486},t:"MySQL - 慢查询优化思路与案例",O:230,y:"a"}}],["/posts/Database/MySQL/mysql-x-optimize-slow02.html",{loader:()=>o(()=>import("./mysql-x-optimize-slow02.html-C6TDHwxH.js"),[]),meta:{d:1729494189e3,c:["Mysql","数据库"],g:null,e:`
<h2>0. 前言</h2>
<p>日常开发中，我们经常会遇到<strong>数据库慢查询</strong>。那么导致数据慢查询都有哪些常见的原因呢？今天田螺哥就跟大家聊聊导致MySQL慢查询的12个常见原因，以及对应的解决方法。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403130934295.png" alt="image-20221204221904146" tabindex="0" loading="lazy"><figcaption>image-20221204221904146</figcaption></figure>`,r:{minutes:27.27,words:8182},t:"MySQL - 慢查询的12个原因",O:211,y:"a"}}],["/posts/Database/MySQL/mysql-x-optimize-slow2.html",{loader:()=>o(()=>import("./mysql-x-optimize-slow2.html-CKJB3ssB.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p>我们在写程序的时候如何定位并优化慢查询呢？具体场景具体分析，大体思路如下</p>
<ol>
<li>根据慢日志定位慢查询sql</li>
<li>使用explain等工具分析sql</li>
<li>修改sql或者尽量让sql走索引</li>
</ol>
<h2>2. 根据慢日志定位慢查询sql</h2>
<ol>
<li>
<p>查看慢日志配置情况</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">show VARIABLES </span><span style="color:#C678DD;--shiki-dark:#C678DD">like</span><span style="color:#98C379;--shiki-dark:#98C379"> '%query%'</span></span></code></pre>
</div><p>结果如下</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403130932512.png" alt="image-20210405231229429" tabindex="0" loading="lazy"><figcaption>image-20210405231229429</figcaption></figure>
</li>
</ol>`,r:{minutes:1.37,words:411},t:"如何调优慢查询SQL",y:"a"}}],["/posts/Database/MySQL/mysql-x-optimize-sql.html",{loader:()=>o(()=>import("./mysql-x-optimize-sql.html-ChhTtvyP.js"),[]),meta:{d:1729494189e3,g:null,e:`
<blockquote>
<p>性能优化: 从大方向说优化有几种</p>
<ol>
<li>数据库结构设计和SQL语句优化</li>
<li>表结构的优化</li>
<li>索引的优化</li>
<li>sql 的优化</li>
<li>数据库存储引擎的选择和参数配置</li>
<li>系统选择及优化</li>
<li>硬件升级</li>
</ol>
<p>优化顺序也应该由上到下，越上面效果越明显</p>
</blockquote>
<h2>1. 我常使用的规范</h2>
<h2>2. 网上建议</h2>
<h3>2.1 数据库命名规范</h3>
<ul>
<li>所有数据库对象名称必须使用小写字母并用下划线分割</li>
<li>所有数据库对象名称禁止使用 MySQL 保留关键字（如果表名中包含关键字查询时，需要将其用单引号括起来）</li>
<li>数据库对象的命名要能做到见名识意，并且最后不要超过 32 个字符</li>
<li>临时库表必须以 tmp_为前缀并以日期为后缀，备份表必须以 bak_为前缀并以日期 (时间戳) 为后缀</li>
<li>所有存储相同数据的列名和列类型必须一致（一般作为关联列，如果查询时关联列类型不一致会自动进行数据类型隐式转换，会造成列上的索引失效，导致查询效率降低）</li>
</ul>`,r:{minutes:17.25,words:5174},t:"MySQL高性能优化规范建议",y:"a"}}],["/posts/Database/MySQL/mysql-x-sharding-detail.html",{loader:()=>o(()=>import("./mysql-x-sharding-detail.html-CTJf6oDM.js"),[]),meta:{d:1729494189e3,c:["Mysql","数据库"],g:null,e:`
<h2>0. 前言</h2>
<ol>
<li>什么是分库分表</li>
<li>为什么需要分库分表</li>
<li>如何分库分表</li>
<li>什么时候开始考虑分库分表</li>
<li>分库分表会导致哪些问题</li>
<li>分库分表中间件简介</li>
</ol>
<h2>1. 什么是分库分表</h2>
<p><strong>分库</strong>：就是一个数据库分成多个数据库，部署到不同机器。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403130931552.png" alt="image-20220705204426671" tabindex="0" loading="lazy"><figcaption>image-20220705204426671</figcaption></figure>`,r:{minutes:9.08,words:2724},t:"MySQL - 分表分库详解",O:311,y:"a"}}],["/posts/Database/MySQL/mysql-x-sharding-interview.html",{loader:()=>o(()=>import("./mysql-x-sharding-interview.html-Dt_7P8yf.js"),[]),meta:{d:1729494189e3,c:["Mysql","数据库"],g:null,e:`
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403130930689.png" alt="image-20221015102643032" tabindex="0" loading="lazy"><figcaption>image-20221015102643032</figcaption></figure>
<h2>1. 为什么要进行分库分表？</h2>
<p><strong>面试官</strong>：小伙子，看到你的简历上面写了项目中有对MySQL进行分库分表，为什么要进行分库分表？</p>`,r:{minutes:4.57,words:1371},t:"MySQL - 分表分库（面试场景切入）",O:312,y:"a"}}],["/posts/Database/MySQL/mysql-x-slowlog.html",{loader:()=>o(()=>import("./mysql-x-slowlog.html-DYYRf6PQ.js"),[]),meta:{d:1729494189e3,c:["数据库","Mysql"],g:null,e:`
<h2>1. 简介</h2>
<p>慢日志全称为慢查询日志（Slow Query Log），主要用来记录在 MySQL 中执行时间超过指定时间的 SQL 语句。通过慢查询日志，可以查找出哪些语句的执行效率低，以便进行优化。</p>
<blockquote>
<p>开启慢查询日志是有代价的（跟 bin log、optimizer-trace 一样），所以它默认是关闭的</p>
</blockquote>
<h3>1.1 获取慢日志开启状态</h3>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>show variables like 'slow_query%';</span></span></code></pre>
</div>`,r:{minutes:3.9,words:1170},t:"MySQL - 慢日志",O:920,y:"a"}}],["/posts/Database/MySQL/mysql-x-specification.html",{loader:()=>o(()=>import("./mysql-x-specification.html-B_qxRSqD.js"),[]),meta:{d:1729494189e3,c:["数据库","Mysql"],g:null,e:`
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403130938775.png" alt="image-20221014231941357" tabindex="0" loading="lazy"><figcaption>image-20221014231941357</figcaption></figure>
<blockquote>
<p>16条MySQL使用规范，减少80%问题.</p>
<p>合理规范的使用MySQL，可以大大减少开发工作量和线上问题，并提升SQL查询性能。</p>
</blockquote>`,r:{minutes:5.2,words:1560},t:"MySQL - MySQL使用规范",O:510,y:"a"}}],["/posts/Database/MySQL/mysql-y-lock-category.html",{loader:()=>o(()=>import("./mysql-y-lock-category.html-WdXfq1DJ.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 前提概念</h2>
<h3>1.1 数据库并发的三种场景</h3>
<p><strong>数据库并发场景有三种，分别为：</strong></p>
<ul>
<li><code>读-读</code>：不存在任何问题，也不需要并发控制</li>
<li><code>读-写</code>：有隔离性问题，可能遇到脏读，幻读，不可重复读</li>
<li><code>写-写</code>：可能存更新丢失问题，比如第一类更新丢失，第二类更新丢失</li>
</ul>
<h3>1.2 乐观锁和悲观锁的澄清</h3>
<ul>
<li>无论是悲观锁还是乐观锁，他们本质上不是数据库中具体的锁概念，而是我们定义出来，用来描述两种类别的锁的思想。所以有了设计的分类，我们就可以通过这个分类去对数据库中具体的锁进行分门别类；</li>
<li>不过数据库中的乐观锁更倾向叫乐观并发控制（OCC），悲观锁叫悲观并发控制（PCC），还有区别于乐观悲观锁的一种控制叫MVCC，多版本并发控制</li>
<li>也不要把乐观锁和悲观锁与数据库中的行锁，表锁，排他锁，共享锁混为一谈，他们并不是一个维度的东西；前者是一个锁思想，可以将后者根据是否进行趋近于乐观或悲观锁的思想进行分类</li>
<li>乐观锁和悲观锁的概念不仅仅存在于数据库领域，可以说存在线程安全，存在并发的场景几乎都有乐观锁和悲观锁的适用场景，比如Java中也有乐观锁和悲观锁思想的具体实现；但不同领域的乐观和悲观锁的具体实现都不尽相同，要解决的问题也可能有所不一样</li>
</ul>`,r:{minutes:13.49,words:4047},t:"MySQL的乐观锁，悲观锁与MVCC",y:"a"}}],["/posts/Database/MySQL/mysql-y-lock-mvvc.html",{loader:()=>o(()=>import("./mysql-y-lock-mvvc.html-Bg_5-5hZ.js"),[]),meta:{d:1729494189e3,c:["Mysql","数据库"],g:null,e:`
<h2>1. 前提概要</h2>
<h3>1.1 什么是 MVCC ?</h3>
<blockquote>
<p>MVCC<br>
MVCC，全称 Multi-Version Concurrency Control ，即多版本并发控制。MVCC 是一种并发控制的方法，一般在数据库管理系统中，实现对数据库的并发访问，在编程语言中实现事务内存。</p>
</blockquote>
<p>MVCC 在 MySQL InnoDB 中的实现主要是为了提高数据库并发性能，用更好的方式去处理读-写冲突，做到即使有读写冲突时，也能做到不加锁，非阻塞并发读</p>
<h3>1.2 什么是当前读和快照读？</h3>`,r:{minutes:15.2,words:4560},t:"MySQL - MySQL InnoDB的MVCC实现机制",O:330,y:"a"}}],["/posts/Database/MySQL/mysql-y-lock-overview.html",{loader:()=>o(()=>import("./mysql-y-lock-overview.html-BM4bs18j.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 锁维度</h2>
<p>锁有好几种维度</p>
<h3>1.1 类型维度</h3>
<ul>
<li>
<p>共享锁（读锁/S锁）</p>
</li>
<li>
<p>排他锁（写锁/X 锁）</p>
<p>类型细分</p>
<ul>
<li>意向共享锁</li>
<li>意向排他（互斥）锁</li>
</ul>
</li>
<li>
<p>悲观锁（使用锁，既for update）</p>
</li>
<li>
<p>乐观锁（使用版本号字段，类似 CAS 机制，既用户自己控制。缺点：并发很高的时候，多了很多无用的重试）</p>
</li>
</ul>
<h3>1.2 锁的粒度（粒度维度）</h3>`,r:{minutes:1.35,words:406},t:"锁机制",y:"a"}}],["/posts/Database/MySQL/mysql-y-lock.html",{loader:()=>o(()=>import("./mysql-y-lock.html-CJCcGBnA.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. MyISAM 和InnoDB 存储引擎使用的锁</h2>
<ul>
<li>MyISAM 采用的是表级锁（table-level locking）</li>
<li>InnoDB 支持行级锁（row-level locking）和表级锁，默认行为是行级锁</li>
</ul>
<h2>2.表级锁和行级锁对比</h2>
<ul>
<li>
<p>表级锁</p>
<p>MySQL 中锁定 <strong>粒度最大</strong>的一种锁，对当前<strong>操作的整张表加锁</strong></p>
<ul>
<li>优势
<ul>
<li>实现简单，资源消耗少，加锁快</li>
<li>不会出现死锁</li>
</ul>
</li>
<li>缺点
<ul>
<li>其锁粒度最大，触发锁冲突的概率最高</li>
<li>并发度最低</li>
</ul>
</li>
</ul>
</li>
<li>
<p>行级锁</p>
<p>MySQL 中锁定 <strong>粒度最小</strong>的一种锁，只针对当前<strong>操作的行加锁</strong></p>
<ul>
<li>优势
<ul>
<li>大大减少数据库操作的冲突</li>
<li>加锁粒度小，并发度高</li>
</ul>
</li>
<li>缺点
<ul>
<li>加锁的开销大</li>
<li>加锁慢</li>
<li>会出现死锁</li>
</ul>
</li>
</ul>
</li>
</ul>`,r:{minutes:1.4,words:419},t:"锁机制锁",y:"a"}}],["/posts/Database/MySQL/mysql-y-statistics-group.html",{loader:()=>o(()=>import("./mysql-y-statistics-group.html-BIBPtlcl.js"),[]),meta:{d:1729494189e3,c:["数据库"],g:null,e:`
<h2>1. 背景</h2>
<p>我们在用Mysql抽取数据时候，经常需要按照天、周、月等不同的粒度对数据进行分组统计。而我们的时间可能是“2017/12/5 0:0:0”这种准确的时间。所以在进行分组之前我们需要对时间进行一下处理。</p>
<h2>2. DATE_FORMAT</h2>
<p><strong>DATE_FORMAT</strong>是MySQL内置的一个函数，作用是以不同的格式显示日期/时间数据。具体的语法如下：</p>
<p>DATE_FORMAT(date,format)，其中</p>
<p>date：合法的日期。format：规定日期/时间的输出格式，其中format可使用的格式见文末链接。</p>`,r:{minutes:3.06,words:919},t:"Mysql按日、周、月进行分组统计",y:"a"}}],["/posts/Database/MySQL/mysql-z-backup.html",{loader:()=>o(()=>import("./mysql-z-backup.html-Dyd_M1gN.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 冷备份</h2>
<h3>1.1 特点</h3>
<ul>
<li>离线off</li>
<li>慢</li>
<li>时间点上恢复</li>
</ul>
<h3>1.2 冷备份概念</h3>
<p>冷备份发生在数据库已经正常关闭的情况下，当正常关闭时会提供给我们一个完整的数据库。冷备份是将关键性文件拷贝到另外位置的一种说法。对于备份数据库信息而言，冷备份是最快和最安全的方法</p>
<p>简述：<strong>离线（没有新的数据来）复制一份保存，有事就直接用这备份来恢复。</strong></p>
<h3>1.3 冷备份的优点</h3>
<ol>
<li>非常快速的备份方法（只需拷贝文件）</li>
<li>容易归档（简单拷贝即可）</li>
<li>容易恢复到某个时间点上（只需将文件拷贝回去）</li>
<li>能与归档方法相结合，作数据库”最新状态“的恢复</li>
<li>低度维护，高度安全</li>
</ol>`,r:{minutes:2.31,words:694},t:"热备份和冷备份概念",y:"a"}}],["/posts/Database/MySQL/sql-mysql-b-log.html",{loader:()=>o(()=>import("./sql-mysql-b-log.html-CrHO7dr_.js"),[]),meta:{d:1729494189e3,c:["数据库","Mysql"],g:null,e:`
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403130943302.png" alt="image-20221014223434777" tabindex="0" loading="lazy"><figcaption>image-20221014223434777</figcaption></figure>
<h2><strong>1. 背景</strong></h2>
<p>MySQL实现事务、崩溃恢复、集群的主从复制，底层都离不开日志，所以日志是MySQL的精华所在。只有了解MySQL日志，才算是彻底搞懂MySQL。</p>`,r:{minutes:4.65,words:1395},t:"MySQL - 三大日志(Redo Log、Undo Log、Bin Log)",O:320,y:"a"}}],["/posts/Database/MySQL/sql-mysql-b-tree.html",{loader:()=>o(()=>import("./sql-mysql-b-tree.html-DyTA1WQ6.js"),[]),meta:{d:1729494189e3,c:["数据库","Mysql"],g:null,e:`
<h2>1. B+ Tree 原理</h2>
<h3>1.1 数据结构</h3>
<p>B Tree 指的是 Balance Tree，也就是平衡树。平衡树是一颗查找树，并且所有叶子节点位于同一层。</p>
<p>B+ Tree 是基于 B Tree 和叶子节点顺序访问指针进行实现，它具有 B Tree 的平衡性，并且通过顺序访问指针来提高区间查询的性能。</p>
<p>在 B+ Tree 中，一个节点中的 key 从左到右非递减排列，如果某个指针的左右相邻 key 分别是 keyi 和 keyi+1，且不为 null，则该指针指向节点的所有 key 大于等于 keyi 且小于等于 keyi+1。</p>`,r:{minutes:7.56,words:2268},t:"MySQL - 索引(B+树)",O:110,y:"a"}}],["/posts/Database/MySQL/sql-mysql-character-set.html",{loader:()=>o(()=>import("./sql-mysql-character-set.html-CCjs3IR-.js"),[]),meta:{d:1729494189e3,c:["MySql","数据库"],g:null,e:`
<h2>1. 是什么</h2>
<ul>
<li>
<p>字符集<code>character set</code>）：<strong>用来定义存储字符串的方式</strong></p>
<p>定义了字符以及字符编码</p>
<p>字符集分为几个等级： server, database, table, 和 column 。</p>
</li>
<li>
<p>排序规则（<code>collations</code>）：<strong>用来定义比较字符串的方式</strong></p>
<p>定义了字符的比较规则</p>
</li>
</ul>
<p>MySQL采用类似继承的方式制定字符集默认值，每个数据库每张表都有自己的默认值，他们逐层继承。如：某个库中所有表的默认字符集将是该数据库所指定的字符集（这些表在没有指定字符集的情况下，才会采用默认字符集）</p>`,r:{minutes:2.56,words:769},t:"MySQL基础-字符集与排序规则",O:920,y:"a"}}],["/posts/Database/MySQL/sql-mysql-cover-index.html",{loader:()=>o(()=>import("./sql-mysql-cover-index.html-CAMMzAuH.js"),[]),meta:{d:1729494189e3,c:["数据库","Mysql"],g:null,e:`
<h2>1. 覆盖索引</h2>
<p>覆盖索引：<strong>SQL只需要通过索引就可以返回查询所需要的数据，而不必通过二级索引查到主键之后再去查询数据。</strong></p>
<blockquote>
<p>首先要了解覆盖索引之前，你必须要了解</p>
<ul>
<li>
<p>什么是聚簇索引和非聚簇索引，</p>
</li>
<li>
<p>回表，覆盖索引其实就是跟到底需不需要回表有直接的关系的。</p>
</li>
</ul>
</blockquote>
<h3>1.1 什么是回表?</h3>
<p>什么是回表呢? 通俗的讲就是，如果索引的列在 select 所需获得的列中 或者根据一次索引查询就能获得记录就不需要回表，<strong>如果 select 所需获得列中有大量的非索引列，索引就需要到表中找到相应的列的信息，这就叫回表</strong>。只有非聚簇索引是需要回表的，所以如果你懂得非聚簇索引的存储的结构，你自然就知道为啥需要回表了。</p>`,r:{minutes:3.22,words:967},t:"MySQL - 覆盖索引",O:110,y:"a"}}],["/posts/Database/MySQL/sql-mysql-devide.html",{loader:()=>o(()=>import("./sql-mysql-devide.html-Cd-TyT4D.js"),[]),meta:{d:1729494189e3,c:["Mysql","数据库"],g:null,e:`
<h2>1. 水平切分</h2>
<p>水平切分又称为 Sharding，它是将同一个表中的记录拆分到多个结构相同的表中。</p>
<p>当一个表的数据不断增多时，Sharding 是必然的选择，它可以将数据分布到集群的不同节点上，从而缓解单个数据库的压力。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410181455345.png" alt="image-20220630203012598.png" tabindex="0" loading="lazy"><figcaption>image-20220630203012598.png</figcaption></figure>`,r:{minutes:1.75,words:526},t:"MySQL - 分表分库",O:310,y:"a"}}],["/posts/Database/MySQL/sql-mysql-engine.html",{loader:()=>o(()=>import("./sql-mysql-engine.html-DWw-m7hf.js"),[]),meta:{d:1729494189e3,c:["数据库","Mysql"],g:null,e:`
<blockquote>
<p>本文主要介绍MySQL中的存储引擎。</p>
</blockquote>
<h2>1. InnoDB</h2>
<p>是 MySQL 默认的事务型存储引擎，<strong>只有在需要它不支持的特性时，才考虑使用其它存储引擎</strong>。</p>
<p>实现了四个标准的隔离级别，默认级别是可重复读(REPEATABLE READ)。在可重复读隔离级别下，通过多版本并发控制(MVCC)+ 间隙锁(Next-Key Locking)防止幻影读。</p>
<p>主索引是聚簇索引，在索引中保存了数据，从而避免直接读取磁盘，因此对查询性能有很大的提升。</p>
<p>内部做了很多优化，包括从磁盘读取数据时采用的可预测性读、能够加快读操作并且自动创建的自适应哈希索引、能够加速插入操作的插入缓冲区等。</p>`,r:{minutes:2.73,words:820},t:"MySQL - 存储引擎",O:30,y:"a"}}],["/posts/Database/MySQL/sql-mysql-high-availability.html",{loader:()=>o(()=>import("./sql-mysql-high-availability.html-CDObyHAa.js"),[]),meta:{d:1729494189e3,c:["Mysql","数据库"],g:null,e:`
<h2>1. 概述</h2>
<p>我们在考虑MySQL数据库的高可用的架构时，主要要考虑如下几方面：</p>
<ul>
<li>如果数据库发生了宕机或者意外中断等故障，能尽快恢复数据库的可用性，尽可能的减少停机时间，保证业务不会因为数据库的故障而中断。</li>
<li>用作备份、只读副本等功能的非主节点的数据应该和主节点的数据实时或者最终保持一致。</li>
<li>当业务发生数据库切换时，切换前后的数据库内容应当一致，不会因为数据缺失或者数据不一致而影响业务。</li>
</ul>
<p>关于对高可用的分级在这里我们不做详细的讨论，这里只讨论常用高可用方案的优缺点以及高可用方案的选型。</p>`,r:{minutes:9.68,words:2903},t:"MySQL - MySQL高可用方案",O:326,y:"a"}}],["/posts/Database/MySQL/sql-mysql-mha.html",{loader:()=>o(()=>import("./sql-mysql-mha.html-DPB5K9SW.js"),[]),meta:{d:1729494189e3,c:["Mysql","数据库"],g:null,e:`
<h2>1.简介</h2>
<blockquote>
<p><strong>MHA是什么？</strong><br>
MHA是由日本Mysql yoshinorim专家（原就职于DeNA现就职于FaceBook）用Perl写的一套Mysql故障切换方案，来保障数据库的高可用性，它的功能是能在10-30s之内实现主Mysql故障转移（failover），MHA故障转移可以很好的帮我们解决从库数据的一致性问题，同时最大化挽回故障发生后数据的一致性。<br>
官方网站：<a href="https://code.google.com/p/mysql-master-ha/" target="_blank" rel="noopener noreferrer">https://code.google.com/p/mysql-master-ha/</a></p>
</blockquote>`,r:{minutes:10.97,words:3290},t:"MySQL - MySQL高可用-MHA方案",O:327,y:"a"}}],["/posts/Database/MySQL/sql-mysql-overview.html",{loader:()=>o(()=>import("./sql-mysql-overview.html-G2tJMH0U.js"),[]),meta:{d:1729494189e3,c:["Mysql","数据库"],g:null,e:`
<h2>知识体系</h2>
<p><em>相关文章</em></p>
<blockquote>
<p>** 掌握MySQL数据库**：在理解了SQL语言后，开始进阶MySQL相关的知识点吧（在开始前，建议你完整看一本MySQl相关的书，作为你的知识体系基础）；这里不会讲如何安装MySQL或者如何使用，因为这是容易的，而是会关注一些有助于我们构建MySQL相关知识体系的知识点等。</p>
</blockquote>
<ul>
<li>
<p><a href="https://pdai.tech/md/db/sql-mysql/sql-mysql-theory.html" target="_blank" rel="noopener noreferrer">MySQL - 数据类型</a></p>
<ul>
<li>本文主要整理MySQL中数据字段类型。</li>
</ul>
</li>
<li>
<p><a href="https://pdai.tech/md/db/sql-mysql/sql-mysql-engine.html" target="_blank" rel="noopener noreferrer">MySQL - 存储引擎</a></p>
<ul>
<li>本文主要介绍MySQL中的存储引擎。</li>
</ul>
</li>
<li>
<p><a href="https://pdai.tech/md/db/sql-mysql/sql-mysql-b-tree.html" target="_blank" rel="noopener noreferrer">MySQL - 索引(B+树)</a></p>
</li>
<li>
<p><a href="https://pdai.tech/md/db/sql-mysql/sql-mysql-performance.html" target="_blank" rel="noopener noreferrer">MySQL - 性能优化</a></p>
</li>
<li>
<p><a href="https://pdai.tech/md/db/sql-mysql/sql-mysql-devide.html" target="_blank" rel="noopener noreferrer">MySQL - 分表分库</a></p>
</li>
<li>
<p><a href="https://pdai.tech/md/db/sql-mysql/sql-mysql-slave.html" target="_blank" rel="noopener noreferrer">MySQL - 主从复制与读写分离</a></p>
</li>
<li>
<p><a href="https://pdai.tech/md/db/sql-mysql/sql-mysql-execute.html" target="_blank" rel="noopener noreferrer">MySQL - 一条 SQL 的执行过程详解</a></p>
<ul>
<li>天天和数据库打交道，一天能写上几十条 SQL 语句，但你知道我们的系统是如何和数据库交互的吗？MySQL 如何帮我们存储数据、又是如何帮我们管理事务？....是不是感觉真的除了写几个 「select * from dual」外基本脑子一片空白？这篇文章就将带你走进 MySQL 的世界，让你彻底了解系统到底是如何和 MySQL 交互的，MySQL 在接受到我们发送的 SQL 语句时又分别做了哪些事情。</li>
</ul>
</li>
<li>
<p><a href="https://pdai.tech/md/db/sql-mysql/sql-mysql-sql-parser.html" target="_blank" rel="noopener noreferrer">MySQL - MySQL中SQL是如何解析的</a></p>
<ul>
<li>前文我们分享了一篇文章学习一条SQL是如何在数据库中执行的，其中有一个阶段是SQL的解析。这个阶段对于更全面的SQL优化功能；多维度的慢查询分析；辅助故障分析等都有很大帮助。本文主要介绍一篇美团技术团队关于SQL解析和应用的文章，希望能给一些启示。</li>
</ul>
</li>
<li>
<p><a href="https://pdai.tech/md/db/sql-mysql/sql-mysql-index-improve-mt.html" target="_blank" rel="noopener noreferrer">大厂实践 - 美团: MySQL索引原理及慢查询优化</a></p>
<ul>
<li>目前常用的 SQL 优化方式包括但不限于：业务层优化、SQL逻辑优化、索引优化等。其中索引优化通常通过调整索引或新增索引从而达到 SQL 优化的目的，索引优化往往可以在短时间内产生非常巨大的效果。本文旨在以开发工程师的角度来解释数据库索引的原理和如何优化慢查询。</li>
</ul>
</li>
<li>
<p><a href="https://pdai.tech/md/db/sql-mysql/sql-mysql-sql-costmodel-mt.html" target="_blank" rel="noopener noreferrer">大厂实践 - 美团: 基于代价的慢查询优化建议</a></p>
<ul>
<li>前文我们介绍了优化慢查询最直接有效的方法就是选用一个查询效率高的索引, 也介绍了索引优化工具SQLAdvisor。关于高效率的索引推荐，主要在日常工作中，基于经验规则的推荐随处可见，对于简单的SQL，如<code>select * from sync_test1 where name like 'Bobby%'</code>，直接添加索引IX(name) 就可以取得不错的效果；但对于稍微复杂点的SQL，如<code>select * from sync_test1 where name like 'Bobby%' and dt &gt; '2021-07-06'</code>，到底选择IX(name)、IX(dt)、IX(dt,name) 还是IX(name,dt)，该方法也无法给出准确的回答。更别说像多表Join、子查询这样复杂的场景了。所以采用基于代价的推荐来解决该问题会更加普适，因为基于代价的方法使用了和数据库优化器相同的方式，去量化评估所有的可能性，选出的是执行SQL耗费代价最小的索引。</li>
</ul>
<h2>参考文章</h2>
<p><a href="https://pdai.tech/md/db/sql-mysql/sql-mysql-sql-costmodel-mt.html" target="_blank" rel="noopener noreferrer"><strong>大厂实践 - 美团: 基于代价的慢查询优化建议</strong></a></p>
</li>
</ul>`,r:{minutes:3.22,words:965},t:"MySQL知识体系详解",O:10,y:"a"}}],["/posts/Database/MySQL/sql-mysql-performance.html",{loader:()=>o(()=>import("./sql-mysql-performance.html-vL9pdDOT.js"),[]),meta:{d:1729494189e3,c:["Mysql","数据库"],g:null,e:`
<h2>1. 使用 Explain 进行分析</h2>
<p>Explain 用来分析 SELECT 查询语句，开发人员可以通过分析 Explain 结果来优化查询语句。</p>
<p>比较重要的字段有:</p>
<ul>
<li>
<p>select_type : 查询类型，有简单查询、联合查询、子查询等</p>
</li>
<li>
<p>key : 使用的索引</p>
</li>
<li>
<p>rows : 扫描的行数</p>
<p>rows扫描的行数，越小越好</p>
</li>
<li>
<p>type：使用索引的类型</p>
<p>通过type的值判断查询是否高效，判断此次是全表扫描还是索引扫描</p>
<ul>
<li>ALL &lt; index &lt; range ~ index_merge &lt; ref &lt; eq_ref &lt; const &lt; system</li>
</ul>
</li>
</ul>`,r:{minutes:2.46,words:739},t:"MySQL - 性能优化",O:210,y:"a"}}],["/posts/Database/MySQL/sql-mysql-slave.html",{loader:()=>o(()=>import("./sql-mysql-slave.html-BAFTeDt4.js"),[]),meta:{d:1729494189e3,c:["Mysql","数据库"],e:`
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/20221014225826741.png" alt="20221014225826741" tabindex="0" loading="lazy"><figcaption>20221014225826741</figcaption></figure>
<h2>1. <strong>MySQL主从同步实现方式</strong></h2>
<p>MySQL主从同步是基于Bin Log实现的，而Bin Log记录的是原始SQL语句。</p>
<p><strong>Bin Log</strong>共有三种日志格式，可以<strong>binlog_format</strong>配置参数指定。</p>`,r:{minutes:4.52,words:1357},t:"MySQL - 主从复制原理",O:325,y:"a"}}],["/posts/Database/MySQL/sql-mysql-theory.html",{loader:()=>o(()=>import("./sql-mysql-theory.html-Bwtyip8m.js"),[]),meta:{d:1729494189e3,c:["Mysql","数据库"],g:null,e:`
<h2>1. 字段类型</h2>
<h3>1.1 整型</h3>
<p>TINYINT, SMALLINT, MEDIUMINT, INT, BIGINT 分别使用 8, 16, 24, 32, 64 位存储空间，一般情况下越小的列越好。</p>
<p>INT(11) 中的数字只是规定了交互工具显示字符的个数，对于存储和计算来说是没有意义的。</p>
<h3>1.2 浮点数</h3>
<p>FLOAT 和 DOUBLE 为浮点类型，DECIMAL 为高精度小数类型。CPU 原生支持浮点运算，但是不支持 DECIMAl 类型的计算，因此 DECIMAL 的计算比浮点类型需要更高的代价。</p>`,r:{minutes:5.75,words:1724},t:"MySQL - 数据类型",O:20,y:"a"}}],["/posts/Database/MySQL/sql-mysql-transaction-interview.html",{loader:()=>o(()=>import("./sql-mysql-transaction-interview.html-8uj9bN4e.js"),[]),meta:{d:1729494189e3,c:["数据库","Mysql"],g:null,e:`
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403130947936.png" alt="image-20221015100314961" tabindex="0" loading="lazy"><figcaption>image-20221015100314961</figcaption></figure>
<h2>1. 事务的特性</h2>
<p><strong>面试官：</strong> 看你简历上面写着精通MySQL，我先问你事务的特性是什么？</p>
<blockquote>
<p>老生常谈，这个还有谁不会背的吗？</p>
</blockquote>`,r:{minutes:4.79,words:1437},t:"MySQL - 事务（面试场景切入）",O:41,y:"a"}}],["/posts/Database/MySQL/sql-mysql-transaction.html",{loader:()=>o(()=>import("./sql-mysql-transaction.html-_5AZz1cu.js"),[]),meta:{d:1729494189e3,c:["数据库","Mysql"],g:null,e:`
<h2>1. 什么是事务</h2>
<p><strong>事务就是逻辑上的一组操作，要么都执行，要么都不执行</strong></p>
<h3>1.1 案例</h3>
<p>事务最经典例子转账：假设小明要给小红转账1000元，这个转账会涉及到两个关键操作</p>
<ul>
<li>将小明的余额减少1000元</li>
<li>将小红的余额增加1000元</li>
</ul>
<p>万一在这两个操作之间突然出现错误比如银行系统奔溃，导致小明余额减少而小红的余额没有增加，这就不对了。<br>
事务就是保证这两个关键操作要么都成功，要么都失败</p>
<h2>2. 事务的四大特性（ACID）</h2>`,r:{minutes:7.22,words:2165},t:"MySQL - 事务",O:40,y:"a"}}],["/posts/Database/MySQL/sql-x-basic.html",{loader:()=>o(()=>import("./sql-x-basic.html-CUbrZVwh.js"),[]),meta:{d:171007194e4,l:"2024年3月10日",c:["数据库"],g:["MySQL"],e:`
<h2>1. 基础</h2>
<p>模式定义了数据如何存储、存储什么样的数据以及数据如何分解等信息，数据库和表都有模式。</p>
<p>主键的值不允许修改，也不允许复用(不能使用已经删除的主键值赋给新数据行的主键)。</p>
<p>SQL(Structured Query Language)，标准 SQL 由 ANSI 标准委员会管理，从而称为 ANSI SQL。各个 DBMS 都有自己的实现，如 PL/SQL、Transact-SQL 等。</p>
<p>SQL 语句不区分大小写，但是数据库表名、列名和值是否区分依赖于具体的 DBMS 以及配置。</p>
<h3>1.1 SQL 支持以下三种注释:</h3>`,r:{minutes:13.39,words:4016},t:"15、SQL语法基础",y:"a"}}],["/posts/Database/MySQL/sql-x-leetcode.html",{loader:()=>o(()=>import("./sql-x-leetcode.html-5cAluueu.js"),[]),meta:{d:171007194e4,l:"2024年3月10日",c:["数据库"],g:["MySQL"],e:`
<h3>595. Big Countries</h3>
<p><a href="https://leetcode.com/problems/big-countries/description/" target="_blank" rel="noopener noreferrer">https://leetcode.com/problems/big-countries/description/</a></p>
<h4>Description</h4>
<div class="language-html" data-ext="html" data-title="html"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">+-----------------+------------+------------+--------------+---------------+</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">| name            | continent  | area       | population   | gdp           |</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">+-----------------+------------+------------+--------------+---------------+</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">| Afghanistan     | Asia       | 652230     | 25500100     | 20343000      |</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">| Albania         | Europe     | 28748      | 2831741      | 12960000      |</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">| Algeria         | Africa     | 2381741    | 37100000     | 188681000     |</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">| Andorra         | Europe     | 468        | 78115        | 3712000       |</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">| Angola          | Africa     | 1246700    | 20609294     | 100990000     |</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">+-----------------+------------+------------+--------------+---------------+</span></span></code></pre>
</div>`,r:{minutes:7.49,words:2248},t:"16、Leetcode中SQL题目",y:"a"}}],["/posts/Database/MySQL/sql-x-optimization.html",{loader:()=>o(()=>import("./sql-x-optimization.html-3bDsWy7Y.js"),[]),meta:{d:171007194e4,l:"2024年3月10日",c:["数据库"],g:["MySQL"],e:`
<h2>1. 负向查询不能使用索引</h2>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">select</span><span style="color:#C678DD;--shiki-dark:#C678DD"> name</span><span style="color:#C678DD;--shiki-dark:#C678DD"> from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> user </span><span style="color:#C678DD;--shiki-dark:#C678DD">where</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> id </span><span style="color:#C678DD;--shiki-dark:#C678DD">not</span><span style="color:#C678DD;--shiki-dark:#C678DD"> in</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span></code></pre>
</div>`,r:{minutes:1.58,words:473},t:"17、SQL语句优化",y:"a"}}],["/posts/Database/MySQL/sql-x-practice.html",{loader:()=>o(()=>import("./sql-x-practice.html-5WTGGqeL.js"),[]),meta:{d:171007194e4,l:"2024年3月10日",c:["数据库"],g:["MySQL"],e:`
<h2>1. 表结构</h2>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403131053741.png" alt="image-20220602221019474" tabindex="0" loading="lazy"><figcaption>image-20220602221019474</figcaption></figure>
<h2>2. 插入数据</h2>
<div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">DROP</span><span style="color:#C678DD;--shiki-dark:#C678DD"> TABLE</span><span style="color:#C678DD;--shiki-dark:#C678DD"> IF</span><span style="color:#C678DD;--shiki-dark:#C678DD"> EXISTS</span><span style="color:#98C379;--shiki-dark:#98C379"> \`COURSE\`</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">CREATE</span><span style="color:#C678DD;--shiki-dark:#C678DD"> TABLE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> \`</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">COURSE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">\` (</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  \`CNO\`</span><span style="color:#C678DD;--shiki-dark:#C678DD"> varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">NOT NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  \`CNAME\`</span><span style="color:#C678DD;--shiki-dark:#C678DD"> varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">10</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">NOT NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  \`TNO\`</span><span style="color:#C678DD;--shiki-dark:#C678DD"> varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">10</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">NOT NULL</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) ENGINE</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">InnoDB </span><span style="color:#C678DD;--shiki-dark:#C678DD">DEFAULT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> CHARSET</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">utf8;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">INSERT INTO</span><span style="color:#98C379;--shiki-dark:#98C379"> \`COURSE\`</span><span style="color:#C678DD;--shiki-dark:#C678DD"> VALUES</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#98C379;--shiki-dark:#98C379">'3-105'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'计算机导论'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'825'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">),(</span><span style="color:#98C379;--shiki-dark:#98C379">'3-245'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'操作系统'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'804'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">),(</span><span style="color:#98C379;--shiki-dark:#98C379">'6-166'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'数据电路'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'856'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">),(</span><span style="color:#98C379;--shiki-dark:#98C379">'9-888'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'高等数学'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'100'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">DROP</span><span style="color:#C678DD;--shiki-dark:#C678DD"> TABLE</span><span style="color:#C678DD;--shiki-dark:#C678DD"> IF</span><span style="color:#C678DD;--shiki-dark:#C678DD"> EXISTS</span><span style="color:#98C379;--shiki-dark:#98C379"> \`SCORE\`</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">CREATE</span><span style="color:#C678DD;--shiki-dark:#C678DD"> TABLE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> \`</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">SCORE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">\` (</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  \`SNO\`</span><span style="color:#C678DD;--shiki-dark:#C678DD"> varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">NOT NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  \`CNO\`</span><span style="color:#C678DD;--shiki-dark:#C678DD"> varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">NOT NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  \`DEGREE\`</span><span style="color:#C678DD;--shiki-dark:#C678DD"> decimal</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">10</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">NOT NULL</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) ENGINE</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">InnoDB </span><span style="color:#C678DD;--shiki-dark:#C678DD">DEFAULT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> CHARSET</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">utf8;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">INSERT INTO</span><span style="color:#98C379;--shiki-dark:#98C379"> \`SCORE\`</span><span style="color:#C678DD;--shiki-dark:#C678DD"> VALUES</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#98C379;--shiki-dark:#98C379">'103'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'3-245'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">86</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">),(</span><span style="color:#98C379;--shiki-dark:#98C379">'105'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'3-245'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">75</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">),(</span><span style="color:#98C379;--shiki-dark:#98C379">'109'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'3-245'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">68</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">),(</span><span style="color:#98C379;--shiki-dark:#98C379">'103'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'3-105'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">92</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">),(</span><span style="color:#98C379;--shiki-dark:#98C379">'105'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'3-105'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">88</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">),(</span><span style="color:#98C379;--shiki-dark:#98C379">'109'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'3-105'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">76</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">),(</span><span style="color:#98C379;--shiki-dark:#98C379">'101'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'3-105'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">64</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">),(</span><span style="color:#98C379;--shiki-dark:#98C379">'107'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'3-105'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">91</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">),(</span><span style="color:#98C379;--shiki-dark:#98C379">'101'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'6-166'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">85</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">),(</span><span style="color:#98C379;--shiki-dark:#98C379">'107'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'6-106'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">79</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">),(</span><span style="color:#98C379;--shiki-dark:#98C379">'108'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'3-105'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">78</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">),(</span><span style="color:#98C379;--shiki-dark:#98C379">'108'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'6-166'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">81</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">DROP</span><span style="color:#C678DD;--shiki-dark:#C678DD"> TABLE</span><span style="color:#C678DD;--shiki-dark:#C678DD"> IF</span><span style="color:#C678DD;--shiki-dark:#C678DD"> EXISTS</span><span style="color:#98C379;--shiki-dark:#98C379"> \`STUDENT\`</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">CREATE</span><span style="color:#C678DD;--shiki-dark:#C678DD"> TABLE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> \`</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">STUDENT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">\` (</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  \`SNO\`</span><span style="color:#C678DD;--shiki-dark:#C678DD"> varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">NOT NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  \`SNAME\`</span><span style="color:#C678DD;--shiki-dark:#C678DD"> varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">NOT NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  \`SSEX\`</span><span style="color:#C678DD;--shiki-dark:#C678DD"> varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">NOT NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  \`SBIRTHDAY\`</span><span style="color:#C678DD;--shiki-dark:#C678DD"> datetime</span><span style="color:#C678DD;--shiki-dark:#C678DD"> DEFAULT</span><span style="color:#C678DD;--shiki-dark:#C678DD"> NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  \`CLASS\`</span><span style="color:#C678DD;--shiki-dark:#C678DD"> varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">DEFAULT</span><span style="color:#C678DD;--shiki-dark:#C678DD"> NULL</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) ENGINE</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">InnoDB </span><span style="color:#C678DD;--shiki-dark:#C678DD">DEFAULT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> CHARSET</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">utf8;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">INSERT INTO</span><span style="color:#98C379;--shiki-dark:#98C379"> \`STUDENT\`</span><span style="color:#C678DD;--shiki-dark:#C678DD"> VALUES</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#98C379;--shiki-dark:#98C379">'108'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'曾华'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'男'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'1977-09-01 00:00:00'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'95033'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">),(</span><span style="color:#98C379;--shiki-dark:#98C379">'105'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'匡明'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'男'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'1975-10-02 00:00:00'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'95031'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">),(</span><span style="color:#98C379;--shiki-dark:#98C379">'107'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'王丽'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'女'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'1976-01-23 00:00:00'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'95033'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">),(</span><span style="color:#98C379;--shiki-dark:#98C379">'101'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'李军'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'男'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'1976-02-20 00:00:00'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'95033'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">),(</span><span style="color:#98C379;--shiki-dark:#98C379">'109'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'王芳'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'女'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'1975-02-10 00:00:00'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'95031'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">),(</span><span style="color:#98C379;--shiki-dark:#98C379">'103'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'陆君'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'男'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'1974-06-03 00:00:00'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'95031'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">DROP</span><span style="color:#C678DD;--shiki-dark:#C678DD"> TABLE</span><span style="color:#C678DD;--shiki-dark:#C678DD"> IF</span><span style="color:#C678DD;--shiki-dark:#C678DD"> EXISTS</span><span style="color:#98C379;--shiki-dark:#98C379"> \`TEACHER\`</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">CREATE</span><span style="color:#C678DD;--shiki-dark:#C678DD"> TABLE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> \`</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">TEACHER</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">\` (</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  \`TNO\`</span><span style="color:#C678DD;--shiki-dark:#C678DD"> varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">NOT NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  \`TNAME\`</span><span style="color:#C678DD;--shiki-dark:#C678DD"> varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">NOT NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  \`TSEX\`</span><span style="color:#C678DD;--shiki-dark:#C678DD"> varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">NOT NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  \`TBIRTHDAY\`</span><span style="color:#C678DD;--shiki-dark:#C678DD"> datetime</span><span style="color:#C678DD;--shiki-dark:#C678DD"> NOT NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  \`PROF\`</span><span style="color:#C678DD;--shiki-dark:#C678DD"> varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">6</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">DEFAULT</span><span style="color:#C678DD;--shiki-dark:#C678DD"> NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  \`DEPART\`</span><span style="color:#C678DD;--shiki-dark:#C678DD"> varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">10</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">NOT NULL</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) ENGINE</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">InnoDB </span><span style="color:#C678DD;--shiki-dark:#C678DD">DEFAULT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> CHARSET</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">utf8;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">INSERT INTO</span><span style="color:#98C379;--shiki-dark:#98C379"> \`TEACHER\`</span><span style="color:#C678DD;--shiki-dark:#C678DD"> VALUES</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#98C379;--shiki-dark:#98C379">'804'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'李诚'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'男'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'1958-12-02 00:00:00'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'副教授'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'计算机系'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">),(</span><span style="color:#98C379;--shiki-dark:#98C379">'856'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'张旭'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'男'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'1969-03-12 00:00:00'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'讲师'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'电子工程系'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">),(</span><span style="color:#98C379;--shiki-dark:#98C379">'825'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'王萍'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'女'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'1972-05-05 00:00:00'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'助教'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'计算机系'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">),(</span><span style="color:#98C379;--shiki-dark:#98C379">'831'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'刘冰'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'女'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'1977-08-14 00:00:00'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'助教'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">'电子工程系'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:7.96,words:2387},t:"18、SQL语句练习",y:"a"}}],["/posts/Database/MySQL/%E5%85%A8%E9%93%BE%E8%B7%AF%E6%95%B0%E4%BB%93%E4%B9%8B-DataX.html",{loader:()=>o(()=>import("./全链路数仓之-DataX.html-CpNtCmnK.js"),[]),meta:{d:171010074e4,l:"2024年3月10日",c:["数据库"],g:["MySQL"],e:`
<h2>第一章 DataX概览</h2>
<blockquote>
<p>用户在互联网上进行的所有的操作，都会留下很多的数据。有些是用户的行为数据，例如用户在什么时间点启动了APP、什么时间点点击了某一个按钮、在某一个商品的详情页停留了30秒时间、收藏了某一篇文章、点赞了某一个评论等。这些数据会以服务器日志的形式记录下来。而有些数据是记录的业务数据，例如用户下单购买了什么商品等，这些数据一般会存储与关系型数据库中，例如MySQL或者Oracle。</p>
<p>对于大数据开发来说，我们需要处理的数据来自于很多的渠道，有一些是服务器的日志文件，有一些是服务端的业务数据。我们要做的第一件事情，就是将这些数据导入到我们的大数据平台，然后再对其进行计算、处理，得出我们希望的结果。而在数据采集的时候，我们可以自己开发采集的程序、脚本来实现，也可以使用一些开源的第三方的程序。例如：使用flume可以实现将服务器日志文件采集到HDFS进行存储，而对于关系型数据库的数据的采集同步，我们可以采用DataX来实现。</p>
</blockquote>`,r:{minutes:55.24,words:16572},t:"14、DataX",y:"a"}}],["/posts/Database/MySQL/%E5%85%B3%E7%B3%BB%E4%BB%A3%E6%95%B0.html",{loader:()=>o(()=>import("./关系代数.html-j6UmVtMx.js"),[]),meta:{d:171007188e4,l:"2024年3月10日",c:["数据库"],g:["MySQL"],e:`
<h2>概述</h2>
<h3>关系代数是一种抽象的查询语言，用对关系的运算来表达查询，作为研究关系数据语言的数学工具。</h3>
<h3>关系代数的运算对象是关系，运算结果亦为关系。</h3>
<h2>关系代数的运算</h2>
<h3>普通的集合运算</h3>
<ul>
<li>并、交、差</li>
</ul>
<h3>删除部分关系的运算</h3>
<ul>
<li>选择、投影</li>
</ul>
<h3>合并两个关系元组的运算</h3>
<ul>
<li>连接、积</li>
</ul>
<h3>改名运算</h3>
<h2>关系代数</h2>
<h3>并Union (∪)</h3>
<ul>
<li>R和S的并，R∪S，是在R或S或两者中的元素的集合</li>
<li>一个元素在并集中只出现一次</li>
<li>R和S必须同类型（属性集相同、次序相同，但属性名可以不同）</li>
</ul>`,r:{minutes:2.17,words:652},t:"5、关系代数",y:"a"}}],["/posts/Database/MySQL/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1%E7%90%86%E8%AE%BA.html",{loader:()=>o(()=>import("./关系数据库设计理论.html-BhJIdq_C.js"),[]),meta:{d:171007194e4,l:"2024年3月10日",c:["数据库"],g:["MySQL"],e:`
<h2>设计一个好的关系数据库系统，关键是要设计一个好的数据库模式（数据库逻辑设计问题）</h2>
<h2>数据库逻辑设计主要解决的问题</h2>
<h3>关系数据库应该组织成几个关系模式</h3>
<h3>关系模式中包括哪些属性</h3>
<h2>“不好”的数据库设计</h2>
<h3>举例：为学校设计一个关系数据库</h3>
<h3>关系模式: UN(Sno,Cno,G,Sdept,MN)</h3>
<ul>
<li>Sno:描述学生</li>
<li>
<pre><code>    Sdept:描述系名
</code></pre>
</li>
<li>
<pre><code>    MN:描述系主任
</code></pre>
</li>
<li>
<pre><code>    Cno:描述课程
</code></pre>
</li>
<li>
<pre><code>    G:描述学习成绩
</code></pre>
</li>
<li>根据对现实世界的分析,可得出:Sno,Cno是码</li>
<li>按照关系模式UN装入部分数据</li>
</ul>`,r:{minutes:5.31,words:1593},t:"6、关系数据库设计理论",y:"a"}}],["/posts/Database/MySQL/%E5%85%B3%E7%B3%BB%E6%A8%A1%E5%9E%8B.html",{loader:()=>o(()=>import("./关系模型.html-DZiCovZs.js"),[]),meta:{d:171006828e4,l:"2024年3月10日",c:["数据库"],g:["MySQL"],e:`
<h2>关系模型组成的三要素</h2>
<h3>关系数据结构</h3>
<ul>
<li>基本概念
<ul>
<li>关系</li>
<li>关系模式
<ul>
<li>什么是关系模式
<ul>
<li>关系模式（Relation Schema）是型</li>
</ul>
</li>
<li>关系是值
<ul>
<li>关系模式是对关系的描述</li>
</ul>
</li>
</ul>
</li>
<li>关系数据库</li>
</ul>
</li>
</ul>
<h3>关系操作集合</h3>
<h3>关系完整性约束</h3>
<ul>
<li>关系模型的完整性规则是对关系的某种约束条件</li>
<li>实体完整性和参照完整性是关系模型必须满足的完整性约束条件，被称作是关系的两个不变性，应该由关系系统自动支持。</li>
</ul>`,r:{minutes:1.73,words:520},t:"4、关系模型",y:"a"}}],["/posts/Database/MySQL/%E5%AE%8C%E6%95%B4%E6%80%A7%E7%BA%A6%E6%9D%9F.html",{loader:()=>o(()=>import("./完整性约束.html-CxnPIbim.js"),[]),meta:{d:171017274e4,l:"2024年3月11日",c:["数据库"],g:["MySQL"],e:`
<h2>静态列级约束</h2>
<h3>1. 对数据类型的约束，包括数据的类型、长度单位、精度等</h3>
<h3>2. 对数据格式的约束</h3>
<h3>3. 对取值范围或取值集合的约束</h3>
<h3>4. 对空值的约束</h3>
<h3>5. 其他约束</h3>
<h2>静态元组约束</h2>
<h3>一个元组是由若干个列值组成的，静态元组约束就是规定元组的各个列之间的约束关系</h3>
<h2>静态关系约束</h2>
<h3>在一个关系的各个元组之间或者若干关系之间常常存在各种联系或约束。 （参照完整性－外码约束）</h3>
<h2>动态列级约束</h2>
<h3>1. 修改列定义时的约束</h3>`,r:{minutes:.96,words:289},t:"10、完整性约束",y:"a"}}],["/posts/Database/MySQL/%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6.html",{loader:()=>o(()=>import("./并发控制.html-DoxFycUi.js"),[]),meta:{d:171007914e4,l:"2024年3月10日",c:["数据库"],g:["MySQL"],e:`
<h2>多事务执行方式</h2>
<h3>(1)事务串行执行</h3>
<ul>
<li>每个时刻只有一个事务运行，其他事务必须等到这个事务结束以后方能运行</li>
<li>不能充分利用系统资源，发挥数据库共享资源的特点</li>
</ul>
<h3>(2)交叉并发方式（interleaved concurrency）</h3>
<ul>
<li>事务的并行执行是这些并行事务的并行操作轮流交叉运行</li>
<li>是单处理机系统中的并发方式，能够减少处理机的空闲时间，提高系统的效率</li>
</ul>
<h3>(3)同时并发方式（simultaneous  concurrency）</h3>`,r:{minutes:3.6,words:1080},t:"8、并发控制",y:"a"}}],["/posts/Database/MySQL/%E6%95%B0%E6%8D%AE%E5%BA%93.html",{loader:()=>o(()=>import("./数据库.html-C3ozXggK.js"),[]),meta:{d:171005748e4,l:"2024年3月10日",c:["数据库"],g:["MySQL"],e:`
<h2>目录</h2>
<h2>绪论</h2>
<h3>数据管理的三个阶段</h3>
<ul>
<li>人工管理阶段</li>
<li>文件系统阶段</li>
<li>数据库系统阶段</li>
</ul>
<h3>基本术语</h3>
<ul>
<li>数据（Data）
<ul>
<li>计算机用来描述事物的记录（文字．图形．图像．声音）</li>
<li>数据的形式本身并不能完全表达其内容，需要经过语义解释。数据与其语义是不可分的</li>
</ul>
</li>
<li>数据库（Database，简称DB）
<ul>
<li>数据库是长期存储在计算机内有结构的大量的共享的数据集合。</li>
</ul>
</li>
<li>数据库管理系统（DBMS）
<ul>
<li>数据库管理系统是位于用户与操作系统之间的一层数据管理软件。</li>
<li>数据库在建立、运用和维护时由数据库管理系统统一管理、统一控制。</li>
<li>数据库系统（DBS）
<ul>
<li>数据库系统是指在计算机系统中引入数据库后的系统构成，一般由数据库、数据库管理系统（及其开发工具）、应用系统、数据库管理员和用户构成。</li>
</ul>
</li>
</ul>
</li>
<li>数据冗余度：
<ul>
<li>指同一数据重复存储时的重复程度。</li>
</ul>
</li>
<li>数据的安全性（Security）
<ul>
<li>数据的安全性是指保护数据，防止不合法使用数据造成数据的泄密和破坏，使每个用户只能按规定，对某些数据以某些方式进行访问和处理。</li>
</ul>
</li>
<li>数据的完整性（Integrity）
<ul>
<li>数据的完整性指数据的正确性、有效性和相容性。即将数据控制在有效的范围内，或要求数据之间满足一定的关系。</li>
</ul>
</li>
<li>并发（Concurrency）控制
<ul>
<li>当多个用户的并发进程同时存取、修改数据库时，可能会发生相互干扰而得到错误的结果并使得数据库的完整性遭到破坏，因此必须对多用户的并发操作加以控制和协调。</li>
</ul>
</li>
<li>数据库恢复（Recovery）
<ul>
<li>计算机系统的硬件故障、软件故障、操作员的失误以及故意的破坏也会影响数据库中数据的正确性，甚至造成数据库部分或全部数据的丢失。DBMS必须具有将数据库从错误状态恢复到某一已知的正确状态（亦称为完整状态或一致状态）的功能。</li>
</ul>
</li>
</ul>`,r:{minutes:52.17,words:15652},t:"1、数据库绪论",y:"a"}}],["/posts/Database/MySQL/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%81%A2%E5%A4%8D%E6%8A%80%E6%9C%AF.html",{loader:()=>o(()=>import("./数据库恢复技术.html-CdE0yfxH.js"),[]),meta:{d:171008994e4,l:"2024年3月10日",c:["数据库"],g:["MySQL"],e:`
<h2>什么是事务</h2>
<h3>事务(Transaction)是用户定义的一个数据库操作序列，这些操作要么全做，要么全不做，是一个不可分割的工作单位</h3>
<h3>事务和程序是两个概念</h3>
<ul>
<li>在关系数据库中，一个事务可以是一条SQL语句，一组SQL语句或整个程序</li>
<li>一个应用程序通常包含多个事务</li>
</ul>
<h3>事务是恢复和并发控制的基本单位</h3>
<h2>事务结束</h2>
<h3>COMMIT</h3>
<ul>
<li>事务正常结束</li>
<li>提交事务的所有操作（读+更新）</li>
<li>事务中所有对数据库的更新永久生效</li>
</ul>`,r:{minutes:2.14,words:641},t:"11、数据库恢复技术",y:"a"}}],["/posts/Database/MySQL/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BB%AA%E8%AE%BA.html",{loader:()=>o(()=>import("./数据库绪论.html-xTEKes8L.js"),[]),meta:{d:171006108e4,l:"2024年3月10日",c:["数据库"],g:["MySQL"],e:`
<h2>数据管理的三个阶段</h2>
<h3>人工管理阶段</h3>
<h3>文件系统阶段</h3>
<h3>数据库系统阶段</h3>
<h2>基本术语</h2>
<h3>数据（Data）</h3>
<ul>
<li>计算机用来描述事物的记录（文字．图形．图像．声音）</li>
<li>数据的形式本身并不能完全表达其内容，需要经过语义解释。数据与其语义是不可分的</li>
</ul>
<h3>数据库（Database，简称DB）</h3>
<ul>
<li>数据库是长期存储在计算机内有结构的大量的共享的数据集合。</li>
</ul>
<h3>数据库管理系统（DBMS）</h3>
<ul>
<li>数据库管理系统是位于用户与操作系统之间的一层数据管理软件。</li>
<li>数据库在建立、运用和维护时由数据库管理系统统一管理、统一控制。</li>
<li>数据库系统（DBS）
<ul>
<li>数据库系统是指在计算机系统中引入数据库后的系统构成，一般由数据库、数据库管理系统（及其开发工具）、应用系统、数据库管理员和用户构成。</li>
</ul>
</li>
</ul>`,r:{minutes:11.08,words:3323},t:"2、数据管理的三个阶段",y:"a"}}],["/posts/Database/MySQL/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1.html",{loader:()=>o(()=>import("./数据库设计.html-CyNdcLFL.js"),[]),meta:{d:171006468e4,l:"2024年3月10日",c:["数据库"],g:["MySQL"],e:`
<h2>概述</h2>
<h3>数据库技术是信息资源管理最有效的手段。数据库设计是指对于一个给定的应用环境，构造最优的数据库模式，建立数据库极其应用系统，有效存储数据，满足用户信息要求和处理要求。</h3>
<h2>数据库设计的步骤</h2>
<h3>⒈需求分析阶段</h3>
<ul>
<li>收集和分析用户需求，结果得到数据字典描述的数据需求。</li>
<li>常用的调查方法
<ul>
<li>⑴跟班作业</li>
<li>⑵开调查会</li>
<li>⑶请专人介绍</li>
<li>⑷询问对某些调查中的问题，可以找专人询问。</li>
<li>⑸设计调查表请用户填写</li>
<li>⑹查阅记录</li>
</ul>
</li>
</ul>`,r:{minutes:6.92,words:2075},t:"3、数据库设计",y:"a"}}],["/posts/Database/MySQL/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%AD%E8%A8%80SQL.html",{loader:()=>o(()=>import("./数据库语言SQL.html-CgyxDvUA.js"),[]),meta:{d:171007554e4,l:"2024年3月10日",c:["数据库"],g:["MySQL"],e:`
<h2>SQL的发展</h2>
<h3>1974年，由Boyce和Chamberlin提出</h3>
<h3>1975~1979，IBM San Jose Research Lab的关系数据库管理系统原型System R实施了这种语言</h3>
<h3>SQL-86是第一个SQL标准</h3>
<h3>SQL-89、SQL-92(SQL2)、SQL-99(SQL3)</h3>
<h2>非过程化语言</h2>
<h3>SQL语言进行数据库操作时，只需要提出“做什么”，不需要指明“怎么做”。“怎么做”是由DBMS来完成</h3>
<h2>SQL的形式</h2>
<h3>交互式SQL</h3>
<ul>
<li>一般DBMS都提供联机交互工具</li>
<li>用户可直接键入SQL命令对数据库进行操作</li>
<li>由DBMS来进行解释</li>
</ul>`,r:{minutes:16.38,words:4915},t:"7、数据库语言SQL",y:"a"}}],["/posts/Database/MySQL/%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96.html",{loader:()=>o(()=>import("./查询优化.html-PO2c4Nrd.js"),[]),meta:{d:171008274e4,l:"2024年3月10日",c:["数据库"],g:["MySQL"],e:`
<h2>概述</h2>
<h3>关系系统和关系模型是两个密切相关而有不同的概念。支持关系模型的数据库管理系统称为关系系统。但是关系模型中并非每一部分都是同等重要的，所以我们不苛求完全支持关系模型的系统才能称为关系系统。因此，我们给出一个关系系统的最小要求以及分类的定义。</h3>
<h3>关系系统的定义</h3>
<ul>
<li>1.支持关系数据库（关系数据结构）
<ul>
<li>
<pre><code>  从用户观点看，数据库由表构成，并且只有表这一种结构。
</code></pre>
</li>
</ul>
</li>
<li>2.支持选择、投影和（自然）连接运算，对这些运算不必要求定义任何物理存取路径
<ul>
<li>
<pre><code>   当然并不要求关系系统的选择、投影、连接运算和关系代数的相应运算完全一样，而只要求有等价的这三种运算功能就行。 
</code></pre>
</li>
</ul>
</li>
</ul>`,r:{minutes:2.56,words:768},t:"9、查询优化",y:"a"}}],["/posts/Database/ORACLE/",{loader:()=>o(()=>import("./index.html-DBCdQgBu.js"),[]),meta:{d:17127936e5,l:"2024年4月11日",e:`<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>这里放置Oracle数据库相关的内容</p>
</div>
<hr>
`,r:{minutes:.12,words:35},t:"Oracle",i:"mysql",O:6,y:"p"}}],["/posts/Database/ORACLE/oracle-b-sequence.html",{loader:()=>o(()=>import("./oracle-b-sequence.html-CzafEfyP.js"),[]),meta:{d:1729494189e3,c:["数据库"],g:null,e:`
<p>create sequence SEQ_TEST</p>
<p>minvalue 1 --最小值</p>
<p>nomaxvalue --不设置最大值</p>
<p>start with 1 --从1开始计数</p>
<p>increment by 1 --每次加1个</p>
<p>nocycle --一直累加，不循环</p>
<p>nocache; --不建缓冲区</p>
<h2>1. 创建序列</h2>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>create sequence seq_user</span></span>
<span class="line"><span>  increment by 1</span></span>
<span class="line"><span>  minvalue 1</span></span>
<span class="line"><span>  nomaxvalue</span></span>
<span class="line"><span>  start with 1</span></span>
<span class="line"><span>  nocycle </span></span>
<span class="line"><span>  cache 20;</span></span></code></pre>
</div>`,r:{minutes:2.33,words:699},t:"Oracle基础-序列",O:10,y:"a"}}],["/posts/Database/ORACLE/oracle-c-function-concat.html",{loader:()=>o(()=>import("./oracle-c-function-concat.html-BYCt0RV6.js"),[]),meta:{d:1729494189e3,g:null,e:`
<p>Oracle把一列的值合并为一个值，并用逗号分隔。</p>
<p>实例中将把部门表（DEPT表）与员工表（EMP表）关联，查询每个部门下的所有员工姓名，员工姓名之间以逗号分隔（如图一）。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403130955541.png" alt="image-20201221152131891" tabindex="0" loading="lazy"><figcaption>image-20201221152131891</figcaption></figure>`,r:{minutes:1.4,words:419},t:"Oracle在1对多时把一列的值合并为一个值并用逗号分隔",y:"a"}}],["/posts/Database/ORACLE/oracle-c-function-custom.html",{loader:()=>o(()=>import("./oracle-c-function-custom.html-DnHf0CTH.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 语法</h2>
<p><strong>Oracle自定义函数的语法如下：</strong></p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">create or replace</span><span style="color:#C678DD;--shiki-dark:#C678DD"> function</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> 函数名</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(参数1 模式 参数类型)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> 返回值类型</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">as</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">变量1 变量类型;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">变量2 变量类型;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">begin</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    函数体;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">end</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> 函数名;</span></span></code></pre>
</div>`,r:{minutes:1.17,words:351},t:"Oracle 自定义函数语法",y:"a"}}],["/posts/Database/ORACLE/oracle-c-function-greatest.html",{loader:()=>o(()=>import("./oracle-c-function-greatest.html-DzRTeY-l.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 示例</h2>
<p>已知表如下</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">SQL</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#C678DD;--shiki-dark:#C678DD"> select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> * </span><span style="color:#C678DD;--shiki-dark:#C678DD">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> tb;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        ID      CHINESE       MATH    ENGLISH</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    ---------- ----------          ----------     ----------</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">      1001</span><span style="color:#D19A66;--shiki-dark:#D19A66">         89</span><span style="color:#D19A66;--shiki-dark:#D19A66">                 98</span><span style="color:#D19A66;--shiki-dark:#D19A66">            87</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">      1002</span><span style="color:#D19A66;--shiki-dark:#D19A66">         81</span><span style="color:#D19A66;--shiki-dark:#D19A66">                 87</span><span style="color:#D19A66;--shiki-dark:#D19A66">           79</span></span></code></pre>
</div>`,r:{minutes:.74,words:223},t:"Oracle中greatest()/least函数的使用",y:"a"}}],["/posts/Database/ORACLE/oracle-c-function-overview.html",{loader:()=>o(()=>import("./oracle-c-function-overview.html-CaZUn22a.js"),[]),meta:{d:1729494189e3,c:["数据库"],g:null,e:`
<h2>1. 简介</h2>
<p>oralce 的函数分为</p>
<ul>
<li>单行函数
<ul>
<li>字符函数</li>
<li>日期函数</li>
<li>数字函数</li>
<li>转换函数</li>
</ul>
</li>
<li>分组函数（后续介绍）</li>
</ul>
<blockquote>
<p>学前知识：哑表 dual</p>
<p>dual 是一个虚拟表，辅助查找和运算，通常用在select语句中，作为查询的目标表结构，oracle保证dual里面永远只有一条记录</p>
<p>例如：</p>
<p>显示1+1 的结果，可以看出，dual很多时候是为了构成select的标准语法</p>
<p>select 1+1 from dual;</p>
</blockquote>`,r:{minutes:9.49,words:2848},t:"Oracle预定义函数",O:30,y:"a"}}],["/posts/Database/ORACLE/oracle-c-function-round.html",{loader:()=>o(()=>import("./oracle-c-function-round.html-BkIeZlOW.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h1>1. 简介</h1>
<p>Round 函数</p>
<p>​		语法：ROUND(number，num_digits)</p>
<p>其中Number 是需要进行四舍五入的数字，Num_digits为指定的位置，按此位数进行四舍五入。</p>
<ul>
<li>如何num_digits 大于0，则四舍五入到指定的小数位</li>
<li>如果num_digits等于0，则四舍五入到最接近的整数</li>
<li>如果num_digits小于0，则在小数点左侧进行四舍五入</li>
</ul>
<h2>2. 案例</h2>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">select</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> sum</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#D19A66;--shiki-dark:#D19A66">a</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">long_time</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)/</span><span style="color:#D19A66;--shiki-dark:#D19A66">3</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">round</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">sum</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#D19A66;--shiki-dark:#D19A66">a</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">long_time</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)/</span><span style="color:#D19A66;--shiki-dark:#D19A66">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) r0 </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">round</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">sum</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#D19A66;--shiki-dark:#D19A66">a</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">long_time</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)/</span><span style="color:#D19A66;--shiki-dark:#D19A66">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) r1 </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">round</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">sum</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#D19A66;--shiki-dark:#D19A66">a</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">long_time</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)/</span><span style="color:#D19A66;--shiki-dark:#D19A66">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) r2 </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">round</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">sum</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#D19A66;--shiki-dark:#D19A66">a</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">long_time</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)/</span><span style="color:#D19A66;--shiki-dark:#D19A66">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) r3 </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">round</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">sum</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#D19A66;--shiki-dark:#D19A66">a</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">long_time</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)/</span><span style="color:#D19A66;--shiki-dark:#D19A66">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) r4 </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">round</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">sum</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#D19A66;--shiki-dark:#D19A66">a</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">long_time</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)/</span><span style="color:#D19A66;--shiki-dark:#D19A66">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) r5 </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">round</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">sum</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#D19A66;--shiki-dark:#D19A66">a</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">long_time</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)/</span><span style="color:#D19A66;--shiki-dark:#D19A66">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,-</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) r_1 </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">round</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">sum</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#D19A66;--shiki-dark:#D19A66">a</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">long_time</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)/</span><span style="color:#D19A66;--shiki-dark:#D19A66">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,-</span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) r_2 </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">round</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">sum</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#D19A66;--shiki-dark:#D19A66">a</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">long_time</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)/</span><span style="color:#D19A66;--shiki-dark:#D19A66">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,-</span><span style="color:#D19A66;--shiki-dark:#D19A66">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) r_3 </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">round</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">sum</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#D19A66;--shiki-dark:#D19A66">a</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">long_time</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)/</span><span style="color:#D19A66;--shiki-dark:#D19A66">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,-</span><span style="color:#D19A66;--shiki-dark:#D19A66">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) r_4 </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">round</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">sum</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#D19A66;--shiki-dark:#D19A66">a</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">long_time</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)/</span><span style="color:#D19A66;--shiki-dark:#D19A66">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,-</span><span style="color:#D19A66;--shiki-dark:#D19A66">5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) r_5 </span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD"> from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  hd_agent_voice_seq a</span></span></code></pre>
</div>`,r:{minutes:.81,words:243},t:"Oracle中四舍五入Round函数的使用",y:"a"}}],["/posts/Database/ORACLE/oracle-c-function-string.html",{loader:()=>o(()=>import("./oracle-c-function-string.html-DsF0L3Eb.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 截取字符串：substr</h2>
<h3>1.1 substr 函数介绍</h3>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>substr(str1,str2,str3)</span></span></code></pre>
</div>`,r:{minutes:1.83,words:550},t:"Oracle截取字符串substr、查找字符串位置instr、替换字符串replace",y:"a"}}],["/posts/Database/ORACLE/oracle-c-function-to-date.html",{loader:()=>o(()=>import("./oracle-c-function-to-date.html-2aW8FPUr.js"),[]),meta:{d:1729494189e3,c:["数据库"],g:null,e:`
<h2>1. 比较日期</h2>
<p>查找出大于指定日期的数据</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>SELECT EMP_NAME, DEPT</span></span>
<span class="line"><span>FROM EMPLOYEE</span></span>
<span class="line"><span>WHERE TIME_CREATED &gt;= TO_DATE('2020/11/11','yyyy/MM/dd')</span></span></code></pre>
</div>`,r:{minutes:1.14,words:342},t:"Oracle函数日期格式转换 to_date",O:10,y:"a"}}],["/posts/Database/ORACLE/oracle-i-notlike.html",{loader:()=>o(()=>import("./oracle-i-notlike.html-CvVYrDjX.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p>我们有些查询条件需要使用not like ，过滤掉不包含某些文字的数据。但dot like 会导致全表扫描。有没有什么办法既能满足我们需求又保证效率呢？</p>
<h2>2. 解决</h2>
<p>instr(title,’手册’)&gt;0 相当于like</p>
<p>instr(title,’手册’)=0 相当于not like</p>
<p>对于LIKE语句，我们可以使用instr函数来进行SQL调优</p>
<h2>参考文章</h2>
<p><a href="https://blog.csdn.net/weixin_30715523/article/details/101579345" target="_blank" rel="noopener noreferrer">like not like 优化</a></p>`,r:{minutes:.45,words:136},t:"notlike优化",y:"a"}}],["/posts/Database/ORACLE/oracle-i-split.html",{loader:()=>o(()=>import("./oracle-i-split.html-BIggVJY-.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 需求</h2>
<p>我们部门表中存着祖籍列表，我们希望能直接查出所有祖籍部门的中文名</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403130956609.png" alt="image-20220302144445229" tabindex="0" loading="lazy"><figcaption>image-20220302144445229</figcaption></figure>
<p>如：这几个部门的祖籍都是什么</p>
<h2>2.实现</h2>`,r:{minutes:.44,words:133},t:"oracle取出，号分割的id对应中文名",y:"a"}}],["/posts/Database/ORACLE/oracle-y-backup-dmp.html",{loader:()=>o(()=>import("./oracle-y-backup-dmp.html-Bx6i-32O.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 具体操作</h2>
<ol>
<li>
<p>导出语句</p>
<div class="language-tex" data-ext="tex" data-title="tex"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">exp myuser/mypassword@192.168.0.1:1521/orcl file=D:</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\\mydb</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.dmp log=D:</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\\export</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.log full=y  as sysdba</span></span></code></pre>
</div><p>导出的用户名密码，最好用dba权限的</p>
<p>导出命令中加入如下参数 ，可分别实现不同的功能：</p>
<blockquote>
<ul>
<li>full=y</li>
</ul>
<p>全库导出</p>
<ul>
<li>owner=（user1，user2）</li>
</ul>
<p>导出指定的用户，如user1、user2</p>
<ul>
<li>compress=y</li>
</ul>
<p>设置待导出的表占用空间为实际尺寸（即除去高端水印）</p>
</blockquote>
</li>
<li>
<p>导入语句</p>
<div class="language-txt" data-ext="txt" data-title="txt"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>Imp myuser/mypassword@192.168.0.1/orcl file=D:\\mydb.dmp  full=y  ignore=y</span></span></code></pre>
</div><p>导入还可以指定用户</p>
<ul>
<li>fromuser就是把当前的dmp文件中的某一个用户下的数据取出。</li>
<li>touser就是把现在dmp文件中的数据导入到目标库的指定user下。</li>
</ul>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>Imp myuser/mypassword@192.168.0.1/orcl file=D:\\mydb.dmp    fromuser=BJ_RV touser=BJ_TEST   ignore=y</span></span></code></pre>
</div></li>
</ol>`,r:{minutes:1.01,words:304},t:"Oracle备份-导入导出dmp 文件",y:"a"}}],["/posts/Database/ORACLE/oracle-y-non-exist-create.html",{loader:()=>o(()=>import("./oracle-y-non-exist-create.html-79yJ-xF2.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 背景</h2>
<p>Oracle使用的是PL/SQL, 不支持IF NOT EXISTS 条件。</p>
<h2>2. 示例</h2>
<p>使用counter在USER_ALL_TABLES中来列举有几个PRODUCT表 ，如果i&gt;0则说明至少有一个PRODUCT表。</p>
<p>根据条件的判断删或增PRODUCT表。</p>
<div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">DECLARE</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">i </span><span style="color:#C678DD;--shiki-dark:#C678DD">integer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">BEGIN</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">	SELECT</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> count</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(*) </span><span style="color:#C678DD;--shiki-dark:#C678DD">INTO</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> i </span><span style="color:#C678DD;--shiki-dark:#C678DD">FROM</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> USER_ALL_TABLES </span><span style="color:#C678DD;--shiki-dark:#C678DD">WHERE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> TABLE_NAME</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">'PRODUCT'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">	IF</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> i</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">	THEN</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">		EXECUTE</span><span style="color:#C678DD;--shiki-dark:#C678DD"> immediate</span><span style="color:#98C379;--shiki-dark:#98C379"> 'DROP TABLE PRODUCT'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">	END</span><span style="color:#C678DD;--shiki-dark:#C678DD"> IF</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">	EXECUTE</span><span style="color:#C678DD;--shiki-dark:#C678DD"> immediate</span><span style="color:#98C379;--shiki-dark:#98C379"> 'CREATE TABLE PRODUCT</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">		(</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">			ID integer NOT NULL,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">			VERSION integer,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">			TITLE varchar (255),</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">			SKU varchar (255),</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">			PARENTSKU varchar (255),</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">			COLOR varchar (255),</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">			DESCRIPTION varchar (255),</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">			PRICE varchar (255),</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">			CONSTRAINT PK_PRODUCT_ID PRIMARY KEY(ID)</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">		)'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">END</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.68,words:203},t:"ORACLE如果表不存在，则创建该表",y:"a"}}],["/posts/Database/ORACLE/oracle-y-partition-create.html",{loader:()=>o(()=>import("./oracle-y-partition-create.html-DFS5CLIs.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 创建按月分区的分区表</h2>
<h3>1.1 创建分区表</h3>
<div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">CREATE</span><span style="color:#C678DD;--shiki-dark:#C678DD"> TABLE</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> intervalpart</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (c1 </span><span style="color:#C678DD;--shiki-dark:#C678DD">NUMBER</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, c3 </span><span style="color:#C678DD;--shiki-dark:#C678DD">DATE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">PARTITION</span><span style="color:#C678DD;--shiki-dark:#C678DD"> BY</span><span style="color:#C678DD;--shiki-dark:#C678DD"> RANGE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (c3)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   INTERVAL ( NUMTOYMINTERVAL (</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#98C379;--shiki-dark:#98C379">'MONTH'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   (</span><span style="color:#C678DD;--shiki-dark:#C678DD">PARTITION</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> part1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">       VALUES</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> LESS THAN (TO_DATE (</span><span style="color:#98C379;--shiki-dark:#98C379">'01/12/2010'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#98C379;--shiki-dark:#98C379">'MM/DD/YYYY'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)),</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    PARTITION</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> part2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">       VALUES</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> LESS THAN (TO_DATE (</span><span style="color:#98C379;--shiki-dark:#98C379">'02/12/2010'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#98C379;--shiki-dark:#98C379">'MM/DD/YYYY'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  )</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.66,words:499},t:"oracle分区表-自动创建的分区",y:"a"}}],["/posts/Database/ORACLE/oracle-y-partition-overview.html",{loader:()=>o(()=>import("./oracle-y-partition-overview.html-kBisMzQZ.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1.表空间及分区表的概念</h2>
<ul>
<li>
<p><strong>表空间：</strong></p>
<p>是一个或多个数据文件的集合，所有的数据对象都存放在指定的表空间中，但主要存放的是表，所以称作表空间。</p>
</li>
<li>
<p><strong>分区表：</strong></p>
<p>当表中的数据量不断增大，查询数据的速度就会变慢，应用程序的性能就会下降，这时就应该考虑对表进行分区。表进行分区后，<strong>逻辑上表仍然是一张完整的表</strong>，只是将表中的数据在物理上<strong>存放到多个表空间</strong>（物理文件上），这样查询数据时，<strong>不至于每次都扫描整张表</strong>。</p>
</li>
</ul>`,r:{minutes:7.53,words:2260},t:"oracle分区表概念篇(partition)",y:"a"}}],["/posts/Database/ORACLE/oracle-y-partition-query.html",{loader:()=>o(()=>import("./oracle-y-partition-query.html-Cx8zbspW.js"),[]),meta:{d:1729494189e3,g:null,e:`
<p>分区表是按日自动创建的。</p>
<p>记下思路</p>
<ol>
<li>
<p>查询出该表所有分区</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> PARTITION_NAME, HIGH_VALUE </span><span style="color:#C678DD;--shiki-dark:#C678DD">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> user_tab_partitions </span><span style="color:#C678DD;--shiki-dark:#C678DD">where</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> table_name</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">'DAVE'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span></code></pre>
</div></li>
<li>
<p>对比 HIGH_VALUE 查出近3年的所有分区值</p>
</li>
<li>
<p>将所有分区值进行union all</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> * </span><span style="color:#C678DD;--shiki-dark:#C678DD">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> dave </span><span style="color:#C678DD;--shiki-dark:#C678DD">partition</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(SYS_P53)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">UNION ALL</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> * </span><span style="color:#C678DD;--shiki-dark:#C678DD">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> dave </span><span style="color:#C678DD;--shiki-dark:#C678DD">partition</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(SYS_P54)</span></span></code></pre>
</div></li>
</ol>`,r:{minutes:.37,words:111},t:"5e数据大表，分区表查数据",y:"a"}}],["/posts/Database/ORACLE/oracle-z-docker-install.html",{loader:()=>o(()=>import("./oracle-z-docker-install.html-DgK00eHE.js"),[]),meta:{d:1729494189e3,c:["数据库"],g:null,e:`
<h2>1. 安装Oracle</h2>
<ol>
<li>
<p>拉取镜像</p>
<div class="language-sh" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">docker</span><span style="color:#98C379;--shiki-dark:#98C379"> pull</span><span style="color:#98C379;--shiki-dark:#98C379"> registry.cn-hangzhou.aliyuncs.com/helowin/oracle_11g</span></span></code></pre>
</div><p>镜像大概有6.8G</p>
<p>查看镜像信息：</p>
<div class="language-sh" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">docker</span><span style="color:#98C379;--shiki-dark:#98C379"> iamges</span></span></code></pre>
</div></li>
<li>
<p>创建容器</p>
<div class="language-sh" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">docker</span><span style="color:#98C379;--shiki-dark:#98C379"> run</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -d</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -p</span><span style="color:#98C379;--shiki-dark:#98C379"> 1521:1521</span><span style="color:#D19A66;--shiki-dark:#D19A66"> --name</span><span style="color:#98C379;--shiki-dark:#98C379"> oracle_11g</span><span style="color:#98C379;--shiki-dark:#98C379"> registry.aliyuncs.com/helowin/oracle_11g</span></span></code></pre>
</div><p>启动容器</p>
<div class="language-sh" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">docker</span><span style="color:#98C379;--shiki-dark:#98C379"> start</span><span style="color:#98C379;--shiki-dark:#98C379"> oracle_11g</span></span></code></pre>
</div></li>
<li>
<p>进入控制台设置用户信息：</p>
<div class="language-sh" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">docker</span><span style="color:#98C379;--shiki-dark:#98C379"> exec</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -it</span><span style="color:#98C379;--shiki-dark:#98C379"> oracle_11g</span><span style="color:#98C379;--shiki-dark:#98C379"> bash</span></span></code></pre>
</div></li>
<li>
<p>切换成root进行操作：</p>
<blockquote>
<p>su - root</p>
</blockquote>
<p>输入密码helowin</p>
</li>
<li>
<p>设置oracle环境变量如下：</p>
<p>vi /etc/profile文件末尾添加：</p>
<div class="language-sh" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">export</span><span style="color:#E06C75;--shiki-dark:#E06C75"> ORACLE_HOME</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/</span><span style="color:#E06C75;--shiki-dark:#E06C75">home</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/</span><span style="color:#E06C75;--shiki-dark:#E06C75">oracle</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/</span><span style="color:#E06C75;--shiki-dark:#E06C75">app</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/</span><span style="color:#E06C75;--shiki-dark:#E06C75">oracle</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/</span><span style="color:#E06C75;--shiki-dark:#E06C75">product</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/</span><span style="color:#E06C75;--shiki-dark:#E06C75">11</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dbhome_2</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">export</span><span style="color:#E06C75;--shiki-dark:#E06C75"> ORACLE_SID</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75">helowin</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">export</span><span style="color:#E06C75;--shiki-dark:#E06C75"> PATH</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75">PATH</span></span></code></pre>
</div></li>
<li>
<p>切换回oracle用户：</p>
<div class="language-sh" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">su</span><span style="color:#98C379;--shiki-dark:#98C379"> -</span><span style="color:#98C379;--shiki-dark:#98C379"> oracle</span></span></code></pre>
</div></li>
<li>
<p>修改sys、system用户密码</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>sqlplus /nolog</span></span>
<span class="line"><span>conn /as sysdba</span></span>
<span class="line"><span>alter user system identified by oracle;</span></span>
<span class="line"><span>alter user sys identified by oracle;</span></span>
<span class="line"><span>ALTER PROFILE DEFAULT LIMIT PASSWORD_LIFE_TIME UNLIMITED;</span></span></code></pre>
</div><p>此处的oracle 就是你设置的密码</p>
<p>Ps:默认密码是：helowin</p>
</li>
</ol>`,r:{minutes:1.18,words:353},t:"通过docker安装Oracle",O:10,y:"a"}}],["/posts/Database/SOLR/",{loader:()=>o(()=>import("./index.html-5FXoYKKG.js"),[]),meta:{d:17127936e5,l:"2024年4月11日",e:`<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>这里放置Solr相关的内容</p>
</div>
<hr>
`,r:{minutes:.11,words:32},t:"Solr",i:"mysql",O:5,y:"p"}}],["/posts/Database/SOLR/solr-a-query-ui.html",{loader:()=>o(()=>import("./solr-a-query-ui.html-BbAhvXpz.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. Solr 查询界面</h2>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403131048641.png" alt="image-20210304140431497" tabindex="0" loading="lazy"><figcaption>image-20210304140431497</figcaption></figure>
<h2>2. 基本查询</h2>
<table>
<thead>
<tr>
<th>名称</th>
<th>作用</th>
<th>示例</th>
</tr>
</thead>
<tbody>
<tr>
<td>q</td>
<td>查询的关键字（最为重要）</td>
<td><code>q=id:1</code>,默认为<code>q=*:*</code></td>
</tr>
<tr>
<td>fl</td>
<td>指定返回哪些字段，用逗号或空格分隔，注意：字段区分大小写。<br><strong>如果想知道具体的评分需要手动加上score</strong></td>
<td>fl=id,title,sort</td>
</tr>
<tr>
<td>start</td>
<td>返回结果的第几条记录开始，一般分页用，默认0开始</td>
<td></td>
</tr>
<tr>
<td>rows</td>
<td>指定返回结果最多有多少条记录，默认值为10，配合start实现分页</td>
<td></td>
</tr>
<tr>
<td>sort</td>
<td>排序方式，例如id desc 表示按照id降序，多个字段： score desc，price asc</td>
<td></td>
</tr>
<tr>
<td>wt</td>
<td>（writer type）指定输出格式，有xml，json等</td>
<td></td>
</tr>
<tr>
<td>fq（filter query）</td>
<td>过滤查询，提供一个可选的筛选器查询。返回在q查询符合结果中同时符合的fq条件的查询结果</td>
<td>q=id:1&amp;fq=sort:[1 TO 5]，找关键字id为1 的，并且sort是1到5之间的。</td>
</tr>
<tr>
<td>df</td>
<td>默认的查询字段，一般默认指定（不太知道作用）</td>
<td></td>
</tr>
<tr>
<td>qt（query type）</td>
<td>指定哪个类型来处理查询请求，一般不用指定，默认是standard。（存疑）</td>
<td></td>
</tr>
<tr>
<td>indent</td>
<td>返回的结果是否缩进，默认关闭。 用indent=true|on 开启，一般调试json,php,phps,ruby输出才有必要用这个参数。</td>
<td></td>
</tr>
<tr>
<td>version</td>
<td>查询语法的版本，建议不使用它，由服务器指定默认值</td>
<td></td>
</tr>
</tbody>
</table>`,r:{minutes:4.85,words:1456},t:"Solr查询语法与参数",y:"a"}}],["/posts/Database/SOLR/solr-a-satrted.html",{loader:()=>o(()=>import("./solr-a-satrted.html-Bl3UMmwX.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p>Solr是基于Lucene全文搜索引擎</p>
<h2>2. 安装</h2>
<ol>
<li>
<p>下载安装（我下载的是7.7.3版本）</p>
<p><a href="https://lucene.apache.org/solr/downloads.html" target="_blank" rel="noopener noreferrer">下载solr</a></p>
<blockquote>
<p>下载二进制包（Binary releases） 不要下载源码包（Source release） 否则启动可能遇到问题</p>
</blockquote>
</li>
<li>
<p>目录结构</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403131048616.png" alt="image-20210301153307778" tabindex="0" loading="lazy"><figcaption>image-20210301153307778</figcaption></figure>
<ul>
<li>bin： 启动和停止服务器的脚本</li>
<li>example：示例</li>
<li>server/logs 文件夹： 所有solr 日志都写入该文件夹</li>
<li>server/solr 文件夹：包含不同的集合或核心（core/collection）。对于各集合或核心的配置和数据都存储在相应的集合或核心文件夹、</li>
</ul>
</li>
</ol>`,r:{minutes:3.09,words:928},t:"Solr入门",y:"a"}}],["/posts/Database/SOLR/solr-b-highlight.html",{loader:()=>o(()=>import("./solr-b-highlight.html-D-2pieI0.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p>大多数的搜索应用都存在类似的情况，那就是搜索结果显示的屏幕空间有限。</p>
<ul>
<li>如果文档很短并可以在结果列表中显示全部内容，对屏幕空间显示就不会构成太大的问题。</li>
<li>但大多数情况下都只能显示每个结果文档的一小部分。</li>
</ul>
<p>这就提出了一个问题：如何决定结果文档中显示哪一部分？理想情况下，<strong>应该是基于各片段与用户查询的匹配程度来决定</strong>。为查询结果选择最佳片段进行显示，这是Solr高亮框架提供的核心功能。</p>
<h2>2. 高亮所处流程</h2>
<h3>2.1 查询全流程中的高亮</h3>`,r:{minutes:5.73,words:1720},t:"Solr高亮",y:"a"}}],["/posts/Database/SOLR/solr-b-index.html",{loader:()=>o(()=>import("./solr-b-index.html-oxS-1zXc.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p>solr是基于Lucence开发的企业级搜索引擎技术，而lucence的原理是倒排索引。那么什么是倒排索引呢？</p>
<h3>1.1 正排索引</h3>
<p>我们传统的方式（正排索引）是从关键点出发，然后再通过关键点找到关键点代表的信息中能够满足搜索条件的特定信息，既通过<strong>KEY寻找VALUE</strong>。</p>
<p>例如我们sql 语句，他是通过key ,来找值</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>where name like '%张三%'</span></span></code></pre>
</div>`,r:{minutes:3.71,words:1112},t:"Solr倒排索引原理",y:"a"}}],["/posts/Database/SOLR/solr-b-query-parsing.html",{loader:()=>o(()=>import("./solr-b-query-parsing.html-Dnjru0tr.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p>查询解析器用于将查询语句（q参数）解析成搜索语法。</p>
<h2>2. 常用的三种解析器</h2>
<h3>2.1 默认解析器：lucene</h3>
<p>Solr在查询的时候，用到了QueryParser对用户输入做解析，solr默认使用的解析器是lucene，被称之为Standard Query Parser。Standard Query Parser支持原生的查询语法，使你可以方便地构造结构化查询语句。当然，它还有不好的，就是容错比较差，总是把错误抛出来，而不是像dismax一样消化掉。</p>
<h3>2.2 DisMax解析器</h3>
<h4>2.2.1 简介</h4>`,r:{minutes:3.78,words:1134},t:"Solr查询解析器",y:"a"}}],["/posts/Database/SOLR/solr-b-scheme-config.html",{loader:()=>o(()=>import("./solr-b-scheme-config.html-C3_XzlEX.js"),[]),meta:{d:1729494189e3,g:null,e:`
<blockquote>
<p>Solr 5.5以上版本中没有schema.xml这个配置文件，而是出现了一个叫managed-schema的配置文件</p>
</blockquote>
<h2>1. 简介</h2>
<p>schema即模式，它是集合/内核中<strong>字段的定义</strong>，主要是<strong>让Solr知道集合/内核包含哪些字段、字段的数据类型以及该字段是否存储索引</strong>。</p>
<p>Solr中提供了两种方式来配置schema，但两者只能选其一</p>
<ul>
<li>默认的托管模式</li>
<li>经典的schema.xml模式</li>
</ul>`,r:{minutes:13.44,words:4032},t:"Solr-Schema配置",y:"a"}}],["/posts/Database/SOLR/solr-i-case.html",{loader:()=>o(()=>import("./solr-i-case.html-BH4vRc8o.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p>在ik分词中默认是区分大小写的。也就是无论原始字符是大写还是小写。你搜索时跟大小写也无关</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403131051135.png" alt="image-20220414100303196" tabindex="0" loading="lazy"><figcaption>image-20220414100303196</figcaption></figure>
<p>但有些场景我们不希望使用ik分词，希望是一个完整的字符串。例如我们这里指定类型为string</p>`,r:{minutes:1.1,words:330},t:"Solr搜索大小写问题",y:"a"}}],["/posts/Database/SOLR/solr-i-highlight.html",{loader:()=>o(()=>import("./solr-i-highlight.html-Yofh7R81.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p>solr 在搜索时，明明搜索的是 A词组，但是B 词组也亮了，而且在 分词解析器中，怎么设置都不可能出现这种情况</p>
<p>因涉及一些内部数据，就不放截图了</p>
<h2>2. 原因分析</h2>
<p>经过不断的排查，确定问题的原因是出现多词语搜索的情况</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>a_ik:张 OR  b_s:*张*</span></span></code></pre>
</div>`,r:{minutes:.88,words:265},t:"Solr命中关键字高亮不准确",y:"a"}}],["/posts/Database/SOLR/solr-i-multi-field.html",{loader:()=>o(()=>import("./solr-i-multi-field.html-r4fM5Yia.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p>有些场景我们需要搜索多字段，</p>
<p>比如，现在有一个需求，想要输入关键字搜索标题（title）和内容（content）等多个字段</p>
<h2>2. 解决方案</h2>
<h3>2.1 方案一：采用copyField（复制字段）（推荐）</h3>
<p>应定义如下几个名字为title、content以及text的域。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403131051903.png" alt="image-20220417211216815" tabindex="0" loading="lazy"><figcaption>image-20220417211216815</figcaption></figure>`,r:{minutes:.78,words:235},t:"Solr多字段搜索",y:"a"}}],["/posts/Database/SOLR/solr-i-special-characters.html",{loader:()=>o(()=>import("./solr-i-special-characters.html-CKddsjjE.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p>在Solr检索中，下列字符有特殊含义，需 转义处理，否则查询会报查询错误。</p>
<div class="language-diff" data-ext="diff" data-title="diff"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#98C379;--shiki-dark:#98C379">+ – &amp;&amp; || ! ( ) { } [ ] ^ ” ~ * ? : \\</span></span></code></pre>
</div>`,r:{minutes:.66,words:197},t:"Solr搜索特殊字符转义",y:"a"}}],["/posts/Database/SOLR/solr-j-ext.html",{loader:()=>o(()=>import("./solr-j-ext.html-C-q5mUUx.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<h3>1.1 停用词</h3>
<p>停用词(Stop Words) ，词典译为“电脑检索中的虚字、非检索用字”。在SEO中，为节省存储空间和提高搜索效率，搜索引擎在索引页面或处理<strong>搜索请求时会自动忽略某些字或词</strong>，这些字或词即被称为Stop Words(停用词)。</p>
<p>停用词一定程度上相当于过滤词(Filter Words)，不过过滤词的范围更大一些，包含黄色、政治等敏感信息的关键词都会被视做过滤词加以处理，停用词本身则没有这个限制。通常意义上，停用词(Stop Words)大致可分为如下两类：</p>
<ul>
<li>
<p><strong>使用十分广泛，甚至是过于频繁的一些单词。</strong></p>
<p>比如英文的“i”、“is”、“what”，中文的“我”、“就”之类词几乎在每个文档上均会出现，查询这样的词搜索引擎就无法保证能够给出真正相关的搜索结果，难于缩小搜索范围提高搜索结果的准确性，同时还会降低搜索的效率。因此，在真正的工作中，Google和百度等搜索引擎会忽略掉特定的常用词，在搜索的时候，如果我们使用了太多的停用词，也同样有可能无法得到非常精确的结果，甚至是可能大量毫不相关的搜索结果。</p>
</li>
<li>
<p><strong>文本中出现频率很高，但实际意义又不大的词。</strong></p>
<p>这一类主要包括了语气助词、副词、介词、连词等，通常自身并无明确意义，只有将其放入一个完整的句子中才有一定作用的词语。如常见的“的”、“在”、“和”、“接着”之类，比如“SEO研究院是原创的SEO博客”这句话中的“是”、“的”就是两个停用词</p>
</li>
</ul>`,r:{minutes:2.38,words:714},t:"Solr配置ik分词停用词与扩展词",y:"a"}}],["/posts/Database/SOLR/solr-j-ik-analyzer.html",{loader:()=>o(()=>import("./solr-j-ik-analyzer.html-BVIVFAMa.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 背景</h2>
<h2>2. 集成步骤</h2>
<p>下载ik分词器</p>
<p><a href="https://github.com/magese/ik-analyzer-solr" target="_blank" rel="noopener noreferrer">官方文档</a></p>
<p><a href="https://search.maven.org/search?q=g:com.github.magese%20AND%20a:ik-analyzer&amp;core=gav" target="_blank" rel="noopener noreferrer">下载地址</a></p>`,r:{minutes:2.43,words:728},t:"Solr配置中文分词器ik-analyzer",y:"a"}}],["/posts/Database/SOLR/solr-y-action-product-search.html",{loader:()=>o(()=>import("./solr-y-action-product-search.html-ClTdjfXK.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<h2>2. 基础准备</h2>
<h3>2.1 添加依赖</h3>
<p>springboot 版本为 2.2.12.RELEASE</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">&lt;!-- solr驱动 --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">		&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;org.springframework.boot&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">		&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;spring-boot-starter-data-solr&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
</div>`,r:{minutes:4.32,words:1295},t:"Solr实战-商品搜索",y:"a"}}],["/posts/Database/SOLR/solr-z-think.html",{loader:()=>o(()=>import("./solr-z-think.html-Ck7-uTql.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 使用感受</h2>
<h2>2. 使用问题</h2>
<h3>2.1 solr string搜索</h3>
<p>solr 搜索类型为string 时，搜索到的结果会整个高亮。而不是搜索的字段高亮</p>
`,r:{minutes:.25,words:76},t:"Solr使用感受与问题",y:"a"}}],["/posts/Java/Java8%E7%89%B9%E6%80%A7/Java8-LocalDate-LocalDateTime.html",{loader:()=>o(()=>import("./Java8-LocalDate-LocalDateTime.html-orv40dKf.js"),[]),meta:{d:1729494189e3,c:["Java"],g:null,e:`
<blockquote>
<p>理解时间和日期库需要理解如下问题:</p>
<ul>
<li>Java8之前的Date有哪些槽点?</li>
<li>Java8之前使用哪些常用的第三方时间库?</li>
<li>Java8关于时间和日期有哪些类和方法，变比Java8之前它的特点是什么?</li>
<li>其它语言时间库?</li>
</ul>
</blockquote>
<h2>1. Java8之前的Date有哪些槽点</h2>
<blockquote>
<p>Tiago Fernandez做过一次投票，选举最烂的JAVA API，排第一的EJB2.X，第二的就是日期API。</p>
</blockquote>`,r:{minutes:10.2,words:3060},t:"Java 8 - LocalDate/LocalDateTime",O:50,y:"a"}}],["/posts/Java/Java8%E7%89%B9%E6%80%A7/Java8-Other.html",{loader:()=>o(()=>import("./Java8-Other.html-DdrrCw1U.js"),[]),meta:{d:1729494189e3,c:["Java"],g:null,e:`
<ul>
<li><a href="https://pdai.tech/md/java/java8/java8-type-anno.html" target="_blank" rel="noopener noreferrer">Java 8 - 类型注解</a></li>
<li><a href="https://pdai.tech/md/java/java8/java8-anno-repeat.html" target="_blank" rel="noopener noreferrer">Java 8 - 重复注解</a></li>
<li><a href="https://pdai.tech/md/java/java8/java8-type.html" target="_blank" rel="noopener noreferrer">Java 8 - 类型推断优化</a></li>
<li><a href="https://pdai.tech/md/java/java8/java8-jre.html" target="_blank" rel="noopener noreferrer">Java 8 - JRE精简</a></li>
<li><a href="https://pdai.tech/md/java/java8/java8-stampedlock.html" target="_blank" rel="noopener noreferrer">Java 8 - StampedLock</a></li>
<li><a href="https://pdai.tech/md/java/java8/java8-javafx.html" target="_blank" rel="noopener noreferrer">Java 8 - JavaFx 2.0</a></li>
<li><a href="https://pdai.tech/md/java/java8/java8-others.html" target="_blank" rel="noopener noreferrer">Java 8 - 其它更新: 字符串，base64,...</a></li>
</ul>`,r:{minutes:.33,words:98},t:"Java 8 - 其他特性",O:900,y:"a"}}],["/posts/Java/Java8%E7%89%B9%E6%80%A7/java8-default.html",{loader:()=>o(()=>import("./java8-default.html-DAI05DQI.js"),[]),meta:{d:1729494189e3,c:["Java"],g:["Java","学习"],e:`
<blockquote>
<p>理解Java 8 默认方法需理解几个问题:</p>
<ul>
<li>
<p>为什么会出现默认方法?</p>
</li>
<li>
<p>接口中出现默认方法，且类可以实现多接口的，那和抽象类有啥区别?</p>
</li>
<li>
<p>多重实现的默认方法冲突怎么办?</p>
</li>
</ul>
</blockquote>
<h2>1. 什么是默认方法，为什么要有默认方法</h2>
<h3>1.1 先上例子</h3>
<p>一个接口A，Clazz类实现了接口A。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> interface</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> A</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    default</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> foo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(){</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">       System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Calling A.foo()"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Clazz</span><span style="color:#C678DD;--shiki-dark:#C678DD"> implements</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> A</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[] </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">){</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">       Clazz</span><span style="color:#E06C75;--shiki-dark:#E06C75"> clazz</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Clazz</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">       clazz</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">foo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//调用A.foo()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
</div>`,r:{minutes:4.5,words:1351},t:"Java 8 - 默认方法",O:40,y:"a"}}],["/posts/Java/Java8%E7%89%B9%E6%80%A7/java8-func-interface.html",{loader:()=>o(()=>import("./java8-func-interface.html-CDqX_d8L.js"),[]),meta:{d:1729494189e3,c:["Java"],g:["Java","学习"],e:`
<h2>1. 理解注解 @FunctionInterface</h2>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * An informative annotation type used to indicate that an interface</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * type declaration is intended to be a &lt;i&gt;functional interface&lt;/i&gt; as</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * defined by the Java Language Specification.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * Conceptually, a functional interface has exactly one abstract</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * method.  Since {@linkplain java.lang.reflect.Method#isDefault()</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * default methods} have an implementation, they are not abstract.  If</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * an interface declares an abstract method overriding one of the</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * public methods of {@code java.lang.Object}, that also does</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * &lt;em&gt;not&lt;/em&gt; count toward the interface's abstract method count</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * since any implementation of the interface will have an</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * implementation from {@code java.lang.Object} or elsewhere.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * &lt;p&gt;Note that instances of functional interfaces can be created with</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * lambda expressions, method references, or constructor references.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * &lt;p&gt;If a type is annotated with this annotation type, compilers are</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * required to generate an error message unless:</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * &lt;ul&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * &lt;li&gt; The type is an interface type and not an annotation type, enum, or class.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * &lt;li&gt; The annotated type satisfies the requirements of a functional interface.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * &lt;/ul&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * &lt;p&gt;However, the compiler will treat any interface meeting the</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * definition of a functional interface as a functional interface</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * regardless of whether or not a {@code FunctionalInterface}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * annotation is present on the interface declaration.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * @jls 4.3.2. The Class Object</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * @jls 9.8 Functional Interfaces</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * @jls 9.4.3 Interface Method Body</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@since</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 1.8</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Documented</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Retention</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">RetentionPolicy</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">RUNTIME</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Target</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ElementType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">TYPE</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> @</span><span style="color:#C678DD;--shiki-dark:#C678DD">interface</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> FunctionalInterface</span><span style="color:#E06C75;--shiki-dark:#E06C75">{}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:3.71,words:1113},t:"Java8-函数式接口",O:20,y:"a"}}],["/posts/Java/Java8%E7%89%B9%E6%80%A7/java8-lambda.html",{loader:()=>o(()=>import("./java8-lambda.html-Cqod_HN-.js"),[]),meta:{d:1729494189e3,c:["Java"],g:["Java","学习"],e:`
<blockquote>
<p>我们关心的是如何写出好代码，而不是符合函数编程风格的代码。</p>
</blockquote>
<h2>1. 函数编程简介</h2>
<blockquote>
<p>在Java世界里面，面向对象还是主流思想，对于习惯了面向对象编程的开发者来说，抽象的概念并不陌生。<strong>面向对象编程是对数据进行抽象，而函数式编程是对行为进行抽象</strong>。现实世界中，数据和行为并存，程序也是如此，因此这两种编程方式我们都得学。</p>
</blockquote>
<blockquote>
<p>这种新的抽象方式还有其他好处。很多人<strong>不总是在编写性能优先的代码</strong>，对于这些人来说，函数式编程带来的好处尤为明显。程序员<strong>能编写出更容易阅读的代码</strong>——这种代码更多地表达了业务逻辑，而不是从机制上如何实现。<strong>易读的代码也易于维护、更可靠、更不容易出错</strong>。</p>
</blockquote>`,r:{minutes:18.02,words:5406},t:"Java8-函数编程(lambda表达式)",O:10,y:"a"}}],["/posts/Java/Java8%E7%89%B9%E6%80%A7/java8-optional.html",{loader:()=>o(()=>import("./java8-optional.html-D8EaHcQl.js"),[]),meta:{d:1729494189e3,c:["Java"],g:null,e:`
<blockquote>
<p>个人用得比较少，首先性能不见得比 == null 好，而且使用比较麻烦。现在大部分使用hutool 的ObjectUtil来代替。</p>
<p>但如果在异步编程中，还是挺好用的。</p>
<p>现在框架中只有JPA 在大量使用Optional</p>
</blockquote>
<blockquote>
<p>身为一名Java程序员，大家可能都有这样的经历: 调用一个方法得到了返回值却不能直接将返回值作为参数去调用别的方法。我们首先要判断这个返回值是否为null，只有在非空的前提下才能将其作为其他方法的参数。这正是一些类似Guava的外部API试图解决的问题。一些JVM编程语言比如Scala、Ceylon等已经将对在核心API中解决了这个问题。</p>
</blockquote>`,r:{minutes:9.08,words:2723},t:"Java 8 - Optional类深度解析",O:30,y:"a"}}],["/posts/Java/Java8%E7%89%B9%E6%80%A7/java8-permgen.html",{loader:()=>o(()=>import("./java8-permgen.html-BOV0NeVJ.js"),[]),meta:{d:1729494189e3,c:["Java"],g:null,e:`
<blockquote>
<p>很多开发者都在其系统中见过“java.lang.OutOfMemoryError: PermGen space”这一问题。这往往是由类加载器相关的内存泄漏以及新类加载器的创建导致的，通常出现于代码热部署时。相对于正式产品，该问题在开发机上出现的频率更高，在产品中最常见的“问题”是默认值太低了。常用的解决方法是将其设置为256MB或更高。</p>
</blockquote>
<h2>1. PermGen space简单介绍</h2>
<p>PermGen space的全称是Permanent Generation space,是指内存的永久保存区域，说说为什么会内存溢出: 这一部分用于存放Class和Meta的信息,Class在被 Load的时候被放入PermGen space区域，它和和存放Instance的Heap区域不同,所以如果你的APP会LOAD很多CLASS的话,就很可能出现PermGen space错误。这种错误常见在web服务器对JSP进行pre compile的时候。</p>`,r:{minutes:6.99,words:2097},t:"Java 8 - 移除JVM永久代Permgen",O:60,y:"a"}}],["/posts/Java/JavaIO/java-io-aio.html",{loader:()=>o(()=>import("./java-io-aio.html-2j4TEIBn.js"),[]),meta:{d:1729494189e3,c:["Java","IO"],g:null,e:`
<blockquote>
<p>本文主要对异步IO和Java中对AIO的支持详解。</p>
</blockquote>
<h2>1. 异步IO</h2>
<p>上面两篇文章中，我们分别讲解了阻塞式同步IO、非阻塞式同步IO、多路复用IO 这三种IO模型，以及JAVA对于这三种IO模型的支持。重点说明了IO模型是由操作系统提供支持，且这三种IO模型都是同步IO，都是采用的“应用程序不询问我，我绝不会主动通知”的方式。</p>
<p>异步IO则是采用“订阅-通知”模式: 即应用程序向操作系统注册IO监听，然后继续做自己的事情。当操作系统发生IO事件，并且准备好数据后，在主动通知应用程序，触发相应的函数:</p>`,r:{minutes:10.96,words:3288},t:"Java AIO - 异步IO详解",O:110,y:"a"}}],["/posts/Java/JavaIO/java-io-basic-category.html",{loader:()=>o(()=>import("./java-io-basic-category.html-DsBq_fit.js"),[]),meta:{d:1729494189e3,c:["Java","IO"],g:null,e:`
<blockquote>
<p>本文主要从<code>传输方式</code>和<code>数据操作</code>两个方面分析Java IO的分类。</p>
</blockquote>
<h2>1. IO理解分类 - 从传输方式上</h2>
<p>从数据传输方式或者说是运输方式角度看，可以将 IO 类分为:</p>
<ul>
<li>字节流</li>
<li>字符流</li>
</ul>
<p><code>字节</code>是个计算机看的，<code>字符</code>才是给人看的</p>
<h3>1.1 字节流</h3>
<p>(整体结构如下，部分派生类有缺失)</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403120923572.png" alt="image-20220830201920368" tabindex="0" loading="lazy"><figcaption>image-20220830201920368</figcaption></figure>`,r:{minutes:2.31,words:694},t:"Java IO - 分类(传输，操作)",O:20,y:"a"}}],["/posts/Java/JavaIO/java-io-basic-code-inputstream.html",{loader:()=>o(()=>import("./java-io-basic-code-inputstream.html-BlFxhb2_.js"),[]),meta:{d:1729494189e3,c:["Java","IO"],g:null,e:`
<blockquote>
<p>本文主要从<strong>JDK 11 源码</strong>角度分析InputStream。</p>
</blockquote>
<h2>1. InputStream 类实现关系</h2>
<blockquote>
<p>InputStream是输入字节流，具体的实现类层次结构如下：</p>
</blockquote>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403120923352.png" alt="image-20220830204238728" tabindex="0" loading="lazy"><figcaption>image-20220830204238728</figcaption></figure>`,r:{minutes:14.29,words:4286},t:"Java IO - 源码: InputStream",O:40,y:"a"}}],["/posts/Java/JavaIO/java-io-basic-code-outputstream.html",{loader:()=>o(()=>import("./java-io-basic-code-outputstream.html-DxnrBYSP.js"),[]),meta:{d:1729494189e3,c:["Java","IO"],g:null,e:`
<blockquote>
<p>本文主要从JDK 11源码角度分析 OutputStream。</p>
</blockquote>
<h2>1. OutputStream 类实现关系</h2>
<blockquote>
<p>OutputStream是输出字节流，具体的实现类层次结构如下：</p>
</blockquote>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403120923639.png" alt="image-20220830205929890" tabindex="0" loading="lazy"><figcaption>image-20220830205929890</figcaption></figure>`,r:{minutes:6.32,words:1897},t:"Java IO - 源码: OutputStream",O:50,y:"a"}}],["/posts/Java/JavaIO/java-io-basic-design-pattern.html",{loader:()=>o(()=>import("./java-io-basic-design-pattern.html-Bb7PqzUy.js"),[]),meta:{d:1729494189e3,c:["Java","IO"],g:null,e:`
<blockquote>
<p>Java I/O 使用了装饰者模式来实现。</p>
</blockquote>
<h2>1. 装饰者模式</h2>
<p>请参考<a href="https://pdai.tech/md/dev-spec/pattern/12_decorator.html" target="_blank" rel="noopener noreferrer">装饰者模式详解</a></p>
<p>装饰者(Decorator)和具体组件(ConcreteComponent)都继承自组件(Component)，具体组件的方法实现不需要依赖于其它对象，而装饰者组合了一个组件，这样它可以装饰其它装饰者或者具体组件。所谓装饰，就是把这个装饰者套在被装饰者之上，从而动态扩展被装饰者的功能。装饰者的方法有一部分是自己的，这属于它的功能，然后调用被装饰者的方法实现，从而也保留了被装饰者的功能。可以看到，具体组件应当是装饰层次的最低层，因为只有具体组件的方法实现不需要依赖于其它对象。</p>`,r:{minutes:1.49,words:446},t:"Java IO - 设计模式(装饰者模式)",O:30,y:"a"}}],["/posts/Java/JavaIO/java-io-basic-usage.html",{loader:()=>o(()=>import("./java-io-basic-usage.html-BiDAvVMD.js"),[]),meta:{d:1729494189e3,c:["Java","IO"],g:null,e:`
<blockquote>
<p>本文主要介绍Java IO常见类的使用，包括：磁盘操作，字节操作，字符操作，对象操作和网络操作。</p>
</blockquote>
<h2>1. IO常见类的使用</h2>
<p>Java 的 I/O 大概可以分成以下几类:</p>
<ul>
<li>磁盘操作: File</li>
<li>字节操作: InputStream 和 OutputStream</li>
<li>字符操作: Reader 和 Writer</li>
<li>对象操作: Serializable</li>
<li>网络操作: Socket</li>
</ul>
<h3>1.1 File相关</h3>`,r:{minutes:3.07,words:920},t:"Java IO - 常见类使用",O:60,y:"a"}}],["/posts/Java/JavaIO/java-io-bio.html",{loader:()=>o(()=>import("./java-io-bio.html-Dd8a300z.js"),[]),meta:{d:1729494189e3,c:["Java","IO"],g:null,e:`
<blockquote>
<p>BIO就是: blocking IO。最容易理解、最容易实现的IO工作方式，应用程序向操作系统请求网络IO操作，这时应用程序会一直等待；另一方面，操作系统收到请求后，也会等待，直到网络上有数据传到监听端口；操作系统在收集数据后，会把数据发送给应用程序；最后应用程序受到数据，并解除等待状态。</p>
</blockquote>
<h2>1. 几个重要概念</h2>
<ul>
<li><code>阻塞IO</code> 和 <code>非阻塞IO</code></li>
</ul>
<p>这两个概念是<code>程序级别</code>的。主要描述的是程序请求操作系统IO操作后，如果IO资源没有准备好，那么程序该如何处理的问题: 前者等待；后者继续执行(并且使用线程一直轮询，直到有IO资源准备好了)</p>`,r:{minutes:9.79,words:2938},t:"Java IO - BIO 详解",O:80,y:"a"}}],["/posts/Java/JavaIO/java-io-file.html",{loader:()=>o(()=>import("./java-io-file.html-CLo_gj1Y.js"),[]),meta:{d:1729494189e3,c:["Java","IO"],e:`
<h2>1.File类</h2>
<h3>1.1File类概述和构造方法【应用】</h3>
<ul>
<li>
<p>File类介绍</p>
<ul>
<li>它是文件和目录路径名的抽象表示</li>
<li>文件和目录是可以通过File封装成对象的</li>
<li>对于File而言,其封装的并不是一个真正存在的文件,仅仅是一个路径名而已.它可以是存在的,也可以是不存在的.将来是要通过具体的操作把这个路径的内容转换为具体存在的</li>
</ul>
</li>
<li>
<p>File类的构造方法</p>
<table>
<thead>
<tr>
<th>方法名</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>File(String   pathname)</td>
<td>通过将给定的路径名字符串转换为抽象路径名来创建新的 File实例</td>
</tr>
<tr>
<td>File(String   parent, String child)</td>
<td>从父路径名字符串和子路径名字符串创建新的   File实例</td>
</tr>
<tr>
<td>File(File   parent, String child)</td>
<td>从父抽象路径名和子路径名字符串创建新的   File实例</td>
</tr>
</tbody>
</table>
</li>
<li>
<p>示例代码</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> FileDemo01</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[] </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //File(String pathname): 通过将给定的路径名字符串转换为抽象路径名来创建新的 File实例</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        File</span><span style="color:#E06C75;--shiki-dark:#E06C75"> f1</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> File</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"E:</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\\\\</span><span style="color:#98C379;--shiki-dark:#98C379">itcast</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\\\\</span><span style="color:#98C379;--shiki-dark:#98C379">java.txt"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(f1);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //File(String parent, String child): 从父路径名字符串和子路径名字符串创建新的 File实例</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        File</span><span style="color:#E06C75;--shiki-dark:#E06C75"> f2</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> File</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"E:</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\\\\</span><span style="color:#98C379;--shiki-dark:#98C379">itcast"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">"java.txt"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(f2);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //File(File parent, String child): 从父抽象路径名和子路径名字符串创建新的 File实例</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        File</span><span style="color:#E06C75;--shiki-dark:#E06C75"> f3</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> File</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"E:</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\\\\</span><span style="color:#98C379;--shiki-dark:#98C379">itcast"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        File</span><span style="color:#E06C75;--shiki-dark:#E06C75"> f4</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> File</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(f3,</span><span style="color:#98C379;--shiki-dark:#98C379">"java.txt"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(f4);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
</ul>`,r:{minutes:17.36,words:5208},t:"Java IO File",y:"a"}}],["/posts/Java/JavaIO/java-io-model.html",{loader:()=>o(()=>import("./java-io-model.html-OCjC3k5I.js"),[]),meta:{d:1729494189e3,c:["Java","IO"],g:null,e:`
<blockquote>
<p>本文主要简要介绍 Unix I/O 5种模型，并对5大模型比较，并重点为后续章节解释IO多路复用做铺垫。</p>
</blockquote>
<h2>1. Unix IO 模型简介</h2>
<p>一个输入操作通常包括两个阶段:</p>
<ul>
<li>等待数据准备好</li>
<li>从内核向进程复制数据</li>
</ul>
<p>对于一个套接字上的输入操作，第一步通常涉及等待数据从网络中到达。当所等待分组到达时，它被复制到内核中的某个缓冲区。第二步就是把数据从内核缓冲区复制到应用进程缓冲区。</p>
<p>Unix 下有五种 I/O 模型:</p>
<ul>
<li>阻塞式 I/O</li>
<li>非阻塞式 I/O</li>
<li>I/O 复用(select 和 poll)</li>
<li>信号驱动式 I/O(SIGIO)</li>
<li>异步 I/O(AIO)</li>
</ul>`,r:{minutes:6,words:1799},t:"IO 模型 - Unix IO 模型",O:70,y:"a"}}],["/posts/Java/JavaIO/java-io-nio-netty.html",{loader:()=>o(()=>import("./java-io-nio-netty.html-b_cbyFdZ.js"),[]),meta:{d:1729494189e3,c:["Java","IO"],g:null,e:`
<blockquote>
<p>Netty是一个高性能、异步事件驱动的NIO框架，提供了对TCP、UDP和文件传输的支持。作为当前最流行的NIO框架，Netty在互联网领域、大数据分布式计算领域、游戏行业、通信行业等获得了广泛的应用，一些业界著名的开源组件也基于Netty构建，比如RPC框架、zookeeper等。</p>
</blockquote>
<h2>1. NIO框架</h2>
<p>目前流行的NIO框架非常的多。在论坛上、互联网上大家讨论和使用最多的有以下几种:</p>
<ul>
<li>原生JAVA NIO框架:</li>
</ul>
<p>JAVA NIO通信框架基于多路复用IO原理，我们将详细讲解它的工作原理。</p>`,r:{minutes:3.19,words:956},t:"Java N(A)IO - 框架: Netty",O:120,y:"a"}}],["/posts/Java/JavaIO/java-io-nio-select-epoll.html",{loader:()=>o(()=>import("./java-io-nio-select-epoll.html-DjSugKwV.js"),[]),meta:{d:1729494189e3,c:["Java","IO"],g:null,e:`
<blockquote>
<p>本文主要对IO多路复用，Ractor模型以及Java NIO对其的支持。</p>
</blockquote>
<h2>1. 现实场景</h2>
<p>我们试想一下这样的现实场景:</p>
<p>一个餐厅同时有100位客人到店，当然到店后第一件要做的事情就是点菜。但是问题来了，餐厅老板为了节约人力成本目前只有一位大堂服务员拿着唯一的一本菜单等待客人进行服务。</p>
<ul>
<li>那么最笨(但是最简单)的方法是(方法A)，无论有多少客人等待点餐，服务员都把仅有的一份菜单递给其中一位客人，然后站在客人身旁等待这个客人完成点菜过程。在记录客人点菜内容后，把点菜记录交给后堂厨师。然后是第二位客人。。。。然后是第三位客人。很明显，只有脑袋被门夹过的老板，才会这样设置服务流程。因为随后的80位客人，再等待超时后就会离店(还会给差评)。</li>
<li>于是还有一种办法(方法B)，老板马上新雇佣99名服务员，同时印制99本新的菜单。每一名服务员手持一本菜单负责一位客人(关键不只在于服务员，还在于菜单。因为没有菜单客人也无法点菜)。在客人点完菜后，记录点菜内容交给后堂厨师(当然为了更高效，后堂厨师最好也有100名)。这样每一位客人享受的就是VIP服务咯，当然客人不会走，但是人力成本可是一个大头哦(亏死你)。</li>
<li>另外一种办法(方法C)，就是改进点菜的方式，当客人到店后，自己申请一本菜单。想好自己要点的才后，就呼叫服务员。服务员站在自己身边后记录客人的菜单内容。将菜单递给厨师的过程也要进行改进，并不是每一份菜单记录好以后，都要交给后堂厨师。服务员可以记录号多份菜单后，同时交给厨师就行了。那么这种方式，对于老板来说人力成本是最低的；对于客人来说，虽然不再享受VIP服务并且要进行一定的等待，但是这些都是可接受的；对于服务员来说，基本上她的时间都没有浪费，基本上被老板压杆了最后一滴油水。</li>
</ul>`,r:{minutes:30.67,words:9200},t:"Java NIO - IO多路复用详解",O:100,y:"a"}}],["/posts/Java/JavaIO/java-io-nio.html",{loader:()=>o(()=>import("./java-io-nio.html-DReoVPa2.js"),[]),meta:{d:1729494189e3,c:["Java","IO"],g:null,e:`
<blockquote>
<p>新的输入/输出 (NIO) 库是在 JDK 1.4 中引入的，弥补了原来的 I/O 的不足，提供了高速的、面向块的 I/O。</p>
</blockquote>
<p>Standard IO是对字节流的读写，在进行IO之前，首先创建一个流对象，流对象进行读写操作都是按字节 ，一个字节一个字节的来读或写。而NIO把IO抽象成块，类似磁盘的读写，每次IO操作的单位都是一个块，块被读入内存之后就是一个byte[]，NIO一次可以读或写多个字节。</p>
<h2>1. 流与块</h2>
<p>I/O 与 NIO 最重要的区别是数据打包和传输的方式，<strong>I/O 以流的方式处理数据，而 NIO 以块的方式处理数据。</strong></p>`,r:{minutes:7.54,words:2262},t:"Java NIO - 基础详解",O:90,y:"a"}}],["/posts/Java/JavaIO/java-io-overview.html",{loader:()=>o(()=>import("./java-io-overview.html-DezHsIDq.js"),[]),meta:{d:1729494189e3,c:["Java","IO"],g:null,e:`
<h2>1. 知识体系</h2>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403120939725.jpeg" alt="java-io-overview" tabindex="0" loading="lazy"><figcaption>java-io-overview</figcaption></figure>
<h2>2. 相关文章</h2>
<blockquote>
<p><strong>A. Java进阶 - IO框架之知识体系</strong>：首先了解下Java IO框架包含什么，同时推荐下如何学习IO框架。</p>
</blockquote>`,r:{minutes:3.1,words:929},t:"Java IO知识体系详解",O:10,y:"a"}}],["/posts/Java/JavaIO/java-io-steam.html",{loader:()=>o(()=>import("./java-io-steam.html-CQOqJsSj.js"),[]),meta:{d:1729494189e3,c:["Java","IO"],e:`
<h2>1.字符流</h2>
<h3>1.1为什么会出现字符流【理解】</h3>
<ul>
<li>
<p>字符流的介绍</p>
<p>由于字节流操作中文不是特别的方便，所以Java就提供字符流</p>
<p>字符流 = 字节流 + 编码表</p>
</li>
<li>
<p>中文的字节存储方式</p>
<p>用字节流复制文本文件时，文本文件也会有中文，但是没有问题，原因是最终底层操作会自动进行字节拼接成中文，如何识别是中文的呢？</p>
<p>汉字在存储的时候，无论选择哪种编码存储，第一个字节都是负数</p>
</li>
</ul>
<h3>1.2编码表【理解】</h3>
<ul>
<li>
<p>什么是字符集</p>
<p>是一个系统支持的所有字符的集合，包括各国家文字、标点符号、图形符号、数字等</p>
<p>l计算机要准确的存储和识别各种字符集符号，就需要进行字符编码，一套字符集必然至少有一套字符编码。常见字符集有ASCII字符集、GBXXX字符集、Unicode字符集等</p>
</li>
<li>
<p>常见的字符集</p>
<ul>
<li>
<p>ASCII字符集：</p>
<p>lASCII：是基于拉丁字母的一套电脑编码系统，用于显示现代英语，主要包括控制字符(回车键、退格、换行键等)和可显示字符(英文大小写字符、阿拉伯数字和西文符号)</p>
<p>基本的ASCII字符集，使用7位表示一个字符，共128字符。ASCII的扩展字符集使用8位表示一个字符，共256字符，方便支持欧洲常用字符。是一个系统支持的所有字符的集合，包括各国家文字、标点符号、图形符号、数字等</p>
</li>
<li>
<p>GBXXX字符集：</p>
<p>GBK：最常用的中文码表。是在GB2312标准基础上的扩展规范，使用了双字节编码方案，共收录了21003个汉字，完全兼容GB2312标准，同时支持繁体汉字以及日韩汉字等</p>
</li>
<li>
<p>Unicode字符集：</p>
<p>UTF-8编码：可以用来表示Unicode标准中任意字符，它是电子邮件、网页及其他存储或传送文字的应用 中，优先采用的编码。互联网工程工作小组（IETF）要求所有互联网协议都必须支持UTF-8编码。它使用一至四个字节为每个字符编码</p>
<p>编码规则：</p>
<p>128个US-ASCII字符，只需一个字节编码</p>
<p>拉丁文等字符，需要二个字节编码</p>
<p>大部分常用字（含中文），使用三个字节编码</p>
<p>其他极少使用的Unicode辅助字符，使用四字节编码</p>
</li>
</ul>
</li>
</ul>`,r:{minutes:17.36,words:5208},t:"Java IO Stream",y:"a"}}],["/posts/Java/JavaJVM/java-jvm-agent-arthas-problem.html",{loader:()=>o(()=>import("./java-jvm-agent-arthas-problem.html-DhoNLwPa.js"),[]),meta:{d:1729494189e3,c:["Java","JVM"],g:null,e:`
<h2>1. 无法trace 和watch加载skywalking7 的jar中的类方法</h2>
<p><a href="https://github.com/alibaba/arthas/issues/1141" target="_blank" rel="noopener noreferrer">原文：无法trace 和watch加载skywalking7 的jar中的类方法</a></p>
<p>影响的方法</p>
<ul>
<li>trace</li>
<li>watch</li>
<li>stack</li>
<li>monitor</li>
</ul>
<p>暂时还是无法解决</p>`,r:{minutes:.39,words:116},t:"调试排错 - Arthas 遇到的问题",O:289,y:"a"}}],["/posts/Java/JavaJVM/java-jvm-agent-arthas.html",{loader:()=>o(()=>import("./java-jvm-agent-arthas.html-B04iCbXZ.js"),[]),meta:{d:1729494189e3,c:["Java","JVM"],g:null,e:`
<h2>1. Arthas简介</h2>
<blockquote>
<p>在学习Arthas之前，推荐先看上一篇美团技术团队的<a href="https://pdai.tech/md/java/jvm/java-jvm-agent-usage.html" target="_blank" rel="noopener noreferrer">Java 动态调试技术原理及实践</a>，这样你会对它最底层技术有个了解。可以看下文中最后有个对比图：Greys(Arthas也是基于它做的二次开发)和Java-debug-tool。</p>
</blockquote>
<h3>1.1 Arthas是什么</h3>`,r:{minutes:13.72,words:4117},t:"调试排错 - Java 问题排查之应用在线调试Arthas",O:280,y:"a"}}],["/posts/Java/JavaJVM/java-jvm-agent-usage.html",{loader:()=>o(()=>import("./java-jvm-agent-usage.html-DjDALKWq.js"),[]),meta:{d:1729494189e3,c:["Java","JVM"],g:null,e:`
<blockquote>
<p>本文转载自 美团技术团队胡健的<a href="https://tech.meituan.com/2019/11/07/java-dynamic-debugging-technology.html" target="_blank" rel="noopener noreferrer">Java 动态调试技术原理及实践</a>, 通过学习java agent方式进行动态调试了解目前很多大厂开源的一些基于此的调试工具。</p>
</blockquote>
<h2>1. 简介</h2>
<p>断点调试是我们最常使用的调试手段，它可以获取到方法执行过程中的变量信息，并可以观察到方法的执行路径。但断点调试会在断点位置停顿，使得整个应用停止响应。在线上停顿应用是致命的，动态调试技术给了我们创造新的调试模式的想象空间。本文将研究Java语言中的动态调试技术，首先概括Java动态调试所涉及的技术基础，接着介绍我们在Java动态调试领域的思考及实践，通过结合实际业务场景，设计并实现了一种具备动态性的断点调试工具Java-debug-tool，显著提高了故障排查效率。</p>`,r:{minutes:30.41,words:9122},t:"调试排错 - Java动态调试技术原理",O:300,y:"a"}}],["/posts/Java/JavaJVM/java-jvm-class-enhancer.html",{loader:()=>o(()=>import("./java-jvm-class-enhancer.html-Dz9txR1d.js"),[]),meta:{d:1729494189e3,c:["Java","JVM"],g:null,e:`
<blockquote>
<p>在上文中，着重介绍了字节码的结构，这为我们了解字节码增强技术的实现打下了基础。字节码增强技术就是一类对现有字节码进行修改或者动态生成全新字节码文件的技术。接下来，我们将从最直接操纵字节码的实现方式开始深入进行剖析。</p>
</blockquote>
<h2>1. 字节码增强技术</h2>
<p>在上文中，着重介绍了字节码的结构，这为我们了解字节码增强技术的实现打下了基础。字节码增强技术就是一类对现有字节码进行修改或者动态生成全新字节码文件的技术。接下来，我们将从最直接操纵字节码的实现方式开始深入进行剖析</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403120944811.png" alt="image-20220819224238892" tabindex="0" loading="lazy"><figcaption>image-20220819224238892</figcaption></figure>`,r:{minutes:16.97,words:5092},t:"JVM 基础 - 字节码的增强技术",O:30,y:"a"}}],["/posts/Java/JavaJVM/java-jvm-class.html",{loader:()=>o(()=>import("./java-jvm-class.html-CGAkOc25.js"),[]),meta:{d:1729494189e3,c:["Java","JVM"],g:null,e:`
<blockquote>
<p>源代码通过编译器编译为字节码，再通过类加载子系统进行加载到JVM中运行。</p>
</blockquote>
<h2>1. 多语言编译为字节码在JVM运行</h2>
<p>计算机是不能直接运行java代码的，必须要先运行java虚拟机，再由java虚拟机运行编译后的java代码。这个编译后的java代码，就是本文要介绍的java字节码。</p>
<p>为什么jvm不能直接运行java代码呢，这是因为在cpu层面看来计算机中所有的操作都是一个个指令的运行汇集而成的，java是高级语言，只有人类才能理解其逻辑，计算机是无法识别的，所以java代码必须要先编译成字节码文件，jvm才能正确识别代码转换后的指令并将其运行。</p>`,r:{minutes:13.9,words:4169},t:"JVM 基础 - 类字节码详解",O:20,y:"a"}}],["/posts/Java/JavaJVM/java-jvm-classload-interview.html",{loader:()=>o(()=>import("./java-jvm-classload-interview.html-gcyMxGFt.js"),[]),meta:{d:1729494189e3,c:["Java","JVM"],g:null,e:`
<h2><strong>面试官：请说说你理解的类加载器。</strong></h2>
<hr>
<p>我：通过一个类的<strong>全限定名来获取描述此类的二进制字节流</strong>这个动作放到<strong>Java虚拟机外部去实现</strong>，以便让应用程序<strong>自己决定</strong>如何去获取所需要的类。实现这个动作的代码模块称为**“类加载器”**。</p>
<h2><strong>面试官：说说有哪几种类加载器，他们的职责分别是什么，他们之前存在什么样的约定。</strong></h2>
<hr>
<p>我：emmmm，我在纸上边画边讲吧。</p>
<p>类加载的结构如下：</p>`,r:{minutes:3.77,words:1132},t:"类加载器（常见面试）",y:"a"}}],["/posts/Java/JavaJVM/java-jvm-classload-simplify.html",{loader:()=>o(()=>import("./java-jvm-classload-simplify.html-DrCj2Dpg.js"),[]),meta:{d:1729494189e3,c:["Java","JVM"],g:null,e:`
<h1>1. 前言</h1>
<p>一个java文件从编码完成到最终执行，一般主要包含两个过程</p>
<ul>
<li>编译</li>
<li>运行</li>
</ul>
<p><strong>编译</strong>，即把我们写好的java文件，通过javac命令编译成字节码，也就是我们常说的.class文件。</p>
<p><strong>运行</strong>，则是把编译生成的.class文件交给Java虚拟机(JVM)执行。</p>
<p>而我们所说的类加载过程即是指JVM虚拟机把.class文件中类信息加载进内存，并进行解析生成对应的class对象的过程。</p>
<p>举个通俗点的例子来说，JVM在执行某段代码时，遇到了class A， 然而此时内存中并没有class A的相关信息，于是JVM就会到相应的class文件中去寻找class A的类信息，并加载进内存中，这就是我们所说的类加载过程。</p>`,r:{minutes:5.03,words:1509},t:"类加载过程(精简版)",y:"a"}}],["/posts/Java/JavaJVM/java-jvm-classload-tomcat.html",{loader:()=>o(()=>import("./java-jvm-classload-tomcat.html-BTSonSEQ.js"),[]),meta:{d:1729494189e3,c:["Java","JVM"],g:null,e:`
<p>通过前文我们已经了解了类加载器以及双亲委派模型，并且了解为什么使用双亲委派模型。但我们考虑一下我们tomcat 中的场景</p>
<ul>
<li>一个web容器可能需要部署两个应用程序，不同的应用程序可能会<strong>依赖同一个第三方类库的不同版本</strong>。不能要求同一个类库在同一个服务器只有一份，因此要保证每个应用程序的类库都是独立的，保证相互隔离。</li>
</ul>
<p>如果我们使用双亲委派模型就不能保证他们的隔离性了，那么我们如果要破坏双亲委派模型</p>
<h2>1. 如何破坏双亲委派模型</h2>
<p>双亲委任模型<strong>不是一个强制性的约束模型</strong>，而是一个建议型的类加载器实现方式。</p>`,r:{minutes:6.65,words:1995},t:"tomcat类加载器",y:"a"}}],["/posts/Java/JavaJVM/java-jvm-classload.html",{loader:()=>o(()=>import("./java-jvm-classload.html-CwdisYHE.js"),[]),meta:{d:1729494189e3,c:["Java","JVM"],g:null,e:`
<h2>1. 类的生命周期</h2>
<p>其中类加载的过程包括了<code>加载</code>、<code>验证</code>、<code>准备</code>、<code>解析</code>、<code>初始化</code>五个阶段。在这五个阶段中，<code>加载</code>、<code>验证</code>、<code>准备</code>和<code>初始化</code>这四个阶段发生的顺序是确定的，<em>而<code>解析</code>阶段则不一定，它在某些情况下可以在初始化阶段之后开始，这是为了支持Java语言的运行时绑定(也称为动态绑定或晚期绑定)</em>。另外注意这里的几个阶段是按顺序开始，而不是按顺序进行或完成，因为这些阶段通常都是互相交叉地混合进行的，通常在一个阶段执行的过程中调用或激活另一个阶段。</p>`,r:{minutes:15.57,words:4671},t:"JVM 基础 - Java 类加载机制",O:40,y:"a"}}],["/posts/Java/JavaJVM/java-jvm-classload1.html",{loader:()=>o(()=>import("./java-jvm-classload1.html-Dy1b1lTo.js"),[]),meta:{d:1729494189e3,c:["Java","JVM"],g:null,e:`
<h2>1. 回顾类加载过程</h2>
<p>类加载过程：<strong>加载-&gt;连接-&gt;初始化</strong>。连接过程由可以分成三步：<strong>验证-&gt;准备-&gt;解析</strong></p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403120945757.png" alt="image-20190929170059337" tabindex="0" loading="lazy"><figcaption>image-20190929170059337</figcaption></figure>`,r:{minutes:4.39,words:1317},t:"类加载器",y:"a"}}],["/posts/Java/JavaJVM/java-jvm-cms-gc.html",{loader:()=>o(()=>import("./java-jvm-cms-gc.html-iXx0_zKk.js"),[]),meta:{d:1729494189e3,c:["Java"],g:null,e:`
<h2>1. 写在前面</h2>
<blockquote>
<p>本文主要针对 Hotspot VM 中“CMS + ParNew”组合的一些使用场景进行总结。重点通过部分源码对根因进行分析以及对排查方法进行总结，排查过程会省略较多，另外本文专业术语较多，有一定的阅读门槛，如未介绍清楚，还请自行查阅相关材料。</p>
</blockquote>
<h3>1.1 引言</h3>
<p>自 Sun 发布 Java 语言以来，开始使用 GC 技术来进行内存自动管理，避免了手动管理带来的悬挂指针（Dangling Pointer）问题，很大程度上提升了开发效率，从此 GC 技术也一举成名。GC 有着非常悠久的历史，1960 年有着“Lisp 之父”和“人工智能之父”之称的 John McCarthy 就在论文中发布了 GC 算法，60 年以来， GC 技术的发展也突飞猛进，但不管是多么前沿的收集器也都是基于三种基本算法的组合或应用，也就是说 GC 要解决的根本问题这么多年一直都没有变过。笔者认为，在不太远的将来， GC 技术依然不会过时，比起日新月异的新技术，GC 这门古典技术更值得我们学习。</p>`,r:{minutes:70.03,words:21009},t:"GC - Java 垃圾回收器之CMS GC问题分析与解决",O:140,y:"a"}}],["/posts/Java/JavaJVM/java-jvm-debug-idea.html",{loader:()=>o(()=>import("./java-jvm-debug-idea.html-CYvxArTo.js"),[]),meta:{d:1729494189e3,c:["Java","JVM"],g:null,e:`
<blockquote>
<p>Debug用来追踪代码的运行流程，通常在程序运行过程中出现异常，启用Debug模式可以分析定位异常发生的位置，以及在运行过程中参数的变化；并且在实际的排错过程中，还会用到Remote Debug。IDEA 相比 Eclipse/STS效率更高，本文主要介绍基于IDEA的Debug和Remote Debug的技巧。</p>
</blockquote>
<h2>1. Debug开篇</h2>
<blockquote>
<p>首先看下IDEA中Debug模式下的界面。</p>
</blockquote>
<p>如下是在IDEA中启动Debug模式，进入断点后的界面，我这里是Windows，可能和Mac的图标等会有些不一样。就简单说下图中标注的8个地方：</p>`,r:{minutes:14.18,words:4253},t:"调试排错 - Java 问题排查之使用IDEA本地调试和远程调试",O:290,y:"a"}}],["/posts/Java/JavaJVM/java-jvm-debug-tools-linux.html",{loader:()=>o(()=>import("./java-jvm-debug-tools-linux.html-Dx1VT6gS.js"),[]),meta:{d:1729494189e3,g:null,e:`
<blockquote>
<p>Java 在线问题排查主要分两篇：本文是第一篇，通过linux常用命令排查。</p>
</blockquote>
<h2>1. 文本操作</h2>
<h3>1.1 文本查找 - grep</h3>
<p>grep常用命令：</p>
<div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 基本使用</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">grep</span><span style="color:#98C379;--shiki-dark:#98C379"> yoursearchkeyword</span><span style="color:#98C379;--shiki-dark:#98C379"> f.txt</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     #文件查找</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">grep</span><span style="color:#98C379;--shiki-dark:#98C379"> 'KeyWord otherKeyWord'</span><span style="color:#98C379;--shiki-dark:#98C379"> f.txt</span><span style="color:#98C379;--shiki-dark:#98C379"> cpf.txt</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> #多文件查找, 含空格加引号</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">grep</span><span style="color:#98C379;--shiki-dark:#98C379"> 'KeyWord'</span><span style="color:#98C379;--shiki-dark:#98C379"> /home/admin</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -r</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -n</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> #目录下查找所有符合关键字的文件</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">grep</span><span style="color:#98C379;--shiki-dark:#98C379"> 'keyword'</span><span style="color:#98C379;--shiki-dark:#98C379"> /home/admin</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -r</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -n</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -i</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # -i 忽略大小写</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">grep</span><span style="color:#98C379;--shiki-dark:#98C379"> 'KeyWord'</span><span style="color:#98C379;--shiki-dark:#98C379"> /home/admin</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -r</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -n</span><span style="color:#D19A66;--shiki-dark:#D19A66"> --include</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> *</span><span style="color:#98C379;--shiki-dark:#98C379">.{vm,java}</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> #指定文件后缀</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">grep</span><span style="color:#98C379;--shiki-dark:#98C379"> 'KeyWord'</span><span style="color:#98C379;--shiki-dark:#98C379"> /home/admin</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -r</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -n</span><span style="color:#D19A66;--shiki-dark:#D19A66"> --exclude</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> *</span><span style="color:#98C379;--shiki-dark:#98C379">.{vm,java}</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> #反匹配</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># cat + grep</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">cat</span><span style="color:#98C379;--shiki-dark:#98C379"> f.txt</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> | </span><span style="color:#61AFEF;--shiki-dark:#61AFEF">grep</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -i</span><span style="color:#98C379;--shiki-dark:#98C379"> keyword</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # 查找所有keyword且不分大小写  </span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">cat</span><span style="color:#98C379;--shiki-dark:#98C379"> f.txt</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> | </span><span style="color:#61AFEF;--shiki-dark:#61AFEF">grep</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -c</span><span style="color:#98C379;--shiki-dark:#98C379"> 'KeyWord'</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # 统计Keyword次数</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># seq + grep</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">seq</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 10</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> | </span><span style="color:#61AFEF;--shiki-dark:#61AFEF">grep</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 5</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -A</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 3</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    #上匹配</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">seq</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 10</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> | </span><span style="color:#61AFEF;--shiki-dark:#61AFEF">grep</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 5</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -B</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 3</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    #下匹配</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">seq</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 10</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> | </span><span style="color:#61AFEF;--shiki-dark:#61AFEF">grep</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 5</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -C</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 3</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    #上下匹配，平时用这个就妥了</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:11.33,words:3399},t:"调试排错 - Java 问题排查之Linux命令",y:"a"}}],["/posts/Java/JavaJVM/java-jvm-debug-tools-list.html",{loader:()=>o(()=>import("./java-jvm-debug-tools-list.html-BFNd3J9j.js"),[]),meta:{d:1729494189e3,g:null,e:`
<blockquote>
<p>Java 在线问题排查主要分两篇：本文是第二篇，通过java调试/排查工具进行问题定位。</p>
</blockquote>
<h2>1. Java 调试入门工具</h2>
<h3>1.1 jps</h3>
<blockquote>
<p>jps是jdk提供的一个查看当前java进程的小工具， 可以看做是JavaVirtual Machine Process Status Tool的缩写。</p>
</blockquote>
<p>jps常用命令</p>
<div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">jps</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # 显示进程的ID 和 类的名称</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">jps</span><span style="color:#98C379;--shiki-dark:#98C379"> –l</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # 输出输出完全的包名，应用主类名，jar的完全路径名 </span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">jps</span><span style="color:#98C379;--shiki-dark:#98C379"> –v</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # 输出jvm参数</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">jps</span><span style="color:#98C379;--shiki-dark:#98C379"> –q</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # 显示java进程号</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">jps</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -m</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # main 方法</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">jps</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -l</span><span style="color:#98C379;--shiki-dark:#98C379"> xxx.xxx.xx.xx</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # 远程查看</span></span></code></pre>
</div>`,r:{minutes:7.34,words:2203},t:"调试排错 - Java 问题排查之工具单",y:"a"}}],["/posts/Java/JavaJVM/java-jvm-gc-adapter.html",{loader:()=>o(()=>import("./java-jvm-gc-adapter.html-CxmVdUGP.js"),[]),meta:{d:1729494189e3,c:["Java","JVM"],g:null,e:`
<h2>1. 简介</h2>
<p>垃圾回收器是内存回收的具体实现，JDK自带的垃圾回收器已经完成集成垃圾回收和清理算法，业务程序可以通过设置参数选择垃圾回收器，虚拟机用到的7种经典的垃圾回收器如下表。根据适用内存区域不同，JDK自带的垃圾回收器可分为新生代回收器和老年代回收器，两者可以配合使用。新生代回收器用于堆空间中新生代区域的垃圾回收，老年代回收器用于堆空间中老年代区域的垃圾回收。G1是一种新型的堆内垃圾收集器，既可以用于新生代也可以用于老年代垃圾回收。</p>
<h2>2. 7种垃圾回收器</h2>
<table>
<thead>
<tr>
<th>名称</th>
<th>说明</th>
<th>收集模式</th>
<th>分代适用类型</th>
</tr>
</thead>
<tbody>
<tr>
<td>Serial</td>
<td>单线程串行收集器</td>
<td>串行收集器</td>
<td>新生代</td>
</tr>
<tr>
<td>ParNew</td>
<td>多线程并行Serial收集器</td>
<td>并行收集器</td>
<td>新生代</td>
</tr>
<tr>
<td>Parallel Scavenge</td>
<td>并行吞吐量优先收集器</td>
<td>并行收集器</td>
<td>新生代</td>
</tr>
<tr>
<td>Serial Old</td>
<td>Serial单线程收集器老年代版本</td>
<td>串行收集器</td>
<td>老年代</td>
</tr>
<tr>
<td>CMS(Concurrent Mark Sweep)</td>
<td>并行最短停顿时间收集器</td>
<td>并发收集器</td>
<td>老年代</td>
</tr>
<tr>
<td>Parallel Old</td>
<td>Parallel Scavenge并行收集器老年代版本</td>
<td>并行收集器</td>
<td>老年代</td>
</tr>
<tr>
<td>G1</td>
<td>面向局部收集和基于Region内存布局的新型低延时收集器</td>
<td>并发/并行收集器</td>
<td>新生代/老年代</td>
</tr>
</tbody>
</table>`,r:{minutes:4.35,words:1305},t:"Java如何选择合适的垃圾回收器",y:"a"}}],["/posts/Java/JavaJVM/java-jvm-gc-dispatch.html",{loader:()=>o(()=>import("./java-jvm-gc-dispatch.html-Bu1zK4Rx.js"),[]),meta:{d:1729494189e3,c:["Java","JVM"],g:null,e:`
<h2>1. JVM 内存分配与回收</h2>
<p>Java 的自动内存管理主要是针对象内存的回收和对象的内存的分配。同时，java 自动内存管理最核心的功能是 <strong>堆</strong>内存中的对象分配与回收</p>
<p>Java 堆是垃圾收集器管理的主要区域，因此也被称作<strong>GC 堆（Garbage Collected Heap）</strong>.从垃圾回收的角度，由于现在收集器基本都采用分代垃圾收集算法，所以 Java 堆还可以细分为：新生代和老年代：再细致一点有：Eden 空间、From Survivor、To Survivor 空间等。<strong>进一步划分的目的是更好地回收内存，或者更快地分配内存。</strong></p>`,r:{minutes:4.87,words:1460},t:"JVM 内存分配与回收",y:"a"}}],["/posts/Java/JavaJVM/java-jvm-gc-fullgc.html",{loader:()=>o(()=>import("./java-jvm-gc-fullgc.html-CgBsbQHg.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 背景</h2>
<p>处理过线上问题的同学基本上都会遇到系统突然运行缓慢，CPU 100%,以及Full GC 次数过多的问题。</p>
<h2>2. 初步解决方案</h2>
<p>如果出现该问题导致线上系统不可用，那么首先需要做的就是，<strong>导出jstack和内存信息，然后重启系统</strong>。尽快保证系统的可用性。</p>
<h2>3. 产生的原因</h2>
<p>常见原因</p>
<ol>
<li>代码中某个位置读取数据量较大，导致系统内存耗尽，从而导致Full GC次数过多，系统缓慢</li>
<li>代码中有较多消耗CPU的操作，导致CPU过高，系统运行缓慢</li>
</ol>`,r:{minutes:7.82,words:2345},t:"线上如何排查FullGC(系统 CPU 突然飙升且 GC 频繁，你该如何排查)",y:"a"}}],["/posts/Java/JavaJVM/java-jvm-gc-g1-supplement.html",{loader:()=>o(()=>import("./java-jvm-gc-g1-supplement.html-BSQgRQTS.js"),[]),meta:{d:1729494189e3,c:["Java","JVM"],g:null,e:`
<h2>1. 前言</h2>
<blockquote>
<p>G1:满足高吞吐量的同时满足GC停顿的时间尽可能短</p>
</blockquote>
<p>G1收集器是一款在server端运行的垃圾收集器，专门针对于拥有多核处理器和大内存的机器，在JDK 7u4版本发行时被正式推出，在JDK9中更被指定为官方GC收集器。<strong>它满足高吞吐量的同时满足GC停顿的时间尽可能短</strong>。</p>
<h3>1.1. G1 优势</h3>
<p>G1收集器专门针对以下应用场景设计</p>
<ul>
<li>可以像CMS收集器一样可以和应用并发运行</li>
<li>压缩空闲的内存碎片，却不需要冗长的GC停顿</li>
<li>对GC停顿可以做更好的预测</li>
<li>不想牺牲大量的吞吐量性能</li>
<li>不需要更大的Java Heap</li>
</ul>`,r:{minutes:21.05,words:6314},t:"GC - Java 垃圾回收器之G1（补充）",O:121,y:"a"}}],["/posts/Java/JavaJVM/java-jvm-gc-g1.html",{loader:()=>o(()=>import("./java-jvm-gc-g1.html-oUttVZIO.js"),[]),meta:{d:1729494189e3,c:["Java","JVM"],g:null,e:`
<h2>1. 概述</h2>
<p>G1垃圾回收器是在Java7 update 4之后引入的一个新的垃圾回收器。G1是一个分代的，增量的，并行与并发的标记-复制垃圾回收器。它的设计目标是为了适应现在不断扩大的内存和不断增加的处理器数量，进一步降低暂停时间（pause time），同时兼顾良好的吞吐量。G1回收器和CMS比起来，有以下不同：</p>
<ul>
<li>G1垃圾回收器是<strong>compacting</strong>的，因此其回收得到的空间是连续的。这避免了CMS回收器因为不连续空间所造成的问题。如需要更大的堆空间，更多的floating garbage。连续空间意味着G1垃圾回收器可以不必采用空闲链表的内存分配方式，而可以直接采用bump-the-pointer的方式；</li>
<li>G1回收器的内存与CMS回收器要求的内存模型有极大的不同。G1将内存划分一个个固定大小的region，每个region可以是年轻代、老年代的一个。<strong>内存的回收是以region作为基本单位的</strong>；</li>
<li>G1还有一个及其重要的特性：<strong>软实时</strong>（soft real-time）。所谓的实时垃圾回收，是指在要求的时间内完成垃圾回收。“软实时”则是指，用户可以指定垃圾回收时间的限时，G1会努力在这个时限内完成垃圾回收，但是G1并不担保每次都能在这个时限内完成垃圾回收。通过设定一个合理的目标，可以让达到90%以上的垃圾回收时间都在这个时限内。</li>
</ul>`,r:{minutes:32.71,words:9813},t:"GC - Java 垃圾回收器之G1详解",O:120,y:"a"}}],["/posts/Java/JavaJVM/java-jvm-gc-help.html",{loader:()=>o(()=>import("./java-jvm-gc-help.html-DNmLxU5r.js"),[]),meta:{d:1729494189e3,c:["Java","JVM"],g:null,e:`
<p>即使在可达性分析算法中, 被判定为不可达的对象, 也并非是'非死不可' 的, 这时候他们暂处于'缓刑' 阶段, 要真正宣告一个对象死亡, 至少要经历两次标记过程:</p>
<ol>
<li>如果<strong>对象失去引用(在进行可达性分析后发现没有与 GC Roots 相连接的引用链), 并且该对象的 finalize()方法未调用过</strong>, 该对象将会被第一次标记</li>
<li>如果这个对象已经被标记了, 那么这个对象会被放入 ReferenceQueue 队列中, 由 FinalizeThread 线程去执行, 最终会调用该对象的 finalize() 方法. 这里所谓的'执行' 并不会保证 finalize() 方法调用结束,为如果 finalize() 方法执行缓慢, 极端情况下可能会导致 ReferenceQueue 队列中其他的对象永远处于等待, 甚至导致 GC 系统崩溃.</li>
</ol>`,r:{minutes:2.77,words:830},t:"GC中对象自救",y:"a"}}],["/posts/Java/JavaJVM/java-jvm-gc-log.html",{loader:()=>o(()=>import("./java-jvm-gc-log.html-D_aREU0D.js"),[]),meta:{d:1729494189e3,c:["Java","JVM"],g:null,e:`
<h2>1. 什么时候会发生垃圾收集</h2>
<p>首先我们来看一个问题，那就是什么时候会发生垃圾回收？<br>
在Java中，GC是由JVM自动完成的，根据JVM系统环境而定，所以时机是不确定的。 当然，我们可以手动进行垃圾回收， 比如调用System.gc()方法通知JVM进行一次垃圾回收，但是具体什么时刻运行也无法控制。也就是说System.gc()只是通知要回收，什么时候回收由JVM决定。<br>
一般以下几种情况会发生垃圾回收：</p>
<ol>
<li>当Eden区或者S区不够用时</li>
<li>老年代空间不够用了时</li>
<li>方法区空间不够用时</li>
<li>System.gc() 时</li>
</ol>`,r:{minutes:12.93,words:3878},t:"gc日志分析",y:"a"}}],["/posts/Java/JavaJVM/java-jvm-gc-object-die.html",{loader:()=>o(()=>import("./java-jvm-gc-object-die.html-CXnAsHvw.js"),[]),meta:{d:1729494189e3,c:["Java","JVM"],g:null,e:`
<p>堆中几乎放着所有的对象实例，对堆垃圾回收前的第一步就是判断哪些对象已经死亡（即不能再被任何途径使用的对象）。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403120959800.png" alt="image-20190925214601299" tabindex="0" loading="lazy"><figcaption>image-20190925214601299</figcaption></figure>
<h2>1. 如何判断对象已经死亡</h2>
<h3>1.1 引用计数法</h3>`,r:{minutes:6.8,words:2041},t:"对象已经死亡？",y:"a"}}],["/posts/Java/JavaJVM/java-jvm-gc-orth.html",{loader:()=>o(()=>import("./java-jvm-gc-orth.html-BNpMmMnc.js"),[]),meta:{d:1729494189e3,c:["Java","JVM"],g:null,e:`
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121003087.png" alt="image-20190925225149527" tabindex="0" loading="lazy"><figcaption>image-20190925225149527</figcaption></figure>
<h2>1. 标记-清除算法</h2>
<p>该算法分为“标记”和“清除”阶段：首先标记出所有需要回收的对象，在标记完成后统一回收所有被标记的对象。它是最基础的收集算法，后续的算法都是对其不足进行改进得到。这种垃圾收集算法会带来两个明显的问题：</p>`,r:{minutes:2.03,words:610},t:"垃圾收集器垃圾收集算法",y:"a"}}],["/posts/Java/JavaJVM/java-jvm-gc-overview.html",{loader:()=>o(()=>import("./java-jvm-gc-overview.html-DZpWinYa.js"),[]),meta:{d:1729494189e3,c:["Java","JVM"],g:null,e:`
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121003614.png" alt="image-20190925231744013" tabindex="0" loading="lazy"><figcaption>image-20190925231744013</figcaption></figure>
<p><strong>如果说收集算法是内存回收的方法论，那么垃圾收集器就是内存回收的具体实现。</strong></p>
<p>虽然我们对各个收集器进行比较，但并非要挑选出一个最好的收集器。因为直到现在为止还没有最好的垃圾收集器出现，更加没有万能的垃圾收集器，<strong>我们能做的就是根据具体应用场景选择适合自己的垃圾收集器</strong>。试想一下：如果有一种四海之内、任何场景下都适用的完美收集器存在，那么我们的 HotSpot 虚拟机就不会实现那么多不同的垃圾收集器了。</p>`,r:{minutes:7.36,words:2209},t:"垃圾收集器",y:"a"}}],["/posts/Java/JavaJVM/java-jvm-gc.html",{loader:()=>o(()=>import("./java-jvm-gc.html-Bk7FvgUW.js"),[]),meta:{d:1729494189e3,c:["Java","JVM"],g:null,e:`
<blockquote>
<p>垃圾收集主要是针对堆和方法区进行；程序计数器、虚拟机栈和本地方法栈这三个区域属于线程私有的，只存在于线程的生命周期内，线程结束之后也会消失，因此不需要对这三个区域进行垃圾回收。</p>
</blockquote>
<h2>1. 判断一个对象是否可被回收</h2>
<h3>1.1 引用计数算法</h3>
<p>给对象添加一个引用计数器，当对象增加一个引用时计数器加 1，引用失效时计数器减 1。引用计数为 0 的对象可被回收。</p>
<p>两个对象出现循环引用的情况下，此时引用计数器永远不为 0，导致无法对它们进行回收。</p>
<p><strong>正因为循环引用的存在，因此 Java 虚拟机不使用引用计数算法。</strong></p>`,r:{minutes:17.1,words:5129},t:"GC - Java 垃圾回收基础知识",O:110,y:"a"}}],["/posts/Java/JavaJVM/java-jvm-heap-s.html",{loader:()=>o(()=>import("./java-jvm-heap-s.html-Bs7nqQsR.js"),[]),meta:{d:1729494189e3,c:["Java","JVM"],g:null,e:`
<h2>1. 概述</h2>
<p>对于java程序员来说，在虚拟机自动内存管理机制下，不再需要像C/C++程序开发程序员这样为每一个new 操作去屑对应的delete/free操作，不容易出现内存泄漏和内存溢出问题。正是因为Java程序员把内存控制权交给Java虚拟机，一旦出现内存泄漏和溢出方面的问题。如果不了解虚拟机是怎样使用内存的，那么排查错误将会是一个非常艰巨的任务</p>
<h2>2. 运行时数据区域</h2>
<p>Java虚拟机在执行 java 程序的过程中会把它管理的内存划分成若干个不同的数据区域。JDK 1.8和之前的版本略有不同，下面会介绍</p>
<p>JDK 1.8 之前</p>`,r:{minutes:9.9,words:2970},t:"JVM 基础 - Java内存结构(精简版)",O:51,y:"a"}}],["/posts/Java/JavaJVM/java-jvm-jmm.html",{loader:()=>o(()=>import("./java-jvm-jmm.html-CROV6CI7.js"),[]),meta:{d:1729494189e3,c:["Java","JVM"],g:null,e:`
<blockquote>
<p>任重而道远，这章还不是太理解</p>
</blockquote>
<blockquote>
<p>大致分三部分：重排序与顺序一致性；三个同步原语（lock，volatile，final）的内存语义，重排序规则及在处理器中的实现；java 内存模型的设计，及其与处理器内存模型和顺序一致性内存模型的关系。</p>
</blockquote>
<h2>1. 基础</h2>
<h3>1.1 并发编程模型的分类</h3>
<p>在并发编程中，我们需要处理两个关键问题：线程之间如何通信及线程之间如何同步（这里的线程是指并发执行的活动实体）。通信是指线程之间以何种机制来交换信息。在命令式编程中，线程之间的通信机制有两种：共享内存和消息传递。</p>`,r:{minutes:36.42,words:10925},t:"JVM 基础 - Java 内存模型详解",O:70,y:"a"}}],["/posts/Java/JavaJVM/java-jvm-oom-offheap.html",{loader:()=>o(()=>import("./java-jvm-oom-offheap.html-CBIU5Yvz.js"),[]),meta:{d:1729494189e3,c:["Java","JVM"],g:null,e:`
<blockquote>
<p>Java 堆外内存分析相对来说是复杂的，美团技术团队的<a href="https://tech.meituan.com/2019/01/03/spring-boot-native-memory-leak.html" target="_blank" rel="noopener noreferrer">Spring Boot引起的“堆外内存泄漏”排查及经验总结</a>可以为很多Native Code内存泄漏/占用提供方向性指引。</p>
</blockquote>
<h2>1. 背景</h2>
<p>为了更好地实现对项目的管理，我们将组内一个项目迁移到MDP框架（基于Spring Boot），随后我们就发现系统会频繁报出Swap区域使用量过高的异常。笔者被叫去帮忙查看原因，发现配置了4G堆内内存，但是实际使用的物理内存竟然高达7G，确实不正常。JVM参数配置是“-XX:MetaspaceSize=256M -XX:MaxMetaspaceSize=256M -XX:+AlwaysPreTouch -XX:ReservedCodeCacheSize=128m -XX:InitialCodeCacheSize=128m, -Xss512k -Xmx4g -Xms4g,-XX:+UseG1GC -XX:G1HeapRegionSize=4M”，实际使用的物理内存如下图所示：</p>`,r:{minutes:9.39,words:2816},t:"调试排错 - Java 内存分析之堆外内存",O:230,y:"a"}}],["/posts/Java/JavaJVM/java-jvm-oom-tool.html",{loader:()=>o(()=>import("./java-jvm-oom-tool.html-CCWr4CPK.js"),[]),meta:{d:1729494189e3,c:["Java","JVM"],g:null,e:`
<blockquote>
<p>这些工具只是你排查问题的产生数据，帮助你更好的分析问题的工具，而真正分析还是需要你自己的经验总结。如OOM 和死锁,什么情况会导致OOM/死锁，OOM/死锁的原理是什么?</p>
</blockquote>
<blockquote>
<p>本文主要梳理常见的JVM可视化的分析工具，主要包括JConsole, Visual VM, Vusial GC, JProfile 和 MAT等。</p>
</blockquote>
<h2>1. JConsole</h2>
<blockquote>
<p>Jconsole （Java Monitoring and Management Console），JDK自带的基于JMX的可视化监视、管理工具。 官方文档可以参考<a href="https://docs.oracle.com/javase/8/docs/technotes/guides/management/jconsole.html" target="_blank" rel="noopener noreferrer">这里</a></p>
</blockquote>`,r:{minutes:5.84,words:1751},t:"调试排错 - Java 问题排查之JVM可视化工具",O:270,y:"a"}}],["/posts/Java/JavaJVM/java-jvm-oom.html",{loader:()=>o(()=>import("./java-jvm-oom.html-ByfcYmSa.js"),[]),meta:{d:1729494189e3,c:["Java","JVM"],g:null,e:`
<blockquote>
<p>重点思考线上OOM时，你会怎么处理？如何获取OOM时的内存快照？如何分析OOM 的原因？如何排查</p>
</blockquote>
<blockquote>
<p>本文以两个简单的例子(<code>堆内存溢出</code>和<code>MetaSpace (元数据) 内存溢出</code>）解释Java 内存溢出的分析过程。</p>
</blockquote>
<h2>1. 常见的内存溢出问题(内存和MetaSpace内存)</h2>
<blockquote>
<p>常见的内存溢出问题(内存和MetaSpace内存)。</p>
</blockquote>
<h3>1.1 Java 堆内存溢出</h3>`,r:{minutes:5.1,words:1529},t:"调试排错 - Java 内存分析之堆内存和MetaSpace内存",O:220,y:"a"}}],["/posts/Java/JavaJVM/java-jvm-optimization-jstack.html",{loader:()=>o(()=>import("./java-jvm-optimization-jstack.html-DUV-sbR0.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 实现原理</h2>
<ol>
<li>jstack等命令会与jvm进程建立socket连接</li>
<li>发送对应的指令（jstack发送了threaddump执行）</li>
<li>然后再读取返回的数据</li>
</ol>
<h2>2. jstack使用场景</h2>
<p>**场景：**Java应用持续占用很高CPU，需要排查一下</p>
<p>**模拟：**造个场景简单模拟下，没什么实际意义，仅作演示。我启动了100个线程持续访问 <a href="https://chenyongjun.vip/" target="_blank" rel="noopener noreferrer">我的博客</a>，博客部署在Ubuntu 16.04上，是一个简单的Spring Boot应用，以jar包直接运行的。</p>`,r:{minutes:2.95,words:884},t:"jstack等命令的实现原理",y:"a"}}],["/posts/Java/JavaJVM/java-jvm-optimization-size.html",{loader:()=>o(()=>import("./java-jvm-optimization-size.html-D3YAUNEI.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p>针对堆空间的优化是Java性能调优的重点之一。如果没有设置JVM堆空间大小，JVM会根据服务器物理内存大小设置默认堆大小的值。例如，在64位的服务器端，</p>
<ul>
<li>当物理内存小于192MB时，JVM堆大小默认选为物理内存的一半；</li>
<li><strong>当物理内存大192MB且小于128GB时，JVM堆大小默认选为物理内存的四分之一</strong>；</li>
<li>当物理内存大于等于128GB时，都为32GB。</li>
</ul>
<p>通常情况下，Java应用程序的会通过参数指定堆大小，具体方法下文会有说明。</p>
<h2>2. 推荐配置原则：</h2>`,r:{minutes:1.69,words:506},t:"Java堆设置多大合适",y:"a"}}],["/posts/Java/JavaJVM/java-jvm-optimization.html",{loader:()=>o(()=>import("./java-jvm-optimization.html-BAJEwWFa.js"),[]),meta:{d:1729494189e3,g:null,e:`
<p>JVM性能调优涉及到方方面面的取舍，往往是牵一发而动全身，需要全盘考虑各方面的影响。但也有一些基础的理论和原则，理解这些理论并遵循这些原则会让你的性能调优任务将会更加轻松。为了更好的理解本篇所介绍的内容。你需要已经了解和遵循以下内容:</p>
<blockquote>
<p>1、已了解jvm 垃圾收集器<br>
2、已了解jvm 性能监控常用工具<br>
3、能够读懂gc日志<br>
4、确信不为了调优而调优，jvm调优不能解决一切性能问题</p>
</blockquote>
<p>如果对这些不了解不建议读本篇文章。</p>
<p>本篇文章基于jvm性能调优，结合jvm的各项参数对应用程序调优，主要内容有以下几个方面：</p>`,r:{minutes:15.76,words:4729},t:"如何合理的规划 JVM 性能调优",y:"a"}}],["/posts/Java/JavaJVM/java-jvm-param.html",{loader:()=>o(()=>import("./java-jvm-param.html-w-bdKUOZ.js"),[]),meta:{d:1729494189e3,c:["Java","JVM"],g:null,e:`
<blockquote>
<p>本文对JVM涉及的常见的调优参数和垃圾回收参数进行阐述。</p>
</blockquote>
<h2>1. Jvm常用参数</h2>
<ul>
<li>-Xms</li>
</ul>
<p>堆最小值</p>
<ul>
<li>-Xmx</li>
</ul>
<p>堆最大堆值。-Xms与-Xmx 的单位默认字节都是以k、m做单位的。</p>
<p>通常这两个配置参数相等，避免每次空间不足，动态扩容带来的影响。</p>
<ul>
<li>-Xmn</li>
</ul>
<p>新生代大小</p>
<ul>
<li>-Xss</li>
</ul>
<p>每个线程池的堆栈大小。在jdk5以上的版本，每个线程堆栈大小为1m，jdk5以前的版本是每个线程池大小为256k。一般在相同物理内存下，如果减少－xss值会产生更大的线程数，但不同的操作系统对进程内线程数是有限制的，是不能无限生成。</p>`,r:{minutes:6.34,words:1903},t:"调试排错 - JVM 调优参数",O:210,y:"a"}}],["/posts/Java/JavaJVM/java-jvm-struct.html",{loader:()=>o(()=>import("./java-jvm-struct.html-C2OfzSiE.js"),[]),meta:{d:1729494189e3,c:["Java","JVM"],g:null,e:`
<blockquote>
<p>本文主要对JVM 内存结构进行讲解，注意不要和Java内存模型混淆了。</p>
</blockquote>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121202954.png" alt="image-20220820213459433" tabindex="0" loading="lazy"><figcaption>image-20220820213459433</figcaption></figure>
<h2>0. 运行时数据区</h2>
<p>内存是非常重要的系统资源，是硬盘和 CPU 的中间仓库及桥梁，承载着操作系统和应用程序的实时运行。JVM 内存布局规定了 Java 在运行过程中内存申请、分配、管理的策略，保证了 JVM 的高效稳定运行。不同的 JVM 对于内存的划分方式和管理机制存在着部分差异。</p>`,r:{minutes:47.74,words:14322},t:"JVM 基础 - JVM 内存结构",O:50,y:"a"}}],["/posts/Java/JavaJVM/java-jvm-thread-dump.html",{loader:()=>o(()=>import("./java-jvm-thread-dump.html-Dfy8pX7x.js"),[]),meta:{d:1729494189e3,c:["Java","JVM"],g:null,e:`
<blockquote>
<p>Thread Dump是非常有用的诊断Java应用问题的工具。</p>
</blockquote>
<h2>1. Thread Dump介绍</h2>
<h3>1.1 什么是Thread Dump</h3>
<p>Thread Dump是非常有用的诊断Java应用问题的工具。每一个Java虚拟机都有及时生成所有线程在某一点状态的thread-dump的能力，虽然各个 Java虚拟机打印的thread dump略有不同，但是 大多都提供了当前活动线程的快照，及JVM中所有Java线程的堆栈跟踪信息，堆栈信息一般包含完整的类名及所执行的方法，如果可能的话还有源代码的行数。</p>`,r:{minutes:18.98,words:5695},t:"调试排错 - Java 线程分析之线程Dump分析",O:240,y:"a"}}],["/posts/Java/JavaJVM/java-jvm-tools-mat-peoject.html",{loader:()=>o(()=>import("./java-jvm-tools-mat-peoject.html-DGnJefpe.js"),[]),meta:{d:1729494189e3,c:["Java","JVM"],g:null,e:`
<h2>1. 背景</h2>
<p>前段时间接手了一个项目，正常运行都没有问题。但是<strong>运行个几天就会OOM异常</strong>，导致服务不可用。我们首先第一个想到的就是该项目内存泄漏导致，但是项目本身已经比较庞大，要找到一个内存泄漏的点，还是比较难得。</p>
<p>所以我们使用MAT来分析线上项目的运行情况</p>
<h2>2. <code>jmap</code>:生成堆转储快照</h2>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>jmap -dump:format=b,file=./heap.hprof 19012</span></span>
<span class="line"><span>Dumping heap to /home/ftpuser/services/mywebsocket/heap.hprof ...</span></span>
<span class="line"><span>Heap dump file created</span></span></code></pre>
</div>`,r:{minutes:1.79,words:537},t:"记一次MAT分析线上项目过程",y:"a"}}],["/posts/Java/JavaJVM/java-jvm-tools-mat-shallow.html",{loader:()=>o(()=>import("./java-jvm-tools-mat-shallow.html-DxymqTUq.js"),[]),meta:{d:1729494189e3,c:["Java","JVM"],g:null,e:`
<p>所有包含Heap Proflin 功能的工具（MAT，TPTP等）都会使用到两个名词，一个是Shallow Size，另一个是Retained Size</p>
<h2>1 概念</h2>
<h3>1.1 Shallow Size</h3>
<p><strong>对象自身占用的内存大小，不包括他引用的对象</strong></p>
<p>针对非数组类型的对象，它的大小就是对象与他所有的成员变量大小的总和。当然这里面还会包括一些java语言特性的数据存储单元。<br>
针对数组类型的对象，它的大小是数组元素对象的大小总和。</p>
<h3>1.2 Retained Size</h3>
<p>Retained Size= <strong>当前对象大小+当前对象可直接或间接引用到的对象的大小总和</strong>(间接引用的含义：A-&gt;B-&gt;C, C就是间接引用)</p>`,r:{minutes:1.41,words:423},t:"Shallow heap和Retained heap",y:"a"}}],["/posts/Java/JavaJVM/java-jvm-tools-mat-use.html",{loader:()=>o(()=>import("./java-jvm-tools-mat-use.html-BXstWWru.js"),[]),meta:{d:1729494189e3,c:["Java","JVM"],g:null,e:`
<h2>1 MAT主界面介绍</h2>
<h3>1.1 导入hprof文件</h3>
<p>导入文件之后，显示OverView界面</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121206687.png" alt="image-20190930142515380" tabindex="0" loading="lazy"><figcaption>image-20190930142515380</figcaption></figure>
<p>如果选择了第一个，则会生成一个报告</p>`,r:{minutes:5.93,words:1778},t:"MAT使用",y:"a"}}],["/posts/Java/JavaJVM/java-jvm-tools-mat.html",{loader:()=>o(()=>import("./java-jvm-tools-mat.html-G5Y_o497.js"),[]),meta:{d:1729494189e3,c:["Java","JVM"],g:null,e:`
<h1>1. 下载</h1>
<p><a href="https://www.eclipse.org/mat/downloads.php" target="_blank" rel="noopener noreferrer">下载地址</a>选择适合自己的系统版本</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121204490.png" alt="image-20190930092411910" tabindex="0" loading="lazy"><figcaption>image-20190930092411910</figcaption></figure>`,r:{minutes:.47,words:142},t:"MAT安装",y:"a"}}],["/posts/Java/JavaJVM/java-jvm-tools-overview.html",{loader:()=>o(()=>import("./java-jvm-tools-overview.html-DXUcY3n1.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. JDK命令行工具</h2>
<p>这些命令在JDK 安装目录下的bin目录下</p>
<ul>
<li><strong>jps</strong> (JVM Process Status）: 类似 UNIX 的 <code>ps</code> 命令。用户查看所有 Java 进程的启动类、传入参数和 Java 虚拟机参数等信息；</li>
<li><strong>jstat</strong>（ JVM Statistics Monitoring Tool）: 用于收集 HotSpot 虚拟机各方面的运行数据;</li>
<li><strong>jinfo</strong> (Configuration Info for Java) : Configuration Info forJava,显示虚拟机配置信息;</li>
<li><strong>jmap</strong> (Memory Map for Java) :生成堆转储快照;</li>
<li><strong>jhat</strong> (JVM Heap Dump Browser ) : 用于分析 heapdump 文件，它会建立一个 HTTP/HTML 服务器，让用户可以在浏览器上查看分析结果;</li>
<li><strong>jstack</strong> (Stack Trace for Java):生成虚拟机当前时刻的线程快照，线程快照就是当前虚拟机内每一条线程正在执行的方法堆栈的集合。</li>
</ul>`,r:{minutes:8.12,words:2436},t:"JDK监控和故障处理工具汇总",y:"a"}}],["/posts/Java/JavaJVM/java-jvm-tools-visualvm.html",{loader:()=>o(()=>import("./java-jvm-tools-visualvm.html-C1azQyeA.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 下载插件</h2>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121209570.png" alt="image-20220506172009283" tabindex="0" loading="lazy"><figcaption>image-20220506172009283</figcaption></figure>
<h2>2. 配置</h2>
<p>重启完后进行配置 prefences-&gt;other settings-&gt;visuialvm</p>`,r:{minutes:.49,words:147},t:"mac版idea配置visualvm",y:"a"}}],["/posts/Java/JavaJVM/java-jvm-x-introduce.html",{loader:()=>o(()=>import("./java-jvm-x-introduce.html-C_ol3V4D.js"),[]),meta:{d:1729494189e3,c:["Java","JVM"],g:null,e:`
<blockquote>
<p>很多人都无法区分Java内存模型和JVM内存结构，以及Java内存模型与物理内存之间的关系。本文从堆栈角度引入JMM，然后介绍JMM和物理内存之间的关系, 为后面<code>JMM详解</code>, <code>JVM 内存结构详解</code>, <code>Java 对象模型详解</code>等铺垫。</p>
</blockquote>
<h2>0. Java内存模型是什么</h2>
<p>Java内存模型规定了<strong>所有的变量都存储在主内存</strong>中，<strong>每条线程还有自己的工作内存</strong>，线程的<strong>工作内存中保存了该线程中是用到的变量的主内存副本拷贝</strong>，线程对变量的所有操作都必须在工作内存中进行，而不能直接读写主内存。不同的线程之间也无法直接访问对方工作内存中的变量，<strong>线程间变量的传递均需要自己的工作内存和主存之间进行数据同步进行</strong>。所以，就<strong>可能出现线程1改了某个变量的值，但是线程2不可见的情况</strong>。</p>`,r:{minutes:11.45,words:3434},t:"JVM 基础 - Java 内存模型引入",O:60,y:"a"}}],["/posts/Java/JavaJVM/java-thread-x-lock-ReentrantLock.html",{loader:()=>o(()=>import("./java-thread-x-lock-ReentrantLock.html-DCQnTo7O.js"),[]),meta:{d:1729494189e3,c:["Java","并发"],g:null,e:`
<h2>0. 带着BAT大厂的面试问题去理解</h2>
<ul>
<li>什么是可重入，什么是可重入锁? 它用来解决什么问题?</li>
<li>ReentrantLock的核心是AQS，那么它怎么来实现的，继承吗? 说说其类内部结构关系。</li>
<li>ReentrantLock是如何实现公平锁的?</li>
<li>ReentrantLock是如何实现非公平锁的?</li>
<li>ReentrantLock默认实现的是公平还是非公平锁?</li>
<li>使用ReentrantLock实现公平和非公平锁的示例?</li>
<li>ReentrantLock和Synchronized的对比?</li>
</ul>`,r:{minutes:8.22,words:2467},t:"JUC锁: ReentrantLock详解",O:550,y:"a"}}],["/posts/Java/JavaJVM/jvm-overview.html",{loader:()=>o(()=>import("./jvm-overview.html-pcnkCui0.js"),[]),meta:{d:1729494189e3,c:["Java","JVM"],g:null,e:`
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121212286.png" alt="jvm-overview" tabindex="0" loading="lazy"><figcaption>jvm-overview</figcaption></figure>
<h2>1. 学习要点</h2>
<blockquote>
<p>不同的虚拟机实现方式上也有差别，如果没有特别指出，这里的JVM指的是sun的HotSpot；不同的JDK版本略有差别，这里主要以1.8为主，具体差异请看各个章节中详解。下图主要表示的逻辑关系，用来将所有知识点放到一张图里，帮助你理解。</p>
</blockquote>`,r:{minutes:7.08,words:2123},t:"JVM相关知识体系详解",O:10,y:"a"}}],["/posts/Java/JavaJVM/jvm.html",{loader:()=>o(()=>import("./jvm.html-C8X3JNMC.js"),[]),meta:{d:1729494189e3,c:["Java","JVM"],e:`
<p>Class 文件需要加载到虚拟机中之后才能运行和使用，那么虚拟机是如何加载这些Class文件呢？</p>
<p>系统加载Class类型的文件主要三步：加载-&gt;连接 -&gt;初始化。连接过程又可以分为三步：验证-&gt;准备-&gt;解析。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410151614544.png" alt="image-20190928000659249" tabindex="0" loading="lazy"><figcaption>image-20190928000659249</figcaption></figure>`,r:{minutes:5.36,words:1607},t:"类加载过程",y:"a"}}],["/posts/Java/JavaWeb/Cookie_SessionJsp.html",{loader:()=>o(()=>import("./Cookie_SessionJsp.html-D0wxbxWz.js"),[]),meta:{d:1729494189e3,c:["Java Web"],g:null,e:`
<h1>Cookie&amp;SessionJsp</h1>
<h1>1 会话技术</h1>
<h2>1.1 会话管理概述</h2>
<h3>1.1.1 什么是会话</h3>
<p>这里的会话，指的是web开发中的一次通话过程，当打开浏览器，访问网站地址后，会话开始，当关闭浏览器（或者到了过期时间），会话结束。</p>
<p>举个例子：</p>
<p>​	例如，你在给家人打电话，这时突然有送快递的配送员敲门，你放下电话去开门，收完快递回来后，通话还在保持中，继续说话就行了。</p>
<h3>1.1.2 会话管理作用</h3>
<p>什么时候会用到会话管理呢？最常见的就是购物车，当我们登录成功后，把商品加入到购物车之中，此时我们无论再浏览什么商品，当点击购物车时，那些加入的商品都仍在购物车中。</p>`,r:{minutes:22.09,words:6628},t:"Java Web基础 - Cookie&SessionJsp",O:4,y:"a"}}],["/posts/Java/JavaWeb/EL_Filter_Listener.html",{loader:()=>o(()=>import("./EL_Filter_Listener.html-BjX_GX8W.js"),[]),meta:{d:1729494189e3,c:["Java Web"],g:null,e:`
<h1>1 EL表达式和JSTL</h1>
<h2>1.1 EL表达式</h2>
<h3>1.1.1 EL表达式概述</h3>
<p><strong>基本概念</strong></p>
<p>EL表达式，全称是Expression Language。意为表达式语言。它是Servlet规范中的一部分，是JSP2.0规范加入的内容。其作用是用于在JSP页面中获取数据，从而让我们的JSP脱离java代码块和JSP表达式。</p>
<p><strong>基本语法</strong></p>
<p>EL表达式的语法格式非常简单，写为 <b></b></p>
<p>例如：在浏览器中输出请求域中名称为message的内容。</p>`,r:{minutes:30.77,words:9231},t:"Java Web基础 - EL&Filter&Listener",O:5,y:"a"}}],["/posts/Java/JavaWeb/",{loader:()=>o(()=>import("./index.html-TKHXMiLj.js"),[]),meta:{d:17204832e5,l:"2024年7月9日",e:`<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>这里放置JavaWeb相关的内容</p>
</div>
<hr>
`,r:{minutes:.09,words:28},t:"JavaWeb",O:3,y:"p"}}],["/posts/Java/JavaWeb/Request_Response.html",{loader:()=>o(()=>import("./Request_Response.html-BDc2u0tn.js"),[]),meta:{d:1729494189e3,c:["Java Web"],g:null,e:`
<h1>Request&amp;Response</h1>
<h1>1 响应对象</h1>
<h2>1.1 响应对象概述</h2>
<h3>1.1.1 关于响应</h3>
<p>响应，它表示了服务器端收到请求，同时也已经处理完成，把处理的结果告知用户。简单来说，指的就是服务器把请求的处理结果告知客户端。在B/S架构中，响应就是把结果带回浏览器。</p>
<p>响应对象，顾名思义就是用于在JavaWeb工程中实现上述功能的对象。</p>
<h3>1.1.2 常用响应对象</h3>
<p>响应对象也是是Servlet规范中定义的，它包括了协议无关的和协议相关的。</p>
<p>协议无关的对象标准是：ServletResponse接口</p>`,r:{minutes:24.25,words:7274},t:"Java Web基础 - Request&Response",O:3,y:"a"}}],["/posts/Java/JavaWeb/Servlet.html",{loader:()=>o(()=>import("./Servlet.html-DZJ0DcBj.js"),[]),meta:{d:1729494189e3,c:["Java Web"],g:null,e:`
<h1>Servlet</h1>
<h1>1 Servlet</h1>
<h2>1.1 Servlet概述</h2>
<p>Servlet是SUN公司提供的一套规范，名称就叫Servlet规范，它也是JavaEE规范之一。我们可以像学习Java基础一样，通过API来学习Servlet。这里需要注意的是，在我们之前JDK的API中是没有Servlet规范的相关内容，需要使用JavaEE的API。目前在Oracle官网中的最新版本是<a href="https://www.oracle.com/technetwork/java/javaee/documentation/ee8-release-notes-3894362.html" target="_blank" rel="noopener noreferrer">JavaEE8</a>，该网址中介绍了JavaEE8的一些新特性。当然，我们可以通过访问<a href="https://javaee.github.io/javaee-spec/javadocs/" target="_blank" rel="noopener noreferrer">官方API</a>，学习和查阅里面的内容。</p>`,r:{minutes:24.7,words:7409},t:"Java Web基础 - Servlet",O:2,y:"a"}}],["/posts/Java/JavaWeb/Tomcat_Http%E5%8D%8F%E8%AE%AE.html",{loader:()=>o(()=>import("./Tomcat_Http协议.html-DpDJv-ks.js"),[]),meta:{d:1729494189e3,c:["Java Web"],g:null,e:`
<h1>Tomcat&amp;Http协议</h1>
<h1>1 企业开发简介</h1>
<h2>1.1 JavaEE规范</h2>
<p><code>JavaEE</code>规范是<code>J2EE</code>规范的新名称，早期被称为<code>J2EE</code>规范，其全称是<code>Java 2 Platform Enterprise Edition</code>，它是由SUN公司领导、各厂家共同制定并得到广泛认可的工业标准（<code>JCP</code>组织成员）。之所以改名为<code>JavaEE</code>，目的还是让大家清楚<code>J2EE</code>只是<code>Java</code>企业应用。在2004年底中国软件技术大会<code>Ioc</code>微容器(也就是<code>Jdon</code>框架的实现原理)演讲中指出：我们需要一个跨<code>J2SE/WEB/EJB</code>的微容器，保护我们的业务核心组件，以延续它的生命力，而不是依赖<code>J2SE/J2EE</code>版本.此次<code>J2EE</code>改名为<code>Java EE</code>，实际也反映出业界这种共同心声。</p>`,r:{minutes:19.58,words:5875},t:"Java Web基础 - Tomcat&Http协议",O:1,y:"a"}}],["/posts/Java/JavaWeb/day01-%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B.html",{loader:()=>o(()=>import("./day01-网络编程.html-DwBii_HT.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1.网络编程入门</h2>
<h3>1.1 网络编程概述【理解】</h3>
<ul>
<li>
<p>计算机网络</p>
<p>是指将地理位置不同的具有独立功能的多台计算机及其外部设备，通过通信线路连接起来，在网络操作系统，网络管理软件及网络通信协议的管理和协调下，实现资源共享和信息传递的计算机系统</p>
</li>
<li>
<p>网络编程</p>
<p>在网络通信协议下，不同计算机上运行的程序，可以进行数据传输</p>
</li>
</ul>
<h3>1.2 网络编程三要素【理解】</h3>
<ul>
<li>
<p>IP地址</p>
<p>要想让网络中的计算机能够互相通信，必须为每台计算机指定一个标识号，通过这个标识号来指定要接收数据的计算机和识别发送的计算机，而IP地址就是这个标识号。也就是设备的标识</p>
</li>
<li>
<p>端口</p>
<p>网络的通信，本质上是两个应用程序的通信。每台计算机都有很多的应用程序，那么在网络通信时，如何区分这些应用程序呢？如果说IP地址可以唯一标识网络中的设备，那么端口号就可以唯一标识设备中的应用程序了。也就是应用程序的标识</p>
</li>
<li>
<p>协议</p>
<p>通过计算机网络可以使多台计算机实现连接，位于同一个网络中的计算机在进行连接和通信时需要遵守一定的规则，这就好比在道路中行驶的汽车一定要遵守交通规则一样。在计算机网络中，这些连接和通信的规则被称为网络通信协议，它对数据的传输格式、传输速率、传输步骤等做了统一规定，通信双方必须同时遵守才能完成数据交换。常见的协议有UDP协议和TCP协议</p>
</li>
</ul>`,r:{minutes:16.33,words:4899},t:"网络编程",y:"a"}}],["/posts/Java/Java%E5%9F%BA%E7%A1%80/Java-basis-oop.html",{loader:()=>o(()=>import("./Java-basis-oop.html-DQ5CsJy8.js"),[]),meta:{a:"MrJason",d:1729494189e3,c:"Java基础",g:["Java","学习","基础"],e:`
<h2>1. 面向对象三大特性：封装 继承 多态</h2>
<h3>1.1 封装</h3>
<p>隐藏对象的属性和实现细节，仅对外公开访问方法，控制程序中属性的读和写的访问级别。</p>
<h3>1.2 继承</h3>
<p>在一个现有类的基础之上，增加新的方法或<strong>重写</strong>已有方法，从而产生一个新类。</p>
<p>关于继承如下3点：</p>
<ol>
<li>子类拥有父类对象所有的属性和方法（包括私有属性和私有方法），但是父类的私有属性和方法子类是无法访问的，<strong>只是拥有</strong></li>
<li>子类可以拥有自己属性和方法，既子类可以对父类进行扩展</li>
<li>子类可以用自己的方式实现父类的方法（重写）</li>
</ol>`,r:{minutes:3,words:900},t:"Java 基础 - 面向对象",O:10,y:"a"}}],["/posts/Java/Java%E5%9F%BA%E7%A1%80/",{loader:()=>o(()=>import("./index.html-CVlx1CbD.js"),[]),meta:{d:17204832e5,l:"2024年7月9日",e:`<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>这里放置Java基础相关的内容</p>
</div>
<hr>
`,r:{minutes:.11,words:32},t:"Java基础",O:1,y:"p"}}],["/posts/Java/Java%E5%9F%BA%E7%A1%80/day01-java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95.html",{loader:()=>o(()=>import("./day01-java基础语法.html-DxU1Y7UY.js"),[]),meta:{a:"MrJason",d:1729494189e3,c:"Java基础",g:["Java","学习","基础"],e:`
<h2>1.1 Java语言背景介绍（了解）</h2>
<p>语言：人与人交流沟通的表达方式</p>
<p>计算机语言：人与计算机之间进行信息交流沟通的一种特殊语言</p>
<p>Java语言是美国Sun公司（Stanford University Network）在1995年推出的计算机语言</p>
<p>Java之父：詹姆斯·高斯林（James Gosling）</p>
<p>2009年，Sun公司被甲骨文公司收购，所以我们现在访问oracle官网即可：<a href="https://www.oracle.com/" target="_blank" rel="noopener noreferrer">https://www.oracle.com</a></p>`,r:{minutes:11.34,words:3401},t:"Java基础 - Java概述",O:1,y:"a"}}],["/posts/Java/Java%E5%9F%BA%E7%A1%80/day02-Java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95.html",{loader:()=>o(()=>import("./day02-Java基础语法.html-CU_6ZnE1.js"),[]),meta:{a:"MrJason",d:1729494189e3,c:"Java基础",g:["Java","学习","基础"],e:`
<h1>1 类型转换</h1>
<p>在Java中，一些数据类型之间是可以相互转换的。分为两种情况：自动类型转换和强制类型转换。</p>
<h2>1.1 隐式转换(理解)</h2>
<p>​ 把一个表示数据范围小的数值或者变量赋值给另一个表示数据范围大的变量。这种转换方式是自动的，直接书写即可。例如：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">double</span><span style="color:#E06C75;--shiki-dark:#E06C75"> num </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 10</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 将int类型的10直接赋值给double类型</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(num);</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 输出10.0</span></span></code></pre>
</div>`,r:{minutes:15.15,words:4546},t:"Java基础 - Java基础语法",O:2,y:"a"}}],["/posts/Java/Java%E5%9F%BA%E7%A1%80/day03-Switch_%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5.html",{loader:()=>o(()=>import("./day03-Switch_循环语句.html-Cg_Ezzor.js"),[]),meta:{a:"MrJason",d:1729494189e3,c:"Java基础",g:["Java","学习","基础"],e:`
<h1>1. switch语句</h1>
<h2>1.1 分支语句switch语句</h2>
<ul>
<li>
<p>格式</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">switch</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (表达式) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    case</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        语句体1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        break</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    case</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 2</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        语句体2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        break</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    ...</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    default:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        语句体n</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        break</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
</div></li>
<li>
<p>执行流程：</p>
<ul>
<li>首先计算出表达式的值</li>
<li>其次，和case依次比较，一旦有对应的值，就会执行相应的语句，在执行的过程中，遇到break就会结 束。</li>
<li>最后，如果所有的case都和表达式的值不匹配，就会执行default语句体部分，然后程序结束掉。</li>
</ul>
</li>
</ul>`,r:{minutes:14.94,words:4483},t:"Java基础 - Switch&&循环语句",O:3,y:"a"}}],["/posts/Java/Java%E5%9F%BA%E7%A1%80/day04-IDEA_%E6%95%B0%E7%BB%84.html",{loader:()=>o(()=>import("./day04-IDEA_数组.html-nZJysT_e.js"),[]),meta:{a:"MrJason",d:1729494189e3,c:"Java基础",g:["Java","学习","基础"],e:`
<h1>1.数组</h1>
<h2>1.1 数组介绍</h2>
<p>​ 数组就是存储数据长度固定的容器，存储多个数据的数据类型要一致。</p>
<h2>1.2 数组的定义格式</h2>
<h3>1.2.1 第一种格式</h3>
<p>​ 数据类型[] 数组名</p>
<p>​ 示例：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#E06C75;--shiki-dark:#E06C75">[] arr</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#E06C75;--shiki-dark:#E06C75">        </span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">double</span><span style="color:#E06C75;--shiki-dark:#E06C75">[] arr</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#E06C75;--shiki-dark:#E06C75">      </span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">char</span><span style="color:#E06C75;--shiki-dark:#E06C75">[] arr</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span></code></pre>
</div>`,r:{minutes:11.61,words:3484},t:"Java基础 - IDEA&数组",O:4,y:"a"}}],["/posts/Java/Java%E5%9F%BA%E7%A1%80/day05-%E6%96%B9%E6%B3%95.html",{loader:()=>o(()=>import("./day05-方法.html-DO2Tf-G1.js"),[]),meta:{a:"MrJason",d:1729494189e3,c:"Java基础",g:["Java","学习","基础"],e:`
<h1>1. 方法概述</h1>
<h2>1.1 方法的概念</h2>
<p>​ 方法（method）是将具有独立功能的代码块组织成为一个整体，使其具有特殊功能的代码集</p>
<ul>
<li>注意：
<ul>
<li>方法必须先创建才可以使用，该过程成为方法定义</li>
<li>方法创建后并不是直接可以运行的，需要手动使用后，才执行，该过程成为方法调用</li>
</ul>
</li>
</ul>
<h1>2. 方法的定义和调用</h1>
<h2>2.1 无参数方法定义和调用</h2>
<ul>
<li>
<p>定义格式：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#E06C75;--shiki-dark:#E06C75"> 方法名 (   ) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 方法体;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
</div></li>
<li>
<p>范例：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> method</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (    ) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 方法体;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
</div></li>
<li>
<p>调用格式：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">方法名()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span></code></pre>
</div></li>
<li>
<p>范例：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">method</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span></code></pre>
</div></li>
<li>
<p>注意：</p>
<p>​ 方法必须先定义，后调用，否则程序将报错</p>
</li>
</ul>`,r:{minutes:12.26,words:3679},t:"Java基础 - 方法",O:5,y:"a"}}],["/posts/Java/Java%E5%9F%BA%E7%A1%80/day06-Debug_%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0.html",{loader:()=>o(()=>import("./day06-Debug_基础练习.html-D2Ie193-.js"),[]),meta:{a:"MrJason",d:1729494189e3,c:"Java基础",e:`
<h2>1.Debug模式</h2>
<h3>1.1 什么是Debug模式</h3>
<p>是供程序员使用的程序调试工具，它可以用于查看程序的执行流程，也可以用于追踪程序执行过程来调试程序。</p>
<h3>1.2 Debug介绍与操作流程</h3>
<ul>
<li>
<p>如何加断点</p>
<ul>
<li>选择要设置断点的代码行，在行号的区域后面单击鼠标左键即可</li>
</ul>
</li>
<li>
<p>如何运行加了断点的程序</p>
<ul>
<li>在代码区域右键Debug执行</li>
</ul>
</li>
<li>
<p>看哪里</p>
<ul>
<li>
<p>看Debugger窗口</p>
</li>
<li>
<p>看Console窗口</p>
</li>
</ul>
</li>
<li>
<p>点哪里</p>
<ul>
<li>点Step Into (F7)这个箭头，也可以直接按F7</li>
</ul>
</li>
<li>
<p>如何删除断点</p>
<ul>
<li>
<p>选择要删除的断点，单击鼠标左键即可</p>
</li>
<li>
<p>如果是多个断点，可以每一个再点击一次。也可以一次性全部删除</p>
</li>
</ul>
</li>
</ul>`,r:{minutes:12.39,words:3716},t:"Java基础 - Debug",O:6,y:"a"}}],["/posts/Java/Java%E5%9F%BA%E7%A1%80/day07-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1.html",{loader:()=>o(()=>import("./day07-面向对象.html-BGWQdyoo.js"),[]),meta:{a:"MrJason",d:1729494189e3,c:"Java基础",g:["Java","学习","基础"],e:`
<h1>1. 类和对象</h1>
<p>**面向对象和面向过程的思想对比 : **</p>
<p>​ **面向过程 ：**是一种以过程为中心的编程思想，实现功能的每一步，都是自己实现的</p>
<p>​ **面向对象 ：**是一种以对象为中心的编程思想，通过指挥对象实现具体的功能</p>
<h2>1.1 类和对象的关系</h2>
<p>客观存在的事物皆为对象 ，所以我们也常常说万物皆对象。</p>
<ul>
<li>类
<ul>
<li>类的理解
<ul>
<li>类是对现实生活中一类具有共同属性和行为的事物的抽象</li>
<li>类是对象的数据类型，类是具有相同属性和行为的一组对象的集合</li>
<li>简单理解：类就是对现实事物的一种描述</li>
</ul>
</li>
<li>类的组成
<ul>
<li>属性：指事物的特征，例如：手机事物（品牌，价格，尺寸）</li>
<li>行为：指事物能执行的操作，例如：手机事物（打电话，发短信）</li>
</ul>
</li>
</ul>
</li>
<li>类和对象的关系
<ul>
<li>类：类是对现实生活中一类具有共同属性和行为的事物的抽象</li>
<li>对象：是能够看得到摸的着的真实存在的实体</li>
<li>简单理解：<strong>类是对事物的一种描述，对象则为具体存在的事物</strong></li>
</ul>
</li>
</ul>`,r:{minutes:9.2,words:2761},t:"Java基础 - 面向对象",O:7,y:"a"}}],["/posts/Java/Java%E5%9F%BA%E7%A1%80/day08-%E5%B8%B8%E7%94%A8API.html",{loader:()=>o(()=>import("./day08-常用API.html--aDDTFrr.js"),[]),meta:{a:"MrJason",d:1729494189e3,c:"Java基础",g:["Java","学习","基础"],e:`
<h1>1.API</h1>
<h2>1.1 API概述-帮助文档的使用</h2>
<ul>
<li>
<p>什么是API</p>
<p>​ API (Application Programming Interface) ：应用程序编程接口</p>
</li>
<li>
<p>java中的API</p>
<p>​ 指的就是 JDK 中提供的各种功能的 Java类，这些类将底层的实现封装了起来，我们不需要关心这些类是如何实现的，只需要学习这些类如何使用即可，我们可以通过帮助文档来学习这些API如何使用。</p>
</li>
</ul>
<p><strong>如何使用API帮助文档 :</strong></p>`,r:{minutes:15.39,words:4617},t:"Java基础 - 常用API",O:8,y:"a"}}],["/posts/Java/Java%E5%9F%BA%E7%A1%80/day09-ArrayList%E9%9B%86%E5%90%88_%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F.html",{loader:()=>o(()=>import("./day09-ArrayList集合_学生管理系统.html-DnCmNGxB.js"),[]),meta:{a:"MrJason",d:1729494189e3,c:"Java基础",g:["Java","学习","基础"],e:`
<h1>1.ArrayList</h1>
<p><strong>集合和数组的区别:</strong></p>
<p>​    共同点：都是存储数据的容器</p>
<p>​    不同点：数组的容量是固定的，集合的容量是可变的</p>
<h2>1.1 ArrayList的构造方法和添加方法</h2>
<table>
<thead>
<tr>
<th>public ArrayList()</th>
<th>创建一个空的集合对象</th>
</tr>
</thead>
<tbody>
<tr>
<td>public boolean add(E e)</td>
<td>将指定的元素追加到此集合的末尾</td>
</tr>
<tr>
<td>public void add(int index,E element)</td>
<td>在此集合中的指定位置插入指定的元素</td>
</tr>
</tbody>
</table>`,r:{minutes:11.34,words:3401},t:"Java基础 - ArrayList",O:9,y:"a"}}],["/posts/Java/Java%E5%9F%BA%E7%A1%80/day10-%E5%88%86%E7%B1%BB%E5%92%8Cstatic.html",{loader:()=>o(()=>import("./day10-分类和static.html-DfA_9jtp.js"),[]),meta:{a:"MrJason",d:1729494189e3,c:"Java基础",g:["Java","学习","基础"],e:`
<h1>1. 案例驱动模式</h1>
<h2>1.1 案例驱动模式概述 (理解)</h2>
<p>通过我们已掌握的知识点,先实现一个案例,然后找出这个案例中,存在的一些问题,在通过新知识点解决问题</p>
<h2>1.2 案例驱动模式的好处 (理解)</h2>
<ul>
<li>解决重复代码过多的冗余,提高代码的复用性</li>
<li>解决业务逻辑聚集紧密导致的可读性差,提高代码的可读性</li>
<li>解决代码可维护性差,提高代码的维护性</li>
</ul>
<h1>2. 分类思想</h1>
<h2>2.1 分类思想概述 (理解) %%  %%</h2>
<p>分工协作,专人干专事</p>`,r:{minutes:14.23,words:4268},t:"Java基础 - 分类和Static",O:10,y:"a"}}],["/posts/Java/Java%E5%9F%BA%E7%A1%80/day11-%E7%BB%A7%E6%89%BF.html",{loader:()=>o(()=>import("./day11-继承.html-BLbqik1O.js"),[]),meta:{a:"MrJason",d:1729494189e3,c:"Java基础",g:["Java","学习","基础"],e:`
<h1>1. 继承</h1>
<h2>1.1 继承的实现（掌握）</h2>
<ul>
<li>
<p>继承的概念</p>
<ul>
<li>继承是面向对象三大特征之一，可以使得子类具有父类的属性和方法，还可以在子类中重新定义，以及追加属性和方法</li>
</ul>
</li>
<li>
<p>实现继承的格式</p>
<ul>
<li>继承通过extends实现</li>
<li>格式：class 子类 extends 父类
<ul>
<li>举例：class Dog extends Animal</li>
</ul>
</li>
</ul>
</li>
<li>
<p>继承带来的好处</p>
<ul>
<li>继承可以让类与类之间产生关系，子父类关系，产生子父类后，子类则可以使用父类中非私有的成员。</li>
</ul>
</li>
<li>
<p>示例代码</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Fu</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> show</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"show方法被调用"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Zi</span><span style="color:#C678DD;--shiki-dark:#C678DD"> extends</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Fu</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> method</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"method方法被调用"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Demo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[] </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //创建对象，调用方法</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Fu</span><span style="color:#E06C75;--shiki-dark:#E06C75"> f</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Fu</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        f</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">show</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Zi</span><span style="color:#E06C75;--shiki-dark:#E06C75"> z</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Zi</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        z</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">method</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        z</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">show</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
</ul>`,r:{minutes:17.38,words:5213},t:"Java基础 - 继承",O:11,y:"a"}}],["/posts/Java/Java%E5%9F%BA%E7%A1%80/day12-%E6%8E%A5%E5%8F%A3%E5%92%8C%E5%86%85%E9%83%A8%E7%B1%BB.html",{loader:()=>o(()=>import("./day12-接口和内部类.html-DCrS3rWK.js"),[]),meta:{a:"MrJason",d:1729494189e3,c:"Java基础",g:["Java","学习","基础"],e:`
<h1>1.接口</h1>
<h1>1.1黑马信息管理系统集合改进 (应用)</h1>
<ul>
<li>
<p>使用数组容器的弊端</p>
<ol>
<li>容器长度是固定的，不能根据添加功能自动增长</li>
<li>没有提供用于赠删改查的方法</li>
</ol>
</li>
<li>
<p>优化步骤</p>
<ol start="3">
<li>
<p>创建新的StudentDao类，OtherStudentDao</p>
</li>
<li>
<p>创建ArrayList集合容器对象</p>
</li>
<li>
<p>OtherStudentDao中的方法声明，需要跟StudentDao保持一致</p>
<p>注意：如果不一致，StudentService中的代码就需要进行修改</p>
</li>
<li>
<p>完善方法（添加、删除、修改、查看）</p>
</li>
<li>
<p>替换StudentService中的Dao对象</p>
</li>
</ol>
</li>
<li>
<p>代码实现</p>
<p>OtherStudentDao类</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> OtherStudentDao</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 集合容器</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Student</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> stus </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    static</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Student</span><span style="color:#E06C75;--shiki-dark:#E06C75"> stu1 </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Student</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"heima001"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">"张三"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">"23"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">"1999-11-11"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Student</span><span style="color:#E06C75;--shiki-dark:#E06C75"> stu2 </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Student</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"heima002"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">"李四"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">"24"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">"2000-11-11"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        stus</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(stu1);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        stus</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(stu2);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 添加学生方法</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> boolean</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> addStudent</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Student</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> stu</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">       stus</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(stu);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">       return</span><span style="color:#D19A66;--shiki-dark:#D19A66"> true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 查看学生方法</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Student</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">[] findAllStudent</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Student</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[] </span><span style="color:#E06C75;--shiki-dark:#E06C75">students</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Student</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">stus</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">size</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> i</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">; i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> students</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">length</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">; i++) {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            students[i] </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> stus</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(i);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> students;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> deleteStudentById</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> delId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 1. 查找id在容器中所在的索引位置</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> index</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getIndex</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(delId);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        stus</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">remove</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(index);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> int</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getIndex</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">){</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> index</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> -</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> i</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">; i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> stus</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">size</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(); i++) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            Student</span><span style="color:#E06C75;--shiki-dark:#E06C75"> stu</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> stus</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(i);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(stu </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> stu</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">equals</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(id)){</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                index </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> i;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                break</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> index;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> updateStudent</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> updateId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Student</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> newStu</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 1. 查找updateId, 在容器中的索引位置</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> index</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getIndex</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(updateId);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        stus</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(index, newStu);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>StudentService类</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> StudentService</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 创建StudentDao (库管)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">     private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> OtherStudentDao</span><span style="color:#E06C75;--shiki-dark:#E06C75"> studentDao </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> OtherStudentDao</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  	// 其他方法没有变化,此处省略...</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
</div></li>
</ul>`,r:{minutes:17.2,words:5160},t:"Java基础 - 接口和内部类",O:12,y:"a"}}],["/posts/Java/Java%E5%9F%BA%E7%A1%80/day13-%E5%B8%B8%E7%94%A8API.html",{loader:()=>o(()=>import("./day13-常用API.html-DY0sv-3-.js"),[]),meta:{a:"MrJason",d:1729494189e3,c:"Java基础",g:["Java","学习","基础"],e:`
<h2>1.API</h2>
<h3>1.1 API概述【理解】</h3>
<ul>
<li>
<p>什么是API</p>
<p>​	API (Application Programming Interface) ：应用程序编程接口</p>
</li>
<li>
<p>java中的API</p>
<p>​	指的就是 JDK 中提供的各种功能的 Java类，这些类将底层的实现封装了起来，我们不需要关心这些类是如何实现的，只需要学习这些类如何使用即可，我们可以通过帮助文档来学习这些API如何使用。</p>
</li>
</ul>
<h3>1.2 如何使用API帮助文档【应用】</h3>
<ul>
<li>打开帮助文档<br>
<img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403111241766.png" alt="01_API01" loading="lazy"></li>
<li>找到索引选项卡中的输入框<br>
<img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403111241820.png" alt="01_API02" loading="lazy"></li>
<li>在输入框中输入Random<br>
<img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403111241854.png" alt="01_API03" loading="lazy"></li>
<li>看类在哪个包下<br>
<img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403111241879.png" alt="01_API04" loading="lazy"></li>
<li>看类的描述<br>
<img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403111241901.png" alt="01_API05" loading="lazy"></li>
<li>看构造方法<br>
<img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403111241926.png" alt="01_API06" loading="lazy"></li>
<li>看成员方法<br>
<img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403111241956.png" alt="01_API07" loading="lazy"></li>
</ul>`,r:{minutes:15.36,words:4608},t:"Java 基础 - API使用",O:13,y:"a"}}],["/posts/Java/Java%E5%9F%BA%E7%A1%80/day14-%E5%B8%B8%E7%94%A8API.html",{loader:()=>o(()=>import("./day14-常用API.html-BSEtKqjT.js"),[]),meta:{a:"MrJason",d:1729494189e3,c:"Java基础",g:["Java","学习","基础"],e:`
<h2>1.时间日期类</h2>
<h3>1.1 Date类（应用）</h3>
<ul>
<li>
<p>计算机中时间原点</p>
<p>1970年1月1日 00:00:00</p>
</li>
<li>
<p>时间换算单位</p>
<p>1秒 = 1000毫秒</p>
</li>
<li>
<p>Date类概述</p>
<p>Date 代表了一个特定的时间，精确到毫秒</p>
</li>
<li>
<p>Date类构造方法</p>
<table>
<thead>
<tr>
<th>方法名</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>public Date()</td>
<td>分配一个 Date对象，并初始化，以便它代表它被分配的时间，精确到毫秒</td>
</tr>
<tr>
<td>public Date(long date)</td>
<td>分配一个 Date对象，并将其初始化为表示从标准基准时间起指定的毫秒数</td>
</tr>
</tbody>
</table>
</li>
<li>
<p>示例代码</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> DateDemo01</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[] </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //public Date()：分配一个 Date对象，并初始化，以便它代表它被分配的时间，精确到毫秒</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Date</span><span style="color:#E06C75;--shiki-dark:#E06C75"> d1</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Date</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(d1);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //public Date(long date)：分配一个 Date对象，并将其初始化为表示从标准基准时间起指定的毫秒数</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> date</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1000</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">*</span><span style="color:#D19A66;--shiki-dark:#D19A66">60</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">*</span><span style="color:#D19A66;--shiki-dark:#D19A66">60</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Date</span><span style="color:#E06C75;--shiki-dark:#E06C75"> d2</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Date</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(date);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(d2);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
</div></li>
</ul>`,r:{minutes:15.97,words:4791},t:"Java 基础 - API 和 异常",O:14,y:"a"}}],["/posts/Java/Java%E5%9F%BA%E7%A1%80/day15-%E5%9F%BA%E7%A1%80%E5%8A%A0%E5%BC%BA.html",{loader:()=>o(()=>import("./day15-基础加强.html-DmpJhwZg.js"),[]),meta:{a:"MrJason",d:1729494189e3,c:"Java基础",g:["Java","学习","基础"],e:`
<h2>1.类加载器</h2>
<h3>1.1类加载器</h3>
<ul>
<li>
<p>作用</p>
<p>负责将.class文件（存储的物理文件）加载在到内存中</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403111402178.png" alt="01_类加载器" tabindex="0" loading="lazy"><figcaption>01_类加载器</figcaption></figure>
</li>
</ul>
<h3>1.2类加载的过程</h3>
<ul>
<li>类加载时机
<ul>
<li>创建类的实例（对象）</li>
<li>调用类的类方法</li>
<li>访问类或者接口的类变量，或者为该类变量赋值</li>
<li>使用反射方式来强制创建某个类或接口对应的java.lang.Class对象</li>
<li>初始化某个类的子类</li>
<li>直接使用java.exe命令来运行某个主类</li>
</ul>
</li>
<li>类加载过程
<ol>
<li>
<p>加载</p>
<ul>
<li>通过包名 + 类名，获取这个类，准备用流进行传输</li>
<li>在这个类加载到内存中</li>
<li>加载完毕创建一个class对象<br>
<img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403111402218.png" alt="02_类加载过程加载" loading="lazy"></li>
</ul>
</li>
<li>
<p>链接</p>
<ul>
<li>验证<br>
确保Class文件字节流中包含的信息符合当前虚拟机的要求，并且不会危害虚拟机自身安全<br>
(文件中的信息是否符合虚拟机规范有没有安全隐患)</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403111402252.png" alt="03_类加载过程验证" tabindex="0" loading="lazy"><figcaption>03_类加载过程验证</figcaption></figure>
<ul>
<li>
<p>准备</p>
<p>负责为类的类变量（被static修饰的变量）分配内存，并设置默认初始化值</p>
<p>(初始化静态变量)</p>
</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403111402288.png" alt="04_类加载过程准备" tabindex="0" loading="lazy"><figcaption>04_类加载过程准备</figcaption></figure>
<ul>
<li>
<p>解析</p>
<p>将类的二进制数据流中的符号引用替换为直接引用</p>
<p>(本类中如果用到了其他类，此时就需要找到对应的类)</p>
</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403111402316.png" alt="05_类加载过程解析" tabindex="0" loading="lazy"><figcaption>05_类加载过程解析</figcaption></figure>
</li>
<li>
<p>初始化</p>
<p>根据程序员通过程序制定的主观计划去初始化类变量和其他资源</p>
<p>(静态变量赋值以及初始化其他资源)</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403111402344.png" alt="06_类加载过程初始化" tabindex="0" loading="lazy"><figcaption>06_类加载过程初始化</figcaption></figure>
</li>
</ol>
</li>
<li>小结
<ul>
<li>当一个类被使用的时候，才会加载到内存</li>
<li>类加载的过程: 加载、验证、准备、解析、初始化</li>
</ul>
</li>
</ul>`,r:{minutes:12.42,words:3727},t:"Java 基础 - 基础增强",O:15,y:"a"}}],["/posts/Java/Java%E5%9F%BA%E7%A1%80/day16-%E5%9F%BA%E7%A1%80%E5%8A%A0%E5%BC%BA.html",{loader:()=>o(()=>import("./day16-基础加强.html-qY_Rv-5z.js"),[]),meta:{a:"MrJason",d:1729494189e3,c:"Java基础",g:["Java","学习","基础"],e:`
<h2>1.xml</h2>
<h3>1.1概述【理解】</h3>
<ul>
<li>
<p>万维网联盟(W3C)</p>
<p>万维网联盟(W3C)创建于1994年，又称W3C理事会。1994年10月在麻省理工学院计算机科学实验室成立。<br>
建立者： Tim Berners-Lee (蒂姆·伯纳斯·李)。<br>
是Web技术领域最具权威和影响力的国际中立性技术标准机构。<br>
到目前为止，W3C已发布了200多项影响深远的Web技术标准及实施指南，</p>
<ul>
<li>
<p>如广为业界采用的超文本标记语言HTML（标准通用标记语言下的一个应用）、</p>
</li>
<li>
<p>可扩展标记语言XML（标准通用标记语言下的一个子集）</p>
</li>
<li>
<p>以及帮助残障人士有效获得Web信息的无障碍指南（WCAG）等</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403111409756.png" alt="01_w3c概述" tabindex="0" loading="lazy"><figcaption>01_w3c概述</figcaption></figure>
</li>
</ul>
</li>
<li>
<p>xml概述</p>
<p>XML的全称为(EXtensible Markup Language)，是一种可扩展的标记语言<br>
标记语言: 通过标签来描述数据的一门语言(标签有时我们也将其称之为元素)<br>
可扩展：标签的名字是可以自定义的,XML文件是由很多标签组成的,而标签名是可以自定义的</p>
</li>
<li>
<p>作用</p>
<ul>
<li>用于进行存储数据和传输数据</li>
<li>作为软件的配置文件</li>
</ul>
</li>
<li>
<p>作为配置文件的优势</p>
<ul>
<li>可读性好</li>
<li>可维护性高</li>
</ul>
</li>
</ul>`,r:{minutes:16.04,words:4813},t:"Java 基础 - 基础增强",O:16,y:"a"}}],["/posts/Java/Java%E5%9F%BA%E7%A1%80/day17-%E5%9F%BA%E7%A1%80%E5%8A%A0%E5%BC%BA.html",{loader:()=>o(()=>import("./day17-基础加强.html--K2WSRKI.js"),[]),meta:{a:"MrJason",d:1729494189e3,c:"Java基础",g:["Java","学习","基础"],e:`
<h2>1.单元测试</h2>
<h3>1.1概述【理解】</h3>
<p>JUnit是一个 Java 编程语言的单元测试工具。JUnit 是一个非常重要的测试工具</p>
<h3>1.2特点【理解】</h3>
<ul>
<li>JUnit是一个开放源代码的测试工具。</li>
<li>提供注解来识别测试方法。</li>
<li>JUnit测试可以让你编写代码更快，并能提高质量。</li>
<li>JUnit优雅简洁。没那么复杂，花费时间较少。</li>
<li>JUnit在一个条中显示进度。如果运行良好则是绿色；如果运行失败，则变成红色。</li>
</ul>
<h3>1.3使用步骤【应用】</h3>`,r:{minutes:5.51,words:1653},t:"Java 基础 - 基础增强",O:17,y:"a"}}],["/posts/Java/Java%E5%9F%BA%E7%A1%80/java-advanced-spi.html",{loader:()=>o(()=>import("./java-advanced-spi.html-CSCKu_RN.js"),[]),meta:{a:"MrJason",d:1729494189e3,c:"Java基础",g:["Java","学习","基础"],e:`
<blockquote>
<p>SPI（Service Provider Interface），是JDK内置的一种 服务提供发现机制，可以用来启用框架扩展和替换组件，主要是被框架的开发人员使用。</p>
</blockquote>
<h2>1. 什么是SPI机制</h2>
<p>SPI（Service Provider Interface），是JDK内置的一种 服务提供发现机制，可以用来启用框架扩展和替换组件，主要是被框架的开发人员使用，比如java.sql.Driver接口，其他不同厂商可以针对同一接口做出不同的实现，MySQL和PostgreSQL都有不同的实现提供给用户，而Java的SPI机制可以为某个接口寻找服务实现。Java中SPI机制主要思想是将装配的控制权移到程序之外，在模块化设计中这个机制尤其重要，其核心思想就是 <strong>解耦</strong>。</p>`,r:{minutes:20.12,words:6035},t:"Java常用机制 - SPI机制详解",O:100,y:"a"}}],["/posts/Java/Java%E5%9F%BA%E7%A1%80/java-basic-keywords.html",{loader:()=>o(()=>import("./java-basic-keywords.html-Bi9L1KaP.js"),[]),meta:{a:"MrJason",d:1729494189e3,c:"Java基础",g:["Java","学习","基础"],e:`
<h2>1. final 关键字</h2>
<p>final 关键字主要用在三个地方：变量、方法、类</p>
<ol>
<li>
<p><strong>final 变量</strong></p>
<ul>
<li>如果是<strong>基本数据类型</strong>的变量，其<strong>数值一旦初始化之后便不能改变</strong></li>
<li>如果是<strong>引用类型</strong>的变量：则在对其初始化之后便**不能再让其指向另一个对象*</li>
</ul>
</li>
<li>
<p><strong>final 类</strong></p>
<p>表明这个类<strong>不能被继承</strong>，final 类中的<strong>所有成员方法都会被隐式得指定为final方法</strong></p>
</li>
<li>
<p><strong>final方法</strong></p>
<p>final修饰的成员方法<strong>不能被子类重写</strong></p>
</li>
</ol>`,r:{minutes:4.16,words:1249},t:"final,static,this,super 关键字总结",O:120,y:"a"}}],["/posts/Java/Java%E5%9F%BA%E7%A1%80/java-basic-lan-basic.html",{loader:()=>o(()=>import("./java-basic-lan-basic.html-tSe0oGJA.js"),[]),meta:{a:"MrJason",d:1729494189e3,c:"Java基础",g:["Java","学习","基础"],e:`
<h2>1. 数据类型</h2>
<h3>1.1 包装类型</h3>
<p>八个基本类型:</p>
<ul>
<li>boolean/1</li>
<li>byte/8</li>
<li>char/16</li>
<li>short/16</li>
<li>int/32</li>
<li>float/32</li>
<li>long/64</li>
<li>double/64</li>
</ul>
<p>基本类型都有对应的包装类型，基本类型与其对应的包装类型之间的赋值使用自动装箱与拆箱完成。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">Integer</span><span style="color:#E06C75;--shiki-dark:#E06C75"> x </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     // 装箱</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> y </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75"> x</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         // 拆箱</span></span></code></pre>
</div>`,r:{minutes:23.5,words:7051},t:"Java 基础 - 知识点",O:20,y:"a"}}],["/posts/Java/Java%E5%9F%BA%E7%A1%80/java-basic-lan-sum.html",{loader:()=>o(()=>import("./java-basic-lan-sum.html-X_r_vBFe.js"),[]),meta:{a:"MrJason",d:1729494189e3,c:"Java基础",g:["Java","学习","基础"],e:`
<h2>1. 知识体系</h2>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403111451959.png" alt="java_basic" tabindex="0" loading="lazy"><figcaption>java_basic</figcaption></figure>
<h2>2. Q&amp;A</h2>
<h3>2.1 Java 中应该使用什么数据类型来代表价格?</h3>
<p>如果不是特别关心内存和性能的话，使用BigDecimal，否则使用预定义精度的 double 类型。</p>`,r:{minutes:18.49,words:5548},t:"Java 基础 - 图谱 & Q/A",O:30,y:"a"}}],["/posts/Java/Java%E5%9F%BA%E7%A1%80/java-basic-x-annotation.html",{loader:()=>o(()=>import("./java-basic-x-annotation.html-CingcIhc.js"),[]),meta:{a:"MrJason",d:1729494189e3,c:"Java基础",g:["Java","学习","基础"],e:`
<blockquote>
<p>注解是JDK1.5版本开始引入的一个特性，用于对代码进行说明，可以对包、类、接口、字段、方法参数、局部变量等进行注解。它是框架学习和设计者必须掌握的基础。</p>
</blockquote>
<h2>1. 注解基础</h2>
<p>注解是JDK1.5版本开始引入的一个特性，用于对代码进行说明，可以对包、类、接口、字段、方法参数、局部变量等进行注解。它主要的作用有以下四方面：</p>
<ul>
<li>生成文档，通过代码里标识的元数据生成javadoc文档。</li>
<li>编译检查，通过代码里标识的元数据让编译器在编译期间进行检查验证。</li>
<li>编译时动态处理，编译时通过代码里标识的元数据动态处理，例如动态生成代码。</li>
<li>运行时动态处理，运行时通过代码里标识的元数据动态处理，例如使用反射注入实例。</li>
</ul>`,r:{minutes:18.11,words:5434},t:"Java 基础 - 注解机制详解",O:40,y:"a"}}],["/posts/Java/Java%E5%9F%BA%E7%A1%80/java-basic-x-exception.html",{loader:()=>o(()=>import("./java-basic-x-exception.html-vRdcgT7s.js"),[]),meta:{a:"MrJason",d:1729494189e3,c:"Java基础",g:["Java","学习","基础"],e:`
<blockquote>
<p>Java异常是Java提供的一种识别及响应错误的一致性机制，java异常机制可以使程序中异常处理代码和正常业务代码分离，保证程序代码更加优雅，并提高程序健壮性。本文综合多篇文章后，总结了Java 异常的相关知识，希望可以提升你对Java中异常的认知效率。</p>
</blockquote>
<h2>1. 异常的层次结构</h2>
<p>异常指不期而至的各种状况，如：文件找不到、网络连接失败、非法参数等。异常是一个事件，它发生在程序运行期间，干扰了正常的指令流程。Java通 过API中Throwable类的众多子类描述各种不同的异常。因而，Java异常都是对象，是Throwable子类的实例，描述了出现在一段编码中的 错误条件。当条件生成时，错误将引发异常。</p>`,r:{minutes:29.51,words:8853},t:"Java 基础 - 异常机制详解",O:60,y:"a"}}],["/posts/Java/Java%E5%9F%BA%E7%A1%80/java-basic-x-generic.html",{loader:()=>o(()=>import("./java-basic-x-generic.html-B_0FxmZv.js"),[]),meta:{a:"MrJason",d:1729494189e3,c:"Java基础",g:["Java","学习","基础"],e:`
<blockquote>
<p>Java泛型这个特性是从JDK 1.5才开始加入的，因此为了兼容之前的版本，Java泛型的实现采取了“<strong>伪泛型</strong>”的策略，即Java在语法上支持泛型，但是在编译阶段会进行所谓的“<strong>类型擦除</strong>”（Type Erasure），将所有的泛型表示（尖括号中的内容）都替换为具体的类型（其对应的原生态类型），就像完全没有泛型一样。本文综合多篇文章后，总结了Java 泛型的相关知识，希望可以提升你对Java中泛型的认知效率。</p>
</blockquote>
<h2>1. 为什么会引入泛型</h2>
<blockquote>
<p>泛型的本质是为了参数化类型（在不创建新的类型的情况下，通过泛型指定的不同类型来控制形参具体限制的类型）。也就是说在泛型使用过程中，操作的数据类型被指定为一个参数，这种参数类型可以用在类、接口和方法中，分别被称为泛型类、泛型接口、泛型方法。</p>
</blockquote>`,r:{minutes:31.59,words:9476},t:"Java 基础 - 泛型机制详解",O:30,y:"a"}}],["/posts/Java/Java%E5%9F%BA%E7%A1%80/java-basic-x-reflection.html",{loader:()=>o(()=>import("./java-basic-x-reflection.html-0gHaLAsx.js"),[]),meta:{a:"MrJason",d:1729494189e3,c:"Java基础",g:["Java","学习","基础"],e:`
<blockquote>
<p>JAVA反射机制是在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；对于任意一个对象，都能够调用它的任意一个方法和属性；这种动态获取的信息以及动态调用对象的方法的功能称为java语言的反射机制。Java反射机制在框架设计中极为广泛，需要深入理解。本文综合多篇文章后，总结了Java 反射的相关知识，希望可以提升你对Java中反射的认知效率。</p>
</blockquote>
<h2>0. 基础</h2>
<h3>0.1 什么是反射？</h3>
<p>可以在<strong>运行时获得</strong>程序或程序集中<strong>每一个类型的成员和成员的信息</strong>。</p>`,r:{minutes:34.92,words:10476},t:"Java 基础 - 反射机制详解",O:80,y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/day01-%E5%A4%9A%E7%BA%BF%E7%A8%8B.html",{loader:()=>o(()=>import("./day01-多线程.html-B_CwkBck.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1.实现多线程</h2>
<h3>1.1简单了解多线程【理解】</h3>
<p>是指从软件或者硬件上实现多个线程并发执行的技术。<br>
具有多线程能力的计算机因有硬件支持而能够在同一时间执行多个线程，提升性能。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403111507888.png" alt="01_简单了解多线程" tabindex="0" loading="lazy"><figcaption>01_简单了解多线程</figcaption></figure>
<h3>1.2并发和并行【理解】</h3>`,r:{minutes:20.61,words:6184},t:"多线程",y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/day02-%E5%A4%9A%E7%BA%BF%E7%A8%8B.html",{loader:()=>o(()=>import("./day02-多线程.html-eX6eJU8Z.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1.线程池</h2>
<h3>1.1 线程状态介绍</h3>
<p>当线程被创建并启动以后，它既不是一启动就进入了执行状态，也不是一直处于执行状态。线程对象在不同的时期有不同的状态。那么Java中的线程存在哪几种状态呢？Java中的线程</p>
<p>状态被定义在了java.lang.Thread.State枚举类中，State枚举类的源码如下：</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Thread</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> enum</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> State</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /* 新建 */</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">        NEW</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /* 可运行状态 */</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">        RUNNABLE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /* 阻塞状态 */</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">        BLOCKED</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /* 无限等待状态 */</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">        WAITING</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /* 计时等待 */</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">        TIMED_WAITING</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /* 终止 */</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">        TERMINATED</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">	}</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 获取当前线程的状态</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> State</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getState</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> jdk</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">internal</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">misc</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">VM</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">toThreadState</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(threadStatus);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:21.61,words:6483},t:"线程池",y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-jmm.html",{loader:()=>o(()=>import("./java-thread-x-jmm.html-BrWgPt3w.js"),[]),meta:{d:1729494189e3,g:null,e:`
<blockquote>
<p>在介绍Java内存模型之前，先来看一下到底什么是计算机内存模型，然后再来看Java内存模型在计算机内存模型的基础上做了哪些事情。要说计算机的内存模型，就要说一下一段古老的历史，看一下为什么要有内存模型。</p>
</blockquote>
<h2>1. 为什么要有内存模型</h2>
<p><strong>内存模型，英文名Memory Model，他是一个很老的老古董了。他是与计算机硬件有关的一个概念。那么我先给你介绍下他和硬件到底有啥关系。</strong></p>
<blockquote>
<ul>
<li>CPU的速度远比内存块，所以对数据的读写，放在CPU的高速缓存中完成</li>
<li>程序运行过程中，将需要的数据从<strong>主存复制一份到CPU高速缓存</strong>,CPU进行计算时<strong>从高速缓存读取数据和向其中写入数据</strong>，然后<strong>刷新到主存中</strong></li>
</ul>
</blockquote>`,r:{minutes:15.04,words:4511},t:"Java内存模型",y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-juc-AtomicInteger.html",{loader:()=>o(()=>import("./java-thread-x-juc-AtomicInteger.html-pSu2B82Q.js"),[]),meta:{d:1729494189e3,c:["Java","并发"],g:null,e:`
<blockquote>
<p>Java原子类是通过UnSafe类实现的，这节主要分析下UnSafe类。UnSafe类在J.U.C中CAS操作有很广泛的应用。</p>
</blockquote>
<h2>1. 简介</h2>
<p>Unsafe是位于sun.misc包下的一个类，<strong>主要提供一些用于执行低级别、不安全操作的方法</strong>，</p>
<ul>
<li>如直接访问系统内存资源</li>
<li>自主管理内存资源等</li>
</ul>
<p>这些方法在提升Java运行效率、增强Java语言底层资源操作能力方面起到了很大的作用。</p>
<h3>1.1 Unsafe类的指针风险</h3>`,r:{minutes:4.05,words:1215},t:"JUC原子类: CAS, Unsafe和原子类详解",O:520,y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-juc-collection-BlockingQueue.html",{loader:()=>o(()=>import("./java-thread-x-juc-collection-BlockingQueue.html-CIImd7GN.js"),[]),meta:{d:1729494189e3,c:["Java","并发"],g:null,e:`
<h2>0. 面试题</h2>
<ul>
<li>什么是BlockingDeque?</li>
<li>BlockingQueue大家族有哪些? ArrayBlockingQueue, DelayQueue, LinkedBlockingQueue, SynchronousQueue...</li>
<li>BlockingQueue适合用在什么样的场景?</li>
<li>BlockingQueue常用的方法?</li>
<li>BlockingQueue插入方法有哪些? 这些方法(<code>add(o)</code>,<code>offer(o)</code>,<code>put(o)</code>,<code>offer(o, timeout, timeunit)</code>)的区别是什么?</li>
<li>BlockingDeque 与BlockingQueue有何关系，请对比下它们的方法?</li>
<li>BlockingDeque适合用在什么样的场景?</li>
<li>BlockingDeque大家族有哪些?</li>
<li>BlockingDeque 与BlockingQueue实现例子?</li>
</ul>`,r:{minutes:10.71,words:3213},t:"JUC集合: BlockingQueue详解",O:580,y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-juc-executor-FutureTask.html",{loader:()=>o(()=>import("./java-thread-x-juc-executor-FutureTask.html-D4NElca9.js"),[]),meta:{d:1729494189e3,c:["Java","并发"],g:null,e:`
<h2>0. 面试题</h2>
<ul>
<li>FutureTask用来解决什么问题的? 为什么会出现?</li>
<li>FutureTask类结构关系怎么样的?</li>
<li>FutureTask的线程安全是由什么保证的?</li>
<li>FutureTask结果返回机制?</li>
<li>FutureTask内部运行状态的转变?</li>
<li>FutureTask通常会怎么用? 举例说明。</li>
</ul>
<h2>1. 简介</h2>
<blockquote>
<p>Future 表示了一个任务的生命周期，是一个可取消的异步运算，可以把它看作是一个异步操作的结果的占位符，它将在未来的某个时刻完成，并提供对其结果的访问。在并发包中许多异步任务类都继承自Future，其中最典型的就是 FutureTask</p>
</blockquote>`,r:{minutes:11.74,words:3523},t:"JUC工具类: FutureTask详解",O:720,y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-juc-executor-ScheduledThreadPoolExecutor.html",{loader:()=>o(()=>import("./java-thread-x-juc-executor-ScheduledThreadPoolExecutor.html-Dy0vkUF6.js"),[]),meta:{d:1729494189e3,c:["Java","并发"],g:null,e:`
<h2>0. 面试题</h2>
<ul>
<li>ScheduledThreadPoolExecutor要解决什么样的问题?</li>
<li>ScheduledThreadPoolExecutor相比ThreadPoolExecutor有哪些特性?</li>
<li>ScheduledThreadPoolExecutor有什么样的数据结构，核心内部类和抽象类?</li>
<li>ScheduledThreadPoolExecutor有哪两个关闭策略? 区别是什么?</li>
<li>ScheduledThreadPoolExecutor中scheduleAtFixedRate 和 scheduleWithFixedDelay区别是什么?</li>
<li>为什么ThreadPoolExecutor 的调整策略却不适用于 ScheduledThreadPoolExecutor?</li>
<li>Executors 提供了几种方法来构造 ScheduledThreadPoolExecutor?</li>
</ul>`,r:{minutes:10.86,words:3257},t:"JUC线程池: ScheduledThreadPoolExecutor详解",O:630,y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-juc-executor-ThreadPoolExecutor.html",{loader:()=>o(()=>import("./java-thread-x-juc-executor-ThreadPoolExecutor.html-DYPODQJA.js"),[]),meta:{d:1729494189e3,c:["Java","并发"],g:null,e:`
<h2>0. 面试题目</h2>
<ul>
<li>为什么要有线程池?</li>
<li>Java是实现和管理线程池有哪些方式? 请简单举例如何使用。</li>
<li>为什么很多公司不允许使用Executors去创建线程池? 那么推荐怎么使用呢?</li>
<li>ThreadPoolExecutor有哪些核心的配置参数? 请简要说明</li>
<li>ThreadPoolExecutor可以创建哪是哪三种线程池呢?</li>
<li>当队列满了并且worker的数量达到maxSize的时候，会怎么样?</li>
<li>说说ThreadPoolExecutor有哪些RejectedExecutionHandler策略? 默认是什么策略?</li>
<li>简要说下线程池的任务执行机制? execute –&gt; addWorker –&gt;runworker (getTask)</li>
<li>线程池中任务是如何提交的?</li>
<li>线程池中任务是如何关闭的?</li>
<li>在配置线程池的时候需要考虑哪些配置因素?</li>
<li>如何监控线程池的状态?</li>
</ul>`,r:{minutes:25.36,words:7607},t:"JUC线程池: ThreadPoolExecutor详解",O:620,y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-juc-tool-CompletableFuture.html",{loader:()=>o(()=>import("./java-thread-x-juc-tool-CompletableFuture.html-CZOSW98R.js"),[]),meta:{d:1729494189e3,c:["Java","并发"],g:null,e:`
<h2>1. 简介</h2>
<p>因为<code>Future</code>的局限性，它没法直接对多个任务进行链式、组合等处理，需要借助并发工具类才能完成，实现逻辑比较复杂。</p>
<p>而CompletableFuture是对Future的扩展和增强。</p>
<ul>
<li>
<p>CompletableFuture实现了Future接口，并在此基础上进行了丰富的扩展，完美弥补了Future的局限性</p>
</li>
<li>
<p>同时CompletableFuture实现了对<strong>任务编排的能力</strong>。借助这项能力，可以轻松地组织不同任务的运行顺序、规则以及方式。</p>
<p>从某种程度上说，这项能力是它的核心能力。而在以往，虽然通过CountDownLatch等工具类也可以实现任务的编排，但需要复杂的逻辑处理，不仅耗费精力且难以维护。</p>
</li>
</ul>`,r:{minutes:12.89,words:3868},t:"JUC工具类: CompletableFuture 详解",O:730,y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-juc-tool-countdownlatch.html",{loader:()=>o(()=>import("./java-thread-x-juc-tool-countdownlatch.html-D0A5yDPU.js"),[]),meta:{d:1729494189e3,c:["Java","并发"],e:`
<h2>0. 面试题</h2>
<ul>
<li>什么是CountDownLatch?</li>
<li>CountDownLatch底层实现原理?</li>
<li>CountDownLatch一次可以唤醒几个任务? 多个</li>
<li>CountDownLatch有哪些主要方法? await(),countDown()</li>
<li>CountDownLatch适用于什么场景?</li>
<li>写道题：实现一个容器，提供两个方法，add，size 写两个线程，线程1添加10个元素到容器中，线程2实现监控元素的个数，当个数到5个时，线程2给出提示并结束? 使用CountDownLatch 代替wait notify 好处。</li>
</ul>`,r:{minutes:9.15,words:2745},t:"JUC工具类: CountDownLatch详解",O:710,y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-key-final.html",{loader:()=>o(()=>import("./java-thread-x-key-final.html-BcIZCuRy.js"),[]),meta:{d:1729494189e3,c:["Java","并发"],g:null,e:`
<blockquote>
<p>final 关键字看上去简单，但是真正深入理解的人可以说少之又少，读完本文你就知道我在说什么了。本文将常规的用法简化，提出一些用法和深入的思考</p>
</blockquote>
<h2>0. 面试</h2>
<ul>
<li>所有的final修饰的字段都是编译期常量吗?</li>
<li>如何理解private所修饰的方法是隐式的final?</li>
<li>说说final类型的类如何拓展? 比如String是final类型，我们想写个MyString复用所有String中方法，同时增加一个新的toMyString()的方法，应该如何做?</li>
<li>final方法可以被重载吗? 可以</li>
<li>父类的final方法能不能够被子类重写? 不可以</li>
<li>说说final域重排序规则?</li>
<li>说说final的原理?</li>
<li>使用 final 的限制条件和局限性?</li>
</ul>`,r:{minutes:13.98,words:4194},t:"关键字: final详解",O:130,y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-key-synchronized-principle.html",{loader:()=>o(()=>import("./java-thread-x-key-synchronized-principle.html-BKpCjnEJ.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p><code>synchronized</code>，是Java中用于解决并发情况下数据同步访问的一个很重要的关键字。当我们想要保证一个共享资源在同一时间只会被一个线程访问到时，我们可以在代码中使用<code>synchronized</code>关键字对类或者对象加锁。</p>
<p>那么<code>synchronized</code>关键字的实现原理是什么呢？</p>
<h2>2. 准备工作（反编译）</h2>
<h3>2.1 源代码</h3>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SynchronizedTest</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> synchronized</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> doSth</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(){</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Hello World"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> doSth1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(){</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        synchronized</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SynchronizedTest</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">){</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Hello World"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
</div>`,r:{minutes:4.47,words:1340},t:"Synchronized的实现原理",y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-key-synchronized.html",{loader:()=>o(()=>import("./java-thread-x-key-synchronized.html-VamK0rWh.js"),[]),meta:{d:1729494189e3,c:["Java","并发"],g:null,e:`
<h2>0. 面试题</h2>
<ul>
<li>Synchronized可以作用在哪里? 分别通过对象锁和类锁进行举例。</li>
<li>Synchronized本质上是通过什么保证线程安全的? 分三个方面回答：加锁和释放锁的原理，可重入原理，保证可见性原理。</li>
<li>Synchronized由什么样的缺陷? Java Lock是怎么弥补这些缺陷的。</li>
<li>Synchronized和Lock的对比，和选择?</li>
<li>Synchronized在使用时有何注意事项?</li>
<li>Synchronized修饰的方法在抛出异常时,会释放锁吗?</li>
<li>多个线程等待同一个snchronized锁的时候，JVM如何选择下一个获取锁的线程?</li>
<li>Synchronized使得同时只有一个线程可以执行，性能比较差，有什么提升的方法?</li>
<li>我想更加灵活的控制锁的释放和获取(现在释放锁和获取锁的时机都被规定死了)，怎么办?</li>
<li>什么是锁的升级和降级? 什么是JVM里的偏斜锁、轻量级锁、重量级锁?</li>
<li>不同的JDK中对Synchronized有何优化?</li>
</ul>`,r:{minutes:13.32,words:3997},t:"关键字: synchronized详解",O:110,y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-key-synchronized2.html",{loader:()=>o(()=>import("./java-thread-x-key-synchronized2.html-xxjVFCq-.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p>synchronized关键字解决的是<strong>多个线程之间访问资源的同步性</strong>，synchronize关键字可以保证被它修饰的方法或者代码块在任意时刻只能有一个线程执行</p>
<h3>1.1 synchronized 如何保证多线程之间访问资源的同步性</h3>
<ul>
<li>原子性</li>
<li>可见性</li>
<li>有序性</li>
</ul>
<p>具体可参照<a href="./volatile%E5%85%B3%E9%94%AE%E5%AD%97">volatile关键字</a></p>
<h3>1.2 java早期synchronized效率为什么低</h3>`,r:{minutes:7.9,words:2371},t:"synchronized关键字",y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-key-volatile-old.html",{loader:()=>o(()=>import("./java-thread-x-key-volatile-old.html-Bnd001xK.js"),[]),meta:{d:1729494189e3,g:null,e:`
<p>volatile 关键字与Java内存模型有关，所以先要掌握内存模型相关的概念和知识，然后我们再分析volatitle关键字的实现原理，最后总结使用volatile的使用场景</p>
<h2>1. 内存模型的相关概念</h2>
<ul>
<li>CPU的速度远比内存块，所以对数据的读写，放在CPU的高速缓存中完成</li>
</ul>
<blockquote>
<p>大家都知道，计算机在执行程序时，每条指令都是在CPU中执行的，而执行指令的过程汇总，势必涉及到数据的读取和写入。由于程序运行过程中临时数据是存放在主存（物理内存）当中的，这是就存在一个问题，由于CPU执行速度很快，而从内存读取数据和向内存写入数据的过程跟CPU执行指令的速度比起来要慢的多，因此如果任何时候对数据的操作都要通过和内存的交互进行。会大大降低指令执行速度。因此CPU里面就有了高速缓存</p>
</blockquote>`,r:{minutes:24.9,words:7469},t:"volatile关键字",y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-key-volatile.html",{loader:()=>o(()=>import("./java-thread-x-key-volatile.html-DANOz1tn.js"),[]),meta:{d:1729494189e3,c:["Java","并发"],g:null,e:`
<blockquote>
<p>Java语言为了解决并发编程中存在的原子性、可见性和有序性问题，提供了一系列和并发处理相关的关键字，比如<code>synchronized</code>、<code>volatile</code>、<code>final</code>、<code>concurren包</code>等</p>
</blockquote>
<h2>1. 简介</h2>
<p><code>volatile</code>通常被比喻成"轻量级的<code>synchronized</code>"，也是Java并发编程中比较重要的一个关键字。和<code>synchronized</code>不同，<code>volatile</code>是一个变量修饰符，只能用来修饰变量。无法修饰方法及代码块等。</p>`,r:{minutes:7.62,words:2285},t:"关键字: volatile",O:120,y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-lock-AbstractQueuedSynchronizer.html",{loader:()=>o(()=>import("./java-thread-x-lock-AbstractQueuedSynchronizer.html-DgNG9ceU.js"),[]),meta:{d:1729494189e3,c:["Java","并发"],g:null,e:`
<h2>0. 面试题</h2>
<ul>
<li>什么是AQS? 为什么它是核心?</li>
<li>AQS的核心思想是什么? 它是怎么实现的? 底层数据结构等</li>
<li>AQS有哪些核心的方法?</li>
<li>AQS定义什么样的资源获取方式? AQS定义了两种资源获取方式：<code>独占</code>(只有一个线程能访问执行，又根据是否按队列的顺序分为<code>公平锁</code>和<code>非公平锁</code>，如<code>ReentrantLock</code>) 和<code>共享</code>(多个线程可同时访问执行，如<code>Semaphore</code>、<code>CountDownLatch</code>、 <code>CyclicBarrier</code> )。<code>ReentrantReadWriteLock</code>可以看成是组合式，允许多个线程同时对某一资源进行读。</li>
<li>AQS底层使用了什么样的设计模式? 模板</li>
<li>AQS的应用示例?</li>
</ul>`,r:{minutes:26.74,words:8022},t:"JUC锁: 锁核心类AQS详解",O:540,y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-lock-LockSupport-source.html",{loader:()=>o(()=>import("./java-thread-x-lock-LockSupport-source.html-BUtUP6fk.js"),[]),meta:{d:1729494189e3,c:["Java","并发"],g:null,e:`
<h2>1. 类的属性</h2>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> LockSupport</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // Hotspot implementation via intrinsics API</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> final</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> sun</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">misc</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Unsafe</span><span style="color:#E06C75;--shiki-dark:#E06C75"> UNSAFE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // parkBlocker字段的内存偏移地址</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> final</span><span style="color:#C678DD;--shiki-dark:#C678DD"> long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> parkBlockerOffset</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    //threadLocalRandomSeed字段的内存偏移地址</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> final</span><span style="color:#C678DD;--shiki-dark:#C678DD"> long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> SEED</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // threadLocalRandomProbe字段的内存偏移地址</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> final</span><span style="color:#C678DD;--shiki-dark:#C678DD"> long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> PROBE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // threadLocalRandomSecondarySeed字段的内存偏移地址</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    static</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        try</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 获取Unsafe实例</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            UNSAFE </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> sun</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">misc</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Unsafe</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getUnsafe</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 线程类类型</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            Class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#C678DD;--shiki-dark:#C678DD">?</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> tk </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Thread</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 获取Thread的parkBlocker字段的内存偏移地址</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            parkBlockerOffset </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> UNSAFE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">objectFieldOffset</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">tk</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getDeclaredField</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"parkBlocker"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 获取Thread的threadLocalRandomSeed字段的内存偏移地址</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            SEED </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> UNSAFE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">objectFieldOffset</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">tk</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getDeclaredField</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"threadLocalRandomSeed"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 获取Thread的threadLocalRandomProbe字段的内存偏移地址</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            PROBE </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> UNSAFE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">objectFieldOffset</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">tk</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getDeclaredField</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"threadLocalRandomProbe"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 获取Thread的threadLocalRandomSecondarySeed字段的内存偏移地址</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            SECONDARY </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> UNSAFE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">objectFieldOffset</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">tk</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getDeclaredField</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"threadLocalRandomSecondarySeed"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD">catch</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Exception</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> ex</span><span style="color:#E06C75;--shiki-dark:#E06C75">) { </span><span style="color:#C678DD;--shiki-dark:#C678DD">throw</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Error</span><span style="color:#E06C75;--shiki-dark:#E06C75">(ex)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:5.17,words:1551},t:"JUC锁: LockSupport源码分析",O:525,y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-lock-LockSupport.html",{loader:()=>o(()=>import("./java-thread-x-lock-LockSupport.html-DvUxGgIR.js"),[]),meta:{d:1729494189e3,c:["Java","并发"],g:null,e:`
<h2>0. 面试题</h2>
<ul>
<li>为什么LockSupport也是核心基础类? AQS框架借助于两个类：Unsafe(提供CAS操作)和LockSupport(提供park/unpark操作)</li>
<li>写出分别通过wait/notify和LockSupport的park/unpark实现同步?</li>
<li>LockSupport.park()会释放锁资源吗? 那么Condition.await()呢?</li>
<li>Thread.sleep()、Object.wait()、Condition.await()、LockSupport.park()的区别? 重点</li>
<li>如果在wait()之前执行了notify()会怎样?</li>
<li>如果在park()之前执行了unpark()会怎样?</li>
</ul>`,r:{minutes:6.49,words:1946},t:"JUC锁: LockSupport详解",O:530,y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-lock-ReentrantLock.html",{loader:()=>o(()=>import("./java-thread-x-lock-ReentrantLock.html-BCxdJVYC.js"),[]),meta:{d:1729494189e3,c:["Java","并发"],g:null,e:`
<h2>0. 带着BAT大厂的面试问题去理解</h2>
<ul>
<li>什么是可重入，什么是可重入锁? 它用来解决什么问题?</li>
<li>ReentrantLock的核心是AQS，那么它怎么来实现的，继承吗? 说说其类内部结构关系。</li>
<li>ReentrantLock是如何实现公平锁的?</li>
<li>ReentrantLock是如何实现非公平锁的?</li>
<li>ReentrantLock默认实现的是公平还是非公平锁?</li>
<li>使用ReentrantLock实现公平和非公平锁的示例?</li>
<li>ReentrantLock和Synchronized的对比?</li>
</ul>`,r:{minutes:8.22,words:2467},t:"JUC锁: ReentrantLock详解",O:550,y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-lock-reentrantlock-array-blocking-queue.html",{loader:()=>o(()=>import("./java-thread-x-lock-reentrantlock-array-blocking-queue.html-C55x5ce4.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p>比如最典型的阻塞队列 ArrayBlockingQueue，当队列中没有元素的时候，他无法take出一个元素，需要等待其他线程入队一个元素后唤醒它，才能继续弹出元素。</p>
<h3>1.1 特点</h3>
<p>阻塞队列是一种特殊的先进先出队列,它有以下几个特点<br>
1.入队和出队线程安全<br>
2.当队列满时,入队线程会被阻塞;当队列为空时,出队线程会被阻塞。</p>
<h2>2. 实现</h2>
<h3>2.1 三个重要的属性</h3>
<p>它有三个重要的属性，一个锁和两个条件，源码如下：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">final</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ReentrantLock</span><span style="color:#E06C75;--shiki-dark:#E06C75"> lock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> final</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Condition</span><span style="color:#E06C75;--shiki-dark:#E06C75"> notEmpty</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> final</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Condition</span><span style="color:#E06C75;--shiki-dark:#E06C75"> notFull</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span></code></pre>
</div>`,r:{minutes:1.81,words:542},t:"ReentrantLock和条件锁Condition实现阻塞队列ArrayBlockingQueue",y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-lock-reentrantlock-back.html",{loader:()=>o(()=>import("./java-thread-x-lock-reentrantlock-back.html-DTdp5Cxs.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p><code>ReentrantLock</code>是可重入的互斥锁，虽然具有与<code>synchronized</code>相同功能，但是会比<code>synchronized</code>更加灵活（<strong>具有更多的方法</strong>）。</p>
<h2>2. <strong>ReentrantLock</strong> 和 <strong>Synchronized</strong>的对比</h2>
<table>
<thead>
<tr>
<th></th>
<th>ReentrantLock</th>
<th>Synchronized</th>
</tr>
</thead>
<tbody>
<tr>
<td>锁实现机制</td>
<td>依赖AQS</td>
<td>监视器模式</td>
</tr>
<tr>
<td>灵活性</td>
<td><strong>支特响应中断、超时、尝试获取锁</strong></td>
<td>不灵活</td>
</tr>
<tr>
<td>释放形式</td>
<td>必须显示调用unlock释放锁</td>
<td>自动释放监视器</td>
</tr>
<tr>
<td>锁类型</td>
<td><strong>公平锁&amp;非公平锁</strong></td>
<td>非公平锁</td>
</tr>
<tr>
<td>条件队列</td>
<td>可关联多个条件队列</td>
<td>关联一个条件队列</td>
</tr>
<tr>
<td>可重入性</td>
<td><strong>可重入</strong></td>
<td>可重入</td>
</tr>
</tbody>
</table>`,r:{minutes:3.77,words:1131},t:"ReentrantLock重入锁",y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-lock-reentrantlock-condition-source.html",{loader:()=>o(()=>import("./java-thread-x-lock-reentrantlock-condition-source.html-MwdSYigX.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p>条件锁，指在获得锁之后，还需要达成某些条件后，才能继续执行的锁。且必须配合Lock一起使用，也就是说必须获得锁之后才可以调用condition.await()方法</p>
<h2>2. 源码分析</h2>
<p>ReentrantLock 的条件锁使用的 <code>AbstractQueuedSynchronizer</code> 中的<code>ConditionObject</code> 来实现的，所以其实标题说的ReentrantLock 源码分析，其实应该是AQS源码分析之条件锁<code>Condition</code>，但是这里为什么还是要说成ReentrantLock 源码分析呢？主要是AQS是一个抽象类，用户并不能直接使用，而ReentrantLock 提供了使用条件锁的入口，源码如下：：</p>`,r:{minutes:9.53,words:2859},t:"ReentrantLock之条件锁Condition源码分析",y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-lock-reentrantlock-source.html",{loader:()=>o(()=>import("./java-thread-x-lock-reentrantlock-source.html-BEKJ-Hjh.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 类的继承关系</h2>
<p><strong>ReentrantLock</strong> 实现了 <strong>Lock</strong>接口，<strong>Lock</strong>接口中定义了 <strong>lock</strong>与 <strong>unlock</strong>相关操作，并且还存在 <strong>newCondition</strong>方法，表示生成一个条件。</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>public class ReentrantLock implements Lock, java.io.Serializable {</span></span></code></pre>
</div>`,r:{minutes:8.69,words:2608},t:"ReentrantLock源码分析(一)-整体流程",y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-lock-reentrantlock-source2.html",{loader:()=>o(()=>import("./java-thread-x-lock-reentrantlock-source2.html-Cei1-Uxu.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. ReentrantLock 中线程加入等待队列</h2>
<h3>1.1 加入队列的时机</h3>
<p><strong>当执行Acquire(1)时，会通过tryAcquire获取锁。在这种情况下，如果获取锁失败，就会调用 addWaiter加入到等待队列中去。</strong></p>
<p>在AQS 中</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD"> public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> final</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> acquire</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> arg) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 当执行Acquire(1)时，会通过tryAcquire获取锁。在这种情况下，如果获取锁失败，就会调用 addWaiter加入到等待队列中去。</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">tryAcquire</span><span style="color:#E06C75;--shiki-dark:#E06C75">(arg) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&amp;&amp;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">            acquireQueued</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">addWaiter</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Node</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">EXCLUSIVE</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> arg))</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">            selfInterrupt</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
</div>`,r:{minutes:17.19,words:5157},t:"ReentrantLock源码分析(二)-获取锁细节",y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-lock-reentrantlock-source3.html",{loader:()=>o(()=>import("./java-thread-x-lock-reentrantlock-source3.html-DZs74dY6.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. AQS应用</h2>
<p>**ReentrantLock的可重入应用：**ReentrantLock的可重入性是 AQS很好的应用之一，在了解完上述知识点以后，我们很容易得知ReentrantLock实现可重入的方法。在ReentrantLock里面，不管是公平锁还是非公平锁，都有一段逻辑。</p>
<p>公平锁：</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// java.util.concurrent.locks.ReentrantLock.FairSync#tryAcquire</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (c </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">hasQueuedPredecessors</span><span style="color:#E06C75;--shiki-dark:#E06C75">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&amp;&amp;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> compareAndSetState</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> acquires)) {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">        setExclusiveOwnerThread</span><span style="color:#E06C75;--shiki-dark:#E06C75">(current)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#D19A66;--shiki-dark:#D19A66"> true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#C678DD;--shiki-dark:#C678DD"> if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (current </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getExclusiveOwnerThread</span><span style="color:#E06C75;--shiki-dark:#E06C75">()) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> nextc </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75"> c </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#E06C75;--shiki-dark:#E06C75"> acquires</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (nextc </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        throw</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Error</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Maximum lock count exceeded"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">    setState</span><span style="color:#E06C75;--shiki-dark:#E06C75">(nextc)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    return</span><span style="color:#D19A66;--shiki-dark:#D19A66"> true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.9,words:871},t:"ReentrantLock源码分析(三)-应用",y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-theorty.html",{loader:()=>o(()=>import("./java-thread-x-theorty.html-D07kLCzJ.js"),[]),meta:{d:1729494189e3,c:["Java","并发"],g:null,e:`
<h2>0. 面试题</h2>
<blockquote>
<ul>
<li>多线程的出现是要解决什么问题的?</li>
<li>线程不安全是指什么? 举例说明</li>
<li>并发出现线程不安全的本质什么? 可见性，原子性和有序性。</li>
<li>Java是怎么解决并发问题的? 3个关键字，JMM和8个Happens-Before</li>
<li>线程安全是不是非真即假? 不是</li>
<li>线程安全有哪些实现思路?</li>
<li>如何理解并发和并行的区别?</li>
</ul>
</blockquote>
<h2>1. 为什么需要多线程</h2>
<p>众所周知，CPU、内存、I/O 设备的速度是有极大差异的，为了合理利用 CPU 的高性能，平衡这三者的速度差异，计算机体系结构、操作系统、编译程序都做出了贡献，主要体现为:</p>`,r:{minutes:11.3,words:3391},t:"Java 并发 - 理论基础",O:20,y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-thread-basic.html",{loader:()=>o(()=>import("./java-thread-x-thread-basic.html-CjdtT59t.js"),[]),meta:{d:1729494189e3,c:["Java","并发"],g:null,e:`
<h2>0. 面试题</h2>
<ul>
<li>线程有哪几种状态? 分别说明从一种状态到另一种状态转变有哪些方式?</li>
<li>通常线程有哪几种使用方式?</li>
<li>基础线程机制有哪些?</li>
<li>线程的中断方式有哪些?</li>
<li>线程的互斥同步方式有哪些? 如何比较和选择?</li>
<li>线程之间有哪些协作方式?</li>
</ul>
<h2>1. 线程状态转换</h2>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403111729079.png" alt="image-20220525184540003" tabindex="0" loading="lazy"><figcaption>image-20220525184540003</figcaption></figure>`,r:{minutes:11.62,words:3485},t:"Java 并发 - 线程基础",O:30,y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-all-lock.html",{loader:()=>o(()=>import("./java-thread-y-all-lock.html-DH77R0z6.js"),[]),meta:{d:1729494189e3,c:["Java","并发"],g:null,e:`
<h2>0. 简介</h2>
<p>Java提供了种类丰富的锁，每种锁因其特性的不同，在适当的场景下能够展现出非常高的效率。本文旨在对锁相关源码（本文中的源码来自JDK 8和Netty 3.10.6）、使用场景进行举例，为读者介绍主流锁的知识点，以及不同的锁的适用场景。</p>
<p>Java中往往是按照是否含有某一特性来定义锁，我们通过特性将锁进行分组归类，再使用对比的方式进行介绍，帮助大家更快捷的理解相关知识。下面给出本文内容的总体分类目录：</p>
<blockquote></blockquote>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403120841164.png" alt="image-20220525212721156" tabindex="0" loading="lazy"><figcaption>image-20220525212721156</figcaption></figure>`,r:{minutes:11.81,words:3544},t:"Java并发 - Java中所有的锁",O:40,y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-async.html",{loader:()=>o(()=>import("./java-thread-y-async.html-AstoXykw.js"),[]),meta:{d:1729494189e3,c:["Java","并发"],g:null,e:`
<h2>0. 前言</h2>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403120849548.png" alt="image-20221219160859182" tabindex="0" loading="lazy"><figcaption>image-20221219160859182</figcaption></figure>
<p>当用户创建一笔电商交易订单时，要经历的业务逻辑流程还是很长的，每一步都要耗费一定的时间，那么整体的RT就会比较长。</p>
<p>于是，聪明的人们开始思考能不能将一些非核心业务从主流程中剥离出来，于是有了<code>异步编程</code>雏形。</p>`,r:{minutes:10.18,words:3053},t:"Java 并发 - 异步编程的 7 种实现方式",O:70,y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-atomic.html",{loader:()=>o(()=>import("./java-thread-y-atomic.html-H4oeQzhc.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p>Java从JDK1.5开始提供了java.util.concurrent.atomic包，<strong>atomic包中的类用于在多线程环境下实现单个变量多个独立操作（比如读-写）的连续原子性。</strong></p>
<p>并且都比较高效，因为它们都是由基于偏移量（类似于指针）的<strong>非阻塞CAS算法实现，用于替代锁的使用。</strong></p>
<blockquote>
<p>无锁的进行原子操作，用于替代锁的使用</p>
<p>原理：<strong>volatile字段修饰符+CAS算法（Unsafe提供）</strong></p>
</blockquote>`,r:{minutes:6.66,words:1997},t:"Atomic原子类",y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-atomicinteger-source.html",{loader:()=>o(()=>import("./java-thread-y-atomicinteger-source.html-CDawGFfU.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 核心原理</h2>
<h3>1.1 操作对象value</h3>
<p>AtomicInteger用于实现通过原子的方式更新单个变量。AtomicInteger 中保存了一个核心字段value，它就代表了Atomiclnteger 的当前实际取值，所有的方法都是围绕该值进行的。</p>
<h3>1.2 <strong>偏移量</strong>valueOffset</h3>
<p><strong>属性valueOffset，它保存着value 字段在Atomiclnteger 对象中的偏移量。Unsafe中的CAS方法都是通过字段的偏移量来操作字段的。</strong></p>`,r:{minutes:3.33,words:999},t:"原子类AtomicInteger源码解析",y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-atomicstampedreference-source.html",{loader:()=>o(()=>import("./java-thread-y-atomicstampedreference-source.html-Bj9YKDfB.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p>通过原子的方式更新单个变量的原子类的升级版，Atomic包提供了以下2个类：</p>
<ul>
<li>AtomicMarkableReference&lt; V &gt;：维护带有标记位的对象引用，可以原子方式对其进行更新。</li>
<li>AtomicStampedReference&lt; V &gt;：维护带有整数标志的对象引用，可用原子方式对其进行更新。</li>
</ul>
<p>上面两个原子类的方法以及原理几乎一致，属于带有版本号的原子类</p>
<h3>1.1 为什么需要带版本号？（ABA问题）</h3>
<p>我们知道CAS操作的三大问题之一就是“ABA”问题：<strong>CAS在操作值的时候，需要检查预期值有没有发生变化，如果没有发生变化则更新。但是，如果一个线程t1首先获取了预期值A，此时另一个线程t2则将值从A变成了B，随后又变成了A，随后t1再使用CAS进行比较交换的时候，会发现它的预期值“没有变化”，但实际上是变化过的。这就是ABA问题的由来</strong>。</p>`,r:{minutes:5.72,words:1715},t:"版本号原子类AtomicStampedReference源码解析",y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-base.html",{loader:()=>o(()=>import("./java-thread-y-base.html-BpXzac8x.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 什么是线程和进程</h2>
<h3>1.1 什么是进程</h3>
<p><strong>进程是程序的一次执行过程，是操作系统分配资源的最小单位</strong>。系统运行一个程序即是一个进程从创建，运行到消亡的过程</p>
<blockquote>
<p>在java中，当我们启动 main 函数时其实就是启动了一个 JVM 的进程，而main函数所在的线程就是这个进程中的一个线程，也称主线程</p>
</blockquote>
<h3>1.2 什么是线程</h3>
<p>他是<strong>操作系统运算调度（程序执行）的最小单位，一个进程包含一个或多个线程</strong>（重点是调度）</p>`,r:{minutes:6.75,words:2026},t:"多线程",y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-cas.html",{loader:()=>o(()=>import("./java-thread-y-cas.html-C-HOtyxp.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p>CAS（compare and Swap），既比较并替换，实现并发算法时常用到的一种技术</p>
<blockquote>
<p>在java同步器中大量使用了CAS技术，鬼斧神工的实现了多线程执行的安全性</p>
</blockquote>
<p>CAS的思想很简单: 三个参数，一个当前内存值V、旧的预期值A、即将更新的值B、<strong>当且仅当<code>预期值A</code>和<code>内存值V</code>相同时</strong>，将内存值修改为B并返回true，否则什么都不做，并返回false</p>
<h2>2. n++的问题(不能保证原子性)</h2>`,r:{minutes:5.38,words:1615},t:"CAS（比较并替换）",y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-cycle.html",{loader:()=>o(()=>import("./java-thread-y-cycle.html-DyAl7TM4.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 线程的生命周期</h2>
<p>Java 线程在运行的生命周期中的指定时刻只可能处于下面6种不同状态的其中一个状态</p>
<table>
<thead>
<tr>
<th>状态名称</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>NEW</td>
<td>初始状态，线程被构建，但是还没调用start方法</td>
</tr>
<tr>
<td>RUNNABLE</td>
<td>运行状态，Java线程将操作系统中的就绪和运行两种状态统称为”运行中“</td>
</tr>
<tr>
<td>BLOCKED</td>
<td>阻塞状态，表示线程阻塞与所</td>
</tr>
<tr>
<td>WAITING</td>
<td>等待状态，表示线程进入等待状态，进入该状态表示当前线程需要等待其他线程做出一些特定动作（通知或中断）</td>
</tr>
<tr>
<td>TIME_WAITING</td>
<td>超时等待状态，该状态不同与WAITING,他是可以在指定时间自行返回的</td>
</tr>
<tr>
<td>TERMINATED</td>
<td>终止状态，表示当前线程已经执行完毕</td>
</tr>
</tbody>
</table>`,r:{minutes:2.55,words:766},t:"线程生命周期",y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-deadlock.html",{loader:()=>o(()=>import("./java-thread-y-deadlock.html-C2cOlUzj.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 死锁的定义</h2>
<p>“死锁是指两个或两个以上的进程在执行过程中，由于竞争资源或者由于彼此通信而造成的一种阻塞的现象，若无外力作用，它们都将无法推进下去。”</p>
<p>竞争的资源可以是：锁、网络连接、通知事件，磁盘、带宽，以及一切可以被称作“资源”的东西。</p>
<h2>2. 举例</h2>
<p>如果此时有一个线程A，按照先锁a再获得锁b的顺序获得锁，而在此时又有一个线程B，按照先锁b再锁a的顺序获得锁</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403120852230.png" alt="image-20200311231729573" tabindex="0" loading="lazy"><figcaption>image-20200311231729573</figcaption></figure>`,r:{minutes:3.49,words:1048},t:"如何发现、预防、解决死锁",y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-deadlock2.html",{loader:()=>o(()=>import("./java-thread-y-deadlock2.html-DJFGm9rx.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 什么是死锁</h2>
<p>多个线程同时被阻塞，他们中的一个或者全部都在等待某个资源被释放。由于线程被无限期的阻塞，因此程序不可能正常终止</p>
<h3>1.1 案例</h3>
<p>如下图所示，线程A持有资源2，线程B持有资源 1,他们同时都想申请对方的资源，所以这两个线程就会互相等待而进入死锁状态</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403120852140.png" alt="image-20190919215922075" tabindex="0" loading="lazy"><figcaption>image-20190919215922075</figcaption></figure>`,r:{minutes:2.44,words:732},t:"死锁",y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-optimistic-lock.html",{loader:()=>o(()=>import("./java-thread-y-optimistic-lock.html-C2WF5exO.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 乐观锁和悲观锁简介</h2>
<blockquote>
<p>乐观锁对应于生活中乐观的人总是想着事情往好的方向发展，悲观锁对应于生活中悲观的人总是想着事情往坏的方向发展。这两种人各有优缺点，不能不以场景而定说一种人好于另外一种人。</p>
</blockquote>
<p><strong>悲观锁</strong></p>
<p><strong>总是假设最坏的情况</strong>，每次去拿数据的时候都认为别人会修改，所以<strong>每次再拿数据的时候都会上锁</strong>，这样别人想拿这个数据就会阻塞知道它拿到锁（<strong>共享资源每次只给一个线程使用，其他线程阻塞，用完后再把资源转让给其他线程</strong>）传统的关系型数据库里边就用到了很多这种锁机制，比如行锁，表锁等，读锁，写锁等，都是在做操作之前先上锁。Java中<code>synchronized</code>和<code>ReentrantLock</code>等独占锁就是悲观锁思想的实现。</p>`,r:{minutes:7.52,words:2257},t:"乐观锁和悲观锁",y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-spinlock.html",{loader:()=>o(()=>import("./java-thread-y-spinlock.html-rBlOE3NH.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p>自旋锁（spinlock）：是指当一个线程在<strong>获取锁的时候</strong>，如果锁已经被其它线程获取，那么该线程将循环等待，然后<strong>不断的判断锁是否能够被成功获取，直到获取到锁才会退出循环</strong>。<br>
<strong>获取锁的线程一直处于活跃状态</strong>，但是并没有执行任何有效的任务，使用这种锁会造成 busy-waiting。</p>
<h2>2. Java 如何实现自旋锁</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SpinLock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> AtomicReference</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Thread</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cas </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> AtomicReference</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Thread</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> lock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Thread</span><span style="color:#E06C75;--shiki-dark:#E06C75"> current</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Thread</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">currentThread</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 利用CAS</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        while</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">cas</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">compareAndSet</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, current)) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // DO nothing</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> unlock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Thread</span><span style="color:#E06C75;--shiki-dark:#E06C75"> current</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Thread</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">currentThread</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        cas</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">compareAndSet</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(current, </span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
</div>`,r:{minutes:3.09,words:928},t:"java自旋锁",y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-thread-communication.html",{loader:()=>o(()=>import("./java-thread-y-thread-communication.html-CpasytVq.js"),[]),meta:{d:1729494189e3,c:["Java","并发"],g:null,e:`
<h2>1. 简介</h2>
<p>线程间通信方式有两种：<strong>共享内存</strong>和<strong>消息传递。</strong></p>
<p>不同进程间线程通信等同于进程间通信，同一进程间可用共享内存实现。</p>
<h3>1.1 基于共享内存</h3>
<p>在共享内存的并发模型里，线程之间共享程序的公共状态，线程之间通过写-读内存中的公共状态来隐式进行通信，<strong>典型的共享内存通信方式就是通过共享对象进行通信</strong>。</p>
<ul>
<li>①同步</li>
<li>②while轮询的方式</li>
</ul>
<h3>1.2 基于消息传递</h3>`,r:{minutes:5.35,words:1604},t:"Java 并发 - Java线程通信方式",O:60,y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-thread-notify.html",{loader:()=>o(()=>import("./java-thread-y-thread-notify.html-m0K9l2PV.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 等待/通知机制介绍</h2>
<h3>1.1 不使用等待/通知机制（轮询）</h3>
<p>当两个线程之间存在<strong>生产者和消费者关系</strong>，也就是说<strong>第一个线程（生产者）做相应的操作然后第二个线程（消费者）感知到了变化又进行相应的操作</strong></p>
<h4>1.1.1 轮询方式案例</h4>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD"> while</span><span style="color:#E06C75;--shiki-dark:#E06C75">(value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75">desire){</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">        doSomething</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
</div>`,r:{minutes:5.7,words:1709},t:"线程通信(等待通知wait/notify机制)",y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-threadlocal-interview.html",{loader:()=>o(()=>import("./java-thread-y-threadlocal-interview.html-Bpv78JD-.js"),[]),meta:{d:1729494189e3,c:["Java","并发"],g:null,e:`
<h2>1. 讲讲 ThreadLocal 在你们项目中的用法？</h2>
<p><strong>面试官</strong>：那你跟我讲讲 ThreadLocal 在你们项目中的用法吧。</p>
<p><strong>安琪拉</strong>：举个栗子，我们项目每秒钟同时会有很多用户请求，那每个请求都带有用户信息，我们知道通常都是一个线程处理一个用户请求，我们可以把用户信息丢到Threadlocal里面，让每个线程处理自己的用户信息，线程之间互不干扰。</p>
<h2>2. Threadlocal 是干什么的？</h2>
<p>面试官：那你来给我讲讲Threadlocal是干什么的？</p>
`,r:{minutes:13.5,words:4050},t:"Java 并发 - ThreadLocal(面试场景)",O:46,y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-threadlocal-leak.html",{loader:()=>o(()=>import("./java-thread-y-threadlocal-leak.html-B6R1cDOE.js"),[]),meta:{d:1729494189e3,g:null,e:`
<p>线程池的一个线程使用完 Threadlocal 对象之后，由于线程池中的线程不会退出，线程池中的线程池存在，同时ThreadLocal变量也会存在，占用内存，造成OOM溢出。</p>
<h2>参考文章</h2>
<p><a href="https://blog.csdn.net/xlgen157387/article/details/78297568" target="_blank" rel="noopener noreferrer">多图深入分析ThreadLocal原理</a></p>
<p><a href="https://blog.csdn.net/xlgen157387/article/details/78298840" target="_blank" rel="noopener noreferrer">Java多线程编程-（9）-ThreadLocal造成OOM内存溢出案例演示与原理分析</a></p>`,r:{minutes:.45,words:136},t:"ThreadLocal使用不当导致内存泄漏",y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-threadlocal-scene.html",{loader:()=>o(()=>import("./java-thread-y-threadlocal-scene.html-B1ON3mlG.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 场景</h2>
<h3>1.1 多数据源情况</h3>
<p>我们项目中如果存在多数据源的情况。为了不影响其他线程的数据源情况。我们切换的时候。一般会使用ThreadLocal 存储当前数据源</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 数据源切换处理</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@author</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> ygn</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> DynamicDataSourceContextHolder</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> final</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Logger</span><span style="color:#E06C75;--shiki-dark:#E06C75"> log </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> LoggerFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getLogger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DynamicDataSourceContextHolder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 使用ThreadLocal维护变量，ThreadLocal为每个使用该变量的线程提供独立的变量副本，</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *  所以每一个线程都可以独立地改变自己的副本，而不会影响其它线程所对应的副本。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> final</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ThreadLocal</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> CONTEXT_HOLDER </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ThreadLocal</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 设置数据源的变量</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> setDataSourceType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> dsType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">info</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"切换到{}数据源"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, dsType);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        CONTEXT_HOLDER</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(dsType);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 获得数据源的变量</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getDataSourceType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> CONTEXT_HOLDER</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 清空数据源变量</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> clearDataSourceType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        CONTEXT_HOLDER</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">remove</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.51,words:454},t:"ThreadLocal使用场景",y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-threadlocal.html",{loader:()=>o(()=>import("./java-thread-y-threadlocal.html-EBzmhvCJ.js"),[]),meta:{d:1729494189e3,c:["Java","并发"],g:null,e:`
<h2>0. 面试题</h2>
<ul>
<li>什么是ThreadLocal? 用来解决什么问题的?</li>
<li>说说你对ThreadLocal的理解</li>
<li>ThreadLocal是如何实现线程隔离的?</li>
<li>为什么ThreadLocal会造成内存泄露? 如何解决</li>
<li>还有哪些使用ThreadLocal的应用场景?</li>
</ul>
<h2>1. 简介</h2>
<h3>1.1 线程安全解决方案之一</h3>
<blockquote>
<p>线程安全：是指广义上的共享资源访问安全性，因为线程隔离是通过副本保证本线程访问资源安全性，它不保证线程之间还存在共享关系的狭义上的安全性</p>
</blockquote>`,r:{minutes:14.74,words:4421},t:"Java 并发 - ThreadLocal详解",O:45,y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-threadlocal2.html",{loader:()=>o(()=>import("./java-thread-y-threadlocal2.html-DyDSYRwH.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 什么是ThreadLocal</h2>
<p>我们先来看下JDK 的文档介绍</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>/**</span></span>
<span class="line"><span> * This class provides thread-local variables.  These variables differ from</span></span>
<span class="line"><span> * their normal counterparts in that each thread that accesses one (via its</span></span>
<span class="line"><span> * {@code get} or {@code set} method) has its own, independently initialized</span></span>
<span class="line"><span> * copy of the variable.  {@code ThreadLocal} instances are typically private</span></span>
<span class="line"><span> * static fields in classes that wish to associate state with a thread (e.g.,</span></span>
<span class="line"><span> * a user ID or Transaction ID).</span></span>
<span class="line"><span> * </span></span>
<span class="line"><span> * &lt;p&gt;For example, the class below generates unique identifiers local to each</span></span>
<span class="line"><span> * thread.</span></span>
<span class="line"><span> * A thread's id is assigned the first time it invokes {@code ThreadId.get()}</span></span>
<span class="line"><span> * and remains unchanged on subsequent calls.</span></span>
<span class="line"><span> */</span></span></code></pre>
</div>`,r:{minutes:5.1,words:1529},t:"ThreadLocal",y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-threadpool-create.html",{loader:()=>o(()=>import("./java-thread-y-threadpool-create.html-2GPgq-uL.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 四种方式</h2>
<h3>1.1 方式一：通过 Runnable 使用线程池</h3>
<p>最基础的使用方式：无法知道执行结果</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 方式一：通过 Runnable 使用线程池</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 无阻塞表现在：线程还没有执行完，就打印了 “总结耗时：”</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> testRunnable</span><span style="color:#E06C75;--shiki-dark:#E06C75">() {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> start </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">currentTimeMillis</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> i</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">++</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            MyRunnable</span><span style="color:#E06C75;--shiki-dark:#E06C75"> myRunnable </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> MyRunnable</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            threadPoolTaskExecutor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">submit</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(myRunnable);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        logger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">info</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">format</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"总结耗时：%s"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">currentTimeMillis</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> start));</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
</div>`,r:{minutes:4.28,words:1284},t:"线程池四种创建线程的方法",y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-threadpool-data.html",{loader:()=>o(()=>import("./java-thread-y-threadpool-data.html-YQl3doC0.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 实例步骤</h2>
<ol>
<li>
<p>定义线程池</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">package</span><span style="color:#C678DD;--shiki-dark:#C678DD"> com.zszdevelop.threadpooldemo.config</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.context.annotation.Bean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.context.annotation.Configuration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.scheduling.annotation.EnableAsync</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> java.util.concurrent.ThreadPoolExecutor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Configuration</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ThreadPoolConfigure</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Bean</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ThreadPoolTaskExecutor</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> asyncThreadPoolTaskExecutor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        ThreadPoolTaskExecutor</span><span style="color:#E06C75;--shiki-dark:#E06C75"> executor</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> ThreadPoolTaskExecutor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        executor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setCorePoolSize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        executor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setMaxPoolSize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">10</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        executor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setQueueCapacity</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">50</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        executor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setKeepAliveSeconds</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">30</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        executor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setThreadNamePrefix</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"MY-Thread"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        executor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setWaitForTasksToCompleteOnShutdown</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        executor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setAwaitTerminationSeconds</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">60</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        executor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setRejectedExecutionHandler</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ThreadPoolExecutor.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">CallerRunsPolicy</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        executor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">initialize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> executor;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>定义接口</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">package</span><span style="color:#C678DD;--shiki-dark:#C678DD"> com.zszdevelop.threadpooldemo.controller</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> com.zszdevelop.threadpooldemo.service.AsyncService</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.beans.factory.annotation.Autowired</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.web.bind.annotation.GetMapping</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.web.bind.annotation.RestController</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">RestController</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> AsyncController</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Autowired</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    AsyncService</span><span style="color:#E06C75;--shiki-dark:#E06C75"> asyncService</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">GetMapping</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"/testAsync"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> testAsync</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Thread</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">currentThread</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        asyncService</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">useAsyncThreadWork</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#98C379;--shiki-dark:#98C379"> "testAsync方法执行成功..."</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>定义service</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> interface</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> AsyncService</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 测试使用异步线程池来执行工作</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> useAsyncThreadWork</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
</div></li>
<li>
<p>定义接口实现类</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">package</span><span style="color:#C678DD;--shiki-dark:#C678DD"> com.zszdevelop.threadpooldemo.service.impl</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> com.zszdevelop.threadpooldemo.service.AsyncService</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.slf4j.Logger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.slf4j.LoggerFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.beans.factory.annotation.Autowired</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.stereotype.Service</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.util.concurrent.FailureCallback</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.util.concurrent.ListenableFuture</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.util.concurrent.SuccessCallback</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> java.util.concurrent.Callable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> java.util.concurrent.ExecutionException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> java.util.concurrent.Future</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> java.util.concurrent.TimeUnit</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@author</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 作者: zhangshengzhong</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * @文件名: AsyncServiceImpl</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * @版本号:1.0</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * @创建日期: 2020/12/8 16:28</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * @描述:</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Service</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> AsyncServiceImpl</span><span style="color:#C678DD;--shiki-dark:#C678DD"> implements</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> AsyncService</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Logger</span><span style="color:#E06C75;--shiki-dark:#E06C75"> logger </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> LoggerFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getLogger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getClass</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Autowired</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    ThreadPoolTaskExecutor</span><span style="color:#E06C75;--shiki-dark:#E06C75"> threadPoolTaskExecutor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> useAsyncThreadWork</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//            方式一：通过 Runnable 使用线程池</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">        testRunnable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 方式二： 使用Callable 可以监听到回调。会阻塞。后面的语句要等直接完成后</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//            testCallable();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 方式三： threadPoolTaskExecutor.submitListenable 返回ListenableFuture 无阻塞的形式 参数：Runnable</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//           testSubmitListenableRunnable();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 方式四： threadPoolTaskExecutor.submitListenable 返回ListenableFuture 无阻塞的形式 参数：Callable</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//           testSubmitListenableCallable();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 方式一：通过 Runnable 使用线程池</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 无阻塞表现在：线程还没有执行完，就打印了 “总结耗时：”</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> testRunnable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> start</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">currentTimeMillis</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> i</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">; i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">; i++) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            MyRunnable</span><span style="color:#E06C75;--shiki-dark:#E06C75"> myRunnable</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> MyRunnable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            threadPoolTaskExecutor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">submit</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(myRunnable);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        logger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">info</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">format</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"总结耗时：%s"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">currentTimeMillis</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> start));</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 方式二： 使用Callable 可以监听到回调。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 阻塞表现在：总在最后打印 “总结耗时：”</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * Callable的Future 能接受到具体结果，也就是线程的生成的随机数</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> testCallable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> start</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">currentTimeMillis</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> i</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">; i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">; i++) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            MyCallable</span><span style="color:#E06C75;--shiki-dark:#E06C75"> myCallable</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> MyCallable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            Future</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Double</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75">future</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> threadPoolTaskExecutor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">submit</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(myCallable);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            try</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                Double</span><span style="color:#E06C75;--shiki-dark:#E06C75"> result</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> future</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                logger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">error</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Callable返回的结果为："</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> result);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            } </span><span style="color:#C678DD;--shiki-dark:#C678DD">catch</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Exception</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                e</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">printStackTrace</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        logger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">info</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">format</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"总结耗时：%s"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">currentTimeMillis</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> start));</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 方式三： threadPoolTaskExecutor.submitListenable 返回ListenableFuture 参数：Runnable</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 无阻塞表现在：线程还没有执行完，就打印了 “总结耗时：”</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * Runnable监听ListenableFuture 只能知道线程是否执行完毕，线程生成的结果（随机数无法得知）</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> testSubmitListenableRunnable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> start</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">currentTimeMillis</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> i</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">; i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">; i++) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            MyRunnable</span><span style="color:#E06C75;--shiki-dark:#E06C75"> myRunnable</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> MyRunnable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            ListenableFuture</span><span style="color:#E06C75;--shiki-dark:#E06C75"> listenableFuture</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> threadPoolTaskExecutor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">submitListenable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(myRunnable);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            listenableFuture</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">addCallback</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> SuccessCallback</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> onSuccess</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> o</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    logger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">info</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"请求成功："</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Thread</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">currentThread</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#98C379;--shiki-dark:#98C379"> "返回的object:"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> o);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            }, </span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> FailureCallback</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> onFailure</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Throwable</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> throwable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    logger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">info</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"请求失败："</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> throwable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getMessage</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            });</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        logger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">info</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">format</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"总结耗时：%s"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">currentTimeMillis</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> start));</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 方式四： threadPoolTaskExecutor.submitListenable 返回ListenableFuture 参数：Callable</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 无阻塞表现在：线程还没有执行完，就打印了 “总结耗时：”</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * Callable监听ListenableFuture 能接受到具体结果，也就是线程的生成的随机数</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> testSubmitListenableCallable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> start</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">currentTimeMillis</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> i</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">; i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">; i++) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            MyCallable</span><span style="color:#E06C75;--shiki-dark:#E06C75"> myCallable</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> MyCallable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            ListenableFuture</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Double</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75">listenableFuture</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> threadPoolTaskExecutor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">submitListenable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(myCallable);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            listenableFuture</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">addCallback</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SuccessCallback</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Double</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;() {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> onSuccess</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Double</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> result</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    logger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">info</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"请求成功："</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Thread</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">currentThread</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#98C379;--shiki-dark:#98C379"> "具体的执行结果:"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> result);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            }, </span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> FailureCallback</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> onFailure</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Throwable</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> throwable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    logger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">info</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"请求失败："</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> throwable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getMessage</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            });</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        logger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">info</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">format</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"总结耗时：%s"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">currentTimeMillis</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> start));</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> MyRunnable</span><span style="color:#C678DD;--shiki-dark:#C678DD"> implements</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Runnable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">        MyRunnable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> run</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            double</span><span style="color:#E06C75;--shiki-dark:#E06C75"> random</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Math</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">random</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 执行你要的操作</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            logger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">info</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"当前线程："</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Thread</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">currentThread</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#98C379;--shiki-dark:#98C379"> "  生成的随机数："</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> random);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> MyCallable</span><span style="color:#C678DD;--shiki-dark:#C678DD"> implements</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Callable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Double</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">        MyCallable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Double</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> call</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#C678DD;--shiki-dark:#C678DD"> throws</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Exception</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            double</span><span style="color:#E06C75;--shiki-dark:#E06C75"> random</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Math</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">random</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 执行你要的操作</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            logger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">info</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"当前线程："</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Thread</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">currentThread</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#98C379;--shiki-dark:#98C379"> "  生成的随机数："</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> random);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> random;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
</ol>`,r:{minutes:4.78,words:1433},t:"在接口中使用线程池，处理数据",y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-threadpool-example.html",{loader:()=>o(()=>import("./java-thread-y-threadpool-example.html-B7jAwIM_.js"),[]),meta:{d:1729494189e3,g:null,e:`
<p>具体使用示例</p>
<div class="language- line-numbers-mode" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>public class Test {</span></span>
<span class="line"><span>     public static void main(String[] args) {   </span></span>
<span class="line"><span>         ThreadPoolExecutor executor = new ThreadPoolExecutor(5, 10, 200, TimeUnit.MILLISECONDS,</span></span>
<span class="line"><span>                 new ArrayBlockingQueue&lt;Runnable&gt;(5));</span></span>
<span class="line"><span>          </span></span>
<span class="line"><span>         for(int i=0;i&lt;15;i++){</span></span>
<span class="line"><span>             MyTask myTask = new MyTask(i);</span></span>
<span class="line"><span>             executor.execute(myTask);</span></span>
<span class="line"><span>             System.out.println("线程池中线程数目："+executor.getPoolSize()+"，队列中等待执行的任务数目："+</span></span>
<span class="line"><span>             executor.getQueue().size()+"，已执行玩别的任务数目："+executor.getCompletedTaskCount());</span></span>
<span class="line"><span>         }</span></span>
<span class="line"><span>         executor.shutdown();</span></span>
<span class="line"><span>     }</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span> </span></span>
<span class="line"><span> </span></span>
<span class="line"><span>class MyTask implements Runnable {</span></span>
<span class="line"><span>    private int taskNum;</span></span>
<span class="line"><span>     </span></span>
<span class="line"><span>    public MyTask(int num) {</span></span>
<span class="line"><span>        this.taskNum = num;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>     </span></span>
<span class="line"><span>    @Override</span></span>
<span class="line"><span>    public void run() {</span></span>
<span class="line"><span>        System.out.println("正在执行task "+taskNum);</span></span>
<span class="line"><span>        try {</span></span>
<span class="line"><span>            Thread.currentThread().sleep(4000);</span></span>
<span class="line"><span>        } catch (InterruptedException e) {</span></span>
<span class="line"><span>            e.printStackTrace();</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>        System.out.println("task "+taskNum+"执行完毕");</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:3.04,words:911},t:"线程池使用示例",y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-threadpool-executors-create.html",{loader:()=>o(()=>import("./java-thread-y-threadpool-executors-create.html-enLjmH0l.js"),[]),meta:{d:1729494189e3,g:null,e:`
<p>Executors类中提供的几个静态方法来创建线程池：</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>Executors.newCachedThreadPool();        //创建一个缓冲池，缓冲池容量大小为Integer.MAX_VALUE</span></span>
<span class="line"><span>Executors.newSingleThreadExecutor();   //创建容量为1的缓冲池</span></span>
<span class="line"><span>Executors.newFixedThreadPool(int);    //创建固定容量大小的缓冲池</span></span></code></pre>
</div>`,r:{minutes:.87,words:261},t:"Executors创建线程池",y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-threadpool-finish.html",{loader:()=>o(()=>import("./java-thread-y-threadpool-finish.html-Dr8NuPJ3.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 背景</h2>
<p>之前有个业务需要将多份pdf转成图片，最早我们是将pdf按顺序一张张转换。但是转换时间实在太长。</p>
<ul>
<li>
<p>改进流程一：</p>
<p>将pdf转图片做成异步处理，速度是快了，但是并不知道什么时候结束。查看图片时图片都为空</p>
</li>
<li>
<p>改进流程二：</p>
<p>使用CountDownLatch监听线程池是否全部执行完成，执行完成后才返回</p>
</li>
</ul>
<h2>2.解决方案</h2>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Test1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ExecutorService</span><span style="color:#E06C75;--shiki-dark:#E06C75"> executorService </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Executors</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">newCachedThreadPool</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> CountDownLatch</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cdl </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> CountDownLatch</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">10</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> final</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Random</span><span style="color:#E06C75;--shiki-dark:#E06C75"> random </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Random</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> test</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> i</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">; i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 10</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">; i++) </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">executorService</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">execute</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> ThreadTest</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[] </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Test1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">test</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //插入数据完成后  执行修改操作</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        try</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            cdl</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">await</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD">catch</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">InterruptedException</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"它们已经插完啦.............................."</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        executorService</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">shutdown</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ThreadTest</span><span style="color:#C678DD;--shiki-dark:#C678DD"> implements</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Runnable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> run</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            //执行插入数据操作  每次插入一条</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 模拟耗时</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> time</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> random</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">nextInt</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">10000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            try</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                Thread</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">sleep</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(time);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            } </span><span style="color:#C678DD;--shiki-dark:#C678DD">catch</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">InterruptedException</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Thread</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">currentThread</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#98C379;--shiki-dark:#98C379"> "执行完了，耗时："</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> time </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">/</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1000</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#98C379;--shiki-dark:#98C379"> "秒"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            cdl</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">countDown</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.11,words:334},t:"线程池执行完所有任务后再执行主线程方案",y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-threadpool-handler.html",{loader:()=>o(()=>import("./java-thread-y-threadpool-handler.html-COw1VBiR.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 处理流程</h2>
<p>创建线程池需要使用ThreadPoolExecutor 类，他的构造函数参数如下</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> ThreadPoolExecutor</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> corePoolSize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    //核心线程的数量</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                          int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> maximumPoolSize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    //最大线程数量</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                          long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> keepAliveTime</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    //超出核心线程数量以外的线程空余存活时间</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                          TimeUnit</span><span style="color:#E06C75;--shiki-dark:#E06C75"> unit</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    //存活时间的单位</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                          BlockingQueue</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">Runnable</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> workQueue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    //保存待执行任务的队列</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                          ThreadFactory</span><span style="color:#E06C75;--shiki-dark:#E06C75"> threadFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    //创建新线程使用的工厂</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                          RejectedExecutionHandler</span><span style="color:#E06C75;--shiki-dark:#E06C75"> handler </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 当任务无法执行时的处理器</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                          ) {</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">...</span><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
</div>`,r:{minutes:3.02,words:907},t:"线程池的处理流程",y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-threadpool-principle.html",{loader:()=>o(()=>import("./java-thread-y-threadpool-principle.html-BIjL7byt.js"),[]),meta:{d:1729494189e3,g:null,e:`
<p>在上一节我们从宏观上介绍了ThreadPoolExecutor，下面我们来深入解析一下线程池的具体实现原理，将从下面几个方面讲解：</p>
<p><strong>1.线程池状态</strong></p>
<p><strong>2.任务的执行</strong></p>
<p><strong>3.线程池中的线程初始化</strong></p>
<p><strong>4.任务缓存队列及排队策略</strong></p>
<p><strong>5.任务拒绝策略</strong></p>
<p><strong>6.线程池的关闭</strong></p>
<p><strong>7.线程池容量的动态调整</strong></p>`,r:{minutes:9.15,words:2744},t:"线程池的具体实现原理",y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-threadpool-size.html",{loader:()=>o(()=>import("./java-thread-y-threadpool-size.html-D9KIe_w3.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 理论背景</h2>
<p>一般需要根据任务的类型来配置线程池大小：</p>
<ul>
<li>如果是CPU密集型任务，<strong>就需要尽量压榨CPU</strong>，应配置尽可能小的线程，参考值可以设为 <em>N</em>CPU+1</li>
<li>如果是IO密集型任务，<strong>因为IO操作不占用CPU</strong>，不要让CPU闲下来，应加大线程数量,参考值可以设置为2NCPU+1</li>
</ul>
<p>当然，这只是一个参考值，具体的设置还需要根据实际情况进行调整，比如可以先将线程池大小设置为参考值，再观察任务运行情况和系统负载、资源利用率来进行适当调整。</p>`,r:{minutes:3.48,words:1045},t:"如何合理配置线程池的大小",y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-threadpool-task-executor.html",{loader:()=>o(()=>import("./java-thread-y-threadpool-task-executor.html-DZSS1xGV.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 区别</h2>
<ol>
<li>所属包不同：
<ul>
<li>ThreadPoolTaskExecutor 在 spring core包中</li>
<li>ThreadPoolExecutor 是JDK中的JUC</li>
</ul>
</li>
<li><strong>ThreadPoolTaskExecutor 是对ThreadPoolExecutor进行了封装处理</strong></li>
<li>相比 ThreadPoolExecutor，ThreadPoolTaskExecutor 增加了 submitListenable 方法，该方法返回 ListenableFuture 接口对象。
<ul>
<li>ListenableFuture 接口对象，增加了线程执行完毕后成功和失败的回调方法。从而避免了 Future 需要以阻塞的方式调用 get，然后再执行成功和失败的方法。</li>
</ul>
</li>
</ol>`,r:{minutes:1.1,words:329},t:"ThreadPoolTaskExecutor和ThreadPoolExecutor有何区别?",y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-threadpool.html",{loader:()=>o(()=>import("./java-thread-y-threadpool.html-C2-Gvv27.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 为什么要使用线程池</h2>
<ul>
<li><strong>降低资源消耗</strong>：通过重复利用已创建的线程降低线程创建和销毁造成的消耗。</li>
<li><strong>提高响应速度</strong>：当任务到达时，任务可以不需要的等到线程创建就能立即执行。</li>
<li><strong>提高线程的可管理行性</strong>：线程是稀缺资源，如果无限制的创建，不仅会消耗系统资源，还会降低系统的稳定性，使用线程池可以进行统一的分配，调优和监控。</li>
</ul>
<h2>2. 实现Runnable接口和Callable接口的区别</h2>
<p>两者的区别在于 Runnable 接口不会返回结果但是 Callable 接口可以返回结果。</p>`,r:{minutes:3.03,words:910},t:"线程池",y:"a"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-threadpoolexecutor.html",{loader:()=>o(()=>import("./java-thread-y-threadpoolexecutor.html-DOV_8wAB.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. ThreadPoolExecutor类构造器</h2>
<p>java.uitl.concurrent.ThreadPoolExecutor类是线程池中最核心的一个类，因此如果要透彻了解Java中线程池，就需要先了解这个类。下面我们来看一ThreadPoolExecutor类的具体实现源码</p>
<p>在ThreadPoolExecutor类中提供了四个构造方法：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403120857865.png" alt="image-20190916211541288" tabindex="0" loading="lazy"><figcaption>image-20190916211541288</figcaption></figure>`,r:{minutes:5.46,words:1639},t:"ThreadPoolExecutor类",y:"a"}}],["/posts/Java/Java%E7%BC%96%E8%AF%91/java-command-javac.html",{loader:()=>o(()=>import("./java-command-javac.html-DpQ2KHpB.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p>IDE或maven等工具已将Java程序的编译代劳。但工具越高级，隐藏的细节就越多，一旦出现问题就懵逼，归根到底还是基础概念不牢靠。返璞归真，回到最原始的地方<code>javac</code>，会让问题豁然开朗。下面就一步一步演示用<code>javac</code>和<code>java</code>徒手编译运行一个常规工程。</p>
<h2>2. Hello World练个手</h2>
<p>来个简单的先，我们祭出祖传的HelloWorld程序。（感兴趣的话，可以试一试徒手是否写的出来~）</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> HelloWorld</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[] </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">){</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Hello, World!"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
</div>`,r:{minutes:6.39,words:1916},t:"Java编译",y:"a"}}],["/posts/Java/Java%E7%BC%96%E8%AF%91/java-command-javap.html",{loader:()=>o(()=>import("./java-command-javap.html-Ckj292GB.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p>javap是jdk自带的一个工具，可以对代码 反编译 ，也可以查看java编译器生成的字节码。</p>
<p><strong>javap命令分解一个class文件</strong>，它根据options来决定到底输出什么。如果没有使用options,那么javap将会输出包，类里的protected和public域以及类里的所有方法。<code>javap</code>将会把它们输出在标准输出上。</p>
<blockquote>
<p>一般情况下，很少有人使用javap对class文件进行反编译，因为有很多成熟的反编译工具可以使用，比如jad。但是，javap还可以查看java编译器为我们生成的字节码。通过它，可以对照源代码和字节码，从而了解很多编译器内部的工作。</p>
</blockquote>`,r:{minutes:2.43,words:728},t:"Java反编译命令-javap",y:"a"}}],["/posts/Java/Java%E7%BC%96%E8%AF%91/java-command-overview.html",{loader:()=>o(()=>import("./java-command-overview.html-DmAHZYZN.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p><code>java</code> 命令用于启动 java 应用：它首先会启动 java 运行时环境（JRE），然后加载指定的类，调用类的 <code>main()</code> 方法。<code>main()</code> 方法必须定义为 <code>public</code> 和 <code>static</code> 的，并且不返回任何值，参数是 String 类型的数组，该方法的形式如下：</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>public static void main(String[] args)</span></span></code></pre>
</div>`,r:{minutes:14.67,words:4400},t:"Java命令参数",y:"a"}}],["/posts/Java/Java%E9%9B%86%E5%90%88/",{loader:()=>o(()=>import("./index.html-DY9-Llb1.js"),[]),meta:{d:17204832e5,l:"2024年7月9日",e:`<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>这里放置Java集合相关的内容</p>
</div>
<hr>
`,r:{minutes:.11,words:32},t:"Java集合",O:2,y:"p"}}],["/posts/Java/Java%E9%9B%86%E5%90%88/arraylist-expansion.html",{loader:()=>o(()=>import("./arraylist-expansion.html-CIAfFVqJ.js"),[]),meta:{d:1729494189e3,c:["Java"],g:null,e:`
<h2>1.如何实现扩容</h2>
<p>底层主要是这三个私有方法配合实现<code>grow()</code>,<code>grow(int minCapacity)</code>,<code>newCapacity(int minCapacity)</code>扩容。<strong>最终是调用了<code>Arrays.copyOf</code>方法来进行扩充数组容量的</strong>。默认情况下，新的容量是<strong>原容量的1.5倍</strong>。</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 扩容一个</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Object</span><span style="color:#E06C75;--shiki-dark:#E06C75">[] </span><span style="color:#61AFEF;--shiki-dark:#61AFEF">grow</span><span style="color:#E06C75;--shiki-dark:#E06C75">() {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">	return</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> grow</span><span style="color:#E06C75;--shiki-dark:#E06C75">(size </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 保证扩容到期望容量minCapacity及以上</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Object</span><span style="color:#E06C75;--shiki-dark:#E06C75">[] </span><span style="color:#61AFEF;--shiki-dark:#61AFEF">grow</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> minCapacity) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> elementData </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Arrays</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">copyOf</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(elementData,</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">                                       newCapacity</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(minCapacity));</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 根据期望容量minCapacity计算实际需要扩容的容量</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> int</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> newCapacity</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> minCapacity) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // overflow-conscious code</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> oldCapacity </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> elementData</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">length</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 得到旧容量</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> newCapacity </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75"> oldCapacity </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (oldCapacity </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;&gt;</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 设置新容量为旧容量的1.5倍</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (newCapacity </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E06C75;--shiki-dark:#E06C75"> minCapacity </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#E06C75;--shiki-dark:#E06C75">) { </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 如果新容量仍然小于期望容量</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (elementData </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#E06C75;--shiki-dark:#E06C75"> DEFAULTCAPACITY_EMPTY_ELEMENTDATA) </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 如果是使用的默认容量</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Math</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">max</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(DEFAULT_CAPACITY, minCapacity);</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 取默认容量和期望容量较大值返回</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (minCapacity </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#E06C75;--shiki-dark:#E06C75">) </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// overflow // 检查期望容量是否越界（int 的范围）</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            throw</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> OutOfMemoryError</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> minCapacity</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 返回期望容量</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 如果新容量大于期望容量，判断一下新容量是否越界</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (newCapacity </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> MAX_ARRAY_SIZE</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> &lt;=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        ?</span><span style="color:#E06C75;--shiki-dark:#E06C75"> newCapacity</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        :</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> hugeCapacity</span><span style="color:#E06C75;--shiki-dark:#E06C75">(minCapacity)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.48,words:443},t:"ArrayList 的扩容机制",O:930,y:"a"}}],["/posts/Java/Java%E9%9B%86%E5%90%88/comparable-comparator.html",{loader:()=>o(()=>import("./comparable-comparator.html-eFqLZLF5.js"),[]),meta:{d:1729494189e3,c:["Java"],g:null,e:`
<ul>
<li>Comparable 接口实际上是出自java.lang包，他有一个compareTp(Object obj )方法用来排序</li>
<li>comparator 接口实际上是出自java.util 包，他有一个compare（object obj1,object obj2）方法用来排序</li>
</ul>
<p>一般我们需要对一个集合使用自定义排序时，我们就要重写compareTo() 方法或者compare() 方法，</p>
<ul>
<li>当我们需要对某一个集合实现两种排序，比如一个song对象中的歌名和歌手名分别采用一种排序方式的话，我们可以重写compareTo（）方法和使用自制的Comparator方法或者两个Comparator来实现歌名排序和歌名排序，</li>
<li>第二种代表我们只能使用两个参数版的Collections.sort()</li>
</ul>`,r:{minutes:1.84,words:551},t:"Comparable和Comparator",O:140,y:"a"}}],["/posts/Java/Java%E9%9B%86%E5%90%88/day01-%E9%9B%86%E5%90%8801.html",{loader:()=>o(()=>import("./day01-集合01.html-CBiO6osC.js"),[]),meta:{d:1729494189e3,g:["Java","学习","集合"],e:`
<h2>1.Collection集合</h2>
<h3>1.1数组和集合的区别【理解】</h3>
<ul>
<li>
<p>相同点</p>
<p>都是容器,可以存储多个数据</p>
</li>
<li>
<p>不同点</p>
<ul>
<li>
<p>数组的长度是不可变的,集合的长度是可变的</p>
</li>
<li>
<p>数组可以存基本数据类型和引用数据类型</p>
<p>集合只能存引用数据类型,如果要存基本数据类型,需要存对应的包装类</p>
</li>
</ul>
</li>
</ul>
<h3>1.2集合类体系结构【理解】</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403120858529.png" alt="01_集合类体系结构图" tabindex="0" loading="lazy"><figcaption>01_集合类体系结构图</figcaption></figure>`,r:{minutes:6.84,words:2053},t:"Collection",y:"a"}}],["/posts/Java/Java%E9%9B%86%E5%90%88/day02-%E9%9B%86%E5%90%8802.html",{loader:()=>o(()=>import("./day02-集合02.html-DoVwCPH-.js"),[]),meta:{d:1729494189e3,g:["Java","学习","集合"],e:`
<h2>1.Set集合</h2>
<h3>1.1Set集合概述和特点【应用】</h3>
<ul>
<li>不可以存储重复元素</li>
<li>没有索引,不能使用普通for循环遍历</li>
</ul>
<h3>1.2Set集合的使用【应用】</h3>
<p>存储字符串并遍历</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> MySet1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[] </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      	//创建集合对象</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75">set</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> TreeSet</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      	//添加元素</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"ccc"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"aaa"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"aaa"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"bbb"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//        for (int i = 0; i &lt; set.size(); i++) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//            //Set集合是没有索引的，所以不能使用通过索引获取元素的方法</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      	//遍历集合</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Iterator</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75">it</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">iterator</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        while</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">it</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">hasNext</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()){</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> s</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> it</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">next</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(s);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"-----------------------------------"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> s</span><span style="color:#C678DD;--shiki-dark:#C678DD"> :</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> set) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(s);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:11.69,words:3506},t:"Set集合",y:"a"}}],["/posts/Java/Java%E9%9B%86%E5%90%88/day03-%E9%9B%86%E5%90%8803.html",{loader:()=>o(()=>import("./day03-集合03.html-e6vjzstq.js"),[]),meta:{d:1729494189e3,e:`
<h2>1.Map集合</h2>
<h3>1.1Map集合概述和特点【理解】</h3>
<ul>
<li>
<p>Map集合概述</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">interface</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">K</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">V</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">  K：键的类型；V：值的类型</span></span></code></pre>
</div></li>
<li>
<p>Map集合的特点</p>
<ul>
<li>双列集合,一个键对应一个值</li>
<li>键不可以重复,值可以重复</li>
</ul>
</li>
<li>
<p>Map集合的基本使用</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> MapDemo01</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[] </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //创建集合对象</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75">map</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> HashMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //V put(K key, V value) 将指定的值与该映射中的指定键相关联</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"itheima001"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">"林青霞"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"itheima002"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">"张曼玉"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"itheima003"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">"王祖贤"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"itheima003"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">"柳岩"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //输出集合对象</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(map);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
</ul>`,r:{minutes:16.98,words:5095},t:"Map集合",y:"a"}}],["/posts/Java/Java%E9%9B%86%E5%90%88/hashmap-problem.html",{loader:()=>o(()=>import("./hashmap-problem.html-BvIvY_9X.js"),[]),meta:{d:1729494189e3,c:["Java"],g:null,e:`
<h2>1. HashMap中相关概念</h2>
<ul>
<li>
<p>size：</p>
<p>表示HashMap中存放KV数量（为链表和树中的KV的总和）</p>
</li>
<li>
<p>capacity（容量）</p>
<p>capacity就是指HashMap中桶的数量，默认值为16，<strong>容量都是2的幂</strong></p>
</li>
<li>
<p>loadFactor（装载因子）</p>
<p>装载因子用来衡量HashMap满的程度，loadFactor的默认值为0.75f。计算HashMap的实时装载因子的方法为：size/capacity，而不是占用桶的数量去除以capacity。</p>
</li>
<li>
<p>threshold：</p>
<p>表示当HashMap的size大于threshold时会执行resize操作。</p>
</li>
</ul>`,r:{minutes:1.35,words:404},t:"HashMap相关问题",O:920,y:"a"}}],["/posts/Java/Java%E9%9B%86%E5%90%88/java-collection-ArrayList.html",{loader:()=>o(()=>import("./java-collection-ArrayList.html-BHCQzpkT.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 概述</h2>
<p><em>ArrayList</em>实现了<em>List</em>接口，是顺序容器，即元素存放的数据与放进去的顺序相同，允许放入<code>null</code>元素，底层通过<strong>数组实现</strong>。除该类未实现同步外，其余跟<em>Vector</em>大致相同。每个<em>ArrayList</em>都有一个容量(capacity)，表示底层数组的实际大小(默认capacity=10)，容器内存储元素的个数不能多于当前容量。当向容器中添加元素时，如果容量不足，容器会自动增大底层数组的大小。前面已经提过，Java泛型只是编译器提供的语法糖，所以这里的数组是一个Object数组，以便能够容纳任何类型的对象。</p>`,r:{minutes:8.69,words:2606},t:"Collection - ArrayList 源码解析",O:20,y:"a"}}],["/posts/Java/Java%E9%9B%86%E5%90%88/java-collection-LinkedList.html",{loader:()=>o(()=>import("./java-collection-LinkedList.html-1h7oq-fm.js"),[]),meta:{d:1729494189e3,c:["Java"],g:null,e:`
<h2>1. 概述</h2>
<p><em>LinkedList</em>同时实现了<em>List</em>接口和<em>Deque</em>接口，也就是说它既可以看作一个顺序容器，又可以看作一个队列(<em>Queue</em>)，同时又可以看作一个栈(<em>Stack</em>)。这样看来，<em>LinkedList</em>简直就是个全能冠军。当你需要使用栈或者队列时，可以考虑使用<em>LinkedList</em>，一方面是因为Java官方已经声明不建议使用<em>Stack</em>类，更遗憾的是，Java里根本没有一个叫做<em>Queue</em>的类(它是个接口名字)。关于栈或队列，现在的首选是<em>ArrayDeque</em>，它有着比<em>LinkedList</em>(当作栈或队列使用时)有着更好的性能。</p>`,r:{minutes:12.66,words:3799},t:"Collection - LinkedList源码解析",O:30,y:"a"}}],["/posts/Java/Java%E9%9B%86%E5%90%88/java-collection-Queue_Stack.html",{loader:()=>o(()=>import("./java-collection-Queue_Stack.html-DD84-ii4.js"),[]),meta:{d:1729494189e3,c:["Java"],g:null,e:`
<h2>1. Stack &amp; Queue概述</h2>
<p>Java里有一个叫做<em>Stack</em>的类，却没有叫做<em>Queue</em>的类(它是个接口名字)。当需要使用栈时，Java已不推荐使用<em>Stack</em>，而是推荐使用更高效的<em>ArrayDeque</em>；既然<em>Queue</em>只是一个接口，当需要使用队列时也就首选<em>ArrayDeque</em>了(次选是<em>LinkedList</em>)。</p>
<h2>2. Queue</h2>
<p><em>Queue</em>接口继承自Collection接口，除了最基本的Collection的方法之外，它还支持额外的<em>insertion</em>, <em>extraction</em>和<em>inspection</em>操作。这里有两组格式，共6个方法，一组是抛出异常的实现；另外一组是返回值的实现(没有则返回null)。</p>`,r:{minutes:7.09,words:2127},t:"Collection - Stack & Queue 源码解析",O:50,y:"a"}}],["/posts/Java/Java%E9%9B%86%E5%90%88/java-collection-overview.html",{loader:()=>o(()=>import("./java-collection-overview.html-evA08ZPf.js"),[]),meta:{d:1729494189e3,c:["Java"],g:null,e:`
<blockquote>
<p>本文主要介绍JDK中Collection和Map相关知识体系，后续章节将对主要对类进行源码解读。</p>
</blockquote>
<h2>1. 知识体系结构</h2>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403120914766.png" alt="java_collections_overview" tabindex="0" loading="lazy"><figcaption>java_collections_overview</figcaption></figure>`,r:{minutes:2.36,words:709},t:"Collection 类关系图",O:10,y:"a"}}],["/posts/Java/Java%E9%9B%86%E5%90%88/java-map-HashMap_HashSet.html",{loader:()=>o(()=>import("./java-map-HashMap_HashSet.html-DukZhqu_.js"),[]),meta:{d:1729494189e3,c:["Java"],g:null,e:`
<h2>1. Java7 HashMap</h2>
<h3>1.1 概述</h3>
<p>之所以把<em>HashSet</em>和<em>HashMap</em>放在一起讲解，是因为二者在Java里有着相同的实现，前者仅仅是对后者做了一层包装，也就是说<em>HashSet</em>里面有一个<em>HashMap</em>(适配器模式)。因此本文将重点分析<em>HashMap</em>。</p>
<p><em>HashMap</em>实现了<em>Map</em>接口，即允许放入<code>key</code>为<code>null</code>的元素，也允许插入<code>value</code>为<code>null</code>的元素；除该类未实现同步外，其余跟<code>Hashtable</code>大致相同；跟<em>TreeMap</em>不同，该容器不保证元素顺序，根据需要该容器可能会对元素重新哈希，元素的顺序也会被重新打散，因此不同时间迭代同一个<em>HashMap</em>的顺序可能会不同。 根据对冲突的处理方式不同，哈希表有两种实现方式，一种开放地址方式(Open addressing)，另一种是冲突链表方式(Separate chaining with linked lists)。<strong>Java7 *HashMap*采用的是冲突链表方式</strong>。</p>`,r:{minutes:10.32,words:3096},t:"Map - HashSet & HashMap 源码解析",O:110,y:"a"}}],["/posts/Java/Java%E9%9B%86%E5%90%88/java-map-HashMap-interview.html",{loader:()=>o(()=>import("./java-map-HashMap-interview.html-BLRSbmdd.js"),[]),meta:{d:1729494189e3,c:["Java"],g:null,e:`
<h2>0. 前言</h2>
<p>HashMap 应该算是 Java 后端工程师面试的必问题，因为其中的知识点太多，很适合用来考察面试者的 Java 基础。</p>
<h2>1. 面试场景还原</h2>
<p>面试官: 看你简历上写熟悉 Java 集合，HashMap 用过的吧？</p>
<p>安琪拉: 用过的。(还是熟悉的味道)</p>
<h3>1.1 HashMap 的内部数据结构</h3>
<p>面试官: 那你跟我讲讲 HashMap 的内部数据结构？</p>
<p>安琪拉: 目前我用的是 JDK1.8 版本的，内部使用数组 + 链表红黑树；</p>
<p>安琪拉: 方便我给您画个数据结构图吧：</p>`,r:{minutes:12.59,words:3776},t:"Map - HashMap（面试场景切入）",O:111,y:"a"}}],["/posts/Java/Java%E9%9B%86%E5%90%88/java-map-TreeMap_TreeSet.html",{loader:()=>o(()=>import("./java-map-TreeMap_TreeSet.html-Dpz4M8Tw.js"),[]),meta:{d:1729494189e3,c:["Java"],g:null,e:`
<h2>1. 总体介绍</h2>
<p>之所以把<em>TreeSet</em>和<em>TreeMap</em>放在一起讲解，是因为二者在Java里有着相同的实现，前者仅仅是对后者做了一层包装，也就是说<strong><em>TreeSet*里面有一个*TreeMap</em>(适配器模式)</strong>。因此本文将重点分析<em>TreeMap</em>。</p>
<p>Java <em>TreeMap</em>实现了<em>SortedMap</em>接口，也就是说会按照<code>key</code>的大小顺序对<em>Map</em>中的元素进行排序，<code>key</code>大小的评判可以通过其本身的自然顺序(natural ordering)，也可以通过构造时传入的比较器(Comparator)。</p>`,r:{minutes:11.13,words:3340},t:"Map - TreeSet & TreeMap 源码解析",O:130,y:"a"}}],["/posts/Web/frontend-base/",{loader:()=>o(()=>import("./index.html-Ben4tl8K.js"),[]),meta:{d:17152128e5,l:"2024年5月9日",e:`<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>这里放置前端基础相关的内容</p>
</div>
<hr>
`,r:{minutes:.12,words:36},t:"前端基础",i:"html",O:1,y:"p"}}],["/posts/Web/frontend-base/fe-download.html",{loader:()=>o(()=>import("./fe-download.html-B59AvE-l.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>项目中经常需要用到下载文件，如导出用户信息，下载一些文件等。我们在vue中如何实现呢？主要有如下两种方案</p>
<ul>
<li>使用Blob对象，构造a标签</li>
<li>使用封装好的<strong>js-file-download</strong></li>
</ul>
<blockquote>
<p>这两种方法下载的文件都<strong>不会乱码</strong>，但是 <strong>不管使用哪种方法，发送请求时都要设置 responseType</strong></p>
</blockquote>
<h2>2. 方案一：使用Blob对象，构造a标签</h2>`,r:{minutes:3.64,words:1093},t:"前端js/vue下载后台传过来的流文件",y:"a"}}],["/posts/Web/frontend-base/fe-editor-config.html",{loader:()=>o(()=>import("./fe-editor-config.html-ff_zVybe.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 背景</h2>
<p>团队中有多人进行项目开发时，每个人可能喜欢的编辑器不同，有人喜欢webstrom、有人用VsCode、还有人用sublime。</p>
<p>我们无法强迫开发者使用某种开发工具，那么我们如何让开发者都遵循统一的代码规范呢？</p>
<p>这时候我们就需要editorConfig了，<strong>在editorConfig里的配置的代码规范优先级是高于编辑器默认的代码格式化规则</strong>。</p>
<h2>2. editorConfig 简介</h2>
<p>editorConfig不是什么软件，而是一个名称为.editorconfig的自定义文件。该文件用来定义项目的编码规范，编辑器的行为会与.editorconfig 文件中定义的一致，并且<strong>其优先级比编辑器自身的设置要高</strong></p>`,r:{minutes:5.05,words:1514},t:"统一代码风格工具editorConfig",y:"a"}}],["/posts/Web/frontend-base/fe-font-size-line-bottom.html",{loader:()=>o(()=>import("./fe-font-size-line-bottom.html-6hVJCxwc.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 背景</h2>
<p>有个需求是前端需要展示￥158.8，为了凸显金额，所以158.8 的字体要大，￥的字体要小。原本挺简单的需求，却被我玩坏了</p>
<h3>1.1 问题原因</h3>
<p>虽然只是展示两个文字，但我在选择布局的时候。却选择了flex+div的形式。导致我陷在里面一直无法实现此功能。哪怕是设置为底部对齐和baseline</p>
<ul>
<li>
<p>align-items: flex-end</p>
<ul>
<li>
<p>没有一个能对齐的</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410131242179.png" alt="image-20220403233950269" tabindex="0" loading="lazy"><figcaption>image-20220403233950269</figcaption></figure>
</li>
</ul>
</li>
<li>
<p>align-items: baseline;</p>
<ul>
<li>符号和数字对齐了,中文还差点意思</li>
</ul>
</li>
</ul>`,r:{minutes:1.83,words:548},t:"不同font-size的文字底部在一条线上",y:"a"}}],["/posts/Web/frontend-base/fe-gzip.html",{loader:()=>o(()=>import("./fe-gzip.html-DnOxvn6a.js"),[]),meta:{d:1729494189e3,e:`
<p>当前打包出来的dist 是13.6M</p>
<p>使用gzip压缩之后变成15.8M,在原有的基础上加上了gzip</p>
<h2>1. 简介</h2>
<p>gzip 压缩是一种http请求优化方式，通过减少文件体积来提高加载速度。html、js、css文件甚至json数据都可以用它来压缩，可以减少60%以上的体积</p>
<h2>2. 压缩配置</h2>
<h3>2.1 安装 compression webpack plugin 插件</h3>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>npm install --save-dev compression-webpack-plugin</span></span></code></pre>
</div>`,r:{minutes:.87,words:262},t:"首页优化之-gzip压缩",y:"a"}}],["/posts/Web/frontend-base/fe-iframe.html",{loader:()=>o(()=>import("./fe-iframe.html-G2GmHKTI.js"),[]),meta:{d:1729494189e3,e:`
<h2>1.简介</h2>
<p>在页面嵌套iframe标签，指定src就可以展示一个外部的url</p>
<div class="language-html" data-ext="html" data-title="html"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">iframe</span><span style="color:#D19A66;--shiki-dark:#D19A66"> src</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"www.baidu.com"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">iframe</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
</div>`,r:{minutes:.7,words:210},t:"iframe",y:"a"}}],["/posts/Web/frontend-base/fe-js-export.html",{loader:()=>o(()=>import("./fe-js-export.html-C3lP3Nw8.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 前言</h2>
<p>js导入导出有多种方式，新手常常被绕得晕头转向</p>
<p>它们的使用范围</p>
<ul>
<li>
<p><code>require</code>: node 支持的引入</p>
</li>
<li>
<p><code>module.exports / exports</code>: 只有 node 支持的导出</p>
</li>
<li>
<p><code>export / import</code> : 只有es6 支持的导出引入\`</p>
</li>
</ul>
<blockquote>
<p>我们大部分在vue中使用的是es6 <code>export / import</code> 的导入导出，</p>
<p>如导出api:</p>
<p>​	let api{</p>
<p>​		// 网络请求</p>
<p>​	}</p>
<p>export default api;</p>
<p>导入：</p>
<p>import api from '../api/myapi';</p>
</blockquote>`,r:{minutes:3.17,words:952},t:"js导出：exports、module.exports 和 export、export default",y:"a"}}],["/posts/Web/frontend-base/fe-npmrun-postcss.html",{loader:()=>o(()=>import("./fe-npmrun-postcss.html-BrDa9u9u.js"),[]),meta:{d:1729494189e3,e:`
<h2>1.  背景</h2>
<p>新拉下来的项目，启动项目 npm run dev 的时候就报错：</p>
<div class="language-javascript" data-ext="javascript" data-title="javascript"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">Error</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#E06C75;--shiki-dark:#E06C75">PostCSS</span><span style="color:#E06C75;--shiki-dark:#E06C75"> received</span><span style="color:#D19A66;--shiki-dark:#D19A66"> undefined</span><span style="color:#E06C75;--shiki-dark:#E06C75"> instead</span><span style="color:#C678DD;--shiki-dark:#C678DD"> of</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> CSS</span><span style="color:#E06C75;--shiki-dark:#E06C75"> string</span></span></code></pre>
</div>`,r:{minutes:.45,words:135},t:"npm 运行项目时 Error: PostCSS received undefined instead of CSS string",y:"a"}}],["/posts/Web/frontend-base/fe-vue-route-lazy-loading.html",{loader:()=>o(()=>import("./fe-vue-route-lazy-loading.html-DFvDXbvx.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 背景</h2>
<p>使用路由懒加载以后 webpack 打包可以根据页面划分来生成文件，根据路由的不同来加载文件，解决了首页一次性加载文件过大导致打开过慢的问题。</p>
<h2>2. 优化操作</h2>
<h3>2.1 常规引入页面</h3>
<div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//常规引入页面</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E06C75;--shiki-dark:#E06C75"> Home</span><span style="color:#C678DD;--shiki-dark:#C678DD"> from</span><span style="color:#98C379;--shiki-dark:#98C379"> './views/Home.vue'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">const</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> routes</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> [</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    { </span><span style="color:#E06C75;--shiki-dark:#E06C75">path</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">'/'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E06C75;--shiki-dark:#E06C75">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">'home'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E06C75;--shiki-dark:#E06C75">component</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#E06C75;--shiki-dark:#E06C75">Home</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E06C75;--shiki-dark:#E06C75">meta</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: { </span><span style="color:#E06C75;--shiki-dark:#E06C75">title</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">'Home'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> } },</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">];</span></span></code></pre>
</div>`,r:{minutes:1.58,words:475},t:"首屏优化之-vue路由懒加载和使用懒加载prefetch问题",y:"a"}}],["/posts/Web/frontend-base/npm-manage.html",{loader:()=>o(()=>import("./npm-manage.html-BvaRv-kQ.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<h2>2. 设置源</h2>
<h3>2.1 查看源</h3>
<div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">//查看源，可以看到设置过的所有的源</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">npm</span><span style="color:#98C379;--shiki-dark:#98C379"> config</span><span style="color:#98C379;--shiki-dark:#98C379"> get</span><span style="color:#98C379;--shiki-dark:#98C379"> registry</span></span></code></pre>
</div>`,r:{minutes:1.03,words:310},t:"npm源管理",y:"a"}}],["/posts/Web/frontend-base/vue-adapter.html",{loader:()=>o(()=>import("./vue-adapter.html-kQK0bYTa.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>vue项目移动端、pc端适配方案</p>
<ul>
<li>lib-flexible 根据屏幕宽度，自动设置html的font-size</li>
<li>postcss-px2rem 自动将px单位转换成rem</li>
</ul>
<h2>2. 基础集成使用</h2>
<h3>2.1 安装依赖</h3>
<div class="language-sh" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">npm</span><span style="color:#98C379;--shiki-dark:#98C379"> install</span><span style="color:#98C379;--shiki-dark:#98C379"> px2rem-loader</span><span style="color:#D19A66;--shiki-dark:#D19A66"> --save-dev</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">npm</span><span style="color:#98C379;--shiki-dark:#98C379"> install</span><span style="color:#98C379;--shiki-dark:#98C379"> lib-flexible</span><span style="color:#D19A66;--shiki-dark:#D19A66"> --save</span></span></code></pre>
</div>`,r:{minutes:2.03,words:610},t:"Vue移动端和pc端适配方案",y:"a"}}],["/posts/Web/frontend-css/",{loader:()=>o(()=>import("./index.html-C71WtUYY.js"),[]),meta:{d:17152992e5,l:"2024年5月10日",e:`<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>这里放置css相关的内容</p>
</div>
<hr>
`,r:{minutes:.1,words:30},t:"CSS",i:"css",O:2,y:"p"}}],["/posts/Web/frontend-css/css-attr-priority.html",{loader:()=>o(()=>import("./css-attr-priority.html-8QvqVz_H.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 总结</h2>
<ol>
<li><strong>常用选择器权重优先级：!important &gt; id &gt; class &gt; tag</strong></li>
<li>!important可以提升样式优先级，但不建议使用。如果!important被用于一个简写的样式属性，那么这条简写的样式属性所代表的子属性都会被应用上!important。 例如：<em>background: blue !important;</em></li>
<li>如果两条样式都使用!important，则权重值高的优先级更高</li>
<li>在css样式表中，同一个CSS样式你写了两次，后面的会覆盖前面的</li>
<li>样式指向同一元素，权重规则生效，权重大的被应用</li>
<li>样式指向同一元素，权重规则生效，权重相同时，就近原则生效，后面定义的被应用</li>
<li>样式不指向同一元素时，权重规则失效，就近原则生效，离目标元素最近的样式被应用</li>
</ol>`,r:{minutes:1.61,words:483},t:"css样式权重和优先级",y:"a"}}],["/posts/Web/frontend-css/css-backgroud.html",{loader:()=>o(()=>import("./css-backgroud.html-BDOqQPn_.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 背景图设置</h2>
<div class="language-css" data-ext="css" data-title="css"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    body</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            background-image: </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">url</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">bg.jpg</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            background-size: </span><span style="color:#D19A66;--shiki-dark:#D19A66">100</span><span style="color:#E06C75;--shiki-dark:#E06C75">%</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 100</span><span style="color:#E06C75;--shiki-dark:#E06C75">%</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            background-repeat: </span><span style="color:#D19A66;--shiki-dark:#D19A66">no-repeat</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            background-attachment: </span><span style="color:#D19A66;--shiki-dark:#D19A66">fixed</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span></code></pre>
</div>`,r:{minutes:.22,words:67},t:"CSS设置背景图片",y:"a"}}],["/posts/Web/frontend-css/css-box-sizing.html",{loader:()=>o(()=>import("./css-box-sizing.html-Bqh-oXq5.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 问题原理简介</h2>
<p>CSS的盒子模型(box model)，它控制着页面各元素的宽与高，盒子模型多少会让人产生一些困惑，尤其当涉及到高度和宽度计算的时候。<strong>真正盒子的宽度(在页面呈现出来的宽度)和高度，需要加上一些其它的属性</strong>，例如：</p>
<ul>
<li><code>padding</code> + <code>border</code> + <code>width</code>= 盒子的宽度</li>
<li><code>padding</code>+ <code>border</code> + <code>height</code> = 盒子的高度</li>
</ul>`,r:{minutes:.77,words:230},t:"CSS属性box-sizing",y:"a"}}],["/posts/Web/frontend-css/css-calc.html",{loader:()=>o(()=>import("./css-calc.html-CZ1N0ln1.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>CSS3 的 calc() 函数允许我们在属性值中执行数学操作。例如，我们可以使用 calc() 指定一个元素宽的固定像素值为多个数值的和。</p>
<div class="language-css" data-ext="css" data-title="css"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">.foo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  width: </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">calc</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">100</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 50</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
</div>`,r:{minutes:3.26,words:979},t:"calc()函数",y:"a"}}],["/posts/Web/frontend-css/css-ellipsis.html",{loader:()=>o(()=>import("./css-ellipsis.html-CedXFP-e.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>css文本超出就隐藏并且显示省略号，非常常见的需求。但也有一些坑。特此记录一下</p>
<h2>2. 实现</h2>
<h3>2.1 单行实现</h3>
<div class="language-css" data-ext="css" data-title="css"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">overflow:hidden;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> //</span><span style="color:#C678DD;--shiki-dark:#C678DD">超出的文本隐藏</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">text-overflow</span><span style="color:#C678DD;--shiki-dark:#C678DD">:ellipsis;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> //</span><span style="color:#C678DD;--shiki-dark:#C678DD">溢出用省略号显示</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">white-space</span><span style="color:#C678DD;--shiki-dark:#C678DD">:nowrap;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> //</span><span style="color:#C678DD;--shiki-dark:#C678DD">溢出不换行</span></span></code></pre>
</div>`,r:{minutes:1.36,words:409},t:"css文本超出就隐藏并且显示省略号",y:"a"}}],["/posts/Web/frontend-css/css-lamination.html",{loader:()=>o(()=>import("./css-lamination.html-BmBNwKsa.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 背景</h2>
<p>自己在项目中对z-index 理解的并不到位，导致在使用过程中与预期效果不一致。</p>
<blockquote>
<p>一直认为<code>z-index</code>就是用来描述定义一个元素在屏幕<code>Z轴</code>上的堆叠顺序。<code>z-index</code>值越大在<code>Z轴</code>上就越靠上，也就是离屏幕观察者越近。最后才发现这个认识存在很大的问题：</p>
</blockquote>
<ol>
<li>
<p>首先，<code>z-index</code>属性值并不是在任何元素上都有效果。它<strong>仅在定位元素（定义了<code>position</code>属性，且属性值为非<code>static</code>值的元素）上有效果</strong>。</p>
</li>
<li>
<p>判断元素在<code>Z轴</code>上的堆叠顺序，不仅仅是直接比较两个元素的<code>z-index</code>值的大小，这个堆叠顺序实际由元素的<strong>层叠上下文</strong>、<strong>层叠等级</strong>共同决定。</p>
</li>
</ol>`,r:{minutes:4.46,words:1337},t:"CSS层叠",y:"a"}}],["/posts/Web/frontend-css/css-sass-started.html",{loader:()=>o(()=>import("./css-sass-started.html-DAiME9Sh.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 历史背景</h2>
<p>CSS不是一种编程语言。</p>
<p><strong>你可以用它开发网页样式，但是没法用它编程</strong>。也就是说，CSS基本上是设计师的工具，不是程序员的工具。在程序员眼里，CSS是一件很麻烦的东西。<strong>它没有变量，也没有条件语句，只是一行行单纯的描述</strong>，写起来相当费事。</p>
<p>很自然地，有人就开始<strong>为CSS加入编程元素，这被叫做"CSS预处理器"（css preprocessor）</strong>。</p>
<p>它的基本思想是，用一种专门的编程语言，进行网页样式设计，然后再编译成正常的CSS文件。</p>`,r:{minutes:3.27,words:980},t:"SASS入门",y:"a"}}],["/posts/Web/frontend-css/css-tailwind-css.html",{loader:()=>o(()=>import("./css-tailwind-css.html-BKKSQe8i.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. Tailwind CSS 是什么</h2>
<p>就是一个CSS框架，和你知道的bootstrap，element ui，Antd，bulma。一样。将一些css样式封装好，用来加速我们开发的一个工具。</p>
<h2>2 CSS框架的发展</h2>
<h3><strong>2.1 第一阶段：原生写法</strong></h3>
<p>是类似于编程中<strong>面向过程的写法</strong>，<strong>需要什么样式，自己在css中写什么样式</strong>。对代码有洁癖的程序员会进行简单的css复用。但是也只是简单的复用，大多数时候还是需要什么写什么，想怎么写怎么写。</p>`,r:{minutes:10.17,words:3052},t:"为什么使用Tailwind CSS",y:"a"}}],["/posts/Web/frontend-js/AJAX.html",{loader:()=>o(()=>import("./AJAX.html-W-eFcT0t.js"),[]),meta:{d:1729494189e3,e:`
<h2>1.1、AJAX介绍</h2>
<ul>
<li>
<p>AJAX(Asynchronous JavaScript And XML)：异步的 JavaScript 和 XML。</p>
</li>
<li>
<p>本身不是一种新技术，而是多个技术综合。用于快速创建动态网页的技术。</p>
</li>
<li>
<p>一般的网页如果需要更新内容，必需重新加载个页面。</p>
</li>
<li>
<p>而 AJAX 通过浏览器与服务器进行少量数据交换，就可以使网页实现异步更新。也就是在不重新加载整个页 面的情况下，对网页的部分内容进行<strong>局部更新</strong>。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410131237229.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>​	<img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410131237276.png" alt="" loading="lazy"></p>
</li>
</ul>`,r:{minutes:16.6,words:4979},t:"1、Ajax快速入门",y:"a"}}],["/posts/Web/frontend-js/JQuery.html",{loader:()=>o(()=>import("./JQuery.html-BfWplzjm.js"),[]),meta:{d:1729494189e3,e:`<p>1、JQuery快速入门</p>
<h2>1.1、JQuery介绍</h2>
<ul>
<li>jQuery 是一个 JavaScript 库。</li>
<li>所谓的库，就是一个 JS 文件，里面封装了很多预定义的函数，比如获取元素，执行隐藏、移动等，目的就 是在使用时直接调用，不需要再重复定义，这样就可以极大地简化了 JavaScript 编程。</li>
<li>jQuery 官网：<a href="https://www.jquery.com" target="_blank" rel="noopener noreferrer">https://www.jquery.com</a></li>
</ul>`,r:{minutes:16.1,words:4831},t:"2、JQuery基本语法",y:"a"}}],["/posts/Web/frontend-js/JavaScript%E5%9F%BA%E7%A1%80.html",{loader:()=>o(()=>import("./JavaScript基础.html-DFN0qdUH.js"),[]),meta:{d:1729494189e3,e:`
<h2>1.1、JavaScript介绍</h2>
<ul>
<li>
<p>JavaScript 是一种客户端脚本语言。运行在客户端浏览器中，每一个浏览器都具备解析 JavaScript 的引擎。</p>
</li>
<li>
<p>脚本语言：不需要编译，就可以被浏览器直接解析执行了。</p>
</li>
<li>
<p>核心功能就是增强用户和 HTML 页面的交互过程，让页面有一些动态效果。以此来增强用户的体验！</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404230903136.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<div class="language-tex" data-ext="tex" data-title="tex"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">1995 年，NetScape (网景)公司，开发的一门客户端脚本语言：LiveScript。后来，请来 SUN 公司的专家来 进行修改，后命名为：JavaScript。</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">1996 年，微软抄袭 JavaScript 开发出 JScript 脚本语言。 </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">1997 年，ECMA (欧洲计算机制造商协会)，制定出客户端脚本语言的标准：ECMAScript，统一了所有客户 端脚本语言的编码方式。</span></span></code></pre>
</div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404230903177.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
</ul>`,r:{minutes:9.84,words:2952},t:"1、JavaScript快速入门",y:"a"}}],["/posts/Web/frontend-js/JavaScript%E9%AB%98%E7%BA%A7.html",{loader:()=>o(()=>import("./JavaScript高级.html-CznonvRh.js"),[]),meta:{d:1729494189e3,e:`
<h2>1.1、面向对象介绍</h2>
<p>​		在 Java 中我们学习过面向对象，核心思想是万物皆对象。在 JavaScript 中同样也有面向对象。思想类似。</p>
<p>​		<img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404230901588.png" alt="" loading="lazy"></p>
<h2>1.2、类的定义和使用</h2>
<ul>
<li><strong>结构说明</strong></li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404230901629.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,r:{minutes:11.22,words:3366},t:"1、JavaScript面向对象",y:"a"}}],["/posts/Web/frontend-js/",{loader:()=>o(()=>import("./index.html-hSehTpd5.js"),[]),meta:{d:1715472e6,l:"2024年5月12日",e:`<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>这里放置javascript相关的内容</p>
</div>
<hr>
`,r:{minutes:.1,words:30},t:"JavaScript",i:"javascript",O:3,y:"p"}}],["/posts/Web/frontend-layout/",{loader:()=>o(()=>import("./index.html-BPt5DaeI.js"),[]),meta:{d:17157312e5,l:"2024年5月15日",e:`<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>这里放置Layout相关的内容</p>
</div>
<hr>
`,r:{minutes:.1,words:30},t:"Layout",i:"layout",O:4,y:"p"}}],["/posts/Web/frontend-layout/flex-grail-layout.html",{loader:()=>o(()=>import("./flex-grail-layout.html-BPnlsFkO.js"),[]),meta:{d:1729494189e3,e:`
<p><a href="https://en.wikipedia.org/wiki/Holy_Grail_(web_design)" target="_blank" rel="noopener noreferrer">圣杯布局</a>（Holy Grail Layout）指的是一种最常见的网站布局。页面从上到下，分成三个部分：头部（header），躯干（body），尾部（footer）。其中躯干又水平分成三栏，从左到右为：导航、主栏、副栏。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404230908700.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure>`,r:{minutes:.8,words:241},t:"flex布局-圣杯布局",y:"a"}}],["/posts/Web/frontend-layout/flex-grid-layout.html",{loader:()=>o(()=>import("./flex-grid-layout.html-D33Yga4j.js"),[]),meta:{d:1729494189e3,e:`
<ol>
<li>基本网格布局</li>
</ol>
<p>最简单的网格布局，就是平均分布。在容器里面平均分配空间，跟上面的骰子布局很像，但是需要设置项目的自动缩放。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404230908128.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure>
<p>HTML代码如下。</p>
<div class="language-html" data-ext="html" data-title="html"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#D19A66;--shiki-dark:#D19A66"> class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"Grid"</span></span>
<span class="line"><span style="color:#FFFFFF;--shiki-dark:#FFFFFF">  &lt;div</span><span style="color:#D19A66;--shiki-dark:#D19A66"> class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"Grid-cell"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;...&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#D19A66;--shiki-dark:#D19A66"> class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"Grid-cell"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;...&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#D19A66;--shiki-dark:#D19A66"> class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"Grid-cell"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;...&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
</div>`,r:{minutes:.79,words:237},t:"flex布局-网格布局",y:"a"}}],["/posts/Web/frontend-layout/flex-layout-of-input-box.html",{loader:()=>o(()=>import("./flex-layout-of-input-box.html-D5WHkaxM.js"),[]),meta:{d:1729494189e3,e:`
<p>我们常常需要在输入框的前方添加提示，后方添加按钮。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404230908979.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure>
<p>HTML代码如下。</p>
<blockquote>
<div class="language-html" data-ext="html" data-title="html"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#D19A66;--shiki-dark:#D19A66"> class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"InputAddOn"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">span</span><span style="color:#D19A66;--shiki-dark:#D19A66"> class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"InputAddOn-item"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;...&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">span</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">input</span><span style="color:#D19A66;--shiki-dark:#D19A66"> class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"InputAddOn-field"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">button</span><span style="color:#D19A66;--shiki-dark:#D19A66"> class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"InputAddOn-item"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;...&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">button</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
</div></blockquote>`,r:{minutes:.29,words:86},t:"flex布局-输入框的布局",y:"a"}}],["/posts/Web/frontend-layout/flex-layout-overview.html",{loader:()=>o(()=>import("./flex-layout-overview.html-nlp7QGq8.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 什么是flex布局</h2>
<blockquote>
<p>2009年，W3C 提出了一种新的方案----Flex 布局，可以简便、完整、响应式地实现各种页面布局。</p>
</blockquote>
<p>flex 是一种新型的布局方式，使用该布局方式可以实现几乎所有你想要的效果。但是要注意其浏览器的兼容性，flex 只支持 ie 10+</p>
<p><a href="https://caniuse.com/#feat=flexbox" target="_blank" rel="noopener noreferrer">浏览器兼容性查询</a></p>
<h2>2. 使用 flex 布局</h2>`,r:{minutes:6.23,words:1870},t:"flex布局",y:"a"}}],["/posts/Web/frontend-layout/flex-streaming-layout-example.html",{loader:()=>o(()=>import("./flex-streaming-layout-example.html-TPMjugIz.js"),[]),meta:{d:1729494189e3,e:`
<p>每行的项目数固定，会自动分行。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404230909268.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure>
<p>CSS的写法。</p>
<div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">.parent</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  width: </span><span style="color:#D19A66;--shiki-dark:#D19A66">200</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  height: </span><span style="color:#D19A66;--shiki-dark:#D19A66">150</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  background-color: </span><span style="color:#D19A66;--shiki-dark:#D19A66">black</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  display: </span><span style="color:#D19A66;--shiki-dark:#D19A66">flex</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  flex-flow: </span><span style="color:#D19A66;--shiki-dark:#D19A66">row</span><span style="color:#D19A66;--shiki-dark:#D19A66"> wrap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  align-content: </span><span style="color:#D19A66;--shiki-dark:#D19A66">flex-start</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">.child</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  box-sizing: </span><span style="color:#D19A66;--shiki-dark:#D19A66">border-box</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  background-color: </span><span style="color:#D19A66;--shiki-dark:#D19A66">white</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  flex: </span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 25</span><span style="color:#E06C75;--shiki-dark:#E06C75">%</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  height: </span><span style="color:#D19A66;--shiki-dark:#D19A66">50</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  border: </span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#D19A66;--shiki-dark:#D19A66"> solid</span><span style="color:#D19A66;--shiki-dark:#D19A66"> red</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.58,words:174},t:"flex布局-流式布局实例",y:"a"}}],["/posts/Web/frontend-layout/flex-suspended-layout.html",{loader:()=>o(()=>import("./flex-suspended-layout.html-C5oyhoCb.js"),[]),meta:{d:1729494189e3,e:`
<p>有时，主栏的左侧或右侧，需要添加一个图片栏。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404230909401.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure>
<p>HTML代码如下。</p>
<div class="language-html" data-ext="html" data-title="html"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#D19A66;--shiki-dark:#D19A66"> class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"Media"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">img</span><span style="color:#D19A66;--shiki-dark:#D19A66"> class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"Media-figure"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> src</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">""</span><span style="color:#D19A66;--shiki-dark:#D19A66"> alt</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">""</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">p</span><span style="color:#D19A66;--shiki-dark:#D19A66"> class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"Media-body"</span><span style="color:#D19A66;--shiki-dark:#D19A66">...</span><span style="color:#FFFFFF;--shiki-dark:#FFFFFF">&lt;/p</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
</div>`,r:{minutes:.29,words:86},t:"flex布局-悬挂式布局",y:"a"}}],["/posts/Web/frontend-layout/layout-fixed-bottom-bar.html",{loader:()=>o(()=>import("./layout-fixed-bottom-bar.html-Bs0UzlS8.js"),[]),meta:{d:1729494189e3,e:`
<p>有时，页面内容太少，无法占满一屏的高度，底栏就会抬高到页面的中间。这时可以采用Flex布局，让底栏总是出现在页面的底部。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404230909068.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure>
<p>HTML代码如下。</p>
<div class="language-html" data-ext="html" data-title="html"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">body</span><span style="color:#D19A66;--shiki-dark:#D19A66"> class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"Site"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">header...&lt;/header</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">main</span><span style="color:#D19A66;--shiki-dark:#D19A66"> class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"Site-content"</span><span style="color:#D19A66;--shiki-dark:#D19A66">...</span><span style="color:#FFFFFF;--shiki-dark:#FFFFFF">&lt;/main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">footer...&lt;/footer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">body</span></span></code></pre>
</div>`,r:{minutes:.38,words:113},t:"flex布局-固定的底栏",y:"a"}}],["/posts/Web/frontend-layout/layout-flex-layout-example.html",{loader:()=>o(()=>import("./layout-flex-layout-example.html-BtYuaksA.js"),[]),meta:{d:1729494189e3,e:`
<h2>简介</h2>
<p>骰子的一面，最多可以放置9个点。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410131232677.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure>
<p>下面，就来看看Flex如何实现，从1个点到9个点的布局</p>
<p>如果不加说明，本节的HTML模板一律如下。</p>
<blockquote>
<div class="language-html" data-ext="html" data-title="html"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#D19A66;--shiki-dark:#D19A66"> class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"box"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">span</span><span style="color:#D19A66;--shiki-dark:#D19A66"> class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"item"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">span</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
</div></blockquote>`,r:{minutes:2.15,words:644},t:"flex布局示例（骰子的布局）",y:"a"}}],["/posts/Web/frontend-layout/layout-horizontal-center.html",{loader:()=>o(()=>import("./layout-horizontal-center.html-DdnhnqQi.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 实现方式</h2>
<h3>1.1 方式一：<code>text-align: center</code>实现</h3>
<p>如果父元素是块级元素且里面包含行内元素，则直接给父元素设置 <code>text-align: center</code>, 如果父元素是行内元素的话父元素无法设置宽高，则需要将其设为块级元素<code>display: block</code>。也对inline、inline-block、inline-table和inline-flex元素水平居中都有效。</p>
<p>HTML</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>// 父元素是块级元素</span></span>
<span class="line"><span>&lt;div id="parent"&gt;</span></span>
<span class="line"><span>    &lt;span id="child"&gt;我是行内元素&lt;/span&gt;</span></span>
<span class="line"><span>&lt;/div&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 父元素是行内元素</span></span>
<span class="line"><span>&lt;span id="parent"&gt;</span></span>
<span class="line"><span>    &lt;span id="child"&gt;我是行内元素&lt;/span&gt;</span></span>
<span class="line"><span>&lt;/span&gt;</span></span></code></pre>
</div>`,r:{minutes:2.71,words:812},t:"CSS水平居中的7种实现方式",y:"a"}}],["/posts/Web/frontend-layout/layout-vertical-center.html",{loader:()=>o(()=>import("./layout-vertical-center.html-CndnjqA-.js"),[]),meta:{d:1729494189e3,e:`
<h2>1.  实现方式</h2>
<h3>1.1 方式一：不知道父子高度</h3>
<p>不知道自己高度和父容器高度的情况下, 利用绝对定位只需要以下三行：</p>
<div class="language-css" data-ext="css" data-title="css"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">parentElement</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        position:</span><span style="color:#D19A66;--shiki-dark:#D19A66">relative</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD"> childElement</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        position: </span><span style="color:#D19A66;--shiki-dark:#D19A66">absolute</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        top: </span><span style="color:#D19A66;--shiki-dark:#D19A66">50</span><span style="color:#E06C75;--shiki-dark:#E06C75">%</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        transform: </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">translateY</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">-50</span><span style="color:#E06C75;--shiki-dark:#E06C75">%</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> }</span></span></code></pre>
</div>`,r:{minutes:.72,words:216},t:"布局垂直居中",y:"a"}}],["/posts/Web/frontend-lib/",{loader:()=>o(()=>import("./index.html-CMlYLEN7.js"),[]),meta:{d:17158176e5,l:"2024年5月16日",e:`<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>这里放置第三方依赖相关的内容</p>
</div>
<hr>
`,r:{minutes:.13,words:38},t:"第三方依赖",i:"plugin",O:5,y:"p"}}],["/posts/Web/frontend-lib/element-admin-started.html",{loader:()=>o(()=>import("./element-admin-started.html-BJXb98wW.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<blockquote>
<p><a href="https://panjiachen.github.io/vue-element-admin" target="_blank" rel="noopener noreferrer">vue-element-admin</a> 是一个后台前端解决方案，它基于 <a href="https://github.com/vuejs/vue" target="_blank" rel="noopener noreferrer">vue</a> 和 <a href="https://github.com/ElemeFE/element" target="_blank" rel="noopener noreferrer">element-ui</a>实现。它使用了最新的前端技术栈，内置了 i18n 国际化解决方案，动态路由，权限验证，提炼了典型的业务模型，提供了丰富的功能组件，它可以帮助你快速搭建企业级中后台产品原型。</p>
</blockquote>`,r:{minutes:1.08,words:324},t:"vue-element-admin入门使用",y:"a"}}],["/posts/Web/frontend-lib/element-upload.html",{loader:()=>o(()=>import("./element-upload.html-TCTyNNIy.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>element 的官网已经挺详尽了，这里主要是针对自己的疑惑点，进行描述补充。</p>
<h2>2.  基础使用</h2>
<h3>2.1 点击上传</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404230911547.png" alt="image-20210607093813556" tabindex="0" loading="lazy"><figcaption>image-20210607093813556</figcaption></figure>`,r:{minutes:1.17,words:351},t:"Element文件上传-Upload",y:"a"}}],["/posts/Web/frontend-lib/fe-lib-caniuse.html",{loader:()=>o(()=>import("./fe-lib-caniuse.html-DOiykatn.js"),[]),meta:{d:1729494189e3,e:`
<p><a href="https://caniuse.com/" target="_blank" rel="noopener noreferrer">caniuse官网地址</a></p>
<p>已flex 为例介绍</p>
<h2>1.主页面介绍</h2>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/image-20200827145121290.png" alt="image-20200827145121290" tabindex="0" loading="lazy"><figcaption>image-20200827145121290</figcaption></figure>`,r:{minutes:1.01,words:304},t:"caniuse查看浏览器兼容性",y:"a"}}],["/posts/Web/frontend-lib/fe-lib-cross-domain.html",{loader:()=>o(()=>import("./fe-lib-cross-domain.html-D4naDkxM.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 什么是跨域</h2>
<blockquote>
<p><strong>跨域</strong>是指 不同域名之间相互访问。即浏览器控制当前网页下不能执行其他网站的脚本，这是由浏览器的同源策略造成的，是浏览器对JavaScript施加的安全限制。</p>
</blockquote>
<p>也就是如果在A网站中，我们希望使用Ajax来获得B网站中的特定内容<br>
如果A网站与B网站不在同一个域中，那么就出现了跨域访问问题。</p>
<p><strong>跨域的安全限制都是对浏览器端来说的，服务器端是不存在跨域安全限制的。</strong></p>
<h2>2. 同源策略</h2>
`,r:{minutes:2.53,words:758},t:"前后端分离项目跨域解决",y:"a"}}],["/posts/Web/frontend-lib/fe-lib-element-online-icon-garbled.html",{loader:()=>o(()=>import("./fe-lib-element-online-icon-garbled.html-LOCFj9At.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 现象</h2>
<p>本地开发测试都没有问题，部署到线上环境图标第一次显示不出来</p>
<h2>2. 问题原因</h2>
<p>dart-sass编译时会将对应的unicode编码转换成对应unicode明文，所以通过伪元素来展示的图标如el-icon-arrow:before{ content: "\\e6df"}，编译之后就变成了el-icon-arrow:before{ content: ""}，“”便是一个双字节字符</p>
<ul>
<li>正常情况我们会在meta标签上设置：<code>&lt;meta charset="utf-8" &gt;</code>，<strong>但这只对HTML内容解析有效，</strong></li>
<li>对于css内容中(外部样式表下)的双字节字符（如中文）解析并没有作用的，所以如果浏览器请求回来的css资源的HTTP响应头里的Content-Type未指明"charset=utf-8"的话，浏览器根据自身的嗅探机制来决定采用哪一种编码解析，结果就会概率出现双字节字符乱码的情况</li>
</ul>`,r:{minutes:1.59,words:476},t:"线上element的字体图标乱码",y:"a"}}],["/posts/Web/frontend-lib/fe-lib-element-teasing.html",{loader:()=>o(()=>import("./fe-lib-element-teasing.html-CToDC_D-.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 关于 el-radio-group 增加垂直排列的建议</h2>
<p><a href="https://github.com/ElemeFE/element/issues/3037" target="_blank" rel="noopener noreferrer">关于 el-radio-group 增加垂直排列的建议</a></p>
<blockquote>
<p>官方回复：没有太多人有这个需求，可能暂时没有这个计划，你可以用CSS处理。</p>
</blockquote>
<p>这么简单的需求，硬是不加。需要自己实现。一大堆评论要求加，视而不见。</p>
<p>2017 年提的，现在都2022年了，还没解决</p>`,r:{minutes:.78,words:234},t:"Element-吐槽点",y:"a"}}],["/posts/Web/frontend-lib/fe-lib-eslint.html",{loader:()=>o(()=>import("./fe-lib-eslint.html-DbNjWE0c.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. vue-cli脚手架的关闭方法</h2>
<p><code>build/webpack.base.conf.js</code> 配置文件中的eslint rules注释掉</p>
<div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">module: {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    rules: [</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      // {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      //   test: /\\.(js|vue)$/,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      //   loader: 'eslint-loader',</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      //   enforce: 'pre',</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      //   include: [resolve('src'), resolve('test')],</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      //   options: {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      //     formatter: require('eslint-friendly-formatter')</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      //   }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      // },</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      ...</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">     ]</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">     ...</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.51,words:152},t:"关闭eslint",y:"a"}}],["/posts/Web/frontend-lib/fe-lib-form-generator.html",{loader:()=>o(()=>import("./fe-lib-form-generator.html-DPe110Ue.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 背景</h2>
<p>项目中存在着大量的表单，之前的实现都是针对原型页面一个个组件手动写入。那么这样会面临着不少问题</p>
<ul>
<li>表单组件多，样式差别不大，写个页面耗时长，且繁琐</li>
<li>页面风格不好控制</li>
</ul>
<h2>2. 引入form-generator</h2>
<p>我们使用 <a href="https://github.com/JakHuang/form-generator" target="_blank" rel="noopener noreferrer">form-generator</a></p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404230917569.gif" alt="68747470733a2f2f616530312e616c6963646e2e636f6d2f6b662f553531626662363631616261393435623438613463373137373434323164343134432e676966" tabindex="0" loading="lazy"><figcaption>68747470733a2f2f616530312e616c6963646e2e636f6d2f6b662f553531626662363631616261393435623438613463373137373434323164343134432e676966</figcaption></figure>`,r:{minutes:.64,words:192},t:"form-generator初尝试",y:"a"}}],["/posts/Web/frontend-lib/fe-lib-lodash.html",{loader:()=>o(()=>import("./fe-lib-lodash.html-DTQgVl6n.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p><a href="https://www.lodashjs.com/" target="_blank" rel="noopener noreferrer">Lodash 中文网</a><br>
Lodash 是一个著名的 javascript 原生库，不需要引入其他第三方依赖，是一个意在提高开发者效率,提高 JS 原生方法性能的JS 库。简单的说就是，很多方法 lodash 已经帮你写好了，直接调用就行，不用自己费尽心思去写了，而且可以统一方法的一致性。Lodash 使用了一个简单的 _ 符号，就像 Jquery 的 $ 一样，十分简洁。</p>
<h2>2. 集成使用</h2>`,r:{minutes:4.93,words:1479},t:"lodash使用与常用函数",y:"a"}}],["/posts/Web/frontend-lib/fe-lib-md5.html",{loader:()=>o(()=>import("./fe-lib-md5.html-BX3Fe_Rd.js"),[]),meta:{d:1729494189e3,e:`
<ol>
<li>
<p>执行安装</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>npm install js-md5</span></span></code></pre>
</div></li>
<li>
<p>使用</p>
</li>
</ol>`,r:{minutes:.11,words:34},t:"js安装和使用md5",y:"a"}}],["/posts/Web/frontend-lib/fe-lib-media-recorde.html",{loader:()=>o(()=>import("./fe-lib-media-recorde.html-BYb7CGOY.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<h2>代码实现</h2>
<div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">template</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#D19A66;--shiki-dark:#D19A66"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"video-app"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#D19A66;--shiki-dark:#D19A66"> class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"recorder-wrapper"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#D19A66;--shiki-dark:#D19A66"> class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"phone"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#D19A66;--shiki-dark:#D19A66"> class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"phone-body"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">          &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#D19A66;--shiki-dark:#D19A66"> class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"phone-head"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">span</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">&amp;lt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> 微信(66)&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">span</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">span</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;哈哈哈&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">span</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">span</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;···&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">span</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">          &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">          &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#D19A66;--shiki-dark:#D19A66"> class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"phone-content"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">transition-group</span><span style="color:#D19A66;--shiki-dark:#D19A66"> tag</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"ul"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"msg-list"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"fade"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> &gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">              &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">li</span><span style="color:#D19A66;--shiki-dark:#D19A66"> class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"msg eg"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> :key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"-1"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#D19A66;--shiki-dark:#D19A66"> class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"avatar"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#D19A66;--shiki-dark:#D19A66"> class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"video"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;拍段视频吧&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">              &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">li</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">              &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">li</span><span style="color:#D19A66;--shiki-dark:#D19A66"> v-for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"(item, index) in chunkList"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> :key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"index"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"msg"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#D19A66;--shiki-dark:#D19A66"> class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"avatar"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">                  class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"video"</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">                  @click</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"onPlay(index)"</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">                  @touchend.prevent</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"onPlay(index)"</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                &gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                  &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">img</span><span style="color:#D19A66;--shiki-dark:#D19A66"> alt</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"截图"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> :src</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"item.poster"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                  &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">i</span><span style="color:#D19A66;--shiki-dark:#D19A66"> class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"el-icon-caret-right"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">i</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">              &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">li</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">transition-group</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">          &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">          &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">            class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"phone-operate"</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">            @mousedown</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"onMousedown"</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">            @touchstart.prevent</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"onMousedown"</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">            @mouseup</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"onMouseup"</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">            @touchend.prevent</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"onMouseup"</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">          &gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            {{ btnText }}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">          &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">          &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">video</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">            ref</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"video"</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">            width</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"200"</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">            @click</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"showVideo(false)"</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">            @touchend.prevent</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"showVideo(false)"</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">          &gt;&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">video</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">canvas</span><span style="color:#D19A66;--shiki-dark:#D19A66"> ref</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"canvas"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">canvas</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">template</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">script</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">export</span><span style="color:#C678DD;--shiki-dark:#C678DD"> default</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">  data</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      chunks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: [],</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      chunkList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: [],</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      btnText</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">"按住拍视频"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      index</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    };</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">  created</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() {},</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">  mounted</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">navigator</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">mediaDevices</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">      alert</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"您的浏览器不支持获取用户设备"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">      return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">window</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">MediaRecorder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">      alert</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"您的浏览器不支持录音"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">      return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">video</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">$refs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">video</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">canvas</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">$refs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">canvas</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">ctx</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">canvas</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getContext</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"2d"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">requestAudioAccess</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  methods</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">    requestAudioAccess</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      navigator</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">mediaDevices</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getUserMedia</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">({ </span><span style="color:#E06C75;--shiki-dark:#E06C75">audio</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#D19A66;--shiki-dark:#D19A66">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E06C75;--shiki-dark:#E06C75">video</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#D19A66;--shiki-dark:#D19A66">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> }).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">then</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        (</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">stream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">=&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">          this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">recorder</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> window</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">MediaRecorder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E06C75;--shiki-dark:#E06C75">stream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">          this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">stream</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E06C75;--shiki-dark:#E06C75"> stream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">          this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bindEvents</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        },</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        (</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">error</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">=&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">          alert</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"出错，请确保已允许浏览器获取音视频权限"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      );</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">    onMousedown</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">showVideo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">onPreview</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">btnText</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "松开结束"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">onStart</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">    onMouseup</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">onStop</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">btnText</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "按住拍视频"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">    onPreview</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">video</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">srcObject</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">stream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">video</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">muted</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">video</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">play</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">    showVideo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">bShow</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">      if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E06C75;--shiki-dark:#E06C75">bShow</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">video</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">style</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">display</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "block"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      } </span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">video</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">style</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">display</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "none"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">video</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">pause</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">    onStart</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">recorder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">start</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">    onStop</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">recorder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">stop</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">    onPlay</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">index</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">showVideo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">      let</span><span style="color:#E06C75;--shiki-dark:#E06C75"> item</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">chunkList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[</span><span style="color:#E06C75;--shiki-dark:#E06C75">index</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">];</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">video</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">src</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">stream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">video</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">muted</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> false</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">video</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">play</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bindAudioEvent</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">    bindAudioEvent</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">video</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">onended</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> () </span><span style="color:#C678DD;--shiki-dark:#C678DD">=&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">showVideo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">false</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      };</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">    bindEvents</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">recorder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">ondataavailable</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">getRecordingData</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">recorder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">onstop</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">saveRecordingData</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">    getRecordingData</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">e</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">chunks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">push</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">e</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">data</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">    saveRecordingData</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">      let</span><span style="color:#E06C75;--shiki-dark:#E06C75"> blob</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Blob</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">chunks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, { </span><span style="color:#E06C75;--shiki-dark:#E06C75">type</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">"video/webm"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> }),</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        videoStream</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> URL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">createObjectURL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E06C75;--shiki-dark:#E06C75">blob</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">chunkList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">push</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">({ </span><span style="color:#E06C75;--shiki-dark:#E06C75">stream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#E06C75;--shiki-dark:#E06C75">videoStream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">onCapture</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">index</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">chunks</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> [];</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    //获取视频截图</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">    onCapture</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">index</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">      let</span><span style="color:#E06C75;--shiki-dark:#E06C75"> item</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">chunkList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[</span><span style="color:#E06C75;--shiki-dark:#E06C75">index</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">];</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ctx</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">drawImage</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">video</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">        0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">        0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">canvas</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">width</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">canvas</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">height</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      );</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">canvas</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">toBlob</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">((</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">blob</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">=&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        let</span><span style="color:#E06C75;--shiki-dark:#E06C75"> src</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> URL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">createObjectURL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E06C75;--shiki-dark:#E06C75">blob</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">$set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E06C75;--shiki-dark:#E06C75">item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#98C379;--shiki-dark:#98C379">"poster"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E06C75;--shiki-dark:#E06C75">src</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      });</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      //索引后移</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">index</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">++</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      //隐藏video</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">showVideo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">false</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">video</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">srcObject</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">};</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">script</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">style</span><span style="color:#D19A66;--shiki-dark:#D19A66"> scoped</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">.recorder-wrapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  margin-top: </span><span style="color:#D19A66;--shiki-dark:#D19A66">10</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  padding: </span><span style="color:#D19A66;--shiki-dark:#D19A66">20</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  border: </span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#D19A66;--shiki-dark:#D19A66"> solid</span><span style="color:#D19A66;--shiki-dark:#D19A66"> #00b894</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">.phone</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  margin: </span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#D19A66;--shiki-dark:#D19A66"> auto</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  padding: </span><span style="color:#D19A66;--shiki-dark:#D19A66">55</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 11</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 53</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  width: </span><span style="color:#D19A66;--shiki-dark:#D19A66">221</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  height: </span><span style="color:#D19A66;--shiki-dark:#D19A66">448</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  font-size: </span><span style="color:#D19A66;--shiki-dark:#D19A66">12</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  border-radius: </span><span style="color:#D19A66;--shiki-dark:#D19A66">35</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  background-image: </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">url</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"https://xiaotianxia.github.io/blog/vuepress/assets/img/iphone-bg1.bf9c75ef.png"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  box-sizing: </span><span style="color:#D19A66;--shiki-dark:#D19A66">border-box</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  user-select: </span><span style="color:#D19A66;--shiki-dark:#D19A66">none</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">.phone-body</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  position: </span><span style="color:#D19A66;--shiki-dark:#D19A66">relative</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  height: </span><span style="color:#D19A66;--shiki-dark:#D19A66">100</span><span style="color:#E06C75;--shiki-dark:#E06C75">%</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  background-color: </span><span style="color:#D19A66;--shiki-dark:#D19A66">#fff</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">.phone-head</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  height: </span><span style="color:#D19A66;--shiki-dark:#D19A66">30</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  line-height: </span><span style="color:#D19A66;--shiki-dark:#D19A66">30</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  color: </span><span style="color:#D19A66;--shiki-dark:#D19A66">#fff</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  font-weight: </span><span style="color:#D19A66;--shiki-dark:#D19A66">bold</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  background-color: </span><span style="color:#D19A66;--shiki-dark:#D19A66">#000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">.phone-head</span><span style="color:#E06C75;--shiki-dark:#E06C75"> span</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  display: </span><span style="color:#D19A66;--shiki-dark:#D19A66">inline-block</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">.phone-head</span><span style="color:#E06C75;--shiki-dark:#E06C75"> span</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">:nth-child</span><span style="color:#C678DD;--shiki-dark:#C678DD">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#C678DD;--shiki-dark:#C678DD">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  width: </span><span style="color:#D19A66;--shiki-dark:#D19A66">100</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  text-align: </span><span style="color:#D19A66;--shiki-dark:#D19A66">center</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">.phone-head</span><span style="color:#E06C75;--shiki-dark:#E06C75"> span</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">:nth-child</span><span style="color:#C678DD;--shiki-dark:#C678DD">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">3</span><span style="color:#C678DD;--shiki-dark:#C678DD">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  float: </span><span style="color:#D19A66;--shiki-dark:#D19A66">right</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  margin-right: </span><span style="color:#D19A66;--shiki-dark:#D19A66">10</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">.phone-content</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  height: </span><span style="color:#D19A66;--shiki-dark:#D19A66">282</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  background-color: </span><span style="color:#D19A66;--shiki-dark:#D19A66">#f1eded</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">.phone-operate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  position: </span><span style="color:#D19A66;--shiki-dark:#D19A66">relative</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  line-height: </span><span style="color:#D19A66;--shiki-dark:#D19A66">28</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  text-align: </span><span style="color:#D19A66;--shiki-dark:#D19A66">center</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  cursor: </span><span style="color:#D19A66;--shiki-dark:#D19A66">pointer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  font-weight: </span><span style="color:#D19A66;--shiki-dark:#D19A66">bold</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  box-shadow: </span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -1</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> rgba</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;--shiki-dark:#D19A66">0.1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">.phone-operate</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">:active</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  background-color: </span><span style="color:#D19A66;--shiki-dark:#D19A66">#95a5a6</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">.phone-operate</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">:active:before</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  position: </span><span style="color:#D19A66;--shiki-dark:#D19A66">absolute</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  left: </span><span style="color:#D19A66;--shiki-dark:#D19A66">50</span><span style="color:#E06C75;--shiki-dark:#E06C75">%</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  transform: </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">translate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">-50</span><span style="color:#E06C75;--shiki-dark:#E06C75">%</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  top: </span><span style="color:#D19A66;--shiki-dark:#D19A66">-2</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  content: </span><span style="color:#98C379;--shiki-dark:#98C379">""</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  width: </span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#E06C75;--shiki-dark:#E06C75">%</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  height: </span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  background-color: </span><span style="color:#D19A66;--shiki-dark:#D19A66">#7bed9f</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  animation: loading </span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#E06C75;--shiki-dark:#E06C75">s</span><span style="color:#D19A66;--shiki-dark:#D19A66"> ease-in-out</span><span style="color:#D19A66;--shiki-dark:#D19A66"> infinite</span><span style="color:#D19A66;--shiki-dark:#D19A66"> backwards</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">.msg-list</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  margin: </span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  padding: </span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  height: </span><span style="color:#D19A66;--shiki-dark:#D19A66">100</span><span style="color:#E06C75;--shiki-dark:#E06C75">%</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  overflow-y: </span><span style="color:#D19A66;--shiki-dark:#D19A66">auto</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">  -webkit-overflow-scrolling</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#D19A66;--shiki-dark:#D19A66">touch</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">.msg-list</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">::-webkit-scrollbar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  display: </span><span style="color:#D19A66;--shiki-dark:#D19A66">none</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">.msg-list</span><span style="color:#D19A66;--shiki-dark:#D19A66"> .msg</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  list-style: </span><span style="color:#D19A66;--shiki-dark:#D19A66">none</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  padding: </span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 8</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  margin: </span><span style="color:#D19A66;--shiki-dark:#D19A66">10</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  overflow: </span><span style="color:#D19A66;--shiki-dark:#D19A66">hidden</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">.msg-list</span><span style="color:#D19A66;--shiki-dark:#D19A66"> .msg</span><span style="color:#D19A66;--shiki-dark:#D19A66"> .avatar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">.msg-list</span><span style="color:#D19A66;--shiki-dark:#D19A66"> .msg</span><span style="color:#D19A66;--shiki-dark:#D19A66"> .video</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">.msg-list</span><span style="color:#D19A66;--shiki-dark:#D19A66"> .msg</span><span style="color:#D19A66;--shiki-dark:#D19A66"> .duration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  float: </span><span style="color:#D19A66;--shiki-dark:#D19A66">right</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">.msg-list</span><span style="color:#D19A66;--shiki-dark:#D19A66"> .msg</span><span style="color:#D19A66;--shiki-dark:#D19A66"> .avatar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  width: </span><span style="color:#D19A66;--shiki-dark:#D19A66">24</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  height: </span><span style="color:#D19A66;--shiki-dark:#D19A66">24</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  line-height: </span><span style="color:#D19A66;--shiki-dark:#D19A66">24</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  text-align: </span><span style="color:#D19A66;--shiki-dark:#D19A66">center</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  background-color: </span><span style="color:#D19A66;--shiki-dark:#D19A66">#000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  background: </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">url</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"https://denzel.netlify.com/hero.png"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  background-size: </span><span style="color:#D19A66;--shiki-dark:#D19A66">100</span><span style="color:#E06C75;--shiki-dark:#E06C75">%</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">.msg-list</span><span style="color:#D19A66;--shiki-dark:#D19A66"> .msg</span><span style="color:#D19A66;--shiki-dark:#D19A66"> .video</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  position: </span><span style="color:#D19A66;--shiki-dark:#D19A66">relative</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  width: </span><span style="color:#D19A66;--shiki-dark:#D19A66">100</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  height: </span><span style="color:#D19A66;--shiki-dark:#D19A66">75</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  line-height: </span><span style="color:#D19A66;--shiki-dark:#D19A66">80</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  margin-right: </span><span style="color:#D19A66;--shiki-dark:#D19A66">6</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  border-radius: </span><span style="color:#D19A66;--shiki-dark:#D19A66">4</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  overflow: </span><span style="color:#D19A66;--shiki-dark:#D19A66">hidden</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  color: </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">rgba</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">255</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;--shiki-dark:#D19A66">255</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;--shiki-dark:#D19A66">255</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;--shiki-dark:#D19A66">0.8</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  text-align: </span><span style="color:#D19A66;--shiki-dark:#D19A66">center</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  font-size: </span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  cursor: </span><span style="color:#D19A66;--shiki-dark:#D19A66">pointer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">.msg-list</span><span style="color:#D19A66;--shiki-dark:#D19A66"> .msg</span><span style="color:#D19A66;--shiki-dark:#D19A66"> .video</span><span style="color:#E06C75;--shiki-dark:#E06C75"> img</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  position: </span><span style="color:#D19A66;--shiki-dark:#D19A66">absolute</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  top: </span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  left: </span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  width: </span><span style="color:#D19A66;--shiki-dark:#D19A66">100</span><span style="color:#E06C75;--shiki-dark:#E06C75">%</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  height: </span><span style="color:#D19A66;--shiki-dark:#D19A66">100</span><span style="color:#E06C75;--shiki-dark:#E06C75">%</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  background-color: </span><span style="color:#D19A66;--shiki-dark:#D19A66">#636e72</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">.msg-list</span><span style="color:#D19A66;--shiki-dark:#D19A66"> .msg</span><span style="color:#D19A66;--shiki-dark:#D19A66"> .video</span><span style="color:#E06C75;--shiki-dark:#E06C75"> i</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  position: </span><span style="color:#D19A66;--shiki-dark:#D19A66">absolute</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  top: </span><span style="color:#D19A66;--shiki-dark:#D19A66">50</span><span style="color:#E06C75;--shiki-dark:#E06C75">%</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  left: </span><span style="color:#D19A66;--shiki-dark:#D19A66">50</span><span style="color:#E06C75;--shiki-dark:#E06C75">%</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  transform: </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">translate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">-50</span><span style="color:#E06C75;--shiki-dark:#E06C75">%</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;--shiki-dark:#D19A66">-50</span><span style="color:#E06C75;--shiki-dark:#E06C75">%</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  font-size: </span><span style="color:#D19A66;--shiki-dark:#D19A66">30</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">.msg-list</span><span style="color:#D19A66;--shiki-dark:#D19A66"> .msg.eg</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  cursor: </span><span style="color:#D19A66;--shiki-dark:#D19A66">default</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">.msg-list</span><span style="color:#D19A66;--shiki-dark:#D19A66"> .msg.eg</span><span style="color:#D19A66;--shiki-dark:#D19A66"> .video</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  position: </span><span style="color:#D19A66;--shiki-dark:#D19A66">relative</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  width: </span><span style="color:#D19A66;--shiki-dark:#D19A66">auto</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  height: </span><span style="color:#D19A66;--shiki-dark:#D19A66">24</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  line-height: </span><span style="color:#D19A66;--shiki-dark:#D19A66">24</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  padding: </span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 8</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 10</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  border-radius: </span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  color: </span><span style="color:#D19A66;--shiki-dark:#D19A66">#000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  overflow: </span><span style="color:#D19A66;--shiki-dark:#D19A66">initial</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  font-size: </span><span style="color:#D19A66;--shiki-dark:#D19A66">12</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  background-color: </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">rgba</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">107</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;--shiki-dark:#D19A66">197</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;--shiki-dark:#D19A66">107</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;--shiki-dark:#D19A66">0.85</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">.msg-list</span><span style="color:#D19A66;--shiki-dark:#D19A66"> .msg.eg</span><span style="color:#D19A66;--shiki-dark:#D19A66"> .video</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">:before</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  position: </span><span style="color:#D19A66;--shiki-dark:#D19A66">absolute</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  content: </span><span style="color:#98C379;--shiki-dark:#98C379">""</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  right: </span><span style="color:#D19A66;--shiki-dark:#D19A66">-8</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  top: </span><span style="color:#D19A66;--shiki-dark:#D19A66">8</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  display: </span><span style="color:#D19A66;--shiki-dark:#D19A66">inline-block</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  width: </span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  height: </span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  border-style: </span><span style="color:#D19A66;--shiki-dark:#D19A66">solid</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  border-width: </span><span style="color:#D19A66;--shiki-dark:#D19A66">4</span><span style="color:#E06C75;--shiki-dark:#E06C75">px</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  border-color: </span><span style="color:#D19A66;--shiki-dark:#D19A66">transparent</span><span style="color:#D19A66;--shiki-dark:#D19A66"> transparent</span><span style="color:#D19A66;--shiki-dark:#D19A66"> transparent</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> rgba</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">107</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;--shiki-dark:#D19A66">197</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;--shiki-dark:#D19A66">107</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;--shiki-dark:#D19A66">0.85</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">video</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  position: </span><span style="color:#D19A66;--shiki-dark:#D19A66">absolute</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  top: </span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  left: </span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  right: </span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  display: </span><span style="color:#D19A66;--shiki-dark:#D19A66">none</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">canvas</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  display: </span><span style="color:#D19A66;--shiki-dark:#D19A66">none</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">.fade-enter-active</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">.fade-leave-active</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  transition: opacity </span><span style="color:#D19A66;--shiki-dark:#D19A66">0.5</span><span style="color:#E06C75;--shiki-dark:#E06C75">s</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">.fade-enter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">.fade-leave-to</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  opacity: </span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">@keyframes</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> loading</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  from {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    width: </span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#E06C75;--shiki-dark:#E06C75">%</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  to {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    width: </span><span style="color:#D19A66;--shiki-dark:#D19A66">100</span><span style="color:#E06C75;--shiki-dark:#E06C75">%</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">style</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.82,words:845},t:"MediaRecorde录制视频",y:"a"}}],["/posts/Web/frontend-lib/fe-lib-print.html",{loader:()=>o(()=>import("./fe-lib-print.html-BHYd191X.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 官网地址</h2>
<p><a href="https://printjs.crabbly.com/" target="_blank" rel="noopener noreferrer">https://printjs.crabbly.com/</a></p>
<h2>2. 下载</h2>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>npm install print-js --save</span></span></code></pre>
</div>`,r:{minutes:4.36,words:1308},t:"Vue使用print-js实现打印功能",y:"a"}}],["/posts/Web/frontend-lib/fe-lib-resource-website.html",{loader:()=>o(()=>import("./fe-lib-resource-website.html-jTpHJEoi.js"),[]),meta:{d:1729494189e3,e:`
<ol>
<li><a href="https://www.chromedownloads.net/" target="_blank" rel="noopener noreferrer">chrome历史版本下载</a></li>
</ol>
`,r:{minutes:.05,words:16},t:"常用资源网站",y:"a"}}],["/posts/Web/frontend-lib/fe-lib-third-party-dependency.html",{loader:()=>o(()=>import("./fe-lib-third-party-dependency.html-BLZphCTh.js"),[]),meta:{d:1729494189e3,e:`
<p><a href="https://github.com/kgrandemange/vue-flip" target="_blank" rel="noopener noreferrer">翻转-翻牌</a></p>
`,r:{minutes:.05,words:15},t:"常用依赖第三方库",y:"a"}}],["/posts/Web/frontend-lib/fe-lib-uniapp-rich-text-adapter.html",{loader:()=>o(()=>import("./fe-lib-uniapp-rich-text-adapter.html-DbrNcPYi.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>我们商品详情页等场景，使用uniapp富文本rich-text展示时，图片可能会因图片原始尺寸过大，导致无法正常渲染等问题</p>
<h2>2. 解决办案</h2>
<p>我们将img 标签的样式做个替换，设置最大宽度为100%</p>
<div class="language-html" data-ext="html" data-title="html"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">parsedHtml() {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">				if (this.product.detailMobileHtml) {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">					return this.product.detailMobileHtml.replace(/\\&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">img/gi,'&lt;img</span><span style="color:#D19A66;--shiki-dark:#D19A66"> style</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"max-width:100%;height:auto;display:block;"</span><span style="color:#FFFFFF;--shiki-dark:#FFFFFF">');</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">				}</span><span style="color:#D19A66;--shiki-dark:#D19A66"> else</span><span style="color:#D19A66;--shiki-dark:#D19A66"> {</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">					return</span><span style="color:#D19A66;--shiki-dark:#D19A66"> this.product.detailHtml.replace(</span><span style="color:#FFFFFF;--shiki-dark:#FFFFFF">/\\&lt;img/gi,'&lt;img</span><span style="color:#D19A66;--shiki-dark:#D19A66"> style</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"max-width:100%;height:auto;display:block;"</span><span style="color:#FFFFFF;--shiki-dark:#FFFFFF">');</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">				}</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">}</span></span></code></pre>
</div>`,r:{minutes:.48,words:145},t:"uniapp富文本rich-text图片适配",y:"a"}}],["/posts/Web/frontend-lib/fe-lib-vue-preview-pdf.html",{loader:()=>o(()=>import("./fe-lib-vue-preview-pdf.html-gkFDzeX9.js"),[]),meta:{d:1729494189e3,c:["Vue"],e:`
<h2>0. 前言</h2>
<ul>
<li>方式1：火狐</li>
<li>方式2：vue-pdf</li>
</ul>
<h2>1. 火狐集成使用</h2>
<ol>
<li>
<p>将pdf文件夹放在public 目录下</p>
<p>链接:<a href="https://pan.baidu.com/s/1RTSb0jGWQdZ3xk4TX9FgaA" target="_blank" rel="noopener noreferrer">https://pan.baidu.com/s/1RTSb0jGWQdZ3xk4TX9FgaA</a>  密码:g9c5</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404230919970.png" alt="image-20210515161010336" tabindex="0" loading="lazy"><figcaption>image-20210515161010336</figcaption></figure>
</li>
<li>
<p>将base64 设置到sessionStorage, 打开新窗口展示</p>
<div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">$post</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"getBase64PdfStr"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E06C75;--shiki-dark:#E06C75">params</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">then</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">((</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">res</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">=&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">res</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">code</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> ==</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 200</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">          let</span><span style="color:#E06C75;--shiki-dark:#E06C75"> base64PdfStr</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> res</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">data</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">          sessionStorage</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"_imgUrl"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E06C75;--shiki-dark:#E06C75">base64PdfStr</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">          window</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">location</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">href</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "/pdf/web/viewer.html"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      });</span></span></code></pre>
</div></li>
</ol>`,r:{minutes:.49,words:147},t:"vue实战 - 预览pdf",O:510,y:"a"}}],["/posts/Web/frontend-lib/vue-moment-time-format.html",{loader:()=>o(()=>import("./vue-moment-time-format.html-BoGGbOz0.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 全局导入方法</h2>
<ol>
<li>
<p>安装moment</p>
<div class="language-tex" data-ext="tex" data-title="tex"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">npm install moment --save</span></span></code></pre>
</div></li>
<li>
<p>main.js 引入注册</p>
<div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 导入时间插件momentjs</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E06C75;--shiki-dark:#E06C75"> moment</span><span style="color:#C678DD;--shiki-dark:#C678DD"> from</span><span style="color:#98C379;--shiki-dark:#98C379"> 'moment'</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 定义时间格式全局过滤器</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">Vue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">filter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">'dateFormat'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#C678DD;--shiki-dark:#C678DD">function</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">daraStr</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">pattern</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> 'YYYY-MM-DD HH:mm:ss'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">  return</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> moment</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E06C75;--shiki-dark:#E06C75">daraStr</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">format</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E06C75;--shiki-dark:#E06C75">pattern</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">})</span></span></code></pre>
</div></li>
<li>
<p>模板中使用</p>
<div class="language-vue" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">&lt;!-- 显示2019-12-05 10:10 --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#D19A66;--shiki-dark:#D19A66"> class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"time"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;{{nowDate | dateFormat('YYYY-MM-DD HH:mm')}}&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> &lt;!-- 显示10:10 --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#D19A66;--shiki-dark:#D19A66"> class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"time"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;{{nowDate | dateFormat('HH:mm')}}&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> &lt;!-- 显示2019-12-05 10:10:10 --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#D19A66;--shiki-dark:#D19A66"> class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"time"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;{{nowDate | dateFormat}}&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
</div></li>
</ol>`,r:{minutes:2.28,words:683},t:"moment时间格式化",y:"a"}}],["/posts/Web/frontend-problem/",{loader:()=>o(()=>import("./index.html-C0JWh3SA.js"),[]),meta:{d:17161632e5,l:"2024年5月20日",e:`<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>这里放置日常遇到的问题相关的内容</p>
</div>
<hr>
`,r:{minutes:.13,words:40},t:"遇到的问题",i:"question",O:9,y:"p"}}],["/posts/Web/frontend-problem/fe-npm-err-code-eresolve.html",{loader:()=>o(()=>import("./fe-npm-err-code-eresolve.html-DBUsB5QN.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 问题描述</h2>
<p>在使用npm install时遇到的问题</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>npm ERR! code ERESOLVE</span></span>
<span class="line"><span>npm ERR! ERESOLVE unable to resolve dependency tree</span></span>
<span class="line"><span>npm ERR!</span></span>
<span class="line"><span>npm ERR! While resolving: ruoyi@3.4.0</span></span>
<span class="line"><span>npm ERR! Found: webpack@5.35.0</span></span>
<span class="line"><span>npm ERR! node_modules/webpack</span></span>
<span class="line"><span>npm ERR!   peer webpack@"^4.0.0 || ^5.0.0" from html-webpack-plugin@4.5.2</span></span></code></pre>
</div>`,r:{minutes:.65,words:195},t:"npm install时遇到的问题 npm ERR! code ERESOLVE",y:"a"}}],["/posts/Web/frontend-problem/fe-request-localhost.html",{loader:()=>o(()=>import("./fe-request-localhost.html-q_DJBS-X.js"),[]),meta:{d:1729494189e3,c:["前端"],e:`
<h2>1. 背景</h2>
<p>我们项目有个功能需要调用内网服务（或客户机的本地服务)接口，比如前端在 12.12.11.0 服务器上，但是要访问内网的服务（或本地服务127.0.0.1），浏览器会报跨域</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>The request client is not a secure context and the resource is in more-private address space private.</span></span></code></pre>
</div>`,r:{minutes:.87,words:261},t:"前端问题 - 无法访问本地接口",y:"a"}}],["/posts/Web/frontend-vue/",{loader:()=>o(()=>import("./index.html-nfP-yBHk.js"),[]),meta:{d:1715904e6,l:"2024年5月17日",e:`<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>这里放置Vue相关的内容</p>
</div>
<hr>
`,r:{minutes:.1,words:30},t:"Vue",i:"vue",O:6,y:"p"}}],["/posts/Web/frontend-vue/Vue%E5%92%8CElement.html",{loader:()=>o(()=>import("./Vue和Element.html-7IFSXhR8.js"),[]),meta:{d:1729494189e3,e:`
<h2>1.1、Vue的介绍</h2>
<ul>
<li>Vue是一套构建用户界面的渐进式前端框架。</li>
<li>只关注视图层，并且非常容易学习，还可以很方便的与其它库或已有项目整合。</li>
<li>通过尽可能简单的API来实现响应数据的绑定和组合的视图组件。</li>
<li>特点<br>
易用：在有HTMLCSSJavaScript的基础上，快速上手。<br>
灵活：简单小巧的核心，渐进式技术栈，足以应付任何规模的应用。<br>
性能：20kbmin+gzip运行大小、超快虚拟DOM、最省心的优化。</li>
</ul>
<h2>1.2、Vue的快速入门</h2>
<ul>
<li><strong>开发步骤</strong></li>
</ul>`,r:{minutes:16.74,words:5023},t:"Vue 快速入门",y:"a"}}],["/posts/Web/frontend-vue/Vue%E5%92%8C%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B.html",{loader:()=>o(()=>import("./Vue和综合案例.html-CmKe3WUv.js"),[]),meta:{d:1729494189e3,e:`
<h2>1.1、自定义组件</h2>
<ul>
<li>
<p>学完了 Element 组件后，我们会发现组件其实就是自定义的标签。例如 就是对的封装。</p>
</li>
<li>
<p>本质上，组件是带有一个名字且可复用的 Vue 实例，我们完全可以自己定义。</p>
</li>
<li>
<p>定义格式</p>
<div class="language-tex" data-ext="tex" data-title="tex"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">Vue.component(组件名称, {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> props:组件的属性,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> data: 组件的数据函数,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> template: 组件解析的标签模板</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">})</span></span></code></pre>
</div></li>
<li>
<p><strong>代码实现</strong></p>
<div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;!</span><span style="color:#E06C75;--shiki-dark:#E06C75">DOCTYPE</span><span style="color:#D19A66;--shiki-dark:#D19A66"> html</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">html</span><span style="color:#D19A66;--shiki-dark:#D19A66"> lang</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"en"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">head</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">meta</span><span style="color:#D19A66;--shiki-dark:#D19A66"> charset</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"UTF-8"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">meta</span><span style="color:#D19A66;--shiki-dark:#D19A66"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"viewport"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> content</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"width=device-width, initial-scale=1.0"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">title</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;自定义组件&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">title</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">script</span><span style="color:#D19A66;--shiki-dark:#D19A66"> src</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"vue/vue.js"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">script</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">head</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">body</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#D19A66;--shiki-dark:#D19A66"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"div"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">my-button</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;我的按钮&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">my-button</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">body</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">script</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Vue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">component</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-button"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 属性</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        props</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:[</span><span style="color:#98C379;--shiki-dark:#98C379">"style"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">],</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 数据函数</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">        data</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#C678DD;--shiki-dark:#C678DD">function</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(){</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                msg</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span><span style="color:#98C379;--shiki-dark:#98C379">"我的按钮"</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        },</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //解析标签模板</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        template</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span><span style="color:#98C379;--shiki-dark:#98C379">"&lt;button style='color:red'&gt;{{msg}}&lt;/button&gt;"</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Vue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">({</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        el</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span><span style="color:#98C379;--shiki-dark:#98C379">"#div"</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    });</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">script</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">html</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
</ul>`,r:{minutes:12.85,words:3855},t:"Vue 综合案例",y:"a"}}],["/posts/Web/frontend-vue/vue-axios.html",{loader:()=>o(()=>import("./vue-axios.html-CDlccqzS.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. axios封装</h2>
<div class="language- line-numbers-mode" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>/**axios封装</span></span>
<span class="line"><span> * 请求拦截、相应拦截、错误统一处理</span></span>
<span class="line"><span> */</span></span>
<span class="line"><span>import axios from 'axios';</span></span>
<span class="line"><span>// import QS from 'qs';</span></span>
<span class="line"><span>import { Toast } from 'vant';</span></span>
<span class="line"><span>import store from '../store/index'</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 环境的切换</span></span>
<span class="line"><span>if (process.env.NODE_ENV == 'development') {    </span></span>
<span class="line"><span>    axios.defaults.baseURL = '/api';</span></span>
<span class="line"><span>} else if (process.env.NODE_ENV == 'debug') {    </span></span>
<span class="line"><span>    axios.defaults.baseURL = '';</span></span>
<span class="line"><span>} else if (process.env.NODE_ENV == 'production') {    </span></span>
<span class="line"><span>    axios.defaults.baseURL = 'http://api.123dailu.com/';</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 请求超时时间</span></span>
<span class="line"><span>axios.defaults.timeout = 10000;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// post请求头</span></span>
<span class="line"><span>axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=UTF-8';</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 请求拦截器</span></span>
<span class="line"><span>axios.interceptors.request.use(    </span></span>
<span class="line"><span>    config =&gt; {</span></span>
<span class="line"><span>        // 每次发送请求之前判断是否存在token，如果存在，则统一在http请求的header都加上token，不用每次请求都手动添加了</span></span>
<span class="line"><span>        // 即使本地存在token，也有可能token是过期的，所以在响应拦截器中要对返回状态进行判断</span></span>
<span class="line"><span>        // const token = store.state.token;        </span></span>
<span class="line"><span>        // token &amp;&amp; (config.headers.Authorization = token);        </span></span>
<span class="line"><span>        return config;    </span></span>
<span class="line"><span>    },    </span></span>
<span class="line"><span>    error =&gt; {        </span></span>
<span class="line"><span>        return Promise.error(error);    </span></span>
<span class="line"><span>    })</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 响应拦截器</span></span>
<span class="line"><span>axios.interceptors.response.use(    </span></span>
<span class="line"><span>    response =&gt; {       </span></span>
<span class="line"><span>       </span></span>
<span class="line"><span>        if (response.status === 200) {          </span></span>
<span class="line"><span>           return Promise.resolve(response);</span></span>
<span class="line"><span>        } else {      </span></span>
<span class="line"><span>            return Promise.reject(response);        </span></span>
<span class="line"><span>        }    </span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>    // 服务器状态码不是200的情况    </span></span>
<span class="line"><span>    error =&gt; {        </span></span>
<span class="line"><span>        if (error.response.status) {            </span></span>
<span class="line"><span>            switch (error.response.status) {                </span></span>
<span class="line"><span>                // 401: 未登录                </span></span>
<span class="line"><span>                // 未登录则跳转登录页面，并携带当前页面的路径                </span></span>
<span class="line"><span>                // 在登录成功后返回当前页面，这一步需要在登录页操作。                </span></span>
<span class="line"><span>                case 401:                    </span></span>
<span class="line"><span>                    router.replace({                        </span></span>
<span class="line"><span>                        path: '/login',                        </span></span>
<span class="line"><span>                        query: { redirect: router.currentRoute.fullPath } </span></span>
<span class="line"><span>                    });</span></span>
<span class="line"><span>                    break;</span></span>
<span class="line"><span>                // 403 token过期                </span></span>
<span class="line"><span>                // 登录过期对用户进行提示                </span></span>
<span class="line"><span>                // 清除本地token和清空vuex中token对象                </span></span>
<span class="line"><span>                // 跳转登录页面                </span></span>
<span class="line"><span>                case 403:                     </span></span>
<span class="line"><span>                    Toast({                        </span></span>
<span class="line"><span>                        message: '登录过期，请重新登录',                        </span></span>
<span class="line"><span>                        duration: 1000,                        </span></span>
<span class="line"><span>                        forbidClick: true                    </span></span>
<span class="line"><span>                    });                    </span></span>
<span class="line"><span>                    // 清除token                    </span></span>
<span class="line"><span>                    localStorage.removeItem('token');                    </span></span>
<span class="line"><span>                    store.commit('loginSuccess', null);                    </span></span>
<span class="line"><span>                    // 跳转登录页面，并将要浏览的页面fullPath传过去，登录成功后跳转需要访问的页面</span></span>
<span class="line"><span>                    setTimeout(() =&gt; {                        </span></span>
<span class="line"><span>                        router.replace({                            </span></span>
<span class="line"><span>                            path: '/login',                            </span></span>
<span class="line"><span>                            query: { </span></span>
<span class="line"><span>                                redirect: router.currentRoute.fullPath </span></span>
<span class="line"><span>                            }                        </span></span>
<span class="line"><span>                        });                    </span></span>
<span class="line"><span>                    }, 1000);                    </span></span>
<span class="line"><span>                    break; </span></span>
<span class="line"><span>                // 404请求不存在                </span></span>
<span class="line"><span>                case 404:                    </span></span>
<span class="line"><span>                    Toast({                        </span></span>
<span class="line"><span>                        message: '网络请求不存在',                        </span></span>
<span class="line"><span>                        duration: 1500,                        </span></span>
<span class="line"><span>                        forbidClick: true                    </span></span>
<span class="line"><span>                    });                    </span></span>
<span class="line"><span>                break;                </span></span>
<span class="line"><span>                // 其他错误，直接抛出错误提示                </span></span>
<span class="line"><span>                default:                    </span></span>
<span class="line"><span>                    Toast({                        </span></span>
<span class="line"><span>                        message: error.response.data.message,                        </span></span>
<span class="line"><span>                        duration: 1500,                        </span></span>
<span class="line"><span>                        forbidClick: true                    </span></span>
<span class="line"><span>                    });            </span></span>
<span class="line"><span>            }            </span></span>
<span class="line"><span>            return Promise.reject(error.response);        </span></span>
<span class="line"><span>        }       </span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>);</span></span>
<span class="line"><span>/** </span></span>
<span class="line"><span> * get方法，对应get请求 </span></span>
<span class="line"><span> * @param {String} url [请求的url地址] </span></span>
<span class="line"><span> * @param {Object} params [请求时携带的参数] </span></span>
<span class="line"><span> */</span></span>
<span class="line"><span>export function get(url, params){    </span></span>
<span class="line"><span>    return new Promise((resolve, reject) =&gt;{        </span></span>
<span class="line"><span>        axios.get(url, {            </span></span>
<span class="line"><span>            params: params        </span></span>
<span class="line"><span>        })        </span></span>
<span class="line"><span>        .then(res =&gt; {            </span></span>
<span class="line"><span>            resolve(res.data);        </span></span>
<span class="line"><span>        })        </span></span>
<span class="line"><span>        .catch(err =&gt; {            </span></span>
<span class="line"><span>            reject(err.data)        </span></span>
<span class="line"><span>        })    </span></span>
<span class="line"><span>    });</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>/** </span></span>
<span class="line"><span> * post方法，对应post请求 </span></span>
<span class="line"><span> * @param {String} url [请求的url地址] </span></span>
<span class="line"><span> * @param {Object} params [请求时携带的参数] </span></span>
<span class="line"><span> */</span></span>
<span class="line"><span>export function post(url, params) {    </span></span>
<span class="line"><span>    return new Promise((resolve, reject) =&gt; {         </span></span>
<span class="line"><span>        axios.post(url, params)        </span></span>
<span class="line"><span>        .then(res =&gt; {            </span></span>
<span class="line"><span>            resolve(res.data);        </span></span>
<span class="line"><span>        })        </span></span>
<span class="line"><span>        .catch(err =&gt; {  </span></span>
<span class="line"><span>            reject(err.data)        </span></span>
<span class="line"><span>        })    </span></span>
<span class="line"><span>    });</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>/** </span></span>
<span class="line"><span> * post方法，对应post请求  FORM表单形式</span></span>
<span class="line"><span> * @param {String} url [请求的url地址] </span></span>
<span class="line"><span> * @param {Object} params [请求时携带的参数] </span></span>
<span class="line"><span> */</span></span>
<span class="line"><span>export function postForm(url, params) {    </span></span>
<span class="line"><span>  return new Promise((resolve, reject) =&gt; {         </span></span>
<span class="line"><span>      axios.post(url, tansParams(params))        </span></span>
<span class="line"><span>      .then(res =&gt; {            </span></span>
<span class="line"><span>          resolve(res.data);        </span></span>
<span class="line"><span>      })        </span></span>
<span class="line"><span>      .catch(err =&gt; {  </span></span>
<span class="line"><span>          reject(err.data)        </span></span>
<span class="line"><span>      })    </span></span>
<span class="line"><span>  });</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>function tansParams(params) {</span></span>
<span class="line"><span>  let result = ''</span></span>
<span class="line"><span>  Object.keys(params).forEach((key) =&gt; {</span></span>
<span class="line"><span>    if (!Object.is(params[key], undefined) &amp;&amp; !Object.is(params[key], null)) {</span></span>
<span class="line"><span>      result += encodeURIComponent(key) + '=' + encodeURIComponent(params[key]) + '&amp;'</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>  })</span></span>
<span class="line"><span>  return result</span></span>
<span class="line"><span>}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.42,words:727},t:"axios网络请求封装",y:"a"}}],["/posts/Web/frontend-vue/vue-back-top.html",{loader:()=>o(()=>import("./vue-back-top.html-CYvqSpHM.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 实现方案</h2>
<h3>1.1 方案1</h3>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>window.scrollTo(0,0);</span></span></code></pre>
</div>`,r:{minutes:.13,words:38},t:"vue实现回到顶部的问题",y:"a"}}],["/posts/Web/frontend-vue/vue-component-communication.html",{loader:()=>o(()=>import("./vue-component-communication.html-DXSl8CSQ.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>vue是数据驱动视图更新的框架, 所以对于vue来说组件间的数据通信非常重要，那么组件之间如何进行数据通信的呢？</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404230924680.png" alt="image-20210608202150893" tabindex="0" loading="lazy"><figcaption>image-20210608202150893</figcaption></figure>
<p>如上图所示, A与B、A与C、B与D、C与E组件之间是父子关系； B与C之间是兄弟关系；A与D、A与E之间是隔代关系； D与E是堂兄关系（非直系亲属） 针对以上关系我们归类为：</p>`,r:{minutes:10.08,words:3024},t:"Vue中8种组件通信方式",y:"a"}}],["/posts/Web/frontend-vue/vue-deploy.html",{loader:()=>o(()=>import("./vue-deploy.html-CYMdYs1T.js"),[]),meta:{d:1729494189e3,e:`
<h2>1.简介</h2>
<h2>2.Vue部署配置</h2>
<h3>2.1 修改vue.config.js 文件</h3>
<p>主要修改module.exports</p>
<div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">module</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">exports</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  publicPath</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">"./"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  outputDir</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">'dist'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  assetsDir</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">'assets'</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  ...</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  }</span></span></code></pre>
</div>`,r:{minutes:2.52,words:756},t:"Vue前端部署",y:"a"}}],["/posts/Web/frontend-vue/vue-filter.html",{loader:()=>o(()=>import("./vue-filter.html-B-s-gP40.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<h3>1.1 作用</h3>
<p>Vue 过滤器用于一些常见的文本格式化</p>
<h3>1.2 在哪用</h3>
<ul>
<li>
<p>双花括号插值</p>
<div class="language-html" data-ext="html" data-title="html"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">&lt;!-- 在双花括号中 --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">{{ message | capitalize }}</span></span></code></pre>
</div></li>
<li>
<p><code>v-bind</code> 表达式</p>
<div class="language-html" data-ext="html" data-title="html"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">&lt;!-- 在 \`v-bind\` 中 --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#D19A66;--shiki-dark:#D19A66"> v-bind:id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"rawId | formatId"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
</div></li>
</ul>`,r:{minutes:1.68,words:503},t:"Vue过滤器",y:"a"}}],["/posts/Web/frontend-vue/vue-introduce-picture-path.html",{loader:()=>o(()=>import("./vue-introduce-picture-path.html-D5JIryx_.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. vue中静态资源的引入机制</h2>
<blockquote>
<p>Vue.js关于静态资源的<a href="https://cli.vuejs.org/zh/guide/html-and-static-assets.html#%E5%A4%84%E7%90%86%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90" target="_blank" rel="noopener noreferrer">官方文档</a></p>
</blockquote>
<p>静态资源可以通过两种方式进行处理：</p>
<ol>
<li>在 JavaScript 被导入或在 template/CSS 中通过相对路径(以 . 开头)被引用。这类引用会被 webpack 处理。
<ul>
<li>诸如 <code>&lt;img src="..."&gt;</code>、<code>background: url(...)</code> 和 <code>CSS @import</code> 的资源
<ul>
<li>写在 template 中内联 style 的 <code>background: url(...)</code> 样式，在当前版本的测试中，即使使用了相对路径也不会被webpack处理</li>
</ul>
</li>
<li>例如，<code>url(./image.png)</code> 会被翻译为 <code>require('./image.png')</code></li>
</ul>
</li>
<li>放置在 <code>public</code> 目录下或通过绝对路径被引用。这类资源将会直接被拷贝，而不会经过 webpack 的处理，你需要通过绝对路径来引用它们。
<ul>
<li>如果 URL 是一个绝对路径，例如 <code>/images/foo.png</code> ，它将会被保留不变。</li>
</ul>
</li>
</ol>`,r:{minutes:2.33,words:698},t:"Vuejs中引入图片路径的几种方式",y:"a"}}],["/posts/Web/frontend-vue/vue-online-compress.html",{loader:()=>o(()=>import("./vue-online-compress.html-Coyo7sT_.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 问题背景</h2>
<h2>2.修改</h2>
<h2>参考文章、</h2>
<p><a href="https://segmentfault.com/q/1010000021889020" target="_blank" rel="noopener noreferrer">https://segmentfault.com/q/1010000021889020</a></p>
`,r:{minutes:.09,words:28},t:"Vue打包指定不压缩-排查线上问题",y:"a"}}],["/posts/Web/frontend-vue/vue-page-no-updates.html",{loader:()=>o(()=>import("./vue-page-no-updates.html-Q4NA0s4M.js"),[]),meta:{d:1729494189e3,e:`
<h2>1.简介</h2>
<p>vue双向绑定是非常好用的一个特性，但是有些情况数据更新了，但是页面却没有更新。这时候总让人摸不着头脑，以下便总结遇到此种情况的7种原因</p>
<h2>2.没有更新的7种原因</h2>
<h3>2.1 Vue 无法检测实例被创建时不存在于 <code>data</code> 中的 property</h3>
<blockquote>
<p>原因：由于 Vue 会在初始化实例时对 property 执行 <code>getter/setter</code> 转化，所以 property 必须在 <code>data</code> 对象上存在才能让 Vue 将它转换为响应式的。</p>
</blockquote>`,r:{minutes:6.78,words:2034},t:"Vue数据更新了但页面没有更新的7种情况",y:"a"}}],["/posts/Web/frontend-vue/vue-plugin.html",{loader:()=>o(()=>import("./vue-plugin.html-DBKhtwXO.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>Vue 插件主要用来添加<strong>全局功能</strong>，功能指的是什么？只是一个全局方法吗？肯定不是。</p>
<ol>
<li>添加全局方法或者 property。如：<a href="https://github.com/karol-f/vue-custom-element" target="_blank" rel="noopener noreferrer">vue-custom-element</a></li>
<li>添加全局资源：指令/过滤器/过渡等。如 <a href="https://github.com/vuejs/vue-touch" target="_blank" rel="noopener noreferrer">vue-touch</a></li>
<li>通过全局混入来添加一些组件选项。如 <a href="https://github.com/vuejs/vue-router" target="_blank" rel="noopener noreferrer">vue-router</a></li>
<li>添加 Vue 实例方法，通过把它们添加到 <code>Vue.prototype</code> 上实现。</li>
<li>一个库，提供自己的 API，同时提供上面提到的一个或多个功能。如 <a href="https://github.com/vuejs/vue-router" target="_blank" rel="noopener noreferrer">vue-router</a></li>
</ol>`,r:{minutes:1.26,words:377},t:"Vue插件",y:"a"}}],["/posts/Web/frontend-vue/vue-shake-instructions.html",{loader:()=>o(()=>import("./vue-shake-instructions.html-UyBxBjV1.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 背景</h2>
<p>项目中经常会遇到说，一个按钮因为网络IO等问题，可能还在请求过程中，用户连续点击。导致重复发送请求。</p>
<p>这种情况下我们使用防抖/节流就能很好的解决，实现得方案有很多，但是自定义指令的方式是最简单的。后面有需要使用防抖的地方只要使用改指令即可。</p>
<h2>2. 原始情况</h2>
<div class="language-html" data-ext="html" data-title="html"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">button</span><span style="color:#D19A66;--shiki-dark:#D19A66"> @click</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"sayHello"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;提交&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">button</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
</div>`,r:{minutes:2.58,words:773},t:"Vue自定义防抖指令",y:"a"}}],["/posts/Web/frontend-vue/vue-v-for.html",{loader:()=>o(()=>import("./vue-v-for.html-CHd6kJcm.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 基础准备</h2>
<ol>
<li>
<p>定义数据</p>
<div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">export</span><span style="color:#C678DD;--shiki-dark:#C678DD"> default</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">    data</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(){</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            list</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:[</span><span style="color:#98C379;--shiki-dark:#98C379">"a"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">"b"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">"c"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">"d"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">"e"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">],</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            web</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:{</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">                "百度"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span><span style="color:#98C379;--shiki-dark:#98C379">"https://www.baidu.com"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">                "搜狐"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span><span style="color:#98C379;--shiki-dark:#98C379">"https://www.sohu.com"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">                "新浪"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span><span style="color:#98C379;--shiki-dark:#98C379">"https://www.sina.com"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">                "淘宝"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span><span style="color:#98C379;--shiki-dark:#98C379">"https://www.taobao.com"</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
</div></li>
<li>
<p>html结构</p>
<div class="language-html" data-ext="html" data-title="html"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#D19A66;--shiki-dark:#D19A66"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"test"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;{{ list }}&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;{{ web }}&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
</div></li>
<li>
<p>输出结果<br>
<img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/20201210162547578.png" alt="20201210162547578" loading="lazy"></p>
</li>
</ol>`,r:{minutes:1.3,words:390},t:"Vue指令v-for之遍历输出JavaScript数组，json对象的几种方式",y:"a"}}],["/posts/Web/frontend-vue/vue-watch.html",{loader:()=>o(()=>import("./vue-watch.html-XbU6QlHG.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 背景</h2>
<p>我们有个场景，需要监听表单中任意一个属性变化，再将变化通过vuex 传递给其他组件使用。因为实时性要求高，且字段多。并不想每个字段变化后去触发事件。</p>
<ul>
<li>
<p>需求：</p>
<p>我们watch监听对象内的属性变化</p>
</li>
<li>
<p>问题</p>
<p>现在我们正常的写法，只能监听对象的变化，对象内的属性变化并不会被监听到</p>
</li>
<li>
<p>案例</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>new Vue({</span></span>
<span class="line"><span>  data: {</span></span>
<span class="line"><span>    count: 10，</span></span>
<span class="line"><span>    blog:{</span></span>
<span class="line"><span>        title:'my-blog',</span></span>
<span class="line"><span>        categories:[]</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>  },</span></span>
<span class="line"><span>  watch: {</span></span>
<span class="line"><span>    count: function (newval, oldVal) {</span></span>
<span class="line"><span>      console.log(\`new: %s, old: %s\`, newVal, oldVal);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>})</span></span></code></pre>
</div><p>上述情况里<code>data</code>中的<code>count</code>属性可以直接监听，但是如果需要监听的数据是对象内的某一属性值的变化，直接<code>watch</code>对象<code>blog</code>是检测不到变化的，这是因为<code>blog</code>这个对象的指向并没有发生改变。</p>
</li>
</ul>`,r:{minutes:1.52,words:455},t:"Vue中watch监听对象内属性的方法",y:"a"}}],["/posts/Web/frontend-vue/vue-x-lib-package.html",{loader:()=>o(()=>import("./vue-x-lib-package.html-gU17Ba42.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 开发组件</h2>
<p>开发组件的过程并无特殊之处，跟平时在Vue项目里定义component是一样的。有一点需要注意的是，平时在Vue项目里，组件的name可以不写，但如果要打包成库，组件的name必须写。为了描述方便，我们把将要打包的组件定义为MyCom1、MyCom2。其示例代码如下：</p>
<div class="language-vue" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">template</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">div</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">template</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">script</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">export</span><span style="color:#C678DD;--shiki-dark:#C678DD"> default</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">"MyCom1"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">};</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">script</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
</div>`,r:{minutes:3.71,words:1112},t:"Vue实战 - Vue组件打包成库",y:"a"}}],["/posts/Web/frontend-vue/vuerouter-dynamic-route-matching.html",{loader:()=>o(()=>import("./vuerouter-dynamic-route-matching.html-t1Y_HzP8.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 背景</h2>
<blockquote>
<p>我们经常需要把某种模式匹配到的所有路由，<strong>全都映射到同个组件</strong></p>
</blockquote>
<p>n 个url地址，映射到通过组件</p>
<h2>2. 动态路径参数（冒号开头）</h2>
<p>我们有一个 <code>User</code> 组件，对于所有 ID 各不相同的用户，都要使用这个组件来渲染。那么，我们可以在 <code>vue-router</code> 的路由路径中使用“动态路径参数”(dynamic segment) 来达到这个效果：</p>
<div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">const</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> User</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  template</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">'&lt;div&gt;User&lt;/div&gt;'</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">const</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> router</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> VueRouter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">({</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  routes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: [</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 动态路径参数 以冒号开头</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    { </span><span style="color:#E06C75;--shiki-dark:#E06C75">path</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">'/user/:id'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E06C75;--shiki-dark:#E06C75">component</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#E06C75;--shiki-dark:#E06C75">User</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  ]</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">})</span></span></code></pre>
</div>`,r:{minutes:2.03,words:609},t:"Vue Router动态路由匹配",y:"a"}}],["/posts/Web/frontend-vue/vuerouter-history.html",{loader:()=>o(()=>import("./vuerouter-history.html-DacZv5hv.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 背景</h2>
<p><code>vue-router</code> 默认 hash 模式 —— 使用 URL 的 hash 来模拟一个完整的 URL，<strong>于是当 URL 改变时，页面不会重新加载</strong>。</p>
<p>如果不想要很丑的 hash，我们可以用路由的 <strong>history 模式</strong>，这种模式充分利用 <code>history.pushState</code> API 来完成 URL 跳转而无须重新加载页面。</p>
<div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">const</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> router</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> VueRouter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">({</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  mode</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">'history'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  routes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: [...]</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">})</span></span></code></pre>
</div>`,r:{minutes:3.32,words:995},t:"Vue实战 - VueRouter History模式",y:"a"}}],["/posts/Web/frontend-vue/vuerouter-overview.html",{loader:()=>o(()=>import("./vuerouter-overview.html-DD3rWyZd.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>官方文档介绍如下</p>
<blockquote>
<p>Vue Router 是  Vue.js 官方的路由管理器，适合用于构建单页面应用。包含的功能有：</p>
<ul>
<li>嵌套的路由/视图表</li>
<li>模块化的、基于组件的路由配置</li>
<li>路由参数、查询、通配符</li>
<li>基于 Vue.js 过渡系统的视图过渡效果</li>
<li>细粒度的导航控制</li>
<li>带有自动激活的 CSS class 的链接</li>
<li>HTML5 历史模式或 hash 模式，在 IE9 中自动降级</li>
<li>自定义的滚动条行为</li>
</ul>
</blockquote>`,r:{minutes:2.42,words:727},t:"VueRouter概念",y:"a"}}],["/posts/Web/frontend-vue/vuerouter-route-jump.html",{loader:()=>o(()=>import("./vuerouter-route-jump.html-C41NeNXJ.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简单的跳转</h2>
<div class="language-vue" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">router-link</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> :</span><span style="color:#D19A66;--shiki-dark:#D19A66">to</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">...</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
</div>`,r:{minutes:1.38,words:414},t:"Vue Router路由跳转",y:"a"}}],["/posts/Web/frontend-vue/vuex-action.html",{loader:()=>o(()=>import("./vuex-action.html-BRXXBwdw.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 安装</h2>
<p>npm install vuex --save</p>
<h2>2. 代码</h2>
<div class="language-text" data-ext="text" data-title="text"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>├── src                    </span></span>
<span class="line"><span>│   ├── store            </span></span>
<span class="line"><span>|			├── modules</span></span>
<span class="line"><span>|				├── user.js</span></span>
<span class="line"><span>│   		└── mymodule.js</span></span>
<span class="line"><span>│   	├── getters.js</span></span>
<span class="line"><span>|			├── index.js</span></span>
<span class="line"><span>|── main.js</span></span></code></pre>
</div>`,r:{minutes:1.05,words:315},t:"Vuex实战",y:"a"}}],["/posts/Web/frontend-vue/vuex-overview.html",{loader:()=>o(()=>import("./vuex-overview.html-B0J6LdZv.js"),[]),meta:{d:1729494189e3,e:`
<h2>1.  是什么？</h2>
<p>官方文档介绍如下</p>
<blockquote>
<p>Vuex 是一个专为 Vue.js 应用程序开发的<strong>状态管理模式</strong>。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。</p>
</blockquote>
<p>Vue提供的状态管理工具，用于统一管理我们项目中各种数据的交互和重用，存储我们需要用到数据对象。</p>
<p>简而言之：全局状态管理工具，共享变量</p>
<h2>2. 为什么需要？</h2>
<p>官网举了一个例子，多个组件共享状态面临的问题</p>
<ul>
<li>
<p>多个视图依赖于同一状态</p>
<p>传参的方法对于多层嵌套的组件将会非常繁琐，并且对于兄弟组件间的状态传递无能为力</p>
</li>
<li>
<p>来自不同视图的行为需要变更同一状态</p>
<p>我们经常会采用父子组件直接引用或者通过事件来变更和同步状态的多份拷贝。以上的这些模式非常脆弱，通常会导致无法维护的代码。</p>
</li>
</ul>`,r:{minutes:3.69,words:1106},t:"Vuex",y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Maven/Maven%E9%AB%98%E7%BA%A7.html",{loader:()=>o(()=>import("./Maven高级.html-BFEkG8ag.js"),[]),meta:{d:1729494189e3,e:`
<h2>1)分模块开发与设计</h2>
<h3><strong>1.1)工程模块与模块划分</strong></h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111633851.png" alt="1592058795771" tabindex="0" loading="lazy"><figcaption>1592058795771</figcaption></figure>
<h3><strong>1.2)ssm_pojo拆分</strong></h3>
<p>新建模块</p>`,r:{minutes:9.84,words:2953},t:"Maven高级",y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/",{loader:()=>o(()=>import("./index.html-DjLN0_oK.js"),[]),meta:{d:17204832e5,l:"2024年7月9日",e:`<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>这里放置Spring相关的内容</p>
</div>
<hr>
`,r:{minutes:.09,words:28},t:"Spring",O:1,y:"p"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/Spring-day01.html",{loader:()=>o(()=>import("./Spring-day01.html-Cx1pR0Tv.js"),[]),meta:{d:1729494189e3,e:`
<h2>1 Spring简介</h2>
<h3>1.1 什么是框架</h3>
<ul>
<li>
<p>源自于建筑学,隶属土木工程,后发展到软件工程领域</p>
</li>
<li>
<p>软件工程框架：经过验证的,具有一定功能的,半成品软件</p>
<ul>
<li>
<p>经过验证</p>
</li>
<li>
<p>具有一定功能</p>
</li>
<li>
<p>半成品</p>
</li>
</ul>
</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111601015.png" alt="1590631254933" tabindex="0" loading="lazy"><figcaption>1590631254933</figcaption></figure>`,r:{minutes:11.59,words:3477},t:"Spring-day01   IoC",y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/Spring-day02.html",{loader:()=>o(()=>import("./Spring-day02.html-C2eSCbkq.js"),[]),meta:{d:1729494189e3,e:`
<h2>1)注解驱动的意义</h2>
<h3>1.1)什么是注解驱动</h3>
<p>注解启动时使用注解的形式替代xml配置，将繁杂的spring配置文件从工程中彻底消除掉，简化书写</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111606028.png" alt="1591023265469" tabindex="0" loading="lazy"><figcaption>1591023265469</figcaption></figure>
<h3>1.2)注解驱动的弊端</h3>`,r:{minutes:10.41,words:3123},t:"注解开发",y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/Spring-day03.html",{loader:()=>o(()=>import("./Spring-day03.html-BMFM5Sa-.js"),[]),meta:{d:1729494189e3,e:`
<h2>1)AOP简介</h2>
<h3>1.1)OOP开发思路</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111606123.png" alt="1591281580135" tabindex="0" loading="lazy"><figcaption>1591281580135</figcaption></figure>
<h3>1.2)AOP开发思想</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111606175.png" alt="1591281706237" tabindex="0" loading="lazy"><figcaption>1591281706237</figcaption></figure>`,r:{minutes:20.21,words:6064},t:"AOP",y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-day04.html",{loader:()=>o(()=>import("./spring-day04.html-CE-VhYjw.js"),[]),meta:{d:1729494189e3,e:`
<h2>1)事务回顾</h2>
<h3>1.1)什么是事务？</h3>
<p>事务指数据库中多个操作合并在一起形成的操作序列</p>
<h3>1.2)事务的作用</h3>
<p>1.当数据库操作序列中个别操作失败时，提供一种方式使数据库状态恢复到正常状态（<strong>A</strong>），保障数据库即使在异常状态下仍能保持数据一致性（<strong>C</strong>）（要么操作前状态，要么操作后状态）。</p>
<p>2.当出现并发访问数据库时，在多个访问间进行相互隔离，防止并发访问操作结果互相干扰（<strong>I</strong>）。</p>
<ul>
<li>
<p>事务特征（ACID）</p>
<ul>
<li>
<p>原子性（Atomicity）指事务是一个不可分割的整体，其中的操作要么全执行或全不执行</p>
</li>
<li>
<p>一致性（Consistency）事务前后数据的完整性必须保持一致</p>
</li>
<li>
<p>隔离性（Isolation）事务的隔离性是多个用户并发访问数据库时，数据库为每一个用户开启的事务，不能被其他事务的操作数据所干扰，多个并发事务之间要相互隔离</p>
</li>
<li>
<p>持久性（Durability）持久性是指一个事务一旦被提交，它对数据库中数据的改变就是永久性的，接下来即使数据库发生故障也不应该对其有任何影响</p>
</li>
</ul>
</li>
</ul>`,r:{minutes:8.73,words:2620},t:"spring 事务",y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-overview.html",{loader:()=>o(()=>import("./spring-overview.html-iIQCqkbv.js"),[]),meta:{d:1729494189e3,g:null,e:`
<blockquote>
<p>Spring是什么？它是怎么诞生的？有哪些主要的组件和核心功能呢? 本文通过这几个问题帮助你构筑Spring和Spring Framework的整体认知</p>
</blockquote>
<h2>1. 什么是Spring</h2>
<h3>1.1 概念</h3>
<p>Spring 是一种轻量级开发框架，<strong>旨在提高开发人员的开发效率以及系统的可维护性</strong>。</p>
<p>我们一般说的Spring框架指的都是Spring Framwork，他是很多模块的集合，使用这些模块可以很方便地协助我们进行开发</p>
<h3>1.2 Spring的起源</h3>`,r:{minutes:9.79,words:2937},t:"Spring基础 - Spring和Spring框架组成",O:10,y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-x-cyclic-dependence.html",{loader:()=>o(()=>import("./spring-x-cyclic-dependence.html-BOYbXRrW.js"),[]),meta:{d:1729494189e3,g:null,e:`
<p>我们都知道 Spring 是通过三级缓存来解决循环依赖的，但是解决循环依赖真的需要使用到三级缓冲吗？只使用两级缓存是否可以呢？本篇文章就 Spring 是如何使用三级缓存解决循环依赖作为引子，验证两级缓存是否可以解决循环依赖。</p>
<h2>1. 循环依赖</h2>
<p>既然要解决循环依赖，那么就要知道循环依赖是什么。如下图所示：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231623803.png" alt="image-20221201223817058" tabindex="0" loading="lazy"><figcaption>image-20221201223817058</figcaption></figure>`,r:{minutes:9,words:2701},t:"Spring进阶 - Spring解决循环依赖必须要三级缓存吗?",O:92,y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-x-framework-aop-source-1.html",{loader:()=>o(()=>import("./spring-x-framework-aop-source-1.html-BPgoi4h2.js"),[]),meta:{d:1729494189e3,g:null,e:`
<blockquote>
<p>前文，我们分析了Spring IOC的初始化过程和Bean的生命周期等，而Spring AOP也是基于IOC的Bean加载来实现的。本文主要介绍Spring AOP原理解析的切面实现过程（将切面类的所有切面方法根据使用的注解生成对应Advice，并将Advice连同切入点匹配器和切面类等信息一并封装到Advisor，为后续交给代理增强实现做准备的过程）</p>
</blockquote>
<h2>1. 引入</h2>
<blockquote>
<p>我们应该从哪里开始着手看Spring AOP的源码呢？和我们上文分析的IOC源码实现有什么关系呢？</p>
</blockquote>`,r:{minutes:11.37,words:3410},t:"Spring进阶 - Spring AOP实现原理详解之AOP切面的实现",O:100,y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-x-framework-aop-source-2.html",{loader:()=>o(()=>import("./spring-x-framework-aop-source-2.html-B0nuBg7H.js"),[]),meta:{d:1729494189e3,g:null,e:`
<blockquote>
<p>上文我们介绍了Spring AOP原理解析的切面实现过程(将切面类的所有切面方法根据使用的注解生成对应Advice，并将Advice连同切入点匹配器和切面类等信息一并封装到Advisor)。本文在此基础上继续介绍，代理（cglib代理和JDK代理）的创建过程。</p>
</blockquote>
<h2>1. 引入</h2>
<blockquote>
<p>前文主要Spring AOP原理解析的切面实现过程(加载配置，将切面类的所有切面方法根据使用的注解生成对应Advice，并将Advice连同切入点匹配器和切面类等信息一并封装到Advisor)。</p>
</blockquote>`,r:{minutes:5.77,words:1731},t:"Spring进阶 - Spring AOP实现原理详解之AOP代理的创建",O:110,y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-x-framework-aop-source-3.html",{loader:()=>o(()=>import("./spring-x-framework-aop-source-3.html-BIsixZma.js"),[]),meta:{d:1729494189e3,g:null,e:`
<blockquote>
<p>我们在前文中已经介绍了SpringAOP的切面实现和创建动态代理的过程，那么动态代理是如何工作的呢？本文主要介绍Cglib动态代理的案例和SpringAOP实现的原理。</p>
</blockquote>
<h2>1. 引入</h2>
<blockquote>
<p>我们在前文中已经介绍了SpringAOP的切面实现和创建动态代理的过程，那么动态代理是如何工作的呢？本文主要介绍Cglib动态代理的案例和SpringAOP实现的原理。</p>
</blockquote>
<p>要了解动态代理是如何工作的，首先需要了解</p>
<ul>
<li>什么是代理模式？</li>
<li>什么是动态代理？</li>
<li>什么是Cglib？</li>
<li>SpringAOP和Cglib是什么关系？</li>
</ul>`,r:{minutes:9.82,words:2947},t:"Spring进阶 - Spring AOP实现原理详解之Cglib代理实现",O:130,y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-x-framework-aop-source-4.html",{loader:()=>o(()=>import("./spring-x-framework-aop-source-4.html-CmE0DzDj.js"),[]),meta:{d:1729494189e3,e:`
<blockquote>
<p>上文我们学习了SpringAOP Cglib动态代理的实现，本文主要是SpringAOP JDK动态代理的案例和实现部分。</p>
</blockquote>
<h2>1. 引入</h2>
<blockquote>
<p>上文我们学习了SpringAOP Cglib动态代理的实现，本文主要是SpringAOP JDK动态代理的案例和实现部分。</p>
</blockquote>
<h3>1.1 什么是JDK代理?</h3>
<p>JDK动态代理是由 JDK提供的工具类Proxy实现的，动态代理类是在运行时生成指定接口的代理类，每个代理实例（实现需要代理的接口）都有一个关联的调用处理程序对象，此对象实现了InvocationHandler，最终的业务逻辑是在InvocationHandler实现类的invoke方法上。</p>`,r:{minutes:10.75,words:3226},t:"Spring进阶 - Spring AOP实现原理详解之JDK代理实现",O:140,y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-x-framework-aop.html",{loader:()=>o(()=>import("./spring-x-framework-aop.html-BcyvxGLy.js"),[]),meta:{d:1729494189e3,g:null,e:`
<blockquote>
<p>在<a href="https://pdai.tech/md/spring/spring-x-framework-helloworld.html" target="_blank" rel="noopener noreferrer">Spring基础 - Spring简单例子引入Spring的核心</a>中向你展示了AOP的基础含义，同时以此发散了一些AOP相关知识点; 本节将在此基础上进一步解读AOP的含义以及AOP的使用方式。</p>
</blockquote>
<h2>1. 引入</h2>
<blockquote>
<p>我们在<a href="https://pdai.tech/md/spring/spring-x-framework-helloworld.html" target="_blank" rel="noopener noreferrer">Spring基础 - Spring简单例子引入Spring的核心</a>中向你展示了AOP的基础含义，同时以此发散了一些AOP相关知识点。</p>
</blockquote>`,r:{minutes:27.11,words:8134},t:"Spring基础 - Spring核心之面向切面编程(AOP)",O:40,y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-x-framework-helloworld.html",{loader:()=>o(()=>import("./spring-x-framework-helloworld.html-DzkAqIj4.js"),[]),meta:{d:1729494189e3,g:null,e:`
<blockquote>
<p><a href="https://pdai.tech/md/spring/spring-x-framework-introduce.html" target="_blank" rel="noopener noreferrer">上文</a>中我们简单介绍了Spring和Spring Framework的组件，那么这些Spring Framework组件是如何配合工作的呢？本文主要承接上文，向你展示Spring Framework组件的典型应用场景和基于这个场景设计出的简单案例，并以此引出Spring的核心要点，比如IOC和AOP等；在此基础上还引入了不同的配置方式， 如XML，Java配置和注解方式的差异。</p>
</blockquote>`,r:{minutes:9.87,words:2960},t:"Spring基础 - Spring简单例子引入Spring要点",O:20,y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-x-framework-ioc-source-1.html",{loader:()=>o(()=>import("./spring-x-framework-ioc-source-1.html-CO_4-_Rr.js"),[]),meta:{d:1729494189e3,g:null,e:`
<blockquote>
<p>在对IoC有了初步的认知后，我们开始对IOC的实现原理进行深入理解。本文将帮助你站在设计者的角度去看IOC最顶层的结构设计。</p>
</blockquote>
<h2>1. 站在设计者的角度考虑设计IOC容器</h2>
<blockquote>
<p>如果让你来设计一个IoC容器，你会怎么设计？我们初步的通过这个问题，来帮助我们更好的理解IOC的设计。</p>
</blockquote>
<p>在设计时，首先需要考虑的是IOC容器的功能（输入和输出), 承接前面的文章，我们初步的画出IOC容器的整体功能。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231635619.png" alt="image-20220711211622924" tabindex="0" loading="lazy"><figcaption>image-20220711211622924</figcaption></figure>`,r:{minutes:9.83,words:2950},t:"Spring进阶- Spring IOC实现原理详解之IOC体系结构设计",O:70,y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-x-framework-ioc-source-2.html",{loader:()=>o(()=>import("./spring-x-framework-ioc-source-2.html-3zx3iPAr.js"),[]),meta:{d:1729494189e3,g:null,e:`
<blockquote>
<p>上文，我们看了IOC设计要点和设计结构；紧接着这篇，我们可以看下源码的实现了：Spring如何实现将资源配置（以xml配置为例）通过加载，解析，生成BeanDefination并注册到IoC容器中的</p>
</blockquote>
<h2>1. 引入</h2>
<p>上文，我们看了IOC设计要点和设计结构；紧接着这篇，我们可以看下源码的实现了：Spring如何实现将资源配置（以xml配置为例）通过加载，解析，生成BeanDefination并注册到IoC容器中的（就是我们圈出来的部分）</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231636295.png" alt="image-20220711215020687" tabindex="0" loading="lazy"><figcaption>image-20220711215020687</figcaption></figure>`,r:{minutes:16.11,words:4832},t:"Spring进阶 - Spring IOC实现原理详解之IOC初始化流程",y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-x-framework-ioc-source-3.html",{loader:()=>o(()=>import("./spring-x-framework-ioc-source-3.html-DaSqNqZh.js"),[]),meta:{d:1729494189e3,g:null,e:`
<blockquote>
<p>上文，我们看了IOC设计要点和设计结构；以及Spring如何实现将资源配置（以xml配置为例）通过加载，解析，生成BeanDefination并注册到IoC容器中的；容器中存放的是Bean的定义即BeanDefinition放到beanDefinitionMap中，本质上是一个<code>ConcurrentHashMap&lt;String, Object&gt;</code>；并且BeanDefinition接口中包含了这个类的Class信息以及是否是单例等。那么如何从BeanDefinition中实例化Bean对象呢，这是本文主要研究的内容？</p>
</blockquote>`,r:{minutes:17.72,words:5317},t:"Spring进阶 - Spring IOC实现原理详解之Bean实例化(生命周期,循环依赖等)",O:90,y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-x-framework-ioc-source-31.html",{loader:()=>o(()=>import("./spring-x-framework-ioc-source-31.html-DZJmJ2ei.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 引言</h2>
<p>“请你描述下 Spring Bean 的生命周期？”，这是面试官考察 Spring 的常用问题，可见是 Spring 中很重要的知识点。</p>
<p>我之前在准备面试时，去网上搜过答案，大多以下图给出的流程作为答案。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231643735.png" alt="image-20220927222208029" tabindex="0" loading="lazy"><figcaption>image-20220927222208029</figcaption></figure>`,r:{minutes:5.73,words:1720},t:"Spring进阶 - Spring Bean生命周期(补充)",O:91,y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-x-framework-ioc.html",{loader:()=>o(()=>import("./spring-x-framework-ioc.html-a-SsCtE6.js"),[]),meta:{d:1729494189e3,g:null,e:`
<blockquote>
<p>在<a href="https://pdai.tech/md/spring/spring-x-framework-helloworld.html" target="_blank" rel="noopener noreferrer">Spring基础 - Spring简单例子引入Spring的核心</a>中向你展示了IoC的基础含义，同时以此发散了一些IoC相关知识点; 本节将在此基础上进一步解读IOC的含义以及IOC的使用方式。</p>
</blockquote>
<h2>1. 引入</h2>
<blockquote>
<p>我们在<a href="https://pdai.tech/md/spring/spring-x-framework-helloworld.html" target="_blank" rel="noopener noreferrer">Spring基础 - Spring简单例子引入Spring的核心</a>中向你展示了IoC的基础含义，同时以此发散了一些IoC相关知识点。</p>
</blockquote>`,r:{minutes:18.52,words:5557},t:"Spring基础 - Spring核心之控制反转(IOC)",O:30,y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-x-framework-springmvc-source-1.html",{loader:()=>o(()=>import("./spring-x-framework-springmvc-source-1.html-XJ5V8um7.js"),[]),meta:{d:1729494189e3,g:null,e:`
<blockquote>
<p>前文我们有了IOC的源码基础以及SpringMVC的基础，我们便可以进一步深入理解SpringMVC主要实现原理，包含DispatcherServlet的初始化过程和DispatcherServlet处理请求的过程的源码解析。本文是第一篇：DispatcherServlet的初始化过程的源码解析。</p>
</blockquote>
<h2>1. DispatcherServlet和ApplicationContext有何关系？</h2>
<blockquote>
<p>DispatcherServlet 作为一个 Servlet，需要根据 Servlet 规范使用 Java 配置或 web.xml 声明和映射。反过来，DispatcherServlet 使用 Spring 配置来发现请求映射、视图解析、异常处理等等所需的委托组件。那它和ApplicationContext有和关系呢？如下内容可以参考<a href="https://docs.spring.io/spring-framework/docs/current/reference/html/web.html#mvc-servlet" target="_blank" rel="noopener noreferrer">官网-SpringMVC文档</a></p>
</blockquote>`,r:{minutes:10.95,words:3284},t:"Spring进阶 - SpringMVC实现原理之DispatcherServlet的初始化过程",O:160,y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-x-framework-springmvc-source-2.html",{loader:()=>o(()=>import("./spring-x-framework-springmvc-source-2.html-RzPy4pv2.js"),[]),meta:{d:1729494189e3,g:null,e:`
<blockquote>
<p>前文我们有了IOC的源码基础以及SpringMVC的基础，我们便可以进一步深入理解SpringMVC主要实现原理，包含DispatcherServlet的初始化过程和DispatcherServlet处理请求的过程的源码解析。本文是第二篇：DispatcherServlet处理请求的过程的源码解析</p>
</blockquote>
<h2>1. DispatcherServlet处理请求的过程？</h2>
<blockquote>
<p>一个请求发出，经过DispatcherServlet进行了什么样的处理，最后将内容返回的呢？</p>
</blockquote>`,r:{minutes:7.8,words:2339},t:"Spring进阶 - SpringMVC实现原理之DispatcherServlet处理请求的过程",O:170,y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-x-framework-springmvc.html",{loader:()=>o(()=>import("./spring-x-framework-springmvc.html-CK8q11wZ.js"),[]),meta:{d:1729494189e3,c:["Spring"],g:null,e:`
<blockquote>
<p>前文我们介绍了Spring框架和Spring框架中最为重要的两个技术点（IOC和AOP），那我们如何更好的构建上层的应用呢（比如web 应用），这便是SpringMVC；Spring MVC是Spring在Spring Container Core和AOP等技术基础上，遵循上述Web MVC的规范推出的web开发框架，目的是为了简化Java栈的web开发。 本文主要介绍SpringMVC主要的流程和基础案例的编写和运行。</p>
</blockquote>
<h2>1. 引入</h2>
<blockquote>
<p>前文我们介绍了Spring框架和Spring框架中最为重要的两个技术点（IOC和AOP），同时我们也通过几个Demo应用了Core Container中包</p>
</blockquote>`,r:{minutes:9.54,words:2863},t:"Spring基础 - SpringMVC请求流程和案例",O:60,y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-x-framework-transaction-invalid.html",{loader:()=>o(()=>import("./spring-x-framework-transaction-invalid.html-f9NAV4FK.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>0. 前言</h2>
<p>在某些业务场景下，如果一个请求中，需要同时写入多张表的数据。为了保证操作的原子性（要么同时成功，要么同时失败），避免数据不一致的情况，我们一般都会用到spring事务。</p>
<p>spring事务使用起来很简单，只需要一个简单的注解：<code>@Transactional</code></p>
<p>但如果你使用不当，它也会坑你于无形。</p>
<p>今天我们就一起聊聊，事务失效的一些场景，说不定你已经中招了。不信，让我们一起看看。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231649888.png" alt="image-20221215193650290" tabindex="0" loading="lazy"><figcaption>image-20221215193650290</figcaption></figure>`,r:{minutes:15.56,words:4668},t:"Spring进阶 - spring事务失效的12种场景",O:180,y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-x-framework-transaction.html",{loader:()=>o(()=>import("./spring-x-framework-transaction.html-xaPz6mzF.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. Spring事务的基本原理</h2>
<p>Spring事务的本质其实就是数据库对事务的支持，没有数据库的事务支持，spring是无法提供事务功能的。对于纯JDBC操作数据库，想要用到事务，可以按照以下步骤进行：</p>
<ol>
<li>获取连接 Connection con = DriverManager.getConnection()</li>
<li>开启事务con.setAutoCommit(true/false);</li>
<li>执行CRUD</li>
<li>提交事务/回滚事务 con.commit() / con.rollback();</li>
<li>关闭连接 conn.close();</li>
</ol>`,r:{minutes:12.57,words:3771},t:"Spring进阶 - Spring事务原理",O:180,y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-x-ioc-init.html",{loader:()=>o(()=>import("./spring-x-ioc-init.html-C1Jxbp0M.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>0. 精简概述</h2>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231650087.png" alt="image-20230105164039388" tabindex="0" loading="lazy"><figcaption>image-20230105164039388</figcaption></figure>
<p>IOC 容器的初始化包括的三个过程</p>
<ol>
<li>
<p>加载配置文件（Resource定位过程）：</p>
<p>通过 ResourceLoader 来完成资源文件位置的定位，并将其封装成Resource对象</p>
</li>
<li>
<p>解析配置文件（BeanDefinition的载入）</p>
<p>通过 BeanDefinitionReader来完成定义信息的解析成IoC容器内部的数据结构BeanDefinition</p>
</li>
<li>
<p>注册到容器（BeanDefinition的注册）</p>
<p>通过BeanDefinitionRegistry接口将BeanDefinition向 IOC 容器中注册。注册过程就是在 IOC 容器内部维护的一个HashMap 来保存得到的 BeanDefinition 的过程。这个 HashMap 是 IoC 容器持有 bean 信息的场所，以后对 bean 的操作都是围绕这个HashMap 来实现的</p>
</li>
</ol>`,r:{minutes:32.48,words:9745},t:"Spring进阶 - Spring IOC容器的初始化过程",O:93,y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-y-action-filter.html",{loader:()=>o(()=>import("./spring-y-action-filter.html-5U6V8ISx.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 基础使用</h2>
<p>我们在项目中同时配置 <code>拦截器</code> 和 <code>过滤器</code>。</p>
<h3>1.1 过滤器 (Filter)</h3>
<p>过滤器的配置比较简单，直接实现<code>Filter</code> 接口即可，也可以通过<code>@WebFilter</code>注解实现对特定<code>URL</code>拦截，看到<code>Filter</code> 接口中定义了三个方法。</p>
<ul>
<li><code>init()</code> ：该方法在容器启动初始化过滤器时被调用，它在 <code>Filter</code> 的整个生命周期只会被调用一次。<strong>注意</strong>：这个方法必须执行成功，否则过滤器会不起作用。</li>
<li><code>doFilter()</code> ：容器中的每一次请求都会调用该方法， <code>FilterChain</code> 用来调用下一个过滤器 <code>Filter</code>。</li>
<li><code>destroy()</code>： 当容器销毁 过滤器实例时调用该方法，一般在方法中销毁或关闭资源，在过滤器 <code>Filter</code> 的整个生命周期也只会被调用一次</li>
</ul>`,r:{minutes:8.28,words:2483},t:"Spring实战 - 过滤器和拦截器区别",O:1010,y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-y-annotation-configuration.html",{loader:()=>o(()=>import("./spring-y-annotation-configuration.html-BnGJlzRP.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>@Conﬁguration注释类，<strong>表明类其主要目的是作为bean定义的源</strong>；</p>
<p>一个类声明一个或多个 @Bean方法，并且可以由Spring容器进行处理，以在运行时为这些bean生成bean定义和服务请求，例如：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Configuration</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> AppConfig</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Bean</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> MyBean</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> myBean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // instantiate, configure and return bean ...</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
</div>`,r:{minutes:.61,words:183},t:"@Configuration注解",y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-y-aop-impl.html",{loader:()=>o(()=>import("./spring-y-aop-impl.html-C-2ys-7g.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 代理模式</h2>
<p>代理模式UML 类图如下</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231722304.png" alt="image-20191011005747639" tabindex="0" loading="lazy"><figcaption>image-20191011005747639</figcaption></figure>
<blockquote>
<p>类图中虚线箭头表示接口实现</p>
<p>菱形和箭头表示组合</p>
</blockquote>`,r:{minutes:3.5,words:1051},t:"Spring AOP实现原理",y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-y-aop-limit.html",{loader:()=>o(()=>import("./spring-y-aop-limit.html-DfOHO7He.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 定义 Limit 注解</h2>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Target</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ElementType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">METHOD</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Retention</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">RetentionPolicy</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">RUNTIME</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> @</span><span style="color:#C678DD;--shiki-dark:#C678DD">interface</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Limit</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 资源名称，用于描述接口功能</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    String</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> name</span><span style="color:#E06C75;--shiki-dark:#E06C75">() </span><span style="color:#C678DD;--shiki-dark:#C678DD">default</span><span style="color:#98C379;--shiki-dark:#98C379"> ""</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 资源 key</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    String</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> key</span><span style="color:#E06C75;--shiki-dark:#E06C75">() </span><span style="color:#C678DD;--shiki-dark:#C678DD">default</span><span style="color:#98C379;--shiki-dark:#98C379"> ""</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // key prefix</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    String</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> prefix</span><span style="color:#E06C75;--shiki-dark:#E06C75">() </span><span style="color:#C678DD;--shiki-dark:#C678DD">default</span><span style="color:#98C379;--shiki-dark:#98C379"> ""</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 时间的，单位秒</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    int</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> period</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 限制访问次数</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    int</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> count</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 限制类型</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    LimitType</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> limitType</span><span style="color:#E06C75;--shiki-dark:#E06C75">() </span><span style="color:#C678DD;--shiki-dark:#C678DD">default</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> LimitType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">CUSTOMER</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.18,words:353},t:"Limit限流",y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-y-aop-log.html",{loader:()=>o(()=>import("./spring-y-aop-log.html-DxkLgwZx.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. @Log 注解</h2>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>@Target(ElementType.METHOD)</span></span>
<span class="line"><span>@Retention(RetentionPolicy.RUNTIME)</span></span>
<span class="line"><span>public @interface Log {</span></span>
<span class="line"><span>    String value() default "";</span></span>
<span class="line"><span>}</span></span></code></pre>
</div>`,r:{minutes:.67,words:201},t:"AOP打印日志",y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-y-aop-overview.html",{loader:()=>o(()=>import("./spring-y-aop-overview.html-k6kjVjn2.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 什么是AOP</h2>
<p>AOP既面向切面编程，官方定义</p>
<blockquote>
<p>面向切面—— Spring提供了面向切面编程的丰富支持，允许通过分离应用的业务逻辑与系统级服务（例如审计（auditing）和事务（transaction）管理）进行内聚性的开发。应用对象只实现它们应该做的——完成业务逻辑——仅此而已。它们并不负责（甚至是意识）其它的系统级关注点，例如日志或事务支持。</p>
</blockquote>
<p>AOP可以分离系统的业务逻辑和系统服务(日志，安全等)，这个功能我想是不难明白（原理是使用了<code>代理模式</code>），但关键是为什么要将这两种进行分离呢？或者说这样做有什么好处？</p>`,r:{minutes:3.88,words:1163},t:"SpringAOP",y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-y-aop-repeat-submit.html",{loader:()=>o(()=>import("./spring-y-aop-repeat-submit.html-DBEK2iHL.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 背景</h2>
<p>由于网络加载是比较耗时的操作，如果前端没有控制防重复点击，那么请求就会添加到服务端中。这样就会导致数据库中出现重复数据。</p>
<p>我们可以通过自定义注解@RepeatSubmit，实现防重复提交</p>
<h2>2. 实现步骤</h2>
<h3>2.1 自定义防止重复提交的注解</h3>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Inherited</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Target</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ElementType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">METHOD</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Retention</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">RetentionPolicy</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">RUNTIME</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Documented</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> @</span><span style="color:#C678DD;--shiki-dark:#C678DD">interface</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> RepeatSubmit</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
</div>`,r:{minutes:3.78,words:1134},t:"AOP实现防重复提交",y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-y-filter-interceptor.html",{loader:()=>o(()=>import("./spring-y-filter-interceptor.html-C0uNCRRG.js"),[]),meta:{d:1729494189e3,e:`
<p>拦截器和过滤器都是AOP编程思想的体现</p>
<h2>1. 拦截器和过滤器区别</h2>
<ol>
<li><code>Filter</code> 是基于 <strong>函数回调</strong>的，而 <code>Interceptor</code> 则是基于 <code>Java</code><strong>反射</strong> 和 <strong>动态代理</strong>。</li>
<li><code>Filter</code> 依赖于 <code>Servlet</code> 容器，而 <code>Interceptor</code> 不依赖于 <code>Servlet</code> 容器。</li>
<li><code>Filter</code> 对几乎 <strong>所有的请求</strong> 起作用，而 <code>Interceptor</code> 只对 <code>Controller</code> 对请求起作用。</li>
</ol>`,r:{minutes:1.87,words:560},t:"拦截器和过滤器",y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-y-ioc-bean.html",{loader:()=>o(()=>import("./spring-y-ioc-bean.html-CFe7IeEh.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 什么是Spring Bean？</h2>
<ul>
<li>Bean 由Spring IoC 容器实例化，配置、装配和管理</li>
<li>Bean 是基于用户提供给IoC 容器的配置元数据Bean Definition 创建</li>
</ul>
<h2>2. Spring 有哪些配置方式</h2>
<p>单纯从Spring Framework 提供的方式，一共有三种：</p>
<ol>
<li>XML 配置文件</li>
<li>注解配置</li>
<li>Java Config 配置</li>
</ol>
<h2>3. 解释什么叫延迟加载？</h2>
<p>默认情况下，容器启动之后会将所有作用域为<strong>单例</strong>的 Bean 都创建好，但是有的业务场景我们并不需要它提前都创建好。此时，我们可以在Bean 中设置 <code>lzay-init = "true"</code> 。</p>`,r:{minutes:.71,words:212},t:"Spring Bean常见问题",y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-y-ioc-config-bean.html",{loader:()=>o(()=>import("./spring-y-ioc-config-bean.html-9jJLlGlf.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>在Spring 中，依赖注入是Spring 最重要的特性之一，我们所使用的Bean 都是通过依赖注入完成的，如今的Spring中，提供了3种装配Bean的方式</p>
<ol>
<li>在XML中显示装配</li>
<li>在Java中显示配置</li>
<li>隐式的neam发现机制和自动装配</li>
</ol>
<h2>2. 装配方式</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> interface</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Login</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> login</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Component</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> UserLogin</span><span style="color:#C678DD;--shiki-dark:#C678DD"> implements</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Login</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> login</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"login success!"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
</div>`,r:{minutes:1.81,words:542},t:"Spring 装配Bean的3种方式",y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-y-ioc-cyclic-dependence.html",{loader:()=>o(()=>import("./spring-y-ioc-cyclic-dependence.html-Bd1qseLh.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 什么是循环依赖</h2>
<p>循环依赖，其实就是循环引用，就是两个或者两个以上的bean 互相引用对方，最终形成一个闭环，如A 依赖B,B依赖C，C依赖A。如下图所示</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231724298.png" alt="image-20191103124214967" tabindex="0" loading="lazy"><figcaption>image-20191103124214967</figcaption></figure>`,r:{minutes:1.85,words:554},t:"循环依赖问题",y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-y-ioc-problem.html",{loader:()=>o(()=>import("./spring-y-ioc-problem.html-B_UthJLC.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 概述</h2>
<p>Spring 框架的核心是Spring IoC 容器。容器创建 Bean 对象，将它们装配在一起，配置它们并管理它们的完整生命周期</p>
<ul>
<li>Spring 容器使用<strong>依赖注入</strong>来管理组成应用程序的 Bean 对象。</li>
<li>容器通过读取提供的<strong>配置元数据</strong> Bean Definition来接收对象进行实例化，配置和组装的指令</li>
<li>该配置元数据Bean Definition 可以<strong>通过XML，Java 注解或Java Config代码提供</strong></li>
</ul>`,r:{minutes:5.38,words:1613},t:"Spring IoC常见问题",y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-y-mvc-interceptor.html",{loader:()=>o(()=>import("./spring-y-mvc-interceptor.html-75q76Opm.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 详细介绍下 Spring MVC 拦截器？</h2>
<p><code>org.springframework.web.servlet.HandlerInterceptor</code> ，拦截器接口。代码如下：</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// HandlerInterceptor.java</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 拦截处理器，在 {</span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@link</span><span style="color:#E5C07B;font-style:italic;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic"> HandlerAdapter</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">#</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">handle(HttpServletRequest, HttpServletResponse, Object)</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">} 执行之前</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">default</span><span style="color:#C678DD;--shiki-dark:#C678DD"> boolean</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> preHandle</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">HttpServletRequest</span><span style="color:#E06C75;--shiki-dark:#E06C75"> request</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> HttpServletResponse</span><span style="color:#E06C75;--shiki-dark:#E06C75"> response</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Object</span><span style="color:#E06C75;--shiki-dark:#E06C75"> handler)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">		throws Exception {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">	return</span><span style="color:#D19A66;--shiki-dark:#D19A66"> true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 拦截处理器，在 {</span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@link</span><span style="color:#E5C07B;font-style:italic;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic"> HandlerAdapter</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">#</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">handle(HttpServletRequest, HttpServletResponse, Object)</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">} 执行成功之后</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">default</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> postHandle</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">HttpServletRequest</span><span style="color:#E06C75;--shiki-dark:#E06C75"> request</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> HttpServletResponse</span><span style="color:#E06C75;--shiki-dark:#E06C75"> response</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Object</span><span style="color:#E06C75;--shiki-dark:#E06C75"> handler</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">		@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Nullable</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ModelAndView</span><span style="color:#E06C75;--shiki-dark:#E06C75"> modelAndView) throws Exception {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 拦截处理器，在 {</span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@link</span><span style="color:#E5C07B;font-style:italic;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic"> HandlerAdapter</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">#</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">handle(HttpServletRequest, HttpServletResponse, Object)</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">} 执行完之后，无论成功还是失败</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 并且，只有该处理器 {</span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@link</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> #</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">preHandle(HttpServletRequest, HttpServletResponse, Object)</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">} 执行成功之后，才会被执行</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">default</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> afterCompletion</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">HttpServletRequest</span><span style="color:#E06C75;--shiki-dark:#E06C75"> request</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> HttpServletResponse</span><span style="color:#E06C75;--shiki-dark:#E06C75"> response</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Object</span><span style="color:#E06C75;--shiki-dark:#E06C75"> handler</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">		@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Nullable</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Exception</span><span style="color:#E06C75;--shiki-dark:#E06C75"> ex) throws Exception {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.41,words:722},t:"SpringMVC拦截器",y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-y-mvc-interview.html",{loader:()=>o(()=>import("./spring-y-mvc-interview.html-CRczoftO.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. Spring MVC 简介</h2>
<p>Spring MVC 提供”模型-视图-控制器“（Model - View - Controller） 架构和随时可用的组件，用于开发灵活且松散耦合的Web应用程序。</p>
<p>MVC 模式有助于分离应用程序的不同方面，如输入逻辑，业务逻辑和UI逻辑，同时在所有这些元素之间提供松散耦合</p>
<h2>2. 介绍下 Spring MVC 的核心组件？</h2>
<p>Spring MVC 一共有九大核心组件，分别是：</p>
<ul>
<li>MultipartResolver</li>
<li>LocaleResolver</li>
<li>ThemeResolver</li>
<li><strong>HandlerMapping</strong></li>
<li><strong>HandlerAdapter</strong></li>
<li><strong>HandlerExceptionResolver</strong></li>
<li>RequestToViewNameTransalator</li>
<li>ViewResolver</li>
<li>FlashMapManager</li>
</ul>`,r:{minutes:5.17,words:1552},t:"SpringMVC常见知识点",y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-y-mvc-restful.html",{loader:()=>o(()=>import("./spring-y-mvc-restful.html-DxbnxM7M.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. REST 是什么</h2>
<p>REST（REpresentational State Transfer） 直译就是：抽象状态转移。</p>
<p>他通过 <strong>URL定位资源，用HTTP动词（GET,POST,DELETE,DETC）描述操作</strong>。</p>
<ul>
<li>看Url就知道要什么</li>
<li>看http method就知道干什么</li>
<li>看http status code就知道结果如何</li>
</ul>
<h2>2. 资源是什么</h2>
<p>资源是指数据在 REST 架构中如何显示的。将实体作为资源公开，他允许客户端通过HTTP 方法如：GET、POST、PUT、DELETE 等读、写、修改和创建资源</p>`,r:{minutes:3.84,words:1153},t:"RESTful",y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-y-problem-master-list.html",{loader:()=>o(()=>import("./spring-y-problem-master-list.html-BKYnVMy1.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 背景</h2>
<p>在springboot 设置打jar包后，使用java -jar 运行提示 没有主清单属性</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231729352.png" alt="image-20201026103541437" tabindex="0" loading="lazy"><figcaption>image-20201026103541437</figcaption></figure>
<h2>2. 解决办法</h2>
<p>在pom文件中添加 spring-boot-maven-plugin 插件</p>`,r:{minutes:.29,words:86},t:"打jar包，没有主清单属性",y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-y-resttemplate.html",{loader:()=>o(()=>import("./spring-y-resttemplate.html-Bt88hPtO.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 背景</h2>
<p>因项目需要请求外部项目接口，apache 的HttpClient有点老了，而且逻辑繁琐，代码复杂，还要自己编写使用类HttpClientUtil，封装对应的post，get，delete等方法。</p>
<h3>1.1 RestTemple 是什么</h3>
<p>RestTemple是Spring提供的用于访问Http请求的客户端，RestTemple提供了多种简洁的远程访问服务的方法，省去了很多无用的代码。</p>
<h2>2. 集成使用</h2>
<h3>2.1 导入springboot 的 web包</h3>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;org.springframework.boot&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;spring-boot-starter-web&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
</div>`,r:{minutes:3.73,words:1120},t:"springboot使用RestTemplate请求",y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-y-transactional-fail.html",{loader:()=>o(()=>import("./spring-y-transactional-fail.html-Cdysx3Vh.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 背景</h2>
<p><code>@Transactional</code> 注解相信大家并不陌生，平时开发中很常用的一个注解，它能保证方法内多个数据库操作要么同时成功、要么同时失败。使用<code>@Transactional</code>注解时需要注意许多的细节，不然你会发现<code>@Transactional</code>总是莫名其妙的就失效了。</p>
<h2>2. 事务</h2>
<p>事务管理在系统开发中是不可缺少的一部分，<code>Spring</code>提供了很好事务管理机制，主要分为<code>编程式事务</code>和<code>声明式事务</code>两种。</p>`,r:{minutes:7.85,words:2354},t:"@Transactional注解的失效场景",y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-y-transactional.html",{loader:()=>o(()=>import("./spring-y-transactional.html-BZuIsA9g.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 事务概念</h2>
<h3>1.1 什么是事务</h3>
<p>事务是逻辑上的一组操作，要么都执行，要么都不执行</p>
<h3>1.2 事务的特性</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231732229.png" alt="image-20191011230807408" tabindex="0" loading="lazy"><figcaption>image-20191011230807408</figcaption></figure>
<ol>
<li>原子性：事务是最小的执行单位，不予许分割。事务的原子性确保动作要么全部完成，要么完全不起作用</li>
<li>一致性：执行事务前后，数据保持一致</li>
<li>隔离性：并发访问数据库时，一个用户的事务不被其他事务所干扰，个并发事务之间的数据库是独立的</li>
<li>持久性：一个事务被提交之后，他对数据库中数据的改变是持久的，即使数据库发生故障也不应该对其有任何影响</li>
</ol>`,r:{minutes:7.53,words:2259},t:"Spring事务",y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/",{loader:()=>o(()=>import("./index.html-D4OFpQdW.js"),[]),meta:{d:17204832e5,l:"2024年7月9日",e:`<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>这里放置SpringBoot相关的内容</p>
</div>
<hr>
`,r:{minutes:.09,words:28},t:"SpringBoot",O:3,y:"p"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/SpringBoot%E5%9F%BA%E7%A1%80.html",{loader:()=>o(()=>import("./SpringBoot基础.html-Br3OtA_L.js"),[]),meta:{d:1729494189e3,e:`
<h2><strong>01-今日内容</strong></h2>
<ul>
<li>Spring概述、快速入门</li>
<li>SpringBoot配置</li>
<li>SpringBoot整合</li>
</ul>
<h2><strong>02-SpringBoot概述</strong></h2>
<p>SpringBoot提供了一种快速使用Spring的方式，基于约定优于配置的思想，可以让开发人员不必在配置与逻辑业务之间进行思维的切换，全身心的投入到逻辑业务的代码编写中，从而大大提高了开发的效率</p>
<p><strong>SpringBoot功能</strong></p>
<p><strong>1</strong>） <strong>自动配置</strong></p>`,r:{minutes:6.24,words:1871},t:"SpringBoot 基础",y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/SpringBoot%E9%AB%98%E7%BA%A7.html",{loader:()=>o(()=>import("./SpringBoot高级.html-Bwbfwr-w.js"),[]),meta:{d:1729494189e3,e:`
<h2>SpringBoot 启动流程</h2>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111532170.png" alt="SpringBoot启动流程.png" tabindex="0" loading="lazy"><figcaption>SpringBoot启动流程.png</figcaption></figure>
<h2><strong>01-SpringBoot高级-今日内容</strong></h2>
<ul>
<li>SpringBoot自定配置</li>
<li>SpringBoot事件监听</li>
<li>SpringBoot流程分析</li>
<li>SpringBoot监控</li>
<li>SpringBoot部署</li>
</ul>`,r:{minutes:9.06,words:2717},t:"SpringBoot 高级",y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/Springboot.html",{loader:()=>o(()=>import("./Springboot.html-fqT6ahWC.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. Spring Boot 的自动配置是如何实现</h2>
<p>Spring Boot 项目的启动注解是：@SpringBootApplication，其实他由下面三个注解组成的：</p>
<ul>
<li>@SpringBootConfiguration</li>
<li>@ComponentScan</li>
<li>@EnableAutoConfiguration</li>
</ul>
<h3>1.1 加载过程</h3>
<ul>
<li>
<p>其中@EnableAutoConfiguration 是实现自动配置的入口，</p>
</li>
<li>
<p>该注解又通过 @Import 注解导入了AutoConfigurationImportSelector，在该类中加载 META-INF/spring.factories 的配置信息。</p>
</li>
<li>
<p>然后筛选出以EnableAutoConfiguration 为key的数据，加入到IOC 容器中，实现自动配置功能</p>
</li>
</ul>`,r:{minutes:7.09,words:2128},t:"Spring Boot常见知识点",y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-x-annotation-springboot-annotation.html",{loader:()=>o(()=>import("./springboot-x-annotation-springboot-annotation.html-CZO_083H.js"),[]),meta:{d:1729494189e3,e:`
<h2>1.SpringBoot相关</h2>
<h3>1.1 <code>@SpringBootApplication</code></h3>
<p>标识这是一个 Spring Boot 应用，用来开启 Spring Boot 的各项能力。</p>
<p><em>这个注解是 Spring Boot 项目的基石，创建 SpringBoot 项目之后会默认在主类加上。</em></p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SpringBootApplication</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SpringSecurityJwtGuideApplication</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">      public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">java</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">lang</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[] </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        SpringApplication</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">run</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SpringSecurityJwtGuideApplication</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, args);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
</div>`,r:{minutes:19.21,words:5762},t:"SpringBoot入门  -  Spring/SpringBoot常用注解",O:20,y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-x-deploy-jar-3rd.html",{loader:()=>o(()=>import("./springboot-x-deploy-jar-3rd.html-C71J9mM9.js"),[]),meta:{d:1729494189e3,e:`
<blockquote>
<p>在项目中我们经常需要使用第三方的Jar，比如某些SDK，<strong>这些SDK没有直接发布到公开的maven仓库中</strong>，这种情况下如何使用这些三方JAR呢？本文提供最常用的两种方式。</p>
</blockquote>
<h2>方案一：安装到Maven仓库</h2>
<blockquote>
<p>如果有项目的Maven仓库，则推荐按照到的Maven仓库（比如私服）中。（最好不是本地的Maven仓库，因为还有CI环境需要集成。）</p>
</blockquote>
<p>配置Maven私服, server &amp; profile</p>
`,r:{minutes:1.72,words:515},t:"SpringBoot应用部署 - 使用第三方JAR包",O:390,y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-x-hello-devtool.html",{loader:()=>o(()=>import("./springboot-x-hello-devtool.html-DzYuD1Ir.js"),[]),meta:{d:1729494189e3,g:null,e:`
<blockquote>
<p>在SpringBoot开发调试中，如果我每行代码的修改都需要重启启动再调试，可能比较费时间；SpringBoot团队针对此问题提供了spring-boot-devtools（简称devtools）插件，它试图提升开发调试的效率。</p>
</blockquote>
<h2>1. 准备知识点</h2>
<h3>1.1 什么是热部署和热加载？</h3>
<blockquote>
<p>热部署和热加载是在应用正在运行的时候，自动更新（重新加载或者替换class等）应用的一种能力。（PS：<strong>spring-boot-devtools提供的方案也是要重启的，只是无需手动重启能实现自动加载而已。</strong>）</p>
</blockquote>`,r:{minutes:9.8,words:2939},t:"SpringBoot部署 - 配置热部署devtools工具",O:380,y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-x-interface-version.html",{loader:()=>o(()=>import("./springboot-x-interface-version.html-Bd4EXsq7.js"),[]),meta:{d:1729494189e3,e:`
<blockquote>
<p>在以SpringBoot开发Restful接口时，由于模块，系统等业务的变化，需要对同一接口提供不同版本的参数实现（老的接口还有模块或者系统在用，不能直接改，所以需要不同版本）。如何更加优雅的实现多版本接口呢？</p>
</blockquote>
<h2>1. 为什么接口会出现多个版本？</h2>
<blockquote>
<p>为什么接口会出现多个版本？</p>
</blockquote>
<p>一般来说，Restful API接口是提供给其它模块，系统或是其他公司使用，不能随意频繁的变更。然而，需求和业务不断变化，接口和参数也会发生相应的变化。如果直接对原来的接口进行修改，势必会影响线上其他系统的正常运行。这就必须对api 接口进行有效的版本控制。</p>`,r:{minutes:4.48,words:1343},t:"SpringBoot接口 - 如何提供多个版本接口",O:210,y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-x-overview.html",{loader:()=>o(()=>import("./springboot-x-overview.html-B0T0JMYY.js"),[]),meta:{d:1729494189e3,e:`
<blockquote>
<p>为什么有了SpringFramework还会诞生SpringBoot？简单而言，因为虽然Spring的组件代码是轻量级的，但它的配置却是重量级的；所以SpringBoot的设计策略是通过<strong>开箱即用</strong>和<strong>约定大于配置</strong> 来解决配置重的问题的。</p>
</blockquote>
<h2>1. SpringFramework解决了什么问题，没有解决什么问题？</h2>
<h3>1.1 SpringFramework解决了什么问题？</h3>
<p>Spring是Java企业版（Java Enterprise Edition，JEE，也称J2EE）的轻量级代替品。无需开发重量级的EnterpriseJavaBean（EJB），Spring为企业级Java开发提供了一种相对简单的方法，通过依赖注入和面向切面编程，用简单的Java对象（Plain Old Java Object，POJO）实现了EJB的功能。</p>`,r:{minutes:3.72,words:1116},t:"SpringBoot入门 - SpringBoot简介",O:10,y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-x-start-up.html",{loader:()=>o(()=>import("./springboot-x-start-up.html-C0raZqW7.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 概述</h2>
<p>SpringBoot 的启动很简单，代码如下：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SpringBootApplication</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> MyApplication</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[] </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        SpringApplication</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">run</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">MyApplication</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, args);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
</div>`,r:{minutes:2.76,words:827},t:"SpringBoot进阶 - SpringBoot启动过程",O:60,y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-y-annotation-conditional.html",{loader:()=>o(()=>import("./springboot-y-annotation-conditional.html-Dce1ASXe.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p><code>@Conditional</code>是Spring4新提供的注解，它的作用是按照一定条件进行判断，满足条件就将bean注册到容器。</p>
<h3>1.1 @Conditional源码</h3>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Target</span><span style="color:#E06C75;--shiki-dark:#E06C75">({</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ElementType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">TYPE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ElementType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">METHOD</span><span style="color:#E06C75;--shiki-dark:#E06C75">})</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Retention</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">RetentionPolicy</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">RUNTIME</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Documented</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> @</span><span style="color:#C678DD;--shiki-dark:#C678DD">interface</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Conditional</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">	/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">	 * All {@link Condition Conditions} that must {@linkplain Condition#matches match}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">	 * in order for the component to be registered.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">	 */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">	Class</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#C678DD;--shiki-dark:#C678DD">?</span><span style="color:#E06C75;--shiki-dark:#E06C75"> extends Condition</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">[] </span><span style="color:#61AFEF;--shiki-dark:#61AFEF">value</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
</div>`,r:{minutes:3.88,words:1163},t:"@Conditional注解根据条件注入Bean到容器",y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-y-annotation-enable-import.html",{loader:()=>o(()=>import("./springboot-y-annotation-enable-import.html-B8vulNmT.js"),[]),meta:{d:1729494189e3,e:`
<p>SpringBoot 的自动配置非常强大，我们经常使用的<code>@Enable*</code>注解来开启对某方面的支持，那么<code>@Enable*</code> 注解的原理是什么？</p>
<h2>1. @Enable* 注解与 @Import 注解之间的关系</h2>
<p>@Enable*举例</p>
<ul>
<li>@EnableScheduling 开启计划任务的支持</li>
<li>@EnableAsync 开启异步方法的支持</li>
</ul>
<p>我们观察这些@Enable<em>源码可以看出，所有@Enable</em> 注解都是有@Import的组合注解，@Enable* 自助开启的实现其实就是导入例如一些自动配置的bean</p>`,r:{minutes:2.34,words:702},t:"SpringBoot 自动配置之@Enable*与@Import注解",y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-y-annotation-enable.html",{loader:()=>o(()=>import("./springboot-y-annotation-enable.html-DfHK6KEq.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 作用</h2>
<p><strong>@EnableConfigurationProperties 注解的作用是:让使用了 @ConfigurationProperties 注解的类生效,并且将该类注入到 IOC 容器中,交由 IOC 容器进行管理</strong></p>
<blockquote>
<p>@ConfigurationProperties是在第三方包中，那么@component是不能注入到容器的。只有@EnableConfigurationProperties才可以注入到容器</p>
</blockquote>
<h2>2. 如何使@ConfigurationProperties生效</h2>`,r:{minutes:1.93,words:578},t:"@EnableConfigurationProperties注解",y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-y-costom-springboot-starter.html",{loader:()=>o(()=>import("./springboot-y-costom-springboot-starter.html-C62FRe6d.js"),[]),meta:{d:1729494189e3,g:null,e:`
<p>自动化配置需满足两个条件</p>
<ol>
<li>能够生成Bean，并注册到Bean容器中</li>
<li>能够自动配置项目所需要的配置</li>
</ol>
<h2>1. 自定义步骤</h2>
<h3>1.1 引入SpringBoot 自动化配置依赖：</h3>
<p>引入 SpringBoot 自动化配置依赖：</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependencies</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;org.springframework.boot&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;spring-boot-autoconfigure&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;1.5.9.RELEASE&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependencies</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
</div>`,r:{minutes:2.38,words:713},t:"自定义SpringBoot Starter实现自动化配置",y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-y-file-bigfile-upload.html",{loader:()=>o(()=>import("./springboot-y-file-bigfile-upload.html-CiAwet9d.js"),[]),meta:{d:1729494189e3,e:`
<blockquote>
<p>上文中介绍的是常规文件的上传和下载，而超大文件的上传技术手段和普通文件上传是有差异的，主要通过基于分片的断点续传和秒传和异步上传等技术手段解决。本文主要介绍SpringBoot集成大文件上传的案例。</p>
</blockquote>
<h2>1. 知识准备</h2>
<blockquote>
<p>大文件的上传技术手段和普通文件上传是有差异的，主要通过基于分片的断点续传和秒传和异步上传解决。</p>
</blockquote>
<h3>1.1 大文件面临的问题</h3>
<ol>
<li>上传速度慢 -- 应对: <strong>分块上传</strong></li>
<li>上传文件到一半中断后，继续上传却只能重头开始上传 -- 应对: <strong>断点续传</strong></li>
<li>相同文件未修改再次上传, 却只能重头开始上传 -- 应对: <strong>秒传</strong></li>
</ol>`,r:{minutes:2.94,words:882},t:"SpringBoot集成文件 - 大文件的上传(异步，分片，断点续传和秒传)",O:320,y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-y-file-upload-download.html",{loader:()=>o(()=>import("./springboot-y-file-upload-download.html-Btcs0Kub.js"),[]),meta:{d:1729494189e3,g:null,e:`
<blockquote>
<p>项目中常见的功能是需要将数据文件（比如Excel,csv)上传到服务器端进行处理，亦或是将服务器端的数据以某种文件形式（比如excel,pdf,csv,word)下载到客户端。本文主要介绍基于SpringBoot的对常规文件的上传和下载，以及常见的问题等。</p>
</blockquote>
<h2>1. 知识准备</h2>
<blockquote>
<p>需要理解文件上传和下载的常见场景和技术手段。</p>
</blockquote>
<h3>1.1 哪些场景需要文件上传和下载</h3>
<p>项目中常见的功能是需要将数据文件（比如Excel,csv)上传到服务器端进行处理，亦或是将服务器端的数据以某种文件形式（比如excel,pdf,csv,word)下载到客户端。</p>`,r:{minutes:2.67,words:802},t:"SpringBoot集成文件 - 基础的文件上传和下载",O:310,y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-y-monitor-acturator.html",{loader:()=>o(()=>import("./springboot-y-monitor-acturator.html-DX3IhVQK.js"),[]),meta:{d:1729494189e3,g:null,e:`
<blockquote>
<p>当SpringBoot的应用部署到生产环境中后，如何监控和管理呢？比如审计日志，监控状态，指标收集等。为了解决这个问题，SpringBoot提供了Actuator。本文主要介绍Spring Boot Actuator及实现案例。</p>
</blockquote>
<h2>1. 知识准备</h2>
<blockquote>
<p>需要了解什么是Spring Boot Actuator， 以及其提供的功能(Endpoints)。</p>
</blockquote>
<h3>1.1 什么是Actuator?</h3>
<blockquote>
<p>致动器（actuator）是2018年公布的计算机科学技术名词。</p>
</blockquote>`,r:{minutes:4.84,words:1451},t:"SpringBoot监控 - 集成acturator监控工具",O:410,y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-y-monitor-admin-use.html",{loader:()=>o(()=>import("./springboot-y-monitor-admin-use.html-ZW7Gp_jW.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 日志报表</h2>
<p>日志报表可以监控到项目的启动情况。在什么时候启动的项目、什么时候服务听着</p>
<ul>
<li>UP 为正常</li>
<li>OFFLINE 为异常</li>
</ul>
<figure><img src="https://raw.githubusercontent.com/MrJackC/PicGoImages/main/other/202404232204184.png" alt="image-20230427151804833" tabindex="0" loading="lazy"><figcaption>image-20230427151804833</figcaption></figure>`,r:{minutes:.65,words:196},t:"SpringBoot监控 - 集成springboot admin监控工具使用感受",O:421,y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-y-monitor-admin.html",{loader:()=>o(()=>import("./springboot-y-monitor-admin.html-BpdhDKlq.js"),[]),meta:{d:1729494189e3,g:null,e:`
<blockquote>
<p>上文中展示了SpringBoot提供了Actuator对应用进行监控和管理， 而Spring Boot Admin能够将 Actuator 中的信息进行界面化的展示，也可以监控所有 Spring Boot 应用的健康状况，提供实时警报功能。 本文主要介绍springboot admin以及SpringBoot和springboot admin的集成。</p>
</blockquote>
<h2>1. 知识准备</h2>
<blockquote>
<p>需要了解Spring Boot Admin和actuartor之间的关系等。</p>
</blockquote>`,r:{minutes:4.89,words:1467},t:"SpringBoot监控 - 集成springboot admin监控工具",O:420,y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-y-permission-whitelist.html",{loader:()=>o(()=>import("./springboot-y-permission-whitelist.html-9I8pXZgN.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 自定义步骤</h2>
<h3>1.1 引入SpringBoot 自动化配置依赖</h3>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>&lt;dependency&gt;</span></span>
<span class="line"><span>    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span></span>
<span class="line"><span>    &lt;artifactId&gt;spring-boot-configuration-processor&lt;/artifactId&gt;</span></span>
<span class="line"><span>    &lt;optional&gt;true&lt;/optional&gt;</span></span>
<span class="line"><span>&lt;/dependency&gt;</span></span></code></pre>
</div>`,r:{minutes:2.12,words:635},t:"SpringBoot-Starter - 权限白名单自动化配置",y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-y-source-autoconfig.html",{loader:()=>o(()=>import("./springboot-y-source-autoconfig.html-CJTloep_.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 前言</h2>
<p>在使用SpringBoot的时候，我们只需要如下方式即可直接启动一个Web程序：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SpringBootApplication</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> DemoApplication</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[] </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        SpringApplication</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">run</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DemoApplication</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, args);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
</div>`,r:{minutes:4.96,words:1489},t:"SpringBoot进阶 - SpringBoot自动装配原理解析",O:70,y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-y-source-import.html",{loader:()=>o(()=>import("./springboot-y-source-import.html-D7mU6G6i.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 导入源码</h2>
<blockquote>
<p>我们项目中的springboot 版本为2.1.0.RELEASE，所以我们就以2.1.0.RELEASE为学习标准</p>
</blockquote>
<ol>
<li>
<p>源码地址</p>
<p><a href="https://github.com/spring-projects/spring-boot/tree/v2.1.0.RELEASE" target="_blank" rel="noopener noreferrer">https://github.com/spring-projects/spring-boot/tree/v2.1.0.RELEASE</a></p>
</li>
<li>
<p>fork到自己github仓库</p>
<p>fork 到自己仓库，可以方便的写一些注释帮助我们阅读理解源码</p>
</li>
<li>
<p>建个分支来学习</p>
<p>分支的基础版本为：2.1.0.RELEASE</p>
<figure><img src="https://raw.githubusercontent.com/MrJackC/PicGoImages/main/other/202404232206965.png" alt="image-20220308192302601" tabindex="0" loading="lazy"><figcaption>image-20220308192302601</figcaption></figure>
</li>
</ol>`,r:{minutes:2.2,words:661},t:"导入SpringBoot源码",y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-y-source-kotlin.html",{loader:()=>o(()=>import("./springboot-y-source-kotlin.html-BbULfXBK.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>Springboot源码编译时报错</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>Kotlin: Language version 1.1 is no longer supported； please, use version 1.2</span></span></code></pre>
</div>`,r:{minutes:.67,words:200},t:"Springboot源码编译Kotlin版本过低问题",y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-y-source-main.html",{loader:()=>o(()=>import("./springboot-y-source-main.html-D9fdu8K8.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p>正常情况下我们main方法执行结束后，该进程就结束了。那为什么springboot main函数执行完不会退出呢？</p>
<figure><img src="https://raw.githubusercontent.com/MrJackC/PicGoImages/main/other/202404232212356.png" alt="image-20220515222654390" tabindex="0" loading="lazy"><figcaption>image-20220515222654390</figcaption></figure>`,r:{minutes:2.01,words:603},t:"为什么SpringBoot中main方法执行完毕后程序不会直接退出呢",y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-y-source-module.html",{loader:()=>o(()=>import("./springboot-y-source-module.html-CM7pQpc3.js"),[]),meta:{d:1729494189e3,g:null,e:`
<blockquote>
<p>注：该源码分析对应SpringBoot版本为<strong>2.1.0.RELEASE</strong></p>
</blockquote>
<h2><strong>1. 前言</strong></h2>
<p><strong>阅读源码，此时我们一定要对项目结构等有一个整体的认识，然后再进行源码分析调试</strong> 。</p>
<h2><strong>2. SpringBoot源码模块一览</strong></h2>
<p>我们先来对SpringBoot的源码模块来一个大致的了解，如下图：</p>
<figure><img src="https://raw.githubusercontent.com/MrJackC/PicGoImages/main/other/202404232213446.png" alt="image-20220331162621887" tabindex="0" loading="lazy"><figcaption>image-20220331162621887</figcaption></figure>`,r:{minutes:6.7,words:2011},t:"SpringBoot的模块及结构",y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-y-source-tomcat.html",{loader:()=>o(()=>import("./springboot-y-source-tomcat.html-DTRDm3Ht.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 准备</h2>
<p>我们知道SpringBoot的自动装配的秘密在<code>org.springframework.boot.autoconfigure</code>包下的<code>spring.factories</code>文件中，而嵌入Tomcat的原理就在这个文件中加载的一个配置类：<code>org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration</code></p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Configuration</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">AutoConfigureOrder</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Ordered</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">HIGHEST_PRECEDENCE</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ConditionalOnClass</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ServletRequest</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ConditionalOnWebApplication</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Type</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SERVLET</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">EnableConfigurationProperties</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ServerProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Import</span><span style="color:#E06C75;--shiki-dark:#E06C75">({ </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ServletWebServerFactoryAutoConfiguration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">BeanPostProcessorsRegistrar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">		ServletWebServerFactoryConfiguration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">EmbeddedTomcat</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">		ServletWebServerFactoryConfiguration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">EmbeddedJetty</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">		ServletWebServerFactoryConfiguration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">EmbeddedUndertow</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#E06C75;--shiki-dark:#E06C75"> })</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ServletWebServerFactoryAutoConfiguration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">	@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Bean</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">	public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ServletWebServerFactoryCustomizer</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> servletWebServerFactoryCustomizer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">			ServerProperties</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> serverProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">		return</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> ServletWebServerFactoryCustomizer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(serverProperties);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">	@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Bean</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">	@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ConditionalOnClass</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">name</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "org.apache.catalina.startup.Tomcat"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">	public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> TomcatServletWebServerFactoryCustomizer</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> tomcatServletWebServerFactoryCustomizer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">			ServerProperties</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> serverProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">		return</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> TomcatServletWebServerFactoryCustomizer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(serverProperties);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">	/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">	 * Registers a {@link WebServerFactoryCustomizerBeanPostProcessor}. Registered via</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">	 * {@link ImportBeanDefinitionRegistrar} for early registration.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">	 */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">	public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> BeanPostProcessorsRegistrar</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">			implements</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ImportBeanDefinitionRegistrar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> BeanFactoryAware</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">		private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ConfigurableListableBeanFactory</span><span style="color:#E06C75;--shiki-dark:#E06C75"> beanFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">		@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">		public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> setBeanFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">BeanFactory</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> beanFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#C678DD;--shiki-dark:#C678DD"> throws</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> BeansException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">			if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (beanFactory </span><span style="color:#C678DD;--shiki-dark:#C678DD">instanceof</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ConfigurableListableBeanFactory) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">				this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">beanFactory</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (ConfigurableListableBeanFactory) beanFactory;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">			}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">		}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">		@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">		public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> registerBeanDefinitions</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">AnnotationMetadata</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> importingClassMetadata</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">				BeanDefinitionRegistry</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> registry</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">			if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">beanFactory</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> ==</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">				return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">			}</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">			registerSyntheticBeanIfMissing</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(registry,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">					"webServerFactoryCustomizerBeanPostProcessor"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">					WebServerFactoryCustomizerBeanPostProcessor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">			registerSyntheticBeanIfMissing</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(registry,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">					"errorPageRegistrarBeanPostProcessor"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">					ErrorPageRegistrarBeanPostProcessor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">		}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">		private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> registerSyntheticBeanIfMissing</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">BeanDefinitionRegistry</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> registry</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">				String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#C678DD;--shiki-dark:#C678DD">?</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">beanClass</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">			if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ObjectUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isEmpty</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">					this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">beanFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getBeanNamesForType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(beanClass, </span><span style="color:#D19A66;--shiki-dark:#D19A66">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;--shiki-dark:#D19A66">false</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">))) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">				RootBeanDefinition</span><span style="color:#E06C75;--shiki-dark:#E06C75"> beanDefinition</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> RootBeanDefinition</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(beanClass);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">				beanDefinition</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setSynthetic</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">				registry</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">registerBeanDefinition</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(name, beanDefinition);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">			}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">		}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:5.15,words:1546},t:"SpringBoot进阶 - SpringBoot嵌入式Tomcat的自动配置原理",O:80,y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringMVC/",{loader:()=>o(()=>import("./index.html-Bs8ID6JM.js"),[]),meta:{d:17204832e5,l:"2024年7月9日",e:`<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>这里放置SpringMVC相关的内容</p>
</div>
<hr>
`,r:{minutes:.09,words:28},t:"SpringMVC",O:2,y:"p"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringMVC/day01.html",{loader:()=>o(()=>import("./day01.html-CeEV518W.js"),[]),meta:{d:1729494189e3,e:`
<p><strong>三层架构</strong></p>
<ul>
<li>
<p>表现层：负责数据展示</p>
</li>
<li>
<p>业务层：负责业务处理</p>
</li>
<li>
<p>数据层：负责数据操作</p>
</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111626767.png" alt="image-20200426174726083" tabindex="0" loading="lazy"><figcaption>image-20200426174726083</figcaption></figure>`,r:{minutes:15.39,words:4617},t:"1 SpringMVC 概述",y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringMVC/day02.html",{loader:()=>o(()=>import("./day02.html-Di70yYFk.js"),[]),meta:{d:1729494189e3,e:`
<h2>1.1 发送异步请求（回顾）</h2>
<div class="language-js line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">a</span><span style="color:#D19A66;font-style:italic;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> href</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">"javascript:void(0);"</span><span style="color:#D19A66;font-style:italic;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> id</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">"testAjax"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;访问controller&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">a</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">script</span><span style="color:#D19A66;font-style:italic;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">"text/javascript"</span><span style="color:#D19A66;font-style:italic;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> src</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">"/js/jquery-3.3.1.min.js"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">script</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">script</span><span style="color:#D19A66;font-style:italic;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">"text/javascript"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    $(function()</span><span style="color:#C678DD;--shiki-dark:#C678DD">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">    $</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"#testAjax"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">click</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">function</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(){ </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//为id="testAjax"的组件绑定点击事件</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        $</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">ajax</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">({ </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//发送异步调用</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            type</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span><span style="color:#98C379;--shiki-dark:#98C379">"POST"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//请求方式： POST请求</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            url</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span><span style="color:#98C379;--shiki-dark:#98C379">"ajaxController"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//请求参数（也就是请求内容）</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            data</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span><span style="color:#98C379;--shiki-dark:#98C379">'ajax message'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//请求参数（也就是请求内容）</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            dataType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span><span style="color:#98C379;--shiki-dark:#98C379">"text"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//响应正文类型</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            contentType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span><span style="color:#98C379;--shiki-dark:#98C379">"application/text"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//请求正文的MIME类型</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        });</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    });</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">}</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">script</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:12.77,words:3830},t:"1 异步调用",y:"a"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringMVC/day03.html",{loader:()=>o(()=>import("./day03.html-CMsZUQPs.js"),[]),meta:{d:1729494189e3,e:`
<h2>1.1 校验框架入门</h2>
<h3>1.1.1 表单校验的重要性</h3>
<ul>
<li>表单校验保障了数据有效性、安全性</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111628174.png" alt="image-20200505144306747" tabindex="0" loading="lazy"><figcaption>image-20200505144306747</figcaption></figure>
<p>数据可以随意输入，导致错误的结果。后端表单校验的重要性。</p>`,r:{minutes:10.18,words:3054},t:"1 校验框架",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/api-doc/swagger-x-module.html",{loader:()=>o(()=>import("./swagger-x-module.html-oOCGr9b1.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 背景</h2>
<p>我们在使用swagger的时候，如果接口非常多的时候，我们的接口列表是非常庞大的。要查找一个接口并不容易。我们希望能按模块划分</p>
<h3>1.1 初始情况</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231159846.png" alt="image-20211026093522355" tabindex="0" loading="lazy"><figcaption>image-20211026093522355</figcaption></figure>`,r:{minutes:1.5,words:449},t:"Swagger分模块",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/api-doc/swagger-x-use.html",{loader:()=>o(()=>import("./swagger-x-use.html-CZrs5XHM.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<blockquote>
<p>Swagger 是一个规范和完整的框架，用于生成、描述、调用和可视化 RESTful 风格的 Web 服务的接口文档。</p>
</blockquote>
<p><em>1. 接口的文档在线自动生成。</em></p>
<p><em>2. 功能测试。</em></p>
<h2>2.集成</h2>
<h3>2.1 引入依赖包</h3>
<div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">properties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">       ...</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">swagger.version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;2.7.0&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">swagger.version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">properties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">&lt;!-- swagger2 --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;io.springfox&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;springfox-swagger2&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;\${swagger.version}&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">&lt;!-- swagger2 ui --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;io.springfox&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;springfox-swagger-ui&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;\${swagger.version}&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:5.04,words:1512},t:"Swagger的使用",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/cas/cas-x-logout-process.html",{loader:()=>o(()=>import("./cas-x-logout-process.html-C6-4Tp-M.js"),[]),meta:{d:1729494189e3,c:["CAS"],g:null,e:`
<p>CAS 的登出包含两种情况，一种是CAS客户端登出，另一种是CAS单点登出，使用流程图说明这两者的不同。（一图胜千言）</p>
<h2>1. CAS客户端登出流程</h2>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231219563.png" alt="image-20230215224130109" tabindex="0" loading="lazy"><figcaption>image-20230215224130109</figcaption></figure>
`,r:{minutes:1.2,words:360},t:"CAS单点登录 - 登出",O:40,y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/cas/cas-x-logout.html",{loader:()=>o(()=>import("./cas-x-logout.html-D9Ii_EoW.js"),[]),meta:{d:1729494189e3,c:["CAS"],g:null,e:`
<h2>1. 本文目标</h2>
<p>基于SpringBoot + Maven 分别使用自动配置与手动配置过滤器方式实现CAS客户端登出及单点登出。</p>
<blockquote>
<p>本文基于《<a href="https://www.cnblogs.com/hellxz/p/15768700.html" target="_blank" rel="noopener noreferrer">CAS学习笔记三：SpringBoot自动/手动配置方式集成CAS单点登录</a>》的代码扩充而来，完整代码见 <a href="https://github.com/hellxz/cas-integration-demo" target="_blank" rel="noopener noreferrer">https://github.com/hellxz/cas-integration-demo</a></p>
</blockquote>`,r:{minutes:8.5,words:2549},t:"CAS单点登录 - SpringBoot自动/手动配置方式集成CAS单点登出",O:50,y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/cas/cas-x-overview.html",{loader:()=>o(()=>import("./cas-x-overview.html-BHV4oFfL.js"),[]),meta:{d:1729494189e3,c:["CAS"],g:null,e:`
<h2>1. 什么是CAS</h2>
<p>CAS是Central Authentication Service的缩写，中央认证服务，一种独立开放指令协议。CAS 是 耶鲁大学（Yale University）发起的一个开源项目，旨在为 Web 应用系统提供一种可靠的单点登录方法，CAS 在 2004 年 12 月正式成为 JA-SIG 的一个项目。</p>
<p>简单来说，就是开源的企业级单点登录（SSO）服务。</p>
<h2>2. CAS Server 搭建思路</h2>
<p>CAS 官方提供了一种使用 Apereo CAS WAR Overlay Template 的方式（开发人员通过 克隆模板仓库<a href="https://github.com/apereo/cas-overlay-template" target="_blank" rel="noopener noreferrer">https://github.com/apereo/cas-overlay-template</a> ，修改Maven/Gradle配置引入官方发布War包依赖，构建时将变更的文件更新到新的War中）简化了开发人员二次开发复杂性，提高了开发效率。</p>`,r:{minutes:2.67,words:802},t:"CAS单点登录 - 服务搭建",O:10,y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/cas/cas-x-process.html",{loader:()=>o(()=>import("./cas-x-process.html-CsGoqIld.js"),[]),meta:{d:1729494189e3,c:["CAS"],g:null,e:`
<h2>1. 相关术语</h2>
<blockquote>
<p>此处将不介绍验签相关的术语，约等于CAS1</p>
</blockquote>
<ul>
<li>CAS (Central Authentication Service) - 中央认证服务器</li>
<li>SSO (Single Sign On) - 单点登录</li>
<li>CAS Client - 集成CAS登录流程的应用服务</li>
<li>TGT (Ticket Granting Ticket) - 存在 CAS 服务端的用户票据，可使用此票据颁发ST</li>
<li>TGC (Ticket Granting Cookie)- 存在浏览器的 Cookie，对应 CAS 服务端的 TGT</li>
<li>ST (Service Ticket) - 服务票据，CAS为每个登录成功的应用服务生成唯一票据，对应应用服务的服务名（serverName）</li>
</ul>`,r:{minutes:2.4,words:719},t:"CAS单点登录 - 登录流程",O:20,y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/cas/cas-x-springboot.html",{loader:()=>o(()=>import("./cas-x-springboot.html-Dz_RfXiS.js"),[]),meta:{d:1729494189e3,c:["CAS"],e:`
<h2>1. 本文目标</h2>
<p>基于SpringBoot + Maven 分别使用自动配置与手动配置过滤器方式集成CAS客户端。</p>
<blockquote>
<ul>
<li>需要提前搭建 CAS 服务端，参考 <a href="https://www.cnblogs.com/hellxz/p/15740935.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/hellxz/p/15740935.html</a></li>
<li>代码已上传本人 GitHub <a href="https://github.com/hellxz/cas-integration-demo" target="_blank" rel="noopener noreferrer">https://github.com/hellxz/cas-integration-demo</a></li>
</ul>
</blockquote>`,r:{minutes:6.15,words:1844},t:"CAS单点登录 - SpringBoot自动/手动配置方式集成CAS单点登录",O:30,y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/database-connection-pool/dbcp-a-principle.html",{loader:()=>o(()=>import("./dbcp-a-principle.html-BLZD6h0R.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 是什么</h2>
<p>数据库连接池<strong>负责分配、管理和释放数据库连接</strong>，它允许应用程序<strong>重复使用一个现有的数据库连接，而不是再重新建立一个</strong>。</p>
<h2>2. 为什么</h2>
<ul>
<li>
<p>数据库连接是一种关键的有限的昂贵的资源</p>
<p>在多用户的网页应用程序中体现得尤为突出。 一个数据库连接对象均对应一个物理数据库连接，每次操作都打开一个物理连接，使用完都关闭连接，这样造成系统的 性能低下。</p>
</li>
</ul>
<h3>2.1 数据库连接池 做了什么</h3>
<p>数据库连接池的解决方案是</p>`,r:{minutes:8.49,words:2548},t:"数据库连接池原理",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/database-connection-pool/dbcp-x-druid-mutil.html",{loader:()=>o(()=>import("./dbcp-x-druid-mutil.html-UecFpHb-.js"),[]),meta:{d:1729494189e3,e:`
<p>本篇介绍在 SpringBoot 下如何配置Druid 多数据源</p>
<h2>集成步骤目录</h2>
<ol>
<li>引入jar包</li>
<li>设置配置参数</li>
<li>编写配置文件与
<ol>
<li>编写数据源常量/枚举</li>
<li>创建动态数据源</li>
<li>动态数据源配置</li>
<li>定义动态数据源注解</li>
<li>设置数据源 AOP 代理</li>
</ol>
</li>
<li>修改启动文件</li>
</ol>
<h2>具体集成步骤</h2>
<h3>1.引入jar包</h3>
<p>以我们公司项目为例，数据库主要使用<code>oracle</code> 和 国产数据库 <code>gbase</code></p>`,r:{minutes:2.32,words:695},t:"Druid多数据源配置",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/database-connection-pool/dbcp-x-druid-overview.html",{loader:()=>o(()=>import("./dbcp-x-druid-overview.html-BzJuRxcv.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>Druid 除了提供性能卓越的连接池功能外，还集成了SQL监控，黑名单拦截等功能，用它自己的话说，Druid是“为监控而生”。借助于阿里这个平台的号召力，产品一经发布就赢得了大批用户的拥趸，从用户使用的反馈来看，Druid也确实没让用户失望。</p>
<p>相较于其他产品，Druid另一个比较大的优势，就是中文文档比较全面（毕竟是国人的项目么），在github的wiki页面，列举了日常使用中可能遇到的问题，对一个新用户来讲，上面提供的内容已经足够指导它完成产品的配置和使用了。</p>
<h2>2. Druid 相对于其他数据库连接池的优点</h2>
<ol>
<li>强大的监控特性，通过Druid提供的监控功能，可以清楚知道连接池和SQL的工作情况。<br>
a. 监控SQL的执行时间、ResultSet持有时间、返回行数、更新行数、错误次数、错误堆栈信息；<br>
b. SQL执行的耗时区间分布。什么是耗时区间分布呢？比如说，某个SQL执行了1000次，其中01毫秒区间50次，110毫秒800次，10100毫秒100次，1001000毫秒30次，1~10秒15次，10秒以上5次。通过耗时区间分布，能够非常清楚知道SQL的执行耗时情况；<br>
c. 监控连接池的物理连接创建和销毁次数、逻辑连接的申请和关闭次数、非空等待次数、PSCache命中率等。</li>
<li>方便扩展。Druid提供了Filter-Chain模式的扩展API，可以自己编写Filter拦截JDBC中的任何方法，可以在上面做任何事情，比如说性能监控、SQL审计、用户名密码加密、日志等等。</li>
<li>Druid集合了开源和商业数据库连接池的优秀特性，并结合阿里巴巴大规模苛刻生产环境的使用经验进行优化。</li>
</ol>`,r:{minutes:1.8,words:541},t:"为什么选择Druid",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/database-connection-pool/dbcp-y-druid-source-counter.html",{loader:()=>o(()=>import("./dbcp-y-druid-source-counter.html-D3SBcC_J.js"),[]),meta:{d:1729494189e3,g:null,e:`
<p>在 Druid 连接池的工作过程中，会用到一些计数器对Druid的情况进行判断。然后根据计数器的数据采取一系列操作，整理如下:</p>
<h2>1. 统计类的计数器</h2>
<table>
<thead>
<tr>
<th>变量名</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>connectCount</td>
<td>long</td>
<td>getConnectionInternal被调用之后就会增加，意味着连接被get的次数。</td>
</tr>
<tr>
<td>closeCount</td>
<td>long</td>
<td>连接调用recycle中，包括回收、关闭等情况，成功之后会增加，标识连接关闭的次数。</td>
</tr>
<tr>
<td>recycleCount</td>
<td>long</td>
<td>连接调用recycle成功之后才会增加，不包括在回收过程中关闭的情况。标识连接真正回收的次数。</td>
</tr>
<tr>
<td>removeAbandonedCount</td>
<td>long</td>
<td>连接调用removeAbandoned成功之后才会增加，标识连接跟踪泄露机制的执行次数。</td>
</tr>
<tr>
<td>notEmptyWaitCount</td>
<td>long</td>
<td>连接调用pollLast或者tackLast之后就会增加，实际上是触发notEmpty.await的的次数.</td>
</tr>
<tr>
<td>notEmptySignalCount</td>
<td>long</td>
<td>连接触发notEmpty的signal的次数。</td>
</tr>
<tr>
<td>discardCount</td>
<td>volatile long</td>
<td>调用discard成功之后的次数。</td>
</tr>
</tbody>
</table>`,r:{minutes:2.16,words:649},t:"Druid源码学习（十）-DruidDataSource中的一些计数器",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/database-connection-pool/dbcp-y-druid-source-data-structure.html",{loader:()=>o(()=>import("./dbcp-y-druid-source-data-structure.html-DAFpE0Zh.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p>DruidDataSource是DruidCP最关键的类之一，承载了连接池的启动、关闭、以及连接的获取和管理等功能。</p>
<h2>2. DruidDataSource的数据结构</h2>
<p>DruidDataSource 其内部关键的的数据结构如下表:</p>
<table>
<thead>
<tr>
<th>name</th>
<th>type</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>connections</td>
<td>volatile DruidConnectionHolder[]</td>
<td>pool的关键数组，存放连接，实际上是DruidConnectionHolder的数组。Connection由DruidConnectionHolder持有</td>
</tr>
<tr>
<td>evictConnections</td>
<td>DruidConnectionHolder[]</td>
<td>被驱逐的Connection的pool,调用收缩方法shrink之后，被收缩的连接都会进入这个数组。</td>
</tr>
<tr>
<td>keepAliveConnections</td>
<td>DruidConnectionHolder[]</td>
<td>收缩方法shrink中，满足keepalive状态的连接都进入这个数组。</td>
</tr>
<tr>
<td>autoFilters</td>
<td>static List</td>
<td>这个list存全部的filter</td>
</tr>
<tr>
<td>enable</td>
<td>volatile boolean</td>
<td>默认值为true,标识连接池是否可用，调用close方法设置该值为false,当为false的时候，连接的error次数增加1,get连接或者其他操作会失败。</td>
</tr>
<tr>
<td>inited</td>
<td>volatile boolean</td>
<td>默认值为false,初始化完成的标识。</td>
</tr>
<tr>
<td>closing</td>
<td>volatile boolean</td>
<td>关闭过程中的状态。正在close</td>
</tr>
</tbody>
</table>`,r:{minutes:3.12,words:935},t:"Druid源码学习（一）-DruidDataSource数据结构",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/database-connection-pool/dbcp-y-druid-source-getconnection.html",{loader:()=>o(()=>import("./dbcp-y-druid-source-getconnection.html-C63xcJ8b.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<h3>1.1 DruidDataSource 实现 javax.sql.DataSource</h3>
<p>DruidDataSource连接池实现了javaX.sql包中，DataSource接口的全部方法。getConnection也来自于javax.sql.DataSource接口。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231230295.png" alt="image-20220522090249593" tabindex="0" loading="lazy"><figcaption>image-20220522090249593</figcaption></figure>`,r:{minutes:7.43,words:2230},t:"Druid源码学习（四）-DruidDataSource的getConnection过程",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/database-connection-pool/dbcp-y-druid-source-init.html",{loader:()=>o(()=>import("./dbcp-y-druid-source-init.html-CKE8Cj8n.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p>DruidDataSource的使用都是创建DruidDataSource对象，set配置参数之后，调用init方法。</p>
<p>通过mock测试实例化DruidDataSource：</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>DruidDataSource ds = new DruidDataSource();</span></span>
<span class="line"><span>ds.setUrl("jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=utf-8&amp;serverTimezone=UTC");</span></span>
<span class="line"><span>ds.setUsername("test");</span></span>
<span class="line"><span>ds.setPassword("123456");</span></span>
<span class="line"><span>ds.setFilters("stat");</span></span>
<span class="line"><span>ds.init();</span></span></code></pre>
</div>`,r:{minutes:6.62,words:1986},t:"Druid源码学习2DruidDataSource的init过程",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/database-connection-pool/dbcp-y-druid-source-principle.html",{loader:()=>o(()=>import("./dbcp-y-druid-source-principle.html-D7BFW2Xn.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p>DruidDataSource 数据库连接池 的的本质，实际上是一个利用<strong>ReentrentLock和两个Condition组成的生产者和消费者模型。</strong></p>
<h2>2. DruidDataSource中的锁</h2>
<p>在DruidAbstractDataSource类中，定义了一个非常重要的锁，几乎所有的线程都使用到了这个锁。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//可重入锁 lock</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">protected</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ReentrantLock</span><span style="color:#E06C75;--shiki-dark:#E06C75">                            lock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//非空条件变量</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">protected</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Condition</span><span style="color:#E06C75;--shiki-dark:#E06C75">                                notEmpty</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//空条件变量</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">protected</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Condition</span><span style="color:#E06C75;--shiki-dark:#E06C75">                                empty</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span></code></pre>
</div>`,r:{minutes:6.41,words:1924},t:"Druid源码学习（三）-DruidDataSource连接池的基本原理（重点）",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/database-connection-pool/dbcp-y-druid-source-psp.html",{loader:()=>o(()=>import("./dbcp-y-druid-source-psp.html-C_KkXYI_.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>在阅读DruidDataSource源码的过程中，发现DruidConnectionHolder有个特别的属性</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>PreparedStatementPool statementPool。</span></span></code></pre>
</div>`,r:{minutes:4.15,words:1246},t:"Druid源码学习（六）-PreparedStatementPool源码及使用场景分析",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/database-connection-pool/dbcp-y-druid-source-recycle.html",{loader:()=>o(()=>import("./dbcp-y-druid-source-recycle.html-l_kZ7-kk.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>Druid 中的Connection在使用之后，要进行回收，而回收连接的方法就是recycle方法。<br>
回收的主要目的是将连接的状态清空/重置之后，放置到连接池的connections数组的尾部，然后发送连接池lock的notEmpty条件变量 通知消息，让等待的消费者线程来获取连接。</p>
<h2>2.回收过程</h2>
<p>回收方法首先要做的是，判断回收线程是否为同一个线程。如果不是，则打印日志输出。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 回收连接</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    protected</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> recycle</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DruidPooledConnection</span><span style="color:#E06C75;--shiki-dark:#E06C75"> pooledConnection) throws SQLException {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (logDifferentThread </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">                &amp;&amp;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isAsyncCloseConnectionEnable</span><span style="color:#E06C75;--shiki-dark:#E06C75">()) </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">                &amp;&amp;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> pooledConnection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ownerThread</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> !=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Thread</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">currentThread</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        ) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            LOG</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">warn</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"get/close not same thread"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
</div>`,r:{minutes:3.45,words:1036},t:"Druid源码学习（七）-DruidDataSource的recycle过程",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/database-connection-pool/dbcp-y-druid-source-removeAbandoned.html",{loader:()=>o(()=>import("./dbcp-y-druid-source-removeAbandoned.html-SSo7Eqnu.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>有关于 Druid 的removeAbandoned机制，在getConnection源码中介绍过。removeAbandoned实际上就是Druid的泄露检测机制。主要的参数有：</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>removeAbandoned</td>
<td>如果连接泄露，是否需要回收泄露的连接，默认false；</td>
</tr>
<tr>
<td>logAbandoned</td>
<td>如果回收了泄露的连接，是否要打印一条log，默认false；</td>
</tr>
<tr>
<td>removeAbandonedTimeoutMillis</td>
<td>连接回收的超时时间，默认5分钟；</td>
</tr>
</tbody>
</table>`,r:{minutes:1.77,words:530},t:"Druid源码学习（八）-DruidDataSource的removeAbandoned机制",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/database-connection-pool/dbcp-y-druid-source-shrink.html",{loader:()=>o(()=>import("./dbcp-y-druid-source-shrink.html-BDYLzbHM.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>shrink方法是DestroyTask线程中回收连接的具体执行方法。</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 回收连接线程</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> DestroyTask</span><span style="color:#C678DD;--shiki-dark:#C678DD"> implements</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Runnable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        public</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> DestroyTask</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> run</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">            shrink</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, keepAlive);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isRemoveAbandoned</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">                removeAbandoned</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:5.4,words:1621},t:"Druid源码学习（五）-DruidDataSource的shrink过程",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/database-connection-pool/dbcp-ydruid-source-status.html",{loader:()=>o(()=>import("./dbcp-ydruid-source-status.html-D9uqmrLf.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. DruidPooledConnection中的状态：</h2>
<table>
<thead>
<tr>
<th>字段</th>
<th>类型</th>
<th>所在类</th>
<th>默认值</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>closed</td>
<td>volatile boolean</td>
<td>DruidPooledConnection</td>
<td>FALSE</td>
<td>关闭状态，recycle到连接池中的连接会修改为true。但是这个状态通常只在checkStateInternal中单独使用。判断连接是否关闭需要结合(closed or disable)</td>
</tr>
<tr>
<td>disable</td>
<td>volatile boolean</td>
<td>DruidPooledConnection</td>
<td>FALSE</td>
<td>不可用状态，当连接出现异常调用handleFatalError之后，将此状态设置为true.之后连接处于不可用状态。</td>
</tr>
<tr>
<td>traceEnable</td>
<td>volatile boolean</td>
<td>DruidPooledConnection</td>
<td>FALSE</td>
<td>traceEnable跟踪开关，默认为false,这个开关配合abandoned使用，当DruidDataSource开启removeAbandoned之后，这个状态设置为true,当连接从activeConnections中取出的时候，设置为false.</td>
</tr>
<tr>
<td>abandoned</td>
<td>volatile boolean</td>
<td>DruidPooledConnection</td>
<td>FALSE</td>
<td>连接泄露检测状态，默认为false,当removeAbandoned开始执行之后，对符合条件的连接，将其设置为true的时候开启连接泄露检测。</td>
</tr>
<tr>
<td>running</td>
<td>volatile boolean</td>
<td>DruidPooledConnection</td>
<td>FALSE</td>
<td>运行状态，执行Statement之前的beforeExecute设置为true,执行完成之后afterExecute方法设置为false.</td>
</tr>
<tr>
<td>active</td>
<td>volatile boolean</td>
<td>DruidConnectionHolder</td>
<td>FALSE</td>
<td>活动状态,默认值为false,getConnectionInternal之后设置为true,discardConnection设置为false,recycle如果物理连接被关闭或者测试连接不通，以及回收成功，都修改为false。这是连接被用户线程调用的持有状态。标识连接被用户线程持有。</td>
</tr>
<tr>
<td>discard</td>
<td>volatile boolean</td>
<td>DruidConnectionHolder</td>
<td>FALSE</td>
<td>关闭状态，默认为false,调用discardConnection方法 或者recycle出现异常的时候改为true,之后关闭连接，</td>
</tr>
</tbody>
</table>`,r:{minutes:2.05,words:614},t:"Druid源码学习（九）-DruidDataSource和DruidConnection中的状态",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/hibernate/hibernate-x-entity.html",{loader:()=>o(()=>import("./hibernate-x-entity.html-COUtVncC.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 注意事项</h2>
<ol>
<li>为持久化类(实体类)提供无参构造</li>
<li>成员变量私有，提供get/set方法访问，需提供属性</li>
<li>持久化类中的属性应尽量用包装类型, 如Long 、String  因为基本类型不一定能用null</li>
<li>持久化类需提供唯一标志oid，与数据库中的主键列相对应</li>
<li>尽量不要用final修饰class。<br>
//因为hibernate使用cglib代理生成代理对象，代理对象是即成被代理对象的，final会导致无法代理</li>
</ol>
<h2>2. 主键</h2>
<h3>2.1 主键类型</h3>`,r:{minutes:4.79,words:1437},t:"Hibernate实体类创建规则",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/hibernate/hibernate-x-overview.html",{loader:()=>o(()=>import("./hibernate-x-overview.html-DdBiZ_zx.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. Hibernate的核心组件</h2>
<ul>
<li>Configuration类：用来读取Hibernate配置文件，并生成SessionFactory对象。</li>
<li>SessionFactory接口：产生Session实例工厂。</li>
<li>Session接口：用来操作PO。它有get(),load(),save(),update()和delete()等方法用来对PO进行加载，保存，更新及删除等操作。它是Hibernate的核心接口。</li>
<li>Query接口：用来对PO进行查询操。它可以从Session的createQuery()方法生成。</li>
<li>Transaction接口：用来管理Hibernate事务，它主要方法有commit()和rollback()，可以从Session的beginTrancation()方法生成。</li>
</ul>`,r:{minutes:2.11,words:632},t:"Hibernate概念与原理",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/hibernate/hibernate-x-query.html",{loader:()=>o(()=>import("./hibernate-x-query.html-DyhEsID_.js"),[]),meta:{d:1729494189e3,e:`
<h2>1.简介</h2>
<ol>
<li>主键查询</li>
<li>HQL查询</li>
<li>QBC查询</li>
<li>本地SQL查询</li>
</ol>
<h2>2. 主键查询</h2>
<p>通过主键来查询数据库的记录，从而返回一个JavaBean对象</p>
<ul>
<li><strong>session.get(javaBean.class, int id); 【传入对应的class和id就可以查询】</strong></li>
<li><strong>session.load(javaBean.class, int id); 【支持懒加载】</strong></li>
</ul>`,r:{minutes:3.48,words:1045},t:"Hibernate的四种查询方式",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/hibernate/hibernate-y-maven-example.html",{loader:()=>o(()=>import("./hibernate-y-maven-example.html-BuB0xYsY.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 集成步骤</h2>
<h3>步骤1：POM添加依赖</h3>
<div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependencies</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- Spring --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;org.springframework&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;spring-core&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;4.0.6.RELEASE&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;org.springframework&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;spring-context&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;4.0.6.RELEASE&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;org.springframework&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;spring-tx&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;4.0.6.RELEASE&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;org.springframework&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;spring-orm&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;4.0.6.RELEASE&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- Hibernate --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;org.hibernate&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;hibernate-core&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;\${hibernate.version}&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- MySQL --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;mysql&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;mysql-connector-java&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;5.1.31&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- Joda-Time --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;joda-time&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;joda-time&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;2.3&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- To map JodaTime with database type --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;org.jadira.usertype&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;usertype.core&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;3.0.0.CR1&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependencies</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">pluginManagement</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">plugins</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">plugin</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;org.apache.maven.plugins&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;maven-compiler-plugin&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;3.2&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">configuration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">source</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;1.6&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">source</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">target</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;1.6&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">target</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                    &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">configuration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">plugin</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">plugins</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">pluginManagement</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:4.61,words:1382},t:"Maven集成Hibernate示例",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/jdbc/JDBC-01.html",{loader:()=>o(()=>import("./JDBC-01.html-D_Z1PvIF.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h3>一、JDBC快速入门</h3>
<h4>1.jdbc的概念</h4>
<ul>
<li>JDBC（Java DataBase Connectivity,java数据库连接）是一种用于执行SQL语句的Java API，可以为多种关系型数据库提供统一访问，它是由一组用Java语言编写的类和接口组成的。</li>
</ul>
<h4>2.jdbc的本质</h4>
<ul>
<li>
<p>其实就是java官方提供的一套规范(接口)。用于帮助开发人员快速实现不同关系型数据库的连接！</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231248177.png" alt="01" tabindex="0" loading="lazy"><figcaption>01</figcaption></figure>
</li>
</ul>`,r:{minutes:16.08,words:4823},t:"JavaWeb - JDBC",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/jdbc/JDBC-02.html",{loader:()=>o(()=>import("./JDBC-02.html-BNWMFFHh.js"),[]),meta:{d:1729494189e3,e:`
<h3>一、数据库连接池</h3>
<h4>1.数据库连接池的概念</h4>
<ul>
<li>数据库连接背景
<ul>
<li>数据库连接是一种关键的、有限的、昂贵的资源，这一点在多用户的网页应用程序中体现得尤为突出。对数据库连接的管理能显著影响到整个应用程序的伸缩性和健壮性，影响到程序的性能指标。数据库连接池正是针对这个问题提出来的。</li>
</ul>
</li>
<li>数据库连接池
<ul>
<li>数据库连接池负责分配、管理和释放数据库连接，它允许应用程序重复使用一个现有的数据库连接，而不是再重新建立一个。这项技术能明显提高对数据库操作的性能。</li>
</ul>
</li>
<li>数据库连接池原理</li>
</ul>`,r:{minutes:20.38,words:6115},t:"JDBC-02-授课笔记",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/jpa/jpa-i-dynamic.html",{loader:()=>o(()=>import("./jpa-i-dynamic.html-DKu-TRdy.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>@DynamicUpdate@DynamicInsert 是hibernate里面的注解</p>
<ul>
<li>
<p><strong>@DynamicInsert属性:</strong></p>
<p>设置为true,设置为true,表示insert对象的时候,生成动态的insert语句,如果这个字段的值是null就不会加入到insert语句当中.默认false。</p>
<blockquote>
<p>比如希望数据库插入日期或时间戳字段时，在对象字段为空的情况下，表字段能自动填写当前的sysdate。</p>
</blockquote>
</li>
<li>
<p><strong>@DynamicUpdate属性</strong>:</p>
<p>设置为true,设置为true,表示update对象的时候,生成动态的update语句,如果这个字段的值是null就不会被加入到update语句中,默认false。</p>
<blockquote>
<p>比如只想更新某个属性，但是却把整个对象的属性都更新了，这并不是我们希望的结果，我们希望的结果是：我更改了哪些字段，只要更新我修改的字段就够了。</p>
</blockquote>
</li>
</ul>`,r:{minutes:1.26,words:378},t:"@DynamicInsert和@DynamicUpdate生成动态SQL语句",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/jpa/jpa-i-genone-findone.html",{loader:()=>o(()=>import("./jpa-i-genone-findone.html-CNY8TuFb.js"),[]),meta:{d:1729494189e3,e:`
<p>使用 Spring Data JPA 时，经常会看到 <code>findById</code>、<code>getOne</code>、<code>findOne</code> 三个方法。</p>
<p>从字面上理解，他们都是根据 ID 、或根据指定的查询条件，获取单个实体对象。</p>
<p>但他们的底层获取机制、返回值类型、以及抛异常的机制是不一样的，因此对应的使用场景也不一样。</p>
<h2>1. findById 方法</h2>
<p><code>findById</code> 方法会立即（EAGER）访问数据库，并返回和指定 ID 关联的实体对象；如果没有找到，则返回 <code>Optional.empty()</code>。</p>`,r:{minutes:3.26,words:979},t:"JPA中的getOne,findOne以及findById区别",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/jpa/jpa-i-query-overview.html",{loader:()=>o(()=>import("./jpa-i-query-overview.html-Bi2jv94c.js"),[]),meta:{d:1729494189e3,e:`
<h2>查询方式种类</h2>
<ol>
<li>
<p>按照jpa规范，通过方法名来创建查询</p>
<p>（简单的用这个，条件很多的话，用这个方法名会很长。）</p>
</li>
<li>
<p>Query by Example</p>
<p>每次需要重新new 对象传入(不支持or,仅支持and)</p>
</li>
<li>
<p>@Query  JPQL 或原生sql查询</p>
</li>
<li>
<p>EntityManager.createNativeQuery 原生SQL</p>
</li>
</ol>
<h2>1. 按照jpa规范，通过方法名来创建查询</h2>
<h3>1.1 核心方法</h3>`,r:{minutes:8.27,words:2480},t:"JPA查询方式总结",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/jpa/jpa-i-specification.html",{loader:()=>o(()=>import("./jpa-i-specification.html-CEecU4GG.js"),[]),meta:{d:1729494189e3,e:`
<h2>1.简介</h2>
<ul>
<li>JpaRepository ：
<ul>
<li>拥有：拥有常用的 CURD 方法以及分页方法、字段排序</li>
</ul>
</li>
<li>JpaSpecificationExecutor</li>
</ul>
<h2>2. 用法</h2>
<ol>
<li>
<p>使用方法，让dao接口继承JpaSpecificationExecutor</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> interface</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> CustomerDao</span><span style="color:#C678DD;--shiki-dark:#C678DD"> extends</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> JpaRepository</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Customer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> JpaSpecificationExecutor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Customer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {}</span></span></code></pre>
</div></li>
<li>
<p>在JpaSpecificationExecutor中有下列方法：</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> interface</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> JpaSpecificationExecutor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">T</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">   	// 查询单个对象</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Optional</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">T</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> findOne</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Nullable</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Specification</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">T</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">var1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 查询列表</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">T</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> findAll</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Nullable</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Specification</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">T</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">var1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 查询全部，分页</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Page</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">T</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> findAll</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Nullable</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Specification</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">T</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">var1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Pageable</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> var2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    //查询列表</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">	//Sort：排序参数</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">T</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> findAll</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Nullable</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Specification</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">T</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">var1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Sort</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> var2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    //统计查询</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    long</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> count</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Nullable</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Specification</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">T</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">var1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中，Specification 为查询条件，需要自定义我们<strong>自己的Specification实现类,实现 toPredicate 方法</strong></p>
<ul>
<li>
<p>root：查询的根对象（查询的任何属性都可以从根对象中获取）</p>
</li>
<li>
<p>CriteriaQuery：顶层查询对象，自定义查询方式（了解：一般不用）</p>
</li>
<li>
<p>CriteriaBuilder：查询的构造器，封装了很多的查询条件</p>
</li>
</ul>
</li>
<li>
<p><strong>自定义查询条件spec</strong></p>
<ol>
<li>
<p>实现Specification接口（提供泛型：查询的对象类型）</p>
</li>
<li>
<p>实现toPredicate方法（构造查询条件）</p>
</li>
<li>
<p>需要借助方法参数中的两个参数</p>
<ul>
<li>
<p>root：获取需要查询的对象属性</p>
</li>
<li>
<p>CriteriaBuilder：构造查询条件的，内部封装了很多的查询条件（模糊匹配，精准匹配）</p>
</li>
</ul>
</li>
</ol>
</li>
<li>
<p>spec 示例</p>
<ol>
<li>
<p><strong>自定义findOne单个条件查询</strong></p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Test</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> testSpec</span><span style="color:#E06C75;--shiki-dark:#E06C75">() {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">	Specification</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Customer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> spec </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Specification</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Customer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">() {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">		@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">		public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Predicate</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> toPredicate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Root</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Customer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">root</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">CriteriaQuery</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#C678DD;--shiki-dark:#C678DD">?</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">query</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">CriteriaBuilder</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> cb</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">			// 取需要查询的对象属性</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">			Path</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75">custName</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> root</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"custName"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">			// 进行精准的匹配，</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">			// 第一个参数：需要比较的属性（path对象）,第二个参数：当前需要比较的取值</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">			Predicate</span><span style="color:#E06C75;--shiki-dark:#E06C75"> predicate</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> cb</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">equal</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(custName, </span><span style="color:#98C379;--shiki-dark:#98C379">"支付宝"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">			return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> predicate;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">		}</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">	}</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">	Customer</span><span style="color:#E06C75;--shiki-dark:#E06C75"> customer </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> customerDao</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">findOne</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(spec);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">	System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(customer);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p><strong>自定义findOne多条件查询</strong></p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Test</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> testSpec1</span><span style="color:#E06C75;--shiki-dark:#E06C75">() {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">Specification</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Customer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> spec </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Specification</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Customer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">() {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">   public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Predicate</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> toPredicate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Root</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Customer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">root</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">CriteriaQuery</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#C678DD;--shiki-dark:#C678DD">?</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">query</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">CriteriaBuilder</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> cb</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">   	// 取需要查询的对象属性</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">   	Path</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75">custName</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> root</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"custName"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">   	Path</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75">custIndustry</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> root</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"custIndustry"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">   	// 构造第一个查询条件的精确匹配</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">   	Predicate</span><span style="color:#E06C75;--shiki-dark:#E06C75"> p1</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> cb</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">equal</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(custName, </span><span style="color:#98C379;--shiki-dark:#98C379">"支付宝"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">   	// 构造第二个查询条件的精确匹配</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">   	Predicate</span><span style="color:#E06C75;--shiki-dark:#E06C75"> p2</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> cb</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">equal</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(custIndustry, </span><span style="color:#98C379;--shiki-dark:#98C379">"it"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">   	// 将多个查询条件组合到一起</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">   	Predicate</span><span style="color:#E06C75;--shiki-dark:#E06C75"> and</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> cb</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">and</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(p1, p2);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">   	// cb.or();//以或的形式拼接多个查询条件</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">   	return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> and;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">Customer</span><span style="color:#E06C75;--shiki-dark:#E06C75"> customer </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> customerDao</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">findOne</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(spec);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(customer);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p><strong>自定义findAll模糊匹配</strong></p>
<p>前面使用 equal 直接使用path对象（属性），进行比较即可</p>
<p>但是 gt，lt,ge,le,like 不能直接使用path对象，要根据path对象指定比较的参数类型：<a href="https://link.zhihu.com/?target=http%3A//path.as" target="_blank" rel="noopener noreferrer">path.as</a>(类型的字节码对象)，</p>
<p>再进行比较：<a href="https://link.zhihu.com/?target=http%3A//cb.like" target="_blank" rel="noopener noreferrer">cb.like</a>(<a href="https://link.zhihu.com/?target=http%3A//custName.as" target="_blank" rel="noopener noreferrer">custName.as</a>(String.class), "支付%");</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Test</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> testSpec2</span><span style="color:#E06C75;--shiki-dark:#E06C75">() {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">	//构造查询条件</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">	Specification</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Customer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> spec </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Specification</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Customer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">() {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">		@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">		public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Predicate</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> toPredicate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Root</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Customer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">root</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">CriteriaQuery</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#C678DD;--shiki-dark:#C678DD">?</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">query</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">CriteriaBuilder</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> cb</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">			//查询属性：客户名</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">			Path</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75">custName</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> root</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"custName"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">			//查询方式：模糊匹配</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">			Predicate</span><span style="color:#E06C75;--shiki-dark:#E06C75"> like</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> cb</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">like</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">custName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">as</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">), </span><span style="color:#98C379;--shiki-dark:#98C379">"支付%"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">			return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> like;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">		}</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">	}</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">	List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Customer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> list </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> customerDao</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">findAll</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(spec);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">	for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Customer</span><span style="color:#E06C75;--shiki-dark:#E06C75"> customer </span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> list) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">		System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(customer);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">	}</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p><strong>排序查询</strong></p>
<p>创建排序对象,需要调用构造方法实例化sort对象</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">Sort</span><span style="color:#E06C75;--shiki-dark:#E06C75"> sort </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Sort</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Sort</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Direction</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DESC</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">"custId"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span></code></pre>
</div><p>第一个参数：排序的顺序（倒序，正序）</p>
<p>Sort.Direction.DESC:倒序</p>
<p>Sort.Direction.ASC ： 升序</p>
<p>第二个参数：排序的属性名称</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Test</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> testSpec3</span><span style="color:#E06C75;--shiki-dark:#E06C75">() {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">	//构造查询条件</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">	Specification</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Customer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> spec </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Specification</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Customer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">() {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">		@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">		public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Predicate</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> toPredicate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Root</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Customer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">root</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">CriteriaQuery</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#C678DD;--shiki-dark:#C678DD">?</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">query</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">CriteriaBuilder</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> cb</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">			//查询属性：客户名</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">			Path</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75">custName</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> root</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"custName"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">			//查询方式：模糊匹配</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">			Predicate</span><span style="color:#E06C75;--shiki-dark:#E06C75"> like</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> cb</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">like</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">custName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">as</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">), </span><span style="color:#98C379;--shiki-dark:#98C379">"支付%"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">			return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> like;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">		}</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">	}</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">	//添加排序</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">	Sort</span><span style="color:#E06C75;--shiki-dark:#E06C75"> sort </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Sort</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Sort</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Direction</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DESC</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">"custId"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">	List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Customer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> list </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> customerDao</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">findAll</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(spec, sort);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">	for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Customer</span><span style="color:#E06C75;--shiki-dark:#E06C75"> customer </span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> list) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">		System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(customer);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">	}</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p><strong>分页查询</strong></p>
<p>Pageable：分页参数</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">Pageable</span><span style="color:#E06C75;--shiki-dark:#E06C75"> pageable </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> PageRequest</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span></code></pre>
</div><p>分页参数：查询的页码，每页查询的条数</p>
<p>第一个参数：当前查询的页数（从0开始），第二个参数：每页查询的数量</p>
<p>分页查询的findAll有两个重载方法</p>
<p>findAll(Specification,Pageable)：带有条件的分页</p>
<p>findAll(Pageable)：没有条件的分页</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Test</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> testSpec4</span><span style="color:#E06C75;--shiki-dark:#E06C75">() {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">	Specification</span><span style="color:#E06C75;--shiki-dark:#E06C75"> spec </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">	//PageRequest对象是Pageable接口的实现类</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">	/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">	 * 创建PageRequest的过程中，需要调用他的构造方法传入两个参数</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">	 *      第一个参数：当前查询的页数（从0开始）</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">	 *      第二个参数：每页查询的数量</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">	 */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">	Pageable</span><span style="color:#E06C75;--shiki-dark:#E06C75"> pageable </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> PageRequest</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">	//分页查询</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">	Page</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Customer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> page </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> customerDao</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">findAll</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(pageable);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//        Page&lt;Customer&gt; page = customerDao.findAll(spec, pageable);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">	System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">page</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getContent</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> //得到数据集合列表</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">	System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">page</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getTotalElements</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//得到总条数</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">	System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">page</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getTotalPages</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//得到总页数</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
</ol>
</li>
</ol>`,r:{minutes:4.7,words:1409},t:"Spring Data JPA使用Specification复杂查询",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/jpa/jpa-j-join.html",{loader:()=>o(()=>import("./jpa-j-join.html-CUFL0I36.js"),[]),meta:{d:1729494189e3,e:`
<p>多表查询在spring data jpa中有两种实现方式，第一种是利用hibernate的级联查询来实现，第二种是创建一个结果集的接口来接收连表查询后的结果，这里介绍第二种方式。</p>
<h2>1. 方式1：新建接收多表查询结果集的实体类（比较实用一对一映射）</h2>
<p>新建接收多表查询结果集的实体类（比较实用一对一映射） ，例如</p>
<p>实体 UserInfo ：用户。</p>
<p>实体 Address：家庭住址。</p>
<p>这里通过外键的方式(一个实体通过外键关联到另一个实体的主键)来实现一对一关联。</p>
<h3>1.1 实体类</h3>
<ol>
<li>
<p>实体类 UserInfo.java</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">package</span><span style="color:#C678DD;--shiki-dark:#C678DD"> com.johnfnash.learn.domain</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> java.io.Serializable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> javax.persistence.Entity</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> javax.persistence.GeneratedValue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> javax.persistence.GenerationType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> javax.persistence.Id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> javax.persistence.Table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Entity</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Table</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">name</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">"tb_user"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> UserInfo</span><span style="color:#C678DD;--shiki-dark:#C678DD"> implements</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Serializable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">  private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> final</span><span style="color:#C678DD;--shiki-dark:#C678DD"> long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> serialVersionUID </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 8283950216116626180L</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Id</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">GeneratedValue</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">strategy</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">GenerationType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">IDENTITY</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">  private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> userId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">  private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">  private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> age</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">  private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> sex</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">  private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> email</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 与 Address 的关联  </span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">  private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> addressId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">  public</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> UserInfo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    super</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">  public</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> UserInfo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> age</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> sex</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> email</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> addressId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    super</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">name</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> name;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">age</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> age;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">sex</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> sex;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">email</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> email;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">addressId</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> addressId;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // getter, setter</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">  public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> toString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">format</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"UserInfo [userId=%d, name=%s, age=%s, sex=%s, email=%s]"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, userId, name, age, sex, email);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>实体类 Address.java</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">package</span><span style="color:#C678DD;--shiki-dark:#C678DD"> com.johnfnash.learn.domain</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> javax.persistence.Entity</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> javax.persistence.GeneratedValue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> javax.persistence.GenerationType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> javax.persistence.Id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> javax.persistence.Table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Entity</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Table</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">name</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "tb_address"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Address</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Id</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">GeneratedValue</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">strategy</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> GenerationType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">IDENTITY</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">  private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> addressId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">  private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> areaCode</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">  private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> country</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">  private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> province</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">  private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> city</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">  private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> area</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">  private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> detailAddress</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">  public</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Address</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    super</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">  public</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Address</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> areaCode</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> country</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> province</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> city</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> area</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> detailAddress</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    super</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">areaCode</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> areaCode;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">country</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> country;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">province</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> province;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">city</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> city;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">area</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> area;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">detailAddress</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> detailAddress;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // getter, setter</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">  public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> toString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    return</span><span style="color:#98C379;--shiki-dark:#98C379"> "Address [addressId="</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> addressId </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#98C379;--shiki-dark:#98C379"> ", areaCode="</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> areaCode </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#98C379;--shiki-dark:#98C379"> ", country="</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> country </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#98C379;--shiki-dark:#98C379"> ", province="</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">        +</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> province </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#98C379;--shiki-dark:#98C379"> ", city="</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> city </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#98C379;--shiki-dark:#98C379"> ", area="</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> area </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#98C379;--shiki-dark:#98C379"> ", detailAddress="</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> detailAddress </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#98C379;--shiki-dark:#98C379"> "]"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
</ol>`,r:{minutes:5.63,words:1690},t:"Spring Data JPA 实现多表关联查询",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/jpa/jpa-j-multi-delete.html",{loader:()=>o(()=>import("./jpa-j-multi-delete.html-oySvYF4b.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 具体方法</h2>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> interface</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> StudentsRepository</span><span style="color:#C678DD;--shiki-dark:#C678DD"> extends</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Repository</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Students</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Integer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> JpaRepository</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Students</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Integer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * @function 自定义JPQL</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> ids</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 注意更新和删除是需要加事务的， 并且要加上 @Modify的注解</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Modifying</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Transactional</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Query</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"delete from Students s where s.stuId in (?1)"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> deleteBatch</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Integer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">ids</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 这个是通过spring data拼接关键字进行的操作</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> deleteStudentsByStuIdIn</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Integer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">ids</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.69,words:208},t:"Jpa 批量删除",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/jpa/jpa-k-gen-entity.html",{loader:()=>o(()=>import("./jpa-k-gen-entity.html-B9XJP_MD.js"),[]),meta:{d:1729494189e3,g:null,e:`
<ol>
<li>
<p>首先要给项目的Modules添加JPA:</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231409427.png" alt="image-20201120100921592" tabindex="0" loading="lazy"><figcaption>image-20201120100921592</figcaption></figure>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231409468.png" alt="image-20201120101005602" tabindex="0" loading="lazy"><figcaption>image-20201120101005602</figcaption></figure>
</li>
<li>
<p>数据源的配置</p>
<p>View --&gt; Tool Windows下看到 database</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231409495.png" alt="image-20201120103112676" tabindex="0" loading="lazy"><figcaption>image-20201120103112676</figcaption></figure>
</li>
<li>
<p>完成上述操作后即可在View --&gt; Tool Windows下看到 Persistence选项,将其打开</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231409515.png" alt="image-20201120101142287" tabindex="0" loading="lazy"><figcaption>image-20201120101142287</figcaption></figure>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231409548.png" alt="image-20201120103153121" tabindex="0" loading="lazy"><figcaption>image-20201120103153121</figcaption></figure>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231409574.png" alt="image-20201120103244179" tabindex="0" loading="lazy"><figcaption>image-20201120103244179</figcaption></figure>
</li>
<li>
<p>在弹出的Persistence窗口的项目上右键,选择Generate Persistence Mapping --&gt; By Database Schema</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231409605.png" alt="image-20201120101503223" tabindex="0" loading="lazy"><figcaption>image-20201120101503223</figcaption></figure>
</li>
<li>
<p>在此处进行数据库相关配置,配置成功后即可在下方看到数据库中的表</p>
</li>
</ol>`,r:{minutes:.6,words:181},t:"IDEA下SpringData-JPA根据数据库表生成实体类",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/jpa/jpa-k-mutil-ds.html",{loader:()=>o(()=>import("./jpa-k-mutil-ds.html-CVSFeLpM.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 集成步骤</h2>
<ol>
<li>
<p>引入相关maven依赖</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">		&lt;!</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">--</span><span style="color:#E06C75;--shiki-dark:#E06C75">spring data jpa </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">--</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">		&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">			&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">org</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">springframework</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">boot</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">			&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">spring</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E06C75;--shiki-dark:#E06C75">boot</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E06C75;--shiki-dark:#E06C75">starter</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E06C75;--shiki-dark:#E06C75">data</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E06C75;--shiki-dark:#E06C75">jpa</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">		&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">		&lt;!</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">--</span><span style="color:#E06C75;--shiki-dark:#E06C75"> lombok </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">--</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">		&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">			&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">org</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">projectlombok</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">			&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">lombok</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">			&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">optional</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#D19A66;--shiki-dark:#D19A66">true</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">optional</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">		&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">		&lt;!</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">--</span><span style="color:#E06C75;--shiki-dark:#E06C75"> 阿里的数据源</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">--</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">		&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">			&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">com</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">alibaba</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">			&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">druid</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">			&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#D19A66;--shiki-dark:#D19A66">1.1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#FFFFFF;--shiki-dark:#FFFFFF">10</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">		&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">		&lt;!</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">--</span><span style="color:#E06C75;--shiki-dark:#E06C75"> mysql </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">--</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">		&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">			&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">mysql</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">			&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">mysql</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E06C75;--shiki-dark:#E06C75">connector</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E06C75;--shiki-dark:#E06C75">java</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">			&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">scope</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">runtime</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">scope</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">		&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol>
<li>
<p>配置数据库和jpa一些简易配置</p>
<div class="language-yml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">spring</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  datasource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    primary</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      driver-class-name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">com.mysql.jdbc.Driver</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      url</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">jdbc:mysql://localhost:3306/primary?useUnicode=true&amp;characterEncoding=UTF-8&amp;useOldAliasMetadataBehavior=true&amp;serverTimezone=Asia/Shanghai</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      username</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">root</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      password</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">root</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # create, create-drop, update, validate</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 作用主要用于：自动创建、更新、验证数据库表结构</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      ddl-auto</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">create</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    second</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      driver-class-name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">com.mysql.jdbc.Driver</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      url</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">jdbc:mysql://localhost:3306/second?useUnicode=true&amp;characterEncoding=UTF-8&amp;useOldAliasMetadataBehavior=true&amp;serverTimezone=Asia/Shanghai</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      username</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">root</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      password</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">root</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      ddl-auto</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">create</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  jpa</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    show-sql</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#D19A66;--shiki-dark:#D19A66">false</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    hibernate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      format_sql</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#D19A66;--shiki-dark:#D19A66">true</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      primary-dialect</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">org.hibernate.dialect.MySQL55Dialect</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      second-dialect</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">org.hibernate.dialect.MySQL55Dialect</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
</ol>
</li>
<li>
<p>多数据源配置</p>
<p>1.1 DataSourceConfig</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">package</span><span style="color:#C678DD;--shiki-dark:#C678DD"> com.zszdevelop.moredb.config</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> com.alibaba.druid.pool.DruidDataSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.beans.factory.annotation.Qualifier</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.boot.context.properties.ConfigurationProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.boot.jdbc.DataSourceBuilder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.context.annotation.Bean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.context.annotation.Configuration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.context.annotation.Primary</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> javax.sql.DataSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@author</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 作者: zhangshengzhong</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * @文件名: DataSourceConfig</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * @版本号:1.0</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * @创建日期: 2020/12/7 15:50</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * @描述:</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Configuration</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> DataSourceConfig</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 第一个数据连接，默认优先级最高</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@return</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Primary</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Bean</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">name</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "primaryDataSource"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Qualifier</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"primaryDataSource"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ConfigurationProperties</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">prefix</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "spring.datasource.primary"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> DataSource</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> PrimaryDataSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> DataSourceBuilder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">create</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">type</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DruidDataSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 第二个数据源</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@return</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Bean</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">name</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "secondDataSource"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Qualifier</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"secondDataSource"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ConfigurationProperties</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">prefix</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "spring.datasource.second"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> DataSource</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> secondaryDataSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> DataSourceBuilder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">create</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">type</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DruidDataSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.2 PrimaryConfig</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">package</span><span style="color:#C678DD;--shiki-dark:#C678DD"> com.zszdevelop.moredb.config</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.beans.factory.annotation.Autowired</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.beans.factory.annotation.Qualifier</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.context.annotation.Bean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.context.annotation.Configuration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.context.annotation.Primary</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.core.env.Environment</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.data.jpa.repository.config.EnableJpaRepositories</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.orm.jpa.JpaTransactionManager</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.transaction.PlatformTransactionManager</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.transaction.annotation.EnableTransactionManagement</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> javax.persistence.EntityManager</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> javax.sql.DataSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> java.util.HashMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> java.util.Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@author</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 作者: zhangshengzhong</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * @文件名: PrimaryConfig</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * @版本号:1.0</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * @创建日期: 2020/12/7 15:55</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * @描述:</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Configuration</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">EnableTransactionManagement</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">EnableJpaRepositories</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">        entityManagerFactoryRef</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">"entityManagerFactoryPrimary"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">        transactionManagerRef</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">"transactionManagerPrimary"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">        basePackages</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75"> { </span><span style="color:#98C379;--shiki-dark:#98C379">"com.zszdevelop.moredb.repository.primary"</span><span style="color:#E06C75;--shiki-dark:#E06C75"> })</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> PrimaryConfig</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Autowired</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Environment</span><span style="color:#E06C75;--shiki-dark:#E06C75"> env</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Autowired</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Qualifier</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"primaryDataSource"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> DataSource</span><span style="color:#E06C75;--shiki-dark:#E06C75"> primaryDataSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Primary</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Bean</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">name</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "entityManagerPrimary"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> EntityManager</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> entityManager</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">EntityManagerFactoryBuilder</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> entityManagerFactoryPrimary</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(builder).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">createEntityManager</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Primary</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Bean</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">name</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "entityManagerFactoryPrimary"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> LocalContainerEntityManagerFactoryBean</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> entityManagerFactoryPrimary</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">EntityManagerFactoryBuilder</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> builder</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">dataSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(primaryDataSource)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">properties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getVendorProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">())</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">packages</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"com.zszdevelop.moredb.domain.primary"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">persistenceUnit</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"primaryPersistenceUnit"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getVendorProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75">jpaProperties</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> HashMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;(</span><span style="color:#D19A66;--shiki-dark:#D19A66">16</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        jpaProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"hibernate.hbm2ddl.auto"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">env</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProperty</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"spring.datasource.primary.ddl-auto"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        jpaProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"hibernate.show_sql"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">env</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProperty</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"spring.jpa.show-sql"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        jpaProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"hibernate.format_sql"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">env</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProperty</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"spring.jpa.hibernate.format_sql"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        jpaProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"hibernate.dialect"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">env</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProperty</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"spring.jpa.hibernate.primary-dialect"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        jpaProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"hibernate.current_session_context_class"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#98C379;--shiki-dark:#98C379">"org.springframework.orm.hibernate5.SpringSessionContext"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> jpaProperties;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Primary</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Bean</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">name</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "transactionManagerPrimary"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> PlatformTransactionManager</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> transactionManagerPrimary</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">EntityManagerFactoryBuilder</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> JpaTransactionManager</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">entityManagerFactoryPrimary</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(builder).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3.3 SecondConfig</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">package</span><span style="color:#C678DD;--shiki-dark:#C678DD"> com.zszdevelop.moredb.config</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.beans.factory.annotation.Autowired</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.beans.factory.annotation.Qualifier</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.context.annotation.Bean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.context.annotation.Configuration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.core.env.Environment</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.data.jpa.repository.config.EnableJpaRepositories</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.orm.jpa.JpaTransactionManager</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.transaction.PlatformTransactionManager</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.springframework.transaction.annotation.EnableTransactionManagement</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> javax.persistence.EntityManager</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> javax.sql.DataSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> java.util.HashMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> java.util.Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@author</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 作者: zhangshengzhong</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * @文件名: SecondConfig</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * @版本号:1.0</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * @创建日期: 2020/12/7 16:00</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * @描述:</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Configuration</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">EnableTransactionManagement</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">EnableJpaRepositories</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //实体管理</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">        entityManagerFactoryRef</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">"entityManagerFactorySecond"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //事务管理</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">        transactionManagerRef</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">"transactionManagerSecond"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //实体扫描,设置Repository所在位置</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">        basePackages</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75"> { </span><span style="color:#98C379;--shiki-dark:#98C379">"com.zszdevelop.moredb.repository.second"</span><span style="color:#E06C75;--shiki-dark:#E06C75"> })</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SecondConfig</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Autowired</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Qualifier</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"secondDataSource"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> DataSource</span><span style="color:#E06C75;--shiki-dark:#E06C75"> secondDataSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Autowired</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Environment</span><span style="color:#E06C75;--shiki-dark:#E06C75"> env</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Bean</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">name</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "entityManagerSecond"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> EntityManager</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> entityManager</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">EntityManagerFactoryBuilder</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> entityManagerFactorySecond</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(builder).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">createEntityManager</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Bean</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">name</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "entityManagerFactorySecond"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> LocalContainerEntityManagerFactoryBean</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> entityManagerFactorySecond</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">EntityManagerFactoryBuilder</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> builder</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">dataSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(secondDataSource)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">properties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getVendorProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">())</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">packages</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"com.zszdevelop.moredb.domain.second"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">persistenceUnit</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"secondPersistenceUnit"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getVendorProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75">jpaProperties</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> HashMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;(</span><span style="color:#D19A66;--shiki-dark:#D19A66">16</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        jpaProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"hibernate.hbm2ddl.auto"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,  </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">env</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProperty</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"spring.datasource.second.ddl-auto"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        jpaProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"hibernate.show_sql"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">env</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProperty</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"spring.jpa.show-sql"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        jpaProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"hibernate.dialect"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">env</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProperty</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"spring.jpa.hibernate.Second-dialect"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        jpaProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"hibernate.format_sql"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">env</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProperty</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"spring.jpa.hibernate.format_sql"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        jpaProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"hibernate.current_session_context_class"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#98C379;--shiki-dark:#98C379">"org.springframework.orm.hibernate5.SpringSessionContext"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> jpaProperties;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Bean</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">name</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "transactionManagerSecond"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    PlatformTransactionManager</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> transactionManagerSecond</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">EntityManagerFactoryBuilder</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> JpaTransactionManager</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">entityManagerFactorySecond</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(builder).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231412064.png" alt="image-20201207161731505" tabindex="0" loading="lazy"><figcaption>image-20201207161731505</figcaption></figure>
</li>
</ol>`,r:{minutes:3,words:899},t:"JPA多数据源",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/jpa/jpa-y-case.html",{loader:()=>o(()=>import("./jpa-y-case.html-DEPYstnV.js"),[]),meta:{d:1729494189e3,e:`
<h2>解决方案</h2>
<ol>
<li>使用PhysicalNamingStrategy<br>
Spring Boot1.5.4 JPA是基于hibernate5.0的，有两种现成的方式实现PhysicalNamingStrategy
<ul>
<li>org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl 无修改的</li>
<li>org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy <strong>有修改，Spirng Boot 1.5.4默认使用SpringPhysicalNamingStrategy ，会处理添加“-”，会将表、字段名转化为小写</strong><br>
application.yml中配置使用PhysicalNamingStrategy，就没有字段被小写的问题了</li>
</ul>
</li>
</ol>`,r:{minutes:.31,words:94},t:"JPA表大小写转换",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/jpa/jpa-y-field.html",{loader:()=>o(()=>import("./jpa-y-field.html-BTZXxSOb.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 背景</h2>
<p>spring data jpa原生sql查询问题，我<strong>只要表其中的几个字段的值</strong>，本以为写个原生sql，拿实体类对象去接没问题，结果列名无效</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Query</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E06C75;--shiki-dark:#E06C75"> </span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">      "select d.order_id,d.user_id,d.price  from EDU_ORDER d  where  d.GENERIC_PROD_ID in(?1) "</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">      " order by d.create_time desc "</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66"> nativeQuery</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> true</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">List</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">Order</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">  findOrderList</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">List</span><span style="color:#E06C75;--shiki-dark:#E06C75"> groupSubIdList)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span></code></pre>
</div>`,r:{minutes:.81,words:242},t:"JPA查询部分字段列名无效问题",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/jpa/jpa-y-genone-error.html",{loader:()=>o(()=>import("./jpa-y-genone-error.html-CzCPdAls.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 背景</h2>
<p>之前项目一直用 jpa的dao.getOne() 都是正常的，但是加入线程池后，程序直接卡主不动。debug 后发现，提示</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>Method threw 'org.hibernate.LazyInitializationException' exception. Cannot evaluate com.xxx.xxx._$$_jvst6a8_a.toString()</span></span></code></pre>
</div>`,r:{minutes:.98,words:295},t:"Spring Data JPA使用getOne方法报错：Method threw 'org.hibernate.LazyInitializationException",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/jpa/jpa-y-like.html",{loader:()=>o(()=>import("./jpa-y-like.html-D7JixYJQ.js"),[]),meta:{d:1729494189e3,e:`
<p>jpa使用like查询，需要拼接字符串，如下</p>
<h2>oracle用法：</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//dao层代码</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Query</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "SELECT * FROM TABLENAME WHERE USER_NAME LIKE '%'||?1||'%'"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66"> nativeQuery</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> true</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">List</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Map</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> Object</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> queryUserInfoByName</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> userName)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span></code></pre>
</div>`,r:{minutes:.35,words:106},t:"JPA使用原生SQL查询数据库like的用法",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-day01.html",{loader:()=>o(()=>import("./mybatis-day01.html-C0V5COaV.js"),[]),meta:{d:1729494189e3,e:`
<h4>1.1 框架介绍</h4>
<ul>
<li>
<p>框架是一款半成品软件，我们可以基于这个半成品软件继续开发，来完成我们个性化的需求！</p>
</li>
<li>
<p>如图:</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231421649.png" alt="1590919723185" tabindex="0" loading="lazy"><figcaption>1590919723185</figcaption></figure>
</li>
</ul>`,r:{minutes:7.71,words:2313},t:"Mybatis快速入门",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-day02.html",{loader:()=>o(()=>import("./mybatis-day02.html-OG8A4a6G.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h4>1.1 代理开发方式介绍</h4>
<p>​	采用 Mybatis 的代理开发方式实现 DAO 层的开发，这种方式是我们后面进入企业的主流。</p>
<p>Mapper 接口开发方法只需要程序员编写Mapper 接口（相当于Dao 接口），由Mybatis 框架根据接口定义创建接口的动态代理对象，代理对象的方法体同上边Dao接口实现类方法。</p>
<p>Mapper 接口开发需要遵循以下规范：</p>
<p><strong>1) Mapper.xml文件中的namespace与mapper接口的全限定名相同</strong></p>
<p><strong>2) Mapper接口方法名和Mapper.xml中定义的每个statement的id相同</strong></p>`,r:{minutes:13.36,words:4008},t:"接口代理方式实现Dao",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-day03.html",{loader:()=>o(()=>import("./mybatis-day03.html-Bdc0SxH6.js"),[]),meta:{d:1729494189e3,e:`
<h4>1.1 MyBatis的常用注解</h4>
<p>这几年来注解开发越来越流行，Mybatis也可以使用注解开发方式，这样我们就可以减少编写Mapper</p>
<p>映射文件了。我们先围绕一些基本的CRUD来学习，再学习复杂映射多表操作。</p>
<p>@Insert：实现新增</p>
<p>@Update：实现更新</p>
<p>@Delete：实现删除</p>
<p>@Select：实现查询</p>
<p>@Result：实现结果集封装</p>
<p>@Results：可以与@Result 一起使用，封装多个结果集</p>
<p>@One：实现一对一结果集封装</p>
<p>@Many：实现一对多结果集封装</p>`,r:{minutes:12.66,words:3797},t:"Mybatis注解开发单表操作",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-i-anotation.html",{loader:()=>o(()=>import("./mybatis-i-anotation.html-CNBq_JdX.js"),[]),meta:{d:1729494189e3,e:`
<blockquote>
<p>我们知道除了XML配置方式，MyBatis还支持注解方式。本文主要介绍SpringBoot+MyBatis注解方式。</p>
</blockquote>
<h2>1. 准备知识</h2>
<blockquote>
<p>MyBatis的相关知识体系。</p>
</blockquote>
<p>在构建知识体系时：我们最重要的<strong>目标并不是如何使用注解方式</strong>，而是要理解：</p>
<ol>
<li>对于有原有xml方式改为注解方式（一定要有对比），如何写？
<ol>
<li>基本的CRUD怎么用注解写？</li>
<li>对于复杂的动态SQL如何写？</li>
<li>对于表关联的如何写？</li>
</ol>
</li>
<li>为什么xml方式依然是比注解方式使用广泛？
<ol>
<li>xml方式和注解方式混合使用？</li>
</ol>
</li>
<li>注解方式是如何工作的呢？</li>
</ol>`,r:{minutes:8.72,words:2616},t:"MyBatis注解方式",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-i-overview.html",{loader:()=>o(()=>import("./mybatis-i-overview.html-BRV0abFn.js"),[]),meta:{d:1729494189e3,e:`
<h3>1. 什么是MyBatis？</h3>
<blockquote>
<p>MyBatis是一款优秀的基于java的持久层框架，它内部封装了jdbc，使开发者只需要关注sql语句本身，而不需要花费精力去处理加载驱动、创建连接、创建statement等繁杂的过程。</p>
</blockquote>
<p>MyBatis 是一款优秀的持久层框架，它支持定制化 SQL、存储过程以及高级映射。</p>
<ul>
<li>mybatis是一个优秀的基于java的持久层框架，它内部封装了jdbc，使开发者只需要关注sql语句本身，而不需要花费精力去处理加载驱动、创建连接、创建statement等繁杂的过程。</li>
<li>mybatis通过xml或注解的方式将要执行的各种statement配置起来，并通过java对象和statement中sql的动态参数进行映射生成最终执行的sql语句，最后由mybatis框架执行sql并将结果映射为java对象并返回。</li>
</ul>`,r:{minutes:6.91,words:2073},t:"Mybatis概念",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-i-pagehelper.html",{loader:()=>o(()=>import("./mybatis-i-pagehelper.html-BfsbwvaG.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 准备知识</h2>
<blockquote>
<p>MyBatis的相关知识体系以及常见的数据库分页方式，MySQL物理分页的方式等。</p>
</blockquote>
<h3>1.1 逻辑分页和物理分页的区别？</h3>
<blockquote>
<p>为什么会出现PageHelper这类框架？</p>
</blockquote>
<p>这便要从逻辑分页和物理分页开始说起：</p>
<ul>
<li><strong>逻辑分页</strong>：从数据库将所有记录查询出来，存储到内存中，展示当前页，然后数据再直接从内存中获取（前台分页）</li>
<li><strong>物理分页</strong>：只从数据库中查询当前页的数据（后台分页）</li>
</ul>`,r:{minutes:6.37,words:1912},t:"MyBatis PageHelper分页",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-y-arch.html",{loader:()=>o(()=>import("./mybatis-y-arch.html-Cn5lAlUD.js"),[]),meta:{d:1729494189e3,c:["MyBatis"],g:null,e:`
<blockquote>
<p>MyBatis整体架构包含哪些层呢？这些层次是如何设计的呢？</p>
</blockquote>
<h2>1. MyBatis架构概览</h2>
<p>MyBatis框架整体设计如下:</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231532792.png" alt="image-20220727202556295" tabindex="0" loading="lazy"><figcaption>image-20220727202556295</figcaption></figure>`,r:{minutes:5.86,words:1757},t:"MyBatis详解 - 总体框架设计",O:20,y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-y-cache-level1.html",{loader:()=>o(()=>import("./mybatis-y-cache-level1.html-CUiCuXXv.js"),[]),meta:{d:1729494189e3,c:["MyBatis"],g:null,e:`
<blockquote>
<p>减少资源的浪费，MyBatis会在表示会话的SqlSession对象中建立一个简单的缓存，将每次查询到的结果结果缓存起来，当下次查询的时候，如果判断先前有个完全一样的查询，会直接从缓存中直接将结果取出，返回给用户，不需要再进行一次数据库查询了。</p>
</blockquote>
<h2>1. MyBatis一级缓存实现</h2>
<h3>1.1 什么是一级缓存？ 为什么使用一级缓存？</h3>
<p>每当我们使用MyBatis开启一次和数据库的会话，MyBatis会创建出一个SqlSession对象表示一次数据库会话。</p>
<p>在对数据库的一次会话中，我们有可能会反复地执行完全相同的查询语句，如果不采取一些措施的话，每一次查询都会查询一次数据库,而我们在极短的时间内做了完全相同的查询，那么它们的结果极有可能完全相同，由于查询一次数据库的代价很大，这有可能造成很大的资源浪费。</p>`,r:{minutes:10.75,words:3224},t:"MyBatis详解 - 一级缓存实现机制",O:130,y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-y-cache-level2.html",{loader:()=>o(()=>import("./mybatis-y-cache-level2.html-ByJVq1mN.js"),[]),meta:{d:1729494189e3,c:["MyBatis"],e:`
<blockquote>
<p>MyBatis的二级缓存是Application级别的缓存，它可以提高对数据库查询的效率，以提高应用的性能。</p>
</blockquote>
<h2>1. MyBatis二级缓存实现</h2>
<p>MyBatis的二级缓存是Application级别的缓存，它可以提高对数据库查询的效率，以提高应用的性能。</p>
<h3>1.1 MyBatis的缓存机制整体设计以及二级缓存的工作模式</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231546799.png" alt="image-20220730223727802" tabindex="0" loading="lazy"><figcaption>image-20220730223727802</figcaption></figure>`,r:{minutes:7.85,words:2356},t:"MyBatis详解 - 二级缓存实现机制",O:130,y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-y-config-list.html",{loader:()=>o(()=>import("./mybatis-y-config-list.html-bwM8Uxj9.js"),[]),meta:{d:1729494189e3,c:["MyBatis"],e:`
<blockquote>
<p>【本文为低优先级】通过上文我们知道配置是如何加载并初始化的，那MyBatis提供了哪些配置呢？通过MyBatis官网文档我们一探究竟。PS：对于清单型的，只需要大致浏览且在使用时能快速查找即可，所以是低优先级的。</p>
</blockquote>
<h2>1. MyBatis配置项</h2>
<p>MyBatis 的配置文件包含了会深深影响 MyBatis 行为的设置和属性信息。通过上一篇的初始化过程，我们就能看出，在mybatis的配置文件中：</p>
<ul>
<li>configuration节点为根节点。</li>
<li>在configuration节点之下，我们可以配置10个子节点， 分别为：properties、typeAliases、plugins、objectFactory、objectWrapperFactory、settings、environments、databaseIdProvider、typeHandlers、mappers。</li>
</ul>`,r:{minutes:26.63,words:7988},t:"MyBatis详解 - 官网配置清单",O:50,y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-y-config-load.html",{loader:()=>o(()=>import("./mybatis-y-config-load.html-3niNao44.js"),[]),meta:{d:1729494189e3,c:["MyBatis"],e:`
<blockquote>
<p>【本文为中优先级】通过上文我们知道MyBatis初始化过程中会解析配置，那具体是如何解析的呢？</p>
</blockquote>
<h2>1. 回顾上文配置解析方法</h2>
<p>上文配置解析中，我们看到如下的主体方法：</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Configuration</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> parse</span><span style="color:#E06C75;--shiki-dark:#E06C75">() {  </span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (parsed) {  </span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        throw</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> BuilderException</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Each XMLConfigBuilder can only be used once."</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#E06C75;--shiki-dark:#E06C75">  </span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }  </span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    parsed </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#E06C75;--shiki-dark:#E06C75">  </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    //源码中没有这一句，只有 parseConfiguration(parser.evalNode("/configuration"));  </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    //为了让读者看得更明晰，源码拆分为以下两句  </span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    XNode</span><span style="color:#E06C75;--shiki-dark:#E06C75"> configurationNode </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> parser</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">evalNode</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"/configuration"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span><span style="color:#E06C75;--shiki-dark:#E06C75">  </span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">    parseConfiguration</span><span style="color:#E06C75;--shiki-dark:#E06C75">(configurationNode)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#E06C75;--shiki-dark:#E06C75">  </span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> configuration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#E06C75;--shiki-dark:#E06C75">  </span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}  </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/** </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 解析 "/configuration"节点下的子节点信息，然后将解析的结果设置到Configuration对象中 </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span><span style="color:#E06C75;--shiki-dark:#E06C75">  </span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> parseConfiguration</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">XNode</span><span style="color:#E06C75;--shiki-dark:#E06C75"> root) {  </span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    try</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {  </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //1.首先处理properties 节点     </span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">        propertiesElement</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">root</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">evalNode</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"properties"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> //issue #117 read properties first  </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //2.处理typeAliases  </span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">        typeAliasesElement</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">root</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">evalNode</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"typeAliases"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#E06C75;--shiki-dark:#E06C75">  </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //3.处理插件  </span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">        pluginElement</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">root</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">evalNode</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"plugins"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#E06C75;--shiki-dark:#E06C75">  </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //4.处理objectFactory  </span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">        objectFactoryElement</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">root</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">evalNode</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"objectFactory"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#E06C75;--shiki-dark:#E06C75">  </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //5.objectWrapperFactory  </span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">        objectWrapperFactoryElement</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">root</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">evalNode</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"objectWrapperFactory"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#E06C75;--shiki-dark:#E06C75">  </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //6.settings  </span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">        settingsElement</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">root</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">evalNode</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"settings"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#E06C75;--shiki-dark:#E06C75">  </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //7.处理environments  </span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">        environmentsElement</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">root</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">evalNode</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"environments"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // read it after objectFactory and objectWrapperFactory issue #631  </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //8.database  </span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">        databaseIdProviderElement</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">root</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">evalNode</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"databaseIdProvider"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#E06C75;--shiki-dark:#E06C75">  </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //9.typeHandlers  </span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">        typeHandlerElement</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">root</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">evalNode</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"typeHandlers"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#E06C75;--shiki-dark:#E06C75">  </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //10.mappers  </span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">        mapperElement</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">root</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">evalNode</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"mappers"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#E06C75;--shiki-dark:#E06C75">  </span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    } </span><span style="color:#C678DD;--shiki-dark:#C678DD">catch</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Exception</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {  </span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        throw</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> BuilderException</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Error parsing SQL Mapper Configuration. Cause: "</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E06C75;--shiki-dark:#E06C75"> e</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> e)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#E06C75;--shiki-dark:#E06C75">  </span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }  </span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:22.96,words:6888},t:"MyBatis详解 - 配置解析过程",O:40,y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-y-config-mapper.html",{loader:()=>o(()=>import("./mybatis-y-config-mapper.html-CP0nTHFb.js"),[]),meta:{d:1729494189e3,c:["MyBatis"],e:`
<blockquote>
<p>在mapper文件中，以mapper作为根节点，其下面可以配置的元素节点有： select, insert, update, delete, cache, cache-ref, resultMap, sql; 本文将Mapper映射文件配置进行详解。</p>
</blockquote>
<h2>1. insert, update, delete 的配置及使用</h2>
<p>相信，看到insert, update, delete， 我们就知道其作用了，顾名思义嘛，myabtis 作为持久层框架，必须要对CRUD啊。好啦，咱们就先来看看 insert, update, delete 怎么配置， 能配置哪些元素吧：</p>`,r:{minutes:22.17,words:6652},t:"MyBatis详解 - Mapper映射文件配置",O:60,y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-y-datasource.html",{loader:()=>o(()=>import("./mybatis-y-datasource.html-K7LleR48.js"),[]),meta:{d:1729494189e3,c:["MyBatis"],g:null,e:`
<blockquote>
<p>本文主要介绍MyBatis数据源和连接池相关的内容。</p>
</blockquote>
<h2>1. MyBatis数据源DataSource分类</h2>
<p>MyBatis把数据源DataSource分为三种：</p>
<ul>
<li>UNPOOLED 不使用连接池的数据源</li>
<li>POOLED 使用连接池的数据源</li>
<li>JNDI 使用JNDI实现的数据源</li>
</ul>
<p>相应地，MyBatis内部分别定义了实现了java.sql.DataSource接口的UnpooledDataSource，PooledDataSource类来表示UNPOOLED、POOLED类型的数据源。</p>`,r:{minutes:16.98,words:5094},t:"MyBatis详解 - 数据源与连接池",O:110,y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-y-dynamic-sql.html",{loader:()=>o(()=>import("./mybatis-y-dynamic-sql.html-DZ0BgEvh.js"),[]),meta:{d:1729494189e3,c:["MyBatis"],e:`
<blockquote>
<p>动态 SQL 是 MyBatis 的强大特性之一。如果你使用过 JDBC 或其它类似的框架，你应该能理解根据不同条件拼接 SQL 语句有多痛苦，例如拼接时要确保不能忘记添加必要的空格，还要注意去掉列表最后一个列名的逗号。利用动态 SQL，可以彻底摆脱这种痛苦。</p>
</blockquote>
<h2>1. 动态SQL官方使用参考</h2>
<p>动态 SQL 是 MyBatis 的强大特性之一。如果你使用过 JDBC 或其它类似的框架，你应该能理解根据不同条件拼接 SQL 语句有多痛苦，例如拼接时要确保不能忘记添加必要的空格，还要注意去掉列表最后一个列名的逗号。利用动态 SQL，可以彻底摆脱这种痛苦。</p>`,r:{minutes:13.11,words:3932},t:"MyBatis详解 - 动态SQL使用与原理",O:80,y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-y-init.html",{loader:()=>o(()=>import("./mybatis-y-init.html-DC8dCQpV.js"),[]),meta:{d:1729494189e3,c:["MyBatis"],e:`
<blockquote>
<p>从上文我们知道MyBatis和数据库的交互有两种方式有Java API和Mapper接口两种，所以MyBatis的初始化必然也有两种；那么MyBatis是如何初始化的呢？</p>
</blockquote>
<h2>1. MyBatis初始化的方式及引入</h2>
<p>MyBatis的初始化可以有两种方式：</p>
<ul>
<li><strong>基于XML配置文件</strong>：基于XML配置文件的方式是将MyBatis的所有配置信息放在XML文件中，MyBatis通过加载并XML配置文件，将配置文信息组装成内部的Configuration对象。</li>
<li><strong>基于Java API</strong>：这种方式不使用XML配置文件，需要MyBatis使用者在Java代码中，手动创建Configuration对象，然后将配置参数set 进入Configuration对象中。</li>
</ul>`,r:{minutes:6.04,words:1812},t:"MyBatis详解 - 初始化基本过程",O:30,y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-y-plugin-page.html",{loader:()=>o(()=>import("./mybatis-y-plugin-page.html-DUfY4_TZ.js"),[]),meta:{d:1729494189e3,c:["MyBatis"],e:`
<blockquote>
<p>Mybatis的分页功能很弱，它是基于内存的分页（查出所有记录再按偏移量和limit取结果），在大数据量的情况下这样的分页基本上是没有用的。本文基于插件，通过拦截StatementHandler重写sql语句，实现数据库的物理分页。</p>
</blockquote>
<h2>1. 准备</h2>
<h3>1.1 为什么在StatementHandler拦截</h3>
<p>在前面章节介绍了一次sqlsession的完整执行过程，从中可以知道sql的解析是在StatementHandler里完成的，所以为了重写sql需要拦截StatementHandler。</p>`,r:{minutes:5.32,words:1597},t:"MyBatis详解 - 插件之分页机制",O:100,y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-y-plugin.html",{loader:()=>o(()=>import("./mybatis-y-plugin.html-Dmji2RVC.js"),[]),meta:{d:1729494189e3,c:["MyBatis"],e:`
<blockquote>
<p>MyBatis提供了一种插件(plugin)的功能，虽然叫做插件，但其实这是拦截器功能。那么拦截器拦截MyBatis中的哪些内容呢？</p>
</blockquote>
<h2>1. 概述</h2>
<p>MyBatis 允许你在已映射语句执行过程中的某一点进行拦截调用。默认情况下，MyBatis允许使用插件来拦截的方法调用包括：</p>
<ul>
<li>Executor (update, query, flushStatements, commit, rollback, getTransaction, close, isClosed) 拦截执行器的方法</li>
<li>ParameterHandler (getParameterObject, setParameters) 拦截参数的处理</li>
<li>ResultSetHandler (handleResultSets, handleOutputParameters) 拦截结果集的处理</li>
<li>StatementHandler (prepare, parameterize, batch, update, query) 拦截Sql语法构建的处理</li>
</ul>`,r:{minutes:14.32,words:4297},t:"MyBatis详解 - 插件机制",O:90,y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-y-sql-exec.html",{loader:()=>o(()=>import("./mybatis-y-sql-exec.html-BVdpUYGl.js"),[]),meta:{d:1729494189e3,c:["MyBatis"],e:`
<blockquote>
<p>前面的章节主要讲mybatis如何解析配置文件，这些都是一次性的过程。从本章开始讲解动态的过程，它们跟应用程序对mybatis的调用密切相关。</p>
</blockquote>
<h2>1. sqlSessionFactory 与 SqlSession</h2>
<blockquote>
<p>通过前面的章节对于mybatis 的介绍及使用，大家都能体会到SqlSession的重要性了吧，没错，从表面上来看，咱们都是通过SqlSession去执行sql语句（注意：是从表面看，实际的待会儿就会讲）。</p>
</blockquote>
<p>正如其名，Sqlsession对应着一次数据库会话。由于数据库会话不是永久的，因此Sqlsession的生命周期也不应该是永久的，相反，在你每次访问数据库时都需要创建它（当然并不是说在Sqlsession里只能执行一次sql，你可以执行多次，当一旦关闭了Sqlsession就需要重新创建它）。</p>`,r:{minutes:14.71,words:4414},t:"MyBatis详解 - sqlSession执行流程",O:70,y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-y-trans.html",{loader:()=>o(()=>import("./mybatis-y-trans.html-RGG6sbV2.js"),[]),meta:{d:1729494189e3,c:["MyBatis"],e:`
<blockquote>
<p>本文主要介绍MyBatis事务管理相关的使用和机制。</p>
</blockquote>
<h2>1. 概述</h2>
<p>对数据库的事务而言，应该具有以下几点：创建（create）、提交（commit）、回滚（rollback）、关闭（close）。对应地，MyBatis将事务抽象成了Transaction接口：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231553097.png" alt="image-20220730215527746" tabindex="0" loading="lazy"><figcaption>image-20220730215527746</figcaption></figure>`,r:{minutes:7.66,words:2298},t:"MyBatis详解 - 事务管理机制",O:120,y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-z-adapter-db.html",{loader:()=>o(()=>import("./mybatis-z-adapter-db.html-DJZun65b.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p><strong>动态切换数据库</strong>，如在<strong>MySQL、PostgreSQL与Oracle之间进行切换，并使用同一个Dao接口。如何进行同一个函数调用mapper中不同的sql语句</strong>？</p>
<h2>2. 区分具体数据库</h2>
<h3>2.1 理论</h3>
<p>若在MyBatis配置文件中设置了databaseIdProvider，则可以使用 _databaseId 参数</p>
<p>这样就可以根据不同的数据库厂商构建特定的语句。_databaseId 就是代表当前数据库的别名Oracle。</p>
<p>databaseIdProvider配置：</p>`,r:{minutes:3.23,words:969},t:"Mybatis适配多种数据库",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-z-base-opera.html",{loader:()=>o(()=>import("./mybatis-z-base-opera.html-DH-SNOFD.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 查询</h2>
<h3>1.1 查询列表</h3>
<div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">sql</span><span style="color:#D19A66;--shiki-dark:#D19A66"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"selectNoticeVo"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        select notice_id, notice_title, notice_type, notice_content, status, create_by, create_time, update_by, update_time, remark </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">		from sys_notice</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">sql</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">select</span><span style="color:#D19A66;--shiki-dark:#D19A66"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"selectNoticeList"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> parameterType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"com.fardu.system.domain.SysNotice"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> resultMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"SysNoticeResult"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">include</span><span style="color:#D19A66;--shiki-dark:#D19A66"> refid</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"selectNoticeVo"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">where</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">			&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">if</span><span style="color:#D19A66;--shiki-dark:#D19A66"> test</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"noticeTitle != null and noticeTitle != ''"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">				AND notice_title like concat(concat('%',#{noticeTitle}),'%')</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">			&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">			&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">if</span><span style="color:#D19A66;--shiki-dark:#D19A66"> test</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"noticeType != null and noticeType != ''"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">				AND notice_type = #{noticeType}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">			&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">			&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">if</span><span style="color:#D19A66;--shiki-dark:#D19A66"> test</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"createBy != null and createBy != ''"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">				AND create_by like concat(concat('%',#{createBy}),'%')</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">			&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">		&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">where</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.84,words:851},t:"Mybatis基础操作Mapper模板",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-z-batch-opera.html",{loader:()=>o(()=>import("./mybatis-z-batch-opera.html-D23cMjKg.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 批量插入</h2>
<h3>1.1 Mysql版本</h3>
<p>sql 语句</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">insert into</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> my_table(field_1,field_2)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">values</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(value_1,value_2),</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(value_1,value_2),</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(value_1,value_2);</span></span></code></pre>
</div>`,r:{minutes:.81,words:244},t:"Mybatis进阶操作Mapper模板",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-z-if-number.html",{loader:()=>o(()=>import("./mybatis-z-if-number.html-fZA9g22o.js"),[]),meta:{d:1729494189e3,e:`
<p>mybatis 中关于数字的判断，如果直接写<code>&lt;if test = "xx == '1' "&gt; &lt;/if&gt;</code>,这样即使是<code>xx==‘1’</code>，通常情况下也不会进入判断的。必须如下写：</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">select</span><span style="color:#D19A66;--shiki-dark:#D19A66"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"getByNameAndPwd"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> parameterType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"String"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> resultMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"MemberResult"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        select</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">           *</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        from \`member\`</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">if</span><span style="color:#D19A66;--shiki-dark:#D19A66"> test</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"isMerch != '' and isMerch == '1'.toString() "</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> &gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            where  \`mobile\` = #{name} </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            and \`password\` = #{password}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">if</span><span style="color:#D19A66;--shiki-dark:#D19A66"> test</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"isMerch != '' and isMerch == '2'.toString() "</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> &gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            where  \`name\` = #{name}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            and \`password\` = #{password}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;   </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
</div>`,r:{minutes:.37,words:110},t:"mybatis中if关于数字的判断",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-z-injection.html",{loader:()=>o(()=>import("./mybatis-z-injection.html-cuknyaO8.js"),[]),meta:{d:1729494189e3,c:["MyBatis"],e:`
<h2>1.引入</h2>
<p><strong>1、首先看一下下面两个sql语句的区别：</strong></p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#C678DD;--shiki-dark:#C678DD">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> id</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">"selectByNameAndPassword"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> parameterType</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">"java.util.Map"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> resultMap</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">"BaseResultMap"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> id, username, </span><span style="color:#C678DD;--shiki-dark:#C678DD">password</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#C678DD;--shiki-dark:#C678DD">role</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> user</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">where</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> username </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> #{username,jdbcType</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD">VARCHAR</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">and</span><span style="color:#C678DD;--shiki-dark:#C678DD"> password</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> #{</span><span style="color:#C678DD;--shiki-dark:#C678DD">password</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,jdbcType</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD">VARCHAR</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/</span><span style="color:#C678DD;--shiki-dark:#C678DD">select</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span></code></pre>
</div>`,r:{minutes:4.79,words:1437},t:"MyBatis问题 - Mybatis是如何防止SQL注入的",O:510,y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-z-one-more-join.html",{loader:()=>o(()=>import("./mybatis-z-one-more-join.html-B_QOra1A.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>一对多使用场景有很多，例如</p>
<ul>
<li>一个部门下有多个用户，一个用户只属于一个部门</li>
</ul>
<h2>2. 实现方式</h2>
<h3>2.1 collection关联查询</h3>
<div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">resultMap</span><span style="color:#D19A66;--shiki-dark:#D19A66"> type</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"SysDeptUserDetail"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"SysDeptResultByLeftJoin"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">id</span><span style="color:#D19A66;--shiki-dark:#D19A66"> property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"deptId"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> column</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"dept_id"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">result</span><span style="color:#D19A66;--shiki-dark:#D19A66"> property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"deptName"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> column</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"dept_name"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">collection</span><span style="color:#D19A66;--shiki-dark:#D19A66"> property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"userList"</span><span style="color:#D19A66;--shiki-dark:#D19A66">  resultMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"SysUserResult"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> &gt;&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">collection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">resultMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">resultMap</span><span style="color:#D19A66;--shiki-dark:#D19A66"> type</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"SysUser"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"SysUserResult"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">id</span><span style="color:#D19A66;--shiki-dark:#D19A66">     property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"userId"</span><span style="color:#D19A66;--shiki-dark:#D19A66">       column</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"user_id"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">result</span><span style="color:#D19A66;--shiki-dark:#D19A66"> property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"userName"</span><span style="color:#D19A66;--shiki-dark:#D19A66">     column</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"user_name"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">result</span><span style="color:#D19A66;--shiki-dark:#D19A66"> property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"nickName"</span><span style="color:#D19A66;--shiki-dark:#D19A66">     column</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"nick_name"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">resultMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">select</span><span style="color:#D19A66;--shiki-dark:#D19A66"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"selectDeptUserListByLeftJoin"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> parameterType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"SysDept"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> resultMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"SysDeptResultByLeftJoin"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        select d.dept_id,d.dept_name,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">               u.user_id,u.user_name,u.nick_name</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        from sys_dept d</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        left join sys_user u on u.dept_id = d.dept_id</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">if</span><span style="color:#D19A66;--shiki-dark:#D19A66"> test</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"deptName != null and deptName != ''"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            AND dept_name like concat('%', #{deptName}, '%')</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.33,words:398},t:"Mybatis使用collection解决一对多关联查询",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-z-one-more-temp.html",{loader:()=>o(()=>import("./mybatis-z-one-more-temp.html-iQVNfs-e.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 简介</h2>
<p>在实际生活中一对多级联关系有许多，例如一个用户可以有多个订单，一个用户可以有多个角色</p>
<h2>2. 实现</h2>
<h3>2.1 多对多实现</h3>
<p>以一个用户拥有多个角色，一个角色拥有多个用户</p>
<p>SysUserMapper</p>
<div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;?</span><span style="color:#E06C75;--shiki-dark:#E06C75">xml</span><span style="color:#D19A66;--shiki-dark:#D19A66"> version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"1.0"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> encoding</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"UTF-8"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ?&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;!</span><span style="color:#C678DD;--shiki-dark:#C678DD">DOCTYPE</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> mapper</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">mapper</span><span style="color:#D19A66;--shiki-dark:#D19A66"> namespace</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"com.zszdevelop.system.mapper.SysUserMapper"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">	&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">resultMap</span><span style="color:#D19A66;--shiki-dark:#D19A66"> type</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"SysUser"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"SysUserResult"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">		&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">id</span><span style="color:#D19A66;--shiki-dark:#D19A66">     property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"userId"</span><span style="color:#D19A66;--shiki-dark:#D19A66">       column</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"user_id"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">		&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">result</span><span style="color:#D19A66;--shiki-dark:#D19A66"> property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"userName"</span><span style="color:#D19A66;--shiki-dark:#D19A66">     column</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"user_name"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">		&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">result</span><span style="color:#D19A66;--shiki-dark:#D19A66"> property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"nickName"</span><span style="color:#D19A66;--shiki-dark:#D19A66">     column</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"nick_name"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">		&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">collection</span><span style="color:#D19A66;--shiki-dark:#D19A66">  property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"roles"</span><span style="color:#D19A66;--shiki-dark:#D19A66">   javaType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"java.util.List"</span><span style="color:#D19A66;--shiki-dark:#D19A66">        resultMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"RoleResult"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">	&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">resultMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">	&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">resultMap</span><span style="color:#D19A66;--shiki-dark:#D19A66"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"RoleResult"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> type</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"SysRole"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">		&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">id</span><span style="color:#D19A66;--shiki-dark:#D19A66">     property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"roleId"</span><span style="color:#D19A66;--shiki-dark:#D19A66">       column</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"role_id"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">		&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">result</span><span style="color:#D19A66;--shiki-dark:#D19A66"> property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"roleName"</span><span style="color:#D19A66;--shiki-dark:#D19A66">     column</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"role_name"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">		&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">result</span><span style="color:#D19A66;--shiki-dark:#D19A66"> property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"status"</span><span style="color:#D19A66;--shiki-dark:#D19A66">       column</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"role_status"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">	&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">resultMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">	&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">sql</span><span style="color:#D19A66;--shiki-dark:#D19A66"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"selectUserVo"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        select u.user_id,  u.user_name, u.nick_name,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        r.role_id, r.role_name,  r.status as role_status</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        from sys_user u</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">		    left join sys_user_role ur on u.user_id = ur.user_id</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">		    left join sys_role r on r.role_id = ur.role_id</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">sql</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">	&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">select</span><span style="color:#D19A66;--shiki-dark:#D19A66"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"selectUserById"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> parameterType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"Long"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> resultMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"SysUserResult"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">		&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">include</span><span style="color:#D19A66;--shiki-dark:#D19A66"> refid</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"selectUserVo"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">		where u.user_id = #{userId}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">	&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">mapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.36,words:408},t:"Mybatis一对多关联查询（级联查询）Mapper模板",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-z-pageHelper-source.html",{loader:()=>o(()=>import("./mybatis-z-pageHelper-source.html-BUlL4-mR.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 背景</h2>
<p>项目中分页是非常常见的需求，在项目中我们一般集成第三方的分页插件，避免在业务层嵌入过多业务代码。</p>
<p>分页插件，我们项目中是采用<code>Mybatis-PageHelper </code>，作为一款轻量级的插件，源码应该不难，我们就来分析分析他的源码</p>
<h2>2. 分页插件实现原理与基础</h2>
<h3>2.1 拦截器</h3>
<p>Mybatis 提供了拦截器接口<code>Interceptor(org.apache.ibatis.plugin.Interceptor)</code>, 我们仅需要在实现类中对拦截对象和方法进行处理即可</p>`,r:{minutes:3.35,words:1006},t:"Mybatis-PageHelper源码分析",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis-plus/mybatis-plus-x-gen-code.html",{loader:()=>o(()=>import("./mybatis-plus-x-gen-code.html-egeQei-z.js"),[]),meta:{d:1729494189e3,g:null,e:`
<blockquote>
<p>本文主要介绍 MyBatis-Plus代码自动生成，以及产生此类代码生成工具的背景和此类工具的基本实现原理。</p>
</blockquote>
<h2>1. 知识准备</h2>
<blockquote>
<p>需要了解MyBatis和MyBatis-Plus基础，并了解产生此类代码生成工具的背景和基本原理。</p>
</blockquote>
<h3>1.1 MyBatis-Plus相关</h3>
<p><a href="https://pdai.tech/md/spring/springboot/springboot-x-mysql-mybatis-plus.html" target="_blank" rel="noopener noreferrer">SpringBoot集成MySQL - MyBatis-Plus方式</a></p>`,r:{minutes:8.12,words:2437},t:"SpringBoot集成MySQL-MyBatis-Plus代码自动生成",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis-plus/mybatis-plus-x-mysql.html",{loader:()=>o(()=>import("./mybatis-plus-x-mysql.html-Dr-RtiLb.js"),[]),meta:{d:1729494189e3,g:null,e:`
<blockquote>
<p>MyBatis-Plus（简称 MP）是一个 MyBatis的增强工具，在 MyBatis 的基础上只做增强不做改变，为简化开发、提高效率而生。MyBatis-Plus在国内也有很多的用户，本文主要介绍MyBatis-Plus和SpringBoot的集成。</p>
</blockquote>
<h2>1. 知识准备</h2>
<blockquote>
<p>MyBatis-Plus（简称 MP）是一个 MyBatis的增强工具，在 MyBatis 的基础上只做增强不做改变，为简化开发、提高效率而生。</p>
</blockquote>
<h3>1.1 为什么会诞生MyBatis-Plus？</h3>`,r:{minutes:8.54,words:2563},t:"SpringBoot集成MySQL MyBatis-Plus方式",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis-plus/mybatis-plus-x-tenant.html",{loader:()=>o(()=>import("./mybatis-plus-x-tenant.html-ClVmD26w.js"),[]),meta:{d:1729494189e3,g:null,e:`
<blockquote>
<p>本文主要介绍 MyBatis-Plus的基于字段隔离的多租户实现，以及MyBatis-Plus的基于字段的隔离方式实践和原理。</p>
</blockquote>
<h2>1. 知识准备</h2>
<blockquote>
<p>需要了解多租户及常见的实现方式，以及MyBatis-Plus的基于字段的隔离方式原理。</p>
</blockquote>
<h3>1.1 什么是多租户？</h3>
<blockquote>
<p>如下解释来源于百度百科</p>
</blockquote>
<p>多租户技术（英语：multi-tenancy technology）或称多重租赁技术，是一种软件架构技术，它是在探讨与实现如何于多用户的环境下共用相同的系统或程序组件，并且仍可确保各用户间数据的隔离性。</p>`,r:{minutes:11.41,words:3424},t:"SpringBoot集成MySQL-MyBatis-Plus基于字段隔离的多租户",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/qr/qr-x-gen-qr.html",{loader:()=>o(()=>import("./qr-x-gen-qr.html-CfIK_56W.js"),[]),meta:{d:1729494189e3,e:`
<h2>1. 背景</h2>
<p>之前有个业务需要识别前端传回来的二维码，网上有很多方案，但很多方案识别率特别低。优化后的版本整合后在此备份</p>
<h2>2. 集成</h2>
<h3>2.1 pom依赖</h3>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;com.google.zxing&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;core&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;3.3.3&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;com.google.zxing&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;javase&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;3.3.3&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
</div>`,r:{minutes:4.12,words:1237},t:"Zxing生成和识别二维码",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/qr/qr-x-zxing-garbled-code.html",{loader:()=>o(()=>import("./qr-x-zxing-garbled-code.html-CbH_Kz7g.js"),[]),meta:{d:1729494189e3,e:`
<p>直接上代码</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B"> QRCodeWriter</span><span style="color:#E06C75;--shiki-dark:#E06C75"> writer </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> QRCodeWriter</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75"> </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 解决中文乱码问题</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> contentCharset </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">content</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getBytes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"UTF-8"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">),</span><span style="color:#98C379;--shiki-dark:#98C379"> "ISO-8859-1"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        BitMatrix</span><span style="color:#E06C75;--shiki-dark:#E06C75"> matrix </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> writer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">encode</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(contentCharset, format, width, height);</span></span></code></pre>
</div>`,r:{minutes:.23,words:70},t:"使用zxing生成二维码乱码问题",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/qr/qr-x-zxing-white-lace.html",{loader:()=>o(()=>import("./qr-x-zxing-white-lace.html-vkfm41A7.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p>我们在使用zxing生成二维码的时候，会带上一个白色边框。因业务需要不能有这个白边，一定要把这个白边去除，那么如何去除呢？</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231613036.png" alt="image-20220527142912892" tabindex="0" loading="lazy"><figcaption>image-20220527142912892</figcaption></figure>
<h2>2. 源码白边产生</h2>`,r:{minutes:3.6,words:1080},t:"使用zxing生成二维码去除白边",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/shardingsphere/",{loader:()=>o(()=>import("./index.html-B4ePTTK7.js"),[]),meta:{d:1729494189e3,c:["分库分表"],e:`
<p>TODO</p>
`,r:{minutes:.07,words:21},t:"数据库管理-Sharding-JDBC",O:220,y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/shardingsphere/sharding-jdbc-x-jpa-read-write.html",{loader:()=>o(()=>import("./sharding-jdbc-x-jpa-read-write.html-Ck0Z6qJJ.js"),[]),meta:{d:1729494189e3,g:null,e:`
<blockquote>
<p>本文主要介绍分表分库，以及SpringBoot集成基于ShardingJDBC的读写分离实践。</p>
</blockquote>
<h2>1. 知识准备</h2>
<blockquote>
<p>主要理解ShardingJDBC针对读写分离库的场景和设计目标等。</p>
</blockquote>
<h3>1.1 读写分离库的场景和设计目标？</h3>
<blockquote>
<p>透明化读写分离所带来的影响，<strong>让使用方尽量像使用一个数据库一样使用主从数据库集群</strong>，是ShardingSphere读写分离模块的主要设计目标。</p>
</blockquote>`,r:{minutes:13.06,words:3919},t:"SpringBoot集成ShardingJDBC-基于JPA的读写分离",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/shardingsphere/sharding-jdbc-x-sub-database-sub-table.html",{loader:()=>o(()=>import("./sharding-jdbc-x-sub-database-sub-table.html-BOIan6lk.js"),[]),meta:{d:1729494189e3,g:null,e:`
<h2>1. 简介</h2>
<p><code>sharding-jdbc</code>是由当当捐入给<code>apache</code>的一款分布式数据库中间件，支持垂直分库、垂直分表、水平分库、水平分表、读写分离、分布式事务和高可用等相关功能。</p>
<h2>2. 实现1（环境搭建）</h2>
<h3>2.1 添加依赖</h3>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">&lt;!-- sharding-jdbc分库分表 --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">	&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;org.apache.shardingsphere&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">	&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;sharding-jdbc-core&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">	&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;4.1.1&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
</div>`,r:{minutes:2.67,words:802},t:"sharding-jdbc实现分库分表实战",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/shardingsphere/sharding-jdbc-x-sub-table.html",{loader:()=>o(()=>import("./sharding-jdbc-x-sub-table.html-Dd5Cf1jv.js"),[]),meta:{d:1729494189e3,e:`
<blockquote>
<p>本文主要介绍分表分库，以及SpringBoot集成基于ShardingJDBC+MyBatis的单库分表实践。</p>
</blockquote>
<h2>1. 知识准备</h2>
<blockquote>
<p>主要理解分表分库，Sharding-JDBC要解决什么问题，Sharding-JDBC及ShardingSphere的关系等。</p>
</blockquote>
<h3>1.1 为什么要分表分库？</h3>
<p><a href="https://pdai.tech/md/db/sql-mysql/sql-mysql-devide.html" target="_blank" rel="noopener noreferrer">MySQL - 分表分库</a></p>`,r:{minutes:7.07,words:2122},t:"SpringBoot集成ShardingJDBC-Sharding-JDBC简介和基于MyBatis的单库分表",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/shardingsphere/sharding-jdbc-x-tenant.html",{loader:()=>o(()=>import("./sharding-jdbc-x-tenant.html-D7yLw-6J.js"),[]),meta:{d:1729494189e3,g:null,e:`
<blockquote>
<p>本文主要介绍ShardingJDBC的分片算法和分片策略，并在此基础上通过SpringBoot集成ShardingJDBC的几种策略（标准分片策略，行表达式分片策略和hint分片策略）向你展示DB隔离的多租户方案。</p>
</blockquote>
<h2>1. 知识准备</h2>
<blockquote>
<p>主要理解ShardingJDBC表的基本术语，以及分片算法和分片策略等。</p>
</blockquote>
<h3>1.1 逻辑表？绑定表？</h3>
<blockquote>
<p>如下内容来自<a href="https://shardingsphere.apache.org/" target="_blank" rel="noopener noreferrer">官网</a></p>
</blockquote>`,r:{minutes:26.04,words:7813},t:"SpringBoot集成ShardingJDBC-基于JPA的DB隔离多租户方案",y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/timer/quartz-x-overview.html",{loader:()=>o(()=>import("./quartz-x-overview.html-BL4MdXEV.js"),[]),meta:{d:1729494189e3,c:["定时任务"],e:`
<h2>1. 前置</h2>
<p>项目除了quartz 提供的基础表之外，还额外建了两张表</p>
<ul>
<li><code>sys_job</code>：定时任务调度表
<ul>
<li>每次新增定时任务，都会先向这张表插入一条数据，再建 quartz 任务（增删改同理）</li>
<li>**项目启动时，初始化定时器 **
<ul>
<li><strong>主要是防止手动修改数据库导致未同步到定时任务处理</strong>（注：不能手动修改数据库ID和任务组名，否则会导致脏数据）</li>
<li>意味着 <code>quartz</code> 基础表的<code>QRTZ_JOB_DETAILS</code>  项目每次启动都会清空更新一次</li>
</ul>
</li>
</ul>
</li>
<li><code>sys_job_log</code>  定时任务调度日志表
<ul>
<li>执行完成记录日志</li>
</ul>
</li>
</ul>`,r:{minutes:4.77,words:1430},t:"定时任务 - quartz流程总结",O:52,y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/timer/quartz-x-principle.html",{loader:()=>o(()=>import("./quartz-x-principle.html-B7ooMhYR.js"),[]),meta:{d:1729494189e3,c:["定时任务"],g:null,e:`
<h2>1. Quartz概念</h2>
<p>Quartz是一个优秀的任务调度框架， 具有以下特点：</p>
<ul>
<li>强大的调度功能，例如支持丰富多样的调度方法，可以满足各种常规及特殊需求；</li>
<li>负载均衡</li>
<li>高可用</li>
</ul>
<h3>1.1 调度器：scheduler</h3>
<p>任务调度的控制器，负责定时任务的调度，并且提供任务和触发器的增删改查等api方法。</p>
<h3>1.2 任务：job</h3>
<p>job是实际被调度的任务，每个任务必须指定具体执行任务的实现类，实现类需要继承QuartzJobBean或者实现org.quartz.Job接口，具体的业务逻辑写在execute方法里面。<br>
是否支持并发的注解：@DisallowConcurrentExecution</p>`,r:{minutes:5.21,words:1562},t:"定时任务 - Quartz原理分析",O:53,y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/timer/quartz-x-started.html",{loader:()=>o(()=>import("./quartz-x-started.html-DR7-rOQw.js"),[]),meta:{d:1729494189e3,c:["定时任务"],g:null,e:`
<h2>0. Cron表达式</h2>
<p><a href="http://cron.qqe2.com/" target="_blank" rel="noopener noreferrer">在线生成Cron表达式的工具</a></p>
<h2>1. Qaurtz简介</h2>
<p>Quartz是一个完全由java编写的任务调度框架。<br>
那么什么是任务调度呢？很多时候你可能会收到某个需求，要求程序 “ 隔某个特定的时间段 在某个特定的时间 做某个特定的事情 ”，比如：</p>
<ul>
<li>每个月的9号自动还款蚂蚁花呗</li>
<li>每年12月1日0点发送生日祝福给你的朋友</li>
<li>在某些视频网站中，购买会员后，每月会给会员送一些优惠券。</li>
<li>定时生成报表、邮件</li>
<li>一些需要定时清理数据的任务</li>
<li>在保证最终一致性的场景中，往往利用定时任务调度进行一些对比工作</li>
</ul>`,r:{minutes:6.4,words:1920},t:"定时任务 - quartz定时器入门",O:51,y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/timer/springboot-x-task-elastic-job-timer.html",{loader:()=>o(()=>import("./springboot-x-task-elastic-job-timer.html-DAJwLk2P.js"),[]),meta:{d:1729494189e3,c:["定时任务"],g:null,e:`
<blockquote>
<p>前文展示quartz实现基于数据库的分布式任务管理和job生命周期的控制，那在分布式场景下如何解决弹性调度、资源管控、以及作业治理等呢？针对这些功能前当当团队开发了ElasticJob，2020 年 5 月 28 日ElasticJob成为 Apache ShardingSphere 的子项目；本文介绍ElasticJob以及SpringBoot的集成。</p>
</blockquote>
<h2>1. 知识准备</h2>
<blockquote>
<p>需要对分布式任务的知识体系和ElasticJob有基本的理解。</p>
</blockquote>
<h3>1.1 分布式任务知识体系</h3>`,r:{minutes:28.06,words:8417},t:"定时任务 - 分布式elastic-job方式",O:60,y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/timer/springboot-x-task-executor-timer.html",{loader:()=>o(()=>import("./springboot-x-task-executor-timer.html-15Xzv3Cw.js"),[]),meta:{d:1729494189e3,c:["定时任务"],g:null,e:`
<blockquote>
<p>上文介绍的Timer在实际开发中很少被使用， 因为Timer底层是使用一个单线程来实现多个Timer任务处理的，所有任务都是由同一个线程来调度，所有任务都是串行执行。而ScheduledExecutorService是基于线程池的，可以开启多个线程进行执行多个任务，每个任务开启一个线程； 这样任务的延迟和未处理异常就不会影响其它任务的执行了。</p>
</blockquote>
<h2>1. 知识准备</h2>
<blockquote>
<p>需要对ScheduledExecutorService 代替 Timer的原因以及ScheduledExecutorService所在的知识体系有了解。</p>
</blockquote>`,r:{minutes:4.53,words:1358},t:"定时任务 - ScheduledExecutorService实现方式",O:20,y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/timer/springboot-x-task-quartz-cluster-timer.html",{loader:()=>o(()=>import("./springboot-x-task-quartz-cluster-timer.html-BIlbjNhN.js"),[]),meta:{d:1729494189e3,c:["定时任务"],g:null,e:`
<blockquote>
<p>通常我们使用quartz只是实现job单实例运行，本例将展示quartz实现基于数据库的分布式任务管理，和控制job生命周期。</p>
</blockquote>
<h2>1. 准备知识点</h2>
<blockquote>
<p>需要理解Quartz的持久化。</p>
</blockquote>
<h3>1.1 什么是Quartz持久化</h3>
<h4>1.1.1 <strong>为什么要持久化</strong>？</h4>
<p>当程序突然被中断时，如断电，内存超出时，很有可能造成任务的丢失。 可以将调度信息存储到数据库里面，进行持久化，当程序被中断后，再次启动，仍然会保留中断之前的数据，继续执行，而并不是重新开始。</p>`,r:{minutes:12.23,words:3670},t:"定时任务 - 分布式quartz cluster方式",O:70,y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/timer/springboot-x-task-quartz-timer.html",{loader:()=>o(()=>import("./springboot-x-task-quartz-timer.html-DsXwTa1t.js"),[]),meta:{d:1729494189e3,c:["定时任务"],g:null,e:`
<blockquote>
<p>除了SpringTask，最为常用的Quartz，并且Spring也集成了Quartz的框架。本文主要介绍Quartz和基础的Quartz的集成案例。</p>
</blockquote>
<h2>1. 准备知识点</h2>
<blockquote>
<p>需要了解常用的Quartz框架。</p>
</blockquote>
<h3>1.1 什么是Quartz</h3>
<blockquote>
<p>来源<a href="https://baike.baidu.com/item/quartz/3643055" target="_blank" rel="noopener noreferrer">百度百科</a>, 官网地址：<a href="http://www.quartz-scheduler.org/" target="_blank" rel="noopener noreferrer">http://www.quartz-scheduler.org/</a></p>
</blockquote>`,r:{minutes:5.21,words:1563},t:"定时任务 - 基础quartz实现方式",O:50,y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/timer/springboot-x-task-spring-task-timer.html",{loader:()=>o(()=>import("./springboot-x-task-spring-task-timer.html-NNUyfFIz.js"),[]),meta:{d:1729494189e3,c:["定时任务"],g:null,e:`
<blockquote>
<p>前文我们介绍了Timer和ScheduledExecutorService是JDK内置的定时任务方案以及Netty内部基于时间轮实现的HashedWheelTimer；而主流的SpringBoot集成方案有两种，一种是Spring Sechedule, 另一种是Spring集成Quartz； 本文主要介绍Spring Schedule实现方式。</p>
</blockquote>
<h2>1. 准备知识点</h2>
<blockquote>
<p>cron表达式， 以及BeanPostProcessor（方便你理解它的原理，相关介绍在之前的文章中<a href="https://pdai.tech/md/spring/spring-x-framework-ioc-source-3.html" target="_blank" rel="noopener noreferrer">Spring核心之控制反转(IOC)源码解析</a>）.</p>
</blockquote>`,r:{minutes:9.12,words:2735},t:"定时任务 - SpringSchedule实现方式",O:30,y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/timer/springboot-x-task-timer.html",{loader:()=>o(()=>import("./springboot-x-task-timer.html-DAj1ThaH.js"),[]),meta:{d:1729494189e3,c:["定时任务"],e:`
<blockquote>
<p>定时任务在实际开发中有着广泛的用途，本文主要帮助你构建定时任务的知识体系，同时展示Timer 的schedule和scheduleAtFixedRate例子；后续的文章中我们将逐一介绍其它常见的与SpringBoot的集成。</p>
</blockquote>
<h2>1. 知识准备</h2>
<blockquote>
<p>需要对定时任务的使用场景和常见的实现方式。</p>
</blockquote>
<h3>1.1 什么样的场景会使用定时任务？</h3>
<p>比如每天/每周/每月生成日志汇总，定时发送推送信息，定时生成数据表格等</p>
<h3>1.2 定时任务有哪些实现方式？</h3>`,r:{minutes:4.45,words:1336},t:"定时任务 - Timer实现方式",O:10,y:"a"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/timer/springboot-x-task-xxl-job-timer.html",{loader:()=>o(()=>import("./springboot-x-task-xxl-job-timer.html-Ch42C6m7.js"),[]),meta:{d:1729494189e3,c:["定时任务"],g:null,e:`
<blockquote>
<p>除了前文介绍的ElasticJob，xxl-job在很多中小公司有着应用（虽然其代码和设计等质量并不太高，Licence不够开放，有着个人主义色彩，但是其具体开箱使用的便捷性和功能相对完善性，这是中小团队采用的主要原因）；XXL-JOB是一个分布式任务调度平台，其核心设计目标是开发迅速、学习简单、轻量级、易扩展。本文介绍XXL-JOB以及SpringBoot的集成。</p>
</blockquote>
<h2>1. 知识准备</h2>
<blockquote>
<p>需要对分布式任务的知识体系和xxl-Job有基本的理解。</p>
</blockquote>
`,r:{minutes:18.44,words:5532},t:"定时任务 - 分布式xxl-job方式",O:90,y:"a"}}],["/404.html",{loader:()=>o(()=>import("./404.html-DHmGEjOT.js"),[]),meta:{e:`<p>404 Not Found</p>
`,r:{minutes:.01,words:3},t:"",y:"p"}}],["/private/",{loader:()=>o(()=>import("./index.html-onYhJBag.js"),[]),meta:{r:{minutes:0,words:1},t:"Private",y:"p"}}],["/posts/",{loader:()=>o(()=>import("./index.html-DVsUlAwv.js"),[]),meta:{r:{minutes:0,words:1},t:"Posts",y:"p"}}],["/posts/Java/Java8%E7%89%B9%E6%80%A7/",{loader:()=>o(()=>import("./index.html-BfKYKMKR.js"),[]),meta:{r:{minutes:0,words:1},t:"Java8特性",y:"p"}}],["/posts/Java/JavaIO/",{loader:()=>o(()=>import("./index.html-DINCyHG0.js"),[]),meta:{r:{minutes:0,words:1},t:"Java IO",y:"p"}}],["/posts/Java/JavaJVM/",{loader:()=>o(()=>import("./index.html-Bt0RaJWB.js"),[]),meta:{r:{minutes:0,words:1},t:"Java JVM",y:"p"}}],["/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/",{loader:()=>o(()=>import("./index.html-BQFRae52.js"),[]),meta:{r:{minutes:0,words:1},t:"Java多线程",y:"p"}}],["/posts/Java/Java%E7%BC%96%E8%AF%91/",{loader:()=>o(()=>import("./index.html-DS6-7Mkc.js"),[]),meta:{r:{minutes:0,words:1},t:"Java编译",y:"p"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/Maven/",{loader:()=>o(()=>import("./index.html-2v8XMr_e.js"),[]),meta:{r:{minutes:0,words:1},t:"Maven",y:"p"}}],["/posts/Java/Java%E6%A1%86%E6%9E%B6/",{loader:()=>o(()=>import("./index.html-and5vZV-.js"),[]),meta:{r:{minutes:0,words:1},t:"Java框架",y:"p"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/api-doc/",{loader:()=>o(()=>import("./index.html-iRljdWMQ.js"),[]),meta:{r:{minutes:0,words:1},t:"Api Doc",y:"p"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/",{loader:()=>o(()=>import("./index.html-CaCMWHjC.js"),[]),meta:{r:{minutes:0,words:1},t:"Java第三方依赖",y:"p"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/cas/",{loader:()=>o(()=>import("./index.html-CPlu6jHV.js"),[]),meta:{r:{minutes:0,words:1},t:"Cas",y:"p"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/database-connection-pool/",{loader:()=>o(()=>import("./index.html-d1RgYfmv.js"),[]),meta:{r:{minutes:0,words:1},t:"Database Connection Pool",y:"p"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/hibernate/",{loader:()=>o(()=>import("./index.html-CSgG19d-.js"),[]),meta:{r:{minutes:0,words:1},t:"Hibernate",y:"p"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/jdbc/",{loader:()=>o(()=>import("./index.html-5LsDrVdw.js"),[]),meta:{r:{minutes:0,words:1},t:"Jdbc",y:"p"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/jpa/",{loader:()=>o(()=>import("./index.html-Bfctpmrg.js"),[]),meta:{r:{minutes:0,words:1},t:"Jpa",y:"p"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/",{loader:()=>o(()=>import("./index.html-DH9jQ6Yq.js"),[]),meta:{r:{minutes:0,words:1},t:"Mybatis",y:"p"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis-plus/",{loader:()=>o(()=>import("./index.html-Dxt9fqPX.js"),[]),meta:{r:{minutes:0,words:1},t:"Mybatis Plus",y:"p"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/qr/",{loader:()=>o(()=>import("./index.html-BQno1XN4.js"),[]),meta:{r:{minutes:0,words:1},t:"Qr",y:"p"}}],["/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/timer/",{loader:()=>o(()=>import("./index.html-CLv9wS-f.js"),[]),meta:{r:{minutes:0,words:1},t:"Timer",y:"p"}}],["/category/",{loader:()=>o(()=>import("./index.html-omPSESpD.js"),[]),meta:{t:"分类",I:!1,y:"p"}}],["/category/blog/",{loader:()=>o(()=>import("./index.html-DIM__Dor.js"),[]),meta:{t:"Blog 分类",I:!1,y:"p"}}],["/category/about/",{loader:()=>o(()=>import("./index.html-JhkiNzp7.js"),[]),meta:{t:"About 分类",I:!1,y:"p"}}],["/category/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",{loader:()=>o(()=>import("./index.html-EmCi_8ir.js"),[]),meta:{t:"使用指南 分类",I:!1,y:"p"}}],["/category/%E6%94%B6%E8%97%8F/",{loader:()=>o(()=>import("./index.html-CZtInDBe.js"),[]),meta:{t:"收藏 分类",I:!1,y:"p"}}],["/category/linux/",{loader:()=>o(()=>import("./index.html-COSa2PMX.js"),[]),meta:{t:"Linux 分类",I:!1,y:"p"}}],["/category/%E6%95%B0%E6%8D%AE%E5%BA%93/",{loader:()=>o(()=>import("./index.html-VxtuHpVO.js"),[]),meta:{t:"数据库 分类",I:!1,y:"p"}}],["/category/redis/",{loader:()=>o(()=>import("./index.html-ZQHKwyR5.js"),[]),meta:{t:"Redis 分类",I:!1,y:"p"}}],["/category/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/",{loader:()=>o(()=>import("./index.html-Jx8AgIlo.js"),[]),meta:{t:"计算机组成原理 分类",I:!1,y:"p"}}],["/category/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/",{loader:()=>o(()=>import("./index.html-DSM_L7Nt.js"),[]),meta:{t:"计算机网络 分类",I:!1,y:"p"}}],["/category/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/",{loader:()=>o(()=>import("./index.html-D0MSrgBH.js"),[]),meta:{t:"操作系统 分类",I:!1,y:"p"}}],["/category/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/",{loader:()=>o(()=>import("./index.html-CRDYnoBO.js"),[]),meta:{t:"数据结构 分类",I:!1,y:"p"}}],["/category/es/",{loader:()=>o(()=>import("./index.html-ClPZcZNE.js"),[]),meta:{t:"es 分类",I:!1,y:"p"}}],["/category/elasticsearch/",{loader:()=>o(()=>import("./index.html-DevshyzS.js"),[]),meta:{t:"ElasticSearch 分类",I:!1,y:"p"}}],["/category/mongodb/",{loader:()=>o(()=>import("./index.html-DjaKoiUZ.js"),[]),meta:{t:"mongodb 分类",I:!1,y:"p"}}],["/category/mysql/",{loader:()=>o(()=>import("./index.html-B3AYacL2.js"),[]),meta:{t:"Mysql 分类",I:!1,y:"p"}}],["/category/mysql/",{loader:()=>o(()=>import("./index.html-B3AYacL2.js"),[]),meta:{t:"MySql 分类",I:!1,y:"p"}}],["/category/java/",{loader:()=>o(()=>import("./index.html-sfIp-OJq.js"),[]),meta:{t:"Java 分类",I:!1,y:"p"}}],["/category/io/",{loader:()=>o(()=>import("./index.html-3JAaoYMN.js"),[]),meta:{t:"IO 分类",I:!1,y:"p"}}],["/category/jvm/",{loader:()=>o(()=>import("./index.html-DRF0TacF.js"),[]),meta:{t:"JVM 分类",I:!1,y:"p"}}],["/category/%E5%B9%B6%E5%8F%91/",{loader:()=>o(()=>import("./index.html-CuZEKvHi.js"),[]),meta:{t:"并发 分类",I:!1,y:"p"}}],["/category/java-web/",{loader:()=>o(()=>import("./index.html-BhulMr7B.js"),[]),meta:{t:"Java Web 分类",I:!1,y:"p"}}],["/category/java%E5%9F%BA%E7%A1%80/",{loader:()=>o(()=>import("./index.html-C5dg1p6b.js"),[]),meta:{t:"Java基础 分类",I:!1,y:"p"}}],["/category/vue/",{loader:()=>o(()=>import("./index.html-Dw_nbHij.js"),[]),meta:{t:"Vue 分类",I:!1,y:"p"}}],["/category/%E5%89%8D%E7%AB%AF/",{loader:()=>o(()=>import("./index.html-Bf9571xY.js"),[]),meta:{t:"前端 分类",I:!1,y:"p"}}],["/category/spring/",{loader:()=>o(()=>import("./index.html-Bi8nQWN2.js"),[]),meta:{t:"Spring 分类",I:!1,y:"p"}}],["/category/cas/",{loader:()=>o(()=>import("./index.html-BJENEXZx.js"),[]),meta:{t:"CAS 分类",I:!1,y:"p"}}],["/category/mybatis/",{loader:()=>o(()=>import("./index.html-CghbioHp.js"),[]),meta:{t:"MyBatis 分类",I:!1,y:"p"}}],["/category/%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8/",{loader:()=>o(()=>import("./index.html-DFym83-Z.js"),[]),meta:{t:"分库分表 分类",I:!1,y:"p"}}],["/category/%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/",{loader:()=>o(()=>import("./index.html-BbtKFk_N.js"),[]),meta:{t:"定时任务 分类",I:!1,y:"p"}}],["/tag/",{loader:()=>o(()=>import("./index.html-DshFo33K.js"),[]),meta:{t:"标签",I:!1,y:"p"}}],["/tag/blog/",{loader:()=>o(()=>import("./index.html-CXXmIbPi.js"),[]),meta:{t:"标签: Blog",I:!1,y:"p"}}],["/tag/about/",{loader:()=>o(()=>import("./index.html-BgSKVxU9.js"),[]),meta:{t:"标签: About",I:!1,y:"p"}}],["/tag/github-action/",{loader:()=>o(()=>import("./index.html-CDcD1UGi.js"),[]),meta:{t:"标签: GitHub Action",I:!1,y:"p"}}],["/tag/%E7%A6%81%E7%94%A8/",{loader:()=>o(()=>import("./index.html-DLevJd15.js"),[]),meta:{t:"标签: 禁用",I:!1,y:"p"}}],["/tag/%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/",{loader:()=>o(()=>import("./index.html-DqafO1BL.js"),[]),meta:{t:"标签: 文章加密",I:!1,y:"p"}}],["/tag/markdown/",{loader:()=>o(()=>import("./index.html-wetDpCPq.js"),[]),meta:{t:"标签: Markdown",I:!1,y:"p"}}],["/tag/%E9%A1%B5%E9%9D%A2%E9%85%8D%E7%BD%AE/",{loader:()=>o(()=>import("./index.html-DlN_Xw3l.js"),[]),meta:{t:"标签: 页面配置",I:!1,y:"p"}}],["/tag/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",{loader:()=>o(()=>import("./index.html-C-cygFOk.js"),[]),meta:{t:"标签: 使用指南",I:!1,y:"p"}}],["/tag/%E7%94%9F%E6%B4%BB/",{loader:()=>o(()=>import("./index.html-BVAFItIw.js"),[]),meta:{t:"标签: 生活",I:!1,y:"p"}}],["/tag/%E5%B7%A5%E5%85%B7%E7%BD%91%E7%AB%99/",{loader:()=>o(()=>import("./index.html-Dm0uUnol.js"),[]),meta:{t:"标签: 工具网站",I:!1,y:"p"}}],["/tag/terminal/",{loader:()=>o(()=>import("./index.html-RPxEgs7_.js"),[]),meta:{t:"标签: terminal",I:!1,y:"p"}}],["/tag/linux/",{loader:()=>o(()=>import("./index.html-BvDwkoI4.js"),[]),meta:{t:"标签: Linux",I:!1,y:"p"}}],["/tag/os/",{loader:()=>o(()=>import("./index.html-BeU_cYl-.js"),[]),meta:{t:"标签: OS",I:!1,y:"p"}}],["/tag/unix/",{loader:()=>o(()=>import("./index.html-BcAyGMLK.js"),[]),meta:{t:"标签: Unix",I:!1,y:"p"}}],["/tag/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/",{loader:()=>o(()=>import("./index.html-IaCGQXG5.js"),[]),meta:{t:"标签: 计算机组成原理",I:!1,y:"p"}}],["/tag/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/",{loader:()=>o(()=>import("./index.html-B_y-GSAx.js"),[]),meta:{t:"标签: 计算机网络",I:!1,y:"p"}}],["/tag/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/",{loader:()=>o(()=>import("./index.html-BVoYN7kZ.js"),[]),meta:{t:"标签: 操作系统",I:!1,y:"p"}}],["/tag/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/",{loader:()=>o(()=>import("./index.html-DzhpWf9p.js"),[]),meta:{t:"标签: 数据结构",I:!1,y:"p"}}],["/tag/mysql/",{loader:()=>o(()=>import("./index.html-3hG5-d10.js"),[]),meta:{t:"标签: MySQL",I:!1,y:"p"}}],["/tag/java/",{loader:()=>o(()=>import("./index.html-CZTJEynK.js"),[]),meta:{t:"标签: Java",I:!1,y:"p"}}],["/tag/%E5%AD%A6%E4%B9%A0/",{loader:()=>o(()=>import("./index.html-DmOmPEK0.js"),[]),meta:{t:"标签: 学习",I:!1,y:"p"}}],["/tag/%E5%9F%BA%E7%A1%80/",{loader:()=>o(()=>import("./index.html-Dkdk8RW5.js"),[]),meta:{t:"标签: 基础",I:!1,y:"p"}}],["/tag/%E9%9B%86%E5%90%88/",{loader:()=>o(()=>import("./index.html-yTBoJkOd.js"),[]),meta:{t:"标签: 集合",I:!1,y:"p"}}],["/article/",{loader:()=>o(()=>import("./index.html-CKK2_1yY.js"),[]),meta:{t:"文章",I:!1,y:"p"}}],["/star/",{loader:()=>o(()=>import("./index.html-CPM0F7eN.js"),[]),meta:{t:"星标",I:!1,y:"p"}}],["/timeline/",{loader:()=>o(()=>import("./index.html-LpEyZ9tK.js"),[]),meta:{t:"时间轴",I:!1,y:"p"}}],["/news/",{loader:()=>o(()=>import("./index.html-DABQ90TP.js"),[]),meta:{t:"说说",y:"p"}}]]);/*!
  * vue-router v4.4.5
  * (c) 2024 Eduardo San Martin Morote
  * @license MIT
  */const Mi=typeof document<"u";function mk(s){return typeof s=="object"||"displayName"in s||"props"in s||"__vccOpts"in s}function x7(s){return s.__esModule||s[Symbol.toStringTag]==="Module"||s.default&&mk(s.default)}const Ds=Object.assign;function Zt(s,a){const n={};for(const i in a){const e=a[i];n[i]=Xa(e)?e.map(s):s(e)}return n}const Te=()=>{},Xa=Array.isArray,Ek=/#/g,L7=/&/g,T7=/\//g,O7=/=/g,J7=/\?/g,Fk=/\+/g,I7=/%5B/g,P7=/%5D/g,Ck=/%5E/g,R7=/%60/g,gk=/%7B/g,M7=/%7C/g,bk=/%7D/g,j7=/%20/g;function Ro(s){return encodeURI(""+s).replace(M7,"|").replace(I7,"[").replace(P7,"]")}function q7(s){return Ro(s).replace(gk,"{").replace(bk,"}").replace(Ck,"^")}function Ir(s){return Ro(s).replace(Fk,"%2B").replace(j7,"+").replace(Ek,"%23").replace(L7,"%26").replace(R7,"`").replace(gk,"{").replace(bk,"}").replace(Ck,"^")}function V7(s){return Ir(s).replace(O7,"%3D")}function z7(s){return Ro(s).replace(Ek,"%23").replace(J7,"%3F")}function N7(s){return s==null?"":z7(s).replace(T7,"%2F")}function Ve(s){try{return decodeURIComponent(""+s)}catch{}return""+s}const H7=/\/$/,U7=s=>s.replace(H7,"");function sr(s,a,n="/"){let i,e={},l="",t="";const r=a.indexOf("#");let p=a.indexOf("?");return r<p&&r>=0&&(p=-1),p>-1&&(i=a.slice(0,p),l=a.slice(p+1,r>-1?r:a.length),e=s(l)),r>-1&&(i=i||a.slice(0,r),t=a.slice(r,a.length)),i=G7(i??a,n),{fullPath:i+(l&&"?")+l+t,path:i,query:e,hash:Ve(t)}}function $7(s,a){const n=a.query?s(a.query):"";return a.path+(n&&"?")+n+(a.hash||"")}function rc(s,a){return!a||!s.toLowerCase().startsWith(a.toLowerCase())?s:s.slice(a.length)||"/"}function Q7(s,a,n){const i=a.matched.length-1,e=n.matched.length-1;return i>-1&&i===e&&ie(a.matched[i],n.matched[e])&&fk(a.params,n.params)&&s(a.query)===s(n.query)&&a.hash===n.hash}function ie(s,a){return(s.aliasOf||s)===(a.aliasOf||a)}function fk(s,a){if(Object.keys(s).length!==Object.keys(a).length)return!1;for(const n in s)if(!W7(s[n],a[n]))return!1;return!0}function W7(s,a){return Xa(s)?oc(s,a):Xa(a)?oc(a,s):s===a}function oc(s,a){return Xa(a)?s.length===a.length&&s.every((n,i)=>n===a[i]):s.length===1&&s[0]===a}function G7(s,a){if(s.startsWith("/"))return s;if(!s)return a;const n=a.split("/"),i=s.split("/"),e=i[i.length-1];(e===".."||e===".")&&i.push("");let l=n.length-1,t,r;for(t=0;t<i.length;t++)if(r=i[t],r!==".")if(r==="..")l>1&&l--;else break;return n.slice(0,l).join("/")+"/"+i.slice(t).join("/")}const mn={path:"/",name:void 0,params:{},query:{},hash:"",fullPath:"/",matched:[],meta:{},redirectedFrom:void 0};var ze;(function(s){s.pop="pop",s.push="push"})(ze||(ze={}));var Oe;(function(s){s.back="back",s.forward="forward",s.unknown=""})(Oe||(Oe={}));function K7(s){if(!s)if(Mi){const a=document.querySelector("base");s=a&&a.getAttribute("href")||"/",s=s.replace(/^\w+:\/\/[^\/]+/,"")}else s="/";return s[0]!=="/"&&s[0]!=="#"&&(s="/"+s),U7(s)}const X7=/^[^#]+#/;function Y7(s,a){return s.replace(X7,"#")+a}function Z7(s,a){const n=document.documentElement.getBoundingClientRect(),i=s.getBoundingClientRect();return{behavior:a.behavior,left:i.left-n.left-(a.left||0),top:i.top-n.top-(a.top||0)}}const Ft=()=>({left:window.scrollX,top:window.scrollY});function sA(s){let a;if("el"in s){const n=s.el,i=typeof n=="string"&&n.startsWith("#"),e=typeof n=="string"?i?document.getElementById(n.slice(1)):document.querySelector(n):n;if(!e)return;a=Z7(e,s)}else a=s;"scrollBehavior"in document.documentElement.style?window.scrollTo(a):window.scrollTo(a.left!=null?a.left:window.scrollX,a.top!=null?a.top:window.scrollY)}function pc(s,a){return(history.state?history.state.position-a:-1)+s}const Pr=new Map;function aA(s,a){Pr.set(s,a)}function nA(s){const a=Pr.get(s);return Pr.delete(s),a}let iA=()=>location.protocol+"//"+location.host;function Dk(s,a){const{pathname:n,search:i,hash:e}=a,l=s.indexOf("#");if(l>-1){let r=e.includes(s.slice(l))?s.slice(l).length:1,p=e.slice(r);return p[0]!=="/"&&(p="/"+p),rc(p,"")}return rc(n,s)+i+e}function eA(s,a,n,i){let e=[],l=[],t=null;const r=({state:h})=>{const y=Dk(s,location),u=n.value,A=a.value;let F=0;if(h){if(n.value=y,a.value=h,t&&t===u){t=null;return}F=A?h.position-A.position:0}else i(y);e.forEach(C=>{C(n.value,u,{delta:F,type:ze.pop,direction:F?F>0?Oe.forward:Oe.back:Oe.unknown})})};function p(){t=n.value}function c(h){e.push(h);const y=()=>{const u=e.indexOf(h);u>-1&&e.splice(u,1)};return l.push(y),y}function B(){const{history:h}=window;h.state&&h.replaceState(Ds({},h.state,{scroll:Ft()}),"")}function k(){for(const h of l)h();l=[],window.removeEventListener("popstate",r),window.removeEventListener("beforeunload",B)}return window.addEventListener("popstate",r),window.addEventListener("beforeunload",B,{passive:!0}),{pauseListeners:p,listen:c,destroy:k}}function cc(s,a,n,i=!1,e=!1){return{back:s,current:a,forward:n,replaced:i,position:window.history.length,scroll:e?Ft():null}}function lA(s){const{history:a,location:n}=window,i={value:Dk(s,n)},e={value:a.state};e.value||l(i.value,{back:null,current:i.value,forward:null,position:a.length-1,replaced:!0,scroll:null},!0);function l(p,c,B){const k=s.indexOf("#"),h=k>-1?(n.host&&document.querySelector("base")?s:s.slice(k))+p:iA()+s+p;try{a[B?"replaceState":"pushState"](c,"",h),e.value=c}catch(y){console.error(y),n[B?"replace":"assign"](h)}}function t(p,c){const B=Ds({},a.state,cc(e.value.back,p,e.value.forward,!0),c,{position:e.value.position});l(p,B,!0),i.value=p}function r(p,c){const B=Ds({},e.value,a.state,{forward:p,scroll:Ft()});l(B.current,B,!0);const k=Ds({},cc(i.value,p,null),{position:B.position+1},c);l(p,k,!1),i.value=p}return{location:i,state:e,push:r,replace:t}}function tA(s){s=K7(s);const a=lA(s),n=eA(s,a.state,a.location,a.replace);function i(l,t=!0){t||n.pauseListeners(),history.go(l)}const e=Ds({location:"",base:s,go:i,createHref:Y7.bind(null,s)},a,n);return Object.defineProperty(e,"location",{enumerable:!0,get:()=>a.location.value}),Object.defineProperty(e,"state",{enumerable:!0,get:()=>a.state.value}),e}function rA(s){return typeof s=="string"||s&&typeof s=="object"}function _k(s){return typeof s=="string"||typeof s=="symbol"}const Sk=Symbol("");var dc;(function(s){s[s.aborted=4]="aborted",s[s.cancelled=8]="cancelled",s[s.duplicated=16]="duplicated"})(dc||(dc={}));function ee(s,a){return Ds(new Error,{type:s,[Sk]:!0},a)}function An(s,a){return s instanceof Error&&Sk in s&&(a==null||!!(s.type&a))}const Bc="[^/]+?",oA={sensitive:!1,strict:!1,start:!0,end:!0},pA=/[.+*?^${}()[\]/\\]/g;function cA(s,a){const n=Ds({},oA,a),i=[];let e=n.start?"^":"";const l=[];for(const c of s){const B=c.length?[]:[90];n.strict&&!c.length&&(e+="/");for(let k=0;k<c.length;k++){const h=c[k];let y=40+(n.sensitive?.25:0);if(h.type===0)k||(e+="/"),e+=h.value.replace(pA,"\\$&"),y+=40;else if(h.type===1){const{value:u,repeatable:A,optional:F,regexp:C}=h;l.push({name:u,repeatable:A,optional:F});const b=C||Bc;if(b!==Bc){y+=10;try{new RegExp(`(${b})`)}catch(f){throw new Error(`Invalid custom RegExp for param "${u}" (${b}): `+f.message)}}let m=A?`((?:${b})(?:/(?:${b}))*)`:`(${b})`;k||(m=F&&c.length<2?`(?:/${m})`:"/"+m),F&&(m+="?"),e+=m,y+=20,F&&(y+=-8),A&&(y+=-20),b===".*"&&(y+=-50)}B.push(y)}i.push(B)}if(n.strict&&n.end){const c=i.length-1;i[c][i[c].length-1]+=.7000000000000001}n.strict||(e+="/?"),n.end?e+="$":n.strict&&(e+="(?:/|$)");const t=new RegExp(e,n.sensitive?"":"i");function r(c){const B=c.match(t),k={};if(!B)return null;for(let h=1;h<B.length;h++){const y=B[h]||"",u=l[h-1];k[u.name]=y&&u.repeatable?y.split("/"):y}return k}function p(c){let B="",k=!1;for(const h of s){(!k||!B.endsWith("/"))&&(B+="/"),k=!1;for(const y of h)if(y.type===0)B+=y.value;else if(y.type===1){const{value:u,repeatable:A,optional:F}=y,C=u in c?c[u]:"";if(Xa(C)&&!A)throw new Error(`Provided param "${u}" is an array but it is not repeatable (* or + modifiers)`);const b=Xa(C)?C.join("/"):C;if(!b)if(F)h.length<2&&(B.endsWith("/")?B=B.slice(0,-1):k=!0);else throw new Error(`Missing required param "${u}"`);B+=b}}return B||"/"}return{re:t,score:i,keys:l,parse:r,stringify:p}}function dA(s,a){let n=0;for(;n<s.length&&n<a.length;){const i=a[n]-s[n];if(i)return i;n++}return s.length<a.length?s.length===1&&s[0]===80?-1:1:s.length>a.length?a.length===1&&a[0]===80?1:-1:0}function wk(s,a){let n=0;const i=s.score,e=a.score;for(;n<i.length&&n<e.length;){const l=dA(i[n],e[n]);if(l)return l;n++}if(Math.abs(e.length-i.length)===1){if(kc(i))return 1;if(kc(e))return-1}return e.length-i.length}function kc(s){const a=s[s.length-1];return s.length>0&&a[a.length-1]<0}const BA={type:0,value:""},kA=/[a-zA-Z0-9_]/;function hA(s){if(!s)return[[]];if(s==="/")return[[BA]];if(!s.startsWith("/"))throw new Error(`Invalid path "${s}"`);function a(y){throw new Error(`ERR (${n})/"${c}": ${y}`)}let n=0,i=n;const e=[];let l;function t(){l&&e.push(l),l=[]}let r=0,p,c="",B="";function k(){c&&(n===0?l.push({type:0,value:c}):n===1||n===2||n===3?(l.length>1&&(p==="*"||p==="+")&&a(`A repeatable param (${c}) must be alone in its segment. eg: '/:ids+.`),l.push({type:1,value:c,regexp:B,repeatable:p==="*"||p==="+",optional:p==="*"||p==="?"})):a("Invalid state to consume buffer"),c="")}function h(){c+=p}for(;r<s.length;){if(p=s[r++],p==="\\"&&n!==2){i=n,n=4;continue}switch(n){case 0:p==="/"?(c&&k(),t()):p===":"?(k(),n=1):h();break;case 4:h(),n=i;break;case 1:p==="("?n=2:kA.test(p)?h():(k(),n=0,p!=="*"&&p!=="?"&&p!=="+"&&r--);break;case 2:p===")"?B[B.length-1]=="\\"?B=B.slice(0,-1)+p:n=3:B+=p;break;case 3:k(),n=0,p!=="*"&&p!=="?"&&p!=="+"&&r--,B="";break;default:a("Unknown state");break}}return n===2&&a(`Unfinished custom RegExp for param "${c}"`),k(),t(),e}function yA(s,a,n){const i=cA(hA(s.path),n),e=Ds(i,{record:s,parent:a,children:[],alias:[]});return a&&!e.record.aliasOf==!a.record.aliasOf&&a.children.push(e),e}function uA(s,a){const n=[],i=new Map;a=Ac({strict:!1,end:!0,sensitive:!1},a);function e(k){return i.get(k)}function l(k,h,y){const u=!y,A=yc(k);A.aliasOf=y&&y.record;const F=Ac(a,k),C=[A];if("alias"in k){const f=typeof k.alias=="string"?[k.alias]:k.alias;for(const x of f)C.push(yc(Ds({},A,{components:y?y.record.components:A.components,path:x,aliasOf:y?y.record:A})))}let b,m;for(const f of C){const{path:x}=f;if(h&&x[0]!=="/"){const V=h.record.path,P=V[V.length-1]==="/"?"":"/";f.path=h.record.path+(x&&P+x)}if(b=yA(f,h,F),y?y.alias.push(b):(m=m||b,m!==b&&m.alias.push(b),u&&k.name&&!uc(b)&&t(k.name)),xk(b)&&p(b),A.children){const V=A.children;for(let P=0;P<V.length;P++)l(V[P],b,y&&y.children[P])}y=y||b}return m?()=>{t(m)}:Te}function t(k){if(_k(k)){const h=i.get(k);h&&(i.delete(k),n.splice(n.indexOf(h),1),h.children.forEach(t),h.alias.forEach(t))}else{const h=n.indexOf(k);h>-1&&(n.splice(h,1),k.record.name&&i.delete(k.record.name),k.children.forEach(t),k.alias.forEach(t))}}function r(){return n}function p(k){const h=mA(k,n);n.splice(h,0,k),k.record.name&&!uc(k)&&i.set(k.record.name,k)}function c(k,h){let y,u={},A,F;if("name"in k&&k.name){if(y=i.get(k.name),!y)throw ee(1,{location:k});F=y.record.name,u=Ds(hc(h.params,y.keys.filter(m=>!m.optional).concat(y.parent?y.parent.keys.filter(m=>m.optional):[]).map(m=>m.name)),k.params&&hc(k.params,y.keys.map(m=>m.name))),A=y.stringify(u)}else if(k.path!=null)A=k.path,y=n.find(m=>m.re.test(A)),y&&(u=y.parse(A),F=y.record.name);else{if(y=h.name?i.get(h.name):n.find(m=>m.re.test(h.path)),!y)throw ee(1,{location:k,currentLocation:h});F=y.record.name,u=Ds({},h.params,k.params),A=y.stringify(u)}const C=[];let b=y;for(;b;)C.unshift(b.record),b=b.parent;return{name:F,path:A,params:u,matched:C,meta:vA(C)}}s.forEach(k=>l(k));function B(){n.length=0,i.clear()}return{addRoute:l,resolve:c,removeRoute:t,clearRoutes:B,getRoutes:r,getRecordMatcher:e}}function hc(s,a){const n={};for(const i of a)i in s&&(n[i]=s[i]);return n}function yc(s){const a={path:s.path,redirect:s.redirect,name:s.name,meta:s.meta||{},aliasOf:s.aliasOf,beforeEnter:s.beforeEnter,props:AA(s),children:s.children||[],instances:{},leaveGuards:new Set,updateGuards:new Set,enterCallbacks:{},components:"components"in s?s.components||null:s.component&&{default:s.component}};return Object.defineProperty(a,"mods",{value:{}}),a}function AA(s){const a={},n=s.props||!1;if("component"in s)a.default=n;else for(const i in s.components)a[i]=typeof n=="object"?n[i]:n;return a}function uc(s){for(;s;){if(s.record.aliasOf)return!0;s=s.parent}return!1}function vA(s){return s.reduce((a,n)=>Ds(a,n.meta),{})}function Ac(s,a){const n={};for(const i in s)n[i]=i in a?a[i]:s[i];return n}function mA(s,a){let n=0,i=a.length;for(;n!==i;){const l=n+i>>1;wk(s,a[l])<0?i=l:n=l+1}const e=EA(s);return e&&(i=a.lastIndexOf(e,i-1)),i}function EA(s){let a=s;for(;a=a.parent;)if(xk(a)&&wk(s,a)===0)return a}function xk({record:s}){return!!(s.name||s.components&&Object.keys(s.components).length||s.redirect)}function FA(s){const a={};if(s===""||s==="?")return a;const i=(s[0]==="?"?s.slice(1):s).split("&");for(let e=0;e<i.length;++e){const l=i[e].replace(Fk," "),t=l.indexOf("="),r=Ve(t<0?l:l.slice(0,t)),p=t<0?null:Ve(l.slice(t+1));if(r in a){let c=a[r];Xa(c)||(c=a[r]=[c]),c.push(p)}else a[r]=p}return a}function vc(s){let a="";for(let n in s){const i=s[n];if(n=V7(n),i==null){i!==void 0&&(a+=(a.length?"&":"")+n);continue}(Xa(i)?i.map(l=>l&&Ir(l)):[i&&Ir(i)]).forEach(l=>{l!==void 0&&(a+=(a.length?"&":"")+n,l!=null&&(a+="="+l))})}return a}function CA(s){const a={};for(const n in s){const i=s[n];i!==void 0&&(a[n]=Xa(i)?i.map(e=>e==null?null:""+e):i==null?i:""+i)}return a}const gA=Symbol(""),mc=Symbol(""),Ct=Symbol(""),Mo=Symbol(""),Rr=Symbol("");function me(){let s=[];function a(i){return s.push(i),()=>{const e=s.indexOf(i);e>-1&&s.splice(e,1)}}function n(){s=[]}return{add:a,list:()=>s.slice(),reset:n}}function Hn(s,a,n,i,e,l=t=>t()){const t=i&&(i.enterCallbacks[e]=i.enterCallbacks[e]||[]);return()=>new Promise((r,p)=>{const c=h=>{h===!1?p(ee(4,{from:n,to:a})):h instanceof Error?p(h):rA(h)?p(ee(2,{from:a,to:h})):(t&&i.enterCallbacks[e]===t&&typeof h=="function"&&t.push(h),r())},B=l(()=>s.call(i&&i.instances[e],a,n,c));let k=Promise.resolve(B);s.length<3&&(k=k.then(c)),k.catch(h=>p(h))})}function ar(s,a,n,i,e=l=>l()){const l=[];for(const t of s)for(const r in t.components){let p=t.components[r];if(!(a!=="beforeRouteEnter"&&!t.instances[r]))if(mk(p)){const B=(p.__vccOpts||p)[a];B&&l.push(Hn(B,n,i,t,r,e))}else{let c=p();l.push(()=>c.then(B=>{if(!B)throw new Error(`Couldn't resolve component "${r}" at "${t.path}"`);const k=x7(B)?B.default:B;t.mods[r]=B,t.components[r]=k;const y=(k.__vccOpts||k)[a];return y&&Hn(y,n,i,t,r,e)()}))}}return l}function Mr(s){const a=Fs(Ct),n=Fs(Mo),i=g(()=>{const p=$a(s.to);return a.resolve(p)}),e=g(()=>{const{matched:p}=i.value,{length:c}=p,B=p[c-1],k=n.matched;if(!B||!k.length)return-1;const h=k.findIndex(ie.bind(null,B));if(h>-1)return h;const y=Ec(p[c-2]);return c>1&&Ec(B)===y&&k[k.length-1].path!==y?k.findIndex(ie.bind(null,p[c-2])):h}),l=g(()=>e.value>-1&&_A(n.params,i.value.params)),t=g(()=>e.value>-1&&e.value===n.matched.length-1&&fk(n.params,i.value.params));function r(p={}){return DA(p)?a[$a(s.replace)?"replace":"push"]($a(s.to)).catch(Te):Promise.resolve()}return{route:i,href:g(()=>i.value.href),isActive:l,isExactActive:t,navigate:r}}const bA=L({name:"RouterLink",compatConfig:{MODE:3},props:{to:{type:[String,Object],required:!0},replace:Boolean,activeClass:String,exactActiveClass:String,custom:Boolean,ariaCurrentValue:{type:String,default:"page"}},useLink:Mr,setup(s,{slots:a}){const n=te(Mr(s)),{options:i}=Fs(Ct),e=g(()=>({[Fc(s.activeClass,i.linkActiveClass,"router-link-active")]:n.isActive,[Fc(s.exactActiveClass,i.linkExactActiveClass,"router-link-exact-active")]:n.isExactActive}));return()=>{const l=a.default&&a.default(n);return s.custom?l:d("a",{"aria-current":n.isExactActive?s.ariaCurrentValue:null,href:n.href,onClick:n.navigate,class:e.value},l)}}}),fA=bA;function DA(s){if(!(s.metaKey||s.altKey||s.ctrlKey||s.shiftKey)&&!s.defaultPrevented&&!(s.button!==void 0&&s.button!==0)){if(s.currentTarget&&s.currentTarget.getAttribute){const a=s.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(a))return}return s.preventDefault&&s.preventDefault(),!0}}function _A(s,a){for(const n in a){const i=a[n],e=s[n];if(typeof i=="string"){if(i!==e)return!1}else if(!Xa(e)||e.length!==i.length||i.some((l,t)=>l!==e[t]))return!1}return!0}function Ec(s){return s?s.aliasOf?s.aliasOf.path:s.path:""}const Fc=(s,a,n)=>s??a??n,SA=L({name:"RouterView",inheritAttrs:!1,props:{name:{type:String,default:"default"},route:Object},compatConfig:{MODE:3},setup(s,{attrs:a,slots:n}){const i=Fs(Rr),e=g(()=>s.route||i.value),l=Fs(mc,0),t=g(()=>{let c=$a(l);const{matched:B}=e.value;let k;for(;(k=B[c])&&!k.components;)c++;return c}),r=g(()=>e.value.matched[t.value]);ja(mc,g(()=>t.value+1)),ja(gA,r),ja(Rr,e);const p=M();return os(()=>[p.value,r.value,s.name],([c,B,k],[h,y,u])=>{B&&(B.instances[k]=c,y&&y!==B&&c&&c===h&&(B.leaveGuards.size||(B.leaveGuards=y.leaveGuards),B.updateGuards.size||(B.updateGuards=y.updateGuards))),c&&B&&(!y||!ie(B,y)||!h)&&(B.enterCallbacks[k]||[]).forEach(A=>A(c))},{flush:"post"}),()=>{const c=e.value,B=s.name,k=r.value,h=k&&k.components[B];if(!h)return Cc(n.default,{Component:h,route:c});const y=k.props[B],u=y?y===!0?c.params:typeof y=="function"?y(c):y:null,F=d(h,Ds({},u,a,{onVnodeUnmounted:C=>{C.component.isUnmounted&&(k.instances[B]=null)},ref:p}));return Cc(n.default,{Component:F,route:c})||F}}});function Cc(s,a){if(!s)return null;const n=s(a);return n.length===1?n[0]:n}const wA=SA;function xA(s){const a=uA(s.routes,s),n=s.parseQuery||FA,i=s.stringifyQuery||vc,e=s.history,l=me(),t=me(),r=me(),p=ms(mn);let c=mn;Mi&&s.scrollBehavior&&"scrollRestoration"in history&&(history.scrollRestoration="manual");const B=Zt.bind(null,S=>""+S),k=Zt.bind(null,N7),h=Zt.bind(null,Ve);function y(S,$){let N,X;return _k(S)?(N=a.getRecordMatcher(S),X=$):X=S,a.addRoute(X,N)}function u(S){const $=a.getRecordMatcher(S);$&&a.removeRoute($)}function A(){return a.getRoutes().map(S=>S.record)}function F(S){return!!a.getRecordMatcher(S)}function C(S,$){if($=Ds({},$||p.value),typeof S=="string"){const E=sr(n,S,$.path),D=a.resolve({path:E.path},$),O=e.createHref(E.fullPath);return Ds(E,D,{params:h(D.params),hash:Ve(E.hash),redirectedFrom:void 0,href:O})}let N;if(S.path!=null)N=Ds({},S,{path:sr(n,S.path,$.path).path});else{const E=Ds({},S.params);for(const D in E)E[D]==null&&delete E[D];N=Ds({},S,{params:k(E)}),$.params=k($.params)}const X=a.resolve(N,$),us=S.hash||"";X.params=B(h(X.params));const Ts=$7(i,Ds({},S,{hash:q7(us),path:X.path})),v=e.createHref(Ts);return Ds({fullPath:Ts,hash:us,query:i===vc?CA(S.query):S.query||{}},X,{redirectedFrom:void 0,href:v})}function b(S){return typeof S=="string"?sr(n,S,p.value.path):Ds({},S)}function m(S,$){if(c!==S)return ee(8,{from:$,to:S})}function f(S){return P(S)}function x(S){return f(Ds(b(S),{replace:!0}))}function V(S){const $=S.matched[S.matched.length-1];if($&&$.redirect){const{redirect:N}=$;let X=typeof N=="function"?N(S):N;return typeof X=="string"&&(X=X.includes("?")||X.includes("#")?X=b(X):{path:X},X.params={}),Ds({query:S.query,hash:S.hash,params:X.path!=null?{}:S.params},X)}}function P(S,$){const N=c=C(S),X=p.value,us=S.state,Ts=S.force,v=S.replace===!0,E=V(N);if(E)return P(Ds(b(E),{state:typeof E=="object"?Ds({},us,E.state):us,force:Ts,replace:v}),$||N);const D=N;D.redirectedFrom=$;let O;return!Ts&&Q7(i,X,N)&&(O=ee(16,{to:D,from:X}),Oa(X,X,!0,!1)),(O?Promise.resolve(O):T(D,X)).catch(w=>An(w)?An(w,2)?w:an(w):K(w,D,X)).then(w=>{if(w){if(An(w,2))return P(Ds({replace:v},b(w.to),{state:typeof w.to=="object"?Ds({},us,w.to.state):us,force:Ts}),$||D)}else w=R(D,X,!0,v,us);return H(D,X,w),w})}function W(S,$){const N=m(S,$);return N?Promise.reject(N):Promise.resolve()}function j(S){const $=yn.values().next().value;return $&&typeof $.runWithContext=="function"?$.runWithContext(S):S()}function T(S,$){let N;const[X,us,Ts]=LA(S,$);N=ar(X.reverse(),"beforeRouteLeave",S,$);for(const E of X)E.leaveGuards.forEach(D=>{N.push(Hn(D,S,$))});const v=W.bind(null,S,$);return N.push(v),Zs(N).then(()=>{N=[];for(const E of l.list())N.push(Hn(E,S,$));return N.push(v),Zs(N)}).then(()=>{N=ar(us,"beforeRouteUpdate",S,$);for(const E of us)E.updateGuards.forEach(D=>{N.push(Hn(D,S,$))});return N.push(v),Zs(N)}).then(()=>{N=[];for(const E of Ts)if(E.beforeEnter)if(Xa(E.beforeEnter))for(const D of E.beforeEnter)N.push(Hn(D,S,$));else N.push(Hn(E.beforeEnter,S,$));return N.push(v),Zs(N)}).then(()=>(S.matched.forEach(E=>E.enterCallbacks={}),N=ar(Ts,"beforeRouteEnter",S,$,j),N.push(v),Zs(N))).then(()=>{N=[];for(const E of t.list())N.push(Hn(E,S,$));return N.push(v),Zs(N)}).catch(E=>An(E,8)?E:Promise.reject(E))}function H(S,$,N){r.list().forEach(X=>j(()=>X(S,$,N)))}function R(S,$,N,X,us){const Ts=m(S,$);if(Ts)return Ts;const v=$===mn,E=Mi?history.state:{};N&&(X||v?e.replace(S.fullPath,Ds({scroll:v&&E&&E.scroll},us)):e.push(S.fullPath,us)),p.value=S,Oa(S,$,N,v),an()}let ns;function bs(){ns||(ns=e.listen((S,$,N)=>{if(!nn.listening)return;const X=C(S),us=V(X);if(us){P(Ds(us,{replace:!0}),X).catch(Te);return}c=X;const Ts=p.value;Mi&&aA(pc(Ts.fullPath,N.delta),Ft()),T(X,Ts).catch(v=>An(v,12)?v:An(v,2)?(P(v.to,X).then(E=>{An(E,20)&&!N.delta&&N.type===ze.pop&&e.go(-1,!1)}).catch(Te),Promise.reject()):(N.delta&&e.go(-N.delta,!1),K(v,X,Ts))).then(v=>{v=v||R(X,Ts,!1),v&&(N.delta&&!An(v,8)?e.go(-N.delta,!1):N.type===ze.pop&&An(v,20)&&e.go(-1,!1)),H(X,Ts,v)}).catch(Te)}))}let Js=me(),G=me(),es;function K(S,$,N){an(S);const X=G.list();return X.length?X.forEach(us=>us(S,$,N)):console.error(S),Promise.reject(S)}function Ss(){return es&&p.value!==mn?Promise.resolve():new Promise((S,$)=>{Js.add([S,$])})}function an(S){return es||(es=!S,bs(),Js.list().forEach(([$,N])=>S?N(S):$()),Js.reset()),S}function Oa(S,$,N,X){const{scrollBehavior:us}=s;if(!Mi||!us)return Promise.resolve();const Ts=!N&&nA(pc(S.fullPath,0))||(X||!N)&&history.state&&history.state.scroll||null;return ya().then(()=>us(S,$,Ts)).then(v=>v&&sA(v)).catch(v=>K(v,S,$))}const Ws=S=>e.go(S);let Ca;const yn=new Set,nn={currentRoute:p,listening:!0,addRoute:y,removeRoute:u,clearRoutes:a.clearRoutes,hasRoute:F,getRoutes:A,resolve:C,options:s,push:f,replace:x,go:Ws,back:()=>Ws(-1),forward:()=>Ws(1),beforeEach:l.add,beforeResolve:t.add,afterEach:r.add,onError:G.add,isReady:Ss,install(S){const $=this;S.component("RouterLink",fA),S.component("RouterView",wA),S.config.globalProperties.$router=$,Object.defineProperty(S.config.globalProperties,"$route",{enumerable:!0,get:()=>$a(p)}),Mi&&!Ca&&p.value===mn&&(Ca=!0,f(e.location).catch(us=>{}));const N={};for(const us in mn)Object.defineProperty(N,us,{get:()=>p.value[us],enumerable:!0});S.provide(Ct,$),S.provide(Mo,hB(N)),S.provide(Rr,p);const X=S.unmount;yn.add(S),S.unmount=function(){yn.delete(S),yn.size<1&&(c=mn,ns&&ns(),ns=null,p.value=mn,Ca=!1,es=!1),X()}}};function Zs(S){return S.reduce(($,N)=>$.then(()=>j(N)),Promise.resolve())}return nn}function LA(s,a){const n=[],i=[],e=[],l=Math.max(a.matched.length,s.matched.length);for(let t=0;t<l;t++){const r=a.matched[t];r&&(s.matched.find(c=>ie(c,r))?i.push(r):n.push(r));const p=s.matched[t];p&&(a.matched.find(c=>ie(c,p))||e.push(p))}return[n,i,e]}function Fa(){return Fs(Ct)}function Ta(s){return Fs(Mo)}var jo=Symbol(""),Za=()=>{const s=Fs(jo);if(!s)throw new Error("useClientData() is called without provider.");return s},TA=()=>Za().pageComponent,gs=()=>Za().pageData,ks=()=>Za().pageFrontmatter,OA=()=>Za().pageHead,gt=()=>Za().pageLang,JA=()=>Za().pageLayout,za=()=>Za().routeLocale,IA=()=>Za().routePath,PA=()=>Za().routes,Lk=()=>Za().siteData,bt=()=>Za().siteLocaleData,RA=Symbol(""),jr=ms(S7),Ki=ms(w7),Tk=(s,a)=>{const n=A7(s,a);if(Ki.value[n])return n;const i=encodeURI(n);if(Ki.value[i])return i;const e=jr.value[n]||jr.value[i];return e||n},kn=(s,a)=>{const{pathname:n,hashAndQueries:i}=Ak(s),e=Tk(n,a),l=e+i;return Ki.value[e]?{...Ki.value[e],path:l,notFound:!1}:{...Ki.value["/404.html"],path:l,notFound:!0}},MA=(s,a)=>{const{pathname:n,hashAndQueries:i}=Ak(s);return Tk(n,a)+i},jA=s=>{if(!(s.metaKey||s.altKey||s.ctrlKey||s.shiftKey)&&!s.defaultPrevented&&!(s.button!==void 0&&s.button!==0)){if(s.currentTarget){const a=s.currentTarget.getAttribute("target");if(a!=null&&a.match(/\b_blank\b/i))return}return s.preventDefault(),!0}},Qs=L({name:"RouteLink",props:{to:{type:String,required:!0},active:Boolean,activeClass:{type:String,default:"route-link-active"}},slots:Object,setup(s,{slots:a}){const n=Fa(),i=Ta(),e=g(()=>s.to.startsWith("#")||s.to.startsWith("?")?s.to:`/${MA(s.to,i.path).substring(1)}`);return()=>{var l;return d("a",{class:["route-link",{[s.activeClass]:s.active}],href:e.value,onClick:(t={})=>{jA(t)&&n.push(s.to).catch()}},(l=a.default)==null?void 0:l.call(a))}}}),qA=L({name:"AutoLink",props:{config:{type:Object,required:!0}},slots:Object,setup(s,{slots:a}){const n=Di(s,"config"),i=Ta(),e=Lk(),l=g(()=>tl(n.value.link)),t=g(()=>n.value.target||(l.value?"_blank":void 0)),r=g(()=>t.value==="_blank"),p=g(()=>!l.value&&!r.value),c=g(()=>n.value.rel||(r.value?"noopener noreferrer":null)),B=g(()=>n.value.ariaLabel??n.value.text),k=g(()=>{if(n.value.exact)return!1;const y=Object.keys(e.value.locales);return y.length?y.every(u=>u!==n.value.link):n.value.link!=="/"}),h=g(()=>p.value?n.value.activeMatch?(n.value.activeMatch instanceof RegExp?n.value.activeMatch:new RegExp(n.value.activeMatch,"u")).test(i.path):k.value?i.path.startsWith(n.value.link):i.path===n.value.link:!1);return()=>{const{before:y,after:u,default:A}=a,F=(A==null?void 0:A(n.value))||[y==null?void 0:y(n.value),n.value.text,u==null?void 0:u(n.value)];return p.value?d(Qs,{class:"auto-link",to:n.value.link,active:h.value,"aria-label":B.value},()=>F):d("a",{class:"auto-link external-link",href:n.value.link,"aria-label":B.value,rel:c.value,target:t.value},F)}}}),ft=L({name:"ClientOnly",setup(s,a){const n=M(!1);return as(()=>{n.value=!0}),()=>{var i,e;return n.value?(e=(i=a.slots).default)==null?void 0:e.call(i):null}}}),Dt=L({name:"Content",props:{path:{type:String,required:!1,default:""}},setup(s){const a=TA(),n=g(()=>{if(!s.path)return a.value;const i=kn(s.path);return SB(()=>i.loader().then(({comp:e})=>e))});return()=>d(n.value)}}),VA="Layout",zA="en-US",pi=te({resolveLayouts:s=>s.reduce((a,n)=>({...a,...n.layouts}),{}),resolvePageHead:(s,a,n)=>{const i=Os(a.description)?a.description:n.description,e=[...Array.isArray(a.head)?a.head:[],...n.head,["title",{},s],["meta",{name:"description",content:i}]];return g7(e)},resolvePageHeadTitle:(s,a)=>[s.title,a.title].filter(n=>!!n).join(" | "),resolvePageLang:(s,a)=>s.lang||a.lang||zA,resolvePageLayout:(s,a)=>{const n=Os(s.frontmatter.layout)?s.frontmatter.layout:VA;if(!a[n])throw new Error(`[vuepress] Cannot resolve layout: ${n}`);return a[n]},resolveRouteLocale:(s,a)=>v7(s,decodeURI(a)),resolveSiteLocaleData:({base:s,locales:a,...n},i)=>{var e;return{...n,...a[i],head:[...((e=a[i])==null?void 0:e.head)??[],...n.head??[]]}}}),zs=(s={})=>s,_s=s=>ni(s)?s:`/${Po(s)}`;const NA=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),ii=s=>{const a=za();return g(()=>s[a.value]??{})};var _a=Uint8Array,Vi=Uint16Array,HA=Int32Array,Ok=new _a([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),Jk=new _a([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),UA=new _a([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),Ik=function(s,a){for(var n=new Vi(31),i=0;i<31;++i)n[i]=a+=1<<s[i-1];for(var e=new HA(n[30]),i=1;i<30;++i)for(var l=n[i];l<n[i+1];++l)e[l]=l-n[i]<<5|i;return{b:n,r:e}},Pk=Ik(Ok,2),Rk=Pk.b,$A=Pk.r;Rk[28]=258,$A[258]=28;var QA=Ik(Jk,0),WA=QA.b,qr=new Vi(32768);for(var Ms=0;Ms<32768;++Ms){var On=(Ms&43690)>>1|(Ms&21845)<<1;On=(On&52428)>>2|(On&13107)<<2,On=(On&61680)>>4|(On&3855)<<4,qr[Ms]=((On&65280)>>8|(On&255)<<8)>>1}var Je=function(s,a,n){for(var i=s.length,e=0,l=new Vi(a);e<i;++e)s[e]&&++l[s[e]-1];var t=new Vi(a);for(e=1;e<a;++e)t[e]=t[e-1]+l[e-1]<<1;var r;if(n){r=new Vi(1<<a);var p=15-a;for(e=0;e<i;++e)if(s[e])for(var c=e<<4|s[e],B=a-s[e],k=t[s[e]-1]++<<B,h=k|(1<<B)-1;k<=h;++k)r[qr[k]>>p]=c}else for(r=new Vi(i),e=0;e<i;++e)s[e]&&(r[e]=qr[t[s[e]-1]++]>>15-s[e]);return r},rl=new _a(288);for(var Ms=0;Ms<144;++Ms)rl[Ms]=8;for(var Ms=144;Ms<256;++Ms)rl[Ms]=9;for(var Ms=256;Ms<280;++Ms)rl[Ms]=7;for(var Ms=280;Ms<288;++Ms)rl[Ms]=8;var Mk=new _a(32);for(var Ms=0;Ms<32;++Ms)Mk[Ms]=5;var GA=Je(rl,9,1),KA=Je(Mk,5,1),nr=function(s){for(var a=s[0],n=1;n<s.length;++n)s[n]>a&&(a=s[n]);return a},Ha=function(s,a,n){var i=a/8|0;return(s[i]|s[i+1]<<8)>>(a&7)&n},ir=function(s,a){var n=a/8|0;return(s[n]|s[n+1]<<8|s[n+2]<<16)>>(a&7)},XA=function(s){return(s+7)/8|0},jk=function(s,a,n){return(a==null||a<0)&&(a=0),(n==null||n>s.length)&&(n=s.length),new _a(s.subarray(a,n))},YA=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],Pa=function(s,a,n){var i=new Error(a||YA[s]);if(i.code=s,Error.captureStackTrace&&Error.captureStackTrace(i,Pa),!n)throw i;return i},ZA=function(s,a,n,i){var e=s.length,l=0;if(!e||a.f&&!a.l)return n||new _a(0);var t=!n,r=t||a.i!=2,p=a.i;t&&(n=new _a(e*3));var c=function(us){var Ts=n.length;if(us>Ts){var v=new _a(Math.max(Ts*2,us));v.set(n),n=v}},B=a.f||0,k=a.p||0,h=a.b||0,y=a.l,u=a.d,A=a.m,F=a.n,C=e*8;do{if(!y){B=Ha(s,k,1);var b=Ha(s,k+1,3);if(k+=3,b)if(b==1)y=GA,u=KA,A=9,F=5;else if(b==2){var V=Ha(s,k,31)+257,P=Ha(s,k+10,15)+4,W=V+Ha(s,k+5,31)+1;k+=14;for(var j=new _a(W),T=new _a(19),H=0;H<P;++H)T[UA[H]]=Ha(s,k+H*3,7);k+=P*3;for(var R=nr(T),ns=(1<<R)-1,bs=Je(T,R,1),H=0;H<W;){var Js=bs[Ha(s,k,ns)];k+=Js&15;var m=Js>>4;if(m<16)j[H++]=m;else{var G=0,es=0;for(m==16?(es=3+Ha(s,k,3),k+=2,G=j[H-1]):m==17?(es=3+Ha(s,k,7),k+=3):m==18&&(es=11+Ha(s,k,127),k+=7);es--;)j[H++]=G}}var K=j.subarray(0,V),Ss=j.subarray(V);A=nr(K),F=nr(Ss),y=Je(K,A,1),u=Je(Ss,F,1)}else Pa(1);else{var m=XA(k)+4,f=s[m-4]|s[m-3]<<8,x=m+f;if(x>e){p&&Pa(0);break}r&&c(h+f),n.set(s.subarray(m,x),h),a.b=h+=f,a.p=k=x*8,a.f=B;continue}if(k>C){p&&Pa(0);break}}r&&c(h+131072);for(var an=(1<<A)-1,Oa=(1<<F)-1,Ws=k;;Ws=k){var G=y[ir(s,k)&an],Ca=G>>4;if(k+=G&15,k>C){p&&Pa(0);break}if(G||Pa(2),Ca<256)n[h++]=Ca;else if(Ca==256){Ws=k,y=null;break}else{var yn=Ca-254;if(Ca>264){var H=Ca-257,nn=Ok[H];yn=Ha(s,k,(1<<nn)-1)+Rk[H],k+=nn}var Zs=u[ir(s,k)&Oa],S=Zs>>4;Zs||Pa(3),k+=Zs&15;var Ss=WA[S];if(S>3){var nn=Jk[S];Ss+=ir(s,k)&(1<<nn)-1,k+=nn}if(k>C){p&&Pa(0);break}r&&c(h+131072);var $=h+yn;if(h<Ss){var N=l-Ss,X=Math.min(Ss,$);for(N+h<0&&Pa(3);h<X;++h)n[h]=i[N+h]}for(;h<$;++h)n[h]=n[h-Ss]}}a.l=y,a.p=Ws,a.b=h,a.f=B,y&&(B=1,a.m=A,a.d=u,a.n=F)}while(!B);return h!=n.length&&t?jk(n,0,h):n.subarray(0,h)},s0=new _a(0),a0=function(s,a){return((s[0]&15)!=8||s[0]>>4>7||(s[0]<<8|s[1])%31)&&Pa(6,"invalid zlib data"),(s[1]>>5&1)==+!a&&Pa(6,"invalid zlib data: "+(s[1]&32?"need":"unexpected")+" dictionary"),(s[1]>>3&4)+2};function n0(s,a){return ZA(s.subarray(a0(s,a),-4),{i:2},a,a)}var Vr=typeof TextDecoder<"u"&&new TextDecoder,i0=0;try{Vr.decode(s0,{stream:!0}),i0=1}catch{}var e0=function(s){for(var a="",n=0;;){var i=s[n++],e=(i>127)+(i>223)+(i>239);if(n+e>s.length)return{s:a,r:jk(s,n-1)};e?e==3?(i=((i&15)<<18|(s[n++]&63)<<12|(s[n++]&63)<<6|s[n++]&63)-65536,a+=String.fromCharCode(55296|i>>10,56320|i&1023)):e&1?a+=String.fromCharCode((i&31)<<6|s[n++]&63):a+=String.fromCharCode((i&15)<<12|(s[n++]&63)<<6|s[n++]&63):a+=String.fromCharCode(i)}};function l0(s,a){{for(var n=new _a(s.length),i=0;i<s.length;++i)n[i]=s.charCodeAt(i);return n}for(var e=s.length,i=0;i<e;++i);}function t0(s,a){var n;if(Vr)return Vr.decode(s);var i=e0(s),e=i.s,n=i.r;return n.length&&Pa(8),e}const Kn=s=>{const a=atob(s);return t0(n0(l0(a)))},xa=(s,a)=>{var i;const n=(i=(a==null?void 0:a._instance)||ai())==null?void 0:i.appContext.components;return n?s in n||ha(s)in n||Ye(ha(s))in n:!1},qo=s=>new Promise(a=>setTimeout(a,s)),qk=s=>typeof s<"u",er=s=>typeof s=="number",et=Array.isArray,Ne=(s,a)=>Os(s)&&s.startsWith(a),r0=(s,a)=>Os(s)&&s.endsWith(a),ei=Object.entries,o0=Object.fromEntries,Va=Object.keys,zr=(s,...a)=>{if(a.length===0)return s;const n=a.shift()||null;return n&&ei(n).forEach(([i,e])=>{i==="__proto__"||i==="constructor"||(Bn(s[i])&&Bn(e)?zr(s[i],e):et(e)?s[i]=[...e]:Bn(e)?s[i]={...e}:s[i]=n[i])}),zr(s,...a)},Vo=s=>{if(s){if(typeof s=="number")return new Date(s);const a=Date.parse(s.toString());if(!Number.isNaN(a))return new Date(a)}return null},_t=s=>Ne(s,"/");function li(s){return Zd()?(zy(s),!0):!1}function ka(s){return typeof s=="function"?s():$a(s)}const ol=typeof window<"u"&&typeof document<"u";typeof WorkerGlobalScope<"u"&&globalThis instanceof WorkerGlobalScope;const p0=s=>s!=null,c0=Object.prototype.toString,d0=s=>c0.call(s)==="[object Object]",Dn=()=>{},Nr=B0();function B0(){var s,a;return ol&&((s=window==null?void 0:window.navigator)==null?void 0:s.userAgent)&&(/iP(?:ad|hone|od)/.test(window.navigator.userAgent)||((a=window==null?void 0:window.navigator)==null?void 0:a.maxTouchPoints)>2&&/iPad|Macintosh/.test(window==null?void 0:window.navigator.userAgent))}function zo(s,a){function n(...i){return new Promise((e,l)=>{Promise.resolve(s(()=>a.apply(this,i),{fn:a,thisArg:this,args:i})).then(e).catch(l)})}return n}const Vk=s=>s();function k0(s,a={}){let n,i,e=Dn;const l=r=>{clearTimeout(r),e(),e=Dn};return r=>{const p=ka(s),c=ka(a.maxWait);return n&&l(n),p<=0||c!==void 0&&c<=0?(i&&(l(i),i=null),Promise.resolve(r())):new Promise((B,k)=>{e=a.rejectOnCancel?k:B,c&&!i&&(i=setTimeout(()=>{n&&l(n),i=null,B(r())},c)),n=setTimeout(()=>{i&&l(i),i=null,B(r())},p)})}}function h0(...s){let a=0,n,i=!0,e=Dn,l,t,r,p,c;!Ns(s[0])&&typeof s[0]=="object"?{delay:t,trailing:r=!0,leading:p=!0,rejectOnCancel:c=!1}=s[0]:[t,r=!0,p=!0,c=!1]=s;const B=()=>{n&&(clearTimeout(n),n=void 0,e(),e=Dn)};return h=>{const y=ka(t),u=Date.now()-a,A=()=>l=h();return B(),y<=0?(a=Date.now(),A()):(u>y&&(p||!i)?(a=Date.now(),A()):r&&(l=new Promise((F,C)=>{e=c?C:F,n=setTimeout(()=>{a=Date.now(),i=!0,F(A()),B()},Math.max(0,y-u))})),!p&&!n&&(n=setTimeout(()=>i=!0,y)),i=!1,l)}}function y0(s=Vk){const a=M(!0);function n(){a.value=!1}function i(){a.value=!0}const e=(...l)=>{a.value&&s(...l)};return{isActive:Zn(a),pause:n,resume:i,eventFilter:e}}function u0(s){let a;function n(){return a||(a=s()),a}return n.reset=async()=>{const i=a;a=void 0,i&&await i},n}function A0(s){return ai()}function v0(...s){if(s.length!==1)return Di(...s);const a=s[0];return typeof a=="function"?Zn(Do(()=>({get:a,set:Dn}))):M(a)}function No(s,a=200,n={}){return zo(k0(a,n),s)}function m0(s,a=200,n=!1,i=!0,e=!1){return zo(h0(a,n,i,e),s)}function E0(s,a,n={}){const{eventFilter:i=Vk,...e}=n;return os(s,zo(i,a),e)}function F0(s,a,n={}){const{eventFilter:i,...e}=n,{eventFilter:l,pause:t,resume:r,isActive:p}=y0(i);return{stop:E0(s,a,{...e,eventFilter:l}),pause:t,resume:r,isActive:p}}function St(s,a=!0,n){A0()?as(s,n):a?s():ya(s)}function C0(s,a,n={}){const{immediate:i=!0}=n,e=M(!1);let l=null;function t(){l&&(clearTimeout(l),l=null)}function r(){e.value=!1,t()}function p(...c){t(),e.value=!0,l=setTimeout(()=>{e.value=!1,l=null,s(...c)},ka(a))}return i&&(e.value=!0,ol&&p()),li(r),{isPending:Zn(e),start:p,stop:r}}function He(s=!1,a={}){const{truthyValue:n=!0,falsyValue:i=!1}=a,e=Ns(s),l=M(s);function t(r){if(arguments.length)return l.value=r,l.value;{const p=ka(n);return l.value=l.value===p?ka(i):p,l.value}}return e?t:[l,t]}function Aa(s){var a;const n=ka(s);return(a=n==null?void 0:n.$el)!=null?a:n}const Ya=ol?window:void 0,zk=ol?window.document:void 0,Nk=ol?window.navigator:void 0;function xs(...s){let a,n,i,e;if(typeof s[0]=="string"||Array.isArray(s[0])?([n,i,e]=s,a=Ya):[a,n,i,e]=s,!a)return Dn;Array.isArray(n)||(n=[n]),Array.isArray(i)||(i=[i]);const l=[],t=()=>{l.forEach(B=>B()),l.length=0},r=(B,k,h,y)=>(B.addEventListener(k,h,y),()=>B.removeEventListener(k,h,y)),p=os(()=>[Aa(a),ka(e)],([B,k])=>{if(t(),!B)return;const h=d0(k)?{...k}:k;l.push(...n.flatMap(y=>i.map(u=>r(B,y,u,h))))},{immediate:!0,flush:"post"}),c=()=>{p(),t()};return li(c),c}let gc=!1;function g0(s,a,n={}){const{window:i=Ya,ignore:e=[],capture:l=!0,detectIframe:t=!1}=n;if(!i)return Dn;Nr&&!gc&&(gc=!0,Array.from(i.document.body.children).forEach(h=>h.addEventListener("click",Dn)),i.document.documentElement.addEventListener("click",Dn));let r=!0;const p=h=>e.some(y=>{if(typeof y=="string")return Array.from(i.document.querySelectorAll(y)).some(u=>u===h.target||h.composedPath().includes(u));{const u=Aa(y);return u&&(h.target===u||h.composedPath().includes(u))}}),B=[xs(i,"click",h=>{const y=Aa(s);if(!(!y||y===h.target||h.composedPath().includes(y))){if(h.detail===0&&(r=!p(h)),!r){r=!0;return}a(h)}},{passive:!0,capture:l}),xs(i,"pointerdown",h=>{const y=Aa(s);r=!p(h)&&!!(y&&!h.composedPath().includes(y))},{passive:!0}),t&&xs(i,"blur",h=>{setTimeout(()=>{var y;const u=Aa(s);((y=i.document.activeElement)==null?void 0:y.tagName)==="IFRAME"&&!(u!=null&&u.contains(i.document.activeElement))&&a(h)},0)})].filter(Boolean);return()=>B.forEach(h=>h())}function b0(){const s=M(!1),a=ai();return a&&as(()=>{s.value=!0},a),s}function re(s){const a=b0();return g(()=>(a.value,!!s()))}function Ho(s,a,n={}){const{window:i=Ya,...e}=n;let l;const t=re(()=>i&&"MutationObserver"in i),r=()=>{l&&(l.disconnect(),l=void 0)},p=g(()=>{const h=ka(s),y=(Array.isArray(h)?h:[h]).map(Aa).filter(p0);return new Set(y)}),c=os(()=>p.value,h=>{r(),t.value&&h.size&&(l=new MutationObserver(a),h.forEach(y=>l.observe(y,e)))},{immediate:!0,flush:"post"}),B=()=>l==null?void 0:l.takeRecords(),k=()=>{r(),c()};return li(k),{isSupported:t,stop:k,takeRecords:B}}function Uo(s,a={}){const{window:n=Ya}=a,i=re(()=>n&&"matchMedia"in n&&typeof n.matchMedia=="function");let e;const l=M(!1),t=c=>{l.value=c.matches},r=()=>{e&&("removeEventListener"in e?e.removeEventListener("change",t):e.removeListener(t))},p=To(()=>{i.value&&(r(),e=n.matchMedia(ka(s)),"addEventListener"in e?e.addEventListener("change",t):e.addListener(t),l.value=e.matches)});return li(()=>{p(),r(),e=void 0}),l}function bc(s,a={}){const{controls:n=!1,navigator:i=Nk}=a,e=re(()=>i&&"permissions"in i);let l;const t=typeof s=="string"?{name:s}:s,r=M(),p=()=>{l&&(r.value=l.state)},c=u0(async()=>{if(e.value){if(!l)try{l=await i.permissions.query(t),xs(l,"change",p),p()}catch{r.value="prompt"}return l}});return c(),n?{state:r,isSupported:e,query:c}:r}function f0(s={}){const{navigator:a=Nk,read:n=!1,source:i,copiedDuring:e=1500,legacy:l=!1}=s,t=re(()=>a&&"clipboard"in a),r=bc("clipboard-read"),p=bc("clipboard-write"),c=g(()=>t.value||l),B=M(""),k=M(!1),h=C0(()=>k.value=!1,e);function y(){t.value&&C(r.value)?a.clipboard.readText().then(b=>{B.value=b}):B.value=F()}c.value&&n&&xs(["copy","cut"],y);async function u(b=ka(i)){c.value&&b!=null&&(t.value&&C(p.value)?await a.clipboard.writeText(b):A(b),B.value=b,k.value=!0,h.start())}function A(b){const m=document.createElement("textarea");m.value=b??"",m.style.position="absolute",m.style.opacity="0",document.body.appendChild(m),m.select(),document.execCommand("copy"),m.remove()}function F(){var b,m,f;return(f=(m=(b=document==null?void 0:document.getSelection)==null?void 0:b.call(document))==null?void 0:m.toString())!=null?f:""}function C(b){return b==="granted"||b==="prompt"}return{isSupported:c,text:B,copied:k,copy:u}}const Dl=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},_l="__vueuse_ssr_handlers__",D0=_0();function _0(){return _l in Dl||(Dl[_l]=Dl[_l]||{}),Dl[_l]}function S0(s,a){return D0[s]||a}function w0(s){return s==null?"any":s instanceof Set?"set":s instanceof Map?"map":s instanceof Date?"date":typeof s=="boolean"?"boolean":typeof s=="string"?"string":typeof s=="object"?"object":Number.isNaN(s)?"any":"number"}const x0={boolean:{read:s=>s==="true",write:s=>String(s)},object:{read:s=>JSON.parse(s),write:s=>JSON.stringify(s)},number:{read:s=>Number.parseFloat(s),write:s=>String(s)},any:{read:s=>s,write:s=>String(s)},string:{read:s=>s,write:s=>String(s)},map:{read:s=>new Map(JSON.parse(s)),write:s=>JSON.stringify(Array.from(s.entries()))},set:{read:s=>new Set(JSON.parse(s)),write:s=>JSON.stringify(Array.from(s))},date:{read:s=>new Date(s),write:s=>s.toISOString()}},fc="vueuse-storage";function oe(s,a,n,i={}){var e;const{flush:l="pre",deep:t=!0,listenToStorageChanges:r=!0,writeDefaults:p=!0,mergeDefaults:c=!1,shallow:B,window:k=Ya,eventFilter:h,onError:y=T=>{console.error(T)},initOnMounted:u}=i,A=(B?ms:M)(typeof a=="function"?a():a);if(!n)try{n=S0("getDefaultStorage",()=>{var T;return(T=Ya)==null?void 0:T.localStorage})()}catch(T){y(T)}if(!n)return A;const F=ka(a),C=w0(F),b=(e=i.serializer)!=null?e:x0[C],{pause:m,resume:f}=F0(A,()=>V(A.value),{flush:l,deep:t,eventFilter:h});k&&r&&St(()=>{xs(k,"storage",W),xs(k,fc,j),u&&W()}),u||W();function x(T,H){k&&k.dispatchEvent(new CustomEvent(fc,{detail:{key:s,oldValue:T,newValue:H,storageArea:n}}))}function V(T){try{const H=n.getItem(s);if(T==null)x(H,null),n.removeItem(s);else{const R=b.write(T);H!==R&&(n.setItem(s,R),x(H,R))}}catch(H){y(H)}}function P(T){const H=T?T.newValue:n.getItem(s);if(H==null)return p&&F!=null&&n.setItem(s,b.write(F)),F;if(!T&&c){const R=b.read(H);return typeof c=="function"?c(R,F):C==="object"&&!Array.isArray(R)?{...F,...R}:R}else return typeof H!="string"?H:b.read(H)}function W(T){if(!(T&&T.storageArea!==n)){if(T&&T.key==null){A.value=F;return}if(!(T&&T.key!==s)){m();try{(T==null?void 0:T.newValue)!==b.write(A.value)&&(A.value=P(T))}catch(H){y(H)}finally{T?ya(f):f()}}}}function j(T){W(T.detail)}return A}function L0(s){return Uo("(prefers-color-scheme: dark)",s)}function T0(s,a,n={}){const{window:i=Ya,...e}=n;let l;const t=re(()=>i&&"ResizeObserver"in i),r=()=>{l&&(l.disconnect(),l=void 0)},p=g(()=>Array.isArray(s)?s.map(k=>Aa(k)):[Aa(s)]),c=os(p,k=>{if(r(),t.value&&i){l=new ResizeObserver(a);for(const h of k)h&&l.observe(h,e)}},{immediate:!0,flush:"post"}),B=()=>{r(),c()};return li(B),{isSupported:t,stop:B}}function O0(s,a={width:0,height:0},n={}){const{window:i=Ya,box:e="content-box"}=n,l=g(()=>{var k,h;return(h=(k=Aa(s))==null?void 0:k.namespaceURI)==null?void 0:h.includes("svg")}),t=M(a.width),r=M(a.height),{stop:p}=T0(s,([k])=>{const h=e==="border-box"?k.borderBoxSize:e==="content-box"?k.contentBoxSize:k.devicePixelContentBoxSize;if(i&&l.value){const y=Aa(s);if(y){const u=y.getBoundingClientRect();t.value=u.width,r.value=u.height}}else if(h){const y=Array.isArray(h)?h:[h];t.value=y.reduce((u,{inlineSize:A})=>u+A,0),r.value=y.reduce((u,{blockSize:A})=>u+A,0)}else t.value=k.contentRect.width,r.value=k.contentRect.height},n);St(()=>{const k=Aa(s);k&&(t.value="offsetWidth"in k?k.offsetWidth:a.width,r.value="offsetHeight"in k?k.offsetHeight:a.height)});const c=os(()=>Aa(s),k=>{t.value=k?a.width:0,r.value=k?a.height:0});function B(){p(),c()}return{width:t,height:r,stop:B}}const Dc=["fullscreenchange","webkitfullscreenchange","webkitendfullscreen","mozfullscreenchange","MSFullscreenChange"];function $o(s,a={}){const{document:n=zk,autoExit:i=!1}=a,e=g(()=>{var C;return(C=Aa(s))!=null?C:n==null?void 0:n.querySelector("html")}),l=M(!1),t=g(()=>["requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","webkitEnterFullScreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen"].find(C=>n&&C in n||e.value&&C in e.value)),r=g(()=>["exitFullscreen","webkitExitFullscreen","webkitExitFullScreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen"].find(C=>n&&C in n||e.value&&C in e.value)),p=g(()=>["fullScreen","webkitIsFullScreen","webkitDisplayingFullscreen","mozFullScreen","msFullscreenElement"].find(C=>n&&C in n||e.value&&C in e.value)),c=["fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement"].find(C=>n&&C in n),B=re(()=>e.value&&n&&t.value!==void 0&&r.value!==void 0&&p.value!==void 0),k=()=>c?(n==null?void 0:n[c])===e.value:!1,h=()=>{if(p.value){if(n&&n[p.value]!=null)return n[p.value];{const C=e.value;if((C==null?void 0:C[p.value])!=null)return!!C[p.value]}}return!1};async function y(){if(!(!B.value||!l.value)){if(r.value)if((n==null?void 0:n[r.value])!=null)await n[r.value]();else{const C=e.value;(C==null?void 0:C[r.value])!=null&&await C[r.value]()}l.value=!1}}async function u(){if(!B.value||l.value)return;h()&&await y();const C=e.value;t.value&&(C==null?void 0:C[t.value])!=null&&(await C[t.value](),l.value=!0)}async function A(){await(l.value?y():u())}const F=()=>{const C=h();(!C||C&&k())&&(l.value=C)};return xs(n,Dc,F,!1),xs(()=>Aa(e),Dc,F,!1),i&&li(y),{isSupported:B,isFullscreen:l,enter:u,exit:y,toggle:A}}function lr(s){return typeof Window<"u"&&s instanceof Window?s.document.documentElement:typeof Document<"u"&&s instanceof Document?s.documentElement:s}function Hk(s){const a=window.getComputedStyle(s);if(a.overflowX==="scroll"||a.overflowY==="scroll"||a.overflowX==="auto"&&s.clientWidth<s.scrollWidth||a.overflowY==="auto"&&s.clientHeight<s.scrollHeight)return!0;{const n=s.parentNode;return!n||n.tagName==="BODY"?!1:Hk(n)}}function J0(s){const a=s||window.event,n=a.target;return Hk(n)?!1:a.touches.length>1?!0:(a.preventDefault&&a.preventDefault(),!1)}const tr=new WeakMap;function Uk(s,a=!1){const n=M(a);let i=null,e="";os(v0(s),r=>{const p=lr(ka(r));if(p){const c=p;if(tr.get(c)||tr.set(c,c.style.overflow),c.style.overflow!=="hidden"&&(e=c.style.overflow),c.style.overflow==="hidden")return n.value=!0;if(n.value)return c.style.overflow="hidden"}},{immediate:!0});const l=()=>{const r=lr(ka(s));!r||n.value||(Nr&&(i=xs(r,"touchmove",p=>{J0(p)},{passive:!1})),r.style.overflow="hidden",n.value=!0)},t=()=>{const r=lr(ka(s));!r||!n.value||(Nr&&(i==null||i()),r.style.overflow=e,tr.delete(r),n.value=!1)};return li(t),g({get(){return n.value},set(r){r?l():t()}})}function $k(s,a,n={}){const{window:i=Ya}=n;return oe(s,a,i==null?void 0:i.sessionStorage,n)}let I0=0;function _c(s,a={}){const n=M(!1),{document:i=zk,immediate:e=!0,manual:l=!1,id:t=`vueuse_styletag_${++I0}`}=a,r=M(s);let p=()=>{};const c=()=>{if(!i)return;const k=i.getElementById(t)||i.createElement("style");k.isConnected||(k.id=t,a.media&&(k.media=a.media),i.head.appendChild(k)),!n.value&&(p=os(r,h=>{k.textContent=h},{immediate:!0}),n.value=!0)},B=()=>{!i||!n.value||(p(),i.head.removeChild(i.getElementById(t)),n.value=!1)};return e&&!l&&St(c),l||li(B),{id:t,css:r,unload:B,load:c,isLoaded:Zn(n)}}function P0(s={}){const{window:a=Ya,behavior:n="auto"}=s;if(!a)return{x:M(0),y:M(0)};const i=M(a.scrollX),e=M(a.scrollY),l=g({get(){return i.value},set(r){scrollTo({left:r,behavior:n})}}),t=g({get(){return e.value},set(r){scrollTo({top:r,behavior:n})}});return xs(a,"scroll",()=>{i.value=a.scrollX,e.value=a.scrollY},{capture:!1,passive:!0}),{x:l,y:t}}function R0(s={}){const{window:a=Ya,initialWidth:n=Number.POSITIVE_INFINITY,initialHeight:i=Number.POSITIVE_INFINITY,listenOrientation:e=!0,includeScrollbar:l=!0}=s,t=M(n),r=M(i),p=()=>{a&&(l?(t.value=a.innerWidth,r.value=a.innerHeight):(t.value=a.document.documentElement.clientWidth,r.value=a.document.documentElement.clientHeight))};if(p(),St(p),xs("resize",p,{passive:!0}),e){const c=Uo("(orientation: portrait)");os(c,()=>p())}return{width:t,height:r}}var M0=L({name:"FontIcon",props:{icon:{type:String,default:""},color:{type:String,default:""},size:{type:[String,Number],default:""}},setup(s){const a=g(()=>{const i=["font-icon icon"],e=`iconfont icon-${s.icon}`;return i.push(e),i}),n=g(()=>{const i={};return s.color&&(i.color=s.color),s.size&&(i["font-size"]=Number.isNaN(Number(s.size))?s.size:`${s.size}px`),Va(i).length?i:null});return()=>s.icon?d("span",{key:s.icon,class:a.value,style:n.value}):null}});const hs=({name:s="",color:a="currentColor",ariaLabel:n},{attrs:i,slots:e})=>{var l;return d("svg",{xmlns:"http://www.w3.org/2000/svg",class:["icon",`${s}-icon`],viewBox:"0 0 1024 1024",fill:a,"aria-label":n??`${s} icon`,...i},(l=e.default)==null?void 0:l.call(e))};hs.displayName="IconBase";const wn=({size:s=48,stroke:a=4,wrapper:n=!0,height:i=2*s})=>{const e=d("svg",{xmlns:"http://www.w3.org/2000/svg",width:s,height:s,preserveAspectRatio:"xMidYMid",viewBox:"25 25 50 50"},[d("animateTransform",{attributeName:"transform",type:"rotate",dur:"2s",keyTimes:"0;1",repeatCount:"indefinite",values:"0;360"}),d("circle",{cx:"50",cy:"50",r:"20",fill:"none",stroke:"currentColor","stroke-width":a,"stroke-linecap":"round"},[d("animate",{attributeName:"stroke-dasharray",dur:"1.5s",keyTimes:"0;0.5;1",repeatCount:"indefinite",values:"1,200;90,200;1,200"}),d("animate",{attributeName:"stroke-dashoffset",dur:"1.5s",keyTimes:"0;0.5;1",repeatCount:"indefinite",values:"0;-35px;-125px"})])]);return n?d("div",{class:"loading-icon-wrapper",style:`display:flex;align-items:center;justify-content:center;height:${i}px`},e):e};wn.displayName="LoadingIcon";const wt=(s,{slots:a})=>{var n;return(n=a.default)==null?void 0:n.call(a)},j0=s=>ni(s)?s:`https://github.com/${s}`,Qo=(s="")=>!ni(s)||/github\.com/.test(s)?"GitHub":/bitbucket\.org/.test(s)?"Bitbucket":/gitlab\.com/.test(s)?"GitLab":/gitee\.com/.test(s)?"Gitee":null,Qk=()=>d(hs,{name:"github"},()=>d("path",{d:"M511.957 21.333C241.024 21.333 21.333 240.981 21.333 512c0 216.832 140.544 400.725 335.574 465.664 24.49 4.395 32.256-10.07 32.256-23.083 0-11.69.256-44.245 0-85.205-136.448 29.61-164.736-64.64-164.736-64.64-22.315-56.704-54.4-71.765-54.4-71.765-44.587-30.464 3.285-29.824 3.285-29.824 49.195 3.413 75.179 50.517 75.179 50.517 43.776 75.008 114.816 53.333 142.762 40.79 4.523-31.66 17.152-53.377 31.19-65.537-108.971-12.458-223.488-54.485-223.488-242.602 0-53.547 19.114-97.323 50.517-131.67-5.035-12.33-21.93-62.293 4.779-129.834 0 0 41.258-13.184 134.912 50.346a469.803 469.803 0 0 1 122.88-16.554c41.642.213 83.626 5.632 122.88 16.554 93.653-63.488 134.784-50.346 134.784-50.346 26.752 67.541 9.898 117.504 4.864 129.834 31.402 34.347 50.474 78.123 50.474 131.67 0 188.586-114.73 230.016-224.042 242.09 17.578 15.232 33.578 44.672 33.578 90.454v135.85c0 13.142 7.936 27.606 32.854 22.87C862.25 912.597 1002.667 728.747 1002.667 512c0-271.019-219.648-490.667-490.71-490.667z"}));Qk.displayName="GitHubIcon";const Wk=()=>d(hs,{name:"gitee"},()=>d("path",{d:"M512 992C246.92 992 32 777.08 32 512S246.92 32 512 32s480 214.92 480 480-214.92 480-480 480zm242.97-533.34H482.39a23.7 23.7 0 0 0-23.7 23.7l-.03 59.28c0 13.08 10.59 23.7 23.7 23.7h165.96a23.7 23.7 0 0 1 23.7 23.7v11.85a71.1 71.1 0 0 1-71.1 71.1H375.71a23.7 23.7 0 0 1-23.7-23.7V423.11a71.1 71.1 0 0 1 71.1-71.1h331.8a23.7 23.7 0 0 0 23.7-23.7l.06-59.25a23.73 23.73 0 0 0-23.7-23.73H423.11a177.78 177.78 0 0 0-177.78 177.75v331.83c0 13.08 10.62 23.7 23.7 23.7h349.62a159.99 159.99 0 0 0 159.99-159.99V482.33a23.7 23.7 0 0 0-23.7-23.7z"}));Wk.displayName="GiteeIcon";const Gk=()=>d(hs,{name:"bitbucket"},()=>d("path",{d:"M575.256 490.862c6.29 47.981-52.005 85.723-92.563 61.147-45.714-20.004-45.714-92.562-1.133-113.152 38.29-23.442 93.696 7.424 93.696 52.005zm63.451-11.996c-10.276-81.152-102.29-134.839-177.152-101.156-47.433 21.138-79.433 71.424-77.129 124.562 2.853 69.705 69.157 126.866 138.862 120.576S647.3 548.571 638.708 478.83zm136.558-309.723c-25.161-33.134-67.986-38.839-105.728-45.13-106.862-17.151-216.576-17.7-323.438 1.134-35.438 5.706-75.447 11.996-97.719 43.996 36.572 34.304 88.576 39.424 135.424 45.129 84.553 10.862 171.447 11.447 256 .585 47.433-5.705 99.987-10.276 135.424-45.714zm32.585 591.433c-16.018 55.99-6.839 131.438-66.304 163.986-102.29 56.576-226.304 62.867-338.87 42.862-59.43-10.862-129.135-29.696-161.72-85.723-14.3-54.858-23.442-110.848-32.585-166.84l3.438-9.142 10.276-5.157c170.277 112.567 408.576 112.567 579.438 0 26.844 8.01 6.84 40.558 6.29 60.014zm103.424-549.157c-19.42 125.148-41.728 249.71-63.415 374.272-6.29 36.572-41.728 57.162-71.424 72.558-106.862 53.724-231.424 62.866-348.562 50.286-79.433-8.558-160.585-29.696-225.134-79.433-30.28-23.443-30.28-63.415-35.986-97.134-20.005-117.138-42.862-234.277-57.161-352.585 6.839-51.42 64.585-73.728 107.447-89.71 57.16-21.138 118.272-30.866 178.87-36.571 129.134-12.58 261.157-8.01 386.304 28.562 44.581 13.13 92.563 31.415 122.844 69.705 13.714 17.7 9.143 40.01 6.29 60.014z"}));Gk.displayName="BitbucketIcon";const Kk=()=>d(hs,{name:"source"},()=>d("path",{d:"M601.92 475.2c0 76.428-8.91 83.754-28.512 99.594-14.652 11.88-43.956 14.058-78.012 16.434-18.81 1.386-40.392 2.97-62.172 6.534-18.612 2.97-36.432 9.306-53.064 17.424V299.772c37.818-21.978 63.36-62.766 63.36-109.692 0-69.894-56.826-126.72-126.72-126.72S190.08 120.186 190.08 190.08c0 46.926 25.542 87.714 63.36 109.692v414.216c-37.818 21.978-63.36 62.766-63.36 109.692 0 69.894 56.826 126.72 126.72 126.72s126.72-56.826 126.72-126.72c0-31.086-11.286-59.598-29.7-81.576 13.266-9.504 27.522-17.226 39.996-19.206 16.038-2.574 32.868-3.762 50.688-5.148 48.312-3.366 103.158-7.326 148.896-44.55 61.182-49.698 74.25-103.158 75.24-187.902V475.2h-126.72zM316.8 126.72c34.848 0 63.36 28.512 63.36 63.36s-28.512 63.36-63.36 63.36-63.36-28.512-63.36-63.36 28.512-63.36 63.36-63.36zm0 760.32c-34.848 0-63.36-28.512-63.36-63.36s28.512-63.36 63.36-63.36 63.36 28.512 63.36 63.36-28.512 63.36-63.36 63.36zM823.68 158.4h-95.04V63.36h-126.72v95.04h-95.04v126.72h95.04v95.04h126.72v-95.04h95.04z"}));Kk.displayName="SourceIcon";const q0=({link:s,type:a=Qo(s??"")})=>{if(!a)return null;const n=a.toLowerCase();return d(n==="bitbucket"?Gk:n==="github"?Qk:n==="gitlab"?"GitLab":n==="gitee"?Wk:Kk)},V0=(s,a=0)=>{let n=3735928559^a,i=1103547991^a;for(let e=0,l;e<s.length;e++)l=s.charCodeAt(e),n=Math.imul(n^l,2654435761),i=Math.imul(i^l,1597334677);return n=Math.imul(n^n>>>16,2246822507),n^=Math.imul(i^i>>>13,3266489909),i=Math.imul(i^i>>>16,2246822507),i^=Math.imul(n^n>>>13,3266489909),4294967296*(2097151&i)+(n>>>0)},pl=(s,a)=>V0(s)%a;let z0=class{constructor(){Mt(this,"containerElement");Mt(this,"messageElements",{});const a="message-container",n=document.getElementById(a);n?this.containerElement=n:(this.containerElement=document.createElement("div"),this.containerElement.id=a,document.body.appendChild(this.containerElement))}pop(a,n=2e3){const i=document.createElement("div"),e=Date.now();return i.className="message move-in",i.innerHTML=a,this.containerElement.appendChild(i),this.messageElements[e]=i,n>0&&setTimeout(()=>{this.close(e)},n),e}close(a){if(a){const n=this.messageElements[a];n.classList.remove("move-in"),n.classList.add("move-out"),n.addEventListener("animationend",()=>{n.remove(),delete this.messageElements[a]})}else Va(this.messageElements).forEach(n=>this.close(Number(n)))}destroy(){document.body.removeChild(this.containerElement)}};const Xk=/#.*$/u,N0=s=>{const a=Xk.exec(s);return a?a[0]:""},Sc=s=>decodeURI(s).replace(Xk,"").replace(/\/index\.html$/iu,"/").replace(/\.html$/iu,"").replace(/(README|index)?\.md$/iu,""),Yk=(s,a)=>{if(!qk(a))return!1;const n=Sc(s.path),i=Sc(a),e=N0(a);return e?e===s.hash&&(!i||n===i):n===i};var H0=s=>Object.prototype.toString.call(s)==="[object Object]",Ue=s=>typeof s=="string";const Zk=Array.isArray,wc=s=>H0(s)&&Ue(s.name),$e=(s,a=!1)=>s?Zk(s)?s.map(n=>Ue(n)?{name:n}:wc(n)?n:null).filter(n=>n!==null):Ue(s)?[{name:s}]:wc(s)?[s]:(console.error(`Expect "author" to be \`AuthorInfo[] | AuthorInfo | string[] | string ${a?"":"| false"} | undefined\`, but got`,s),[]):[],sh=(s,a)=>{if(s){if(Zk(s)&&s.every(Ue))return s;if(Ue(s))return[s];console.error(`Expect ${a} to be \`string[] | string | undefined\`, but got`,s)}return[]},ah=s=>sh(s,"category"),nh=s=>sh(s,"tag"),U0="accelerometer; autoplay; clipboard-write; encrypted-media; fullscreen; gyroscope; picture-in-picture",xc=s=>Os(s)?s:`${s}px`,$0=(s,a=0)=>{const n=ms(),i=g(()=>xc($a(s.width)??"100%")),e=M("auto"),l=p=>{if(Os(p)){const[c,B]=p.split(":"),k=Number(c)/Number(B);if(!Number.isNaN(k))return k}return typeof p=="number"?p:16/9},t=p=>{const c=$a(s.height),B=l($a(s.ratio));return c?xc(c):`${Number(p)/B+$a(a)}px`},r=()=>{n.value&&(e.value=t(n.value.clientWidth))};return as(()=>{r(),Ns(a)&&os(a,r),xs("orientationchange",r),xs("resize",r)}),{el:n,width:i,height:e,resize:r}},Lc="https://player.bilibili.com/player.html";var Q0=L({name:"BiliBili",props:{bvid:{type:String,default:""},aid:{type:String,default:""},cid:{type:String,default:""},title:{type:String,default:"A BiliBili video"},page:{type:[String,Number],default:1},width:{type:[String,Number],default:"100%"},height:{type:[String,Number],default:void 0},ratio:{type:[String,Number],default:16/9},time:{type:[String,Number],default:0},autoplay:Boolean},setup(s){const{el:a,width:n,height:i,resize:e}=$0(s),l=M(!1),t=g(()=>{const{aid:r,bvid:p,cid:c,autoplay:B,time:k,page:h}=s;return r&&c?`${Lc}?aid=${r}&cid=${c}&t=${k}&autoplay=${B?1:0}&p=${h}`:p?`${Lc}?bvid=${p}&t=${k}&autoplay=${B?1:0}`:null});return()=>t.value?[d("div",{class:"bilibili-desc"},d("a",{class:"sr-only",href:t.value},s.title)),d("iframe",{ref:a,src:t.value,title:s.title,class:"bilibili-iframe",allow:U0,style:{width:n.value,height:l.value?i.value:0},onLoad:()=>{l.value=!0,e()}}),l.value?null:d(wn)]:[]}});const ih=({type:s="info",text:a="",vertical:n,color:i},{slots:e})=>{var l;return d("span",{class:["vp-badge",s,{diy:i}],style:{verticalAlign:n??!1,backgroundColor:i??!1}},((l=e.default)==null?void 0:l.call(e))??a)};ih.displayName="Badge";const W0=zs({enhance:({app:s})=>{xa("FontIcon")||s.component("FontIcon",M0),xa("BiliBili")||s.component("BiliBili",Q0),xa("Badge")||s.component("Badge",ih)},setup:()=>{_c(`@import url("//at.alicdn.com/t/c/font_2410206_5vb9zlyghj.css");
`),_c(`@import url("//at.alicdn.com/t/c/font_3941380_00g6dc2nedwir.css");
`)},rootComponents:[]}),G0=Object.freeze(Object.defineProperty({__proto__:null,default:W0},Symbol.toStringTag,{value:"Module"})),Tc=async(s,a)=>{const{path:n,query:i}=s.currentRoute.value,{scrollBehavior:e}=s.options;s.options.scrollBehavior=void 0,await s.replace({path:n,query:i,hash:a}),s.options.scrollBehavior=e},K0=({headerLinkSelector:s,headerAnchorSelector:a,delay:n,offset:i=5})=>{const e=Fa();xs("scroll",No(()=>{var u,A;const t=Math.max(window.scrollY,document.documentElement.scrollTop,document.body.scrollTop);if(Math.abs(t-0)<i){Tc(e,"");return}const p=window.innerHeight+t,c=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),B=Math.abs(c-p)<i,k=Array.from(document.querySelectorAll(s)),y=Array.from(document.querySelectorAll(a)).filter(F=>k.some(C=>C.hash===F.hash));for(let F=0;F<y.length;F++){const C=y[F],b=y[F+1],m=t>=(((u=C.parentElement)==null?void 0:u.offsetTop)??0)-i,f=!b||t<(((A=b.parentElement)==null?void 0:A.offsetTop)??0)-i;if(!(m&&f))continue;const V=decodeURIComponent(e.currentRoute.value.hash),P=decodeURIComponent(C.hash);if(V===P)return;if(B){for(let W=F+1;W<y.length;W++)if(V===decodeURIComponent(y[W].hash))return}Tc(e,P);return}},n))},X0=".vp-sidebar-link, .vp-toc-link",Y0=".header-anchor",Z0=200,sv=5,av=zs({setup(){K0({headerLinkSelector:X0,headerAnchorSelector:Y0,delay:Z0,offset:sv})}}),nv=Object.freeze(Object.defineProperty({__proto__:null,default:av},Symbol.toStringTag,{value:"Module"}));let eh=s=>Os(s.title)?{title:s.title}:null;const lh=Symbol(""),iv=s=>{eh=s},ev=()=>Fs(lh),lv=s=>{s.provide(lh,eh)};var tv={"/":{title:"目录",empty:"暂无目录"}};const rv=L({name:"Catalog",props:{base:{type:String,default:""},level:{type:Number,default:3},index:Boolean,hideHeading:Boolean},setup(s){const a=ev(),n=ii(tv),i=gs(),e=PA(),l=Lk(),r=ms(ei(e.value).map(([c,{meta:B}])=>{const k=a(B);if(!k)return null;const h=c.split("/").length;return{level:r0(c,"/")?h-2:h-1,base:c.replace(/\/[^/]+\/?$/,"/"),path:c,...k}}).filter(c=>Bn(c)&&Os(c.title))),p=g(()=>{const c=s.base?b7(vk(s.base)):i.value.path.replace(/\/[^/]+$/,"/"),B=c.split("/").length-2,k=[];return r.value.filter(({level:h,path:y})=>{if(!Ne(y,c)||y===c)return!1;if(c==="/"){const u=Va(l.value.locales).filter(A=>A!=="/");if(y==="/404.html"||u.some(A=>Ne(y,A)))return!1}return h-B<=s.level}).sort(({title:h,level:y,order:u},{title:A,level:F,order:C})=>{const b=y-F;return b||(er(u)?er(C)?u>0?C>0?u-C:-1:C<0?u-C:1:u:er(C)?C:h.localeCompare(A))}).forEach(h=>{var A;const{base:y,level:u}=h;switch(u-B){case 1:{k.push(h);break}case 2:{const F=k.find(C=>C.path===y);F&&(F.children??(F.children=[])).push(h);break}default:{const F=k.find(C=>C.path===y.replace(/\/[^/]+\/$/,"/"));if(F){const C=(A=F.children)==null?void 0:A.find(b=>b.path===y);C&&(C.children??(C.children=[])).push(h)}}}}),k});return()=>{const c=p.value.some(B=>B.children);return d("div",{class:["vp-catalog-wrapper",{index:s.index}]},[s.hideHeading?null:d("h2",{class:"vp-catalog-main-title"},n.value.title),p.value.length?d(s.index?"ol":"ul",{class:["vp-catalogs",{deep:c}]},p.value.map(({children:B=[],title:k,path:h,content:y})=>{const u=d(Qs,{class:"vp-catalog-title",to:h},()=>y?d(y):k);return d("li",{class:"vp-catalog"},c?[d("h3",{id:k,class:["vp-catalog-child-title",{"has-children":B.length}]},[d("a",{href:`#${k}`,class:"vp-catalog-header-anchor","aria-hidden":!0},"#"),u]),B.length?d(s.index?"ol":"ul",{class:"vp-child-catalogs"},B.map(({children:A=[],content:F,path:C,title:b})=>d("li",{class:"vp-child-catalog"},[d("div",{class:["vp-catalog-sub-title",{"has-children":A.length}]},[d("a",{href:`#${b}`,class:"vp-catalog-header-anchor"},"#"),d(Qs,{class:"vp-catalog-title",to:C},()=>F?d(F):b)]),A.length?d(s.index?"ol":"div",{class:s.index?"vp-sub-catalogs":"vp-sub-catalogs-wrapper"},A.map(({content:m,path:f,title:x})=>s.index?d("li",{class:"vp-sub-catalog"},d(Qs,{to:f},()=>m?d(m):x)):d(Qs,{class:"vp-sub-catalog-link",to:f},()=>m?d(m):x))):null]))):null]:d("div",{class:"vp-catalog-child-title"},u))})):d("p",{class:"vp-empty-catalog"},n.value.empty)])}}}),ov=zs({enhance:({app:s})=>{lv(s),xa("Catalog",s)||s.component("Catalog",rv)}}),pv=Object.freeze(Object.defineProperty({__proto__:null,default:ov},Symbol.toStringTag,{value:"Module"}));var cv={"/":{backToTop:"返回顶部"}};const dv=L({name:"BackToTop",setup(){const s=ks(),a=ii(cv),n=ms(),{height:i}=O0(n),{height:e}=R0(),{y:l}=P0(),t=g(()=>s.value.backToTop!==!1&&l.value>100),r=g(()=>l.value/(i.value-e.value)*100);return as(()=>{n.value=document.body}),()=>d(bi,{name:"back-to-top"},()=>t.value?d("button",{type:"button",class:"vp-back-to-top-button","aria-label":a.value.backToTop,onClick:()=>{window.scrollTo({top:0,behavior:"smooth"})}},[d("span",{class:"vp-scroll-progress",role:"progressbar","aria-labelledby":"loadinglabel","aria-valuenow":r.value},d("svg",d("circle",{cx:"26",cy:"26",r:"24",fill:"none",stroke:"currentColor","stroke-width":"4","stroke-dasharray":`${Math.PI*r.value*.48} ${Math.PI*(100-r.value)*.48}`}))),d("div",{class:"back-to-top-icon"})]):null)}}),Bv=zs({rootComponents:[dv]}),kv=Object.freeze(Object.defineProperty({__proto__:null,default:Bv},Symbol.toStringTag,{value:"Module"}));/**
 * NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT
 */const As={settings:{minimum:.08,easing:"ease",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,barSelector:'[role="bar"]',parent:"body",template:'<div class="bar" role="bar"></div>'},status:null,set:s=>{const a=As.isStarted();s=rr(s,As.settings.minimum,1),As.status=s===1?null:s;const n=As.render(!a),i=n.querySelector(As.settings.barSelector),e=As.settings.speed,l=As.settings.easing;return n.offsetWidth,hv(t=>{Sl(i,{transform:"translate3d("+Oc(s)+"%,0,0)",transition:"all "+e+"ms "+l}),s===1?(Sl(n,{transition:"none",opacity:"1"}),n.offsetWidth,setTimeout(()=>{Sl(n,{transition:"all "+e+"ms linear",opacity:"0"}),setTimeout(()=>{As.remove(),t()},e)},e)):setTimeout(()=>t(),e)}),As},isStarted:()=>typeof As.status=="number",start:()=>{As.status||As.set(0);const s=()=>{setTimeout(()=>{As.status&&(As.trickle(),s())},As.settings.trickleSpeed)};return As.settings.trickle&&s(),As},done:s=>!s&&!As.status?As:As.inc(.3+.5*Math.random()).set(1),inc:s=>{let a=As.status;return a?(typeof s!="number"&&(s=(1-a)*rr(Math.random()*a,.1,.95)),a=rr(a+s,0,.994),As.set(a)):As.start()},trickle:()=>As.inc(Math.random()*As.settings.trickleRate),render:s=>{if(As.isRendered())return document.getElementById("nprogress");Jc(document.documentElement,"nprogress-busy");const a=document.createElement("div");a.id="nprogress",a.innerHTML=As.settings.template;const n=a.querySelector(As.settings.barSelector),i=s?"-100":Oc(As.status||0),e=document.querySelector(As.settings.parent);return Sl(n,{transition:"all 0 linear",transform:"translate3d("+i+"%,0,0)"}),e!==document.body&&Jc(e,"nprogress-custom-parent"),e==null||e.appendChild(a),a},remove:()=>{Ic(document.documentElement,"nprogress-busy"),Ic(document.querySelector(As.settings.parent),"nprogress-custom-parent");const s=document.getElementById("nprogress");s&&yv(s)},isRendered:()=>!!document.getElementById("nprogress")},rr=(s,a,n)=>s<a?a:s>n?n:s,Oc=s=>(-1+s)*100,hv=function(){const s=[];function a(){const n=s.shift();n&&n(a)}return function(n){s.push(n),s.length===1&&a()}}(),Sl=function(){const s=["Webkit","O","Moz","ms"],a={};function n(t){return t.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,function(r,p){return p.toUpperCase()})}function i(t){const r=document.body.style;if(t in r)return t;let p=s.length;const c=t.charAt(0).toUpperCase()+t.slice(1);let B;for(;p--;)if(B=s[p]+c,B in r)return B;return t}function e(t){return t=n(t),a[t]??(a[t]=i(t))}function l(t,r,p){r=e(r),t.style[r]=p}return function(t,r){for(const p in r){const c=r[p];c!==void 0&&Object.prototype.hasOwnProperty.call(r,p)&&l(t,p,c)}}}(),th=(s,a)=>(typeof s=="string"?s:Wo(s)).indexOf(" "+a+" ")>=0,Jc=(s,a)=>{const n=Wo(s),i=n+a;th(n,a)||(s.className=i.substring(1))},Ic=(s,a)=>{const n=Wo(s);if(!th(s,a))return;const i=n.replace(" "+a+" "," ");s.className=i.substring(1,i.length-1)},Wo=s=>(" "+(s.className||"")+" ").replace(/\s+/gi," "),yv=s=>{s&&s.parentNode&&s.parentNode.removeChild(s)},uv=()=>{as(()=>{const s=Fa(),a=new Set;a.add(s.currentRoute.value.path),s.beforeEach(n=>{a.has(n.path)||As.start()}),s.afterEach(n=>{a.add(n.path),As.done()})})},Av=zs({setup(){uv()}}),vv=Object.freeze(Object.defineProperty({__proto__:null,default:Av},Symbol.toStringTag,{value:"Module"})),mv=JSON.parse('{"encrypt":{"config":{"/demo/encrypt.html":["$2a$10$1djeV8xeve8GdMCego25/esDurrM7M6OUgUwR1WHmofQraEM57hDy"]}},"themeColor":true,"fullscreen":true,"author":{"name":"MrJason","url":"https://mrjackc.github.io"},"logo":"/logo.svg","repo":"MrjackC/mrjackc.github.io","docsDir":"src","navbarLayout":{"start":["Brand"],"center":["Links"],"end":["Language","Repo","Wormhole","Travelling","Outlook","Search"]},"blog":{"medias":{"Email":"mailto:mrjasonss@163.com","GitHub":"https://github.com/MrJackC","Gmail":"mailto:mrjason5252@gmail.com","Rss":"./rss.xml"},"name":"春鸽鸽"},"locales":{"/":{"lang":"zh-CN","navbarLocales":{"langName":"简体中文","selectLangAriaLabel":"选择语言"},"metaLocales":{"author":"作者","date":"写作日期","origin":"原创","views":"访问量","category":"分类","tag":"标签","readingTime":"阅读时间","words":"字数","toc":"此页内容","prev":"上一页","next":"下一页","lastUpdated":"上次编辑于","contributors":"贡献者","editLink":"在 GitHub 上编辑此页","print":"打印"},"blogLocales":{"article":"文章","articleList":"文章列表","category":"分类","tag":"标签","timeline":"时间轴","timelineTitle":"昨日不在","all":"全部","intro":"个人介绍","star":"星标","empty":"$text 为空"},"paginationLocales":{"prev":"上一页","next":"下一页","navigate":"跳转到","action":"前往","errorText":"请输入 1 到 $page 之前的页码！"},"outlookLocales":{"themeColor":"主题色","darkmode":"外观","fullscreen":"全屏"},"encryptLocales":{"iconLabel":"文章已加密","placeholder":"输入密码","remember":"记住密码","errorHint":"请输入正确的密码"},"routeLocales":{"skipToContent":"跳至主要內容","notFoundTitle":"页面不存在","notFoundMsg":["这里什么也没有","我们是怎么来到这儿的？","这 是 四 零 四 !","看起来你访问了一个失效的链接"],"back":"返回上一页","home":"带我回家","openInNewWindow":"Open in new window"},"navbar":["/",{"text":"导航","icon":"discover","link":"/demo/"},{"text":"笔记分类","icon":"edit","children":[{"text":"代码笔记","prefix":"/posts/","children":[{"text":"计算机基础","icon":"windows","link":"Computer-Basics/"},{"text":"数据结构与算法","icon":"calculate","link":"Data-Structure/"},{"text":"前端笔记","icon":"code","link":"Web/"},{"text":"Linux","icon":"linux","link":"Linux/"},{"text":"Python","icon":"python","link":"Python/"},{"text":"数据库","icon":"table","link":"Database/"},{"text":"Docker","icon":"expansion","link":"Docker/"},{"text":"Git","icon":"git","link":"Git/"},{"text":"Redis","icon":"lock","link":"Redis/"}]},{"text":"博客相关","prefix":"/blog/","children":[{"text":"博客相关","icon":"blog","link":""}]}]},{"text":"Java","icon":"java","link":"/posts/Java/"},{"text":"收藏","icon":"hk-shoucang1","link":"/collect"},{"text":"说说","icon":"news","link":"/news/"},{"text":"留言板","icon":"mark","link":"/visitorsbook"},{"text":"友链","icon":"link","link":"/friend"},{"text":"关于","icon":"info","children":[{"text":"关于我","icon":"people","link":"/intro"},{"text":"关于本站","icon":"info","link":"/about"}]}],"sidebar":{"/":["",{"text":"如何使用","icon":"creative","prefix":"demo/","link":"demo/","children":"structure"},{"text":"代码笔记","icon":"note","prefix":"posts/","children":[{"text":"计算机基础","icon":"windows","prefix":"posts/","link":"Computer-Basics/"},{"text":"数据结构与算法","icon":"calculate","prefix":"posts/","link":"Data-Structure/"},{"text":"前端开发","icon":"code","prefix":"posts/","link":"Web/"},{"text":"Linux","icon":"linux","prefix":"posts/","link":"Linux/"},{"text":"Python","icon":"python","prefix":"posts/","link":"Python/"},{"text":"数据库","icon":"table","prefix":"posts/","link":"Database/"},{"text":"Docker","icon":"expansion","prefix":"posts/","link":"Docker/"}]},{"text":"Java","icon":"java","prefix":"posts/","link":"Java/"},{"text":"博客相关","icon":"blog","prefix":"blog/","link":"blog/"},{"text":"站点收藏","icon":"sitemap","prefix":"site","link":"site/","children":"structure"},{"text":"随笔","icon":"flower","prefix":"private/","children":"structure"},{"text":"关于","icon":"info","prefix":"about/","link":"about"}],"/posts/Linux/":"structure","/posts/Python/":"structure","/posts/Web/":"structure","/site/":"structure","/blog":"structure","/tutorial":"structure","/posts/Computer-Basics/":"structure","/posts/Data-Structure/":"structure","/posts/Database/":"structure","/posts/Docker/":"structure","/posts/Git/":"structure","/posts/Redis/":"structure","/posts/Java/":"structure"},"footer":"默认页脚","displayFooter":false,"blog":{"description":"到最后，竟庆幸于夕阳仍留在身上","intro":"/intro.html"}}}}'),Ev=M(mv),rh=()=>Ev,oh=Symbol(""),Fv=()=>{const s=Fs(oh);if(!s)throw new Error("useThemeLocaleData() is called without provider.");return s},Cv=(s,a)=>{const{locales:n,...i}=s;return{...i,...n==null?void 0:n[a]}},gv=zs({enhance({app:s}){const a=rh(),n=s._context.provides[jo],i=g(()=>Cv(a.value,n.routeLocale.value));s.provide(oh,i),Object.defineProperties(s.config.globalProperties,{$theme:{get(){return a.value}},$themeLocale:{get(){return i.value}}})}}),bv=Object.freeze(Object.defineProperty({__proto__:null,default:gv},Symbol.toStringTag,{value:"Module"})),fv={"Content-Type":"application/json"},ph=s=>`${s.replace(/\/?$/,"/")}api/`,ch=(s,a="")=>{if(typeof s=="object"&&s.errno)throw new TypeError(`${a} failed with ${s.errno}: ${s.errmsg}`);return s},Dv=({serverURL:s,lang:a,paths:n,type:i,signal:e})=>fetch(`${ph(s)}article?path=${encodeURIComponent(n.join(","))}&type=${encodeURIComponent(i.join(","))}&lang=${a}`,{signal:e}).then(l=>l.json()).then(l=>ch(l,"Get counter").data),_v=({serverURL:s,lang:a,path:n,type:i,action:e})=>fetch(`${ph(s)}article?lang=${a}`,{method:"POST",headers:fv,body:JSON.stringify({path:n,type:i,action:e})}).then(l=>l.json()).then(l=>ch(l,"Update counter").data),Sv=({serverURL:s,lang:a,paths:n,signal:i})=>Dv({serverURL:s,lang:a,paths:n,type:["time"],signal:i}),wv=s=>_v({...s,type:"time",action:"inc"}),xv=(s="")=>s.replace(/\/$/u,""),Lv=s=>/^(https?:)?\/\//.test(s),Pc=s=>{const a=xv(s);return Lv(a)?a:`https://${a}`},Tv=s=>{s.name!=="AbortError"&&console.error(s.message)},Rc=s=>{const{path:a}=s.dataset;return a!=null&&a.length?a:null},Mc=(s,a)=>{a.forEach((n,i)=>{const e=s[i].time;typeof e=="number"&&(n.innerText=e.toString())})},dh=({serverURL:s,path:a=window.location.pathname,selector:n=".waline-pageview-count",update:i=!0,lang:e=navigator.language})=>{const l=new AbortController,t=Array.from(document.querySelectorAll(n)),r=c=>{const B=Rc(c);return B!==null&&a!==B},p=c=>Sv({serverURL:Pc(s),paths:c.map(B=>Rc(B)??a),lang:e,signal:l.signal}).then(B=>Mc(B,c)).catch(Tv);if(i){const c=t.filter(k=>!r(k)),B=t.filter(r);wv({serverURL:Pc(s),path:a,lang:e}).then(k=>Mc(k,c)),B.length&&p(B)}else p(t);return l.abort.bind(l)};var Ov={provider:"Waline",dark:'html[data-theme="dark"]',serverURL:"https://blog-comments-theta-ten.vercel.app/",reaction:!0,requiredMeta:["nick","mail"],wordLimit:300,emoji:["https://unpkg.com/@waline/emojis@1.1.0/tieba","https://unpkg.com/@waline/emojis@1.1.0/weibo","https://emoji.shojo.cn/bili/webp/tv_小电视_动图","https://emoji.shojo.cn/bili/webp/罗小黑战记","https://emoji.shojo.cn/bili/webp/2233娘","https://emoji.shojo.cn/bili/webp/装扮小姐姐梦幻冬季","https://emoji.shojo.cn/bili/webp/装扮小姐姐·秋日午后","https://emoji.shojo.cn/bili/webp/星尘","https://emoji.shojo.cn/bili/webp/池年"]};const Jv=Ov,Iv=M(Jv),Bh=Symbol(""),kh=()=>Fs(Bh),hh=kh,Pv=s=>{s.provide(Bh,Iv)},yh=()=>d("svg",{xmlns:"http://www.w3.org/2000/svg",width:"32",height:"32",preserveAspectRatio:"xMidYMid",viewBox:"0 0 100 100"},[d("circle",{cx:"28",cy:"75",r:"11",fill:"currentColor"},d("animate",{attributeName:"fill-opacity",begin:"0s",dur:"1s",keyTimes:"0;0.2;1",repeatCount:"indefinite",values:"0;1;1"})),d("path",{fill:"none",stroke:"#88baf0","stroke-width":"10",d:"M28 47a28 28 0 0 1 28 28"},d("animate",{attributeName:"stroke-opacity",begin:"0.1s",dur:"1s",keyTimes:"0;0.2;1",repeatCount:"indefinite",values:"0;1;1"})),d("path",{fill:"none",stroke:"#88baf0","stroke-width":"10",d:"M28 25a50 50 0 0 1 50 50"},d("animate",{attributeName:"stroke-opacity",begin:"0.2s",dur:"1s",keyTimes:"0;0.2;1",repeatCount:"indefinite",values:"0;1;1"}))]);yh.displayName="LoadingIcon";var Rv={"/":{placeholder:"请留言。(填写邮箱可在被回复时收到邮件提醒)"}};const Mv=Rv;o(()=>import("./waline-meta-l0sNRNKZ.js"),[]);const jv=L({name:"WalineComment",props:{identifier:{type:String,required:!0}},setup(s){const a=hh(),n=ks(),i=gt(),e=ii(Mv);let l;const t=g(()=>!!a.value.serverURL),r=g(()=>{if(!t.value)return!1;const c=a.value.pageview!==!1,B=n.value.pageview;return!!B||c!==!1&&B!==!1}),p=g(()=>({lang:i.value==="zh-CN"?"zh-CN":"en",locale:e.value,dark:"html.dark",...a.value,path:s.identifier}));return as(()=>{os(()=>[s.identifier,a.value.serverURL,a.value.delay,r.value],()=>{l==null||l(),r.value&&ya().then(()=>qo(a.value.delay||800)).then(()=>{setTimeout(()=>{l=dh({serverURL:a.value.serverURL,path:s.identifier})})})},{immediate:!0})}),()=>t.value?d("div",{id:"comment",class:"waline-wrapper"},d(SB({loader:async()=>(await o(()=>import("./component-BTsgfgWb.js"),__vite__mapDeps([3,4]))).Waline,loadingComponent:yh}),p.value)):null}}),qv=L({name:"CommentService",props:{darkmode:Boolean},setup(s){const a=kh(),n=gs(),i=ks(),e=g(()=>a.value.comment!==!1),l=g(()=>i.value.comment||e.value&&i.value.comment!==!1);return()=>d(jv,{id:"vp-comment",identifier:i.value.commentID||n.value.path,darkmode:s.darkmode,style:{display:l.value?"block":"none"}})}}),Vv=zs({enhance:({app:s})=>{Pv(s),s.component("CommentService",qv)}}),zv=Object.freeze(Object.defineProperty({__proto__:null,default:Vv},Symbol.toStringTag,{value:"Module"})),Nv=/language-(shellscript|shell|bash|sh|zsh)/,Hv=({delay:s=500,duration:a=2e3,locales:n,selector:i,showInMobile:e,ignoreSelector:l=[],transform:t})=>{const r=Uo("(max-width: 419px)"),p=g(()=>!r.value||e),c=ii(n),B=gs(),k=F=>{var b;if(F.hasAttribute("copy-code-registered"))return;const C=document.createElement("button");C.type="button",C.classList.add("vp-copy-code-button"),C.setAttribute("aria-label",c.value.copy),C.setAttribute("data-copied",c.value.copied),(b=F.parentElement)==null||b.insertBefore(C,F),F.setAttribute("copy-code-registered","")};os(()=>[B.value.path,p.value],async()=>{document.body.classList.toggle("copy-code-disabled",!p.value),p.value&&(await ya(),await qo(s),document.querySelectorAll(i.join(",")).forEach(k))},{immediate:!0});const{copy:y}=f0({legacy:!0}),u=new WeakMap,A=(F,C,b)=>{const m=C.cloneNode(!0);l.length&&m.querySelectorAll(l.join(",")).forEach(x=>x.remove()),t&&t(m);let f=m.textContent||"";Nv.test(F.className)&&(f=f.replace(/^ *(\$|>) /gm,"")),y(f).then(()=>{if(a<=0)return;b.classList.add("copied"),clearTimeout(u.get(b));const x=setTimeout(()=>{b.classList.remove("copied"),b.blur(),u.delete(b)},a);u.set(b,x)})};xs("click",F=>{const C=F.target;if(p.value&&C.matches('div[class*="language-"] > button.vp-copy-code-button')){const b=C.parentElement,m=C.nextElementSibling;if(!b||!m)return;A(b,m,C)}})};var Uv={"/":{copy:"复制代码",copied:"已复制"}},$v=['.theme-hope-content div[class*="language-"] pre'];const Qv=zs({setup:()=>{Hv({selector:$v,locales:Uv,duration:2e3,delay:500,showInMobile:!1})}}),Wv=Object.freeze(Object.defineProperty({__proto__:null,default:Qv},Symbol.toStringTag,{value:"Module"}));var Gv={"/":{author:"著作权归:author所有",license:"基于:license协议",link:"原文链接：:link"}},Kv={canonical:"https://mrjackc.github.io",author:"111",license:"CC BY-NC-SA 4.0",global:!0,disableCopy:!1,disableSelection:!1,triggerLength:100,maxLength:0};const Mn=Kv,{canonical:wl}=Mn,Xv=()=>{const s=ks(),a=ii(Gv),n=gs(),i=g(()=>!!s.value.copy||s.value.copy!==!1&&Mn.global),e=g(()=>Bn(s.value.copy)?s.value.copy:null),l=g(()=>{var y;return((y=e.value)==null?void 0:y.disableCopy)??Mn.disableCopy}),t=g(()=>{var y;return i.value?((y=e.value)==null?void 0:y.disableSelection)??Mn.disableSelection:!1}),r=g(()=>{var y;return i.value?((y=e.value)==null?void 0:y.maxLength)??Mn.maxLength:0}),p=g(()=>{var y;return((y=e.value)==null?void 0:y.triggerLength)??Mn.triggerLength}),c=()=>wl?`${Et(ni(wl)?wl:`https://${wl}`)}${n.value.path}`:window.location.href,B=(y,u)=>{const{author:A,license:F,link:C}=a.value;return[y?A.replace(":author",y):"",u?F.replace(":license",u):"",C.replace(":link",c())].filter(b=>b).join(`
`)},k=()=>{if(Os(n.value.copyright))return n.value.copyright.replace(":link",c());const{author:y,license:u}=n.value.copyright||{};return B(y??Mn.author,u??Mn.license)},h=y=>{const u=getSelection();if(u){const A=u.getRangeAt(0);if(i.value){const F=A.toString().length;if(l.value||r.value&&F>r.value)return y.preventDefault();if(F>=p.value){y.preventDefault();const C=k(),b=document.createElement("div");b.appendChild(u.getRangeAt(0).cloneContents()),y.clipboardData&&(y.clipboardData.setData("text/html",`${b.innerHTML}<hr><div class="copyright">${C.replace(/\\n/g,"<br>")}</div>`),y.clipboardData.setData("text/plain",`${u.getRangeAt(0).cloneContents().textContent||""}
------
${C}`))}}}};as(()=>{const y=document.querySelector("#app");xs(y,"copy",h),To(()=>{y.style.userSelect=t.value?"none":"auto"})})},Yv=zs({setup:()=>{Xv()}}),Zv=Object.freeze(Object.defineProperty({__proto__:null,default:Yv},Symbol.toStringTag,{value:"Module"})),lt=()=>{const s=document.documentElement;return s.classList.contains("dark")||s.getAttribute("data-theme")==="dark"},sm=(s,a)=>a==="json"?JSON.parse(s):new Function(`let config,__chart_js_config__;
{
${s}
__chart_js_config__=config;
}
return __chart_js_config__;`)();var am=L({name:"ChartJS",props:{config:{type:String,required:!0},id:{type:String,required:!0},title:{type:String,default:""},type:{type:String,default:"json"}},setup(s){const a=ms(),n=ms(),i=M(!1),e=M(!0),l=g(()=>Kn(s.config));let t=!1,r;const p=async c=>{const[{default:B}]=await Promise.all([o(()=>import("./auto-ChJL_1oC.js"),[]),t?Promise.resolve():(t=!0,new Promise(y=>setTimeout(y,800)))]);B.defaults.borderColor=c?"#ccc":"#36A2EB",B.defaults.color=c?"#fff":"#000",B.defaults.maintainAspectRatio=!1;const k=sm(l.value,s.type),h=n.value.getContext("2d");r==null||r.destroy(),r=new B(h,k),e.value=!1};return as(()=>{i.value=lt(),Ho(document.documentElement,()=>{i.value=lt()},{attributeFilter:["class","data-theme"],attributes:!0}),os(i,c=>p(c),{immediate:!0})}),()=>[s.title?d("div",{class:"chartjs-title"},decodeURIComponent(s.title)):null,e.value?d(wn,{class:"chartjs-loading",height:192}):null,d("div",{ref:a,class:"chartjs-wrapper",id:s.id,style:{display:e.value?"none":"block"}},d("canvas",{ref:n,height:400}))]}});const xl=oe("VUEPRESS_CODE_TAB_STORE",{});var nm=L({name:"CodeTabs",props:{active:{type:Number,default:0},data:{type:Array,required:!0},id:{type:String,required:!0},tabId:{type:String,default:""}},slots:Object,setup(s,{slots:a}){const n=M(s.active),i=ms([]),e=()=>{s.tabId&&(xl.value[s.tabId]=s.data[n.value].id)},l=(c=n.value)=>{n.value=c<i.value.length-1?c+1:0,i.value[n.value].focus()},t=(c=n.value)=>{n.value=c>0?c-1:i.value.length-1,i.value[n.value].focus()},r=(c,B)=>{c.key===" "||c.key==="Enter"?(c.preventDefault(),n.value=B):c.key==="ArrowRight"?(c.preventDefault(),l()):c.key==="ArrowLeft"&&(c.preventDefault(),t()),s.tabId&&(xl.value[s.tabId]=s.data[n.value].id)},p=()=>{if(s.tabId){const c=s.data.findIndex(({id:B})=>xl.value[s.tabId]===B);if(c!==-1)return c}return s.active};return as(()=>{n.value=p(),os(()=>xl.value[s.tabId],(c,B)=>{if(s.tabId&&c!==B){const k=s.data.findIndex(({id:h})=>h===c);k!==-1&&(n.value=k)}})}),()=>s.data.length?d("div",{class:"vp-code-tabs"},[d("div",{class:"vp-code-tabs-nav",role:"tablist"},s.data.map(({id:c},B)=>{const k=B===n.value;return d("button",{type:"button",ref:h=>{h&&(i.value[B]=h)},class:["vp-code-tab-nav",{active:k}],role:"tab","aria-controls":`codetab-${s.id}-${B}`,"aria-selected":k,onClick:()=>{n.value=B,e()},onKeydown:h=>r(h,B)},a[`title${B}`]({value:c,isActive:k}))})),s.data.map(({id:c},B)=>{const k=B===n.value;return d("div",{class:["vp-code-tab",{active:k}],id:`codetab-${s.id}-${B}`,role:"tabpanel","aria-expanded":k},[d("div",{class:"vp-code-tab-title"},a[`title${B}`]({value:c,isActive:k})),a[`tab${B}`]({value:c,isActive:k})])})]):null}});const im=()=>d(hs,{name:"back"},()=>d("path",{d:"M1014.749 449.156v125.688H260.626l345.64 345.64-89.239 89.237L19.307 512l497.72-497.721 89.238 89.238-345.64 345.64h754.124z"})),em=()=>d(hs,{name:"home"},()=>d("path",{d:"M780.106 420.978L506.994 147.866 233.882 420.978h.045v455.11H780.06v-455.11h.046zm90.977 90.976V876.09a91.022 91.022 0 01-91.023 91.022H233.927a91.022 91.022 0 01-91.022-91.022V511.954l-67.22 67.175-64.307-64.307 431.309-431.31c35.498-35.498 93.115-35.498 128.614 0l431.309 431.31-64.307 64.307L871.083 512z"})),lm='<svg class="codepen-icon" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M123.429 668L468 897.714V692.571L277.143 565.143zM88 585.714L198.286 512 88 438.286v147.428zm468 312L900.571 668 746.857 565.143 556 692.57v205.143zM512 616l155.429-104L512 408 356.571 512zM277.143 458.857L468 331.43V126.286L123.429 356zM825.714 512L936 585.714V438.286zm-78.857-53.143L900.571 356 556 126.286v205.143zM1024 356v312q0 23.429-19.429 36.571l-468 312Q524.571 1024 512 1024t-24.571-7.429l-468-312Q0 691.43 0 668V356q0-23.429 19.429-36.571l468-312Q499.429 0 512 0t24.571 7.429l468 312Q1024 332.57 1024 356z"/></svg>',tm='<svg class="jsfiddle-icon" viewBox="0 0 1170 1024" xmlns="http://www.w3.org/2000/svg"><path d="M1028.571 441.143q63.429 26.286 102.572 83.143t39.143 126.571q0 93.714-67.429 160.286T940 877.714q-2.286 0-6.571-.285t-6-.286H232q-97.143-5.714-164.571-71.714T0 645.143q0-62.857 31.429-116t84-84q-6.858-22.286-6.858-46.857 0-65.715 46.858-112T269.143 240q54.286 0 98.286 33.143 42.857-88 127.142-141.714t186.572-53.715q94.857 0 174.857 46t126.571 124.857 46.572 172q0 3.429-.286 10.286t-.286 10.286zm-761.142 152q0 69.714 48 110.286T434.286 744q78.285 0 137.143-56.571-9.143-11.429-27.143-32.286t-24.857-28.857q-38.286 37.143-82.286 37.143-31.429 0-53.429-19.143t-22-50q0-30.286 22-49.715T436 525.143q25.143 0 48.286 12T526 568.57t37.143 42.858 39.428 46.857 44 42.857T702 732.57t69.429 12q69.142 0 116.857-40.857T936 594.857q0-69.143-48-109.714T769.714 444.57Q688 444.571 632 500l53.143 61.714q37.714-36.571 81.143-36.571 29.714 0 52.571 18.857t22.857 48q0 32.571-21.143 52.286T766.857 664q-24.571 0-47.143-12t-41.143-31.429-37.428-42.857-39.714-46.857T557.143 488 502 456.571t-67.714-12q-69.715 0-118.286 40.286t-48.571 108.286z"/></svg>',rm='<svg class="icon" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M512 74.667C270.933 74.667 74.667 270.933 74.667 512S270.933 949.333 512 949.333 949.333 753.067 949.333 512 753.067 74.667 512 74.667zm0 810.666C307.2 885.333 138.667 716.8 138.667 512S307.2 138.667 512 138.667 885.333 307.2 885.333 512 716.8 885.333 512 885.333z"/><path d="M708.267 465.067 473.6 330.667c-8.533-4.267-17.067-6.4-25.6-6.4-29.867 0-53.333 23.466-53.333 53.333v268.8c0 8.533 2.133 19.2 6.4 25.6 10.666 17.067 27.733 27.733 46.933 27.733 8.533 0 17.067-2.133 25.6-6.4l234.667-134.4c8.533-4.266 14.933-10.666 19.2-19.2 6.4-12.8 8.533-27.733 4.266-40.533-2.133-14.933-10.666-25.6-23.466-34.133zM458.667 627.2V396.8L661.333 512 458.667 627.2z"/></svg>';var om={useBabel:!1,jsLib:[],cssLib:[],codepenLayout:"left",codepenEditors:"101",babel:"https://unpkg.com/@babel/standalone/babel.min.js",vue:"https://unpkg.com/vue/dist/vue.global.prod.js",react:"https://unpkg.com/react/umd/react.production.min.js",reactDOM:"https://unpkg.com/react-dom/umd/react-dom.production.min.js"};const or=om,jc={html:{types:["html","slim","haml","md","markdown","vue"],map:{html:"none",vue:"none",md:"markdown"}},js:{types:["js","javascript","coffee","coffeescript","ts","typescript","ls","livescript"],map:{js:"none",javascript:"none",coffee:"coffeescript",ls:"livescript",ts:"typescript"}},css:{types:["css","less","sass","scss","stylus","styl"],map:{css:"none",styl:"stylus"}}},pm=(s,a,n)=>{const i=document.createElement(s);return Bn(a)&&Va(a).forEach(e=>{if(e.indexOf("data"))i[e]=a[e];else{const l=e.replace("data","");i.dataset[l]=a[e]}}),i},Go=s=>({...or,...s,jsLib:Array.from(new Set([...or.jsLib??[],...s.jsLib??[]])),cssLib:Array.from(new Set([...or.cssLib??[],...s.cssLib??[]]))}),Xi=(s,a)=>{if(qk(s[a]))return s[a];const n=new Promise(i=>{var l;const e=document.createElement("script");e.src=a,(l=document.querySelector("body"))==null||l.appendChild(e),e.onload=()=>{i()}});return s[a]=n,n},cm=(s,a)=>{if(a.css&&Array.from(s.childNodes).every(n=>n.nodeName!=="STYLE")){const n=pm("style",{innerHTML:a.css});s.appendChild(n)}},dm=(s,a,n)=>{const i=n.getScript();if(i&&Array.from(a.childNodes).every(e=>e.nodeName!=="SCRIPT")){const e=document.createElement("script");e.appendChild(document.createTextNode(`{const document=window.document.querySelector('#${s} .vp-code-demo-display').shadowRoot;
${i}}`)),a.appendChild(e)}},Bm=["html","js","css"],km=s=>{const a=Va(s),n={html:[],js:[],css:[],isLegal:!1};return Bm.forEach(i=>{const e=a.filter(l=>jc[i].types.includes(l));if(e.length){const l=e[0];n[i]=[s[l].replace(/^\n|\n$/g,""),jc[i].map[l]??l]}}),n.isLegal=(!n.html.length||n.html[1]==="none")&&(!n.js.length||n.js[1]==="none")&&(!n.css.length||n.css[1]==="none"),n},uh=s=>s.replace(/<br \/>/g,"<br>").replace(/<((\S+)[^<]*?)\s+\/>/g,"<$1></$2>"),Ah=s=>`<div id="app">
${uh(s)}
</div>`,hm=s=>`${s.replace("export default ","const $reactApp = ").replace(/App\.__style__(\s*)=(\s*)`([\s\S]*)?`/,"")};
ReactDOM.createRoot(document.getElementById("app")).render(React.createElement($reactApp))`,ym=s=>s.replace(/export\s+default\s*\{(\n*[\s\S]*)\n*\}\s*;?$/u,"Vue.createApp({$1}).mount('#app')").replace(/export\s+default\s*define(Async)?Component\s*\(\s*\{(\n*[\s\S]*)\n*\}\s*\)\s*;?$/u,"Vue.createApp({$1}).mount('#app')").trim(),vh=s=>`(function(exports){var module={};module.exports=exports;${s};return module.exports.__esModule.exports.default:module.exports;})({})`,um=(s,a)=>{const n=Go(a),i=s.js[0]??"";return{...n,html:uh(s.html[0]??""),js:i,css:s.css[0]??"",isLegal:s.isLegal,getScript:()=>{var e;return n.useBabel?((e=window.Babel.transform(i,{presets:["es2015"]}))==null?void 0:e.code)??"":i}}},Am=/<template>([\s\S]+)<\/template>/u,vm=/<script(\s*lang=(['"])(.*?)\2)?>([\s\S]+)<\/script>/u,mm=/<style(\s*lang=(['"])(.*?)\2)?\s*(?:scoped)?>([\s\S]+)<\/style>/u,Em=(s,a)=>{const n=Go(a),i=s.html[0]??"",e=Am.exec(i),l=vm.exec(i),t=mm.exec(i),r=(e==null?void 0:e[1].replace(/^\n|\n$/g,""))??"",[p="",c=""]=l?[l[4].replace(/^\n|\n$/g,""),l[3]]:[],[B="",k=""]=t?[t[4].replace(/^\n|\n$/g,""),t[3]]:[],h=c===""&&(k===""||k==="css");return{...n,html:Ah(r),js:ym(p),css:B,isLegal:h,jsLib:[n.vue,...n.jsLib],getScript:()=>{var u,A;const y=a.useBabel?((A=(u=window.Babel)==null?void 0:u.transform(p,{presets:["es2015"]}))==null?void 0:A.code)??"":p.replace(/export\s+default/u,"return");return`const app=window.document.createElement('div');document.firstElementChild.appendChild(app);const appOptions=${vh(y)};appOptions.template=\`${r.replace("`",'\\`"')}\`;window.Vue.createApp(appOptions).mount(app);`}}},Fm=(s,a)=>{var e;const n=Go(a),i=s.js[0]??"";return{...n,html:Ah(""),js:hm(i),css:s.css[0]??((e=s.js[0])==null?void 0:e.replace(/App\.__style__(?:\s*)=(?:\s*)`([\s\S]*)?`/,"$1").trim())??"",isLegal:s.isLegal,jsLib:[n.react,n.reactDOM,...n.jsLib],jsx:!0,getScript:()=>{var t,r;const l=((r=(t=window.Babel)==null?void 0:t.transform(i,{presets:["es2015","react"]}))==null?void 0:r.code)??"";return`window.ReactDOM.createRoot(document.firstElementChild).render(window.React.createElement(${vh(l)}))`}}},Yi={},Cm=s=>Promise.all([Xi(Yi,s.babel),Xi(Yi,s.react),Xi(Yi,s.reactDOM)]),gm=s=>{const a=[Xi(Yi,s.vue)];return s.useBabel&&a.push(Xi(Yi,s.babel)),Promise.all(a)},bm=s=>s.useBabel?Xi(Yi,s.babel):Promise.resolve();var fm=L({name:"CodeDemo",props:{id:{type:String,required:!0},type:{type:String,default:"normal"},title:{type:String,default:""},config:{type:String,default:""},code:{type:String,required:!0}},slots:Object,setup(s,{slots:a}){const[n,i]=He(!1),e=ms(),l=ms(),t=M("0"),r=M(!1),p=g(()=>JSON.parse(s.config?Kn(s.config):"{}")),c=g(()=>{const u=JSON.parse(Kn(s.code));return km(u)}),B=g(()=>s.type==="react"?Fm(c.value,p.value):s.type==="vue"?Em(c.value,p.value):um(c.value,p.value)),k=g(()=>B.value.isLegal),h=(u=!1)=>{const A=e.value.attachShadow({mode:"open"}),F=document.createElement("div");F.classList.add("code-demo-app"),A.appendChild(F),k.value?(u&&(F.innerHTML=B.value.html),cm(A,B.value),dm(s.id,A,B.value),t.value="0"):t.value="auto",r.value=!0},y=()=>{switch(s.type){case"react":return Cm(B.value).then(()=>h());case"vue":return gm(B.value).then(()=>h());default:return bm(B.value).then(()=>h(!0))}};return xs("beforeprint",()=>{i(!0)}),as(()=>{setTimeout(()=>{y()},800)}),()=>{var u;return d("div",{class:"vp-code-demo",id:s.id},[d("div",{class:"vp-code-demo-header"},[B.value.isLegal?d("button",{type:"button",title:"toggle","aria-hidden":!0,class:["vp-code-demo-toggle-button",n.value?"down":"end"],onClick:()=>{t.value=n.value?"0":`${l.value.clientHeight+13.8}px`,i()}}):null,s.title?d("span",{class:"vp-code-demo-title"},decodeURIComponent(s.title)):null,B.value.isLegal&&B.value.jsfiddle!==!1?d("form",{class:"code-demo-jsfiddle",target:"_blank",action:"https://jsfiddle.net/api/post/library/pure/",method:"post"},[d("input",{type:"hidden",name:"html",value:B.value.html}),d("input",{type:"hidden",name:"js",value:B.value.js}),d("input",{type:"hidden",name:"css",value:B.value.css}),d("input",{type:"hidden",name:"wrap",value:"1"}),d("input",{type:"hidden",name:"panel_js",value:"3"}),d("input",{type:"hidden",name:"resources",value:[...B.value.cssLib,...B.value.jsLib].join(",")}),d("button",{type:"submit",class:"jsfiddle-button",innerHTML:tm,"aria-label":"JSFiddle","data-balloon-pos":"up"})]):null,!B.value.isLegal||B.value.codepen!==!1?d("form",{class:"code-demo-codepen",target:"_blank",action:"https://codepen.io/pen/define",method:"post"},[d("input",{type:"hidden",name:"data",value:JSON.stringify({html:B.value.html,js:B.value.js,css:B.value.css,js_external:B.value.jsLib.join(";"),css_external:B.value.cssLib.join(";"),layout:B.value.codepenLayout,html_pre_processor:c.value?c.value.html[1]:"none",js_pre_processor:c.value?c.value.js[1]:B.value.jsx?"babel":"none",css_pre_processor:c.value?c.value.css[1]:"none",editors:B.value.codepenEditors})}),d("button",{type:"submit",innerHTML:lm,class:"codepen-button","aria-label":"Codepen","data-balloon-pos":"up"})]):null]),r.value?null:d(wn,{class:"vp-code-demo-loading"}),d("div",{ref:e,class:"vp-code-demo-display",style:{display:k.value&&r.value?"block":"none"}}),d("div",{class:"vp-code-demo-code-wrapper",style:{height:t.value}},d("div",{ref:l,class:"vp-code-demo-codes"},(u=a.default)==null?void 0:u.call(a)))])}}}),Dm=L({name:"MdDemo",props:{id:{type:String,required:!0},title:{type:String,default:""}},slots:Object,setup(s,{slots:a}){const[n,i]=He(!1),e=ms(),l=M("0");return xs("beforeprint",()=>{i(!0)}),()=>{var t,r;return d("div",{class:"vp-md-demo",id:s.id},[d("div",{class:"vp-md-demo-header"},[d("button",{type:"button",title:"toggle","aria-hidden":!0,class:["vp-md-demo-toggle-button",n.value?"down":"end"],onClick:()=>{l.value=n.value?"0":`${e.value.clientHeight+13.8}px`,i()}}),s.title?decodeURIComponent(s.title):null]),d("div",{class:"vp-md-demo-display"},(t=a.default)==null?void 0:t.call(a)),d("div",{class:"vp-md-demo-code-wrapper",style:{height:l.value}},d("div",{ref:e,class:"vp-md-demo-codes"},(r=a.code)==null?void 0:r.call(a)))])}}});let _m={};const mh=Symbol(""),Sm=()=>Fs(mh),wm=s=>{s.provide(mh,_m)},xm=(async()=>{}).constructor,Lm=(s,a,n)=>a==="js"?xm("myChart",`let width,height,option,__echarts_config__;
{
${s}
__echarts_config__={width,height,option};
}
return __echarts_config__;
`)(n):Promise.resolve({option:JSON.parse(s)});var Tm=L({name:"ECharts",props:{config:{type:String,required:!0},id:{type:String,required:!0},title:{type:String,default:""},type:{type:String,default:"json"}},setup(s){const a=Sm(),n=M(!0),i=ms();let e;return xs("resize",No(()=>e==null?void 0:e.resize(),100)),as(()=>{Promise.all([o(()=>import("./index-AN989yVn.js"),[]),new Promise(l=>setTimeout(l,800))]).then(async([l])=>{var p;await((p=a.setup)==null?void 0:p.call(a)),e=l.init(i.value);const{option:t,...r}=await Lm(Kn(s.config),s.type,e);e.resize(r),e.setOption({...a.option,...t}),n.value=!1})}),si(()=>{e==null||e.dispose()}),()=>[s.title?d("div",{class:"echarts-title"},decodeURIComponent(s.title)):null,d("div",{class:"echarts-wrapper"},[d("div",{ref:i,class:"echarts-container",id:s.id}),n.value?d(wn,{class:"echarts-loading",height:360}):null])]}}),Ko={x:0,y:0,"line-width":2,"line-length":40,"text-margin":8,"font-size":14,"font-color":"#8DA1AC","line-color":"#8DA1AC","element-color":"black",fill:"white","yes-text":"Yes","no-text":"No","arrow-end":"block",scale:1},Om={...Ko,symbols:{start:{class:"start-element","font-color":"#fff",fill:"#595959","line-width":"0px"},end:{class:"end-element","font-color":"#fff",fill:"#595959","line-width":"0px"},operation:{class:"operation-element","font-color":"#fff",fill:"#1890ff","line-width":"0px"},inputoutput:{class:"inputoutput-element","font-color":"#fff",fill:"#1890ff","line-width":"0px"},subroutine:{class:"subroutine-element","font-color":"#fff",fill:"#FF485E","element-color":"#fff","line-color":"red"},condition:{class:"condition-element","font-color":"#fff",fill:"#FF485E","line-width":"0px"},parallel:{class:"parallel-element","font-color":"#fff",fill:"#1890ff","line-width":"0px"}}},Jm={...Ko,"line-width":1,symbols:{start:{class:"start-element",fill:"#ccc","line-color":"#5c6ac4","font-color":"#000"},end:{class:"end-element",fill:"#ccc","line-color":"#5c6ac4","font-color":"#000"},operation:{class:"operation-element",fill:"#f1f1f1","line-color":"#5c6ac4","font-color":"#000"},inputoutput:{class:"inputoutput-element",fill:"#f1f1f1","line-color":"#5c6ac4","font-color":"#000"},subroutine:{class:"subroutine-element",fill:"#f1f1f1","line-color":"#5c6ac4","font-color":"#000"},condition:{class:"condition-element",fill:"#f1f1f1","line-color":"#5c6ac4","font-color":"#000"},parallel:{class:"parallel-element",fill:"#f1f1f1","line-color":"#5c6ac4","font-color":"#000"}}},Im={...Ko,symbols:{start:{class:"start-element","font-color":"#fff",fill:"#2F495F","line-width":"0px"},end:{class:"end-element","font-color":"#fff",fill:"#2F495F","line-width":"0px"},operation:{class:"operation-element","font-color":"#fff",fill:"#00BC7D","line-width":"0px"},inputoutput:{class:"inputoutput-element","font-color":"#fff",fill:"#EB4D5D","line-width":"0px"},subroutine:{class:"subroutine-element","font-color":"#fff",fill:"#937AC4","element-color":"#fff","line-color":"red"},condition:{class:"condition-element","font-color":"#fff",fill:"#FFB500","line-width":"0px"},parallel:{class:"parallel-element","font-color":"#fff",fill:"#2F495F","line-width":"0px"}}};const qc={ant:Om,vue:Im,pie:Jm};let Pm={};const Eh=Symbol(""),Rm=()=>Fs(Eh),Mm=s=>{s.provide(Eh,Pm)};let jm={};const Fh=Symbol(""),qm=()=>Fs(Fh),Vm=s=>{s.provide(Fh,jm)},zm={autoResize:!0,showCompileOutput:!1,clearConsole:!1,layout:"horizontal",ssr:!1};let Nm=zm;const Ch=Symbol(""),Hm=()=>Fs(Ch),Um=s=>{s.provide(Ch,Nm)};var $m=L({name:"FlowChart",props:{code:{type:String,required:!0},id:{type:String,required:!0},preset:{type:String,default:"vue"}},setup(s){let a=null;const n=ms(),i=M(!0),e=M(1),l=g(()=>qc[s.preset]||(console.warn(`[md-enhance:flowchart] Unknown preset: ${s.preset}`),qc.vue)),t=r=>r<419?.8:r>1280?1:.9;return as(()=>{Promise.all([o(()=>import("./flowchart-966sEcGG.js"),[]),new Promise(r=>setTimeout(r,800))]).then(([{parse:r}])=>{a=r(Kn(s.code)),e.value=t(window.innerWidth),i.value=!1,a.draw(s.id,{...l.value,scale:e.value})}),xs("resize",No(()=>{if(a){const r=t(window.innerWidth);e.value!==r&&(e.value=r,a.draw(s.id,{...l.value,scale:r}))}},100))}),()=>[i.value?d(wn,{class:"flowchart-loading",height:192}):null,d("div",{ref:n,class:["flowchart-wrapper",s.preset],id:s.id,style:{display:i.value?"none":"block"}})]}});const Qm=()=>{xs("beforeprint",()=>{document.querySelectorAll("details").forEach(s=>{s.open=!0})})},Ti={useMaxWidth:!1},Wm=s=>({dark:s,background:s?"#1e1e1e":"#fff",primaryColor:s?"#389d70":"#4abf8a",primaryBorderColor:s?"#389d70":"#4abf8a",primaryTextColor:s?"#fff":"#000",secondaryColor:"#ffb500",secondaryBorderColor:s?"#fff":"#000",secondaryTextColor:s?"#ddd":"#333",tertiaryColor:s?"#282828":"#efeef4",tertiaryBorderColor:s?"#bbb":"#242424",tertiaryTextColor:s?"#ddd":"#333",noteBkgColor:s?"#f6d365":"#fff5ad",noteTextColor:"#242424",noteBorderColor:s?"#f6d365":"#333",lineColor:s?"#d3d3d3":"#333",textColor:s?"#fff":"#242424",mainBkg:s?"#389d70":"#4abf8a",errorBkgColor:"#eb4d5d",errorTextColor:"#fff",nodeBorder:s?"#389d70":"#4abf8a",nodeTextColor:s?"#fff":"#242424",signalTextColor:s?"#9e9e9e":"#242424",classText:"#fff",labelColor:"#fff",attributeBackgroundColorEven:s?"#0d1117":"#fff",attributeBackgroundColorOdd:s?"#161b22":"#f8f8f8",fillType0:s?"#cf1322":"#f1636e",fillType1:"#f39c12",fillType2:"#2ecc71",fillType3:"#fa541c",fillType4:"#25a55b",fillType5:"#13c2c2",fillType6:"#096dd9",fillType7:"#aa6fe9"});var Gm=L({name:"Mermaid",props:{id:{type:String,required:!0},code:{type:String,required:!0},title:{type:String,default:""}},setup(s){const{themeVariables:a,...n}=Rm(),i=ms(),e=g(()=>Kn(s.code)),l=M(""),t=M(!1);let r=!1;const p=async()=>{const[{default:k}]=await Promise.all([o(()=>import("./mermaid.core-D9r9FUVD.js").then(h=>h.b6),__vite__mapDeps([5,4])),r?Promise.resolve():(r=!0,new Promise(h=>setTimeout(h,800)))]);k.initialize({theme:"base",themeVariables:{...Wm(t.value),...f7(a)?a(t.value):a},flowchart:Ti,sequence:Ti,journey:Ti,gantt:Ti,er:Ti,pie:Ti,...n,startOnLoad:!1}),l.value=(await k.render(s.id,e.value)).svg},c=()=>{const{body:k}=document,h=document.createElement("div");h.classList.add("mermaid-preview"),h.innerHTML=l.value,k.appendChild(h),h.addEventListener("click",()=>{k.removeChild(h)})},B=()=>{const k=`data:image/svg+xml;charset=utf8,${l.value.replace(/<br>/g,"<br />").replace(/%/g,"%25").replace(/"/g,"%22").replace(/'/g,"%27").replace(/&/g,"%26").replace(/#/g,"%23").replace(/{/g,"%7B").replace(/}/g,"%7D").replace(/</g,"%3C").replace(/>/g,"%3E")}`,h=document.createElement("a");h.setAttribute("href",k),h.setAttribute("download",`${s.title?Kn(s.title):s.id}.svg`),h.click()};return as(()=>{t.value=lt(),p(),Ho(document.documentElement,()=>{t.value=lt()},{attributeFilter:["class","data-theme"],attributes:!0}),os(t,()=>p())}),()=>[d("div",{class:"mermaid-actions"},[d("button",{class:"preview-button",onClick:()=>c(),title:"preview",innerHTML:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1316 1024" fill="currentColor"><path d="M658.286 0C415.89 0 0 297.106 0 512c0 214.82 415.89 512 658.286 512 242.322 0 658.285-294.839 658.285-512S900.608 0 658.286 0zm0 877.714c-161.573 0-512-221.769-512-365.714 0-144.018 350.427-365.714 512-365.714 161.572 0 512 217.16 512 365.714s-350.428 365.714-512 365.714z"/><path d="M658.286 292.571a219.429 219.429 0 1 0 0 438.858 219.429 219.429 0 0 0 0-438.858zm0 292.572a73.143 73.143 0 1 1 0-146.286 73.143 73.143 0 0 1 0 146.286z"/></svg>'}),d("button",{class:"download-button",onClick:()=>B(),title:"download",innerHTML:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1024 1024" fill="currentColor"><path d="M828.976 894.125H190.189c-70.55 0-127.754-57.185-127.754-127.753V606.674c0-17.634 14.31-31.933 31.933-31.933h63.889c17.634 0 31.932 14.299 31.932 31.933v95.822c0 35.282 28.596 63.877 63.877 63.877h511.033c35.281 0 63.877-28.595 63.877-63.877v-95.822c0-17.634 14.298-31.933 31.943-31.933h63.878c17.635 0 31.933 14.299 31.933 31.933v159.7c0 70.566-57.191 127.751-127.754 127.751zM249.939 267.51c12.921-12.92 33.885-12.92 46.807 0l148.97 148.972V94.893c0-17.634 14.302-31.947 31.934-31.947h63.876c17.638 0 31.946 14.313 31.946 31.947v321.589l148.97-148.972c12.922-12.92 33.876-12.92 46.797 0l46.814 46.818c12.922 12.922 12.922 33.874 0 46.807L552.261 624.93c-1.14 1.138-21.664 13.684-42.315 13.693-20.877.01-41.88-12.542-43.021-13.693L203.122 361.135c-12.923-12.934-12.923-33.885 0-46.807l46.817-46.818z"/></svg>'})]),d("div",{ref:i,class:"mermaid-wrapper"},l.value?d("div",{class:"mermaid-content",innerHTML:l.value}):d(wn,{class:"mermaid-loading",height:96}))]}});const gh=({title:s="",link:a})=>d("div",{class:"vp-playground"},[d("div",{class:"vp-playground-header"},[s?d("div",{class:"vp-playground-title"},decodeURIComponent(s)):null,d("div",{class:"vp-playground-actions"},[d("a",{class:"vp-playground-action",href:decodeURIComponent(a),target:"_blank",innerHTML:rm})])]),d("div",{class:"vp-playground-container"},d("iframe",{src:decodeURIComponent(a)}))]);gh.displayName="Playground";const Km=()=>[o(()=>import("./reveal.esm-CYbl4_PU.js"),[]),o(()=>import("./markdown.esm-BG2Xu2Hd.js"),[]),o(()=>import("./highlight.esm-C34tS8ua.js"),[]),o(()=>import("./math.esm-DN7Rh_EM.js"),[]),o(()=>import("./search.esm-DuBqnxcF.js"),[]),o(()=>import("./notes.esm-DcquA2oP.js"),[]),o(()=>import("./zoom.esm-Ctj_eavO.js"),[])];var Xm=L({name:"RevealJs",props:{id:{type:String,required:!0},code:{type:String,required:!0},theme:{type:String,default:"auto"}},setup(s){const a=qm(),n=ks(),i=M(""),e=M(!0),l=ms();let t=null;const r=async p=>{const c=[new Promise(y=>setTimeout(y,800)),...Km()],[,B,...k]=await Promise.all(c),h=new B.default(p,{backgroundTransition:"slide",hash:n.value.layout==="Slide",mouseWheel:n.value.layout==="Slide",transition:"slide",slideNumber:!0,...a,...n.value.revealJs,embedded:n.value.layout!=="Slide",markdown:{separator:`^\r?\\n---\r?
$`,verticalSeparator:`^\r?
--\r?
$`},plugins:[...k.map(({default:y})=>y),...a.plugins??[]]});return await h.initialize(),h};return as(async()=>{const p=l.value;p&&(i.value=Kn(s.code),p.setAttribute("id",s.id),p.setAttribute("data-theme",s.theme),t=await r(p),e.value=!1)}),si(()=>{t==null||t.destroy()}),()=>d("div",{class:"vp-reveal"},[d("div",{ref:l,class:["reveal","reveal-viewport"]},d("div",{class:"slides",innerHTML:`<section data-markdown><script type="text/template">${i.value}<\/script></section>`})),e.value?d(wn,{class:"reveal-loading",height:400}):null])}});const pr=oe("VUEPRESS_TAB_STORE",{});var Ym=L({name:"Tabs",props:{active:{type:Number,default:0},data:{type:Array,required:!0},id:{type:String,required:!0},tabId:{type:String,default:""}},slots:Object,setup(s,{slots:a}){const n=M(s.active),i=ms([]),e=()=>{s.tabId&&(pr.value[s.tabId]=s.data[n.value].id)},l=(c=n.value)=>{n.value=c<i.value.length-1?c+1:0,i.value[n.value].focus()},t=(c=n.value)=>{n.value=c>0?c-1:i.value.length-1,i.value[n.value].focus()},r=(c,B)=>{c.key===" "||c.key==="Enter"?(c.preventDefault(),n.value=B):c.key==="ArrowRight"?(c.preventDefault(),l()):c.key==="ArrowLeft"&&(c.preventDefault(),t()),e()},p=()=>{if(s.tabId){const c=s.data.findIndex(({id:B})=>pr.value[s.tabId]===B);if(c!==-1)return c}return s.active};return as(()=>{n.value=p(),os(()=>pr.value[s.tabId],(c,B)=>{if(s.tabId&&c!==B){const k=s.data.findIndex(({id:h})=>h===c);k!==-1&&(n.value=k)}})}),()=>s.data.length?d("div",{class:"vp-tabs"},[d("div",{class:"vp-tabs-nav",role:"tablist"},s.data.map(({id:c},B)=>{const k=B===n.value;return d("button",{type:"button",ref:h=>{h&&(i.value[B]=h)},class:["vp-tab-nav",{active:k}],role:"tab","aria-controls":`tab-${s.id}-${B}`,"aria-selected":k,onClick:()=>{n.value=B,e()},onKeydown:h=>r(h,B)},a[`title${B}`]({value:c,isActive:k}))})),s.data.map(({id:c},B)=>{const k=B===n.value;return d("div",{class:["vp-tab",{active:k}],id:`tab-${s.id}-${B}`,role:"tabpanel","aria-expanded":k},[d("div",{class:"vp-tab-title"},a[`title${B}`]({value:c,isActive:k})),a[`tab${B}`]({value:c,isActive:k})])})]):null}});const Zm=s=>JSON.parse(decodeURIComponent(s));var sE=L({name:"VuePlayground",props:{title:{type:String,default:""},files:{type:String,required:!0},settings:{type:String,default:"{}"}},setup(s){const{vueVersion:a=lk,vueRuntimeDevUrl:n=`https://unpkg.com/@vue/runtime-dom@${a}/dist/runtime-dom.esm-browser.js`,vueRuntimeProdUrl:i=`https://unpkg.com/@vue/runtime-dom@${a}/dist/runtime-dom.esm-browser.prod.js`,vueServerRendererUrl:e=`https://unpkg.com/@vue/server-renderer@${a}/dist/server-renderer.esm-browser.js`,...l}=Hm(),t=M(!0),r=ms(),p=ms(),c=ms(),B=g(()=>zr({},l,Zm(s.settings))),k=async()=>{const[{useStore:h,useVueImportMap:y,Repl:u},{default:A}]=await Promise.all([o(()=>import("./vue-repl-CHZuOUVN.js"),__vite__mapDeps([6,7])),o(()=>import("./codemirror-editor-Pd-EP7bs.js"),__vite__mapDeps([8,7]))]);r.value=u,c.value=A;const{importMap:F,vueVersion:C}=y({runtimeDev:n,runtimeProd:i,serverRenderer:e});p.value=h({builtinImportMap:F,vueVersion:C},decodeURIComponent(s.files))};return as(async()=>{await k(),t.value=!1}),()=>[d("div",{class:"vue-playground-wrapper"},[s.title?d("div",{class:"header"},decodeURIComponent(s.title)):null,d("div",{class:"repl-container"},[t.value?d(wn,{class:"preview-loading",height:192}):null,r.value?d(r.value,{...B.value,editor:c.value,store:p.value}):null])])]}});const aE=zs({enhance:({app:s})=>{s.component("ChartJS",am),s.component("CodeTabs",nm),s.component("CodeDemo",fm),s.component("MdDemo",Dm),s.component("ECharts",Tm),wm(s),s.component("FlowChart",$m),Mm(s),s.component("Mermaid",Gm),s.component("Playground",gh),Vm(s),s.component("RevealJs",Xm),s.component("Tabs",Ym),Um(s),s.component("VuePlayground",sE)},setup:()=>{Qm()}}),nE=Object.freeze(Object.defineProperty({__proto__:null,default:aE},Symbol.toStringTag,{value:"Module"})),iE=M({}),bh=Symbol(""),eE=()=>Fs(bh),lE=s=>{s.provide(bh,iE)},tE='<div class="photo-swipe-loading"><svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" preserveAspectRatio="xMidYMid" viewBox="25 25 50 50"><animateTransform attributeName="transform" type="rotate" dur="2s" keyTimes="0;1" repeatCount="indefinite" values="0;360"></animateTransform><circle cx="50" cy="50" r="20" fill="none" stroke="currentColor" stroke-width="4" stroke-linecap="round"><animate attributeName="stroke-dasharray" dur="1.5s" keyTimes="0;0.5;1" repeatCount="indefinite" values="1,200;90,200;1,200"></animate><animate attributeName="stroke-dashoffset" dur="1.5s" keyTimes="0;0.5;1" repeatCount="indefinite" values="0;-35px;-125px"></animate></circle></svg></div>',rE=s=>Os(s)?Array.from(document.querySelectorAll(s)):s.map(a=>Array.from(document.querySelectorAll(a))).flat(),fh=s=>new Promise((a,n)=>{s.complete?a({type:"image",element:s,src:s.src,width:s.naturalWidth,height:s.naturalHeight,alt:s.alt,msrc:s.src}):(s.onload=()=>a(fh(s)),s.onerror=i=>n(i))}),oE=s=>{const{isSupported:a,toggle:n}=$o();s.on("uiRegister",()=>{a.value&&s.ui.registerElement({name:"fullscreen",order:7,isButton:!0,html:'<svg class="pswp__icn" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M249.5 270.833H437v-75H212a37.5 37.5 0 0 0-37.5 37.5v225h75v-187.5zm-37.5 600h225v-75H249.5v-187.5h-75v225a37.5 37.5 0 0 0 37.5 37.5zm637.5-37.5v-225h-75v187.5H587v75h225a37.5 37.5 0 0 0 37.5-37.5zM587 270.833h187.5v187.5h75v-225a37.5 37.5 0 0 0-37.5-37.5H587v75z"/></svg>',onClick:()=>{n()}}),s.ui.registerElement({name:"download",order:8,isButton:!0,tagName:"a",html:{isCustomSVG:!0,inner:'<path d="M20.5 14.3 17.1 18V10h-2.2v7.9l-3.4-3.6L10 16l6 6.1 6-6.1-1.5-1.6ZM23 23H9v2h14" id="pswp__icn-download"/>',outlineID:"pswp__icn-download"},onInit:(i,e)=>{i.setAttribute("download",""),i.setAttribute("target","_blank"),i.setAttribute("rel","noopener"),e.on("change",()=>{i.setAttribute("href",e.currSlide.data.src)})}}),s.ui.registerElement({name:"bulletsIndicator",className:"photo-swipe-bullets-indicator",appendTo:"wrapper",onInit:(i,e)=>{const l=[];let t=-1;for(let r=0;r<e.getNumItems();r++){const p=document.createElement("div");p.className="photo-swipe-bullet",p.onclick=c=>{e.goTo(l.indexOf(c.target))},l.push(p),i.appendChild(p)}e.on("change",()=>{t>=0&&l[t].classList.remove("active"),l[e.currIndex].classList.add("active"),t=e.currIndex})}})})},pE=(s,a,n=!0)=>o(()=>import("./photoswipe.esm-GXRgw7eJ.js"),[]).then(({default:i})=>{let e=null;const l=s.map(t=>({html:tE,element:t,msrc:t.src}));return s.forEach((t,r)=>{const p=()=>{e==null||e.destroy(),e=new i({preloaderDelay:0,showHideAnimationType:"zoom",...a,dataSource:l,index:r,...n?{closeOnVerticalDrag:!0,wheelToZoom:!1}:{}}),oE(e),e.addFilter("thumbEl",()=>t),e.addFilter("placeholderSrc",()=>t.src),e.init()};t.getAttribute("photo-swipe")||(t.style.cursor="zoom-in",t.addEventListener("click",()=>{p()}),t.addEventListener("keypress",({key:c})=>{c==="Enter"&&p()}),t.setAttribute("photo-swipe","")),fh(t).then(c=>{l.splice(r,1,c),e==null||e.refreshSlideContent(r)})}),n?xs("wheel",()=>{e==null||e.close()}):()=>{}}),cE=({selector:s,locales:a,delay:n=500,scrollToClose:i=!0})=>{const e=eE(),l=ii(a),t=gs(),r=ks();let p=null;const c=()=>{const{photoSwipe:B}=r.value;B!==!1&&ya().then(()=>qo(n)).then(async()=>{const k=Os(B)?B:s;p=await pE(rE(k),{...e.value,...l.value},i)})};as(()=>{c(),os(()=>[t.value.path,e.value],()=>{p==null||p(),c()})}),si(()=>{p==null||p()})};var dE={"/":{closeTitle:"关闭",downloadTitle:"下载图片",fullscreenTitle:"切换全屏",zoomTitle:"缩放",arrowPrevTitle:"上一个 (左箭头)",arrowNextTitle:"下一个 (右箭头)"}},BE=[".theme-hope-content :not(a) > img:not([no-view])",".news-content :not(a) > .vp-article-excerpt img"];const kE=BE,hE=dE,yE=800,uE=!0,AE=zs({enhance:({app:s})=>{lE(s)},setup:()=>{cE({selector:kE,delay:yE,locales:hE,scrollToClose:uE})}}),vE=Object.freeze(Object.defineProperty({__proto__:null,default:AE},Symbol.toStringTag,{value:"Module"}));function mE(s){return{all:s=s||new Map,on:function(a,n){var i=s.get(a);i?i.push(n):s.set(a,[n])},off:function(a,n){var i=s.get(a);i&&(n?i.splice(i.indexOf(n)>>>0,1):s.set(a,[]))},emit:function(a,n){var i=s.get(a);i&&i.slice().map(function(e){e(n)}),(i=s.get("*"))&&i.slice().map(function(e){e(a,n)})}}}const EE=()=>{navigator.serviceWorker.getRegistration().then(s=>{s&&s.active&&(s==null||s.addEventListener("updatefound",()=>{window.location.reload(!0)}))})},FE=async(s,a={},n=!0)=>{const{register:i}=await o(()=>import("./index-DTEEl-sV.js"),[]);i(s,{ready(e){var l;n&&console.info("[Service Worker]: active"),(l=a.ready)==null||l.call(a,e)},registered(e){var l;n&&console.log("[Service Worker]: registered"),(l=a.registered)==null||l.call(a,e)},cached(e){var l;n&&console.log("[Service Worker]: cached"),(l=a.cached)==null||l.call(a,e)},async updatefound(e){var l;await navigator.serviceWorker.getRegistration()&&(n&&console.log("[Service Worker]: update found"),(l=a.updatefound)==null||l.call(a,e))},updated(e){var l;n&&console.log("[Service Worker]: updated"),(l=a.updated)==null||l.call(a,e)},offline(){var e;n&&console.log("[Service Worker]: offline"),(e=a.offline)==null||e.call(a)},error(e){var l;n&&console.error("[Service Worker]: ",e),(l=a.error)==null||l.call(a,e)}})},CE=s=>{const a=s.waiting;if(!a)return;const n=new MessageChannel;a.postMessage({type:"SKIP_WAITING"},[n.port2])},Dh=Symbol(""),gE=()=>{const s=Fs(Dh);if(!s)throw new Error("usePwaEvent() is called without provider.");return s},bE=async(s,a)=>FE(_s(s),{ready(n){a.emit("ready",n)},registered(n){a.emit("registered",n)},cached(n){a.emit("cached",n)},updatefound(n){a.emit("updatefound",n)},updated(n){const i="service-worker-version",e=Number(localStorage.getItem(i)||0);localStorage.setItem(i,(e+1).toString()),localStorage.removeItem("manifest"),a.emit("updated",n)},offline(){a.emit("offline")},error(n){a.emit("error",n)}}),fE=(s,a=!1)=>{const n=mE();ja(Dh,n),as(async()=>{var e;let i=!1;(e=navigator.serviceWorker)!=null&&e.controller&&navigator.serviceWorker.addEventListener("controllerchange",()=>{i||(i=!0,window.location.reload())}),a&&EE(),await bE(s,n)})},DE=()=>{as(()=>{if(window.matchMedia("(display-mode: standalone)").matches){const a=document.head.querySelector('meta[name="viewport"]');if(a){a.setAttribute("content","width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, viewport-fit=cover");return}const n=document.createElement("meta");n.name="viewport",n.content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, viewport-fit=cover",document.head.appendChild(n)}})},_h=({name:s="",color:a="currentColor"},{slots:n})=>{var i;return d("svg",{xmlns:"http://www.w3.org/2000/svg",class:["icon",`${s}-icon`],viewBox:"0 0 1024 1024",fill:a,"aria-label":`${s} icon`},(i=n.default)==null?void 0:i.call(n))};_h.displayName="SVGWrapper";const Sh=()=>d(_h,{name:"update"},()=>d("path",{d:"M949.949 146.25v255.826c0 21.981-13.989 35.97-35.97 35.97H658.154c-13.988 0-25.983-7.992-33.973-21.981-5.997-13.989-4-27.977 7.991-39.97l79.942-77.946c-55.954-51.973-121.918-77.955-199.863-77.955-37.975 0-75.95 8.002-113.924 21.99-37.975 15.985-67.948 37.976-91.934 63.957-25.982 23.987-47.973 53.96-63.957 91.934-29.983 73.955-29.983 153.895 0 227.85 15.984 37.976 37.975 67.947 63.957 91.934 23.986 25.982 53.959 47.973 91.934 63.956 37.974 13.989 75.95 21.991 113.924 21.991 45.967 0 87.942-9.998 127.913-29.982 41.976-17.99 75.951-45.967 101.931-83.943 7.993-4 11.994-5.995 13.989-5.995 5.997 0 9.998 1.994 13.988 5.995l77.958 77.946c3.989 4 5.986 7.993 5.986 11.994 0 1.994-1.996 5.995-3.99 11.994-43.973 51.962-93.941 91.934-151.9 117.914-53.958 25.983-115.92 39.972-185.874 39.972-61.961 0-119.921-11.984-169.89-33.973-57.96-25.985-105.923-57.963-139.896-93.943-35.98-33.972-67.958-81.936-93.94-139.897-45.967-101.93-45.967-237.846 0-339.777 25.982-57.96 57.96-105.923 93.94-139.896 33.973-35.98 81.936-67.958 139.896-93.94 49.968-21.99 107.928-33.974 169.89-33.974 55.963 0 109.923 9.988 161.885 29.973 53.97 21.99 101.933 51.963 139.908 89.938l73.954-73.944c9.987-9.998 23.987-13.988 39.971-8.002 13.988 8.002 21.98 19.995 21.98 33.984z"}));Sh.displayName="UpdateIcon";const _E=L({name:"PwaReadyPopup",props:{locales:{type:Object,required:!0}},slots:Object,setup(s,{slots:a}){const n=ii(s.locales),i=ms(),e=g(()=>!!i.value),l=()=>{i.value&&(CE(i.value),i.value=void 0)};return as(()=>{gE().on("updated",r=>{r&&(i.value=r)})}),()=>d(bi,{name:"popup"},()=>{var t;return((t=a.default)==null?void 0:t.call(a,{isReady:e.value,reload:l}))||(e.value?d("button",{type:"button",class:"sw-update-popup",tabindex:0,onClick:()=>l()},[n.value.update,d("span",{class:"icon-wrapper"},d(Sh))]):null)})}});var SE={"/":{install:"安装",iOSInstall:"点击分享按钮然后点击“添加到主屏幕”",cancel:"取消",close:"关闭",prevImage:"上一张图片",nextImage:"下一张图片",desc:"详情",feature:"主要特色",explain:"该应用可以安装在你的 PC 或移动设备上。这将使该 Web 应用程序外观和行为与其他应用程序相同。它将在出现在应用程序列表中，并可以固定到主屏幕，开始菜单或任务栏。此 Web 应用程序还将能够与其他应用程序和你的操作系统安全地进行交互。",hint:"发现新内容可用",update:"新内容已就绪"}};const wE=SE,xE=()=>d(_E,{locales:wE}),LE=zs({setup:()=>{fE("service-worker.js",!1),DE()},rootComponents:[xE]}),TE=Object.freeze(Object.defineProperty({__proto__:null,default:LE},Symbol.toStringTag,{value:"Module"})),Ys=s=>{const{icon:a="",color:n,size:i}=s,e=n||i?{}:null;return n&&(e.color=n),i&&(e.height=Number.isNaN(Number(i))?i:`${i}px`),ni(a)?d("img",{class:"icon",src:a,alt:"","no-view":"",style:e}):_t(a)?d("img",{class:"icon",src:_s(a),alt:"","aria-hidden":"","no-view":"",style:e}):d(wa("FontIcon"),s)};Ys.displayName="HopeIcon";const wh=()=>{const s=Bs();return g(()=>s.value.author)},OE="http://.",_i=()=>{const s=Fa(),a=Ta();return n=>{if(n)if(_t(n))a.path!==n&&s.push(n);else if(tl(n))window&&window.open(n);else{const i=a.path.slice(0,a.path.lastIndexOf("/"));s.push(new URL(`${i}/${encodeURI(n)}`,OE).pathname)}}},xh=()=>{const s=gs();return g(()=>s.value.readingTime??null)},Lh=(s,a)=>{const{minutes:n,words:i}=s,{less1Minute:e,word:l,time:t}=a;return{time:n<1?e:t.replace("$time",Math.round(n).toString()),words:l.replace("$word",i.toString())}};var Vc={"/":{word:"约 $word 字",less1Minute:"小于 1 分钟",time:"大约 $time 分钟"}};const zc={words:"",time:""},Hr=typeof Vc>"u"?null:Vc,Th=()=>Hr?ii(Hr):g(()=>null),JE=()=>{if(typeof Hr>"u")return g(()=>zc);const s=xh(),a=Th();return g(()=>s.value&&a.value?Lh(s.value,a.value):zc)},hn=()=>rh(),Bs=()=>Fv(),Oh=()=>{const s=ks(),a=wh();return g(()=>{const{author:n}=s.value;return n?$e(n):n===!1?[]:$e(a.value,!1)})},IE=()=>{const s=ks(),a=Fs(Symbol.for("categoryMap"));return g(()=>ah(s.value.category??s.value.categories).map(n=>{var i;return{name:n,path:((i=a==null?void 0:a.value.map[n])==null?void 0:i.path)??""}}))},PE=()=>{const s=ks(),a=Fs(Symbol.for("tagMap"));return g(()=>nh(s.value.tag??s.value.tags).map(n=>{var i;return{name:n,path:((i=a==null?void 0:a.value.map[n])==null?void 0:i.path)??""}}))},RE=()=>{const s=ks(),a=gs();return g(()=>{const n=Vo(s.value.date);if(n)return n;const{createdTime:i}=a.value.git??{};return i?new Date(i):null})},ME=()=>{const s=Bs(),a=gs(),n=ks(),i=Oh(),e=IE(),l=PE(),t=RE(),r=xh(),p=JE(),c=g(()=>({author:i.value,category:e.value,date:t.value,localizedDate:a.value.localizedDate,tag:l.value,isOriginal:n.value.isOriginal??!1,readingTime:r.value,readingTimeLocale:p.value,pageview:n.value.pageview??!0})),B=g(()=>n.value.pageInfo??s.value.pageInfo??null);return{info:c,items:B}},la=()=>{const s=hn();return g(()=>!!s.value.pure)},jE="719px",qE="1440px",VE="true",zE="9",ti={mobileBreakPoint:jE,pcBreakPoint:qE,enableThemeColor:VE,"theme-1":"#2196f3","theme-2":"#f26d6d","theme-3":"#3eaf7c","theme-4":"#fb9b5f",colorNumber:zE},{mobileBreakPoint:NE,pcBreakPoint:HE}=ti,Nc=s=>s.endsWith("px")?Number(s.slice(0,-2)):null,Si=()=>{const s=M(!1),a=M(!1),n=()=>{s.value=window.innerWidth<=(Nc(NE)??719),a.value=window.innerWidth>=(Nc(HE)??1440)};return xs("resize",n,!1),xs("orientationchange",n,!1),as(()=>{n()}),{isMobile:s,isPC:a}},Jh=Symbol(""),wi=()=>{const s=Fs(Jh);if(!s)throw new Error("useDarkmode() is called without provider.");return s},UE=s=>{const a=hn(),n=L0(),i=g(()=>a.value.darkmode??"switch"),e=oe("vuepress-theme-hope-scheme","auto"),l=g(()=>{const r=i.value;return r==="disable"?!1:r==="enable"?!0:r==="auto"?n.value:r==="toggle"?e.value==="dark":e.value==="dark"||e.value==="auto"&&n.value}),t=g(()=>{const r=i.value;return r==="switch"||r==="toggle"});s.provide(Jh,{canToggle:t,config:i,isDarkmode:l,status:e}),Object.defineProperties(s.config.globalProperties,{$isDarkmode:{get:()=>l.value}})},$E=()=>{const{config:s,isDarkmode:a,status:n}=wi();To(()=>{s.value==="disable"?n.value="light":s.value==="enable"?n.value="dark":s.value==="toggle"&&n.value==="auto"&&(n.value="light")}),as(()=>{os(a,i=>document.documentElement.setAttribute("data-theme",i?"dark":"light"),{immediate:!0})})},Qe=(s,a,n=!1)=>"activeMatch"in a?new RegExp(a.activeMatch,"u").test(s.path):Yk(s,a.link)?!0:"children"in a&&!n?a.children.some(i=>Qe(s,i)):!1,Ih=(s,a)=>a.type==="group"?!!(a.prefix&&Yk(s,a.prefix))||a.children.some(n=>n.type==="group"?Ih(s,n):n.type==="page"&&Qe(s,n,!0)):!1,Xo={"/demo/":["markdown"],"/site":["public-api","design","/site/Q_A.html"],"/private/":["一人一句宋词"],"/posts/Linux/":["linux-k-awk","linux-z-view-ip","linux-y-firewalld","linux-k-cut","linux-x-find","linux-j-cpu","linux-z-swap","linux-k-grep","linux-x-locate","linux-x-whereis","linux-x-which","linux-x-find-overview","linux-j-mem","linux-z-tldr","linux-k-compress","linux-k-txt-overview","linux-y-cpu-top","linux-j-load","linux-j-disk","linux-j-all-tools","linux-j-monitor-overview","linux-j-net","linux-j-ps","linux-k-sed","linux-a-shell","linux-k-sort","linux-k-uniq","unix-linux-note","linux-k-wc","linux-y-ftp-install","zsh","linux-y-pid-localtion","iterm2-pure"],"/posts/Python/":["python-beautiful-soup-started","python-lxml","python-advantage","python-db-ddl","python-12306-coty-code","python-baotu","python-tieba","python-maimai","python-douban-rating","python-x-xpath","python-x-anaconda","python-scrapy-started","python-scrapy-debugging-spiders","python-scrapy-douban-top250","python-scrapy-ajax","python-selenium-started","python-wordcloud","python-sms","python-proxy"],"/posts/Web/":[{text:"前端基础",prefix:"frontend-base/",collapsible:!0,icon:"html",children:["fe-iframe","fe-js-export","fe-npmrun-postcss","npm-manage","vue-adapter","fe-font-size-line-bottom","fe-download","fe-editor-config","fe-vue-route-lazy-loading","fe-gzip"]},{text:"CSS",prefix:"frontend-css/",collapsible:!0,icon:"css",children:["css-calc","css-lamination","css-box-sizing","css-ellipsis","css-attr-priority","css-backgroud","css-sass-started","css-tailwind-css"]},{text:"JavaScript",prefix:"frontend-js/",collapsible:!0,icon:"javascript",children:["AJAX","JavaScript基础","JavaScript高级","JQuery"]},{text:"Layout",prefix:"frontend-layout/",collapsible:!0,icon:"layout",children:["layout-horizontal-center","flex-layout-overview","layout-fixed-bottom-bar","flex-grail-layout","flex-suspended-layout","flex-streaming-layout-example","flex-grid-layout","flex-layout-of-input-box","layout-flex-layout-example","layout-vertical-center"]},{text:"第三方依赖",prefix:"frontend-lib/",collapsible:!0,icon:"plugin",children:["fe-lib-vue-preview-pdf","fe-lib-caniuse","fe-lib-element-teasing","element-upload","fe-lib-form-generator","fe-lib-md5","fe-lib-lodash","fe-lib-media-recorde","vue-moment-time-format","fe-lib-uniapp-rich-text-adapter","element-admin-started","fe-lib-print","fe-lib-eslint","fe-lib-cross-domain","fe-lib-third-party-dependency","fe-lib-resource-website","fe-lib-element-online-icon-garbled"]},{text:"Vue",prefix:"frontend-vue/",collapsible:!0,icon:"vue",children:["vue-axios","vuerouter-dynamic-route-matching","vuerouter-route-jump","Vue和Element","Vue和综合案例","vue-introduce-picture-path","vuerouter-overview","vuex-overview","vuex-action","vue-component-communication","vue-watch","vue-deploy","vuerouter-history","vue-x-lib-package","vue-back-top","vue-online-compress","vue-v-for","vue-plugin","vue-page-no-updates","vue-shake-instructions","vue-filter"]},{text:"遇到的问题",prefix:"frontend-problem/",collapsible:!0,icon:"question",children:["fe-npm-err-code-eresolve","fe-request-localhost"]}],"/site/":["public-api","design","/site/Q_A.html"],"/blog":["","jekyll","waline-mail","disqus","auto-push"],"/tutorial":[],"/posts/Computer-Basics/":[{text:"计算机操作系统",prefix:"Operating-System/",collapsible:!0,icon:"windows",children:["计算机操作系统","第一章 操作系统引论","第二章 进程的描述与控制","第三章 处理机调度与死锁","第四章 存储器管理","第五章 虚拟存储器","第六章 输入输出系统","第七章 文件管理"]},{text:"计算机网络",prefix:"Computer-Network/",collapsible:!0,icon:"network",children:["第 1 章   概述","第 2 章  物理层","第 3 章  数据链路层","第 4 章  网络层","第 5 章  运输层","第 6 章  应用层"]},{text:"计算机组成原理",prefix:"Computer-Composition/",collapsible:!0,icon:"grid",children:["计算机组成"]}],"/posts/Data-Structure/":[{text:"数据结构",prefix:"Structure/",collapsible:!0,icon:"table",children:["数据结构","数据结构2"]},{text:"算法",prefix:"Algorithm/",collapsible:!0,icon:"flow",children:[]}],"/posts/Database/":[{text:"MySQL",prefix:"MySQL/",collapsible:!0,icon:"mysql",children:["MySQL基础-01","MySQL进阶-02","MySQL高级-03","MySQL高级-04","sql-mysql-overview","sql-mysql-theory","sql-mysql-engine","mysql-c-index-btree","sql-mysql-transaction","sql-mysql-transaction-interview","sql-mysql-b-tree","sql-mysql-cover-index","sql-mysql-performance","mysql-x-optimize-slow02","mysql-x-optimize-explain","mysql-x-optimize-slow","sql-mysql-devide","mysql-x-sharding-detail","mysql-x-sharding-interview","sql-mysql-b-log","sql-mysql-slave","sql-mysql-high-availability","sql-mysql-mha","mysql-y-lock-mvvc","mysql-x-optimize-execute","mysql-x-specification","mysql-x-backup","mysql-x-slowlog","sql-mysql-character-set","数据库","数据库绪论","数据库设计","关系模型","关系代数","关系数据库设计理论","数据库语言SQL","并发控制","查询优化","完整性约束","数据库恢复技术","SQL-窗口函数","SQL窗口函数（二）","全链路数仓之-DataX","sql-x-basic","sql-x-leetcode","sql-x-optimization","sql-x-practice","mysql-x-optimize-like","mysql-y-statistics-group","mysql-y-lock-category","mysql-x-optimize-sql","mysql-x-optimize-decompose-connection","mysql-x-optimize-bigtable","mysql-x-optimize-bigtable-action","mysql-x-optimize-slow2","mysql-z-backup","mysql-c-index","mysql-c-index-impl","mysql-c-index-structure","mysql-c-index-uni","mysql-c-index-right","mysql-y-lock-overview","mysql-y-lock"]},{text:"达梦数据库",prefix:"DM/",collapsible:!0,icon:"mysql",children:["dm-problem-contection","dm-operation-dmrman","dm-operation-create-user","dm-problem-keys-domain","dm-problem-schema","dm-operation-console","dm-operation-config-helper","dm-manage-sql","dm-operation-dts"]},{text:"ElasticSearch",prefix:"ES/",collapsible:!0,icon:"mysql",children:["elasticsearch-x-introduce-1","elasticsearch-x-introduce-2","elasticsearch-install","elasticsearch-field-type","elasticsearch-x-usage","elasticsearch-x-index-mapping","elasticsearch-x-index-template","elasticsearch-x-dsl","elasticsearch-x-dsl-full-text","elasticsearch-x-dsl-term","elasticsearch-x-agg-bucket","elasticsearch-x-agg-metric","elasticsearch-x-agg-pipeline","elasticsearch-y-peformance","elasticsearch-y-th-1","elasticsearch-y-th-2","elasticsearch-y-th-3","elasticsearch-y-th-4","elasticsearch-kibana-kql","elasticsearch-filebeat","elasticsearch-easy-es","elasticsearch-interview-base","elasticsearch-interview-scene","elasticsearch-started","elasticsearch-action-goods-search","elasticsearch-demo","elasticsearch-vs-solr"]},{text:"MongoDB",prefix:"MongoDB/",collapsible:!0,icon:"mysql",children:["mongo-x-overview","mongo-x-basic","mongo-x-usage-1","mongo-x-usage-2","mongo-x-usage-4","mongo-x-usage-5","mongo-y-arch","mongo-y-introduce","mongo-y-ds","mongo-y-page","mongodb-problem-repair","mongodb-started","mongodb-action-multiple-datasources","mongodb-problem-slow","mongodb-backup","mongodb-backup-import","mongodb-index-overview","mongodb-action-cursor","mongodb-action-template-repository","mongodb-action-base","mongodb-action-query","mongodb-action-custom-query","mongodb-action-bluk-operation","mongodb-x-sql-mongo-overview","mongodb-x-sql-mongo-aggregation"]},{text:"Solr",prefix:"SOLR/",collapsible:!0,icon:"mysql",children:["solr-b-scheme-config","solr-z-think","solr-b-index","solr-a-satrted","solr-i-highlight","solr-i-multi-field","solr-y-action-product-search","solr-i-case","solr-i-special-characters","solr-b-query-parsing","solr-a-query-ui","solr-j-ext","solr-j-ik-analyzer","solr-b-highlight"]},{text:"Oracle",prefix:"ORACLE/",collapsible:!0,icon:"mysql",children:["oracle-c-function-to-date","oracle-b-sequence","oracle-z-docker-install","oracle-c-function-overview","oracle-y-partition-query","oracle-i-notlike","oracle-c-function-custom","oracle-c-function-greatest","oracle-c-function-round","oracle-y-partition-create","oracle-y-partition-overview","oracle-i-split","oracle-c-function-concat","oracle-y-backup-dmp","oracle-y-non-exist-create","oracle-c-function-string"]}],"/posts/Docker/":["docker-compose-overview","docker-file-overview","docker-action","docker-07-network","docker-06-data","docker-03-basic-web-app","docker-basic-overview","docker-y-manage-portainer","持续集成与容器管理","docker-y-one-key-deploy"],"/posts/Git/":["git-x-merge","git-x-gitignore","gitlab-x-runner-action","gitlab-x-runner-install","gitlab-x-memory-size","gitlab-x-install","gitlab-x-custom-hook","git-x-gitflow","git-y-delete-error-commit-file","/posts/Git/gitlab-x_problem.html"],"/posts/Redis/":["db-redis-introduce","db-redis-data-types","db-redis-data-type-special","db-redis-data-type-stream","db-redis-x-redis-object","db-redis-x-rdb-aof","db-redis-x-pub-sub","db-redis-x-event","db-redis-x-trans","db-redis-x-copy","db-redis-y-install-sentinel","db-redis-x-cluster","db-redis-x-consistency","db-redis-x-cache","db-redis-x-hot-key","db-redis-x-performance","redis-z-interview-overview","redis-z-interview-overview-detail","redis-z-interview-basic","redis-z-interview-datatype","redis-z-interview-persistence","redis-z-interview-tran","redis-z-interview-master-salve","redis-z-interview-sentinel","redis-z-interview-apply","redis-z-interview-cluster","redis-z-interview-new","redis-z-interview-other","redis-x-question-double-write","db-redis-y-install","redis-y-action-bloom","redis-x-cache-penetration","redis-x-question-ache-valanche","redis-x-questuin-cache-warm-up","redis-y-action-client","db-redis-hash","redis-x-sentinel-install","redis-y-action-springboot","redis-y-action","redis-x-quest-key","db-redis-y-install-remote","redis-y-action-gen-test-data","第一章 Redis基础","第二章 Redis高级"],"/posts/Java/":[{text:"Java基础",prefix:"Java基础/",collapsible:!0,children:["day01-java基础语法","day02-Java基础语法","/posts/Java/Java%E5%9F%BA%E7%A1%80/day03-Switch_%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5.html","/posts/Java/Java%E5%9F%BA%E7%A1%80/day04-IDEA_%E6%95%B0%E7%BB%84.html","day05-方法","/posts/Java/Java%E5%9F%BA%E7%A1%80/day06-Debug_%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0.html","day07-面向对象","day08-常用API","/posts/Java/Java%E5%9F%BA%E7%A1%80/day09-ArrayList%E9%9B%86%E5%90%88_%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F.html","Java-basis-oop","day10-分类和static","day11-继承","day12-接口和内部类","day13-常用API","day14-常用API","day15-基础加强","day16-基础加强","day17-基础加强","java-basic-lan-basic","java-basic-lan-sum","java-basic-x-generic","java-basic-x-annotation","java-basic-x-exception","java-basic-x-reflection","java-advanced-spi","java-basic-keywords"]},{text:"Java集合",prefix:"Java集合/",collapsible:!0,children:["java-collection-overview","java-collection-ArrayList","java-collection-LinkedList","/posts/Java/Java%E9%9B%86%E5%90%88/java-collection-Queue_Stack.html","/posts/Java/Java%E9%9B%86%E5%90%88/java-map-HashMap_HashSet.html","java-map-HashMap-interview","/posts/Java/Java%E9%9B%86%E5%90%88/java-map-TreeMap_TreeSet.html","comparable-comparator","hashmap-problem","arraylist-expansion","day01-集合01","day03-集合03","day02-集合02"]},{text:"JavaWeb",prefix:"JavaWeb/",collapsible:!0,children:["/posts/Java/JavaWeb/Tomcat_Http%E5%8D%8F%E8%AE%AE.html","Servlet","/posts/Java/JavaWeb/Request_Response.html","/posts/Java/JavaWeb/Cookie_SessionJsp.html","/posts/Java/JavaWeb/EL_Filter_Listener.html","day01-网络编程"]},{text:"Java IO",prefix:"JavaIO/",collapsible:!0,children:["java-io-overview","java-io-basic-category","java-io-basic-design-pattern","java-io-basic-code-inputstream","java-io-basic-code-outputstream","java-io-basic-usage","java-io-model","java-io-bio","java-io-nio","java-io-nio-select-epoll","java-io-aio","java-io-nio-netty","java-io-file","java-io-steam"]},{text:"Java JVM",prefix:"JavaJVM/",collapsible:!0,children:["jvm-overview","java-jvm-class","java-jvm-class-enhancer","java-jvm-classload","java-jvm-struct","java-jvm-heap-s","java-jvm-x-introduce","java-jvm-jmm","java-jvm-gc","java-jvm-gc-g1","java-jvm-gc-g1-supplement","java-jvm-cms-gc","java-jvm-param","java-jvm-oom","java-jvm-oom-offheap","java-jvm-thread-dump","java-jvm-oom-tool","java-jvm-agent-arthas","java-jvm-agent-arthas-problem","java-jvm-debug-idea","java-jvm-agent-usage","java-thread-x-lock-ReentrantLock","java-jvm-gc-help","java-jvm-gc-log","java-jvm-optimization-size","java-jvm-gc-adapter","java-jvm-tools-overview","java-jvm-optimization-jstack","java-jvm-gc-dispatch","java-jvm-tools-visualvm","java-jvm-tools-mat-use","java-jvm-tools-mat","java-jvm-tools-mat-shallow","java-jvm-classload-tomcat","java-jvm-gc-overview","java-jvm-gc-orth","java-jvm-optimization","java-jvm-gc-object-die","java-jvm-classload1","java-jvm-classload-interview","jvm","java-jvm-classload-simplify","java-jvm-gc-fullgc","java-jvm-tools-mat-peoject","java-jvm-debug-tools-linux","java-jvm-debug-tools-list"]},{text:"Java8特性",prefix:"Java8特性/",collapsible:!0,children:["java8-lambda","java8-func-interface","java8-optional","java8-default","Java8-LocalDate-LocalDateTime","java8-permgen","Java8-Other"]},{text:"Java多线程",prefix:"Java多线程/",collapsible:!0,children:["java-thread-x-theorty","java-thread-x-thread-basic","java-thread-y-all-lock","java-thread-y-threadlocal","java-thread-y-threadlocal-interview","java-thread-y-thread-communication","java-thread-y-async","java-thread-x-key-synchronized","java-thread-x-key-volatile","java-thread-x-key-final","java-thread-x-juc-AtomicInteger","java-thread-x-lock-LockSupport-source","java-thread-x-lock-LockSupport","java-thread-x-lock-AbstractQueuedSynchronizer","java-thread-x-lock-ReentrantLock","java-thread-x-juc-collection-BlockingQueue","java-thread-x-juc-executor-ThreadPoolExecutor","java-thread-x-juc-executor-ScheduledThreadPoolExecutor","java-thread-x-juc-tool-countdownlatch","java-thread-x-juc-executor-FutureTask","java-thread-x-juc-tool-CompletableFuture","java-thread-y-atomic","java-thread-y-cas","java-thread-y-threadpool-executors-create","java-thread-x-jmm","java-thread-y-spinlock","java-thread-x-lock-reentrantlock-condition-source","java-thread-x-lock-reentrantlock-array-blocking-queue","java-thread-x-lock-reentrantlock-source","java-thread-x-lock-reentrantlock-source3","java-thread-x-lock-reentrantlock-source2","java-thread-x-lock-reentrantlock-back","java-thread-x-key-synchronized2","java-thread-x-key-synchronized-principle","java-thread-y-threadlocal2","java-thread-y-threadlocal-leak","java-thread-y-threadlocal-scene","java-thread-y-threadpoolexecutor","java-thread-y-threadpool-task-executor","java-thread-x-key-volatile-old","java-thread-y-optimistic-lock","java-thread-y-atomicinteger-source","java-thread-y-threadpool-data","day01-多线程","java-thread-y-base","java-thread-y-deadlock","java-thread-y-threadpool-size","java-thread-y-deadlock2","java-thread-y-atomicstampedreference-source","day02-多线程","java-thread-y-threadpool","java-thread-y-threadpool-example","java-thread-y-threadpool-create","java-thread-y-threadpool-finish","java-thread-y-threadpool-principle","java-thread-y-threadpool-handler","java-thread-y-cycle","java-thread-y-thread-notify"]},{text:"Java框架",prefix:"Java框架/",collapsible:!0,children:[{text:"Spring",prefix:"Spring/",collapsible:!0,children:["spring-overview","spring-x-framework-helloworld","spring-x-framework-ioc","spring-x-framework-aop","spring-x-framework-springmvc","spring-x-framework-ioc-source-1","spring-x-framework-ioc-source-3","spring-x-framework-ioc-source-31","spring-x-cyclic-dependence","spring-x-ioc-init","spring-x-framework-aop-source-1","spring-x-framework-aop-source-2","spring-x-framework-aop-source-3","spring-x-framework-aop-source-4","spring-x-framework-springmvc-source-1","spring-x-framework-springmvc-source-2","spring-x-framework-transaction","spring-x-framework-transaction-invalid","spring-y-action-filter","spring-y-annotation-configuration","spring-y-transactional-fail","Spring-day03","spring-y-aop-repeat-submit","spring-y-aop-log","spring-y-aop-limit","spring-y-mvc-restful","spring-y-aop-impl","spring-y-ioc-bean","spring-y-ioc-problem","spring-day04","spring-y-ioc-config-bean","Spring-day01","spring-y-aop-overview","spring-y-resttemplate","spring-y-mvc-interview","spring-y-mvc-interceptor","spring-y-transactional","spring-x-framework-ioc-source-2","spring-y-ioc-cyclic-dependence","spring-y-problem-master-list","spring-y-filter-interceptor","Spring-day02"]},{text:"SpringMVC",prefix:"SpringMVC/",collapsible:!0,children:["day01","day02","day03"]},{text:"SpringBoot",prefix:"SpringBoot/",collapsible:!0,children:["springboot-x-overview","springboot-x-annotation-springboot-annotation","springboot-x-start-up","springboot-y-source-autoconfig","springboot-y-source-tomcat","springboot-x-interface-version","springboot-y-file-upload-download","springboot-y-file-bigfile-upload","springboot-x-hello-devtool","springboot-x-deploy-jar-3rd","springboot-y-monitor-acturator","springboot-y-monitor-admin","springboot-y-monitor-admin-use","springboot-y-annotation-conditional","springboot-y-annotation-enable","Springboot","SpringBoot基础","springboot-y-annotation-enable-import","SpringBoot高级","springboot-y-permission-whitelist","springboot-y-source-kotlin","springboot-y-source-module","springboot-y-source-main","springboot-y-source-import","springboot-y-costom-springboot-starter"]},{text:"Maven",prefix:"Maven/",collapsible:!0,children:["Maven高级"]}]},{text:"Java第三方依赖",prefix:"Java第三方依赖/",collapsible:!0,children:[{text:"数据库管理-Sharding-JDBC",prefix:"shardingsphere/",collapsible:!0,children:["sharding-jdbc-x-sub-database-sub-table","sharding-jdbc-x-sub-table","sharding-jdbc-x-tenant","sharding-jdbc-x-jpa-read-write"]},{text:"Api Doc",prefix:"api-doc/",collapsible:!0,children:["swagger-x-module","swagger-x-use"]},{text:"Cas",prefix:"cas/",collapsible:!0,children:["cas-x-overview","cas-x-process","cas-x-springboot","cas-x-logout-process","cas-x-logout"]},{text:"Database Connection Pool",prefix:"database-connection-pool/",collapsible:!0,children:["dbcp-x-druid-mutil","dbcp-y-druid-source-data-structure","dbcp-y-druid-source-recycle","dbcp-y-druid-source-principle","dbcp-ydruid-source-status","dbcp-y-druid-source-shrink","dbcp-y-druid-source-removeAbandoned","dbcp-y-druid-source-psp","dbcp-y-druid-source-counter","dbcp-y-druid-source-getconnection","dbcp-y-druid-source-init","dbcp-x-druid-overview","dbcp-a-principle"]},{text:"Hibernate",prefix:"hibernate/",collapsible:!0,children:["hibernate-x-entity","hibernate-x-overview","hibernate-x-query","hibernate-y-maven-example"]},{text:"Jdbc",prefix:"jdbc/",collapsible:!0,children:["JDBC-01","JDBC-02"]},{text:"Jpa",prefix:"jpa/",collapsible:!0,children:["jpa-i-dynamic","jpa-k-gen-entity","jpa-j-multi-delete","jpa-i-genone-findone","jpa-y-like","jpa-k-mutil-ds","jpa-i-query-overview","jpa-y-field","jpa-y-case","jpa-j-join","jpa-y-genone-error","jpa-i-specification"]},{text:"Mybatis",prefix:"mybatis/",collapsible:!0,children:["mybatis-y-arch","mybatis-y-init","mybatis-y-config-load","mybatis-y-config-list","mybatis-y-config-mapper","mybatis-y-sql-exec","mybatis-y-dynamic-sql","mybatis-y-plugin","mybatis-y-plugin-page","mybatis-y-datasource","mybatis-y-trans","mybatis-y-cache-level1","mybatis-y-cache-level2","mybatis-z-injection","mybatis-i-pagehelper","mybatis-z-pageHelper-source","mybatis-z-one-more-temp","mybatis-z-if-number","mybatis-z-one-more-join","mybatis-z-base-opera","mybatis-day01","mybatis-i-overview","mybatis-day03","mybatis-i-anotation","mybatis-z-batch-opera","mybatis-z-adapter-db","mybatis-day02"]},{text:"Mybatis Plus",prefix:"mybatis-plus/",collapsible:!0,children:["mybatis-plus-x-mysql","mybatis-plus-x-gen-code","mybatis-plus-x-tenant"]},{text:"Qr",prefix:"qr/",collapsible:!0,children:["qr-x-gen-qr","qr-x-zxing-garbled-code","qr-x-zxing-white-lace"]},{text:"Timer",prefix:"timer/",collapsible:!0,children:["springboot-x-task-timer","springboot-x-task-executor-timer","springboot-x-task-spring-task-timer","springboot-x-task-quartz-timer","quartz-x-started","quartz-x-overview","quartz-x-principle","springboot-x-task-elastic-job-timer","springboot-x-task-quartz-cluster-timer","springboot-x-task-xxl-job-timer"]}]},{text:"Java编译",prefix:"Java编译/",collapsible:!0,children:["java-command-javap","java-command-overview","java-command-javac"]}]},QE=(s,a)=>{const n=s.replace(a,"/").split("/"),i=[];let e=Et(a);return n.forEach((l,t)=>{t!==n.length-1?(e+=`${l}/`,i.push({link:e,name:l||"Home"})):l!==""&&(e+=l,i.push({link:e,name:l}))}),i},Ur=s=>!Io(s)&&!tl(s);let cr=null,Ee=null;const $r={wait:()=>cr,pending:()=>{cr=new Promise(s=>{Ee=s})},resolve:()=>{Ee==null||Ee(),cr=null,Ee=null}};var ea;(function(s){s.title="t",s.shortTitle="s",s.icon="i",s.index="I",s.order="O",s.breadcrumbExclude="b"})(ea||(ea={}));var Xs;(function(s){s.type="y",s.author="a",s.date="d",s.localizedDate="l",s.category="c",s.tag="g",s.isEncrypted="n",s.isOriginal="o",s.readingTime="r",s.excerpt="e",s.sticky="u",s.cover="v"})(Xs||(Xs={}));var Qr;(function(s){s.article="a",s.home="h",s.slide="s",s.page="p"})(Qr||(Qr={}));const Yo=(s,a=!1,n)=>{const{meta:i,path:e,notFound:l}=kn(s,n);return l?{text:e,link:e}:{text:!a&&i[ea.shortTitle]?i[ea.shortTitle]:i[ea.title]||e,link:e,...i[ea.icon]?{icon:i[ea.icon]}:{}}},ki=(s="",a="")=>_t(a)||tl(a)?a:`${vk(s)}${a}`,Wr=({config:s,prefix:a=""})=>{const n=(i,e=a)=>{const l=Os(i)?Yo(ki(e,i)):i.link?{...i,link:Ur(i.link)?kn(ki(e,i.link)).path:i.link}:i;if("children"in l){const t=ki(e,l.prefix),r=l.children==="structure"?Xo[t]:l.children;return{type:"group",...l,prefix:t,children:r.map(p=>n(p,t))}}return{type:"page",...l}};return s.map(i=>n(i))},WE=({config:s,routePath:a,headerDepth:n})=>{const i=Va(s).sort((e,l)=>l.length-e.length);for(const e of i)if(Ne(decodeURI(a),e)){const l=s[e];return l?Wr({config:l==="structure"?Xo[e]:l,headerDepth:n,prefix:e}):[]}return console.warn(`${decodeURI(a)} is missing sidebar config.`),[]},GE=({config:s,headerDepth:a,routeLocale:n,routePath:i})=>s==="structure"?Wr({config:Xo[n],headerDepth:a,prefix:n}):et(s)?Wr({config:s,headerDepth:a}):Bn(s)?WE({config:s,routePath:i,headerDepth:a}):[],Ph=Symbol(""),KE=()=>{const s=ks(),a=Bs(),n=za(),i=IA(),e=g(()=>s.value.home?!1:s.value.sidebar??a.value.sidebar??"structure"),l=g(()=>s.value.headerDepth??a.value.headerDepth??2),t=g(()=>GE({config:e.value,headerDepth:l.value,routeLocale:n.value,routePath:i.value}));ja(Ph,t)},Zo=()=>{const s=Fs(Ph);if(!s)throw new Error("useSidebarItems() is called without provider.");return s};var Rh,zi,ln,Mh,dr,Hc,Oi,Ll=!1,Tl=[];typeof document<"u"&&(Mh=function(s){return Ll||document.readyState==="interactive"||document.readyState==="complete"?s.call(document):Tl.push(function(){return s.call(this)}),this},Hc=function(){for(var s=0,a=Tl.length;s<a;s++)Tl[s].apply(document);Tl=[]},Oi=function(){Ll||(Ll=!0,Hc.call(window),document.removeEventListener?document.removeEventListener("DOMContentLoaded",Oi,!1):document.attachEvent&&(document.detachEvent("onreadystatechange",Oi),window==window.top&&(clearInterval(dr),dr=null)))},document.addEventListener?document.addEventListener("DOMContentLoaded",Oi,!1):document.attachEvent&&(document.attachEvent("onreadystatechange",function(){/loaded|complete/.test(document.readyState)&&Oi()}),window==window.top&&(dr=setInterval(function(){try{Ll||document.documentElement.doScroll("left")}catch{return}Oi()},5))));Rh={fetch:function(s,a){var n="BusuanziCallback_"+Math.floor(1099511627776*Math.random());s=s.replace("=BusuanziCallback","="+n),ln=document.createElement("SCRIPT"),ln.type="text/javascript",ln.defer=!0,ln.src=s,document.getElementsByTagName("HEAD")[0].appendChild(ln),window[n]=this.evalCall(a)},evalCall:function(s){return function(a){Mh(function(){try{s(a),ln&&ln.parentElement&&ln.parentElement.removeChild&&ln.parentElement.removeChild(ln)}catch(n){console.log(n),zi.hides()}})}}};const jh=()=>{zi&&zi.hides(),Rh.fetch("//busuanzi.ibruce.info/busuanzi?jsonpCallback=BusuanziCallback",function(s){zi.texts(s),zi.shows()})};zi={bszs:["site_pv","page_pv","site_uv"],texts:function(s){this.bszs.map(function(a){var n=document.getElementById("busuanzi_value_"+a);a=="site_pv"?n&&(n.innerHTML=s[a]+15e3):a=="site_uv"?n&&(n.innerHTML=s[a]+11e3):n&&(n.innerHTML=s[a])})},hides:function(){this.bszs.map(function(s){var a=document.getElementById("busuanzi_container_"+s);a&&(a.style.display="none")})},shows:function(){this.bszs.map(function(s){var a=document.getElementById("busuanzi_container_"+s);a&&(a.style.display="inline")})}};typeof document<"u"&&jh();var XE={fetch:jh};const qh=()=>{const s=new Date("10/31/2020 10:00:00").toString();window.setTimeout(qh,1e3);const a=ZE(s),n=document.getElementById("runtime_span");n&&(n.innerHTML=`小破站已萌萌哒运行: ${a}`)},YE=s=>s%4===0&&s%100!==0||s%400===0,ZE=s=>{const a=new Date(s),n=new Date;let i=n.getFullYear()-a.getFullYear(),e=n.getMonth()-a.getMonth(),l=n.getDate()-a.getDate(),t=n.getHours()-a.getHours(),r=n.getMinutes()-a.getMinutes(),p=n.getSeconds()-a.getSeconds();p<0&&(p+=60,r--),r<0&&(r+=60,t--),t<0&&(t+=24,l--);let c=0;for(let B=a.getFullYear();B<=n.getFullYear();B++)YE(B)&&c++;if(l+=c,l<0){const B=n.getMonth()-1<0?11:n.getMonth()-1,k=new Date(n.getFullYear(),B+1,0).getDate();l+=k,e--}return e<0&&(e+=12,i--),`${i}年${e}个月${l}天${t}时${r}分${p}秒`},s1=L({__name:"PageFooter",setup(s,{expose:a}){a(),P6(y=>({"0dfcb062":k.value}));const n=wi(),i=g(()=>n.status.value=="dark"?"https://img.foreverblog.cn/wormhole_3.gif":"https://img.foreverblog.cn/wormhole_1.gif"),e=Fa();os(e.currentRoute,async(y,u)=>{y.path!=u.path&&XE.fetch()}),as(()=>{qh()});const l=ks(),t=Bs(),r=Oh(),p=g(()=>{const{copyright:y,footer:u}=l.value;return u!==!1&&!!(y||u||t.value.displayFooter)}),c=g(()=>{const{footer:y}=l.value;return y===!1?!1:Os(y)?y:t.value.footer||""}),B=g(()=>"copyright"in l.value?l.value.copyright:"copyright"in t.value?t.value.copyright:r.value.length?`Copyright © 2020-${new Date().getFullYear()} ${r.value[0].name}`:!1),k=M("");as(()=>{const y=window.localStorage.getItem("bgImage");k.value=`url(${y})`});const h={dartmode:n,wormhole:i,router:e,frontmatter:l,themeLocale:t,author:r,enable:p,content:c,copyright:B,bgImage:k};return Object.defineProperty(h,"__isScriptSetup",{enumerable:!1,value:!0}),h}}),xn=(s,a)=>{const n=s.__vccOpts||s;for(const[i,e]of a)n[i]=e;return n},a1={class:"footer-wrapper"},n1={class:"footer-content"},i1=["innerHTML"],e1={class:"copyright"},l1={class:"footer-link"},t1={href:"https://www.foreverblog.cn/go.html",target:"_blank"},r1=["src"];function o1(s,a,n,i,e,l){return Rs(),Ba("div",null,[Fu(Y("footer",a1,[a[1]||(a[1]=A6('<div class="busuanzi"><span id="busuanzi_container_site_pv" style="display:none;"> 本站总访问量 <span id="busuanzi_value_site_pv"></span>次 <span class="post-meta-divider">|</span></span><span id="busuanzi_container_site_uv" style="display:none;"> 您是本站第 <span id="busuanzi_value_site_uv"></span>位访问者 </span></div>',1)),Y("div",n1,[Y("div",{class:"footer",innerHTML:i.content},null,8,i1),Y("div",e1,Qn(i.copyright),1)]),a[2]||(a[2]=Y("span",{id:"runtime_span"},null,-1)),Y("div",l1,[Y("a",t1,[Y("img",{src:i.wormhole,alt:"",style:{width:"auto",height:"32px"},title:"穿梭虫洞-随机访问十年之约友链博客"},null,8,r1)]),a[0]||(a[0]=Y("a",{href:"https://www.travellings.cn/go.html",target:"_blank"},[Y("img",{src:"https://www.travellings.cn/assets/logo.gif",alt:"",style:{width:"auto",height:"32px"},title:"开往-友链接力"})],-1))])],512),[[I6,i.enable]])])}const p1=xn(s1,[["render",o1],["__file","PageFooter.vue"]]),Br=()=>null,va=L({name:"AutoLink",props:{config:{type:Object,required:!0}},emits:["focusout"],slots:Object,setup(s,{emit:a,slots:n}){return()=>{const{icon:i}=s.config;return d(qA,{...s,onFocusout:()=>a("focusout")},{default:n.default?()=>n.default():null,before:n.before?()=>n.before():i?()=>d(Ys,{icon:i}):null,after:n.after?()=>n.after():null})}}}),c1=L({name:"NavbarDropdown",props:{config:{type:Object,required:!0}},slots:Object,setup(s,{slots:a}){const n=gs(),i=Di(s,"config"),e=g(()=>i.value.ariaLabel??i.value.text),l=M(!1);os(()=>n.value.path,()=>{l.value=!1});const t=r=>{r.detail===0&&(l.value=!l.value)};return()=>{var r;return d("div",{class:["vp-dropdown-wrapper",{open:l.value}]},[d("button",{type:"button",class:"vp-dropdown-title","aria-label":e.value,onClick:t},[((r=a.title)==null?void 0:r.call(a))||[d(Ys,{icon:i.value.icon}),s.config.text],d("span",{class:"arrow"}),d("ul",{class:"vp-dropdown"},i.value.children.map((p,c)=>{const B=c===i.value.children.length-1;return d("li",{class:"vp-dropdown-item"},"children"in p?[d("h4",{class:"vp-dropdown-subtitle"},p.link?d(va,{config:p,onFocusout:()=>{p.children.length===0&&B&&(l.value=!1)}}):p.text),d("ul",{class:"vp-dropdown-subitems"},p.children.map((k,h)=>d("li",{class:"vp-dropdown-subitem"},d(va,{config:k,onFocusout:()=>{h===p.children.length-1&&B&&(l.value=!1)}}))))]:d(va,{config:p,onFocusout:()=>{B&&(l.value=!1)}}))}))])])}}}),Vh=(s,a="")=>Os(s)?Yo(ki(a,s)):"children"in s?{...s,...s.link&&Ur(s.link)?{link:kn(ki(a,s.link)).path}:{},children:s.children.map(n=>Vh(n,ki(a,s.prefix)))}:{...s,link:Ur(s.link)?kn(ki(a,s.link)).path:s.link},zh=()=>{const s=Bs();return g(()=>(s.value.navbar||[]).map(a=>Vh(a)))},d1=()=>{const s=Bs(),a=g(()=>s.value.repo),n=g(()=>a.value?j0(a.value):null),i=g(()=>a.value?Qo(a.value):null),e=g(()=>n.value?s.value.repoLabel??i.value??"Source":null);return g(()=>!n.value||!e.value||s.value.repoDisplay===!1?null:{type:i.value??"Source",label:e.value,link:n.value})},B1=L({name:"NavScreenMenu",props:{config:{type:Object,required:!0}},setup(s){const a=gs(),n=Di(s,"config"),i=g(()=>n.value.ariaLabel??n.value.text),e=M(!1);os(()=>a.value.path,()=>{e.value=!1});const l=(t,r)=>r[r.length-1]===t;return()=>[d("button",{type:"button",class:["vp-nav-screen-menu-title",{active:e.value}],"aria-label":i.value,onClick:()=>{e.value=!e.value}},[d("span",{class:"text"},[d(Ys,{icon:n.value.icon}),s.config.text]),d("span",{class:["arrow",e.value?"down":"end"]})]),d("ul",{class:["vp-nav-screen-menu",{hide:!e.value}]},n.value.children.map(t=>d("li",{class:"vp-nav-screen-menu-item"},"children"in t?[d("h4",{class:"vp-nav-screen-menu-subtitle"},t.link?d(va,{config:t,onFocusout:()=>{l(t,n.value.children)&&t.children.length===0&&(e.value=!1)}}):t.text),d("ul",{class:"vp-nav-screen-menu-subitems"},t.children.map(r=>d("li",{class:"vp-nav-screen-menu-subitem"},d(va,{config:r,onFocusout:()=>{l(r,t.children)&&l(t,n.value.children)&&(e.value=!1)}}))))]:d(va,{config:t,onFocusout:()=>{l(t,n.value.children)&&(e.value=!1)}}))))]}}),k1=L({name:"NavScreenLinks",setup(){const s=zh();return()=>s.value.length?d("nav",{class:"nav-screen-links"},s.value.map(a=>d("div",{class:"navbar-links-item"},"children"in a?d(B1,{config:a}):d(va,{config:a})))):null}}),Nh=()=>d(hs,{name:"dark"},()=>d("path",{d:"M524.8 938.667h-4.267a439.893 439.893 0 0 1-313.173-134.4 446.293 446.293 0 0 1-11.093-597.334A432.213 432.213 0 0 1 366.933 90.027a42.667 42.667 0 0 1 45.227 9.386 42.667 42.667 0 0 1 10.24 42.667 358.4 358.4 0 0 0 82.773 375.893 361.387 361.387 0 0 0 376.747 82.774 42.667 42.667 0 0 1 54.187 55.04 433.493 433.493 0 0 1-99.84 154.88 438.613 438.613 0 0 1-311.467 128z"}));Nh.displayName="DarkIcon";const Hh=()=>d(hs,{name:"light"},()=>d("path",{d:"M952 552h-80a40 40 0 0 1 0-80h80a40 40 0 0 1 0 80zM801.88 280.08a41 41 0 0 1-57.96-57.96l57.96-58a41.04 41.04 0 0 1 58 58l-58 57.96zM512 752a240 240 0 1 1 0-480 240 240 0 0 1 0 480zm0-560a40 40 0 0 1-40-40V72a40 40 0 0 1 80 0v80a40 40 0 0 1-40 40zm-289.88 88.08-58-57.96a41.04 41.04 0 0 1 58-58l57.96 58a41 41 0 0 1-57.96 57.96zM192 512a40 40 0 0 1-40 40H72a40 40 0 0 1 0-80h80a40 40 0 0 1 40 40zm30.12 231.92a41 41 0 0 1 57.96 57.96l-57.96 58a41.04 41.04 0 0 1-58-58l58-57.96zM512 832a40 40 0 0 1 40 40v80a40 40 0 0 1-80 0v-80a40 40 0 0 1 40-40zm289.88-88.08 58 57.96a41.04 41.04 0 0 1-58 58l-57.96-58a41 41 0 0 1 57.96-57.96z"}));Hh.displayName="LightIcon";const Uh=()=>d(hs,{name:"auto"},()=>d("path",{d:"M512 992C246.92 992 32 777.08 32 512S246.92 32 512 32s480 214.92 480 480-214.92 480-480 480zm0-840c-198.78 0-360 161.22-360 360 0 198.84 161.22 360 360 360s360-161.16 360-360c0-198.78-161.22-360-360-360zm0 660V212c165.72 0 300 134.34 300 300 0 165.72-134.28 300-300 300z"}));Uh.displayName="AutoIcon";const $h=()=>d(hs,{name:"enter-fullscreen"},()=>d("path",{d:"M762.773 90.24h-497.28c-96.106 0-174.4 78.293-174.4 174.4v497.28c0 96.107 78.294 174.4 174.4 174.4h497.28c96.107 0 175.04-78.293 174.4-174.4V264.64c0-96.213-78.186-174.4-174.4-174.4zm-387.2 761.173H215.04c-21.867 0-40.427-17.92-41.067-41.066V649.92c0-22.507 17.92-40.427 40.427-40.427 11.307 0 21.227 4.694 28.48 11.947 7.253 7.253 11.947 17.92 11.947 28.48v62.293l145.28-145.28c15.893-15.893 41.813-15.893 57.706 0 15.894 15.894 15.894 41.814 0 57.707l-145.28 145.28h62.294c22.506 0 40.426 17.92 40.426 40.427s-17.173 41.066-39.68 41.066zM650.24 165.76h160.427c21.866 0 40.426 17.92 41.066 41.067v160.426c0 22.507-17.92 40.427-40.426 40.427-11.307 0-21.227-4.693-28.48-11.947-7.254-7.253-11.947-17.92-11.947-28.48v-62.186L625.6 450.347c-15.893 15.893-41.813 15.893-57.707 0-15.893-15.894-15.893-41.814 0-57.707l145.28-145.28H650.88c-22.507 0-40.427-17.92-40.427-40.427s17.174-41.173 39.787-41.173z"}));$h.displayName="EnterFullScreenIcon";const Qh=()=>d(hs,{name:"cancel-fullscreen"},()=>d("path",{d:"M778.468 78.62H247.922c-102.514 0-186.027 83.513-186.027 186.027V795.08c0 102.514 83.513 186.027 186.027 186.027h530.432c102.514 0 186.71-83.513 186.026-186.027V264.647C964.494 162.02 880.981 78.62 778.468 78.62zM250.88 574.35h171.122c23.324 0 43.122 19.115 43.804 43.805v171.121c0 24.008-19.114 43.122-43.122 43.122-12.06 0-22.641-5.006-30.378-12.743s-12.743-19.115-12.743-30.379V722.83L224.597 877.91c-16.953 16.952-44.6 16.952-61.553 0-16.953-16.954-16.953-44.602 0-61.554L318.009 661.39h-66.446c-24.007 0-43.122-19.114-43.122-43.122 0-24.12 18.432-43.918 42.439-43.918zm521.899-98.873H601.657c-23.325 0-43.122-19.114-43.805-43.804V260.55c0-24.007 19.115-43.122 43.122-43.122 12.06 0 22.642 5.007 30.379 12.743s12.743 19.115 12.743 30.38v66.445l154.965-154.965c16.953-16.953 44.601-16.953 61.554 0 16.953 16.953 16.953 44.6 0 61.554L705.536 388.55h66.446c24.007 0 43.122 19.115 43.122 43.122.114 24.007-18.318 43.804-42.325 43.804z"}));Qh.displayName="CancelFullScreenIcon";const Wh=()=>d(hs,{name:"outlook"},()=>[d("path",{d:"M224 800c0 9.6 3.2 44.8 6.4 54.4 6.4 48-48 76.8-48 76.8s80 41.6 147.2 0 134.4-134.4 38.4-195.2c-22.4-12.8-41.6-19.2-57.6-19.2C259.2 716.8 227.2 761.6 224 800zM560 675.2l-32 51.2c-51.2 51.2-83.2 32-83.2 32 25.6 67.2 0 112-12.8 128 25.6 6.4 51.2 9.6 80 9.6 54.4 0 102.4-9.6 150.4-32l0 0c3.2 0 3.2-3.2 3.2-3.2 22.4-16 12.8-35.2 6.4-44.8-9.6-12.8-12.8-25.6-12.8-41.6 0-54.4 60.8-99.2 137.6-99.2 6.4 0 12.8 0 22.4 0 12.8 0 38.4 9.6 48-25.6 0-3.2 0-3.2 3.2-6.4 0-3.2 3.2-6.4 3.2-6.4 6.4-16 6.4-16 6.4-19.2 9.6-35.2 16-73.6 16-115.2 0-105.6-41.6-198.4-108.8-268.8C704 396.8 560 675.2 560 675.2zM224 419.2c0-28.8 22.4-51.2 51.2-51.2 28.8 0 51.2 22.4 51.2 51.2 0 28.8-22.4 51.2-51.2 51.2C246.4 470.4 224 448 224 419.2zM320 284.8c0-22.4 19.2-41.6 41.6-41.6 22.4 0 41.6 19.2 41.6 41.6 0 22.4-19.2 41.6-41.6 41.6C339.2 326.4 320 307.2 320 284.8zM457.6 208c0-12.8 12.8-25.6 25.6-25.6 12.8 0 25.6 12.8 25.6 25.6 0 12.8-12.8 25.6-25.6 25.6C470.4 233.6 457.6 220.8 457.6 208zM128 505.6C128 592 153.6 672 201.6 736c28.8-60.8 112-60.8 124.8-60.8-16-51.2 16-99.2 16-99.2l316.8-422.4c-48-19.2-99.2-32-150.4-32C297.6 118.4 128 291.2 128 505.6zM764.8 86.4c-22.4 19.2-390.4 518.4-390.4 518.4-22.4 28.8-12.8 76.8 22.4 99.2l9.6 6.4c35.2 22.4 80 12.8 99.2-25.6 0 0 6.4-12.8 9.6-19.2 54.4-105.6 275.2-524.8 288-553.6 6.4-19.2-3.2-32-19.2-32C777.6 76.8 771.2 80 764.8 86.4z"})]);Wh.displayName="OutlookIcon";const Gh=L({name:"ColorModeSwitch",setup(){const{config:s,isDarkmode:a,status:n}=wi(),i=la(),e=()=>{s.value==="switch"?n.value={light:"dark",dark:"auto",auto:"light"}[n.value]:n.value=n.value==="light"?"dark":"light"},l=async t=>{if(!(document.startViewTransition&&!window.matchMedia("(prefers-reduced-motion: reduce)").matches&&!i.value)||!t){e();return}const p=t.clientX,c=t.clientY,B=Math.hypot(Math.max(p,innerWidth-p),Math.max(c,innerHeight-c)),k=a.value;await document.startViewTransition(async()=>{e(),await ya()}).ready,a.value!==k&&document.documentElement.animate({clipPath:a.value?[`circle(${B}px at ${p}px ${c}px)`,`circle(0px at ${p}px ${c}px)`]:[`circle(0px at ${p}px ${c}px)`,`circle(${B}px at ${p}px ${c}px)`]},{duration:400,pseudoElement:a.value?"::view-transition-old(root)":"::view-transition-new(root)"})};return()=>d("button",{type:"button",class:"vp-color-mode-switch",id:"color-mode-switch",onClick:l},[d(Uh,{style:{display:n.value==="auto"?"block":"none"}}),d(Nh,{style:{display:n.value==="dark"?"block":"none"}}),d(Hh,{style:{display:n.value==="light"?"block":"none"}})])}}),h1=L({name:"ColorMode",setup(){const s=Bs(),{canToggle:a}=wi(),n=g(()=>s.value.outlookLocales.darkmode);return()=>a.value?d("div",{class:"vp-color-mode"},[d("label",{class:"vp-color-mode-title",for:"color-mode-switch"},n.value),d(Gh)]):null}}),kr="VUEPRESS_THEME_COLOR",y1=L({name:"ThemeColorPicker",props:{themeColor:{type:Object,required:!0}},setup(s){const a=(n="")=>{const i=document.documentElement.classList,e=Va(s.themeColor);if(!n){localStorage.removeItem(kr),i.remove(...e);return}i.remove(...e.filter(l=>l!==n)),i.add(n),localStorage.setItem(kr,n)};return as(()=>{const n=localStorage.getItem(kr);n&&a(n)}),()=>d("ul",{class:"vp-theme-color-picker",id:"theme-color-picker"},[d("li",d("span",{class:"theme-color",onClick:()=>a()})),ei(s.themeColor).map(([n,i])=>d("li",d("span",{style:{background:i},onClick:()=>a(n)})))])}}),hr=ti.enableThemeColor==="true",u1=o0(ei(ti).filter(([s])=>s.startsWith("theme-"))),A1=L({name:"ThemeColor",setup(){const s=Bs(),a=g(()=>s.value.outlookLocales.themeColor);return()=>d("div",{class:"vp-theme-color"},[d("label",{class:"vp-theme-color-title",for:"theme-color-picker"},a.value),d(y1,{themeColor:u1})])}}),Kh=L({name:"ToggleFullScreenButton",setup(){const s=Bs(),{isSupported:a,isFullscreen:n,toggle:i}=$o(),e=g(()=>s.value.outlookLocales.fullscreen);return()=>a?d("div",{class:"full-screen-wrapper"},[d("label",{class:"full-screen-title",for:"full-screen-switch"},e.value),d("button",{type:"button",id:"full-screen-switch",class:"full-screen",ariaPressed:n.value,onClick:()=>i()},n.value?d(Qh):d($h))]):null}}),Xh=L({name:"OutlookSettings",setup(){const s=hn(),a=la(),n=g(()=>!a.value&&s.value.fullscreen);return()=>d(ft,()=>[d(A1),d(h1),n.value?d(Kh):null])}}),v1=L({name:"NavScreen",props:{show:Boolean},emits:["close"],slots:Object,setup(s,{emit:a,slots:n}){const i=gs(),{isMobile:e}=Si(),l=ms(),t=Uk(l);return as(()=>{l.value=document.body,os(e,r=>{!r&&s.show&&(t.value=!1,a("close"))}),os(()=>i.value.path,()=>{t.value=!1,a("close")})}),si(()=>{t.value=!1}),()=>d(bi,{name:"fade",onEnter:()=>{t.value=!0},onAfterLeave:()=>{t.value=!1}},()=>{var r,p;return s.show?d("div",{id:"nav-screen",class:"vp-nav-screen"},d("div",{class:"vp-nav-screen-container"},[(r=n.before)==null?void 0:r.call(n),d(k1),d("div",{class:"vp-outlook-wrapper"},d(Xh)),(p=n.after)==null?void 0:p.call(n)])):null})}}),m1=L({name:"NavbarBrand",setup(){const s=za(),a=bt(),n=Bs(),i=g(()=>n.value.home??s.value),e=g(()=>a.value.title),l=g(()=>n.value.navbarTitle??e.value),t=g(()=>n.value.logo?_s(n.value.logo):null),r=g(()=>n.value.logoDark?_s(n.value.logoDark):null);return()=>d(Qs,{to:i.value,class:"vp-brand"},()=>[t.value?d("img",{class:["vp-nav-logo",{light:!!r.value}],src:t.value,alt:""}):null,r.value?d("img",{class:["vp-nav-logo dark"],src:r.value,alt:""}):null,l.value?d("span",{class:["vp-site-name",{"hide-in-pad":t.value&&(n.value.hideSiteNameOnMobile??!0)}]},l.value):null])}}),E1=L({name:"NavbarLinks",setup(){const s=zh();return()=>s.value.length?d("nav",{class:"vp-nav-links"},s.value.map(a=>d("div",{class:"vp-nav-item hide-in-mobile"},"children"in a?d(c1,{config:a}):d(va,{config:a})))):null}}),F1=L({name:"RepoLink",setup(){const s=d1();return()=>s.value?d("div",{class:"vp-nav-item vp-action"},d("a",{class:"vp-action-link",href:s.value.link,target:"_blank",rel:"noopener noreferrer","aria-label":s.value.label},d(q0,{type:s.value.type,style:{width:"1.25rem",height:"1.25rem",verticalAlign:"middle"}}))):null}}),Yh=({active:s=!1},{emit:a})=>d("button",{type:"button",class:["vp-toggle-navbar-button",{"is-active":s}],"aria-label":"Toggle Navbar","aria-expanded":s,"aria-controls":"nav-screen",onClick:()=>a("toggle")},d("span",[d("span",{class:"vp-top"}),d("span",{class:"vp-middle"}),d("span",{class:"vp-bottom"})]));Yh.displayName="ToggleNavbarButton";const sp=(s,{emit:a})=>d("button",{type:"button",class:"vp-toggle-sidebar-button",title:"Toggle Sidebar",onClick:()=>a("toggle")},d("span",{class:"icon"}));sp.displayName="ToggleSidebarButton";sp.emits=["toggle"];const C1=L({name:"OutlookButton",setup(){const s=hn(),a=gs(),{canToggle:n}=wi(),{isSupported:i}=$o(),e=la(),l=M(!1),t=g(()=>!e.value&&s.value.fullscreen&&i),r=g(()=>hr);return os(()=>a.value.path,()=>{l.value=!1}),()=>r.value?d("div",{class:"vp-nav-item hide-in-mobile"},n.value&&!t.value&&!hr?d(Gh):t.value&&!n.value&&!hr?d(Kh):d("button",{type:"button",class:["vp-outlook-button",{open:l.value}],tabindex:"-1","aria-hidden":!0},[d(Wh),d("div",{class:"vp-outlook-dropdown"},d(Xh))])):null}}),g1=L({name:"NavBar",emits:["toggleSidebar"],slots:Object,setup(s,{emit:a,slots:n}){const i=Bs(),{isMobile:e}=Si(),l=M(!1),t=g(()=>{const{navbarAutoHide:B="mobile"}=i.value;return B!=="none"&&(B==="always"||e.value)}),r=g(()=>i.value.navbarLayout??{start:["Brand"],center:["Links"],end:["Language","Repo","Outlook","Search"]}),p={Brand:m1,Language:Br,Links:E1,Repo:F1,Outlook:C1,Search:xa("Docsearch")?wa("Docsearch"):xa("SearchBox")?wa("SearchBox"):Br},c=B=>p[B]??(xa(B)?wa(B):Br);return()=>{var B,k,h,y,u,A,F,C,b;return[d("header",{key:"navbar",id:"navbar",class:["vp-navbar",{"auto-hide":t.value}]},[d("div",{class:"vp-navbar-start"},[d(sp,{onToggle:()=>{l.value&&(l.value=!1),a("toggleSidebar")}}),(B=n.startBefore)==null?void 0:B.call(n),(k=r.value.start)==null?void 0:k.map(m=>d(c(m))),(h=n.startAfter)==null?void 0:h.call(n)]),d("div",{class:"vp-navbar-center"},[(y=n.centerBefore)==null?void 0:y.call(n),(u=r.value.center)==null?void 0:u.map(m=>d(c(m))),(A=n.centerAfter)==null?void 0:A.call(n)]),d("div",{class:"vp-navbar-end"},[(F=n.endBefore)==null?void 0:F.call(n),(C=r.value.end)==null?void 0:C.map(m=>d(c(m))),(b=n.endAfter)==null?void 0:b.call(n),d(Yh,{active:l.value,onToggle:()=>{l.value=!l.value}})])]),d(v1,{show:l.value,onClose:()=>{l.value=!1}},{before:n.screenTop?()=>n.screenTop():null,after:n.screenBottom?()=>n.screenBottom():null})]}}}),b1=L({name:"SidebarChild",props:{config:{type:Object,required:!0}},setup(s){const a=Ta();return()=>Os(s.config.link)?d(va,{class:["vp-sidebar-link","vp-sidebar-page",{active:Qe(a,s.config,!0)}],config:{...s.config,exact:!0}}):d("p",s,[d(Ys,{icon:s.config.icon}),s.config.text])}}),f1=L({name:"SidebarGroup",props:{config:{type:Object,required:!0},open:{type:Boolean,required:!0}},emits:["toggle"],setup(s,{emit:a}){const n=Ta(),i=M(!1),e=g(()=>Qe(n,s.config)),l=g(()=>Qe(n,s.config,!0)),t=g(()=>s.open||s.config.expanded&&!i.value);return()=>{const{collapsible:r,children:p=[],icon:c,prefix:B,link:k,text:h}=s.config;return d("section",{class:"vp-sidebar-group"},[d(r?"button":"p",{class:["vp-sidebar-header",{clickable:r||k,exact:l.value,active:e.value}],...r?{type:"button",onClick:()=>{i.value=!0,a("toggle")},onKeydown:y=>{y.key==="Enter"&&a("toggle")}}:{}},[d(Ys,{icon:c}),k?d(va,{class:"vp-sidebar-title no-external-link-icon",config:{text:h,link:k}}):d("span",{class:"vp-sidebar-title"},h),r?d("span",{class:["vp-arrow",t.value?"down":"end"]}):null]),t.value||!r?d(Zh,{key:B,config:p}):null])}}}),Zh=L({name:"SidebarLinks",props:{config:{type:Array,required:!0}},setup(s){const a=Ta(),n=M(-1),i=e=>{n.value=e===n.value?-1:e};return os(()=>a.path,()=>{const e=s.config.findIndex(l=>Ih(a,l));n.value=e},{immediate:!0,flush:"post"}),()=>d("ul",{class:"vp-sidebar-links"},s.config.map((e,l)=>d("li",e.type==="group"?d(f1,{config:e,open:l===n.value,onToggle:()=>i(l)}):d(b1,{config:e}))))}}),D1=L({name:"SideBar",slots:Object,setup(s,{slots:a}){const n=Ta(),i=Zo(),e=ms();return as(()=>{os(()=>n.hash,l=>{const t=document.querySelector(`.vp-sidebar a.vp-sidebar-link[href="${n.path}${l}"]`);if(!t)return;const{top:r,height:p}=e.value.getBoundingClientRect(),{top:c,height:B}=t.getBoundingClientRect();c<r?t.scrollIntoView(!0):c+B>r+p&&t.scrollIntoView(!1)},{immediate:!0})}),()=>{var l,t,r;return d("aside",{ref:e,key:"sidebar",id:"sidebar",class:"vp-sidebar"},[(l=a.top)==null?void 0:l.call(a),((t=a.default)==null?void 0:t.call(a))??d(Zh,{config:i.value}),(r=a.bottom)==null?void 0:r.call(a)])}}}),cl=L({name:"CommonWrapper",props:{containerClass:{type:String,default:""},noNavbar:Boolean,noSidebar:Boolean,noToc:Boolean},slots:Object,setup(s,{slots:a}){const n=Fa(),i=ks(),e=hn(),l=Bs(),{isMobile:t,isPC:r}=Si(),p=la(),[c,B]=He(!1),[k,h]=He(!1),y=Zo(),u=M(!1),A=g(()=>s.noNavbar||i.value.navbar===!1||l.value.navbar===!1?!1:!!(l.value.logo??l.value.repo??l.value.navbar)),F=g(()=>s.noSidebar?!1:i.value.sidebar!==!1&&y.value.length!==0&&!i.value.home),C=g(()=>i.value.externalLinkIcon??e.value.externalLinkIcon??!0),b=g(()=>!s.noToc&&!i.value.home&&(i.value.toc??l.value.toc??!0)),m={x:0,y:0},f=P=>{m.x=P.changedTouches[0].clientX,m.y=P.changedTouches[0].clientY},x=P=>{const W=P.changedTouches[0].clientX-m.x,j=P.changedTouches[0].clientY-m.y;Math.abs(W)>Math.abs(j)*1.5&&Math.abs(W)>40&&(W>0&&m.x<=80?B(!0):B(!1))};let V=0;return xs("scroll",m0(()=>{const P=window.scrollY;P<=58||P<V?u.value=!1:V+200<P&&!c.value&&(u.value=!0),V=P},300,!0)),os(t,P=>{P||B(!1)}),as(()=>{const P=Uk(document.body);os(c,j=>{P.value=j});const W=n.afterEach(()=>{B(!1)});si(()=>{P.value=!1,W()})}),()=>d(xa("GlobalEncrypt")?wa("GlobalEncrypt"):wt,()=>d("div",{class:["theme-container",{"hide-navbar":u.value,"no-navbar":!A.value,"sidebar-collapsed":!t.value&&!r.value&&k.value,"sidebar-open":t.value&&c.value,"no-sidebar":!F.value&&!a.sidebar&&!a.sidebarTop&&!a.sidebarBottom,"external-link-icon":C.value,pure:p.value,"has-toc":b.value},s.containerClass,i.value.containerClass??""],onTouchStart:f,onTouchEnd:x},[A.value?d(g1,{onToggleSidebar:()=>B()},{startBefore:a.navbarStartBefore?()=>a.navbarStartBefore():null,startAfter:a.navbarStartAfter?()=>a.navbarStartAfter():null,centerBefore:a.navbarCenterBefore?()=>a.navbarCenterBefore():null,centerAfter:a.navbarCenterAfter?()=>a.navbarCenterAfter():null,endBefore:a.navbarEndBefore?()=>a.navbarEndBefore():null,endAfter:a.navbarEndAfter?()=>a.navbarEndAfter():null,screenTop:a.navScreenTop?()=>a.navScreenTop():null,screenBottom:a.navScreenBottom?()=>a.navScreenBottom():null}):null,d(bi,{name:"fade"},()=>c.value?d("div",{class:"vp-sidebar-mask",onClick:()=>B(!1)}):null),d(bi,{name:"fade"},()=>t.value?null:d("div",{class:"toggle-sidebar-wrapper",onClick:()=>h()},d("span",{class:["arrow",k.value?"end":"start"]}))),d(D1,{},{default:a.sidebar?()=>a.sidebar():null,top:a.sidebarTop?()=>a.sidebarTop():null,bottom:a.sidebarBottom?()=>a.sidebarBottom():null}),a.default(),d(p1)]))}}),Gr=(s,{slots:a})=>{var k,h;const{bgImage:n,bgImageDark:i,bgImageStyle:e,color:l,description:t,image:r,imageDark:p,header:c,features:B=[]}=s;return d("div",{class:"vp-feature-wrapper"},[n?d("div",{class:["vp-feature-bg",{light:i}],style:[{"background-image":`url(${n})`},e]}):null,i?d("div",{class:"vp-feature-bg dark",style:[{"background-image":`url(${i})`},e]}):null,d("div",{class:"vp-feature",style:l?{color:l}:{}},[((k=a.image)==null?void 0:k.call(a,s))??[r?d("img",{class:["vp-feature-image",{light:p}],src:_s(r),alt:""}):null,p?d("img",{class:"vp-feature-image dark",src:_s(p),alt:""}):null],((h=a.info)==null?void 0:h.call(a,s))??[c?d("h2",{class:"vp-feature-header"},c):null,t?d("p",{class:"vp-feature-description",innerHTML:t}):null],B.length?d("div",{class:"vp-features"},B.map(({icon:y,title:u,details:A,link:F})=>{const C=[d("h3",{class:"vp-feature-title"},[d(Ys,{icon:y}),d("span",{innerHTML:u})]),d("p",{class:"vp-feature-details",innerHTML:A})];return F?Io(F)?d("a",{class:"vp-feature-item link",href:F,"aria-label":u,target:"_blank"},C):d(Qs,{class:"vp-feature-item link",to:F,"aria-label":u},()=>C):d("div",{class:"vp-feature-item"},C)})):null])])};Gr.displayName="FeaturePanel";const ps=L({name:"DropTransition",props:{type:{type:String,default:"single"},delay:{type:Number,default:0},duration:{type:Number,default:.25},appear:Boolean},slots:Object,setup(s,{slots:a}){const n=e=>{e.style.transition=`transform ${s.duration}s ease-in-out ${s.delay}s, opacity ${s.duration}s ease-in-out ${s.delay}s`,e.style.transform="translateY(-20px)",e.style.opacity="0"},i=e=>{e.style.transform="translateY(0)",e.style.opacity="1"};return()=>{const e={name:"drop",appear:s.appear,onAppear:n,onAfterAppear:i,onEnter:n,onAfterEnter:i,onBeforeLeave:n},l=()=>a.default();return s.type==="group"?d(X6,e,l):d(bi,e,l)}}}),xt=(s,{slots:a})=>d(bi,{name:"fade-slide-y",mode:"out-in",onBeforeEnter:$r.resolve,onBeforeLeave:$r.pending},()=>a.default());xt.displayName="FadeSlideY";const _1=L({name:"HeroInfo",slots:Object,setup(s,{slots:a}){const n=ks(),i=bt(),e=g(()=>n.value.heroFullScreen??!1),l=g(()=>{const{heroText:c,tagline:B}=n.value;return{text:c??i.value.title??"Hello",tagline:B??i.value.description??"",isFullScreen:e.value}}),t=g(()=>{const{heroText:c,heroImage:B,heroImageDark:k,heroAlt:h,heroImageStyle:y}=n.value;return{image:B?_s(B):null,imageDark:k?_s(k):null,imageStyle:y,alt:h??c??"",isFullScreen:e.value}}),r=g(()=>{const{bgImage:c,bgImageDark:B,bgImageStyle:k}=n.value;return{image:Os(c)?_s(c):null,imageDark:Os(B)?_s(B):null,bgStyle:k,isFullScreen:e.value}}),p=g(()=>n.value.actions??[]);return()=>{var c,B,k;return d("header",{class:["vp-hero-info-wrapper",{fullscreen:e.value}]},[((c=a.bg)==null?void 0:c.call(a,r.value))??[r.value.image?d("div",{class:["vp-hero-mask",{light:r.value.imageDark}],style:[{"background-image":`url(${r.value.image})`},r.value.bgStyle]}):null,r.value.imageDark?d("div",{class:"vp-hero-mask dark",style:[{"background-image":`url(${r.value.imageDark})`},r.value.bgStyle]}):null],d("div",{class:"vp-hero-info"},[((B=a.logo)==null?void 0:B.call(a,t.value))??d(ps,{appear:!0,type:"group"},()=>{const{image:h,imageDark:y,imageStyle:u,alt:A}=t.value;return[h?d("img",{key:"light",class:["vp-hero-image",{light:y}],style:u,src:h,alt:A}):null,y?d("img",{key:"dark",class:"vp-hero-image dark",style:u,src:y,alt:A}):null]}),((k=a.info)==null?void 0:k.call(a,l.value))??d("div",{class:"vp-hero-infos"},[l.value.text?d(ps,{appear:!0,delay:.04},()=>d("h1",{id:"main-title",class:"vp-hero-title"},l.value.text)):null,l.value.tagline?d(ps,{appear:!0,delay:.08},()=>d("p",{id:"main-description",innerHTML:l.value.tagline})):null,p.value.length?d(ps,{appear:!0,delay:.12},()=>d("p",{class:"vp-hero-actions"},p.value.map(h=>d(va,{class:["vp-hero-action",h.type??"default","no-external-link-icon"],config:h},h.icon?{before:()=>d(Ys,{icon:h.icon})}:{})))):null])])])}}}),s2=(s,{slots:a})=>{var h,y,u;const{bgImage:n,bgImageDark:i,bgImageStyle:e,color:l,description:t,image:r,imageDark:p,header:c,highlights:B=[],type:k="un-order"}=s;return d("div",{class:"vp-highlight-wrapper",style:l?{color:l}:{}},[n?d("div",{class:["vp-highlight-bg",{light:i}],style:[{"background-image":`url(${n})`},e]}):null,i?d("div",{class:"vp-highlight-bg dark",style:[{"background-image":`url(${i})`},e]}):null,d("div",{class:"vp-highlight"},[((h=a.image)==null?void 0:h.call(a,s))??[r?d("img",{class:["vp-highlight-image",{light:p}],src:_s(r),alt:""}):null,p?d("img",{class:"vp-highlight-image dark",src:_s(p),alt:""}):null],((y=a.info)==null?void 0:y.call(a,s))??[d("div",{class:"vp-highlight-info-wrapper"},d("div",{class:"vp-highlight-info"},[c?d("h2",{class:"vp-highlight-header",innerHTML:c}):null,t?d("p",{class:"vp-highlight-description",innerHTML:t}):null,((u=a.highlights)==null?void 0:u.call(a,B))??d(k==="order"?"ol":k==="no-order"?"dl":"ul",{class:"vp-highlights"},B.map(({icon:A,title:F,details:C,link:b})=>{const m=[d(k==="no-order"?"dt":"h3",{class:"vp-highlight-title"},[A?d(Ys,{class:"vp-highlight-icon",icon:A}):null,d("span",{innerHTML:F})]),C?d(k==="no-order"?"dd":"p",{class:"vp-highlight-details",innerHTML:C}):null];return d(k==="no-order"?"div":"li",{class:["vp-highlight-item-wrapper",{link:b}]},b?Io(b)?d("a",{class:"vp-highlight-item link",href:b,"aria-label":F,target:"_blank"},m):d(Qs,{class:"vp-highlight-item link",to:b,"aria-label":F},()=>m):d("div",{class:"vp-highlight-item"},m))}))]))]])])};s2.displayName="HighlightPanel";const pe=({custom:s})=>d(Dt,{class:["theme-hope-content",{custom:s}]});pe.displayName="MarkdownContent";pe.props={custom:Boolean};const a2=L({name:"HomePage",slots:Object,setup(s,{slots:a}){const n=ks(),i=g(()=>{const{features:l}=n.value;return et(l)?l:null}),e=g(()=>{const{highlights:l}=n.value;return et(l)?l:null});return()=>{var l,t,r,p;return d("main",{id:"main-content",class:"vp-page vp-project-home","aria-labelledby":n.value.heroText===null?"":"main-title"},[(l=a.top)==null?void 0:l.call(a),d(_1),((t=e.value)==null?void 0:t.map(c=>"features"in c?d(Gr,c):d(s2,c)))??(i.value?d(ps,{appear:!0,delay:.24},()=>d(Gr,{features:i.value})):null),(r=a.center)==null?void 0:r.call(a),d(ps,{appear:!0,delay:.32},()=>d(pe)),(p=a.bottom)==null?void 0:p.call(a)])}}}),S1=L({name:"BreadCrumb",setup(){const s=gs(),a=za(),n=ks(),i=Bs(),e=ms([]),l=g(()=>(n.value.breadcrumb??i.value.breadcrumb??!0)&&e.value.length>1),t=g(()=>n.value.breadcrumbIcon??i.value.breadcrumbIcon??!0),r=()=>{const p=QE(s.value.path,a.value).map(({link:c,name:B})=>{const{path:k,meta:h,notFound:y}=kn(c);return y||h[ea.breadcrumbExclude]?null:{title:h[ea.shortTitle]||h[ea.title]||B,icon:h[ea.icon],path:k}}).filter(c=>c!==null);p.length>1&&(e.value=p)};return as(()=>{os(()=>s.value.path,r,{immediate:!0})}),()=>d("nav",{class:["vp-breadcrumb",{disable:!l.value}]},l.value?d("ol",{vocab:"https://schema.org/",typeof:"BreadcrumbList"},e.value.map((p,c)=>d("li",{class:{"is-active":e.value.length-1===c},property:"itemListElement",typeof:"ListItem"},[d(Qs,{to:p.path,property:"item",typeof:"WebPage"},()=>[t.value?d(Ys,{icon:p.icon}):null,d("span",{property:"name"},p.title||"Unknown")]),d("meta",{property:"position",content:c+1})]))):[])}}),Uc=(s,a)=>s===!1||Bn(s)?s:Os(s)?Yo(s,!0,a):null,Kr=(s,a,n)=>{const i=s.findIndex(e=>e.link===a);if(i!==-1){const e=s[i+n];return e!=null&&e.link?e:null}for(const e of s)if("children"in e){const l=Kr(e.children,a,n);if(l)return l}return null},w1=L({name:"PageNav",setup(){const s=Bs(),a=ks(),n=Zo(),i=gs(),e=_i(),l=Ta(),t=g(()=>{const p=Uc(a.value.prev,l.path);return p===!1?null:p??(s.value.prevLink===!1?null:Kr(n.value,i.value.path,-1))}),r=g(()=>{const p=Uc(a.value.next,l.path);return p===!1?null:p??(s.value.nextLink===!1?null:Kr(n.value,i.value.path,1))});return xs("keydown",p=>{p.altKey&&(p.key==="ArrowRight"?r.value&&(e(r.value.link),p.preventDefault()):p.key==="ArrowLeft"&&t.value&&(e(t.value.link),p.preventDefault()))}),()=>t.value||r.value?d("nav",{class:"vp-page-nav"},[t.value?d(va,{class:"prev",config:t.value},()=>{var p,c;return[d("div",{class:"hint"},[d("span",{class:"arrow start"}),s.value.metaLocales.prev]),d("div",{class:"link"},[d(Ys,{icon:(p=t.value)==null?void 0:p.icon}),(c=t.value)==null?void 0:c.text])]}):null,r.value?d(va,{class:"next",config:r.value},()=>{var p,c;return[d("div",{class:"hint"},[s.value.metaLocales.next,d("span",{class:"arrow end"})]),d("div",{class:"link"},[(p=r.value)==null?void 0:p.text,d(Ys,{icon:(c=r.value)==null?void 0:c.icon})])]}):null]):null}}),n2=()=>{const s=hh();return a=>dh({serverURL:s.value.serverURL,...a})},i2=()=>d(hs,{name:"author"},()=>d("path",{d:"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z"}));i2.displayName="AuthorIcon";const e2=()=>d(hs,{name:"calendar"},()=>d("path",{d:"M716.4 110.137c0-18.753-14.72-33.473-33.472-33.473-18.753 0-33.473 14.72-33.473 33.473v33.473h66.993v-33.473zm-334.87 0c0-18.753-14.72-33.473-33.473-33.473s-33.52 14.72-33.52 33.473v33.473h66.993v-33.473zm468.81 33.52H716.4v100.465c0 18.753-14.72 33.473-33.472 33.473a33.145 33.145 0 01-33.473-33.473V143.657H381.53v100.465c0 18.753-14.72 33.473-33.473 33.473a33.145 33.145 0 01-33.473-33.473V143.657H180.6A134.314 134.314 0 0046.66 277.595v535.756A134.314 134.314 0 00180.6 947.289h669.74a134.36 134.36 0 00133.94-133.938V277.595a134.314 134.314 0 00-133.94-133.938zm33.473 267.877H147.126a33.145 33.145 0 01-33.473-33.473c0-18.752 14.72-33.473 33.473-33.473h736.687c18.752 0 33.472 14.72 33.472 33.473a33.145 33.145 0 01-33.472 33.473z"}));e2.displayName="CalendarIcon";const l2=()=>d(hs,{name:"category"},()=>d("path",{d:"M148.41 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H148.41c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.311-40.31zM147.556 553.478H429.73c22.263 0 40.311 18.048 40.311 40.31v282.176c0 22.263-18.048 40.312-40.31 40.312H147.555c-22.263 0-40.311-18.049-40.311-40.312V593.79c0-22.263 18.048-40.311 40.31-40.311zM593.927 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H593.927c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.31-40.31zM730.22 920.502H623.926c-40.925 0-74.22-33.388-74.22-74.425V623.992c0-41.038 33.387-74.424 74.425-74.424h222.085c41.038 0 74.424 33.226 74.424 74.067v114.233c0 10.244-8.304 18.548-18.547 18.548s-18.548-8.304-18.548-18.548V623.635c0-20.388-16.746-36.974-37.33-36.974H624.13c-20.585 0-37.331 16.747-37.331 37.33v222.086c0 20.585 16.654 37.331 37.126 37.331H730.22c10.243 0 18.547 8.304 18.547 18.547 0 10.244-8.304 18.547-18.547 18.547z"}));l2.displayName="CategoryIcon";const t2=()=>d(hs,{name:"eye"},()=>d("path",{d:"M992 512.096c0-5.76-.992-10.592-1.28-11.136-.192-2.88-1.152-8.064-2.08-10.816-.256-.672-.544-1.376-.832-2.08-.48-1.568-1.024-3.104-1.6-4.32C897.664 290.112 707.104 160 512 160c-195.072 0-385.632 130.016-473.76 322.592-1.056 2.112-1.792 4.096-2.272 5.856a55.512 55.512 0 00-.64 1.6c-1.76 5.088-1.792 8.64-1.632 7.744-.832 3.744-1.568 11.168-1.568 11.168-.224 2.272-.224 4.032.032 6.304 0 0 .736 6.464 1.088 7.808.128 1.824.576 4.512 1.12 6.976h-.032c.448 2.08 1.12 4.096 1.984 6.08.48 1.536.992 2.976 1.472 4.032C126.432 733.856 316.992 864 512 864c195.136 0 385.696-130.048 473.216-321.696 1.376-2.496 2.24-4.832 2.848-6.912.256-.608.48-1.184.672-1.728 1.536-4.48 1.856-8.32 1.728-8.32l-.032.032c.608-3.104 1.568-7.744 1.568-13.28zM512 672c-88.224 0-160-71.776-160-160s71.776-160 160-160 160 71.776 160 160-71.776 160-160 160z"}));t2.displayName="EyeIcon";const r2=()=>d(hs,{name:"fire"},()=>d("path",{d:"M726.4 201.6c-12.8-9.6-28.8-6.4-38.4 0-9.6 9.6-16 25.6-9.6 38.4 6.4 12.8 9.6 28.8 12.8 44.8C604.8 83.2 460.8 38.4 454.4 35.2c-9.6-3.2-22.4 0-28.8 6.4-9.6 6.4-12.8 19.2-9.6 28.8 12.8 86.4-25.6 188.8-115.2 310.4-6.4-25.6-16-51.2-32-80-9.6-9.6-22.4-16-35.2-12.8-16 3.2-25.6 12.8-25.6 28.8-3.2 48-25.6 92.8-51.2 140.8C134.4 499.2 112 544 102.4 592c-32 150.4 99.2 329.6 233.6 380.8 9.6 3.2 19.2 6.4 32 9.6-25.6-19.2-41.6-51.2-48-96C294.4 691.2 505.6 640 515.2 460.8c153.6 105.6 224 336 137.6 505.6 3.2 0 6.4-3.2 9.6-3.2 0 0 3.2 0 3.2-3.2 163.2-89.6 252.8-208 259.2-345.6 16-211.2-163.2-390.4-198.4-412.8z"}));r2.displayName="FireIcon";const o2=()=>d(hs,{name:"print"},()=>d("path",{d:"M819.2 364.8h-44.8V128c0-17.067-14.933-32-32-32H281.6c-17.067 0-32 14.933-32 32v236.8h-44.8C145.067 364.8 96 413.867 96 473.6v192c0 59.733 49.067 108.8 108.8 108.8h44.8V896c0 17.067 14.933 32 32 32h460.8c17.067 0 32-14.933 32-32V774.4h44.8c59.733 0 108.8-49.067 108.8-108.8v-192c0-59.733-49.067-108.8-108.8-108.8zM313.6 160h396.8v204.8H313.6V160zm396.8 704H313.6V620.8h396.8V864zM864 665.6c0 25.6-19.2 44.8-44.8 44.8h-44.8V588.8c0-17.067-14.933-32-32-32H281.6c-17.067 0-32 14.933-32 32v121.6h-44.8c-25.6 0-44.8-19.2-44.8-44.8v-192c0-25.6 19.2-44.8 44.8-44.8h614.4c25.6 0 44.8 19.2 44.8 44.8v192z"}));o2.displayName="PrintIcon";const p2=()=>d(hs,{name:"tag"},()=>d("path",{d:"M939.902 458.563L910.17 144.567c-1.507-16.272-14.465-29.13-30.737-30.737L565.438 84.098h-.402c-3.215 0-5.726 1.005-7.634 2.913l-470.39 470.39a10.004 10.004 0 000 14.164l365.423 365.424c1.909 1.908 4.42 2.913 7.132 2.913s5.223-1.005 7.132-2.913l470.39-470.39c2.01-2.11 3.014-5.023 2.813-8.036zm-240.067-72.121c-35.458 0-64.286-28.828-64.286-64.286s28.828-64.285 64.286-64.285 64.286 28.828 64.286 64.285-28.829 64.286-64.286 64.286z"}));p2.displayName="TagIcon";const c2=()=>d(hs,{name:"timer"},()=>d("path",{d:"M799.387 122.15c4.402-2.978 7.38-7.897 7.38-13.463v-1.165c0-8.933-7.38-16.312-16.312-16.312H256.33c-8.933 0-16.311 7.38-16.311 16.312v1.165c0 5.825 2.977 10.874 7.637 13.592 4.143 194.44 97.22 354.963 220.201 392.763-122.204 37.542-214.893 196.511-220.2 389.397-4.661 5.049-7.638 11.651-7.638 19.03v5.825h566.49v-5.825c0-7.379-2.849-13.981-7.509-18.9-5.049-193.016-97.867-351.985-220.2-389.527 123.24-37.67 216.446-198.453 220.588-392.892zM531.16 450.445v352.632c117.674 1.553 211.787 40.778 211.787 88.676H304.097c0-48.286 95.149-87.382 213.728-88.676V450.445c-93.077-3.107-167.901-81.297-167.901-177.093 0-8.803 6.99-15.793 15.793-15.793 8.803 0 15.794 6.99 15.794 15.793 0 80.261 63.69 145.635 142.01 145.635s142.011-65.374 142.011-145.635c0-8.803 6.99-15.793 15.794-15.793s15.793 6.99 15.793 15.793c0 95.019-73.789 172.82-165.96 177.093z"}));c2.displayName="TimerIcon";const d2=()=>d(hs,{name:"word"},()=>[d("path",{d:"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z"}),d("path",{d:"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z"})]);d2.displayName="WordIcon";const x1=()=>{const s=Bs(),a=gs(),n=ks();return g(()=>{var e;return n.value.contributors??s.value.contributors??!0?((e=a.value.git)==null?void 0:e.contributors)??null:null})},L1={GitHub:":repo/edit/:branch/:path",GitLab:":repo/-/edit/:branch/:path",Gitee:":repo/edit/:branch/:path",Bitbucket:":repo/src/:branch/:path?mode=edit&spa=0&at=:branch&fileviewer=file-view-default"},T1=({docsRepo:s,docsBranch:a,docsDir:n,filePathRelative:i,editLinkPattern:e})=>{if(!i)return null;const l=Qo(s);let t;return e?t=e:l!==null&&(t=L1[l]),t?t.replace(/:repo/u,ni(s)?s:`https://github.com/${s}`).replace(/:branch/u,a).replace(/:path/u,Po(`${Et(n)}/${i}`)):null},O1=()=>{const s=Bs(),a=gs(),n=ks();return g(()=>{const{repo:i,docsRepo:e=i,docsBranch:l="main",docsDir:t="",editLink:r,editLinkPattern:p=""}=s.value;if(!(n.value.editLink??r??!0)||!e)return null;const B=T1({docsRepo:e,docsBranch:l,docsDir:t,editLinkPattern:p,filePathRelative:a.value.filePathRelative});return B?{text:s.value.metaLocales.editLink,link:B}:null})},Ln=()=>{const s=Bs();return g(()=>s.value.metaLocales)},J1=()=>{const s=bt(),a=Bs(),n=gs(),i=ks();return g(()=>{var t,r;return!(i.value.lastUpdated??a.value.lastUpdated??!0)||!((t=n.value.git)!=null&&t.updatedTime)?null:new Date((r=n.value.git)==null?void 0:r.updatedTime).toLocaleString(s.value.lang)})},I1=L({name:"AuthorInfo",inheritAttrs:!1,props:{author:{type:Array,required:!0}},setup(s){const a=Ln(),n=la();return()=>s.author.length?d("span",{class:"page-author-info","aria-label":`${a.value.author}${n.value?"":"🖊"}`,...n.value?{}:{"data-balloon-pos":"up"}},[d(i2),d("span",s.author.map(i=>i.url?d("a",{class:"page-author-item",href:i.url,target:"_blank",rel:"noopener noreferrer"},i.name):d("span",{class:"page-author-item"},i.name))),d("span",{property:"author",content:s.author.map(i=>i.name).join(", ")})]):null}}),P1=L({name:"CategoryInfo",inheritAttrs:!1,props:{category:{type:Array,required:!0}},setup(s){const a=Ln(),n=_i(),i=la();return()=>s.category.length?d("span",{class:"page-category-info","aria-label":`${a.value.category}${i.value?"":"🌈"}`,...i.value?{}:{"data-balloon-pos":"up"}},[d(l2),s.category.map(({name:e,path:l})=>d("span",{class:["page-category-item",{[`color${pl(e,Number(ti.colorNumber))}`]:!i.value,clickable:l}],role:l?"navigation":"",onClick:()=>{l&&n(l)}},e)),d("meta",{property:"articleSection",content:s.category.map(({name:e})=>e).join(",")})]):null}}),B2=L({name:"DateInfo",inheritAttrs:!1,props:{date:{type:Object,default:null},localizedDate:{type:String,default:""}},setup(s){const a=gt(),n=Ln(),i=la();return()=>s.date?d("span",{class:"page-date-info","aria-label":`${n.value.date}${i.value?"":"📅"}`,...i.value?{}:{"data-balloon-pos":"up"}},[d(e2),d("span",d(ft,()=>s.localizedDate||s.date.toLocaleDateString(a.value))),d("meta",{property:"datePublished",content:s.date.toISOString()||""})]):null}}),R1=L({name:"OriginalInfo",inheritAttrs:!1,props:{isOriginal:Boolean},setup(s){const a=Ln();return()=>s.isOriginal?d("span",{class:"page-original-info"},a.value.origin):null}}),k2=L({name:"PageViewInfo",inheritAttrs:!1,props:{pageview:{type:[Boolean,String],default:!1}},setup(s){const a=Ta(),n=Ln(),i=la(),e=ms(),l=M(0);return Ho(e,()=>{const t=e.value.textContent;t&&!isNaN(Number(t))&&(l.value=Number(t))},{childList:!0}),()=>s.pageview?d("span",{class:"page-pageview-info","aria-label":`${n.value.views}${i.value?"":"🔢"}`,...i.value?{}:{"data-balloon-pos":"up"}},[d(l.value<1e3?t2:r2),d("span",{ref:e,id:"ArtalkPV",class:"vp-pageview waline-pageview-count","data-path":Os(s.pageview)?s.pageview:a.path,"data-page-key":Os(s.pageview)?s.pageview:a.path},"...")]):null}}),M1=L({name:"ReadingTimeInfo",inheritAttrs:!1,props:{readingTime:{type:Object,default:()=>null},readingTimeLocale:{type:Object,default:()=>null}},setup(s){const a=Ln(),n=la(),i=g(()=>{if(!s.readingTime)return null;const{minutes:e}=s.readingTime;return e<1?"PT1M":`PT${Math.round(e)}M`});return()=>{var e,l;return(e=s.readingTimeLocale)!=null&&e.time?d("span",{class:"page-reading-time-info","aria-label":`${a.value.readingTime}${n.value?"":"⌛"}`,...n.value?{}:{"data-balloon-pos":"up"}},[d(c2),d("span",(l=s.readingTimeLocale)==null?void 0:l.time),d("meta",{property:"timeRequired",content:i.value})]):null}}}),h2=L({name:"TagInfo",inheritAttrs:!1,props:{tag:{type:Array,default:()=>[]}},setup(s){const a=Ln(),n=_i(),i=la();return()=>s.tag.length?d("span",{class:"page-tag-info","aria-label":`${a.value.tag}${i.value?"":"🏷"}`,...i.value?{}:{"data-balloon-pos":"up"}},[d(p2),s.tag.map(({name:e,path:l})=>d("span",{class:["page-tag-item",{[`color${pl(e,Number(ti.colorNumber))}`]:!i.value,clickable:l}],role:l?"navigation":"",onClick:()=>{l&&n(l)}},e)),d("meta",{property:"keywords",content:s.tag.map(({name:e})=>e).join(",")})]):null}}),y2=L({name:"ReadTimeInfo",inheritAttrs:!1,props:{readingTime:{type:Object,default:()=>null},readingTimeLocale:{type:Object,default:()=>null}},setup(s){const a=Ln(),n=la();return()=>{var i,e,l;return(i=s.readingTimeLocale)!=null&&i.words?d("span",{class:"page-word-info","aria-label":`${a.value.words}${n.value?"":"🔠"}`,...n.value?{}:{"data-balloon-pos":"up"}},[d(d2),d("span",(e=s.readingTimeLocale)==null?void 0:e.words),d("meta",{property:"wordCount",content:(l=s.readingTime)==null?void 0:l.words})]):null}}}),u2=L({name:"PageInfo",components:{AuthorInfo:I1,CategoryInfo:P1,DateInfo:B2,OriginalInfo:R1,PageViewInfo:k2,ReadingTimeInfo:M1,TagInfo:h2,WordInfo:y2},props:{items:{type:[Array,Boolean],default:()=>["Author","Original","Date","PageView","ReadingTime","Category","Tag"]},info:{type:Object,required:!0}},setup(s){const a=la();return()=>s.items?d("div",{class:"page-info"},s.items.map(n=>d(wa(`${n}Info`),{...s.info,isPure:a.value}))):null}}),j1=L({name:"PageTitle",setup(){const s=gs(),a=ks(),n=Bs(),{info:i,items:e}=ME();return()=>d("div",{class:"vp-page-title"},[d("h1",[n.value.titleIcon===!1?null:d(Ys,{icon:a.value.icon}),s.value.title]),d(u2,{info:i.value,...e.value===null?{}:{items:e.value}}),d("hr")])}}),A2=()=>d(hs,{name:"edit"},()=>[d("path",{d:"M430.818 653.65a60.46 60.46 0 0 1-50.96-93.281l71.69-114.012 7.773-10.365L816.038 80.138A60.46 60.46 0 0 1 859.225 62a60.46 60.46 0 0 1 43.186 18.138l43.186 43.186a60.46 60.46 0 0 1 0 86.373L588.879 565.55l-8.637 8.637-117.466 68.234a60.46 60.46 0 0 1-31.958 11.229z"}),d("path",{d:"M728.802 962H252.891A190.883 190.883 0 0 1 62.008 771.98V296.934a190.883 190.883 0 0 1 190.883-192.61h267.754a60.46 60.46 0 0 1 0 120.92H252.891a69.962 69.962 0 0 0-69.098 69.099V771.98a69.962 69.962 0 0 0 69.098 69.098h475.911A69.962 69.962 0 0 0 797.9 771.98V503.363a60.46 60.46 0 1 1 120.922 0V771.98A190.883 190.883 0 0 1 728.802 962z"})]);A2.displayName="EditIcon";const q1=L({name:"PageMeta",setup(){const s=Bs(),a=O1(),n=J1(),i=x1();return()=>{var l;const{metaLocales:e}=s.value;return d("footer",{class:"vp-page-meta"},[a.value?d("div",{class:"vp-meta-item edit-link"},d(va,{class:"vp-meta-label",config:a.value},{before:()=>d(A2)})):null,d("div",{class:"vp-meta-item git-info"},[n.value?d("div",{class:"update-time"},[d("span",{class:"vp-meta-label"},`${e.lastUpdated}: `),d(ft,()=>d("span",{class:"vp-meta-info"},n.value))]):null,(l=i.value)!=null&&l.length?d("div",{class:"contributors"},[d("span",{class:"vp-meta-label"},`${e.contributors}: `),i.value.map(({email:t,name:r},p)=>[d("span",{class:"vp-meta-info",title:`email: ${t}`},r),p!==i.value.length-1?",":""])]):null])])}}}),V1=L({name:"PrintButton",setup(){const s=hn(),a=Bs();return()=>s.value.print===!1?null:d("button",{type:"button",class:"print-button",title:a.value.metaLocales.print,onClick:()=>{window.print()}},d(o2))}}),v2=L({name:"TOC",props:{items:{type:Array,default:()=>[]},headerDepth:{type:Number,default:2}},slots:Object,setup(s,{slots:a}){const n=Ta(),i=gs(),e=Ln(),[l,t]=He(),r=ms(),p=M("-1.7rem"),c=k=>{var h;(h=r.value)==null||h.scrollTo({top:k,behavior:"smooth"})},B=()=>{if(r.value){const k=document.querySelector(".vp-toc-item.active");k?p.value=`${k.getBoundingClientRect().top-r.value.getBoundingClientRect().top+r.value.scrollTop}px`:p.value="-1.7rem"}else p.value="-1.7rem"};return as(()=>{os(()=>n.hash,k=>{if(r.value){const h=document.querySelector(`#toc a.vp-toc-link[href$="${k}"]`);if(!h)return;const{top:y,height:u}=r.value.getBoundingClientRect(),{top:A,height:F}=h.getBoundingClientRect();A<y?c(r.value.scrollTop+A-y):A+F>y+u&&c(r.value.scrollTop+A+F-y-u)}}),os(()=>n.fullPath,B,{flush:"post",immediate:!0})}),()=>{var u,A;const k=({title:F,level:C,slug:b})=>d(Qs,{to:`#${b}`,class:["vp-toc-link",`level${C}`],onClick:()=>{t()}},()=>F),h=(F,C)=>F.length&&C>0?d("ul",{class:"vp-toc-list"},F.map(b=>{const m=h(b.children,C-1);return[d("li",{class:["vp-toc-item",{active:n.hash===`#${b.slug}`}]},k(b)),m?d("li",m):null]})):null,y=s.items.length?h(s.items,s.headerDepth):i.value.headers?h(i.value.headers,s.headerDepth):null;return y?d("div",{class:"vp-toc-placeholder"},[d("aside",{id:"toc"},[(u=a.before)==null?void 0:u.call(a),d("div",{class:"vp-toc-header",onClick:()=>{t()}},[e.value.toc,d(V1),d("div",{class:["arrow",l.value?"down":"end"]})]),d("div",{class:["vp-toc-wrapper",l.value?"open":""],ref:r},[y,d("div",{class:"vp-toc-marker",style:{top:p.value}})]),(A=a.after)==null?void 0:A.call(a)])]):null}}}),m2=L({name:"NormalPage",slots:Object,setup(s,{slots:a}){const n=ks(),{isDarkmode:i}=wi(),e=Bs(),l=g(()=>n.value.toc??e.value.toc??!0),t=g(()=>n.value.headerDepth??e.value.headerDepth??2);return()=>d("main",{id:"main-content",class:"vp-page"},d(xa("LocalEncrypt")?wa("LocalEncrypt"):wt,()=>{var r,p,c,B;return[(r=a.top)==null?void 0:r.call(a),n.value.cover?d("div",{class:"page-cover"},d("img",{src:_s(n.value.cover),alt:"","no-view":""})):null,d(S1),d(j1),l.value?d(v2,{headerDepth:t.value},{before:a.tocBefore?()=>a.tocBefore():null,after:a.tocAfter?()=>a.tocAfter():null}):null,(p=a.contentBefore)==null?void 0:p.call(a),d(pe),(c=a.contentAfter)==null?void 0:c.call(a),d(q1),d(w1),xa("CommentService")?d(wa("CommentService"),{darkmode:i.value}):null,(B=a.bottom)==null?void 0:B.call(a)]}))}}),z1=L({name:"PortfolioHero",slots:Object,setup(s,{slots:a}){const n=wh(),i=ks(),e=M(0),l=g(()=>{var h;return((h=i.value.titles)==null?void 0:h[e.value])??""}),t=M(""),r=g(()=>{const{name:h,avatar:y,avatarDark:u,avatarAlt:A,avatarStyle:F}=i.value;return{name:h??n.value.name,avatar:y?_s(y):null,avatarDark:u?_s(u):null,avatarStyle:F,alt:(A||h)??""}}),p=g(()=>{const{bgImage:h,bgImageDark:y,bgImageStyle:u}=i.value;return{image:Os(h)?_s(h):null,imageDark:Os(y)?_s(y):null,bgStyle:u}}),c=g(()=>{const{welcome:h,name:y,titles:u,medias:A}=i.value;return{name:y??n.value.name,welcome:h??"👋 Hi There, I'm",title:t.value,titles:u??[],medias:A??[]}}),B=()=>{t.value="";let h=0,y=!1;const u=async()=>{if(!y)if(t.value+=l.value[h],h+=1,await ya(),h<l.value.length)setTimeout(()=>{u()},150);else{const A=c.value.titles.length;setTimeout(()=>{e.value=A<=1||e.value===c.value.titles.length-1?0:e.value+1},1e3)}};return u(),()=>{y=!0}};let k;return as(()=>{os(l,()=>{k==null||k(),k=B()},{immediate:!0})}),()=>{var h,y,u;return d("section",{id:"portfolio",class:["vp-portfolio",{bg:p.value.image}]},[((h=a.bg)==null?void 0:h.call(a,p.value))??[p.value.image?d("div",{class:["vp-portfolio-mask",{light:p.value.imageDark}],style:[{background:`url(${p.value.image}) center/cover no-repeat`},p.value.bgStyle]}):null,p.value.imageDark?d("div",{class:"vp-portfolio-mask dark",style:[{background:`url(${p.value.imageDark}) center/cover no-repeat`},p.value.bgStyle]}):null],((y=a.avatar)==null?void 0:y.call(a,r.value))??d("div",{class:"vp-portfolio-avatar"},[d(ps,{delay:.04},()=>{const{avatarDark:A,name:F,alt:C,avatarStyle:b}=r.value;return[d("img",{key:"light",class:{light:A},src:r.value.avatar,title:F,alt:C,style:b}),A?d("img",{key:"dark",class:"dark",src:A,title:F,alt:C,style:b}):null]})]),d("div",{class:"vp-portfolio-container"},((u=a.info)==null?void 0:u.call(a,c.value))??d("div",{class:"vp-portfolio-info"},[d(ps,{appear:!0,delay:.08},()=>d("h6",{class:"vp-portfolio-welcome"},c.value.welcome)),d(ps,{appear:!0,delay:.12},()=>d("h1",{class:"vp-portfolio-name",id:"main-title"},c.value.name)),d(ps,{appear:!0,delay:.16},()=>d("h2",{class:"vp-portfolio-title"},t.value)),d(ps,{appear:!0,delay:.2},()=>c.value.medias.length?d("div",{class:"vp-portfolio-medias"},c.value.medias.map(({name:A,url:F,icon:C})=>d("a",{class:"vp-portfolio-media",href:F,rel:"noopener noreferrer",target:"_blank",title:A},d(Ys,{icon:C})))):xa("SocialMedias")?d(wa("SocialMedias")):null)]))])}}}),N1=L({name:"PortfolioHome",setup(){const s=ks(),a=g(()=>s.value.content??"portfolio");return()=>d("main",{id:"main-content",class:"vp-page vp-portfolio-home","aria-labelledby":"main-title"},[d(z1),a.value==="none"?null:d("div",{},d(ps,{appear:!0,delay:.24},()=>d(pe,{class:{"vp-portfolio-content":a.value==="portfolio"}})))])}}),ce=L({name:"SkipLink",props:{content:{type:String,default:"main-content"}},setup(s){const a=gs(),n=Bs(),i=ms(),e=({target:l})=>{const t=document.querySelector(l.hash);if(t){const r=()=>{t.removeAttribute("tabindex"),t.removeEventListener("blur",r)};t.setAttribute("tabindex","-1"),t.addEventListener("blur",r),t.focus(),window.scrollTo(0,0)}};return as(()=>{os(()=>a.value.path,()=>i.value.focus())}),()=>[d("span",{ref:i,tabindex:"-1"}),d("a",{href:`#${s.content}`,class:"vp-skip-link sr-only",onClick:e},n.value.routeLocales.skipToContent)]}}),H1=L({name:"Layout",slots:Object,setup(s,{slots:a}){const n=hn(),i=Bs(),e=gs(),l=ks(),t=la(),{isMobile:r}=Si(),p=g(()=>{var c,B;return((c=i.value.blog)==null?void 0:c.sidebarDisplay)??((B=n.value.blog)==null?void 0:B.sidebarDisplay)??"mobile"});return()=>[d(ce),d(cl,{},{default:()=>{var c;return((c=a.default)==null?void 0:c.call(a))??(l.value.portfolio?d(N1):l.value.home?d(a2):d(t.value?wt:xt,()=>d(m2,{key:e.value.path},{top:a.top?()=>a.top():null,bottom:a.bottom?()=>a.bottom():null,contentBefore:a.contentBefore?()=>a.contentBefore():null,contentAfter:a.contentAfter?()=>a.contentAfter():null,tocBefore:a.tocBefore?()=>a.tocBefore():null,tocAfter:a.tocAfter?()=>a.tocAfter():null})))},navScreenBottom:p.value==="none"&&xa("BloggerInfo")?()=>d(wa("BloggerInfo")):null,sidebar:!r.value&&p.value==="always"&&xa("BloggerInfo")?()=>d(wa("BloggerInfo")):null})]}}),U1=L({name:"NotFoundHint",setup(){const s=Bs(),a=()=>{const n=s.value.routeLocales.notFoundMsg;return n[Math.floor(Math.random()*n.length)]};return()=>d("div",{class:"not-found-hint"},[d("p",{class:"error-code"},"404"),d("h1",{class:"error-title"},s.value.routeLocales.notFoundTitle),d("p",{class:"error-hint"},a())])}}),$1=L({name:"NotFound",slots:Object,setup(s,{slots:a}){const n=Fa(),i=za(),e=Bs();return()=>[d(ce),d(cl,{noSidebar:!0},()=>{var l;return d("main",{id:"main-content",class:"vp-page not-found"},((l=a.default)==null?void 0:l.call(a))??[d(U1),d("div",{class:"actions"},[d("button",{type:"button",class:"action-button",onClick:()=>{window.history.go(-1)}},e.value.routeLocales.back),d("button",{type:"button",class:"action-button",onClick:()=>{n.push(e.value.home??i.value)}},e.value.routeLocales.home)])])})]}}),Q1={Email:'<svg xmlns="http://www.w3.org/2000/svg" class="icon email-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#1384FF"/><path fill="#fff" d="M270.077 286.233H751.99c32.933 0 59.86 24.855 60.274 55.51l-301.023 157L210.217 341.88c.207-30.723 26.927-55.717 59.86-55.717zm-59.929 115.714-.276 277.756c0 30.931 27.134 56.2 60.205 56.2H751.99c33.14 0 60.274-25.269 60.274-56.2V401.81L518.283 551.492a15.88 15.88 0 0 1-14.43 0L210.148 401.947z"/></svg>',GitHub:'<svg xmlns="http://www.w3.org/2000/svg" class="icon github-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#171515"/><path fill="#fff" d="M509.423 146.442c-200.317 0-362.756 162.42-362.756 362.8 0 160.266 103.936 296.24 248.109 344.217 18.139 3.327 24.76-7.872 24.76-17.486 0-8.613-.313-31.427-.49-61.702-100.912 21.923-122.205-48.63-122.205-48.63-16.495-41.91-40.28-53.067-40.28-53.067-32.937-22.51 2.492-22.053 2.492-22.053 36.407 2.566 55.568 37.386 55.568 37.386 32.362 55.438 84.907 39.43 105.58 30.143 3.296-23.444 12.667-39.43 23.032-48.498-80.557-9.156-165.246-40.28-165.246-179.297 0-39.604 14.135-71.988 37.342-97.348-3.731-9.178-16.18-46.063 3.556-96.009 0 0 30.46-9.754 99.76 37.19 28.937-8.048 59.97-12.071 90.823-12.211 30.807.14 61.843 4.165 90.822 12.21 69.26-46.944 99.663-37.189 99.663-37.189 19.792 49.946 7.34 86.831 3.61 96.01 23.25 25.359 37.29 57.742 37.29 97.347 0 139.366-84.82 170.033-165.637 179.013 13.026 11.2 24.628 33.342 24.628 67.182 0 48.498-.445 87.627-.445 99.521 0 9.702 6.535 20.988 24.945 17.444 144.03-48.067 247.881-183.95 247.881-344.175 0-200.378-162.442-362.798-362.802-362.798z"/></svg>',Gmail:'<svg xmlns="http://www.w3.org/2000/svg" class="icon gmail-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#DB4437"/><path fill="#E67C73" d="M277.48 285.567h465.767v441.362H277.48V285.567z"/><path fill="#FFF" d="M282.543 285.567h-10.645c-25.962 0-47.122 21.808-47.122 48.705v343.952c0 26.897 21.08 48.705 47.122 48.705h24.976V407.954l213.49 169.95 213.489-169.95V726.93h24.975c26.04 0 47.123-21.809 47.123-48.705V334.272c0-26.897-21.134-48.705-47.123-48.705h-10.644L510.364 480.44 282.542 285.567z"/></svg>',Rss:'<svg xmlns="http://www.w3.org/2000/svg" class="icon rss-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#FD9B00"/><path fill="#fff" d="M687.981 740.39c0-225.92-183.617-409.777-409.21-409.777v-97.205c279.353 0 506.617 227.506 506.617 506.98H687.98zm-74.841 0h-97.538c0-63.567-24.688-123.245-69.43-167.993-44.762-44.856-104.24-69.556-167.54-69.556v-97.176c184.44 0 334.508 150.046 334.508 334.725zM346.038 605.166c37.35 0 67.514 30.357 67.514 67.39 0 37.146-30.163 67.177-67.514 67.177-37.219 0-67.458-30.03-67.458-67.176 0-37.034 30.24-67.391 67.458-67.391z"/></svg>'},W1={category:{"/":{path:"/category/",map:{Blog:{path:"/category/blog/",indexes:[0,1,2,3,4]},About:{path:"/category/about/",indexes:[5]},使用指南:{path:"/category/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",indexes:[6,7,8,9,10]},收藏:{path:"/category/%E6%94%B6%E8%97%8F/",indexes:[11,12]},Linux:{path:"/category/linux/",indexes:[13,14,15]},数据库:{path:"/category/%E6%95%B0%E6%8D%AE%E5%BA%93/",indexes:[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102]},Redis:{path:"/category/redis/",indexes:[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44]},计算机组成原理:{path:"/category/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/",indexes:[103]},计算机网络:{path:"/category/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/",indexes:[104,105,106,107,108,109]},操作系统:{path:"/category/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/",indexes:[110,111,112,113,114,115,116,117]},数据结构:{path:"/category/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/",indexes:[118,119]},es:{path:"/category/es/",indexes:[120,121,122,123,124]},ElasticSearch:{path:"/category/elasticsearch/",indexes:[125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142]},mongodb:{path:"/category/mongodb/",indexes:[143,144,145,146,147,148,149,150,151,152]},Mysql:{path:"/category/mysql/",indexes:[45,46,47,48,55,57,58,59,60,61,62,63,64,65,67,68,70,71,72,73,74,75,76,77,78,79,80]},MySql:{path:"/category/mysql/",indexes:[69]},Java:{path:"/category/java/",indexes:[153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241]},IO:{path:"/category/io/",indexes:[160,161,162,163,164,165,166,167,168,169,170,171,172,173]},JVM:{path:"/category/jvm/",indexes:[174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,210,211]},并发:{path:"/category/%E5%B9%B6%E5%8F%91/",indexes:[209,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232]},"Java Web":{path:"/category/java-web/",indexes:[242,243,244,245,246]},Java基础:{path:"/category/java%E5%9F%BA%E7%A1%80/",indexes:[247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272]},Vue:{path:"/category/vue/",indexes:[273]},前端:{path:"/category/%E5%89%8D%E7%AB%AF/",indexes:[274]},Spring:{path:"/category/spring/",indexes:[275]},CAS:{path:"/category/cas/",indexes:[276,277,278,279,280]},MyBatis:{path:"/category/mybatis/",indexes:[281,282,283,284,285,286,287,288,289,290,291,292,293,294]},分库分表:{path:"/category/%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8/",indexes:[295]},定时任务:{path:"/category/%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/",indexes:[296,297,298,299,300,301,302,303,304,305]}}}},tag:{"/":{path:"/tag/",map:{Blog:{path:"/tag/blog/",indexes:[0,1,2,3,4]},About:{path:"/tag/about/",indexes:[5]},"GitHub Action":{path:"/tag/github-action/",indexes:[0]},禁用:{path:"/tag/%E7%A6%81%E7%94%A8/",indexes:[7]},文章加密:{path:"/tag/%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/",indexes:[8]},Markdown:{path:"/tag/markdown/",indexes:[9]},页面配置:{path:"/tag/%E9%A1%B5%E9%9D%A2%E9%85%8D%E7%BD%AE/",indexes:[10]},使用指南:{path:"/tag/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",indexes:[10]},生活:{path:"/tag/%E7%94%9F%E6%B4%BB/",indexes:[306]},工具网站:{path:"/tag/%E5%B7%A5%E5%85%B7%E7%BD%91%E7%AB%99/",indexes:[11,12]},terminal:{path:"/tag/terminal/",indexes:[13,14]},Linux:{path:"/tag/linux/",indexes:[13,14,15]},OS:{path:"/tag/os/",indexes:[15]},Unix:{path:"/tag/unix/",indexes:[15]},计算机组成原理:{path:"/tag/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/",indexes:[103]},计算机网络:{path:"/tag/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/",indexes:[104,105,106,107,108,109]},操作系统:{path:"/tag/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/",indexes:[110,111,112,113,114,115,116,117]},数据结构:{path:"/tag/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/",indexes:[118,119]},MySQL:{path:"/tag/mysql/",indexes:[85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102]},Java:{path:"/tag/java/",indexes:[155,156,157,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,307,308]},学习:{path:"/tag/%E5%AD%A6%E4%B9%A0/",indexes:[155,156,157,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,307,308]},基础:{path:"/tag/%E5%9F%BA%E7%A1%80/",indexes:[247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272]},集合:{path:"/tag/%E9%9B%86%E5%90%88/",indexes:[307,308]}}}}},E2=["/blog/auto-push.html","/blog/waline-mail.html","/about.html","/blog/disqus.html","/blog/jekyll.html","/intro.html","/demo/","/demo/disable.html","/demo/encrypt.html","/demo/markdown.html","/demo/page.html","/site/design.html","/site/public-api.html","/posts/Linux/iterm2-pure.html","/posts/Linux/zsh.html","/posts/Linux/unix-linux-note.html","/posts/Redis/db-redis-data-type-special.html","/posts/Redis/db-redis-data-type-stream.html","/posts/Redis/db-redis-data-types.html","/posts/Redis/db-redis-hash.html","/posts/Redis/db-redis-introduce.html","/posts/Redis/db-redis-x-cache.html","/posts/Redis/db-redis-x-cluster.html","/posts/Redis/db-redis-x-consistency.html","/posts/Redis/db-redis-x-copy.html","/posts/Redis/db-redis-x-event.html","/posts/Redis/db-redis-x-hot-key.html","/posts/Redis/db-redis-x-performance.html","/posts/Redis/db-redis-x-pub-sub.html","/posts/Redis/db-redis-x-rdb-aof.html","/posts/Redis/db-redis-x-redis-object.html","/posts/Redis/db-redis-x-trans.html","/posts/Redis/db-redis-y-install-sentinel.html","/posts/Redis/redis-z-interview-apply.html","/posts/Redis/redis-z-interview-basic.html","/posts/Redis/redis-z-interview-cluster.html","/posts/Redis/redis-z-interview-datatype.html","/posts/Redis/redis-z-interview-master-salve.html","/posts/Redis/redis-z-interview-new.html","/posts/Redis/redis-z-interview-other.html","/posts/Redis/redis-z-interview-overview-detail.html","/posts/Redis/redis-z-interview-overview.html","/posts/Redis/redis-z-interview-persistence.html","/posts/Redis/redis-z-interview-sentinel.html","/posts/Redis/redis-z-interview-tran.html","/posts/Database/MySQL/MySQL%E5%9F%BA%E7%A1%80-01.html","/posts/Database/MySQL/MySQL%E8%BF%9B%E9%98%B6-02.html","/posts/Database/MySQL/MySQL%E9%AB%98%E7%BA%A7-03.html","/posts/Database/MySQL/MySQL%E9%AB%98%E7%BA%A7-04.html","/posts/Database/MySQL/mysql-c-index-btree.html","/posts/Database/MySQL/mysql-c-index-impl.html","/posts/Database/MySQL/mysql-c-index-right.html","/posts/Database/MySQL/mysql-c-index-structure.html","/posts/Database/MySQL/mysql-c-index-uni.html","/posts/Database/MySQL/mysql-c-index.html","/posts/Database/MySQL/mysql-x-backup.html","/posts/Database/MySQL/mysql-x-optimize-bigtable.html","/posts/Database/MySQL/mysql-x-optimize-execute.html","/posts/Database/MySQL/mysql-x-optimize-explain.html","/posts/Database/MySQL/mysql-x-optimize-slow.html","/posts/Database/MySQL/mysql-x-optimize-slow02.html","/posts/Database/MySQL/mysql-x-sharding-detail.html","/posts/Database/MySQL/mysql-x-sharding-interview.html","/posts/Database/MySQL/mysql-x-slowlog.html","/posts/Database/MySQL/mysql-x-specification.html","/posts/Database/MySQL/mysql-y-lock-mvvc.html","/posts/Database/MySQL/mysql-y-statistics-group.html","/posts/Database/MySQL/sql-mysql-b-log.html","/posts/Database/MySQL/sql-mysql-b-tree.html","/posts/Database/MySQL/sql-mysql-character-set.html","/posts/Database/MySQL/sql-mysql-cover-index.html","/posts/Database/MySQL/sql-mysql-devide.html","/posts/Database/MySQL/sql-mysql-engine.html","/posts/Database/MySQL/sql-mysql-high-availability.html","/posts/Database/MySQL/sql-mysql-mha.html","/posts/Database/MySQL/sql-mysql-overview.html","/posts/Database/MySQL/sql-mysql-performance.html","/posts/Database/MySQL/sql-mysql-slave.html","/posts/Database/MySQL/sql-mysql-theory.html","/posts/Database/MySQL/sql-mysql-transaction-interview.html","/posts/Database/MySQL/sql-mysql-transaction.html","/posts/Database/ORACLE/oracle-b-sequence.html","/posts/Database/ORACLE/oracle-c-function-overview.html","/posts/Database/ORACLE/oracle-c-function-to-date.html","/posts/Database/ORACLE/oracle-z-docker-install.html","/posts/Database/MySQL/%E5%AE%8C%E6%95%B4%E6%80%A7%E7%BA%A6%E6%9D%9F.html","/posts/Database/MySQL/%E5%85%A8%E9%93%BE%E8%B7%AF%E6%95%B0%E4%BB%93%E4%B9%8B-DataX.html","/posts/Database/MySQL/SQL%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0%EF%BC%88%E4%BA%8C%EF%BC%89.html","/posts/Database/MySQL/SQL-%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0.html","/posts/Database/MySQL/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%81%A2%E5%A4%8D%E6%8A%80%E6%9C%AF.html","/posts/Database/MySQL/%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96.html","/posts/Database/MySQL/%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6.html","/posts/Database/MySQL/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%AD%E8%A8%80SQL.html","/posts/Database/MySQL/sql-x-basic.html","/posts/Database/MySQL/sql-x-leetcode.html","/posts/Database/MySQL/sql-x-optimization.html","/posts/Database/MySQL/sql-x-practice.html","/posts/Database/MySQL/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1%E7%90%86%E8%AE%BA.html","/posts/Database/MySQL/%E5%85%B3%E7%B3%BB%E4%BB%A3%E6%95%B0.html","/posts/Database/MySQL/%E5%85%B3%E7%B3%BB%E6%A8%A1%E5%9E%8B.html","/posts/Database/MySQL/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1.html","/posts/Database/MySQL/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BB%AA%E8%AE%BA.html","/posts/Database/MySQL/%E6%95%B0%E6%8D%AE%E5%BA%93.html","/posts/Computer-Basics/Computer-Composition/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90.html","/posts/Computer-Basics/Computer-Network/%E7%AC%AC%205%20%E7%AB%A0%20%20%E8%BF%90%E8%BE%93%E5%B1%82.html","/posts/Computer-Basics/Computer-Network/%E7%AC%AC%206%20%E7%AB%A0%20%20%E5%BA%94%E7%94%A8%E5%B1%82.html","/posts/Computer-Basics/Computer-Network/%E7%AC%AC%204%20%E7%AB%A0%20%20%E7%BD%91%E7%BB%9C%E5%B1%82.html","/posts/Computer-Basics/Computer-Network/%E7%AC%AC%203%20%E7%AB%A0%20%20%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82.html","/posts/Computer-Basics/Computer-Network/%E7%AC%AC%202%20%E7%AB%A0%20%20%E7%89%A9%E7%90%86%E5%B1%82.html","/posts/Computer-Basics/Computer-Network/%E7%AC%AC%201%20%E7%AB%A0%20%20%20%E6%A6%82%E8%BF%B0.html","/posts/Computer-Basics/Operating-System/%E7%AC%AC%E4%B8%83%E7%AB%A0%20%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86.html","/posts/Computer-Basics/Operating-System/%E7%AC%AC%E5%85%AD%E7%AB%A0%20%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E7%B3%BB%E7%BB%9F.html","/posts/Computer-Basics/Operating-System/%E7%AC%AC%E4%BA%94%E7%AB%A0%20%E8%99%9A%E6%8B%9F%E5%AD%98%E5%82%A8%E5%99%A8.html","/posts/Computer-Basics/Operating-System/%E7%AC%AC%E5%9B%9B%E7%AB%A0%20%E5%AD%98%E5%82%A8%E5%99%A8%E7%AE%A1%E7%90%86.html","/posts/Computer-Basics/Operating-System/%E7%AC%AC%E4%B8%89%E7%AB%A0%20%E5%A4%84%E7%90%86%E6%9C%BA%E8%B0%83%E5%BA%A6%E4%B8%8E%E6%AD%BB%E9%94%81.html","/posts/Computer-Basics/Operating-System/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E8%BF%9B%E7%A8%8B%E7%9A%84%E6%8F%8F%E8%BF%B0%E4%B8%8E%E6%8E%A7%E5%88%B6.html","/posts/Computer-Basics/Operating-System/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BC%95%E8%AE%BA.html","/posts/Computer-Basics/Operating-System/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html","/posts/Data-Structure/Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%842.html","/posts/Data-Structure/Structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.html","/posts/Database/ES/elasticsearch-easy-es.html","/posts/Database/ES/elasticsearch-filebeat.html","/posts/Database/ES/elasticsearch-interview-base.html","/posts/Database/ES/elasticsearch-interview-scene.html","/posts/Database/ES/elasticsearch-kibana-kql.html","/posts/Database/ES/elasticsearch-field-type.html","/posts/Database/ES/elasticsearch-install.html","/posts/Database/ES/elasticsearch-x-agg-bucket.html","/posts/Database/ES/elasticsearch-x-agg-metric.html","/posts/Database/ES/elasticsearch-x-agg-pipeline.html","/posts/Database/ES/elasticsearch-x-dsl-full-text.html","/posts/Database/ES/elasticsearch-x-dsl-term.html","/posts/Database/ES/elasticsearch-x-dsl.html","/posts/Database/ES/elasticsearch-x-index-mapping.html","/posts/Database/ES/elasticsearch-x-index-template.html","/posts/Database/ES/elasticsearch-x-introduce-1.html","/posts/Database/ES/elasticsearch-x-introduce-2.html","/posts/Database/ES/elasticsearch-x-usage.html","/posts/Database/ES/elasticsearch-y-peformance.html","/posts/Database/ES/elasticsearch-y-th-1.html","/posts/Database/ES/elasticsearch-y-th-2.html","/posts/Database/ES/elasticsearch-y-th-3.html","/posts/Database/ES/elasticsearch-y-th-4.html","/posts/Database/MongoDB/mongo-x-basic.html","/posts/Database/MongoDB/mongo-x-overview.html","/posts/Database/MongoDB/mongo-x-usage-1.html","/posts/Database/MongoDB/mongo-x-usage-2.html","/posts/Database/MongoDB/mongo-x-usage-4.html","/posts/Database/MongoDB/mongo-x-usage-5.html","/posts/Database/MongoDB/mongo-y-arch.html","/posts/Database/MongoDB/mongo-y-ds.html","/posts/Database/MongoDB/mongo-y-introduce.html","/posts/Database/MongoDB/mongo-y-page.html","/posts/Java/Java8%E7%89%B9%E6%80%A7/Java8-LocalDate-LocalDateTime.html","/posts/Java/Java8%E7%89%B9%E6%80%A7/Java8-Other.html","/posts/Java/Java8%E7%89%B9%E6%80%A7/java8-default.html","/posts/Java/Java8%E7%89%B9%E6%80%A7/java8-func-interface.html","/posts/Java/Java8%E7%89%B9%E6%80%A7/java8-lambda.html","/posts/Java/Java8%E7%89%B9%E6%80%A7/java8-optional.html","/posts/Java/Java8%E7%89%B9%E6%80%A7/java8-permgen.html","/posts/Java/JavaIO/java-io-aio.html","/posts/Java/JavaIO/java-io-basic-category.html","/posts/Java/JavaIO/java-io-basic-code-inputstream.html","/posts/Java/JavaIO/java-io-basic-code-outputstream.html","/posts/Java/JavaIO/java-io-basic-design-pattern.html","/posts/Java/JavaIO/java-io-basic-usage.html","/posts/Java/JavaIO/java-io-bio.html","/posts/Java/JavaIO/java-io-file.html","/posts/Java/JavaIO/java-io-model.html","/posts/Java/JavaIO/java-io-nio-netty.html","/posts/Java/JavaIO/java-io-nio-select-epoll.html","/posts/Java/JavaIO/java-io-nio.html","/posts/Java/JavaIO/java-io-overview.html","/posts/Java/JavaIO/java-io-steam.html","/posts/Java/JavaJVM/java-jvm-agent-arthas-problem.html","/posts/Java/JavaJVM/java-jvm-agent-arthas.html","/posts/Java/JavaJVM/java-jvm-agent-usage.html","/posts/Java/JavaJVM/java-jvm-class-enhancer.html","/posts/Java/JavaJVM/java-jvm-class.html","/posts/Java/JavaJVM/java-jvm-classload-interview.html","/posts/Java/JavaJVM/java-jvm-classload-simplify.html","/posts/Java/JavaJVM/java-jvm-classload-tomcat.html","/posts/Java/JavaJVM/java-jvm-classload.html","/posts/Java/JavaJVM/java-jvm-classload1.html","/posts/Java/JavaJVM/java-jvm-cms-gc.html","/posts/Java/JavaJVM/java-jvm-debug-idea.html","/posts/Java/JavaJVM/java-jvm-gc-adapter.html","/posts/Java/JavaJVM/java-jvm-gc-dispatch.html","/posts/Java/JavaJVM/java-jvm-gc-g1-supplement.html","/posts/Java/JavaJVM/java-jvm-gc-g1.html","/posts/Java/JavaJVM/java-jvm-gc-help.html","/posts/Java/JavaJVM/java-jvm-gc-log.html","/posts/Java/JavaJVM/java-jvm-gc-object-die.html","/posts/Java/JavaJVM/java-jvm-gc-orth.html","/posts/Java/JavaJVM/java-jvm-gc-overview.html","/posts/Java/JavaJVM/java-jvm-gc.html","/posts/Java/JavaJVM/java-jvm-heap-s.html","/posts/Java/JavaJVM/java-jvm-jmm.html","/posts/Java/JavaJVM/java-jvm-oom-offheap.html","/posts/Java/JavaJVM/java-jvm-oom-tool.html","/posts/Java/JavaJVM/java-jvm-oom.html","/posts/Java/JavaJVM/java-jvm-param.html","/posts/Java/JavaJVM/java-jvm-struct.html","/posts/Java/JavaJVM/java-jvm-thread-dump.html","/posts/Java/JavaJVM/java-jvm-tools-mat-peoject.html","/posts/Java/JavaJVM/java-jvm-tools-mat-shallow.html","/posts/Java/JavaJVM/java-jvm-tools-mat-use.html","/posts/Java/JavaJVM/java-jvm-tools-mat.html","/posts/Java/JavaJVM/java-jvm-x-introduce.html","/posts/Java/JavaJVM/java-thread-x-lock-ReentrantLock.html","/posts/Java/JavaJVM/jvm-overview.html","/posts/Java/JavaJVM/jvm.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-juc-AtomicInteger.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-juc-collection-BlockingQueue.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-juc-executor-FutureTask.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-juc-executor-ScheduledThreadPoolExecutor.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-juc-executor-ThreadPoolExecutor.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-juc-tool-CompletableFuture.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-juc-tool-countdownlatch.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-key-final.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-key-synchronized.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-key-volatile.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-lock-AbstractQueuedSynchronizer.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-lock-LockSupport-source.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-lock-LockSupport.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-lock-ReentrantLock.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-theorty.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-thread-basic.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-all-lock.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-async.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-thread-communication.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-threadlocal-interview.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-threadlocal.html","/posts/Java/Java%E9%9B%86%E5%90%88/arraylist-expansion.html","/posts/Java/Java%E9%9B%86%E5%90%88/comparable-comparator.html","/posts/Java/Java%E9%9B%86%E5%90%88/hashmap-problem.html","/posts/Java/Java%E9%9B%86%E5%90%88/java-collection-LinkedList.html","/posts/Java/Java%E9%9B%86%E5%90%88/java-collection-Queue_Stack.html","/posts/Java/Java%E9%9B%86%E5%90%88/java-collection-overview.html","/posts/Java/Java%E9%9B%86%E5%90%88/java-map-HashMap_HashSet.html","/posts/Java/Java%E9%9B%86%E5%90%88/java-map-HashMap-interview.html","/posts/Java/Java%E9%9B%86%E5%90%88/java-map-TreeMap_TreeSet.html","/posts/Java/JavaWeb/Cookie_SessionJsp.html","/posts/Java/JavaWeb/EL_Filter_Listener.html","/posts/Java/JavaWeb/Request_Response.html","/posts/Java/JavaWeb/Servlet.html","/posts/Java/JavaWeb/Tomcat_Http%E5%8D%8F%E8%AE%AE.html","/posts/Java/Java%E5%9F%BA%E7%A1%80/Java-basis-oop.html","/posts/Java/Java%E5%9F%BA%E7%A1%80/day01-java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95.html","/posts/Java/Java%E5%9F%BA%E7%A1%80/day02-Java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95.html","/posts/Java/Java%E5%9F%BA%E7%A1%80/day03-Switch_%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5.html","/posts/Java/Java%E5%9F%BA%E7%A1%80/day04-IDEA_%E6%95%B0%E7%BB%84.html","/posts/Java/Java%E5%9F%BA%E7%A1%80/day05-%E6%96%B9%E6%B3%95.html","/posts/Java/Java%E5%9F%BA%E7%A1%80/day06-Debug_%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0.html","/posts/Java/Java%E5%9F%BA%E7%A1%80/day07-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1.html","/posts/Java/Java%E5%9F%BA%E7%A1%80/day08-%E5%B8%B8%E7%94%A8API.html","/posts/Java/Java%E5%9F%BA%E7%A1%80/day09-ArrayList%E9%9B%86%E5%90%88_%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F.html","/posts/Java/Java%E5%9F%BA%E7%A1%80/day10-%E5%88%86%E7%B1%BB%E5%92%8Cstatic.html","/posts/Java/Java%E5%9F%BA%E7%A1%80/day11-%E7%BB%A7%E6%89%BF.html","/posts/Java/Java%E5%9F%BA%E7%A1%80/day12-%E6%8E%A5%E5%8F%A3%E5%92%8C%E5%86%85%E9%83%A8%E7%B1%BB.html","/posts/Java/Java%E5%9F%BA%E7%A1%80/day13-%E5%B8%B8%E7%94%A8API.html","/posts/Java/Java%E5%9F%BA%E7%A1%80/day14-%E5%B8%B8%E7%94%A8API.html","/posts/Java/Java%E5%9F%BA%E7%A1%80/day15-%E5%9F%BA%E7%A1%80%E5%8A%A0%E5%BC%BA.html","/posts/Java/Java%E5%9F%BA%E7%A1%80/day16-%E5%9F%BA%E7%A1%80%E5%8A%A0%E5%BC%BA.html","/posts/Java/Java%E5%9F%BA%E7%A1%80/day17-%E5%9F%BA%E7%A1%80%E5%8A%A0%E5%BC%BA.html","/posts/Java/Java%E5%9F%BA%E7%A1%80/java-advanced-spi.html","/posts/Java/Java%E5%9F%BA%E7%A1%80/java-basic-keywords.html","/posts/Java/Java%E5%9F%BA%E7%A1%80/java-basic-lan-basic.html","/posts/Java/Java%E5%9F%BA%E7%A1%80/java-basic-lan-sum.html","/posts/Java/Java%E5%9F%BA%E7%A1%80/java-basic-x-annotation.html","/posts/Java/Java%E5%9F%BA%E7%A1%80/java-basic-x-exception.html","/posts/Java/Java%E5%9F%BA%E7%A1%80/java-basic-x-generic.html","/posts/Java/Java%E5%9F%BA%E7%A1%80/java-basic-x-reflection.html","/posts/Web/frontend-lib/fe-lib-vue-preview-pdf.html","/posts/Web/frontend-problem/fe-request-localhost.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-x-framework-springmvc.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/cas/cas-x-logout-process.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/cas/cas-x-logout.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/cas/cas-x-overview.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/cas/cas-x-process.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/cas/cas-x-springboot.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-y-arch.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-y-cache-level1.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-y-cache-level2.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-y-config-list.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-y-config-load.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-y-config-mapper.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-y-datasource.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-y-dynamic-sql.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-y-init.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-y-plugin-page.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-y-plugin.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-y-sql-exec.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-y-trans.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-z-injection.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/shardingsphere/","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/timer/quartz-x-overview.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/timer/quartz-x-principle.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/timer/quartz-x-started.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/timer/springboot-x-task-elastic-job-timer.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/timer/springboot-x-task-executor-timer.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/timer/springboot-x-task-quartz-cluster-timer.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/timer/springboot-x-task-quartz-timer.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/timer/springboot-x-task-spring-task-timer.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/timer/springboot-x-task-timer.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/timer/springboot-x-task-xxl-job-timer.html","/private/%E4%B8%80%E4%BA%BA%E4%B8%80%E5%8F%A5%E5%AE%8B%E8%AF%8D.html","/posts/Java/Java%E9%9B%86%E5%90%88/day01-%E9%9B%86%E5%90%8801.html","/posts/Java/Java%E9%9B%86%E5%90%88/day02-%E9%9B%86%E5%90%8802.html","/site/Q_A.html","/posts/Docker/docker-03-basic-web-app.html","/posts/Docker/docker-06-data.html","/posts/Docker/docker-07-network.html","/posts/Docker/docker-action.html","/posts/Docker/docker-basic-overview.html","/posts/Docker/docker-compose-overview.html","/posts/Docker/docker-file-overview.html","/posts/Docker/docker-y-manage-portainer.html","/posts/Docker/docker-y-one-key-deploy.html","/posts/Docker/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E4%B8%8E%E5%AE%B9%E5%99%A8%E7%AE%A1%E7%90%86.html","/posts/Git/git-x-gitflow.html","/posts/Git/git-x-gitignore.html","/posts/Git/git-x-merge.html","/posts/Git/git-y-delete-error-commit-file.html","/posts/Git/gitlab-x-custom-hook.html","/posts/Git/gitlab-x-install.html","/posts/Git/gitlab-x-memory-size.html","/posts/Git/gitlab-x-runner-action.html","/posts/Git/gitlab-x-runner-install.html","/posts/Git/gitlab-x_problem.html","/posts/Linux/linux-a-shell.html","/posts/Linux/linux-j-all-tools.html","/posts/Linux/linux-j-cpu.html","/posts/Linux/linux-j-disk.html","/posts/Linux/linux-j-load.html","/posts/Linux/linux-j-mem.html","/posts/Linux/linux-j-monitor-overview.html","/posts/Linux/linux-j-net.html","/posts/Linux/linux-j-ps.html","/posts/Linux/linux-k-awk.html","/posts/Linux/linux-k-compress.html","/posts/Linux/linux-k-cut.html","/posts/Linux/linux-k-grep.html","/posts/Linux/linux-k-sed.html","/posts/Linux/linux-k-sort.html","/posts/Linux/linux-k-txt-overview.html","/posts/Linux/linux-k-uniq.html","/posts/Linux/linux-k-wc.html","/posts/Linux/linux-x-find-overview.html","/posts/Linux/linux-x-find.html","/posts/Linux/linux-x-locate.html","/posts/Linux/linux-x-whereis.html","/posts/Linux/linux-x-which.html","/posts/Linux/linux-y-cpu-top.html","/posts/Linux/linux-y-firewalld.html","/posts/Linux/linux-y-ftp-install.html","/posts/Linux/linux-y-pid-localtion.html","/posts/Linux/linux-z-swap.html","/posts/Linux/linux-z-tldr.html","/posts/Linux/linux-z-view-ip.html","/posts/Python/python-12306-coty-code.html","/posts/Python/python-advantage.html","/posts/Python/python-baotu.html","/posts/Python/python-beautiful-soup-started.html","/posts/Python/python-db-ddl.html","/posts/Python/python-douban-rating.html","/posts/Python/python-lxml.html","/posts/Python/python-maimai.html","/posts/Python/python-proxy.html","/posts/Python/python-scrapy-ajax.html","/posts/Python/python-scrapy-debugging-spiders.html","/posts/Python/python-scrapy-douban-top250.html","/posts/Python/python-scrapy-started.html","/posts/Python/python-selenium-started.html","/posts/Python/python-sms.html","/posts/Python/python-tieba.html","/posts/Python/python-wordcloud.html","/posts/Python/python-x-anaconda.html","/posts/Python/python-x-xpath.html","/posts/Redis/db-redis-y-install-remote.html","/posts/Redis/db-redis-y-install.html","/posts/Redis/redis-x-cache-penetration.html","/posts/Redis/redis-x-quest-key.html","/posts/Redis/redis-x-question-ache-valanche.html","/posts/Redis/redis-x-question-double-write.html","/posts/Redis/redis-x-questuin-cache-warm-up.html","/posts/Redis/redis-x-sentinel-install.html","/posts/Redis/redis-y-action-bloom.html","/posts/Redis/redis-y-action-client.html","/posts/Redis/redis-y-action-gen-test-data.html","/posts/Redis/redis-y-action-springboot.html","/posts/Redis/redis-y-action.html","/posts/Redis/%E7%AC%AC%E4%B8%80%E7%AB%A0%20Redis%E5%9F%BA%E7%A1%80.html","/posts/Redis/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20Redis%E9%AB%98%E7%BA%A7.html","/posts/Database/DM/dm-manage-sql.html","/posts/Database/DM/dm-operation-config-helper.html","/posts/Database/DM/dm-operation-console.html","/posts/Database/DM/dm-operation-create-user.html","/posts/Database/DM/dm-operation-dmrman.html","/posts/Database/DM/dm-operation-dts.html","/posts/Database/DM/dm-problem-contection.html","/posts/Database/DM/dm-problem-keys-domain.html","/posts/Database/DM/dm-problem-schema.html","/posts/Database/ES/elasticsearch-action-goods-search.html","/posts/Database/ES/elasticsearch-demo.html","/posts/Database/ES/elasticsearch-started.html","/posts/Database/ES/elasticsearch-vs-solr.html","/posts/Database/MongoDB/mongodb-action-base.html","/posts/Database/MongoDB/mongodb-action-bluk-operation.html","/posts/Database/MongoDB/mongodb-action-cursor.html","/posts/Database/MongoDB/mongodb-action-custom-query.html","/posts/Database/MongoDB/mongodb-action-multiple-datasources.html","/posts/Database/MongoDB/mongodb-action-query.html","/posts/Database/MongoDB/mongodb-action-template-repository.html","/posts/Database/MongoDB/mongodb-backup-import.html","/posts/Database/MongoDB/mongodb-backup.html","/posts/Database/MongoDB/mongodb-index-overview.html","/posts/Database/MongoDB/mongodb-problem-repair.html","/posts/Database/MongoDB/mongodb-problem-slow.html","/posts/Database/MongoDB/mongodb-started.html","/posts/Database/MongoDB/mongodb-x-sql-mongo-aggregation.html","/posts/Database/MongoDB/mongodb-x-sql-mongo-overview.html","/posts/Database/MySQL/mysql-x-optimize-bigtable-action.html","/posts/Database/MySQL/mysql-x-optimize-decompose-connection.html","/posts/Database/MySQL/mysql-x-optimize-like.html","/posts/Database/MySQL/mysql-x-optimize-slow2.html","/posts/Database/MySQL/mysql-x-optimize-sql.html","/posts/Database/MySQL/mysql-y-lock-category.html","/posts/Database/MySQL/mysql-y-lock-overview.html","/posts/Database/MySQL/mysql-y-lock.html","/posts/Database/MySQL/mysql-z-backup.html","/posts/Database/ORACLE/oracle-c-function-concat.html","/posts/Database/ORACLE/oracle-c-function-custom.html","/posts/Database/ORACLE/oracle-c-function-greatest.html","/posts/Database/ORACLE/oracle-c-function-round.html","/posts/Database/ORACLE/oracle-c-function-string.html","/posts/Database/ORACLE/oracle-i-notlike.html","/posts/Database/ORACLE/oracle-i-split.html","/posts/Database/ORACLE/oracle-y-backup-dmp.html","/posts/Database/ORACLE/oracle-y-non-exist-create.html","/posts/Database/ORACLE/oracle-y-partition-create.html","/posts/Database/ORACLE/oracle-y-partition-overview.html","/posts/Database/ORACLE/oracle-y-partition-query.html","/posts/Database/SOLR/solr-a-query-ui.html","/posts/Database/SOLR/solr-a-satrted.html","/posts/Database/SOLR/solr-b-highlight.html","/posts/Database/SOLR/solr-b-index.html","/posts/Database/SOLR/solr-b-query-parsing.html","/posts/Database/SOLR/solr-b-scheme-config.html","/posts/Database/SOLR/solr-i-case.html","/posts/Database/SOLR/solr-i-highlight.html","/posts/Database/SOLR/solr-i-multi-field.html","/posts/Database/SOLR/solr-i-special-characters.html","/posts/Database/SOLR/solr-j-ext.html","/posts/Database/SOLR/solr-j-ik-analyzer.html","/posts/Database/SOLR/solr-y-action-product-search.html","/posts/Database/SOLR/solr-z-think.html","/posts/Java/JavaJVM/java-jvm-debug-tools-linux.html","/posts/Java/JavaJVM/java-jvm-debug-tools-list.html","/posts/Java/JavaJVM/java-jvm-gc-fullgc.html","/posts/Java/JavaJVM/java-jvm-optimization-jstack.html","/posts/Java/JavaJVM/java-jvm-optimization-size.html","/posts/Java/JavaJVM/java-jvm-optimization.html","/posts/Java/JavaJVM/java-jvm-tools-overview.html","/posts/Java/JavaJVM/java-jvm-tools-visualvm.html","/posts/Java/JavaWeb/day01-%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/day01-%E5%A4%9A%E7%BA%BF%E7%A8%8B.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/day02-%E5%A4%9A%E7%BA%BF%E7%A8%8B.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-jmm.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-key-synchronized-principle.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-key-synchronized2.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-key-volatile-old.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-lock-reentrantlock-array-blocking-queue.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-lock-reentrantlock-back.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-lock-reentrantlock-condition-source.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-lock-reentrantlock-source.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-lock-reentrantlock-source2.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-x-lock-reentrantlock-source3.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-atomic.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-atomicinteger-source.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-atomicstampedreference-source.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-base.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-cas.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-cycle.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-deadlock.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-deadlock2.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-optimistic-lock.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-spinlock.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-thread-notify.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-threadlocal-leak.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-threadlocal-scene.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-threadlocal2.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-threadpool-create.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-threadpool-data.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-threadpool-example.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-threadpool-executors-create.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-threadpool-finish.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-threadpool-handler.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-threadpool-principle.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-threadpool-size.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-threadpool-task-executor.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-threadpool.html","/posts/Java/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/java-thread-y-threadpoolexecutor.html","/posts/Java/Java%E7%BC%96%E8%AF%91/java-command-javac.html","/posts/Java/Java%E7%BC%96%E8%AF%91/java-command-javap.html","/posts/Java/Java%E7%BC%96%E8%AF%91/java-command-overview.html","/posts/Java/Java%E9%9B%86%E5%90%88/day03-%E9%9B%86%E5%90%8803.html","/posts/Java/Java%E9%9B%86%E5%90%88/java-collection-ArrayList.html","/posts/Web/frontend-base/fe-download.html","/posts/Web/frontend-base/fe-editor-config.html","/posts/Web/frontend-base/fe-font-size-line-bottom.html","/posts/Web/frontend-base/fe-gzip.html","/posts/Web/frontend-base/fe-iframe.html","/posts/Web/frontend-base/fe-js-export.html","/posts/Web/frontend-base/fe-npmrun-postcss.html","/posts/Web/frontend-base/fe-vue-route-lazy-loading.html","/posts/Web/frontend-base/npm-manage.html","/posts/Web/frontend-base/vue-adapter.html","/posts/Web/frontend-css/css-attr-priority.html","/posts/Web/frontend-css/css-backgroud.html","/posts/Web/frontend-css/css-box-sizing.html","/posts/Web/frontend-css/css-calc.html","/posts/Web/frontend-css/css-ellipsis.html","/posts/Web/frontend-css/css-lamination.html","/posts/Web/frontend-css/css-sass-started.html","/posts/Web/frontend-css/css-tailwind-css.html","/posts/Web/frontend-js/AJAX.html","/posts/Web/frontend-js/JQuery.html","/posts/Web/frontend-js/JavaScript%E5%9F%BA%E7%A1%80.html","/posts/Web/frontend-js/JavaScript%E9%AB%98%E7%BA%A7.html","/posts/Web/frontend-layout/flex-grail-layout.html","/posts/Web/frontend-layout/flex-grid-layout.html","/posts/Web/frontend-layout/flex-layout-of-input-box.html","/posts/Web/frontend-layout/flex-layout-overview.html","/posts/Web/frontend-layout/flex-streaming-layout-example.html","/posts/Web/frontend-layout/flex-suspended-layout.html","/posts/Web/frontend-layout/layout-fixed-bottom-bar.html","/posts/Web/frontend-layout/layout-flex-layout-example.html","/posts/Web/frontend-layout/layout-horizontal-center.html","/posts/Web/frontend-layout/layout-vertical-center.html","/posts/Web/frontend-lib/element-admin-started.html","/posts/Web/frontend-lib/element-upload.html","/posts/Web/frontend-lib/fe-lib-caniuse.html","/posts/Web/frontend-lib/fe-lib-cross-domain.html","/posts/Web/frontend-lib/fe-lib-element-online-icon-garbled.html","/posts/Web/frontend-lib/fe-lib-element-teasing.html","/posts/Web/frontend-lib/fe-lib-eslint.html","/posts/Web/frontend-lib/fe-lib-form-generator.html","/posts/Web/frontend-lib/fe-lib-lodash.html","/posts/Web/frontend-lib/fe-lib-md5.html","/posts/Web/frontend-lib/fe-lib-media-recorde.html","/posts/Web/frontend-lib/fe-lib-print.html","/posts/Web/frontend-lib/fe-lib-resource-website.html","/posts/Web/frontend-lib/fe-lib-third-party-dependency.html","/posts/Web/frontend-lib/fe-lib-uniapp-rich-text-adapter.html","/posts/Web/frontend-lib/vue-moment-time-format.html","/posts/Web/frontend-problem/fe-npm-err-code-eresolve.html","/posts/Web/frontend-vue/Vue%E5%92%8CElement.html","/posts/Web/frontend-vue/Vue%E5%92%8C%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B.html","/posts/Web/frontend-vue/vue-axios.html","/posts/Web/frontend-vue/vue-back-top.html","/posts/Web/frontend-vue/vue-component-communication.html","/posts/Web/frontend-vue/vue-deploy.html","/posts/Web/frontend-vue/vue-filter.html","/posts/Web/frontend-vue/vue-introduce-picture-path.html","/posts/Web/frontend-vue/vue-online-compress.html","/posts/Web/frontend-vue/vue-page-no-updates.html","/posts/Web/frontend-vue/vue-plugin.html","/posts/Web/frontend-vue/vue-shake-instructions.html","/posts/Web/frontend-vue/vue-v-for.html","/posts/Web/frontend-vue/vue-watch.html","/posts/Web/frontend-vue/vue-x-lib-package.html","/posts/Web/frontend-vue/vuerouter-dynamic-route-matching.html","/posts/Web/frontend-vue/vuerouter-history.html","/posts/Web/frontend-vue/vuerouter-overview.html","/posts/Web/frontend-vue/vuerouter-route-jump.html","/posts/Web/frontend-vue/vuex-action.html","/posts/Web/frontend-vue/vuex-overview.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Maven/Maven%E9%AB%98%E7%BA%A7.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/Spring-day01.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/Spring-day02.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/Spring-day03.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-day04.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-overview.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-x-cyclic-dependence.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-x-framework-aop-source-1.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-x-framework-aop-source-2.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-x-framework-aop-source-3.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-x-framework-aop-source-4.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-x-framework-aop.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-x-framework-helloworld.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-x-framework-ioc-source-1.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-x-framework-ioc-source-2.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-x-framework-ioc-source-3.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-x-framework-ioc-source-31.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-x-framework-ioc.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-x-framework-springmvc-source-1.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-x-framework-springmvc-source-2.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-x-framework-transaction-invalid.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-x-framework-transaction.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-x-ioc-init.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-y-action-filter.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-y-annotation-configuration.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-y-aop-impl.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-y-aop-limit.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-y-aop-log.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-y-aop-overview.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-y-aop-repeat-submit.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-y-filter-interceptor.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-y-ioc-bean.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-y-ioc-config-bean.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-y-ioc-cyclic-dependence.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-y-ioc-problem.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-y-mvc-interceptor.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-y-mvc-interview.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-y-mvc-restful.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-y-problem-master-list.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-y-resttemplate.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-y-transactional-fail.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-y-transactional.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/SpringBoot%E5%9F%BA%E7%A1%80.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/SpringBoot%E9%AB%98%E7%BA%A7.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/Springboot.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-x-annotation-springboot-annotation.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-x-deploy-jar-3rd.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-x-hello-devtool.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-x-interface-version.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-x-overview.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-x-start-up.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-y-annotation-conditional.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-y-annotation-enable-import.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-y-annotation-enable.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-y-costom-springboot-starter.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-y-file-bigfile-upload.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-y-file-upload-download.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-y-monitor-acturator.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-y-monitor-admin-use.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-y-monitor-admin.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-y-permission-whitelist.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-y-source-autoconfig.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-y-source-import.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-y-source-kotlin.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-y-source-main.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-y-source-module.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-y-source-tomcat.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringMVC/day01.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringMVC/day02.html","/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringMVC/day03.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/api-doc/swagger-x-module.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/api-doc/swagger-x-use.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/database-connection-pool/dbcp-a-principle.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/database-connection-pool/dbcp-x-druid-mutil.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/database-connection-pool/dbcp-x-druid-overview.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/database-connection-pool/dbcp-y-druid-source-counter.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/database-connection-pool/dbcp-y-druid-source-data-structure.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/database-connection-pool/dbcp-y-druid-source-getconnection.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/database-connection-pool/dbcp-y-druid-source-init.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/database-connection-pool/dbcp-y-druid-source-principle.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/database-connection-pool/dbcp-y-druid-source-psp.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/database-connection-pool/dbcp-y-druid-source-recycle.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/database-connection-pool/dbcp-y-druid-source-removeAbandoned.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/database-connection-pool/dbcp-y-druid-source-shrink.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/database-connection-pool/dbcp-ydruid-source-status.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/hibernate/hibernate-x-entity.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/hibernate/hibernate-x-overview.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/hibernate/hibernate-x-query.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/hibernate/hibernate-y-maven-example.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/jdbc/JDBC-01.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/jdbc/JDBC-02.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/jpa/jpa-i-dynamic.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/jpa/jpa-i-genone-findone.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/jpa/jpa-i-query-overview.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/jpa/jpa-i-specification.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/jpa/jpa-j-join.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/jpa/jpa-j-multi-delete.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/jpa/jpa-k-gen-entity.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/jpa/jpa-k-mutil-ds.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/jpa/jpa-y-case.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/jpa/jpa-y-field.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/jpa/jpa-y-genone-error.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/jpa/jpa-y-like.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-day01.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-day02.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-day03.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-i-anotation.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-i-overview.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-i-pagehelper.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-z-adapter-db.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-z-base-opera.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-z-batch-opera.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-z-if-number.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-z-one-more-join.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-z-one-more-temp.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis/mybatis-z-pageHelper-source.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis-plus/mybatis-plus-x-gen-code.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis-plus/mybatis-plus-x-mysql.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/mybatis-plus/mybatis-plus-x-tenant.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/qr/qr-x-gen-qr.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/qr/qr-x-zxing-garbled-code.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/qr/qr-x-zxing-white-lace.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/shardingsphere/sharding-jdbc-x-jpa-read-write.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/shardingsphere/sharding-jdbc-x-sub-database-sub-table.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/shardingsphere/sharding-jdbc-x-sub-table.html","/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/shardingsphere/sharding-jdbc-x-tenant.html","/demo/slides.html","/","/collect.html","/friend.html","/visitorsbook.html","/news/6.html","/news/5.html","/news/4.html","/news/2.html","/news/3.html","/news/1.html"],Xr=ms(W1);Zn(Xr);const F2=s=>{const a=gs(),n=ks(),i=za();return g(()=>{var r;const e=s??((r=n.value.blog)==null?void 0:r.key)??"";if(!e)return console.warn("useBlogCategory: key not found"),{path:"/",map:{}};if(!Xr.value[e])throw new Error(`useBlogCategory: key ${e} is invalid`);const l=Xr.value[e][i.value],t={path:l.path,map:{}};for(const p in l.map){const c=l.map[p];t.map[p]={path:c.path,items:[]};for(const B of c.indexes){const{path:k,meta:h}=kn(E2[B]);t.map[p].items.push({path:k,info:h})}a.value.path===c.path&&(t.currentItems=t.map[p].items)}return t})},G1={article:{"/":{path:"/article/",indexes:[309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,379,32,380,381,382,383,384,385,386,387,388,389,390,391,33,34,35,36,37,38,39,40,41,42,43,44,392,393,394,395,396,397,398,399,400,401,402,403,404,120,125,121,126,122,123,124,405,406,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,45,46,47,48,49,50,51,52,53,54,55,422,56,423,57,58,424,59,60,425,426,61,62,63,64,427,65,428,429,66,430,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,431,432,433,82,434,435,83,436,437,438,439,440,441,442,84,443,444,445,446,447,448,449,450,451,452,453,454,455,456,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,457,458,186,187,459,188,189,190,191,192,193,194,195,196,197,198,199,200,460,461,462,201,202,203,204,205,206,207,463,464,208,209,210,211,242,243,244,245,246,465,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,466,467,468,212,213,214,215,216,217,218,219,469,220,470,471,221,222,223,224,225,472,473,474,475,476,477,226,227,228,229,478,479,480,481,482,483,484,485,486,487,230,488,231,489,490,232,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,233,234,307,308,506,235,507,236,237,238,239,240,241,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,273,555,556,274,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,275,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,276,277,278,279,280,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,281,282,283,284,285,286,287,288,289,290,291,292,293,687,688,689,690,294,691,692,693,694,695,696,697,698,699,295,700,701,702,703,296,297,298,299,300,301,302,303,304,305,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,118,102,119,104,105,106,107,108,103,109,110,111,112,113,114,115,116,117,0,11,1,12,13,2,5,9,704,14,3,306,4,15]}},star:{"/":{path:"/star/",indexes:[0,1,13,14]}},timeline:{"/":{path:"/timeline/",indexes:[309,705,706,707,708,6,7,8,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,379,32,380,381,382,383,384,385,386,387,388,389,390,391,33,34,35,36,37,38,39,40,41,42,43,44,392,393,394,395,396,397,398,399,400,401,402,403,404,120,125,121,126,122,123,124,405,406,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,45,46,47,48,49,50,51,52,53,54,55,422,56,423,57,58,424,59,60,425,426,61,62,63,64,427,65,428,429,66,430,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,431,432,433,82,434,435,83,436,437,438,439,440,441,442,84,443,444,445,446,447,448,449,450,451,452,453,454,455,456,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,457,458,186,187,459,188,189,190,191,192,193,194,195,196,197,198,199,200,460,461,462,201,202,203,204,205,206,207,463,464,208,209,210,211,242,243,244,245,246,465,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,466,467,468,212,213,214,215,216,217,218,219,469,220,470,471,221,222,223,224,225,472,473,474,475,476,477,226,227,228,229,478,479,480,481,482,483,484,485,486,487,230,488,231,489,490,232,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,233,234,307,308,506,235,507,236,237,238,239,240,241,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,273,555,556,274,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,275,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,276,277,278,279,280,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,281,282,283,284,285,286,287,288,289,290,291,292,293,687,688,689,690,294,691,692,693,694,695,696,697,698,699,295,700,701,702,703,296,297,298,299,300,301,302,303,304,305,709,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,118,102,119,104,105,106,107,108,103,109,110,111,112,113,114,115,116,117,710,711,712,713,714,0,11,1,12,13,2,5,9,10,704,14,3,306,4,15]}},news:{"/":{path:"/news/",indexes:[709,710,711,713,712,714]}}},Yr=ms(G1);Zn(Yr);const dl=s=>{const a=ks(),n=za();return g(()=>{var t;const i=s??((t=a.value.blog)==null?void 0:t.key)??"";if(!i)return console.warn("useBlogType: key not found"),{path:"/",items:[]};if(!Yr.value[i])throw new Error(`useBlogType: key ${s} is invalid`);const e=Yr.value[i][n.value],l={path:e.path,items:[]};for(const r of e.indexes){const{path:p,meta:c}=kn(E2[r]);l.items.push({path:p,info:c})}return l})},C2=Symbol(""),ap=()=>{const s=Fs(C2);if(!s)throw new Error("useTimeline() is called without provider.");return s},K1=()=>{const s=dl("timeline"),a=g(()=>{const n=[];return s.value.items.forEach(({info:i,path:e})=>{const l=Vo(i[Xs.date]);if(l){const t=l.getFullYear(),r=l.getMonth()+1,p=l.getDate();(!n[0]||n[0].year!==t)&&n.unshift({year:t,items:[]}),n[0].items.push({date:`${r}/${p}`,info:i,path:e})}}),{...s.value,config:n.reverse()}});ja(C2,a)},g2=Symbol(""),Bl=()=>{const s=Fs(g2);if(!s)throw new Error("useArticles() is called without provider.");return s},X1=()=>{const s=dl("article");ja(g2,s)},b2=Symbol.for("categoryMap"),kl=()=>{const s=Fs(b2);if(!s)throw new Error("useCategoryMap() is called without provider.");return s},Y1=()=>{const s=F2("category");ja(b2,s)},f2=Symbol(""),np=()=>{const s=Fs(f2);if(!s)throw new Error("useStars() is called without provider.");return s},Z1=()=>{const s=dl("star");ja(f2,s)},D2=Symbol.for("tagMap"),hl=()=>{const s=Fs(D2);if(!s)throw new Error("useTagMap() is called without provider.");return s},sF=()=>{const s=F2("tag");ja(D2,s)},aF=()=>{X1(),Y1(),Z1(),sF(),K1()},de=()=>{const s=hn(),a=Bs();return g(()=>({...s.value.blog,...a.value.blog}))},nF=s=>{const a=Bs();return g(()=>{const{[Xs.author]:n}=s.value;return n?$e(n):n===!1?[]:$e(a.value.author,!1)})},iF=s=>{const a=kl();return g(()=>ah(s.value[Xs.category]).map(n=>({name:n,path:a.value.map[n].path})))},eF=s=>{const a=hl();return g(()=>nh(s.value[Xs.tag]).map(n=>({name:n,path:a.value.map[n].path})))},lF=s=>g(()=>{const{[Xs.date]:a}=s.value;return Vo(a)}),_2=s=>{const a=Di(s,"info"),n=de(),i=nF(a),e=iF(a),l=eF(a),t=lF(a),r=Th(),p=g(()=>({author:i.value,category:e.value,date:t.value,localizedDate:a.value[Xs.localizedDate]??"",tag:l.value,isOriginal:a.value[Xs.isOriginal]??!1,readingTime:a.value[Xs.readingTime]??null,readingTimeLocale:a.value[Xs.readingTime]&&r.value?Lh(a.value[Xs.readingTime],r.value):null,pageview:s.path})),c=g(()=>n.value.articleInfo);return{info:p,items:c}},S2=L({name:"SocialMedias",setup(){const s=de(),a=la(),n=g(()=>ei(s.value.medias??{}).map(([i,e])=>typeof e=="string"?{name:i,icon:Q1[i],link:e}:{name:i,...e}));return()=>n.value.length?d("div",{class:"vp-social-medias"},n.value.map(({name:i,icon:e,link:l})=>d("a",{class:"vp-social-media",href:l,rel:"noopener noreferrer",target:"_blank","aria-label":i||"",...a.value?{}:{"data-balloon-pos":"up"},innerHTML:ni(e)?`<img class="icon ${i}-icon" src="${e}">`:e}))):null}}),Lt=L({name:"BloggerInfo",setup(){const s=de(),a=bt(),n=Bs(),i=Bl(),e=kl(),l=hl(),t=ap(),r=_i(),p=g(()=>{var h;return s.value.name??((h=$e(n.value.author)[0])==null?void 0:h.name)??a.value.title}),c=g(()=>s.value.avatar??n.value.logo),B=g(()=>n.value.blogLocales),k=g(()=>s.value.intro);return()=>{const{article:h,category:y,tag:u,timeline:A}=B.value,F=[[i.value.path,i.value.items.length,h],[e.value.path,Va(e.value.map).length,y],[l.value.path,Va(l.value.map).length,u],[t.value.path,t.value.items.length,A]];return d("div",{class:"vp-blogger-info",vocab:"https://schema.org/",typeof:"Person"},[d("div",{class:"vp-blogger",...k.value?{"aria-label":B.value.intro,"data-balloon-pos":"down",role:"link",onClick:()=>r(k.value)}:{}},[c.value?d("img",{class:"vp-blogger-avatar",src:_s(c.value),property:"image",alt:"Blogger Avatar",loading:"lazy"}):null,p.value?d("div",{class:"vp-blogger-name",property:"name"},p.value):null,s.value.description?d("div",{class:"vp-blogger-description",innerHTML:s.value.description}):null,k.value?d("meta",{property:"url",content:_s(k.value)}):null]),d("div",{class:"vp-blog-counts"},F.map(([C,b,m])=>d(Qs,{class:"vp-blog-count",to:C},()=>[d("div",{class:"count"},b),d("div",m)]))),d(S2)])}}}),ip=()=>d(hs,{name:"category"},()=>d("path",{d:"M148.41 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H148.41c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.311-40.31zM147.556 553.478H429.73c22.263 0 40.311 18.048 40.311 40.31v282.176c0 22.263-18.048 40.312-40.31 40.312H147.555c-22.263 0-40.311-18.049-40.311-40.312V593.79c0-22.263 18.048-40.311 40.31-40.311zM593.927 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H593.927c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.31-40.31zM730.22 920.502H623.926c-40.925 0-74.22-33.388-74.22-74.425V623.992c0-41.038 33.387-74.424 74.425-74.424h222.085c41.038 0 74.424 33.226 74.424 74.067v114.233c0 10.244-8.304 18.548-18.547 18.548s-18.548-8.304-18.548-18.548V623.635c0-20.388-16.746-36.974-37.33-36.974H624.13c-20.585 0-37.331 16.747-37.331 37.33v222.086c0 20.585 16.654 37.331 37.126 37.331H730.22c10.243 0 18.547 8.304 18.547 18.547 0 10.244-8.304 18.547-18.547 18.547z"}));ip.displayName="CategoryIcon";const ep=()=>d(hs,{name:"tag"},()=>d("path",{d:"M939.902 458.563L910.17 144.567c-1.507-16.272-14.465-29.13-30.737-30.737L565.438 84.098h-.402c-3.215 0-5.726 1.005-7.634 2.913l-470.39 470.39a10.004 10.004 0 000 14.164l365.423 365.424c1.909 1.908 4.42 2.913 7.132 2.913s5.223-1.005 7.132-2.913l470.39-470.39c2.01-2.11 3.014-5.023 2.813-8.036zm-240.067-72.121c-35.458 0-64.286-28.828-64.286-64.286s28.828-64.285 64.286-64.285 64.286 28.828 64.286 64.285-28.829 64.286-64.286 64.286z"}));ep.displayName="TagIcon";const lp=()=>d(hs,{name:"timeline"},()=>d("path",{d:"M511.997 70.568c-243.797 0-441.429 197.633-441.429 441.435 0 243.797 197.632 441.429 441.43 441.429S953.431 755.8 953.431 512.002c0-243.796-197.637-441.434-441.435-441.434zm150.158 609.093-15.605 15.61c-8.621 8.615-22.596 8.615-31.215 0L472.197 552.126c-4.95-4.944-4.34-14.888-4.34-24.677V247.14c0-12.19 9.882-22.07 22.07-22.07h22.07c12.19 0 22.07 9.882 22.07 22.07v273.218l128.088 128.088c8.62 8.62 8.62 22.595 0 31.215zm0 0"}));lp.displayName="TimelineIcon";const w2=()=>d(hs,{name:"slides"},()=>d("path",{d:"M896 170.667v426.666a85.333 85.333 0 0 1-85.333 85.334h-256v61.184l192.597 115.584-43.861 73.13-148.736-89.173v95.275h-85.334v-95.318l-148.736 89.216-43.861-73.13 192.597-115.627v-61.141h-256A85.333 85.333 0 0 1 128 597.333V170.667H85.333V85.333h853.334v85.334H896zm-682.667 0v426.666h597.334V170.667H213.333zM426.667 512h-85.334V341.333h85.334V512zm128 0h-85.334V256h85.334v256zm128 0h-85.334V384h85.334v128z"}));w2.displayName="SlideIcon";const x2=()=>d(hs,{name:"sticky"},()=>[d("path",{d:"m381.3 733.8l-161.9 118c-5.9 4.5-13.2 6.6-20.1 6.6-8.7 0-17.7-3.4-24.3-10-12.2-12.2-13.9-31.3-3.5-45.2l144.5-195.5-113.6-112.9c-11.1-11.1-13.2-28.4-5.5-42 5.5-8.7 52.1-76.4 155.5-51 1.8 0.3 3.5 0.3 5.6 0.7 4.2 0.3 9 0.7 14.2 1.7 21.9 3.5 60.8-13.9 94.5-42.7 32.3-27.5 53.1-59.4 53.1-81.6 0-5.2 0-10.8-0.3-16-0.7-20.8-2.1-52.8 21.5-76.4 28.1-28.1 72.9-30.6 103.9-5.2 0.6 0.3 1 1 1.7 1.7 16.7 16.3 187.5 187.2 189.3 188.9 14.5 14.6 22.9 34.4 22.9 55.3 0 20.8-8 40.2-22.9 54.8-23.7 23.6-56 22.6-77.1 21.6-4.9 0-10.5-0.4-15.7-0.4-20.8 0-45.8 14.6-70.5 41.3-34.3 37.5-55.5 85.8-53.8 107.7 0.7 6.9 2.1 19.1 2.4 20.8 25 101.4-42.7 147.6-50.7 152.8-13.9 8.4-31.6 6.3-42.7-4.8l-112.1-112.2z"})]);x2.displayName="StickyIcon";const Tt=()=>d(hs,{name:"article"},()=>d("path",{d:"M853.333 938.667H170.667A42.667 42.667 0 0 1 128 896V128a42.667 42.667 0 0 1 42.667-42.667h682.666A42.667 42.667 0 0 1 896 128v768a42.667 42.667 0 0 1-42.667 42.667zm-42.666-85.334V170.667H213.333v682.666h597.334zM298.667 256h170.666v170.667H298.667V256zm0 256h426.666v85.333H298.667V512zm0 170.667h426.666V768H298.667v-85.333zm256-384h170.666V384H554.667v-85.333z"}));Tt.displayName="ArticleIcon";const L2=()=>d(hs,{name:"book"},()=>d("path",{d:"M256 853.333h426.667A85.333 85.333 0 0 0 768 768V256a85.333 85.333 0 0 0-85.333-85.333H469.333a42.667 42.667 0 0 1 0-85.334h213.334A170.667 170.667 0 0 1 853.333 256v512a170.667 170.667 0 0 1-170.666 170.667H213.333A42.667 42.667 0 0 1 170.667 896V128a42.667 42.667 0 0 1 42.666-42.667h128A42.667 42.667 0 0 1 384 128v304.256l61.653-41.088a42.667 42.667 0 0 1 47.36 0l61.654 41.045V256A42.667 42.667 0 0 1 640 256v256a42.667 42.667 0 0 1-66.347 35.499l-104.32-69.547-104.32 69.547A42.667 42.667 0 0 1 298.667 512V170.667H256v682.666z"}));L2.displayName="BookIcon";const T2=()=>d(hs,{name:"link"},()=>d("path",{d:"M460.8 584.533c17.067 17.067 17.067 42.667 0 59.734-17.067 17.066-42.667 17.066-59.733 0-85.334-85.334-85.334-217.6 0-302.934L554.667 192C640 110.933 776.533 110.933 857.6 196.267c81.067 81.066 81.067 213.333 0 294.4l-68.267 64c0-34.134-4.266-68.267-17.066-102.4l21.333-21.334c51.2-46.933 55.467-128 4.267-179.2s-128-55.466-179.2-4.266c-4.267 0-4.267 4.266-4.267 4.266L465.067 401.067c-51.2 51.2-51.2 132.266-4.267 183.466m123.733-183.466C601.6 384 627.2 384 644.267 401.067c85.333 85.333 85.333 217.6 0 302.933l-153.6 149.333C405.333 934.4 268.8 934.4 187.733 849.067c-81.066-81.067-81.066-213.334 0-294.4l68.267-64c0 34.133 4.267 72.533 17.067 102.4L251.733 614.4C204.8 665.6 204.8 746.667 256 793.6c51.2 46.933 123.733 46.933 174.933 0l149.334-149.333c51.2-51.2 51.2-128 0-179.2-12.8-17.067-17.067-46.934 4.266-64z"}));T2.displayName="LinkIcon";const O2=()=>d(hs,{name:"project"},()=>d("path",{d:"M987.456 425.152H864V295.296a36.48 36.48 0 0 0-36.544-36.544h-360l-134.08-128.256A9.344 9.344 0 0 0 327.04 128H36.48A36.48 36.48 0 0 0 0 164.544v676.608a36.48 36.48 0 0 0 36.544 36.544h797.76a36.672 36.672 0 0 0 33.92-22.848L1021.44 475.52a36.48 36.48 0 0 0-33.92-50.304zM82.304 210.304h215.424l136.64 130.752h347.328v84.096H198.848A36.672 36.672 0 0 0 164.928 448L82.304 652.8V210.304zM808.32 795.456H108.544l118.08-292.608h699.904L808.32 795.52z"}));O2.displayName="ProjectIcon";const J2=()=>d(hs,{name:"friend"},()=>d("path",{d:"M860.16 213.333A268.373 268.373 0 0 0 512 186.027a267.52 267.52 0 0 0-348.16 404.48L428.8 855.893a118.613 118.613 0 0 0 166.4 0l264.96-265.386a267.52 267.52 0 0 0 0-377.174zM800 531.627l-264.96 264.96a32.427 32.427 0 0 1-46.08 0L224 530.347a183.04 183.04 0 0 1 0-256 182.187 182.187 0 0 1 256 0 42.667 42.667 0 0 0 60.587 0 182.187 182.187 0 0 1 256 0 183.04 183.04 0 0 1 3.413 256z"}));J2.displayName="FriendIcon";const Zr=()=>d(hs,{name:"slide-down"},()=>d("path",{d:"M108.775 312.23c13.553 0 27.106 3.734 39.153 11.806l375.205 250.338 363.641-252.808c32.587-21.624 76.499-12.83 98.123 19.757 21.685 32.467 12.95 76.56-19.576 98.184l-402.854 278.89c-23.733 15.901-54.694 15.962-78.547.12L69.501 442.097c-32.647-21.685-41.441-65.777-19.817-98.304 13.734-20.54 36.201-31.563 59.09-31.563Z"}));Zr.displayName="SlideDownIcon";const tp=()=>d("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",class:"empty-icon",viewBox:"0 0 1024 1024",innerHTML:'<defs><linearGradient id="f" x1="512.342" y1="2266.13" x2="512.342" y2="666.063" gradientUnits="userSpaceOnUse"><stop offset=".919" stop-color="#e6e6e6" stop-opacity="0"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="g" x1="528.912" y1="774" x2="388.088" y2="612" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#e6e6e6" stop-opacity="0"/></linearGradient><linearGradient id="h" x1="213.219" y1="721.704" x2="251.313" y2="683.61" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#d7d7d7"/><stop offset=".485" stop-color="#fafafa"/><stop offset="1" stop-color="#fafafa"/></linearGradient><linearGradient id="i" x1="724.813" y1="821.718" x2="768.656" y2="777.876" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fafafa"/></linearGradient><linearGradient id="a" x1="513.493" y1="714.594" x2="471.007" y2="544.188" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#999"/><stop offset="1" stop-color="#ccc"/></linearGradient><linearGradient id="b" x1="440.156" y1="564.031" x2="508.594" y2="495.594" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="l" x1="660.988" y1="754.156" x2="608.637" y2="544.188" xlink:href="#a"/><linearGradient id="m" x1="479.188" y1="774.219" x2="649.782" y2="603.625" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#b3b3b3"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="n" x1="447.121" y1="774.219" x2="394.661" y2="563.813" xlink:href="#a"/><linearGradient id="o" x1="494" y1="597" x2="628" y2="463" xlink:href="#b"/><linearGradient id="d" x1="610.485" y1="604.938" x2="697.298" y2="518.125" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fff"/></linearGradient><linearGradient id="p" x1="457.438" y1="619.25" x2="353.469" y2="619.25" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#e6e6e6" stop-opacity="0"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="q" x1="542.734" y1="674.25" x2="615.672" y2="601.313" xlink:href="#b"/><linearGradient id="c" x1="627.933" y1="358.938" x2="685.192" y2="422.531" gradientUnits="userSpaceOnUse"><stop offset=".4" stop-color="#e6e6e6" stop-opacity=".4"/><stop offset=".443" stop-color="#fff"/><stop offset=".6" stop-color="#ccc"/></linearGradient><linearGradient id="r" x1="618.547" y1="422.531" x2="681.547" y2="359.531" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#e6e6e6"/><stop offset=".761" stop-color="#fff"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="s" x1="625" y1="441.5" x2="697" y2="369.5" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset=".761" stop-color="#fff"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="t" x1="627.681" y1="361.438" x2="692.257" y2="433.156" xlink:href="#c"/><linearGradient id="u" x1="561.414" y1="735.438" x2="573.149" y2="688.375" xlink:href="#d"/><linearGradient id="v" x1="405" y1="485.875" x2="440" y2="450.875" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fff" stop-opacity=".702"/></linearGradient><linearGradient id="w" x1="404.61" y1="486.906" x2="441.86" y2="449.656" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset=".495" stop-color="#ccc" stop-opacity=".702"/><stop offset=".498" stop-color="#ccc"/><stop offset="1" stop-color="#fff" stop-opacity=".302"/></linearGradient><radialGradient id="e" cx="329.297" cy="647.578" r="8.172" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#fafafa"/><stop offset="1.2" stop-color="#e6e6e6"/></radialGradient><radialGradient id="j" cx="802.297" cy="673.578" r="8.172" xlink:href="#e"/><radialGradient id="k" cx="774.844" cy="642.75" r="5.531" xlink:href="#e"/></defs><path d="M512.33 666.07c441.828 0 800 358.18 800 800.03s-358.172 800.02-800 800.02-800-358.18-800-800.02 358.17-800.03 800-800.03z" style="fill:url(#f);fill-rule:evenodd"/><path d="m272 694 242-82 131 119-188 43z" style="fill:url(#g);fill-rule:evenodd"/><path fill="#b3b3b3" fill-rule="evenodd" d="M232.391 723.534a2.4 2.4 0 0 1 2.4 2.4v17.725a2.4 2.4 0 0 1-4.8 0v-17.725a2.4 2.4 0 0 1 2.4-2.4z"/><path d="M232.255 676.559c10.33 0 17.067 15.408 18.7 28.493 1.619 12.942-2.372 23.694-18.7 23.694-16.878 0-20.213-10.733-18.7-23.694 1.633-14.061 8.37-28.493 18.7-28.493z" style="fill:url(#h);fill-rule:evenodd"/><path fill="#b3b3b3" fill-rule="evenodd" d="M745.853 826h.938a2.4 2.4 0 0 1 2.4 2.4v22.238a2.4 2.4 0 0 1-2.4 2.4h-.938a2.4 2.4 0 0 1-2.4-2.4V828.4a2.4 2.4 0 0 1 2.4-2.4z"/><path d="M746.727 830.3c-19.438 0-23.278-9.326-21.541-20.59a34.467 34.467 0 0 1 3.289-10.369 16.628 16.628 0 0 1 0-9.112c2.889-12.327 12.059-20.911 18.356-20.911 6.56 0 15.468 9.1 18.356 20.911a14.589 14.589 0 0 1-.335 9.217 34.36 34.36 0 0 1 3.419 10.264c1.861 11.243-2.735 20.59-21.544 20.59z" style="fill:url(#i);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M328.841 654.562a6.571 6.571 0 0 0-5.2-5.027q-4.107-.952-.034-2.045a6.571 6.571 0 0 0 5.027-5.2q.952-4.109 2.045-.035a6.569 6.569 0 0 0 5.2 5.027q4.109.954.035 2.045a6.569 6.569 0 0 0-5.027 5.2q-.955 4.108-2.046.035z"/><path d="M328.383 653.73a6.567 6.567 0 0 0-5.2-5.027q-4.109-.954-.035-2.045a6.568 6.568 0 0 0 5.027-5.2q.954-4.107 2.046-.034a6.568 6.568 0 0 0 5.2 5.027q4.107.952.035 2.045a6.568 6.568 0 0 0-5.027 5.2q-.954 4.104-2.046.034z" style="fill:url(#e);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M801.841 680.562a6.571 6.571 0 0 0-5.2-5.027q-4.107-.952-.034-2.045a6.571 6.571 0 0 0 5.027-5.2q.952-4.109 2.045-.035a6.569 6.569 0 0 0 5.2 5.027q4.108.954.035 2.045a6.569 6.569 0 0 0-5.027 5.2q-.955 4.108-2.046.035z"/><path d="M801.383 679.73a6.567 6.567 0 0 0-5.2-5.027q-4.108-.954-.035-2.045a6.568 6.568 0 0 0 5.027-5.2q.954-4.107 2.046-.034a6.568 6.568 0 0 0 5.2 5.027q4.107.952.035 2.045a6.568 6.568 0 0 0-5.027 5.2q-.954 4.104-2.046.034z" style="fill:url(#j);fill-rule:evenodd"/><path d="M774.21 646.9a4.446 4.446 0 0 0-3.517-3.4q-2.778-.643-.023-1.383a4.443 4.443 0 0 0 3.4-3.517q.645-2.778 1.383-.023a4.443 4.443 0 0 0 3.517 3.4q2.778.645.023 1.383a4.446 4.446 0 0 0-3.4 3.517q-.645 2.78-1.383.023z" style="fill:url(#k);fill-rule:evenodd"/><path d="m385.6 714.6.158-150.658L598.9 544.174l-.158 150.658z" style="fill:url(#a);fill-rule:evenodd"/><path d="m385.474 564.031 214.763-19.383-36.171-49.067-215.559 17.634z" style="fill:url(#b);fill-rule:evenodd"/><path d="m598.744 694.832.156-150.658 71.975 59.319-.158 150.658z" style="fill:url(#l);fill-rule:evenodd"/><path d="m457.064 774.209.158-150.658 214.691-19.914-.158 150.663z" style="fill:url(#m);fill-rule:evenodd"/><path d="m384.566 714.459.158-150.659 72.5 59.75-.158 150.658z" style="fill:url(#n);fill-rule:evenodd"/><path d="M494 640s75.357-58.4 42-83-38.887 1.663-37 14 53.847 12.465 54-26c.2-49.979 75-125 75-125" style="fill:none;stroke-width:3px;stroke-dasharray:12 6;stroke:url(#o);fill-rule:evenodd"/><path d="m670.275 604.939-72.041-59.9 38.476-26.909 72.86 58.159z" style="fill:url(#d);fill-rule:evenodd"/><path d="m425.5 674.383-72.042-59.9 31.109-50.347 72.86 58.16z" style="fill:url(#p);fill-rule:evenodd"/><path d="m487.918 674.235 214.482-22.57-31.1-50.346-215.309 20.833z" style="fill:url(#q);fill-rule:evenodd"/><path style="fill:#fff;fill-rule:evenodd" d="m697.363 358.927-69.58 62.511-12.035 1.082z"/><path d="m697.363 358.927-69.58 62.511-12.035 1.082z" style="fill:url(#c);fill-rule:evenodd"/><path d="M615.748 422.52 604 413l92.089-53.46" style="fill:url(#r);fill-rule:evenodd"/><path d="m625 432 12 18 60-89" style="fill:url(#s);fill-rule:evenodd"/><path d="m626.98 421.335-2.471 11.828 70.918-71.735" style="fill:#fff;fill-rule:evenodd"/><path d="m626.98 421.335-2.471 11.828 70.918-71.735" style="fill:url(#t);fill-rule:evenodd"/><path d="m494.814 735.44 21.293-2.1v-6.613l-13.4 1.319v-6.965l10.977-1.08v-6.613l-10.977 1.08v-6.084l12.917-1.27v-6.525l-20.808 2.047v32.8zM521 732.863l7.054-.694v-11.241a106.361 106.361 0 0 0-1.014-11.274l.176-.017 2.645 7.586 4.453 11.553 4.32-.425 4.408-12.424 2.733-8.116.177-.018a111.811 111.811 0 0 0-1.014 11.474v11.241l7.185-.707V697l-8.552.841-5.025 14.646c-.618 1.956-1.147 4.08-1.808 6.173l-.22.022c-.617-1.968-1.146-3.987-1.808-5.818l-5.2-13.639-8.508.837v32.8zm37.213-3.661 7.891-.776v-10.889l3.835-.377c6.922-.681 12.961-4.714 12.961-12.517 0-8.111-5.951-10.082-13.181-9.371l-11.504 1.128v32.8zm7.891-17.881v-9.478l3.218-.316c3.792-.373 5.908.565 5.908 3.871 0 3.218-1.852 5.208-5.687 5.585zM594 725.682l7.891-.777v-26.274l8.905-.876v-6.524l-25.657 2.524v6.524l8.861-.871v26.274zm27.991-2.754 7.847-.772v-11.594l9.919-22.18-8.244.811-2.733 7.542c-.925 2.56-1.807 4.939-2.733 7.587l-.176.018c-.926-2.466-1.764-4.676-2.645-7.058l-2.734-7-8.375.824 9.874 20.233v11.594z" style="fill:url(#u);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M408.938 457.309a17.5 17.5 0 0 0 21.374 26.725 17.5 17.5 0 1 1-16.306-30.955 17.442 17.442 0 0 0-5.068 4.23z"/><circle cx="422.5" cy="468.375" r="17.5" style="fill:url(#v)"/><path fill="#ccc" fill-rule="evenodd" d="M391.76 451.5c-2.358 4.419 9.827 15.52 27.215 24.8 15.131 8.071 29.212 12.1 34.166 10.093-4.191 2.772-18.943-1.24-34.86-9.73-17.388-9.275-29.573-20.376-27.215-24.8a2.96 2.96 0 0 1 1.585-1.3 2.606 2.606 0 0 0-.891.937z"/><path d="M418.975 476.29c-17.388-9.275-29.573-20.376-27.215-24.8s18.363-.484 35.751 8.791 29.572 20.376 27.215 24.8-18.364.483-35.751-8.791zm31.634 5.732c1.824-3.42-8.789-12.642-23.7-20.6s-28.486-11.633-30.31-8.213 8.789 12.642 23.7 20.6 28.486 11.633 30.31 8.213zm-36.645-29.008-2.775 1.452.032 1.751 28.637 14.183.266-4.559z" style="fill:url(#w);fill-rule:evenodd"/><g class="people"><path style="fill:#f8cfad;fill-rule:evenodd" d="m612.131 676.5 1.362 3.532 3.255-2.324-1.361-3.532zM629.131 665.5l1.362 3.532 3.255-2.324-1.361-3.532z"/><path style="fill:#141a33;fill-rule:evenodd" d="m617.764 678.184-3.162-.078a11.028 11.028 0 0 0-1.034 3.454c-.258 2.006-1.177 5-.449 5.367 1.5 2.659 4.118-.215 4.118-.215s2.187-2.848 1.925-5.265c-.106-.973-1.181-1.869-1.398-3.263zM633.781 665.855l3.019.945a11.008 11.008 0 0 1-.137 3.6c-.4 1.981-.179 4.166-.986 4.277-2.283 2.03-3.827-1.533-3.827-1.533s-1.473-2.456-.444-4.659c.412-.88 1.718-1.385 2.375-2.63z"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M599.935 592.534s10.293 9.761 11.95 7.564 3.536-3.463-6.758-13.65z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M611.3 596.361c1.674-1.105 11.5 7.048 14.5 11.774s-12.705-4.36-14.632-6.776-1.54-3.893.132-4.998z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M621.815 607.988s1.809 2.549 2.433 1.756 2.475-1.064 2.449-1.138.1-.819 1.288-2.331-3.8-3.632-5.81-.494a2.556 2.556 0 0 0-.36 2.207z"/><path fill="#232c57" fill-rule="evenodd" d="M598 617s14.968-5.618 17 7a150.235 150.235 0 0 1 2 22s12.666 11.836 16 19c0 0-4.753-1.629-4 2 0 0-18.132-14.647-19-19s-9.148-18.716-12-31z"/><path d="M589 622s14.968-5.618 17 7a150.235 150.235 0 0 1 2 22s4.666 17.836 8 25c0 0-4.753-1.629-4 2 0 0-10.132-20.647-11-25s-9.148-18.716-12-31z" style="fill:#292966;fill-rule:evenodd"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M585.626 597.7s-10.292 9.761-11.95 7.563-3.536-3.463 6.758-13.65z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M574.259 601.529c-1.675-1.105-11.5 7.049-14.5 11.774s12.7-4.36 14.631-6.775 1.543-3.894-.131-4.999z"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M591.715 577.752s-.606 1.681 1.48 3.716-3.615 5.307-4.645 2.85-.48-2.716-.48-2.716z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M583.527 574.123c-.839 1.043.491 3.873 1.453 5.449s2.749 2.833 3.364 2.428 4.088-2.657 4-4-.228-3.4-.228-3.4 2.562-1.641 2.154-2.916-2.916-.154-2.916-.154a15.853 15.853 0 0 0-.227-2.224c-.189-.929-6.887-1.445-7.827 2.6s.558 1.805.227 2.217z"/><path fill="#232c57" fill-rule="evenodd" d="M584.227 567.758c2.1-.885 7.2-3.684 10.125.318s.842 4.385.989 5.294-1.894 5.69-1.341 6.63-3.865.8-4.657-1.179-2.844-.539-2.227-1.224-1.3-4.456-2.916-2.154a9.252 9.252 0 0 0 .309-1.38c-.115.192.259-3.257-.673-1.32s-2.1 1.037-3.069.762-1.8-1.118-1.071-1.689c.023-.016 2.436-3.172 4.531-4.058z"/><path d="M589 585c-2.584-.47-10.055.362-13 13 0 0 1.9 3.349 5 4s6 21 6 21 24.016 11.06 27-3c-.07-13.826-8-21-8-21s5.829-3.2 5-6-8.016-10.153-11-10-6 0-6 0-2.416 2.47-5 2z" style="fill:#f6bb07;fill-rule:evenodd"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M563.284 612.581s-.986 2.965-1.814 2.389-2.678-.3-2.675-.374-.333-.755-1.912-1.854 2.577-4.583 5.414-2.167a2.551 2.551 0 0 1 .987 2.006z"/></g>'});tp.displayName="EmptyIcon";const rp=()=>d(hs,{name:"lock"},()=>d("path",{d:"M787.168 952.268H236.832c-30.395 0-55.033-24.638-55.033-55.033V429.45c0-30.395 24.638-55.034 55.033-55.034h82.55V264.35c0-106.38 86.238-192.618 192.618-192.618S704.618 157.97 704.618 264.35v110.066h82.55c30.395 0 55.033 24.639 55.033 55.034v467.785c0 30.395-24.639 55.033-55.033 55.033zM484.483 672.046v115.122h55.034V672.046c31.99-11.373 55.033-41.605 55.033-77.496 0-45.592-36.958-82.55-82.55-82.55s-82.55 36.958-82.55 82.55c0 35.89 23.042 66.123 55.033 77.496zM622.067 264.35c0-60.788-49.28-110.067-110.067-110.067s-110.067 49.28-110.067 110.067v110.066h220.135V264.35z"}));rp.displayName="LockIcon";const tF=L({name:"ArticleItem",props:{info:{type:Object,required:!0},path:{type:String,required:!0}},slots:Object,setup(s,{slots:a}){const n=Di(s,"info"),{info:i,items:e}=_2(s);return()=>{var h,y,u;const{[ea.title]:l,[Xs.type]:t,[Xs.isEncrypted]:r=!1,[Xs.cover]:p,[Xs.excerpt]:c,[Xs.sticky]:B}=n.value,k=i.value;return d("div",{class:"vp-article-wrapper"},d("article",{class:"vp-article-item",vocab:"https://schema.org/",typeof:"Article"},[((h=a.cover)==null?void 0:h.call(a,{cover:p}))??(p?[d("img",{class:"vp-article-cover",src:_s(p),alt:"",loading:"lazy"}),d("meta",{property:"image",content:_s(p)})]:[]),B?d(x2):null,d(Qs,{to:s.path},()=>{var A;return((A=a.title)==null?void 0:A.call(a,{title:l,isEncrypted:r,type:t}))??d("header",{class:"vp-article-title"},[r?d(rp):null,t===Qr.slide?d(w2):null,d("span",{property:"headline"},l)])}),((y=a.excerpt)==null?void 0:y.call(a,{excerpt:c}))??(c?d("div",{class:"vp-article-excerpt",innerHTML:c}):null),d("hr",{class:"vp-article-hr"}),((u=a.info)==null?void 0:u.call(a,{info:k}))??d(u2,{info:k,...e.value?{items:e.value}:{}})]))}}}),I2=L({name:"Pagination",props:{total:{type:Number,default:10},perPage:{type:Number,default:10},current:{type:Number,default:1}},emits:["updateCurrentPage"],setup(s,{emit:a}){let n;const i=Bs(),e=M(""),l=g(()=>i.value.paginationLocales),t=g(()=>Math.ceil(s.total/s.perPage)),r=g(()=>!!t.value&&t.value!==1),p=g(()=>t.value<7?!1:s.current>4),c=g(()=>t.value<7?!1:s.current<t.value-3),B=g(()=>{const{current:y}=s;let u=1,A=t.value;const F=[];t.value>=7&&(y<=4&&y<t.value-3?(u=1,A=5):y>4&&y>=t.value-3?(A=t.value,u=t.value-4):t.value>7&&(u=y-2,A=y+2));for(let C=u;C<=A;C++)F.push(C);return F}),k=y=>a("updateCurrentPage",y),h=y=>{const u=parseInt(y,10);u<=t.value&&u>0?k(u):n.pop(`<svg viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" width="16" height="16"><path d="M64 512a448 448 0 1 0 896 0 448 448 0 1 0-896 0Z" fill="#FA5151"/><path d="m557.3 512 113.1-113.1c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L512 466.7 398.9 353.6c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L466.7 512 353.6 625.1c-12.5 12.5-12.5 32.8 0 45.3 6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4L512 557.3l113.1 113.1c6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4c12.5-12.5 12.5-32.8 0-45.3L557.3 512z" fill="#FFF"/></svg>${l.value.errorText.replace(/\$page/gu,t.value.toString())}`)};return as(()=>{n=new z0}),()=>d("div",{class:"vp-pagination"},r.value?d("nav",{class:"vp-pagination-list"},[d("div",{class:"vp-pagination-number "},[s.current>1?d("div",{class:"prev",role:"navigation",unselectable:"on",onClick:()=>k(s.current-1)},l.value.prev):null,p.value?[d("div",{role:"navigation",onClick:()=>k(1)},1),d("div",{class:"ellipsis"},"...")]:null,B.value.map(y=>d("div",{key:y,class:{active:s.current===y},role:"navigation",onClick:()=>k(y)},y)),c.value?[d("div",{class:"ellipsis"},"..."),d("div",{role:"navigation",onClick:()=>k(t.value)},t.value)]:null,s.current<t.value?d("div",{class:"next",role:"navigation",unselectable:"on",onClick:()=>k(s.current+1)},l.value.next):null]),d("div",{class:"vp-pagination-nav"},[d("label",{for:"navigation-text"},`${l.value.navigate}: `),d("input",{id:"navigation-text",value:e.value,onInput:({target:y})=>{e.value=y.value},onKeydown:y=>{y.key==="Enter"&&(y.preventDefault(),h(e.value))}}),d("button",{class:"vp-pagination-button",type:"button",role:"navigation",title:l.value.action,onClick:()=>h(e.value)},l.value.action)])]):[])}}),op=L({name:"ArticleList",props:{items:{type:Array,default:()=>[]}},setup(s){const a=Ta(),n=Fa(),i=de(),e=n2(),l=M(1),t=g(()=>i.value.articlePerPage??10),r=g(()=>s.items.slice((l.value-1)*t.value,l.value*t.value)),p=async c=>{l.value=c;const B={...a.query};!(B.page===c.toString()||c===1&&!B.page)&&(c===1?delete B.page:B.page=c.toString(),await n.push({path:a.path,query:B})),await ya(),e({selector:".vp-pageview"})};return as(()=>{const{page:c}=a.query;p(c?Number(c):1),os(l,()=>{const B=document.querySelector("#article-list").getBoundingClientRect().top+window.scrollY;setTimeout(()=>{window.scrollTo(0,B)},100)})}),()=>d("div",{id:"article-list",class:"vp-article-list",role:"feed"},r.value.length?[...r.value.map(({info:c,path:B},k)=>d(ps,{appear:!0,delay:k*.04},()=>d(tF,{key:B,info:c,path:B}))),d(I2,{current:l.value,perPage:t.value,total:s.items.length,onUpdateCurrentPage:p})]:d(tp))}}),P2=L({name:"CategoryList",setup(){const s=gs(),a=kl();return()=>d("ul",{class:"vp-category-list"},ei(a.value.map).sort(([,n],[,i])=>i.items.length-n.items.length).map(([n,{path:i,items:e}])=>d("li",{class:["vp-category",`color${pl(n,Number(ti.colorNumber))}`,{active:i===s.value.path}]},d(Qs,{to:i},()=>[n,d("span",{class:"count"},e.length)]))))}}),R2=L({name:"TagList",setup(){const s=ks(),a=hl(),n=i=>{var e;return i===((e=s.value.blog)==null?void 0:e.name)};return()=>d("ul",{class:"tag-list-wrapper"},ei(a.value.map).sort(([,i],[,e])=>e.items.length-i.items.length).map(([i,{path:e,items:l}])=>d("li",{class:["tag",`color${pl(i,Number(ti.colorNumber))}`,{active:n(i)}]},d(Qs,{to:e},()=>[i,d("span",{class:"tag-num"},l.length)]))))}}),rF=L({name:"TimelineList",setup(){const s=Bs(),a=ap(),n=_i(),i=g(()=>s.value.blogLocales.timeline);return()=>d("div",{class:"timeline-list-wrapper"},[d("div",{class:"timeline-list-title",onClick:()=>n(a.value.path)},[d(lp),d("span",{class:"num"},a.value.items.length),i.value]),d("hr"),d("div",{class:"timeline-content"},d("ul",{class:"timeline-list"},a.value.config.map(({year:e,items:l},t)=>d(ps,{appear:!0,delay:.08*(t+1)},()=>d("li",[d("h3",{class:"timeline-year"},e),d("ul",{class:"timeline-year-wrapper"},l.map(({date:r,info:p,path:c})=>d("li",{class:"timeline-item"},[d("span",{class:"timeline-date"},r),d(Qs,{class:"timeline-title",to:c},()=>p[ea.title])])))])))))])}}),oF={article:Tt,category:ip,tag:ep,timeline:lp},M2=L({name:"InfoList",setup(){const s=Bs(),a=Bl(),n=kl(),i=g(()=>Va(n.value.map).length),e=np(),l=hl(),t=g(()=>Va(l.value.map).length),r=_i(),p=M("article"),c=g(()=>s.value.blogLocales);return()=>d("div",{class:"vp-blog-infos"},[d("div",{class:"vp-blog-type-switcher"},ei(oF).map(([B,k])=>d("button",{type:"button",class:"vp-blog-type-button",onClick:()=>{p.value=B}},d("div",{class:["icon-wrapper",{active:p.value===B}],"aria-label":c.value[B],"data-balloon-pos":"up"},d(k))))),d(ps,()=>p.value==="article"?d("div",{class:"vp-star-article-wrapper"},[d("div",{class:"title",onClick:()=>r(a.value.path)},[d(Tt),d("span",{class:"num"},a.value.items.length),c.value.article]),d("hr"),e.value.items.length?d("ul",{class:"vp-star-articles"},e.value.items.map(({info:B,path:k},h)=>d(ps,{appear:!0,delay:.08*(h+1)},()=>d("li",{class:"vp-star-article"},d(Qs,{to:k},()=>B[ea.title]))))):d("div",{class:"vp-star-article-empty"},c.value.empty.replace("$text",c.value.star))]):p.value==="category"?d("div",{class:"vp-category-wrapper"},[i.value?[d("div",{class:"title",onClick:()=>r(n.value.path)},[d(ip),d("span",{class:"num"},i.value),c.value.category]),d("hr"),d(ps,{delay:.04},()=>d(P2))]:d("div",{class:"vp-category-empty"},c.value.empty.replace("$text",c.value.category))]):p.value==="tag"?d("div",{class:"vp-tag-wrapper"},[t.value?[d("div",{class:"title",onClick:()=>r(l.value.path)},[d(ep),d("span",{class:"num"},t.value),c.value.tag]),d("hr"),d(ps,{delay:.04},()=>d(R2))]:d("div",{class:"vp-tag-empty"},c.value.empty.replace("$text",c.value.tag))]):d(ps,()=>d(rF)))])}}),yl=L({name:"BlogWrapper",slots:Object,setup(s,{slots:a}){const{isMobile:n}=Si();return()=>[d(ce),d(cl,{noSidebar:!0,noToc:!0},{default:()=>a.default(),navScreenBottom:()=>d(Lt),sidebar:n.value?()=>d(M2):null})]}}),ul=()=>d("aside",{class:"vp-blog-info-wrapper"},[d(ps,()=>d(Lt)),d(ps,{delay:.04},()=>d(M2))]);ul.displayName="InfoPanel";const pF=L({name:"BlogPage",setup(){const s=gs(),a=ks(),n=kl(),i=hl();return()=>{const{key:e="",name:l=""}=a.value.blog||{},t=l?e==="category"?n.value.map[l].items:e==="tag"?i.value.map[l].items:[]:[];return d(yl,()=>d("div",{class:"vp-page vp-blog"},d("div",{class:"blog-page-wrapper"},[d("main",{id:"main-content",class:"vp-blog-main"},[d(ps,()=>e==="category"?d(P2):e==="tag"?d(R2):null),l?d(ps,{appear:!0,delay:.24},()=>d(op,{key:s.value.path,items:t})):null]),d(ps,{delay:.16},()=>d(ul,{key:"blog"}))])))}}}),cF=L({__name:"SwitchBtn",props:{bingData:{type:Object,required:!0},lDisabled:Boolean,rDisabled:Boolean},emits:["leftClick","rightClick"],setup(s,{expose:a,emit:n}){a();const i=s,e=g(()=>{if(i.bingData.copyright!=null){const c=i.bingData.copyright.indexOf("(");return c!=-1?i.bingData.copyright.substring(0,c):i.bingData.copyright}return i.bingData.copyright}),l=n,p={props:i,title:e,emit:l,leftClick:()=>{l("leftClick")},rightClick:()=>{l("rightClick")}};return Object.defineProperty(p,"__isScriptSetup",{enumerable:!1,value:!0}),p}}),dF={id:"BingSwitchWrapper"},BF=["href"],kF={id:"bingLink-text"};function hF(s,a,n,i,e,l){return Rs(),Ba("div",dF,[n.bingData?(Rs(),Ba("a",{key:0,href:n.bingData.copyrightlink,target:"_Blank",id:"bingLink"},[a[0]||(a[0]=Y("div",{class:"bingLink-icon"},[Y("svg",{class:"mapPin",height:"16",width:"16",viewBox:"0 0 12 12","aria-hidden":"true",role:"presentation"},[Y("path",{d:"M0 0h12v12h-12z",fill:"none"}),Y("path",{d:"M6.5 3a1.5 1.5 0 1 0 1.5 1.5 1.5 1.5 0 0 0-1.5-1.5zm0-3a4.5 4.5 0 0 0-4.5 4.5 5.607 5.607 0 0 0 .087.873c.453 2.892 2.951 5.579 3.706 6.334a1 1 0 0 0 1.414 0c.755-.755 3.253-3.442 3.706-6.334a5.549 5.549 0 0 0 .087-.873 4.5 4.5 0 0 0-4.5-4.5zm3.425 5.218c-.36 2.296-2.293 4.65-3.425 5.782-1.131-1.132-3.065-3.486-3.425-5.782a4.694 4.694 0 0 1-.075-.718 3.5 3.5 0 0 1 7 0 4.634 4.634 0 0 1-.075.718z"})])],-1)),Y("div",kF,Qn(i.title),1)],8,BF)):Gi("v-if",!0),Y("div",{id:"left",onClick:i.leftClick,class:Zi({disabled:n.lDisabled})},null,2),Y("div",{id:"right",onClick:i.rightClick,class:Zi({disabled:n.rDisabled})},null,2)])}const yF=xn(cF,[["render",hF],["__scopeId","data-v-c8ff4d24"],["__file","SwitchBtn.vue"]]);function j2(s,a){return function(){return s.apply(a,arguments)}}const{toString:uF}=Object.prototype,{getPrototypeOf:pp}=Object,Ot=(s=>a=>{const n=uF.call(a);return s[n]||(s[n]=n.slice(8,-1).toLowerCase())})(Object.create(null)),sn=s=>(s=s.toLowerCase(),a=>Ot(a)===s),Jt=s=>a=>typeof a===s,{isArray:Be}=Array,We=Jt("undefined");function AF(s){return s!==null&&!We(s)&&s.constructor!==null&&!We(s.constructor)&&La(s.constructor.isBuffer)&&s.constructor.isBuffer(s)}const q2=sn("ArrayBuffer");function vF(s){let a;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?a=ArrayBuffer.isView(s):a=s&&s.buffer&&q2(s.buffer),a}const mF=Jt("string"),La=Jt("function"),V2=Jt("number"),It=s=>s!==null&&typeof s=="object",EF=s=>s===!0||s===!1,ql=s=>{if(Ot(s)!=="object")return!1;const a=pp(s);return(a===null||a===Object.prototype||Object.getPrototypeOf(a)===null)&&!(Symbol.toStringTag in s)&&!(Symbol.iterator in s)},FF=sn("Date"),CF=sn("File"),gF=sn("Blob"),bF=sn("FileList"),fF=s=>It(s)&&La(s.pipe),DF=s=>{let a;return s&&(typeof FormData=="function"&&s instanceof FormData||La(s.append)&&((a=Ot(s))==="formdata"||a==="object"&&La(s.toString)&&s.toString()==="[object FormData]"))},_F=sn("URLSearchParams"),[SF,wF,xF,LF]=["ReadableStream","Request","Response","Headers"].map(sn),TF=s=>s.trim?s.trim():s.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"");function Al(s,a,{allOwnKeys:n=!1}={}){if(s===null||typeof s>"u")return;let i,e;if(typeof s!="object"&&(s=[s]),Be(s))for(i=0,e=s.length;i<e;i++)a.call(null,s[i],i,s);else{const l=n?Object.getOwnPropertyNames(s):Object.keys(s),t=l.length;let r;for(i=0;i<t;i++)r=l[i],a.call(null,s[r],r,s)}}function z2(s,a){a=a.toLowerCase();const n=Object.keys(s);let i=n.length,e;for(;i-- >0;)if(e=n[i],a===e.toLowerCase())return e;return null}const hi=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global,N2=s=>!We(s)&&s!==hi;function so(){const{caseless:s}=N2(this)&&this||{},a={},n=(i,e)=>{const l=s&&z2(a,e)||e;ql(a[l])&&ql(i)?a[l]=so(a[l],i):ql(i)?a[l]=so({},i):Be(i)?a[l]=i.slice():a[l]=i};for(let i=0,e=arguments.length;i<e;i++)arguments[i]&&Al(arguments[i],n);return a}const OF=(s,a,n,{allOwnKeys:i}={})=>(Al(a,(e,l)=>{n&&La(e)?s[l]=j2(e,n):s[l]=e},{allOwnKeys:i}),s),JF=s=>(s.charCodeAt(0)===65279&&(s=s.slice(1)),s),IF=(s,a,n,i)=>{s.prototype=Object.create(a.prototype,i),s.prototype.constructor=s,Object.defineProperty(s,"super",{value:a.prototype}),n&&Object.assign(s.prototype,n)},PF=(s,a,n,i)=>{let e,l,t;const r={};if(a=a||{},s==null)return a;do{for(e=Object.getOwnPropertyNames(s),l=e.length;l-- >0;)t=e[l],(!i||i(t,s,a))&&!r[t]&&(a[t]=s[t],r[t]=!0);s=n!==!1&&pp(s)}while(s&&(!n||n(s,a))&&s!==Object.prototype);return a},RF=(s,a,n)=>{s=String(s),(n===void 0||n>s.length)&&(n=s.length),n-=a.length;const i=s.indexOf(a,n);return i!==-1&&i===n},MF=s=>{if(!s)return null;if(Be(s))return s;let a=s.length;if(!V2(a))return null;const n=new Array(a);for(;a-- >0;)n[a]=s[a];return n},jF=(s=>a=>s&&a instanceof s)(typeof Uint8Array<"u"&&pp(Uint8Array)),qF=(s,a)=>{const i=(s&&s[Symbol.iterator]).call(s);let e;for(;(e=i.next())&&!e.done;){const l=e.value;a.call(s,l[0],l[1])}},VF=(s,a)=>{let n;const i=[];for(;(n=s.exec(a))!==null;)i.push(n);return i},zF=sn("HTMLFormElement"),NF=s=>s.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,function(n,i,e){return i.toUpperCase()+e}),$c=(({hasOwnProperty:s})=>(a,n)=>s.call(a,n))(Object.prototype),HF=sn("RegExp"),H2=(s,a)=>{const n=Object.getOwnPropertyDescriptors(s),i={};Al(n,(e,l)=>{let t;(t=a(e,l,s))!==!1&&(i[l]=t||e)}),Object.defineProperties(s,i)},UF=s=>{H2(s,(a,n)=>{if(La(s)&&["arguments","caller","callee"].indexOf(n)!==-1)return!1;const i=s[n];if(La(i)){if(a.enumerable=!1,"writable"in a){a.writable=!1;return}a.set||(a.set=()=>{throw Error("Can not rewrite read-only method '"+n+"'")})}})},$F=(s,a)=>{const n={},i=e=>{e.forEach(l=>{n[l]=!0})};return Be(s)?i(s):i(String(s).split(a)),n},QF=()=>{},WF=(s,a)=>s!=null&&Number.isFinite(s=+s)?s:a,yr="abcdefghijklmnopqrstuvwxyz",Qc="0123456789",U2={DIGIT:Qc,ALPHA:yr,ALPHA_DIGIT:yr+yr.toUpperCase()+Qc},GF=(s=16,a=U2.ALPHA_DIGIT)=>{let n="";const{length:i}=a;for(;s--;)n+=a[Math.random()*i|0];return n};function KF(s){return!!(s&&La(s.append)&&s[Symbol.toStringTag]==="FormData"&&s[Symbol.iterator])}const XF=s=>{const a=new Array(10),n=(i,e)=>{if(It(i)){if(a.indexOf(i)>=0)return;if(!("toJSON"in i)){a[e]=i;const l=Be(i)?[]:{};return Al(i,(t,r)=>{const p=n(t,e+1);!We(p)&&(l[r]=p)}),a[e]=void 0,l}}return i};return n(s,0)},YF=sn("AsyncFunction"),ZF=s=>s&&(It(s)||La(s))&&La(s.then)&&La(s.catch),$2=((s,a)=>s?setImmediate:a?((n,i)=>(hi.addEventListener("message",({source:e,data:l})=>{e===hi&&l===n&&i.length&&i.shift()()},!1),e=>{i.push(e),hi.postMessage(n,"*")}))(`axios@${Math.random()}`,[]):n=>setTimeout(n))(typeof setImmediate=="function",La(hi.postMessage)),s8=typeof queueMicrotask<"u"?queueMicrotask.bind(hi):typeof process<"u"&&process.nextTick||$2,_={isArray:Be,isArrayBuffer:q2,isBuffer:AF,isFormData:DF,isArrayBufferView:vF,isString:mF,isNumber:V2,isBoolean:EF,isObject:It,isPlainObject:ql,isReadableStream:SF,isRequest:wF,isResponse:xF,isHeaders:LF,isUndefined:We,isDate:FF,isFile:CF,isBlob:gF,isRegExp:HF,isFunction:La,isStream:fF,isURLSearchParams:_F,isTypedArray:jF,isFileList:bF,forEach:Al,merge:so,extend:OF,trim:TF,stripBOM:JF,inherits:IF,toFlatObject:PF,kindOf:Ot,kindOfTest:sn,endsWith:RF,toArray:MF,forEachEntry:qF,matchAll:VF,isHTMLForm:zF,hasOwnProperty:$c,hasOwnProp:$c,reduceDescriptors:H2,freezeMethods:UF,toObjectSet:$F,toCamelCase:NF,noop:QF,toFiniteNumber:WF,findKey:z2,global:hi,isContextDefined:N2,ALPHABET:U2,generateString:GF,isSpecCompliantForm:KF,toJSONObject:XF,isAsyncFn:YF,isThenable:ZF,setImmediate:$2,asap:s8};function rs(s,a,n,i,e){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=s,this.name="AxiosError",a&&(this.code=a),n&&(this.config=n),i&&(this.request=i),e&&(this.response=e,this.status=e.status?e.status:null)}_.inherits(rs,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:_.toJSONObject(this.config),code:this.code,status:this.status}}});const Q2=rs.prototype,W2={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(s=>{W2[s]={value:s}});Object.defineProperties(rs,W2);Object.defineProperty(Q2,"isAxiosError",{value:!0});rs.from=(s,a,n,i,e,l)=>{const t=Object.create(Q2);return _.toFlatObject(s,t,function(p){return p!==Error.prototype},r=>r!=="isAxiosError"),rs.call(t,s.message,a,n,i,e),t.cause=s,t.name=s.name,l&&Object.assign(t,l),t};const a8=null;function ao(s){return _.isPlainObject(s)||_.isArray(s)}function G2(s){return _.endsWith(s,"[]")?s.slice(0,-2):s}function Wc(s,a,n){return s?s.concat(a).map(function(e,l){return e=G2(e),!n&&l?"["+e+"]":e}).join(n?".":""):a}function n8(s){return _.isArray(s)&&!s.some(ao)}const i8=_.toFlatObject(_,{},null,function(a){return/^is[A-Z]/.test(a)});function Pt(s,a,n){if(!_.isObject(s))throw new TypeError("target must be an object");a=a||new FormData,n=_.toFlatObject(n,{metaTokens:!0,dots:!1,indexes:!1},!1,function(A,F){return!_.isUndefined(F[A])});const i=n.metaTokens,e=n.visitor||B,l=n.dots,t=n.indexes,p=(n.Blob||typeof Blob<"u"&&Blob)&&_.isSpecCompliantForm(a);if(!_.isFunction(e))throw new TypeError("visitor must be a function");function c(u){if(u===null)return"";if(_.isDate(u))return u.toISOString();if(!p&&_.isBlob(u))throw new rs("Blob is not supported. Use a Buffer instead.");return _.isArrayBuffer(u)||_.isTypedArray(u)?p&&typeof Blob=="function"?new Blob([u]):Buffer.from(u):u}function B(u,A,F){let C=u;if(u&&!F&&typeof u=="object"){if(_.endsWith(A,"{}"))A=i?A:A.slice(0,-2),u=JSON.stringify(u);else if(_.isArray(u)&&n8(u)||(_.isFileList(u)||_.endsWith(A,"[]"))&&(C=_.toArray(u)))return A=G2(A),C.forEach(function(m,f){!(_.isUndefined(m)||m===null)&&a.append(t===!0?Wc([A],f,l):t===null?A:A+"[]",c(m))}),!1}return ao(u)?!0:(a.append(Wc(F,A,l),c(u)),!1)}const k=[],h=Object.assign(i8,{defaultVisitor:B,convertValue:c,isVisitable:ao});function y(u,A){if(!_.isUndefined(u)){if(k.indexOf(u)!==-1)throw Error("Circular reference detected in "+A.join("."));k.push(u),_.forEach(u,function(C,b){(!(_.isUndefined(C)||C===null)&&e.call(a,C,_.isString(b)?b.trim():b,A,h))===!0&&y(C,A?A.concat(b):[b])}),k.pop()}}if(!_.isObject(s))throw new TypeError("data must be an object");return y(s),a}function Gc(s){const a={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(s).replace(/[!'()~]|%20|%00/g,function(i){return a[i]})}function cp(s,a){this._pairs=[],s&&Pt(s,this,a)}const K2=cp.prototype;K2.append=function(a,n){this._pairs.push([a,n])};K2.toString=function(a){const n=a?function(i){return a.call(this,i,Gc)}:Gc;return this._pairs.map(function(e){return n(e[0])+"="+n(e[1])},"").join("&")};function e8(s){return encodeURIComponent(s).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function X2(s,a,n){if(!a)return s;const i=n&&n.encode||e8,e=n&&n.serialize;let l;if(e?l=e(a,n):l=_.isURLSearchParams(a)?a.toString():new cp(a,n).toString(i),l){const t=s.indexOf("#");t!==-1&&(s=s.slice(0,t)),s+=(s.indexOf("?")===-1?"?":"&")+l}return s}class Kc{constructor(){this.handlers=[]}use(a,n,i){return this.handlers.push({fulfilled:a,rejected:n,synchronous:i?i.synchronous:!1,runWhen:i?i.runWhen:null}),this.handlers.length-1}eject(a){this.handlers[a]&&(this.handlers[a]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(a){_.forEach(this.handlers,function(i){i!==null&&a(i)})}}const Y2={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},l8=typeof URLSearchParams<"u"?URLSearchParams:cp,t8=typeof FormData<"u"?FormData:null,r8=typeof Blob<"u"?Blob:null,o8={isBrowser:!0,classes:{URLSearchParams:l8,FormData:t8,Blob:r8},protocols:["http","https","file","blob","url","data"]},dp=typeof window<"u"&&typeof document<"u",no=typeof navigator=="object"&&navigator||void 0,p8=dp&&(!no||["ReactNative","NativeScript","NS"].indexOf(no.product)<0),c8=typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function",d8=dp&&window.location.href||"http://localhost",B8=Object.freeze(Object.defineProperty({__proto__:null,hasBrowserEnv:dp,hasStandardBrowserEnv:p8,hasStandardBrowserWebWorkerEnv:c8,navigator:no,origin:d8},Symbol.toStringTag,{value:"Module"})),ma={...B8,...o8};function k8(s,a){return Pt(s,new ma.classes.URLSearchParams,Object.assign({visitor:function(n,i,e,l){return ma.isNode&&_.isBuffer(n)?(this.append(i,n.toString("base64")),!1):l.defaultVisitor.apply(this,arguments)}},a))}function h8(s){return _.matchAll(/\w+|\[(\w*)]/g,s).map(a=>a[0]==="[]"?"":a[1]||a[0])}function y8(s){const a={},n=Object.keys(s);let i;const e=n.length;let l;for(i=0;i<e;i++)l=n[i],a[l]=s[l];return a}function Z2(s){function a(n,i,e,l){let t=n[l++];if(t==="__proto__")return!0;const r=Number.isFinite(+t),p=l>=n.length;return t=!t&&_.isArray(e)?e.length:t,p?(_.hasOwnProp(e,t)?e[t]=[e[t],i]:e[t]=i,!r):((!e[t]||!_.isObject(e[t]))&&(e[t]=[]),a(n,i,e[t],l)&&_.isArray(e[t])&&(e[t]=y8(e[t])),!r)}if(_.isFormData(s)&&_.isFunction(s.entries)){const n={};return _.forEachEntry(s,(i,e)=>{a(h8(i),e,n,0)}),n}return null}function u8(s,a,n){if(_.isString(s))try{return(a||JSON.parse)(s),_.trim(s)}catch(i){if(i.name!=="SyntaxError")throw i}return(n||JSON.stringify)(s)}const vl={transitional:Y2,adapter:["xhr","http","fetch"],transformRequest:[function(a,n){const i=n.getContentType()||"",e=i.indexOf("application/json")>-1,l=_.isObject(a);if(l&&_.isHTMLForm(a)&&(a=new FormData(a)),_.isFormData(a))return e?JSON.stringify(Z2(a)):a;if(_.isArrayBuffer(a)||_.isBuffer(a)||_.isStream(a)||_.isFile(a)||_.isBlob(a)||_.isReadableStream(a))return a;if(_.isArrayBufferView(a))return a.buffer;if(_.isURLSearchParams(a))return n.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),a.toString();let r;if(l){if(i.indexOf("application/x-www-form-urlencoded")>-1)return k8(a,this.formSerializer).toString();if((r=_.isFileList(a))||i.indexOf("multipart/form-data")>-1){const p=this.env&&this.env.FormData;return Pt(r?{"files[]":a}:a,p&&new p,this.formSerializer)}}return l||e?(n.setContentType("application/json",!1),u8(a)):a}],transformResponse:[function(a){const n=this.transitional||vl.transitional,i=n&&n.forcedJSONParsing,e=this.responseType==="json";if(_.isResponse(a)||_.isReadableStream(a))return a;if(a&&_.isString(a)&&(i&&!this.responseType||e)){const t=!(n&&n.silentJSONParsing)&&e;try{return JSON.parse(a)}catch(r){if(t)throw r.name==="SyntaxError"?rs.from(r,rs.ERR_BAD_RESPONSE,this,null,this.response):r}}return a}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:ma.classes.FormData,Blob:ma.classes.Blob},validateStatus:function(a){return a>=200&&a<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};_.forEach(["delete","get","head","post","put","patch"],s=>{vl.headers[s]={}});const A8=_.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),v8=s=>{const a={};let n,i,e;return s&&s.split(`
`).forEach(function(t){e=t.indexOf(":"),n=t.substring(0,e).trim().toLowerCase(),i=t.substring(e+1).trim(),!(!n||a[n]&&A8[n])&&(n==="set-cookie"?a[n]?a[n].push(i):a[n]=[i]:a[n]=a[n]?a[n]+", "+i:i)}),a},Xc=Symbol("internals");function Fe(s){return s&&String(s).trim().toLowerCase()}function Vl(s){return s===!1||s==null?s:_.isArray(s)?s.map(Vl):String(s)}function m8(s){const a=Object.create(null),n=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;let i;for(;i=n.exec(s);)a[i[1]]=i[2];return a}const E8=s=>/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(s.trim());function ur(s,a,n,i,e){if(_.isFunction(i))return i.call(this,a,n);if(e&&(a=n),!!_.isString(a)){if(_.isString(i))return a.indexOf(i)!==-1;if(_.isRegExp(i))return i.test(a)}}function F8(s){return s.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,(a,n,i)=>n.toUpperCase()+i)}function C8(s,a){const n=_.toCamelCase(" "+a);["get","set","has"].forEach(i=>{Object.defineProperty(s,i+n,{value:function(e,l,t){return this[i].call(this,a,e,l,t)},configurable:!0})})}class Ea{constructor(a){a&&this.set(a)}set(a,n,i){const e=this;function l(r,p,c){const B=Fe(p);if(!B)throw new Error("header name must be a non-empty string");const k=_.findKey(e,B);(!k||e[k]===void 0||c===!0||c===void 0&&e[k]!==!1)&&(e[k||p]=Vl(r))}const t=(r,p)=>_.forEach(r,(c,B)=>l(c,B,p));if(_.isPlainObject(a)||a instanceof this.constructor)t(a,n);else if(_.isString(a)&&(a=a.trim())&&!E8(a))t(v8(a),n);else if(_.isHeaders(a))for(const[r,p]of a.entries())l(p,r,i);else a!=null&&l(n,a,i);return this}get(a,n){if(a=Fe(a),a){const i=_.findKey(this,a);if(i){const e=this[i];if(!n)return e;if(n===!0)return m8(e);if(_.isFunction(n))return n.call(this,e,i);if(_.isRegExp(n))return n.exec(e);throw new TypeError("parser must be boolean|regexp|function")}}}has(a,n){if(a=Fe(a),a){const i=_.findKey(this,a);return!!(i&&this[i]!==void 0&&(!n||ur(this,this[i],i,n)))}return!1}delete(a,n){const i=this;let e=!1;function l(t){if(t=Fe(t),t){const r=_.findKey(i,t);r&&(!n||ur(i,i[r],r,n))&&(delete i[r],e=!0)}}return _.isArray(a)?a.forEach(l):l(a),e}clear(a){const n=Object.keys(this);let i=n.length,e=!1;for(;i--;){const l=n[i];(!a||ur(this,this[l],l,a,!0))&&(delete this[l],e=!0)}return e}normalize(a){const n=this,i={};return _.forEach(this,(e,l)=>{const t=_.findKey(i,l);if(t){n[t]=Vl(e),delete n[l];return}const r=a?F8(l):String(l).trim();r!==l&&delete n[l],n[r]=Vl(e),i[r]=!0}),this}concat(...a){return this.constructor.concat(this,...a)}toJSON(a){const n=Object.create(null);return _.forEach(this,(i,e)=>{i!=null&&i!==!1&&(n[e]=a&&_.isArray(i)?i.join(", "):i)}),n}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([a,n])=>a+": "+n).join(`
`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(a){return a instanceof this?a:new this(a)}static concat(a,...n){const i=new this(a);return n.forEach(e=>i.set(e)),i}static accessor(a){const i=(this[Xc]=this[Xc]={accessors:{}}).accessors,e=this.prototype;function l(t){const r=Fe(t);i[r]||(C8(e,t),i[r]=!0)}return _.isArray(a)?a.forEach(l):l(a),this}}Ea.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);_.reduceDescriptors(Ea.prototype,({value:s},a)=>{let n=a[0].toUpperCase()+a.slice(1);return{get:()=>s,set(i){this[n]=i}}});_.freezeMethods(Ea);function Ar(s,a){const n=this||vl,i=a||n,e=Ea.from(i.headers);let l=i.data;return _.forEach(s,function(r){l=r.call(n,l,e.normalize(),a?a.status:void 0)}),e.normalize(),l}function sy(s){return!!(s&&s.__CANCEL__)}function ke(s,a,n){rs.call(this,s??"canceled",rs.ERR_CANCELED,a,n),this.name="CanceledError"}_.inherits(ke,rs,{__CANCEL__:!0});function ay(s,a,n){const i=n.config.validateStatus;!n.status||!i||i(n.status)?s(n):a(new rs("Request failed with status code "+n.status,[rs.ERR_BAD_REQUEST,rs.ERR_BAD_RESPONSE][Math.floor(n.status/100)-4],n.config,n.request,n))}function g8(s){const a=/^([-+\w]{1,25})(:?\/\/|:)/.exec(s);return a&&a[1]||""}function b8(s,a){s=s||10;const n=new Array(s),i=new Array(s);let e=0,l=0,t;return a=a!==void 0?a:1e3,function(p){const c=Date.now(),B=i[l];t||(t=c),n[e]=p,i[e]=c;let k=l,h=0;for(;k!==e;)h+=n[k++],k=k%s;if(e=(e+1)%s,e===l&&(l=(l+1)%s),c-t<a)return;const y=B&&c-B;return y?Math.round(h*1e3/y):void 0}}function f8(s,a){let n=0,i=1e3/a,e,l;const t=(c,B=Date.now())=>{n=B,e=null,l&&(clearTimeout(l),l=null),s.apply(null,c)};return[(...c)=>{const B=Date.now(),k=B-n;k>=i?t(c,B):(e=c,l||(l=setTimeout(()=>{l=null,t(e)},i-k)))},()=>e&&t(e)]}const tt=(s,a,n=3)=>{let i=0;const e=b8(50,250);return f8(l=>{const t=l.loaded,r=l.lengthComputable?l.total:void 0,p=t-i,c=e(p),B=t<=r;i=t;const k={loaded:t,total:r,progress:r?t/r:void 0,bytes:p,rate:c||void 0,estimated:c&&r&&B?(r-t)/c:void 0,event:l,lengthComputable:r!=null,[a?"download":"upload"]:!0};s(k)},n)},Yc=(s,a)=>{const n=s!=null;return[i=>a[0]({lengthComputable:n,total:s,loaded:i}),a[1]]},Zc=s=>(...a)=>_.asap(()=>s(...a)),D8=ma.hasStandardBrowserEnv?function(){const a=ma.navigator&&/(msie|trident)/i.test(ma.navigator.userAgent),n=document.createElement("a");let i;function e(l){let t=l;return a&&(n.setAttribute("href",t),t=n.href),n.setAttribute("href",t),{href:n.href,protocol:n.protocol?n.protocol.replace(/:$/,""):"",host:n.host,search:n.search?n.search.replace(/^\?/,""):"",hash:n.hash?n.hash.replace(/^#/,""):"",hostname:n.hostname,port:n.port,pathname:n.pathname.charAt(0)==="/"?n.pathname:"/"+n.pathname}}return i=e(window.location.href),function(t){const r=_.isString(t)?e(t):t;return r.protocol===i.protocol&&r.host===i.host}}():function(){return function(){return!0}}(),_8=ma.hasStandardBrowserEnv?{write(s,a,n,i,e,l){const t=[s+"="+encodeURIComponent(a)];_.isNumber(n)&&t.push("expires="+new Date(n).toGMTString()),_.isString(i)&&t.push("path="+i),_.isString(e)&&t.push("domain="+e),l===!0&&t.push("secure"),document.cookie=t.join("; ")},read(s){const a=document.cookie.match(new RegExp("(^|;\\s*)("+s+")=([^;]*)"));return a?decodeURIComponent(a[3]):null},remove(s){this.write(s,"",Date.now()-864e5)}}:{write(){},read(){return null},remove(){}};function S8(s){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(s)}function w8(s,a){return a?s.replace(/\/?\/$/,"")+"/"+a.replace(/^\/+/,""):s}function ny(s,a){return s&&!S8(a)?w8(s,a):a}const sd=s=>s instanceof Ea?{...s}:s;function fi(s,a){a=a||{};const n={};function i(c,B,k){return _.isPlainObject(c)&&_.isPlainObject(B)?_.merge.call({caseless:k},c,B):_.isPlainObject(B)?_.merge({},B):_.isArray(B)?B.slice():B}function e(c,B,k){if(_.isUndefined(B)){if(!_.isUndefined(c))return i(void 0,c,k)}else return i(c,B,k)}function l(c,B){if(!_.isUndefined(B))return i(void 0,B)}function t(c,B){if(_.isUndefined(B)){if(!_.isUndefined(c))return i(void 0,c)}else return i(void 0,B)}function r(c,B,k){if(k in a)return i(c,B);if(k in s)return i(void 0,c)}const p={url:l,method:l,data:l,baseURL:t,transformRequest:t,transformResponse:t,paramsSerializer:t,timeout:t,timeoutMessage:t,withCredentials:t,withXSRFToken:t,adapter:t,responseType:t,xsrfCookieName:t,xsrfHeaderName:t,onUploadProgress:t,onDownloadProgress:t,decompress:t,maxContentLength:t,maxBodyLength:t,beforeRedirect:t,transport:t,httpAgent:t,httpsAgent:t,cancelToken:t,socketPath:t,responseEncoding:t,validateStatus:r,headers:(c,B)=>e(sd(c),sd(B),!0)};return _.forEach(Object.keys(Object.assign({},s,a)),function(B){const k=p[B]||e,h=k(s[B],a[B],B);_.isUndefined(h)&&k!==r||(n[B]=h)}),n}const iy=s=>{const a=fi({},s);let{data:n,withXSRFToken:i,xsrfHeaderName:e,xsrfCookieName:l,headers:t,auth:r}=a;a.headers=t=Ea.from(t),a.url=X2(ny(a.baseURL,a.url),s.params,s.paramsSerializer),r&&t.set("Authorization","Basic "+btoa((r.username||"")+":"+(r.password?unescape(encodeURIComponent(r.password)):"")));let p;if(_.isFormData(n)){if(ma.hasStandardBrowserEnv||ma.hasStandardBrowserWebWorkerEnv)t.setContentType(void 0);else if((p=t.getContentType())!==!1){const[c,...B]=p?p.split(";").map(k=>k.trim()).filter(Boolean):[];t.setContentType([c||"multipart/form-data",...B].join("; "))}}if(ma.hasStandardBrowserEnv&&(i&&_.isFunction(i)&&(i=i(a)),i||i!==!1&&D8(a.url))){const c=e&&l&&_8.read(l);c&&t.set(e,c)}return a},x8=typeof XMLHttpRequest<"u",L8=x8&&function(s){return new Promise(function(n,i){const e=iy(s);let l=e.data;const t=Ea.from(e.headers).normalize();let{responseType:r,onUploadProgress:p,onDownloadProgress:c}=e,B,k,h,y,u;function A(){y&&y(),u&&u(),e.cancelToken&&e.cancelToken.unsubscribe(B),e.signal&&e.signal.removeEventListener("abort",B)}let F=new XMLHttpRequest;F.open(e.method.toUpperCase(),e.url,!0),F.timeout=e.timeout;function C(){if(!F)return;const m=Ea.from("getAllResponseHeaders"in F&&F.getAllResponseHeaders()),x={data:!r||r==="text"||r==="json"?F.responseText:F.response,status:F.status,statusText:F.statusText,headers:m,config:s,request:F};ay(function(P){n(P),A()},function(P){i(P),A()},x),F=null}"onloadend"in F?F.onloadend=C:F.onreadystatechange=function(){!F||F.readyState!==4||F.status===0&&!(F.responseURL&&F.responseURL.indexOf("file:")===0)||setTimeout(C)},F.onabort=function(){F&&(i(new rs("Request aborted",rs.ECONNABORTED,s,F)),F=null)},F.onerror=function(){i(new rs("Network Error",rs.ERR_NETWORK,s,F)),F=null},F.ontimeout=function(){let f=e.timeout?"timeout of "+e.timeout+"ms exceeded":"timeout exceeded";const x=e.transitional||Y2;e.timeoutErrorMessage&&(f=e.timeoutErrorMessage),i(new rs(f,x.clarifyTimeoutError?rs.ETIMEDOUT:rs.ECONNABORTED,s,F)),F=null},l===void 0&&t.setContentType(null),"setRequestHeader"in F&&_.forEach(t.toJSON(),function(f,x){F.setRequestHeader(x,f)}),_.isUndefined(e.withCredentials)||(F.withCredentials=!!e.withCredentials),r&&r!=="json"&&(F.responseType=e.responseType),c&&([h,u]=tt(c,!0),F.addEventListener("progress",h)),p&&F.upload&&([k,y]=tt(p),F.upload.addEventListener("progress",k),F.upload.addEventListener("loadend",y)),(e.cancelToken||e.signal)&&(B=m=>{F&&(i(!m||m.type?new ke(null,s,F):m),F.abort(),F=null)},e.cancelToken&&e.cancelToken.subscribe(B),e.signal&&(e.signal.aborted?B():e.signal.addEventListener("abort",B)));const b=g8(e.url);if(b&&ma.protocols.indexOf(b)===-1){i(new rs("Unsupported protocol "+b+":",rs.ERR_BAD_REQUEST,s));return}F.send(l||null)})},T8=(s,a)=>{const{length:n}=s=s?s.filter(Boolean):[];if(a||n){let i=new AbortController,e;const l=function(c){if(!e){e=!0,r();const B=c instanceof Error?c:this.reason;i.abort(B instanceof rs?B:new ke(B instanceof Error?B.message:B))}};let t=a&&setTimeout(()=>{t=null,l(new rs(`timeout ${a} of ms exceeded`,rs.ETIMEDOUT))},a);const r=()=>{s&&(t&&clearTimeout(t),t=null,s.forEach(c=>{c.unsubscribe?c.unsubscribe(l):c.removeEventListener("abort",l)}),s=null)};s.forEach(c=>c.addEventListener("abort",l));const{signal:p}=i;return p.unsubscribe=()=>_.asap(r),p}},O8=function*(s,a){let n=s.byteLength;if(n<a){yield s;return}let i=0,e;for(;i<n;)e=i+a,yield s.slice(i,e),i=e},J8=async function*(s,a){for await(const n of I8(s))yield*O8(n,a)},I8=async function*(s){if(s[Symbol.asyncIterator]){yield*s;return}const a=s.getReader();try{for(;;){const{done:n,value:i}=await a.read();if(n)break;yield i}}finally{await a.cancel()}},ad=(s,a,n,i)=>{const e=J8(s,a);let l=0,t,r=p=>{t||(t=!0,i&&i(p))};return new ReadableStream({async pull(p){try{const{done:c,value:B}=await e.next();if(c){r(),p.close();return}let k=B.byteLength;if(n){let h=l+=k;n(h)}p.enqueue(new Uint8Array(B))}catch(c){throw r(c),c}},cancel(p){return r(p),e.return()}},{highWaterMark:2})},Rt=typeof fetch=="function"&&typeof Request=="function"&&typeof Response=="function",ey=Rt&&typeof ReadableStream=="function",P8=Rt&&(typeof TextEncoder=="function"?(s=>a=>s.encode(a))(new TextEncoder):async s=>new Uint8Array(await new Response(s).arrayBuffer())),ly=(s,...a)=>{try{return!!s(...a)}catch{return!1}},R8=ey&&ly(()=>{let s=!1;const a=new Request(ma.origin,{body:new ReadableStream,method:"POST",get duplex(){return s=!0,"half"}}).headers.has("Content-Type");return s&&!a}),nd=64*1024,io=ey&&ly(()=>_.isReadableStream(new Response("").body)),rt={stream:io&&(s=>s.body)};Rt&&(s=>{["text","arrayBuffer","blob","formData","stream"].forEach(a=>{!rt[a]&&(rt[a]=_.isFunction(s[a])?n=>n[a]():(n,i)=>{throw new rs(`Response type '${a}' is not supported`,rs.ERR_NOT_SUPPORT,i)})})})(new Response);const M8=async s=>{if(s==null)return 0;if(_.isBlob(s))return s.size;if(_.isSpecCompliantForm(s))return(await new Request(ma.origin,{method:"POST",body:s}).arrayBuffer()).byteLength;if(_.isArrayBufferView(s)||_.isArrayBuffer(s))return s.byteLength;if(_.isURLSearchParams(s)&&(s=s+""),_.isString(s))return(await P8(s)).byteLength},j8=async(s,a)=>{const n=_.toFiniteNumber(s.getContentLength());return n??M8(a)},q8=Rt&&(async s=>{let{url:a,method:n,data:i,signal:e,cancelToken:l,timeout:t,onDownloadProgress:r,onUploadProgress:p,responseType:c,headers:B,withCredentials:k="same-origin",fetchOptions:h}=iy(s);c=c?(c+"").toLowerCase():"text";let y=T8([e,l&&l.toAbortSignal()],t),u;const A=y&&y.unsubscribe&&(()=>{y.unsubscribe()});let F;try{if(p&&R8&&n!=="get"&&n!=="head"&&(F=await j8(B,i))!==0){let x=new Request(a,{method:"POST",body:i,duplex:"half"}),V;if(_.isFormData(i)&&(V=x.headers.get("content-type"))&&B.setContentType(V),x.body){const[P,W]=Yc(F,tt(Zc(p)));i=ad(x.body,nd,P,W)}}_.isString(k)||(k=k?"include":"omit");const C="credentials"in Request.prototype;u=new Request(a,{...h,signal:y,method:n.toUpperCase(),headers:B.normalize().toJSON(),body:i,duplex:"half",credentials:C?k:void 0});let b=await fetch(u);const m=io&&(c==="stream"||c==="response");if(io&&(r||m&&A)){const x={};["status","statusText","headers"].forEach(j=>{x[j]=b[j]});const V=_.toFiniteNumber(b.headers.get("content-length")),[P,W]=r&&Yc(V,tt(Zc(r),!0))||[];b=new Response(ad(b.body,nd,P,()=>{W&&W(),A&&A()}),x)}c=c||"text";let f=await rt[_.findKey(rt,c)||"text"](b,s);return!m&&A&&A(),await new Promise((x,V)=>{ay(x,V,{data:f,headers:Ea.from(b.headers),status:b.status,statusText:b.statusText,config:s,request:u})})}catch(C){throw A&&A(),C&&C.name==="TypeError"&&/fetch/i.test(C.message)?Object.assign(new rs("Network Error",rs.ERR_NETWORK,s,u),{cause:C.cause||C}):rs.from(C,C&&C.code,s,u)}}),eo={http:a8,xhr:L8,fetch:q8};_.forEach(eo,(s,a)=>{if(s){try{Object.defineProperty(s,"name",{value:a})}catch{}Object.defineProperty(s,"adapterName",{value:a})}});const id=s=>`- ${s}`,V8=s=>_.isFunction(s)||s===null||s===!1,ty={getAdapter:s=>{s=_.isArray(s)?s:[s];const{length:a}=s;let n,i;const e={};for(let l=0;l<a;l++){n=s[l];let t;if(i=n,!V8(n)&&(i=eo[(t=String(n)).toLowerCase()],i===void 0))throw new rs(`Unknown adapter '${t}'`);if(i)break;e[t||"#"+l]=i}if(!i){const l=Object.entries(e).map(([r,p])=>`adapter ${r} `+(p===!1?"is not supported by the environment":"is not available in the build"));let t=a?l.length>1?`since :
`+l.map(id).join(`
`):" "+id(l[0]):"as no adapter specified";throw new rs("There is no suitable adapter to dispatch the request "+t,"ERR_NOT_SUPPORT")}return i},adapters:eo};function vr(s){if(s.cancelToken&&s.cancelToken.throwIfRequested(),s.signal&&s.signal.aborted)throw new ke(null,s)}function ed(s){return vr(s),s.headers=Ea.from(s.headers),s.data=Ar.call(s,s.transformRequest),["post","put","patch"].indexOf(s.method)!==-1&&s.headers.setContentType("application/x-www-form-urlencoded",!1),ty.getAdapter(s.adapter||vl.adapter)(s).then(function(i){return vr(s),i.data=Ar.call(s,s.transformResponse,i),i.headers=Ea.from(i.headers),i},function(i){return sy(i)||(vr(s),i&&i.response&&(i.response.data=Ar.call(s,s.transformResponse,i.response),i.response.headers=Ea.from(i.response.headers))),Promise.reject(i)})}const ry="1.7.7",Bp={};["object","boolean","number","function","string","symbol"].forEach((s,a)=>{Bp[s]=function(i){return typeof i===s||"a"+(a<1?"n ":" ")+s}});const ld={};Bp.transitional=function(a,n,i){function e(l,t){return"[Axios v"+ry+"] Transitional option '"+l+"'"+t+(i?". "+i:"")}return(l,t,r)=>{if(a===!1)throw new rs(e(t," has been removed"+(n?" in "+n:"")),rs.ERR_DEPRECATED);return n&&!ld[t]&&(ld[t]=!0,console.warn(e(t," has been deprecated since v"+n+" and will be removed in the near future"))),a?a(l,t,r):!0}};function z8(s,a,n){if(typeof s!="object")throw new rs("options must be an object",rs.ERR_BAD_OPTION_VALUE);const i=Object.keys(s);let e=i.length;for(;e-- >0;){const l=i[e],t=a[l];if(t){const r=s[l],p=r===void 0||t(r,l,s);if(p!==!0)throw new rs("option "+l+" must be "+p,rs.ERR_BAD_OPTION_VALUE);continue}if(n!==!0)throw new rs("Unknown option "+l,rs.ERR_BAD_OPTION)}}const lo={assertOptions:z8,validators:Bp},Jn=lo.validators;class Ei{constructor(a){this.defaults=a,this.interceptors={request:new Kc,response:new Kc}}async request(a,n){try{return await this._request(a,n)}catch(i){if(i instanceof Error){let e;Error.captureStackTrace?Error.captureStackTrace(e={}):e=new Error;const l=e.stack?e.stack.replace(/^.+\n/,""):"";try{i.stack?l&&!String(i.stack).endsWith(l.replace(/^.+\n.+\n/,""))&&(i.stack+=`
`+l):i.stack=l}catch{}}throw i}}_request(a,n){typeof a=="string"?(n=n||{},n.url=a):n=a||{},n=fi(this.defaults,n);const{transitional:i,paramsSerializer:e,headers:l}=n;i!==void 0&&lo.assertOptions(i,{silentJSONParsing:Jn.transitional(Jn.boolean),forcedJSONParsing:Jn.transitional(Jn.boolean),clarifyTimeoutError:Jn.transitional(Jn.boolean)},!1),e!=null&&(_.isFunction(e)?n.paramsSerializer={serialize:e}:lo.assertOptions(e,{encode:Jn.function,serialize:Jn.function},!0)),n.method=(n.method||this.defaults.method||"get").toLowerCase();let t=l&&_.merge(l.common,l[n.method]);l&&_.forEach(["delete","get","head","post","put","patch","common"],u=>{delete l[u]}),n.headers=Ea.concat(t,l);const r=[];let p=!0;this.interceptors.request.forEach(function(A){typeof A.runWhen=="function"&&A.runWhen(n)===!1||(p=p&&A.synchronous,r.unshift(A.fulfilled,A.rejected))});const c=[];this.interceptors.response.forEach(function(A){c.push(A.fulfilled,A.rejected)});let B,k=0,h;if(!p){const u=[ed.bind(this),void 0];for(u.unshift.apply(u,r),u.push.apply(u,c),h=u.length,B=Promise.resolve(n);k<h;)B=B.then(u[k++],u[k++]);return B}h=r.length;let y=n;for(k=0;k<h;){const u=r[k++],A=r[k++];try{y=u(y)}catch(F){A.call(this,F);break}}try{B=ed.call(this,y)}catch(u){return Promise.reject(u)}for(k=0,h=c.length;k<h;)B=B.then(c[k++],c[k++]);return B}getUri(a){a=fi(this.defaults,a);const n=ny(a.baseURL,a.url);return X2(n,a.params,a.paramsSerializer)}}_.forEach(["delete","get","head","options"],function(a){Ei.prototype[a]=function(n,i){return this.request(fi(i||{},{method:a,url:n,data:(i||{}).data}))}});_.forEach(["post","put","patch"],function(a){function n(i){return function(l,t,r){return this.request(fi(r||{},{method:a,headers:i?{"Content-Type":"multipart/form-data"}:{},url:l,data:t}))}}Ei.prototype[a]=n(),Ei.prototype[a+"Form"]=n(!0)});class kp{constructor(a){if(typeof a!="function")throw new TypeError("executor must be a function.");let n;this.promise=new Promise(function(l){n=l});const i=this;this.promise.then(e=>{if(!i._listeners)return;let l=i._listeners.length;for(;l-- >0;)i._listeners[l](e);i._listeners=null}),this.promise.then=e=>{let l;const t=new Promise(r=>{i.subscribe(r),l=r}).then(e);return t.cancel=function(){i.unsubscribe(l)},t},a(function(l,t,r){i.reason||(i.reason=new ke(l,t,r),n(i.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(a){if(this.reason){a(this.reason);return}this._listeners?this._listeners.push(a):this._listeners=[a]}unsubscribe(a){if(!this._listeners)return;const n=this._listeners.indexOf(a);n!==-1&&this._listeners.splice(n,1)}toAbortSignal(){const a=new AbortController,n=i=>{a.abort(i)};return this.subscribe(n),a.signal.unsubscribe=()=>this.unsubscribe(n),a.signal}static source(){let a;return{token:new kp(function(e){a=e}),cancel:a}}}function N8(s){return function(n){return s.apply(null,n)}}function H8(s){return _.isObject(s)&&s.isAxiosError===!0}const to={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(to).forEach(([s,a])=>{to[a]=s});function oy(s){const a=new Ei(s),n=j2(Ei.prototype.request,a);return _.extend(n,Ei.prototype,a,{allOwnKeys:!0}),_.extend(n,a,null,{allOwnKeys:!0}),n.create=function(e){return oy(fi(s,e))},n}const Hs=oy(vl);Hs.Axios=Ei;Hs.CanceledError=ke;Hs.CancelToken=kp;Hs.isCancel=sy;Hs.VERSION=ry;Hs.toFormData=Pt;Hs.AxiosError=rs;Hs.Cancel=Hs.CanceledError;Hs.all=function(a){return Promise.all(a)};Hs.spread=N8;Hs.isAxiosError=H8;Hs.mergeConfig=fi;Hs.AxiosHeaders=Ea;Hs.formToJSON=s=>Z2(_.isHTMLForm(s)?new FormData(s):s);Hs.getAdapter=ty.getAdapter;Hs.HttpStatusCode=to;Hs.default=Hs;class U8{static toBingResponse(a){return JSON.parse(a)}static bingResponseToJson(a){return JSON.stringify(a)}static request(){return Hs.get("/bing/HPImageArchive.aspx?format=js&idx=0&n=7&mkt=zh-CN")}}const $8=L({name:"BlogHero",setup(){const s=_s("/assets/home_bg3.jpg"),a=gs(),n=ks(),i=M(),e=g(()=>n.value.heroImage||null),l=g(()=>n.value.heroFullScreen||!1),t=g(()=>c.value.url!=null?c.value.url:Os(n.value.bgImage)?_s(n.value.bgImage):n.value.bgImage===!1?null:s),r=M(),p=M(0),c=g(()=>r.value?r.value[p.value]:{}),B=g(()=>p.value==0),k=g(()=>!!(r.value&&p.value==r.value.length-1)),h=()=>{if(B.value)return;p.value--,n.value.bgImage=_s(c.value.url);let A=document.querySelector(".footer-wrapper");A&&(A.style.backgroundImage=`url(${c.value.url})`)},y=()=>{if(k.value)return;p.value++,n.value.bgImage=_s(c.value.url);let A=document.querySelector(".footer-wrapper");A&&(A.style.backgroundImage=`url(${c.value.url})`)};os(()=>t.value,(A,F)=>{window.localStorage.setItem("bgImage",A)});const u=()=>{U8.request().then(A=>{if(A.status==200){for(const[C,b]of A.data.images.entries()){b.url=`https://cn.bing.com/${b.url}`;var F=new Image;if(F.src=b.url,F.onload=()=>{},C==0){let m=document.querySelector(".footer-wrapper");m&&(m.style.backgroundImage=`url(${b.url})`),n.value.bgImage=_s(b.url)}}r.value=A.data.images}})};return as(()=>{ya(()=>{u()})}),()=>n.value.hero===!1?null:d("div",{ref:i,class:["vp-blog-hero",{fullscreen:l.value,"no-bg":!t.value}]},[t.value?d("div",{class:"vp-blog-mask",style:[{background:`url(${t.value}) center/cover no-repeat`},n.value.bgImageStyle]}):null,d(ps,{appear:!0,delay:.04},()=>e.value?d("img",{class:"vp-blog-hero-image",style:n.value.heroImageStyle,src:_s(e.value),alt:n.value.heroAlt||"hero image"}):null),d(ps,{appear:!0,delay:.08},()=>n.value.heroText===null?null:d("h1",{class:"vp-blog-hero-title"},n.value.heroText||a.value.title)),d(ps,{appear:!0,delay:.12},()=>n.value.tagline?d("div",{class:"vp-blog-hero-description",id:"hitokoto"},[d("div",{class:"word"},[d("div",{class:"left",innerHTML:"『"}),d("span",{id:"hitokoto_text"}),d("div",{class:"right",innerHTML:"』"})]),d("div",{class:"author",id:"hitokoto_author",style:{opacity:0}})]):null),c.value?d(yF,{onLeftClick:h,onRightClick:y,bingData:c.value,lDisabled:B.value,rDisabled:k.value}):null,l.value?d("button",{class:"slide-down-button",onClick:()=>{window.scrollTo({top:i.value.clientHeight,behavior:"smooth"})}},[d(Zr),d(Zr)]):null])}}),Q8=xn($8,[["__scopeId","data-v-0e1bb499"],["__file","BlogHero.vue"]]),W8=["link","article","book","project","friend"],G8=L({name:"ProjectPanel",components:{ArticleIcon:Tt,BookIcon:L2,FriendIcon:J2,LinkIcon:T2,ProjectIcon:O2},props:{items:{type:Array,required:!0}},setup(s){const a=la(),n=_i(),i=(e="",l="icon")=>W8.includes(e)?d(wa(`${e}-icon`)):ni(e)?d("img",{class:"vp-project-image",src:e,alt:l}):_t(e)?d("img",{class:"vp-project-image",src:_s(e),alt:l}):d(Ys,{icon:e});return()=>d("div",{class:"vp-project-panel"},s.items.map(({icon:e,link:l,name:t,desc:r,background:p})=>d("div",{class:["vp-project-card",{[`color${pl(t,Number(ti.colorNumber))}`]:!a.value&&!p}],...p?{style:p}:{},onClick:()=>n(l)},[i(e,t),d("div",{class:"vp-project-name"},t),d("div",{class:"vp-project-desc"},r)])))}}),K8=L({name:"BlogHomePage",setup(){const s=Bl(),a=ks(),n=g(()=>a.value.projects??[]);return()=>d("div",{class:"vp-page vp-blog-home"},[d(Q8),d("div",{class:"blog-page-wrapper"},[d("main",{id:"main-content",class:"vp-blog-main"},[n.value.length?d(ps,{appear:!0,delay:.16},()=>d(G8,{items:n.value})):null,d(ps,{appear:!0,delay:.24},()=>d(op,{items:s.value.items}))]),d(ps,{appear:!0,delay:.16},()=>d(ul,{key:"blog"}))]),d(ps,{appear:!0,delay:.28},()=>d(pe))])}}),py=()=>d(yl,()=>d(K8));py.displayName="BlogHome";var X8=[{key:"news",path:"/news/"}];const Y8=L({name:"ArticleType",setup(){const s=gs(),a=za(),n=Bs(),i=Bl(),e=np(),l=g(()=>{const t=n.value.blogLocales;return[{text:t.all,path:i.value.path},{text:t.star,path:e.value.path},...X8.map(({key:r,path:p})=>{const c=p.replace(/^\//,a.value);return{text:t[r]??kn(c).meta[ea.title]??r,path:c}})]});return()=>d("ul",{class:"vp-article-type-wrapper"},l.value.map(t=>d("li",{class:["vp-article-type",{active:t.path===s.value.path}]},d(Qs,{to:t.path},()=>t.text))))}}),Z8=L({name:"BlogPage",setup(){const s=dl(),a=ks(),n=gs(),i=Bl(),e=np(),l=g(()=>{const{key:t="",type:r}=a.value.blog||{};return t==="star"?e.value.items:r==="type"&&t?s.value.items:i.value.items});return()=>d(yl,()=>d("div",{class:"vp-page vp-blog"},d("div",{class:"blog-page-wrapper"},[d("main",{id:"main-content",class:"vp-blog-main"},[d(ps,()=>d(Y8)),d(ps,{appear:!0,delay:.24},()=>d(op,{key:n.value.path,items:l.value}))]),d(ps,{delay:.16},()=>d(ul,{key:"blog"}))])))}}),sC=L({name:"TimelineItems",setup(){const s=de(),a=Bs(),n=ap(),i=g(()=>s.value.timeline??a.value.blogLocales.timelineTitle),e=g(()=>n.value.config.map(({year:l})=>({title:l.toString(),level:2,slug:l.toString(),children:[]})));return()=>d("div",{class:"timeline-wrapper"},d("ul",{class:"timeline-content"},[d(ps,()=>d("li",{class:"motto"},i.value)),d(v2,{items:e.value}),n.value.config.map(({year:l,items:t},r)=>d(ps,{appear:!0,delay:.08*(r+1),type:"group"},()=>[d("h3",{key:"title",id:l,class:"timeline-year-title"},d("span",l)),d("li",{key:"content",class:"timeline-year-list"},[d("ul",{class:"timeline-year-wrapper"},t.map(({date:p,info:c,path:B})=>d("li",{class:"timeline-item"},[d("span",{class:"timeline-date"},p),d(Qs,{class:"timeline-title",to:B},()=>c[ea.title])])))])]))]))}}),cy=()=>d(yl,()=>d("div",{class:"vp-page vp-blog"},d("div",{class:"blog-page-wrapper"},[d("main",{id:"main-content",class:"vp-blog-main"},[d(ps,{appear:!0,delay:.24},()=>d(sC))]),d(ps,{delay:.16},()=>d(ul,{key:"blog"}))])));cy.displayName="Timeline";const dy=L({name:"PasswordModal",props:{full:Boolean},emits:["verify"],setup(s,{emit:a}){const n=ks(),i=Bs(),e=M(""),l=M(!1),t=M(!1),r=g(()=>i.value.encryptLocales);let p=null;const c=()=>{p&&clearTimeout(p),l.value=!1,a("verify",e.value,t.value),ya().then(()=>{l.value=!0,p=setTimeout(()=>{l.value=!1},1e3)})};return()=>d("div",{class:["vp-decrypt-layer",{expand:s.full||n.value.home}]},d("div",{class:"vp-decrypt-modal"},[d("div",{class:["vp-decrypt-hint",{tried:l.value}]},l.value?r.value.errorHint:d(rp,{"aria-label":r.value.iconLabel})),d("div",{class:"vp-decrypt-input"},[d("input",{type:"password",value:e.value,placeholder:r.value.placeholder,onInput:({target:B})=>{e.value=B.value},onKeydown:({key:B})=>{B==="Enter"&&c()}})]),d("div",{class:"vp-remember-password"},[d("input",{type:"checkbox",value:t.value,onChange:()=>t.value=!t.value}),r.value.remember]),d("button",{type:"button",class:"vp-decrypt-submit",onClick:()=>c()},"OK")]))}}),By=()=>{const s=hn();return g(()=>s.value.encrypt||{})};var aC={};const Ji="./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),mr=Array.from({length:64},(s,a)=>a),Ol=s=>Array(s).fill(-1),In=[...Ol(46),0,1,...mr.slice(54,64),...Ol(7),...mr.slice(2,28),...Ol(6),...mr.slice(28,54),...Ol(5)],td=[608135816,2242054355,320440878,57701188,2752067618,698298832,137296536,3964562569,1160258022,953160567,3193202383,887688300,3232508343,3380367581,1065670069,3041331479,2450970073,2306472731],rd=[3509652390,2564797868,805139163,3491422135,3101798381,1780907670,3128725573,4046225305,614570311,3012652279,134345442,2240740374,1667834072,1901547113,2757295779,4103290238,227898511,1921955416,1904987480,2182433518,2069144605,3260701109,2620446009,720527379,3318853667,677414384,3393288472,3101374703,2390351024,1614419982,1822297739,2954791486,3608508353,3174124327,2024746970,1432378464,3864339955,2857741204,1464375394,1676153920,1439316330,715854006,3033291828,289532110,2706671279,2087905683,3018724369,1668267050,732546397,1947742710,3462151702,2609353502,2950085171,1814351708,2050118529,680887927,999245976,1800124847,3300911131,1713906067,1641548236,4213287313,1216130144,1575780402,4018429277,3917837745,3693486850,3949271944,596196993,3549867205,258830323,2213823033,772490370,2760122372,1774776394,2652871518,566650946,4142492826,1728879713,2882767088,1783734482,3629395816,2517608232,2874225571,1861159788,326777828,3124490320,2130389656,2716951837,967770486,1724537150,2185432712,2364442137,1164943284,2105845187,998989502,3765401048,2244026483,1075463327,1455516326,1322494562,910128902,469688178,1117454909,936433444,3490320968,3675253459,1240580251,122909385,2157517691,634681816,4142456567,3825094682,3061402683,2540495037,79693498,3249098678,1084186820,1583128258,426386531,1761308591,1047286709,322548459,995290223,1845252383,2603652396,3431023940,2942221577,3202600964,3727903485,1712269319,422464435,3234572375,1170764815,3523960633,3117677531,1434042557,442511882,3600875718,1076654713,1738483198,4213154764,2393238008,3677496056,1014306527,4251020053,793779912,2902807211,842905082,4246964064,1395751752,1040244610,2656851899,3396308128,445077038,3742853595,3577915638,679411651,2892444358,2354009459,1767581616,3150600392,3791627101,3102740896,284835224,4246832056,1258075500,768725851,2589189241,3069724005,3532540348,1274779536,3789419226,2764799539,1660621633,3471099624,4011903706,913787905,3497959166,737222580,2514213453,2928710040,3937242737,1804850592,3499020752,2949064160,2386320175,2390070455,2415321851,4061277028,2290661394,2416832540,1336762016,1754252060,3520065937,3014181293,791618072,3188594551,3933548030,2332172193,3852520463,3043980520,413987798,3465142937,3030929376,4245938359,2093235073,3534596313,375366246,2157278981,2479649556,555357303,3870105701,2008414854,3344188149,4221384143,3956125452,2067696032,3594591187,2921233993,2428461,544322398,577241275,1471733935,610547355,4027169054,1432588573,1507829418,2025931657,3646575487,545086370,48609733,2200306550,1653985193,298326376,1316178497,3007786442,2064951626,458293330,2589141269,3591329599,3164325604,727753846,2179363840,146436021,1461446943,4069977195,705550613,3059967265,3887724982,4281599278,3313849956,1404054877,2845806497,146425753,1854211946,1266315497,3048417604,3681880366,3289982499,290971e4,1235738493,2632868024,2414719590,3970600049,1771706367,1449415276,3266420449,422970021,1963543593,2690192192,3826793022,1062508698,1531092325,1804592342,2583117782,2714934279,4024971509,1294809318,4028980673,1289560198,2221992742,1669523910,35572830,157838143,1052438473,1016535060,1802137761,1753167236,1386275462,3080475397,2857371447,1040679964,2145300060,2390574316,1461121720,2956646967,4031777805,4028374788,33600511,2920084762,1018524850,629373528,3691585981,3515945977,2091462646,2486323059,586499841,988145025,935516892,3367335476,2599673255,2839830854,265290510,3972581182,2759138881,3795373465,1005194799,847297441,406762289,1314163512,1332590856,1866599683,4127851711,750260880,613907577,1450815602,3165620655,3734664991,3650291728,3012275730,3704569646,1427272223,778793252,1343938022,2676280711,2052605720,1946737175,3164576444,3914038668,3967478842,3682934266,1661551462,3294938066,4011595847,840292616,3712170807,616741398,312560963,711312465,1351876610,322626781,1910503582,271666773,2175563734,1594956187,70604529,3617834859,1007753275,1495573769,4069517037,2549218298,2663038764,504708206,2263041392,3941167025,2249088522,1514023603,1998579484,1312622330,694541497,2582060303,2151582166,1382467621,776784248,2618340202,3323268794,2497899128,2784771155,503983604,4076293799,907881277,423175695,432175456,1378068232,4145222326,3954048622,3938656102,3820766613,2793130115,2977904593,26017576,3274890735,3194772133,1700274565,1756076034,4006520079,3677328699,720338349,1533947780,354530856,688349552,3973924725,1637815568,332179504,3949051286,53804574,2852348879,3044236432,1282449977,3583942155,3416972820,4006381244,1617046695,2628476075,3002303598,1686838959,431878346,2686675385,1700445008,1080580658,1009431731,832498133,3223435511,2605976345,2271191193,2516031870,1648197032,4164389018,2548247927,300782431,375919233,238389289,3353747414,2531188641,2019080857,1475708069,455242339,2609103871,448939670,3451063019,1395535956,2413381860,1841049896,1491858159,885456874,4264095073,4001119347,1565136089,3898914787,1108368660,540939232,1173283510,2745871338,3681308437,4207628240,3343053890,4016749493,1699691293,1103962373,3625875870,2256883143,3830138730,1031889488,3479347698,1535977030,4236805024,3251091107,2132092099,1774941330,1199868427,1452454533,157007616,2904115357,342012276,595725824,1480756522,206960106,497939518,591360097,863170706,2375253569,3596610801,1814182875,2094937945,3421402208,1082520231,3463918190,2785509508,435703966,3908032597,1641649973,2842273706,3305899714,1510255612,2148256476,2655287854,3276092548,4258621189,236887753,3681803219,274041037,1734335097,3815195456,3317970021,1899903192,1026095262,4050517792,356393447,2410691914,3873677099,3682840055,3913112168,2491498743,4132185628,2489919796,1091903735,1979897079,3170134830,3567386728,3557303409,857797738,1136121015,1342202287,507115054,2535736646,337727348,3213592640,1301675037,2528481711,1895095763,1721773893,3216771564,62756741,2142006736,835421444,2531993523,1442658625,3659876326,2882144922,676362277,1392781812,170690266,3921047035,1759253602,3611846912,1745797284,664899054,1329594018,3901205900,3045908486,2062866102,2865634940,3543621612,3464012697,1080764994,553557557,3656615353,3996768171,991055499,499776247,1265440854,648242737,3940784050,980351604,3713745714,1749149687,3396870395,4211799374,3640570775,1161844396,3125318951,1431517754,545492359,4268468663,3499529547,1437099964,2702547544,3433638243,2581715763,2787789398,1060185593,1593081372,2418618748,4260947970,69676912,2159744348,86519011,2512459080,3838209314,1220612927,3339683548,133810670,1090789135,1078426020,1569222167,845107691,3583754449,4072456591,1091646820,628848692,1613405280,3757631651,526609435,236106946,48312990,2942717905,3402727701,1797494240,859738849,992217954,4005476642,2243076622,3870952857,3732016268,765654824,3490871365,2511836413,1685915746,3888969200,1414112111,2273134842,3281911079,4080962846,172450625,2569994100,980381355,4109958455,2819808352,2716589560,2568741196,3681446669,3329971472,1835478071,660984891,3704678404,4045999559,3422617507,3040415634,1762651403,1719377915,3470491036,2693910283,3642056355,3138596744,1364962596,2073328063,1983633131,926494387,3423689081,2150032023,4096667949,1749200295,3328846651,309677260,2016342300,1779581495,3079819751,111262694,1274766160,443224088,298511866,1025883608,3806446537,1145181785,168956806,3641502830,3584813610,1689216846,3666258015,3200248200,1692713982,2646376535,4042768518,1618508792,1610833997,3523052358,4130873264,2001055236,3610705100,2202168115,4028541809,2961195399,1006657119,2006996926,3186142756,1430667929,3210227297,1314452623,4074634658,4101304120,2273951170,1399257539,3367210612,3027628629,1190975929,2062231137,2333990788,2221543033,2438960610,1181637006,548689776,2362791313,3372408396,3104550113,3145860560,296247880,1970579870,3078560182,3769228297,1714227617,3291629107,3898220290,166772364,1251581989,493813264,448347421,195405023,2709975567,677966185,3703036547,1463355134,2715995803,1338867538,1343315457,2802222074,2684532164,233230375,2599980071,2000651841,3277868038,1638401717,4028070440,3237316320,6314154,819756386,300326615,590932579,1405279636,3267499572,3150704214,2428286686,3959192993,3461946742,1862657033,1266418056,963775037,2089974820,2263052895,1917689273,448879540,3550394620,3981727096,150775221,3627908307,1303187396,508620638,2975983352,2726630617,1817252668,1876281319,1457606340,908771278,3720792119,3617206836,2455994898,1729034894,1080033504,976866871,3556439503,2881648439,1522871579,1555064734,1336096578,3548522304,2579274686,3574697629,3205460757,3593280638,3338716283,3079412587,564236357,2993598910,1781952180,1464380207,3163844217,3332601554,1699332808,1393555694,1183702653,3581086237,1288719814,691649499,2847557200,2895455976,3193889540,2717570544,1781354906,1676643554,2592534050,3230253752,1126444790,2770207658,2633158820,2210423226,2615765581,2414155088,3127139286,673620729,2805611233,1269405062,4015350505,3341807571,4149409754,1057255273,2012875353,2162469141,2276492801,2601117357,993977747,3918593370,2654263191,753973209,36408145,2530585658,25011837,3520020182,2088578344,530523599,2918365339,1524020338,1518925132,3760827505,3759777254,1202760957,3985898139,3906192525,674977740,4174734889,2031300136,2019492241,3983892565,4153806404,3822280332,352677332,2297720250,60907813,90501309,3286998549,1016092578,2535922412,2839152426,457141659,509813237,4120667899,652014361,1966332200,2975202805,55981186,2327461051,676427537,3255491064,2882294119,3433927263,1307055953,942726286,933058658,2468411793,3933900994,4215176142,1361170020,2001714738,2830558078,3274259782,1222529897,1679025792,2729314320,3714953764,1770335741,151462246,3013232138,1682292957,1483529935,471910574,1539241949,458788160,3436315007,1807016891,3718408830,978976581,1043663428,3165965781,1927990952,4200891579,2372276910,3208408903,3533431907,1412390302,2931980059,4132332400,1947078029,3881505623,4168226417,2941484381,1077988104,1320477388,886195818,18198404,3786409e3,2509781533,112762804,3463356488,1866414978,891333506,18488651,661792760,1628790961,3885187036,3141171499,876946877,2693282273,1372485963,791857591,2686433993,3759982718,3167212022,3472953795,2716379847,445679433,3561995674,3504004811,3574258232,54117162,3331405415,2381918588,3769707343,4154350007,1140177722,4074052095,668550556,3214352940,367459370,261225585,2610173221,4209349473,3468074219,3265815641,314222801,3066103646,3808782860,282218597,3406013506,3773591054,379116347,1285071038,846784868,2669647154,3771962079,3550491691,2305946142,453669953,1268987020,3317592352,3279303384,3744833421,2610507566,3859509063,266596637,3847019092,517658769,3462560207,3443424879,370717030,4247526661,2224018117,4143653529,4112773975,2788324899,2477274417,1456262402,2901442914,1517677493,1846949527,2295493580,3734397586,2176403920,1280348187,1908823572,3871786941,846861322,1172426758,3287448474,3383383037,1655181056,3139813346,901632758,1897031941,2986607138,3066810236,3447102507,1393639104,373351379,950779232,625454576,3124240540,4148612726,2007998917,544563296,2244738638,2330496472,2058025392,1291430526,424198748,50039436,29584100,3605783033,2429876329,2791104160,1057563949,3255363231,3075367218,3463963227,1469046755,985887462],ky=[1332899944,1700884034,1701343084,1684370003,1668446532,1869963892],ro=(s,a)=>{if(a<=0||a>s.length)throw Error(`Illegal len: ${a}`);let n=0,i,e;const l=[];for(;n<a;){if(i=s[n++]&255,l.push(Ji[i>>2&63]),i=(i&3)<<4,n>=a){l.push(Ji[i&63]);break}if(e=s[n++]&255,i|=e>>4&15,l.push(Ji[i&63]),i=(e&15)<<2,n>=a){l.push(Ji[i&63]);break}e=s[n++]&255,i|=e>>6&3,l.push(Ji[i&63]),l.push(Ji[e&63])}return l.join("")},nC=(s,a)=>{const n=s.length;let i=0,e=0,l,t,r,p,c,B;const k=[];for(;i<n-1&&e<a&&(B=s.charCodeAt(i++),l=B<In.length?In[B]:-1,B=s.charCodeAt(i++),t=B<In.length?In[B]:-1,!(l==-1||t==-1||(c=l<<2>>>0,c|=(t&48)>>4,k.push(String.fromCharCode(c)),++e>=a||i>=n)||(B=s.charCodeAt(i++),r=B<In.length?In[B]:-1,r==-1)||(c=(t&15)<<4>>>0,c|=(r&60)>>2,k.push(String.fromCharCode(c)),++e>=a||i>=n)));)B=s.charCodeAt(i++),p=B<In.length?In[B]:-1,c=(r&3)<<6>>>0,c|=p,k.push(String.fromCharCode(c)),++e;return k.map(h=>h.charCodeAt(0))},iC=(s,a)=>{let n=null;for(typeof s=="number"&&(n=s,s=()=>null);n!==null||(n=s())!==null;)n<128?a(n&127):n<2048?(a(n>>6&31|192),a(n&63|128)):n<65536?(a(n>>12&15|224),a(n>>6&63|128),a(n&63|128)):(a(n>>18&7|240),a(n>>12&63|128),a(n>>6&63|128),a(n&63|128)),n=null},eC=(s,a)=>{let n,i=null;for(;(n=i!==null?i:s())!==null;){if(n>=55296&&n<=57343&&(i=s())!==null&&i>=56320&&i<=57343){a((n-55296)*1024+i-56320+65536),i=null;continue}a(n)}i!==null&&a(i)},lC=(s,a)=>{eC(s,function(n){iC(n,a)})},tC=typeof process=="object"&&aC.NEXT_RUNTIME==="edge"?setTimeout:typeof setImmediate=="function"?setImmediate:typeof process=="object"&&typeof process.nextTick=="function"?process.nextTick:setTimeout,rC=s=>{const a=[];let n=0;return lC(()=>n>=s.length?null:s.charCodeAt(n++),i=>{a.push(i)}),a},Ge=(s,a,n,i)=>{let e,l=s[a],t=s[a+1];return l^=n[0],e=i[l>>>24],e+=i[256|l>>16&255],e^=i[512|l>>8&255],e+=i[768|l&255],t^=e^n[1],e=i[t>>>24],e+=i[256|t>>16&255],e^=i[512|t>>8&255],e+=i[768|t&255],l^=e^n[2],e=i[l>>>24],e+=i[256|l>>16&255],e^=i[512|l>>8&255],e+=i[768|l&255],t^=e^n[3],e=i[t>>>24],e+=i[256|t>>16&255],e^=i[512|t>>8&255],e+=i[768|t&255],l^=e^n[4],e=i[l>>>24],e+=i[256|l>>16&255],e^=i[512|l>>8&255],e+=i[768|l&255],t^=e^n[5],e=i[t>>>24],e+=i[256|t>>16&255],e^=i[512|t>>8&255],e+=i[768|t&255],l^=e^n[6],e=i[l>>>24],e+=i[256|l>>16&255],e^=i[512|l>>8&255],e+=i[768|l&255],t^=e^n[7],e=i[t>>>24],e+=i[256|t>>16&255],e^=i[512|t>>8&255],e+=i[768|t&255],l^=e^n[8],e=i[l>>>24],e+=i[256|l>>16&255],e^=i[512|l>>8&255],e+=i[768|l&255],t^=e^n[9],e=i[t>>>24],e+=i[256|t>>16&255],e^=i[512|t>>8&255],e+=i[768|t&255],l^=e^n[10],e=i[l>>>24],e+=i[256|l>>16&255],e^=i[512|l>>8&255],e+=i[768|l&255],t^=e^n[11],e=i[t>>>24],e+=i[256|t>>16&255],e^=i[512|t>>8&255],e+=i[768|t&255],l^=e^n[12],e=i[l>>>24],e+=i[256|l>>16&255],e^=i[512|l>>8&255],e+=i[768|l&255],t^=e^n[13],e=i[t>>>24],e+=i[256|t>>16&255],e^=i[512|t>>8&255],e+=i[768|t&255],l^=e^n[14],e=i[l>>>24],e+=i[256|l>>16&255],e^=i[512|l>>8&255],e+=i[768|l&255],t^=e^n[15],e=i[t>>>24],e+=i[256|t>>16&255],e^=i[512|t>>8&255],e+=i[768|t&255],l^=e^n[16],s[a]=t^n[17],s[a+1]=l,s},ji=(s,a)=>{let n=0;for(let i=0;i<4;++i)n=n<<8|s[a]&255,a=(a+1)%s.length;return{key:n,offp:a}},od=(s,a,n)=>{const i=a.length,e=n.length;let l=0,t=[0,0],r;for(let p=0;p<i;p++)r=ji(s,l),l=r.offp,a[p]=a[p]^r.key;for(let p=0;p<i;p+=2)t=Ge(t,0,a,n),a[p]=t[0],a[p+1]=t[1];for(let p=0;p<e;p+=2)t=Ge(t,0,a,n),n[p]=t[0],n[p+1]=t[1]},oC=(s,a,n,i)=>{const e=n.length,l=i.length;let t=0,r=[0,0],p;for(let c=0;c<e;c++)p=ji(a,t),t=p.offp,n[c]=n[c]^p.key;t=0;for(let c=0;c<e;c+=2)p=ji(s,t),t=p.offp,r[0]^=p.key,p=ji(s,t),t=p.offp,r[1]^=p.key,r=Ge(r,0,n,i),n[c]=r[0],n[c+1]=r[1];for(let c=0;c<l;c+=2)p=ji(s,t),t=p.offp,r[0]^=p.key,p=ji(s,t),t=p.offp,r[1]^=p.key,r=Ge(r,0,n,i),i[c]=r[0],i[c+1]=r[1]},pd=(s,a,n,i,e)=>{const l=ky.slice(),t=l.length;if(n<4||n>31){const h=new Error(`Illegal number of rounds (4-31): ${n}`);if(i===!1)return Promise.reject(h);throw h}if(a.length!==16){const h=new Error(`Illegal salt length: ${a.length} != 16`);if(i===!1)return Promise.reject(h);throw h}n=1<<n>>>0;let r,p,c=0,B;Int32Array?(r=new Int32Array(td),p=new Int32Array(rd)):(r=td.slice(),p=rd.slice()),oC(a,s,r,p);const k=()=>{if(c<n){const h=Date.now();for(;c<n&&(c=c+1,od(s,r,p),od(a,r,p),!(Date.now()-h>100)););}else{for(c=0;c<64;c++)for(B=0;B<t>>1;B++)Ge(l,B<<1,r,p);const h=[];for(c=0;c<t;c++)h.push((l[c]>>24&255)>>>0),h.push((l[c]>>16&255)>>>0),h.push((l[c]>>8&255)>>>0),h.push((l[c]&255)>>>0);return i===!1?Promise.resolve(h):h}if(i===!1)return new Promise(h=>tC(()=>{k().then(h)}))};if(i===!1)return k();{let h;for(;;)if(typeof(h=k())<"u")return h||[]}},pC=s=>{try{let a;typeof window<"u"?a=window.crypto??window.msCrypto:a=globalThis.crypto;const n=new Uint32Array(s);return a==null||a.getRandomValues(n),Array.from(n)}catch{throw Error("WebCryptoAPI is not available")}},cC=(s=10)=>{if(typeof s!="number")throw Error("Illegal arguments: "+typeof s);s<4?s=4:s>31&&(s=31);const a=[];return a.push("$2a$"),s<10&&a.push("0"),a.push(s.toString()),a.push("$"),a.push(ro(pC(16),16)),a.join("")};function dC(s,a,n,i){if(typeof s!="string"||typeof a!="string"){const y=new Error("Invalid string / salt: Not a string");if(n===!1)return Promise.reject(y);throw y}let e,l;if(a.charAt(0)!=="$"||a.charAt(1)!=="2"){const y=new Error("Invalid salt version: "+a.substring(0,2));if(n===!1)return Promise.reject(y);throw y}if(a.charAt(2)==="$")e="\0",l=3;else{if(e=a.charAt(2),e!=="a"&&e!=="b"&&e!=="y"||a.charAt(3)!=="$"){const y=Error("Invalid salt revision: "+a.substring(2,4));if(n===!1)return Promise.reject(y);throw y}l=4}if(a.charAt(l+2)>"$"){const y=new Error("Missing salt rounds");if(n===!1)return Promise.reject(y);throw y}const t=parseInt(a.substring(l,l+1),10)*10,r=parseInt(a.substring(l+1,l+2),10),p=t+r,c=a.substring(l+3,l+25);s+=e>="a"?"\0":"";const B=rC(s),k=nC(c,16),h=y=>{const u=[];return u.push("$2"),e>="a"&&u.push(e),u.push("$"),p<10&&u.push("0"),u.push(p.toString()),u.push("$"),u.push(ro(k,k.length)),u.push(ro(y,ky.length*4-1)),u.join("")};return n===!1?pd(B,k,p,!1).then(y=>h(y)):h(pd(B,k,p,!0))}const BC=(s,a=10)=>{if(typeof a=="number"&&(a=cC(a)),typeof s!="string"||typeof a!="string")throw Error("Illegal arguments: "+typeof s+", "+typeof a);return dC(s,a,!0)},oo=(s,a)=>{if(typeof s!="string"||typeof a!="string")throw Error("Illegal arguments: "+typeof s+", "+typeof a);return a.length!==60?!1:BC(s,a.substring(0,a.length-31))===a},cd="VUEPRESS_HOPE_GLOBAL_TOKEN",kC=()=>{const s=By(),a=oe(cd,""),n=$k(cd,""),i=g(()=>{const{global:t=!1,admin:r=[]}=s.value;return t&&r.length>0}),e=g(()=>{if(i.value){if(a.value)return s.value.admin.some(t=>oo(a.value,t));if(n.value)return s.value.admin.some(t=>oo(n.value,t))}return!1});return{isEncrypted:i,isDecrypted:e,validate:(t,r=!1)=>{(r?a:n).value=t}}},Er=(s="",a)=>!!s&&oo(s,a),dd="VUEPRESS_HOPE_PATH_TOKEN",hC=()=>{const s=gs(),a=By(),n=oe(dd,{}),i=$k(dd,{}),e=p=>Bn(a.value.config)?Va(a.value.config).filter(c=>Ne(decodeURI(p),c)).sort((c,B)=>B.length-c.length):[],l=p=>{const c=e(p);if(c.length>0){const{config:B={}}=a.value;return{isEncrypted:!0,isDecrypted:c.some(k=>n.value[k]&&B[k].some(h=>Er(n.value[k],h))||i.value[k]&&B[k].some(h=>Er(i.value[k],h)))}}return{isDecrypted:!1,isEncrypted:!1}};return{status:g(()=>l(s.value.path)),getStatus:l,validate:(p,c=!1)=>{const{config:B={}}=a.value,k=e(s.value.path);for(const h of k)if(B[h].filter(y=>Er(p,y))){(c?n:i).value[h]=p;break}}}},yC=L({name:"GlobalEncrypt",slots:Object,setup(s,{slots:a}){const{isDecrypted:n,isEncrypted:i,validate:e}=kC(),l=la(),t=M(!1);return as(()=>{t.value=!0}),()=>d(l.value?wt:xt,()=>i.value?t.value?n.value?a.default():d(dy,{full:!0,onVerify:e}):null:a.default())}}),uC=L({name:"LocalEncrypt",slots:Object,setup(s,{slots:a}){const{status:n,validate:i}=hC(),e=M(!1);return as(()=>{e.value=!0}),()=>{const{isEncrypted:l,isDecrypted:t}=n.value;return l?e.value?t?a.default():d(dy,{full:!0,onVerify:i}):null:a.default()}}});var AC=L({name:"SlidePage",setup(){const s=Fa(),a=za(),n=M(!1),i=ms(),e=()=>{n.value=!n.value},l=()=>{n.value=!1},t=()=>{l(),window.history.go(-1)},r=()=>{l(),s.push(a.value)};return g0(i,l),()=>d("div",{class:"vp-reveal-page"},[d(Dt),d("div",{ref:i,class:["vp-reveal-menu",{active:n.value}]},[d("button",{type:"button",class:"menu-button",onClick:()=>e()},d("span",{class:"icon"})),d("button",{type:"button",class:"back-button",onClick:()=>t()},d(im)),d("button",{type:"button",class:"home-button",onClick:()=>r()},d(em))])])}});iv(s=>{const a=s.t,n=s.I!==!1,i=s.i;return n?{title:a,content:i?()=>[d(Ys,{icon:i}),a]:null,order:s.O,index:s.I}:null});const vC=zs({enhance:({app:s,router:a})=>{const{scrollBehavior:n}=a.options;a.options.scrollBehavior=async(...i)=>(await $r.wait(),n(...i)),UE(s),s.component("HopeIcon",Ys),s.component("BloggerInfo",Lt),s.component("SocialMedias",S2),s.component("GlobalEncrypt",yC),s.component("LocalEncrypt",uC)},setup:()=>{$E(),KE(),aF()},layouts:{Layout:H1,NotFound:$1,BlogCategory:pF,BlogHome:py,BlogType:Z8,Timeline:cy,Slide:AC}}),mC=Object.freeze(Object.defineProperty({__proto__:null,default:vC},Symbol.toStringTag,{value:"Module"})),EC=async s=>{let a=[],n=[],i=s.list||[];if(s.audio&&(Array.isArray(s.audio)?n=[...s.audio]:n.unshift(s.audio)),(s.mid||s.auto)&&i.unshift({mid:s.mid,server:s.server,type:s.type,auth:s.auth,auto:s.auto}),i&&i.length>0&&i.map(e=>{if(e.mid||e.auto){let l=FC({mid:e.mid,server:e.server||s.server,type:e.type||s.type,auth:e.auth||s.auth,auto:e.auto},s.api);l&&a.push(l)}}),a&&a.length>0){let e=a.map(async l=>(await fetch(l)).json());return await Promise.all(e).then(async l=>(l.map(t=>{n=n.concat(t.map(r=>({name:(r==null?void 0:r.name)||(r==null?void 0:r.title)||"Audio name",artist:(r==null?void 0:r.artist)||(r==null?void 0:r.author)||"Audio artist",url:r==null?void 0:r.url,cover:(r==null?void 0:r.cover)||(r==null?void 0:r.pic),lrc:(r==null?void 0:r.lrc)||(r==null?void 0:r.lyric)||"",type:(r==null?void 0:r.type)||"auto"})))}),n))}return n},FC=(s,a)=>s&&s.auto?(s=CC(s.auto),s.server&&s.type&&s.mid?a.replace(":server",s.server).replace(":type",s.type).replace(":id",s.mid).replace(":auth",s.auth??"auth"):""):s&&s.server&&s.type&&s.mid&&s.auth?a.replace(":server",s.server).replace(":type",s.type).replace(":id",s.mid).replace(":auth",s.auth):"",CC=s=>{let a=[["music.163.com.*song.*id=(\\d+)","netease","song"],["music.163.com.*album.*id=(\\d+)","netease","album"],["music.163.com.*artist.*id=(\\d+)","netease","artist"],["music.163.com.*playlist.*id=(\\d+)","netease","playlist"],["music.163.com.*discover/toplist.*id=(\\d+)","netease","playlist"],["y.qq.com.*song/(\\w+).html","tencent","song"],["y.qq.com.*songDetail/(\\w+)","tencent","song"],["y.qq.com.*album/(\\w+).html","tencent","album"],["y.qq.com.*singer/(\\w+).html","tencent","artist"],["y.qq.com.*playsquare/(\\w+).html","tencent","playlist"],["y.qq.com.*playlist/(\\w+).html","tencent","playlist"],["xiami.com.*song/(\\w+)","xiami","song"],["xiami.com.*album/(\\w+)","xiami","album"],["xiami.com.*artist/(\\w+)","xiami","artist"],["xiami.com.*collect/(\\w+)","xiami","playlist"]];for(let n of a){let e=new RegExp(n[0]).exec(s);if(e)return{server:n[1],type:n[2],mid:e[1]}}return console.error(`无法解析的链接: ${s}，请检查链接是否书写正确`),{}},hp=L({props:{src:{type:Object}},setup(s){const a={...s.src},n=M();let i;return as(async()=>{Promise.all([EC(a),o(()=>import("./APlayer.min-CAgWaKXK.js").then(e=>e.A),__vite__mapDeps([9,4])),o(()=>import("./APlayer.min-l0sNRNKZ.js"),[])]).then(([e,{default:l}])=>{switch(a.container=n.value,a.audio=e,i=new l(a),a.lrcDisplay){case"show":i.lrc.show();break;case"hide":i.lrc.hide();break;case"toggle":i.lrc.toggle();break;default:i.lrc.show();break}})}),il(()=>{i==null||i.destroy()}),()=>d("div",{ref:n})}});var gC={aplayerOptions:{fixed:!1,mini:!1,autoplay:!1,theme:"#2980b9",loop:"all",order:"list",preload:"auto",volume:.7,mutex:!0,lrcType:3,listFolded:!1,listMaxHeight:"340px",storageName:"vuepress-plugin-meting2",lrcDisplay:"hide"},additionalAudios:[],metingOptions:{global:!0,server:"tencent",type:"playlist",auth:"auth",api:"https://api.injahow.cn/meting/?server=:server&type=:type&id=:id&auth=:auth&r=:r",aplayerOptions:{fixed:!0,mini:!0,autoplay:!1,theme:"#2980b9",loop:"all",order:"list",preload:"auto",volume:.7,mutex:!0,lrcType:3,listFolded:!1,listMaxHeight:"540px",storageName:"vuepress-plugin-meting2",lrcDisplay:"hide"},mid:"851947617"}};const Pn=gC,bC=L({setup(){var s,a,n;if(Pn.additionalAudios&&Pn.additionalAudios.length>0||(s=Pn.metingOptions)!=null&&s.mid||(a=Pn.metingOptions)!=null&&a.list&&Pn.metingOptions.list.length>0){const i={...Pn.metingOptions,...(n=Pn.metingOptions)==null?void 0:n.aplayerOptions,audio:Pn.additionalAudios};return()=>d(hp,{src:i})}else return()=>d("div")}});var fC={aplayerOptions:{fixed:!1,mini:!1,autoplay:!1,theme:"#2980b9",loop:"all",order:"list",preload:"auto",volume:.7,mutex:!0,lrcType:3,listFolded:!1,listMaxHeight:"340px",storageName:"vuepress-plugin-meting2",lrcDisplay:"hide"},additionalAudios:[],metingOptions:{global:!0,server:"tencent",type:"playlist",auth:"auth",api:"https://api.injahow.cn/meting/?server=:server&type=:type&id=:id&auth=:auth&r=:r",aplayerOptions:{fixed:!0,mini:!0,autoplay:!1,theme:"#2980b9",loop:"all",order:"list",preload:"auto",volume:.7,mutex:!0,lrcType:3,listFolded:!1,listMaxHeight:"540px",storageName:"vuepress-plugin-meting2",lrcDisplay:"hide"},mid:"851947617"}};const Us=fC;var ud,Ad,vd,md,Ed,Fd,Cd,gd,bd,fd,Dd,_d,Sd,wd,xd,Ld,Td;const DC=L({props:{mid:{type:String,default:""},server:{type:String,default:(ud=Us.metingOptions)==null?void 0:ud.server},type:{type:String,default:(Ad=Us.metingOptions)==null?void 0:Ad.type},auto:{type:String,default:""},auth:{type:String,default:(vd=Us.metingOptions)==null?void 0:vd.auth},api:{type:String,default:(md=Us.metingOptions)==null?void 0:md.api},list:{type:Array},fixed:{type:Boolean,default:(Ed=Us.aplayerOptions)==null?void 0:Ed.fixed},mini:{type:Boolean,default:(Fd=Us.aplayerOptions)==null?void 0:Fd.mini},autoplay:{type:Boolean,default:(Cd=Us.aplayerOptions)==null?void 0:Cd.autoplay},theme:{type:String,default:(gd=Us.aplayerOptions)==null?void 0:gd.theme},loop:{type:String,default:(bd=Us.aplayerOptions)==null?void 0:bd.loop},order:{type:String,default:(fd=Us.aplayerOptions)==null?void 0:fd.order},preload:{type:String,default:(Dd=Us.aplayerOptions)==null?void 0:Dd.preload},volume:{type:Number,default:(_d=Us.aplayerOptions)==null?void 0:_d.volume},mutex:{type:Boolean,default:(Sd=Us.aplayerOptions)==null?void 0:Sd.mutex},listFolded:{type:Boolean,default:(wd=Us.aplayerOptions)==null?void 0:wd.listFolded},listMaxHeight:{type:String,default:(xd=Us.aplayerOptions)==null?void 0:xd.listMaxHeight},lrcType:{type:Number,default:(Ld=Us.aplayerOptions)==null?void 0:Ld.lrcType},audio:{type:[Object,Array]},storageName:{type:String,default:(Td=Us.aplayerOptions)==null?void 0:Td.storageName},customAudioType:{type:Object,default:()=>{var s;return(s=Us.aplayerOptions)==null?void 0:s.customAudioType}},customInit:{type:Object,default:()=>{var s;return(s=Us.aplayerOptions)==null?void 0:s.customInit}}},setup(s){const a={...s};return()=>d(hp,{src:a})}});var _C={aplayerOptions:{fixed:!1,mini:!1,autoplay:!1,theme:"#2980b9",loop:"all",order:"list",preload:"auto",volume:.7,mutex:!0,lrcType:3,listFolded:!1,listMaxHeight:"340px",storageName:"vuepress-plugin-meting2",lrcDisplay:"hide"},additionalAudios:[],metingOptions:{global:!0,server:"tencent",type:"playlist",auth:"auth",api:"https://api.injahow.cn/meting/?server=:server&type=:type&id=:id&auth=:auth&r=:r",aplayerOptions:{fixed:!0,mini:!0,autoplay:!1,theme:"#2980b9",loop:"all",order:"list",preload:"auto",volume:.7,mutex:!0,lrcType:3,listFolded:!1,listMaxHeight:"540px",storageName:"vuepress-plugin-meting2",lrcDisplay:"hide"},mid:"851947617"}};const ta=_C;var Od,Jd,Id,Pd,Rd,Md,jd,qd,Vd,zd,Nd,Hd,Ud;const SC=L({props:{fixed:{type:Boolean,default:(Od=ta.aplayerOptions)==null?void 0:Od.fixed},mini:{type:Boolean,default:(Jd=ta.aplayerOptions)==null?void 0:Jd.mini},autoplay:{type:Boolean,default:(Id=ta.aplayerOptions)==null?void 0:Id.autoplay},theme:{type:String,default:(Pd=ta.aplayerOptions)==null?void 0:Pd.theme},loop:{type:String,default:(Rd=ta.aplayerOptions)==null?void 0:Rd.loop},order:{type:String,default:(Md=ta.aplayerOptions)==null?void 0:Md.order},preload:{type:String,default:(jd=ta.aplayerOptions)==null?void 0:jd.preload},volume:{type:Number,default:(qd=ta.aplayerOptions)==null?void 0:qd.volume},mutex:{type:Boolean,default:(Vd=ta.aplayerOptions)==null?void 0:Vd.mutex},listFolded:{type:Boolean,default:(zd=ta.aplayerOptions)==null?void 0:zd.listFolded},listMaxHeight:{type:String,default:(Nd=ta.aplayerOptions)==null?void 0:Nd.listMaxHeight},lrcType:{type:Number,default:(Hd=ta.aplayerOptions)==null?void 0:Hd.lrcType},audio:{type:[Object,Array],required:!0},storageName:{type:String,default:(Ud=ta.aplayerOptions)==null?void 0:Ud.storageName},customAudioType:{type:Object,default:()=>{var s;return(s=ta.aplayerOptions)==null?void 0:s.customAudioType}},customInit:{type:Object,default:()=>{var s;return(s=ta.aplayerOptions)==null?void 0:s.customAudioType}}},setup(s){const a={...s};return()=>d(hp,{src:a})}}),wC=zs({async enhance({app:s}){s.component("APlayer",SC),s.component("Meting",DC)},rootComponents:[bC]}),xC=Object.freeze(Object.defineProperty({__proto__:null,default:wC},Symbol.toStringTag,{value:"Module"}));class hy{static toHitokoto(a){return JSON.parse(a)}static HitokotoToJson(a){return JSON.stringify(a)}static request(){return Hs.get("https://v1.hitokoto.cn/")}}const LC=zs({enhance({app:s,router:a,siteData:n}){},setup(){let s;as(()=>{const a=Fa();let n="",i="",e=n.split("");const l=r=>{var p=setTimeout(async()=>{clearTimeout(p);const c=await hy.request();c.status==200&&(n=c.data.hitokoto,i=c.data.from_who?`——   「 ${c.data.from} • ${c.data.from_who} 」`:`——   「 ${c.data.from} 」`,e=n.split(""),t())},r)},t=()=>{clearInterval(s);let r=document.getElementById("hitokoto_text"),p=document.getElementById("hitokoto_author"),c=0,B=!1,k=0,h=20;s=setInterval(()=>{const y=e[c];if(k!=0){k--,r&&r.innerText.length==0&&k==0&&(clearInterval(s),l(0));return}B?(r&&(r.innerText=r.innerText.slice(0,c)),c<4&&(p&&(p.style.opacity="0"),p&&(p.style.transform="translateY(-20px)"))):(r&&(r.innerText+=y),p&&(p.style.opacity="1"),p&&(p.style.transform="translateY(0px)"),p&&(p.innerText=i)),B?c--:c++,c>=e.length&&(B=!0,c==e.length,k=h),c<0&&(B=!1,c=0,k=h)},200)};l(2e3),a.beforeEach((r,p)=>{r.path=="/"&&ya(()=>{l(2e3)})})}),il(()=>{clearInterval(s)})},rootComponents:[]}),TC=Object.freeze(Object.defineProperty({__proto__:null,default:LC},Symbol.toStringTag,{value:"Module"}));var yy=(s,a,n)=>{if(!a.has(s))throw TypeError("Cannot "+n)},ws=(s,a,n)=>(yy(s,a,"read from private field"),n?n.call(s):a.get(s)),ot=(s,a,n)=>{if(a.has(s))throw TypeError("Cannot add the same private member more than once");a instanceof WeakSet?a.add(s):a.set(s,n)},pt=(s,a,n,i)=>(yy(s,a,"write to private field"),a.set(s,n),n),oa,ge;const zl=class{constructor(a,n,i,e=!0){ot(this,oa,void 0),ot(this,ge,void 0),pt(this,oa,{width:0,height:0});const{el:l,ctx:t}=zl.initCanvas(a);this.el=l,this.ctx=t,pt(this,ge,e),this.size={width:n||window.innerWidth,height:i||window.innerHeight}}get size(){return{...ws(this,oa)}}set size({width:a,height:n}){var i;if(ws(this,oa).width===a&&ws(this,oa).height===n)return;ws(this,oa).width=a,ws(this,oa).height=n;const e=(i=ws(this,ge)?window.devicePixelRatio:1)!=null?i:1;this.el.width=Math.round(ws(this,oa).width*e),this.el.height=Math.round(ws(this,oa).height*e),this.el.style.width=ws(this,oa).width+"px",this.el.style.height=ws(this,oa).height+"px",ws(this,ge)&&this.ctx.scale(e,e)}clear(){zl.clearCanvas(this.ctx,{...ws(this,oa)})}to(a){a.ctx.drawImage(this.el,0,0,ws(this,oa).width,ws(this,oa).height)}handleResize(a){this.size={width:window.innerWidth,height:window.innerHeight}}static setCanvasStyle(a,n,i){const e=a.style,{zIndex:l=0,opacity:t=1}=n;e.position="fixed",e.top="0",e.left="0",e.zIndex=l.toString(),e.width=(i?i.width:a.width).toString()+"px",e.height=(i?i.height:a.height).toString()+"px",t!==1&&(e.opacity=t.toString()),e.pointerEvents="none"}static initCanvas(a){a||(a=document.createElement("canvas"));const n=a.getContext("2d");return{el:a,ctx:n}}static createOffscreenCanvas(){return new zl}static clearCanvas(a,n){const{width:i,height:e}=n;a.clearRect(0,0,i,e)}};let Fr=zl;oa=new WeakMap,ge=new WeakMap;var tn,rn;let OC=class{constructor(a,n,i,e=!0,l=!0,t={zIndex:0,opacity:1}){ot(this,tn,void 0),ot(this,rn,void 0),pt(this,tn,new Fr(a,n,i,e)),Fr.setCanvasStyle(ws(this,tn).el,t,{width:n,height:i}),pt(this,rn,l?new Fr(void 0,n,i,e):null)}get size(){return ws(this,tn).size}draw(a){var n;const i=(n=ws(this,rn))!=null?n:ws(this,tn);i.clear(),a(i.ctx,{...i.size})}render(){!ws(this,rn)||(ws(this,tn).clear(),ws(this,rn).to(ws(this,tn)))}handleResize(a){ws(this,tn).handleResize(a),ws(this,rn)&&ws(this,rn).handleResize(a)}clear(){ws(this,tn).clear(),ws(this,rn)&&ws(this,rn).clear()}};tn=new WeakMap,rn=new WeakMap;var uy=(s,a,n)=>{if(!a.has(s))throw TypeError("Cannot "+n)},Ii=(s,a,n)=>(uy(s,a,"read from private field"),n?n.call(s):a.get(s)),JC=(s,a,n)=>{if(a.has(s))throw TypeError("Cannot add the same private member more than once");a instanceof WeakSet?a.add(s):a.set(s,n)},IC=(s,a,n,i)=>(uy(s,a,"write to private field"),a.set(s,n),n),En;let PC=class{constructor(){JC(this,En,void 0),IC(this,En,new Map)}add(a,n,i=window){Ii(this,En).has(i)||Ii(this,En).set(i,new Map);const e=Ii(this,En).get(i);e.has(a)||e.set(a,new Set),e.get(a).add(n)}startAll(){for(const[a,n]of Ii(this,En))for(const[i,e]of n)for(const l of e)a.addEventListener(i,l)}stopAll(){for(const[a,n]of Ii(this,En))for(const[i,e]of n)for(const l of e)a.removeEventListener(i,l)}clear(){Ii(this,En).clear()}};En=new WeakMap;function RC(){return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)}function Bd(s){return!!s.touches}class Ua{static randomFloat(a,n){return Math.random()*(n-a)+a}static randomInt(a,n){return Math.floor(Ua.randomFloat(a,n))}static choice(a){const n=a.length,i=Math.floor(n*Math.random());return a[i]}static color(a="0123456789ABCDEF"){return"#"+Ua.choice(a)+Ua.choice(a)+Ua.choice(a)+Ua.choice(a)+Ua.choice(a)+Ua.choice(a)}}function MC(s,{leftColor:a="#fff",rightColor:n="#444",leftBgColor:i="#35495e",rightBgColor:e="#00ffc0"}={}){console.log(`%c ${s} %c v0.5.2 112fa81 %c`,`background: ${i}; padding: 2px; color: ${a}; font-weight: bold; text-transform: uppercase;`,`background: ${e}; padding: 2px; color: ${n}; font-weight: bold; text-transform: uppercase;`,"background: transparent")}function Ay(s,a,n){var i,e,l;n===void 0&&(n={});var t=(i=n.isImmediate)!=null&&i,r=(e=n.callback)!=null&&e,p=n.maxWait,c=Date.now(),B=[];function k(){if(p!==void 0){var y=Date.now()-c;if(y+a>=p)return p-y}return a}var h=function(){var y=[].slice.call(arguments),u=this;return new Promise(function(A,F){var C=t&&l===void 0;if(l!==void 0&&clearTimeout(l),l=setTimeout(function(){if(l=void 0,c=Date.now(),!t){var m=s.apply(u,y);r&&r(m),B.forEach(function(f){return(0,f.resolve)(m)}),B=[]}},k()),C){var b=s.apply(u,y);return r&&r(b),A(b)}B.push({resolve:A,reject:F})})};return h.cancel=function(y){l!==void 0&&clearTimeout(l),B.forEach(function(u){return(0,u.reject)(y)}),B=[]},h}var yp=(s,a,n)=>{if(!a.has(s))throw TypeError("Cannot "+n)},cs=(s,a,n)=>(yp(s,a,"read from private field"),n?n.call(s):a.get(s)),$s=(s,a,n)=>{if(a.has(s))throw TypeError("Cannot add the same private member more than once");a instanceof WeakSet?a.add(s):a.set(s,n)},ca=(s,a,n,i)=>(yp(s,a,"write to private field"),a.set(s,n),n),jC=(s,a,n,i)=>({set _(e){ca(s,a,e)},get _(){return cs(s,a,i)}}),Bi=(s,a,n)=>(yp(s,a,"access private method"),n),be,fe,De;class vy{constructor(a,n,i,e,l){$s(this,be,void 0),$s(this,fe,void 0),$s(this,De,void 0),this.size=i,this.color=e,ca(this,De,0),ca(this,be,l),ca(this,fe,n),this.position={...a}}move(){this.position.x=Math.sin(cs(this,be))*cs(this,fe)+this.position.x,this.position.y=Math.cos(cs(this,be))*cs(this,fe)+this.position.y+cs(this,De)*.3,jC(this,De)._++}shouleRemove(a){return this.position.x<0||this.position.x>a.width||this.position.y>a.height}}be=new WeakMap,fe=new WeakMap,De=new WeakMap;class qC extends vy{draw(a,n){a.fillStyle=this.color,a.beginPath(),a.arc(this.position.x,this.position.y,this.size,0,Math.PI*2),a.fill()}}var jn;class VC extends vy{constructor(a,n,i,e,l){super(a,n,i,e,l),$s(this,jn,0)}draw(a,n){a.fillStyle=this.color,a.beginPath();const i=this.size*2,e=this.size;for(let l=0;l<5;l++)a.lineTo(Math.cos((18+72*l-cs(this,jn))/180*Math.PI)*i+this.position.x,-Math.sin((18+72*l-cs(this,jn))/180*Math.PI)*i+this.position.y),a.lineTo(Math.cos((54+72*l-cs(this,jn))/180*Math.PI)*e+this.position.x,-Math.sin((54+72*l-cs(this,jn))/180*Math.PI)*e+this.position.y);a.fill(),ca(this,jn,cs(this,jn)+5)}}jn=new WeakMap;class my{static create(a,n,i,e,l,t){const r=this.shapeMap.get(a);return new r(n,i,e,l,t)}}my.shapeMap=new Map([["star",VC],["circle",qC]]);var qn;class zC{constructor(a,n,i,e){$s(this,qn,void 0),this.stopped=!1,ca(this,qn,new Set);for(let l=0;l<e;l++){const t=my.create(a,n,Ua.randomFloat(1,6),i,Ua.color("89ABCDEF"),Ua.randomFloat(Math.PI-1,Math.PI+1));cs(this,qn).add(t)}}move(a){for(const n of cs(this,qn)){if(n.shouleRemove(a)){cs(this,qn).delete(n);continue}n.move()}cs(this,qn).size===0&&(this.stopped=!0)}draw(a,n){for(const i of cs(this,qn))i.draw(a,n)}}qn=new WeakMap;var ct,dt,Bt,Un,$n,yi,Nl,Fn,po,Ey,co,Fy,Hl,Cr,Bo,kd,ko,hd,ho,yd;class NC{constructor({shape:a="star",size:n=2,numParticles:i=10}={},e={}){$s(this,po),$s(this,co),$s(this,Hl),$s(this,Bo),$s(this,ko),$s(this,ho),$s(this,ct,void 0),$s(this,dt,void 0),$s(this,Bt,void 0),$s(this,Un,null),$s(this,$n,new Set),$s(this,yi,!1),$s(this,Nl,void 0),$s(this,Fn,new PC),ca(this,ct,a),ca(this,dt,n),ca(this,Bt,i),ca(this,Nl,e),this.animate=this.animate.bind(this)}mount(a){ca(this,Un,new OC(a,window.innerWidth,window.innerHeight,!0,!0,cs(this,Nl))),Bi(this,po,Ey).call(this),MC("Theme Popper 🎉",{leftBgColor:"#ffb366"})}unmount(){Bi(this,co,Fy).call(this),ca(this,yi,!1)}animate(){if(ca(this,yi,!0),cs(this,$n).size===0){ca(this,yi,!1),cs(this,Un).clear();return}requestAnimationFrame(this.animate);for(const a of cs(this,$n)){if(a.stopped){cs(this,$n).delete(a);return}a.move(cs(this,Un).size)}cs(this,Un).draw((a,n)=>{for(const i of cs(this,$n))i.draw(a,n)}),cs(this,Un).render()}}ct=new WeakMap,dt=new WeakMap,Bt=new WeakMap,Un=new WeakMap,$n=new WeakMap,yi=new WeakMap,Nl=new WeakMap,Fn=new WeakMap,po=new WeakSet,Ey=function(){RC()?cs(this,Fn).add("touchstart",Bi(this,Hl,Cr).bind(this)):cs(this,Fn).add("mousedown",Bi(this,Hl,Cr).bind(this)),cs(this,Fn).add("visibilitychange",Bi(this,ko,hd).bind(this)),cs(this,Fn).add("resize",Ay(Bi(this,Bo,kd).bind(this),500)),cs(this,Fn).startAll()},co=new WeakSet,Fy=function(){cs(this,Fn).stopAll(),cs(this,Fn).clear()},Hl=new WeakSet,Cr=function(s){const a={x:Bd(s)?s.touches[0].clientX:s.clientX,y:Bd(s)?s.touches[0].clientY:s.clientY},n=new zC(cs(this,ct),{...a},cs(this,dt),cs(this,Bt));cs(this,$n).add(n),cs(this,yi)||Bi(this,ho,yd).call(this)},Bo=new WeakSet,kd=function(s){cs(this,Un).handleResize(s)},ko=new WeakSet,hd=function(s){cs(this,$n).clear(),ca(this,yi,!1)},ho=new WeakSet,yd=function(){requestAnimationFrame(this.animate)};var gr={config:{shape:"star",size:1.95,numParticles:8}};const HC=2147483647,UC=L({name:"DenaroMoefyCanvas",setup(){let s=null;const a="moefy-canvas",n=()=>document.getElementById(a),i={shape:gr.config.shape,size:gr.config.size,numParticles:gr.config.numParticles},e={opacity:1,zIndex:HC};return as(()=>{window.screen.availWidth<719||(s=new NC(i,e),s&&s.mount(n()))}),il(()=>{s&&s.unmount()}),()=>window.screen.availWidth>719?d("div",{class:a},d("canvas",{id:a})):d("")}}),$C=zs({rootComponents:[UC]}),QC=Object.freeze(Object.defineProperty({__proto__:null,default:$C},Symbol.toStringTag,{value:"Module"})),WC=zs({enhance({app:s,router:a,siteData:n}){a.beforeEach(i=>{}),a.afterEach(i=>{})},setup(){as(()=>{Fa().beforeEach(i=>{i.path=="/"?Jl(!0):Jl(!1)});const n=Ta().path;setTimeout(()=>{n=="/"?Jl(!0):Jl(!1)},1e3)})},rootComponents:[]});function Jl(s){if(window.screen.availWidth<719){let l=document.getElementById("oml2d-levitated-btn");l&&(l.style.display="none");return}let a=document.getElementById("oml2d-stage"),n=document.getElementById("oml2d-tips"),i=document.getElementById("oml2d-menu"),e=document.getElementById("oml2d-statusBar");s?(a&&(a.style.visibility="visible"),n&&(n.style.display="block"),i&&(i.style.display="block"),e&&(e.style.display="block")):(a&&(a.style.visibility="hidden"),n&&(n.style.display="none"),i&&(i.style.display="none"),e&&(e.style.display="none"))}const GC=Object.freeze(Object.defineProperty({__proto__:null,default:WC},Symbol.toStringTag,{value:"Module"}));function KC(s,a,n){var i={z:s,a,s:n},e=f(),l=e.getContext("2d"),t=window.devicePixelRatio||1,r=window.innerWidth,p=window.innerHeight,c=i.s,B,k,h=Math,y=0,u=h.PI*2,A=h.cos,F=h.random;e.width=r*t,e.height=p*t,l.scale(t,t),l.globalAlpha=i.a,e.id="ribbon",e.style.cssText="position:fixed;top:0;left:0;z-index: "+i.z+";width:100%;height:100%;pointer-events:none;",document.body.appendChild(e);function C(){for(l.clearRect(0,0,r,p),B=[{x:0,y:p*.7+c},{x:0,y:p*.7-c}];B[1].x<r+c;)b(B[0],B[1])}function b(x,V){l.beginPath(),l.moveTo(x.x,x.y),l.lineTo(V.x,V.y);var P=V.x+(F()*2-.25)*c,W=m(V.y);l.lineTo(P,W),l.closePath(),y-=u/-50,l.fillStyle="#"+(A(y)*127+128<<16|A(y+u/3)*127+128<<8|A(y+u/3*2)*127+128).toString(16),l.fill(),B[0]=B[1],B[1]={x:P,y:W}}function m(x){return k=x+(F()*2-1.1)*c,k>p||k<0?m(x):k}function f(){return document.getElementById("ribbon")!=null?document.getElementById("ribbon"):document.createElement("canvas")}document.onclick=C,C()}function XC(){const s=document.createElement("div");s.className="figure-bg",s.style.cssText="position:fixed;top:0;left:0;z-index:1;width:100%;height:100%;pointer-events:none;background: url(/assets/bg.svg) center/cover no-repeat;",document.body.appendChild(s)}var Il={type:"figure",ribbonOption:{zIndex:1,alpha:.8,size:90}};const YC=zs({enhance({app:s,router:a,siteData:n}){a.beforeEach((i,e)=>{}),a.afterEach((i,e)=>{})},setup(){as(()=>{var s,a,n;switch(Il.type){case"figure":XC();break;case"ribbon":KC((s=Il.ribbonOption)==null?void 0:s.zIndex,(a=Il.ribbonOption)==null?void 0:a.alpha,(n=Il.ribbonOption)==null?void 0:n.size);break}})},rootComponents:[]}),ZC=Object.freeze(Object.defineProperty({__proto__:null,default:YC},Symbol.toStringTag,{value:"Module"})),s5=L({name:"BlogBg",setup(){return()=>d("div",{class:"page-bg"})}}),a5=zs({rootComponents:[s5]}),n5=Object.freeze(Object.defineProperty({__proto__:null,default:a5},Symbol.toStringTag,{value:"Module"})),i5=s=>{if(window.dataLayer&&window.gtag)return;const a=document.createElement("script");a.src=`https://www.googletagmanager.com/gtag/js?id=${s.id}`,a.async=!0,document.head.appendChild(a),window.dataLayer=window.dataLayer||[],window.gtag=function(){dataLayer.push(arguments)},gtag("js",new Date),gtag("config",s.id,{debug_mode:!0})};var e5={id:"G-R1WPVQFH8L",debug:!0};const l5=e5,t5=zs({enhance(){i5(l5)}}),r5=Object.freeze(Object.defineProperty({__proto__:null,default:t5},Symbol.toStringTag,{value:"Module"})),o5=s=>{const a=xs("keydown",n=>{const i=n.key==="k"&&(n.ctrlKey||n.metaKey);!(n.key==="/")&&!i||(n.preventDefault(),s(),a())})},p5=s=>s.button===1||s.altKey||s.ctrlKey||s.metaKey||s.shiftKey,c5=()=>{const s=Fa();return{transformItems:a=>a.map(n=>({...n,url:`/${Po(lc(n.url,"/"))}`})),hitComponent:({hit:a,children:n})=>({type:"a",ref:void 0,constructor:void 0,key:void 0,props:{href:a.url,onClick:i=>{p5(i)||(i.preventDefault(),s.push(lc(a.url)))},children:n},__v:null}),navigator:{navigate:({itemUrl:a})=>{s.push(a)}},transformSearchClient:a=>{const n=Ay(a.search,500);return{...a,search:async(...i)=>n(...i)}}}};var d5={appId:"1J80T0VL5V",apiKey:"6fd085fb5cad2f05e65d5488e0bfa7f4",indexName:"mrjackc_crawler",locales:{"/":{placeholder:"搜索内容",translations:{button:{buttonText:"搜索",buttonAriaLabel:"搜索"},modal:{searchBox:{resetButtonTitle:"清除查询条件",resetButtonAriaLabel:"清除查询条件",cancelButtonText:"取消",cancelButtonAriaLabel:"取消"},startScreen:{recentSearchesTitle:"搜索历史",noRecentSearchesText:"没有搜索历史",saveRecentSearchButtonTitle:"保存至搜索历史",removeRecentSearchButtonTitle:"从搜索历史中移除",favoriteSearchesTitle:"收藏",removeFavoriteSearchButtonTitle:"从收藏中移除"},errorScreen:{titleText:"无法获取结果",helpText:"你可能需要检查你的网络连接"},footer:{selectText:"选择",navigateText:"切换",closeText:"关闭",searchByText:"搜索提供者"},noResultsScreen:{noResultsText:"无法找到相关结果",suggestedQueryText:"你可以尝试查询",reportMissingResultsText:"你认为该查询应该有结果？",reportMissingResultsLinkText:"点击反馈"}}}}}};const B5=d5,k5=M(B5),Cy=Symbol(""),h5=()=>{const s=Fs(Cy),a=za();return g(()=>{var n;return{...s.value,...(n=s.value.locales)==null?void 0:n[a.value]}})},y5=s=>{s.provide(Cy,k5)},u5=(s=[],a)=>[`lang:${a}`,...Array.isArray(s)?s:[s]],A5=({buttonText:s="Search",buttonAriaLabel:a=s}={})=>`<button type="button" class="DocSearch DocSearch-Button" aria-label="${a}"><span class="DocSearch-Button-Container"><svg width="20" height="20" class="DocSearch-Search-Icon" viewBox="0 0 20 20"><path d="M14.386 14.386l4.0877 4.0877-4.0877-4.0877c-2.9418 2.9419-7.7115 2.9419-10.6533 0-2.9419-2.9418-2.9419-7.7115 0-10.6533 2.9418-2.9419 7.7115-2.9419 10.6533 0 2.9419 2.9418 2.9419 7.7115 0 10.6533z" stroke="currentColor" fill="none" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round"></path></svg><span class="DocSearch-Button-Placeholder">${s}</span></span><span class="DocSearch-Button-Keys"><kbd class="DocSearch-Button-Key"><svg width="15" height="15" class="DocSearch-Control-Key-Icon"><path d="M4.505 4.496h2M5.505 5.496v5M8.216 4.496l.055 5.993M10 7.5c.333.333.5.667.5 1v2M12.326 4.5v5.996M8.384 4.496c1.674 0 2.116 0 2.116 1.5s-.442 1.5-2.116 1.5M3.205 9.303c-.09.448-.277 1.21-1.241 1.203C1 10.5.5 9.513.5 8V7c0-1.57.5-2.5 1.464-2.494.964.006 1.134.598 1.24 1.342M12.553 10.5h1.953" stroke-width="1.2" stroke="currentColor" fill="none" stroke-linecap="square"></path></svg></kbd><kbd class="DocSearch-Button-Key">K</kbd></span></button>`,v5=16,gy=()=>{if(document.querySelector(".DocSearch-Modal"))return;const s=new Event("keydown");s.key="k",s.metaKey=!0,window.dispatchEvent(s),setTimeout(gy,v5)},m5=s=>{const a="algolia-preconnect";(window.requestIdleCallback||setTimeout)(()=>{if(document.head.querySelector(`#${a}`))return;const i=document.createElement("link");i.id=a,i.rel="preconnect",i.href=`https://${s}-dsn.algolia.net`,i.crossOrigin="",document.head.appendChild(i)})};o(()=>import("./style-l0sNRNKZ.js"),[]),o(()=>import("./docsearch-l0sNRNKZ.js"),[]);const E5=L({name:"Docsearch",props:{containerId:{type:String,default:"docsearch-container"},options:{type:Object,default:()=>({})}},setup(s){const a=h5(),n=c5(),i=gt(),e=za(),l=M(!1),t=M(!1),r=g(()=>{const{locales:B={},...k}=s.options;return{...a.value,...k,...B[e.value]}}),p=async()=>{var k;const{default:B}=await o(()=>import("./index-DCs6OeCW.js"),[]);B({...n,...r.value,container:`#${s.containerId}`,searchParameters:{...r.value.searchParameters,facetFilters:u5((k=r.value.searchParameters)==null?void 0:k.facetFilters,i.value)}}),l.value=!0},c=()=>{t.value||l.value||(t.value=!0,p(),gy(),os(e,p))};return o5(c),as(()=>m5(r.value.appId)),()=>{var B;return[d("div",{id:s.containerId,style:{display:l.value?"block":"none"}}),l.value?null:d("div",{onClick:c,innerHTML:A5((B=r.value.translations)==null?void 0:B.button)})]}}}),F5=zs({enhance({app:s}){y5(s),s.component("Docsearch",E5)}}),C5=Object.freeze(Object.defineProperty({__proto__:null,default:F5},Symbol.toStringTag,{value:"Module"})),g5=L({__name:"NotFound",setup(s,{expose:a}){a();const n=()=>{window.history.go(-1)},i=za(),e=Bs(),{navigate:l}=Mr({to:e.value.home??i.value}),t=M(e.value.routeLocales.notFoundTitle),r=()=>{const k=e.value.routeLocales.notFoundMsg;return k[Math.floor(Math.random()*k.length)]},p=M(["404_bg_1.png","404_bg_2.png"]),c=g(()=>{const k=Math.floor(Math.random()*p.value.length);return{backgroundImage:`url(/assets/images/${p.value[k]})`}}),B={goBack:n,routeLocale:i,themeLocale:e,navigate:l,getTitle:t,getMsg:r,images:p,background:c,get CommonWrapper(){return cl},get SkipLink(){return ce}};return Object.defineProperty(B,"__isScriptSetup",{enumerable:!1,value:!0}),B}}),b5={class:"not-found-content"},f5={class:"not-found-hint"},D5={class:"error-title"},_5={class:"error-hint"},S5={class:"actions"};function w5(s,a,n,i,e,l){return Rs(),Ba(js,null,[ds(i.SkipLink),ds(i.CommonWrapper,{noSidebar:!0},{default:cn(()=>[Y("main",{class:"page not-found",id:"main-content",style:Ze(i.background)},[Y("div",b5,[Y("div",f5,[a[1]||(a[1]=Y("p",{class:"error-code","data-t":"404"},"404",-1)),Y("h1",D5,Qn(i.getTitle),1),Y("p",_5,Qn(i.getMsg()),1)]),Y("div",S5,[Y("button",{class:"action-button left",onClick:i.goBack},"返回上一页"),Y("button",{class:"action-button right",onClick:a[0]||(a[0]=(...t)=>i.navigate&&i.navigate(...t))}," 带我回家 ")])])],4)]),_:1})],64)}const x5=xn(g5,[["render",w5],["__scopeId","data-v-4c8e46f0"],["__file","NotFound.vue"]]),L5="https://github.com/OrageKK/sponsor-page",T5="https://www.paypal.me/oragekk",O5=L({__name:"Sponsor",setup(s,{expose:a}){a();const n=te({alipay_donate:"/assets/images/AliPayQR.jpg",alipay_donate_link:"https://qr.alipay.com/fkx10720tbvl7vbt30mmad4",wechat_donate:"/assets/images/WeChanSQ.JPG"}),{isMobile:i}=Si();as(()=>{const l=document.querySelector("#drinks-box-s"),t=document.querySelector(".icon-donate"),r=document.querySelector(".donate-button"),p=document.querySelector(".donate-button2"),c=document.querySelector("#drinks-button-box"),B=document.querySelector("#drinks-button-bg"),k=document.querySelector("#drinks-qrcodes"),h=document.querySelector("#drinks-qrcode"),y={};y[0]=function(){l.classList.remove("donate-animation-2","donate-animation-3"),l.classList.add("donate-animation-1"),c.classList.add("showBox"),setTimeout(()=>{c.classList.remove("showBox")},300)},y[1]=function(){l.classList.remove("donate-animation-1","donate-animation-3"),l.classList.add("donate-animation-2"),setTimeout(()=>{l.classList.remove("donate-animation-2")},300)},y[2]=function(){l.classList.remove("donate-animation-2","donate-animation-1"),l.classList.add("donate-animation-3"),k.classList.add("showBox"),setTimeout(()=>{k.classList.remove("showBox")},300)},y[3]=function(){l.classList.remove("donate-animation-3","donate-animation-2"),l.classList.add("donate-animation-4"),setTimeout(()=>{l.classList.remove("donate-animation-4"),l.classList.add("donate-animation-1")},300)},t.addEventListener("click",y[0]),B.addEventListener("click",y[1]),r.addEventListener("click",function(u){const A=u.target.getAttribute("id");i.value&&A==="alipay_donate"?window.open(n.alipay_donate_link):(h.style.backgroundImage=`url(${n[A]})`,y[2]())}),p.addEventListener("click",function(u){const A=u.target.getAttribute("id");i.value&&A==="alipay_donate"?window.open(n.alipay_donate_link):(h.style.backgroundImage=`url(${n[A]})`,y[2]())}),h.addEventListener("click",y[3])});const e={githubLink:L5,paypalLink:T5,qrCodes:n,isMobile:i};return Object.defineProperty(e,"__isScriptSetup",{enumerable:!1,value:!0}),e}}),J5={class:"sponsor"},I5={id:"drinks-box"},P5={id:"drinks-box-s",class:"drinks-button left-100"},R5={id:"drinks-qrcodes",class:"left-100 tr3",ref:"drinksQrcodes"};function M5(s,a,n,i,e,l){return Rs(),Ba("div",J5,[Y("div",I5,[Y("div",P5,[a[4]||(a[4]=Y("div",{id:"drinks-icons",class:"left-100 tr3"},[Y("div",{id:"coffee-donate",class:"icon-donate"},[Y("span",{class:"font-icon icon iconfont icon-hk-flutter"}),Oo(" 赞助 ")])],-1)),Y("div",{id:"drinks-button-box",class:"tr3 left-100"},[a[2]||(a[2]=Y("div",{id:"drinks-button-bg",class:"left-100"},null,-1)),Y("div",{id:"github-box"},[Y("a",{href:i.githubLink,target:"_blank"},"Github")]),Y("ul",{id:"donate-buttons",class:"list tr3"},[Y("li",{id:"paypal_donate"},[Y("a",{href:i.paypalLink,target:"_blank"},"Paypal")]),Gi(' <li id="btc_donate" class="donate-button">Bitcoin</li> '),a[0]||(a[0]=Y("li",{id:"alipay_donate",class:"donate-button"},"AliPay",-1)),a[1]||(a[1]=Y("li",{id:"wechat_donate",class:"donate-button2"},"WeChat",-1))])]),Y("div",R5,a[3]||(a[3]=[Y("div",{id:"drinks-qrcode"},null,-1)]),512)])])])}const j5=xn(O5,[["render",M5],["__scopeId","data-v-98f29c97"],["__file","Sponsor.vue"]]),q5=L({__name:"Layout",setup(s,{expose:a}){a();const n=hn(),i=Bs(),e=gs(),l=ks(),{isMobile:t}=Si(),r=g(()=>{var c,B;return((c=i.value.blog)==null?void 0:c.sidebarDisplay)||((B=n.value.blog)==null?void 0:B.sidebarDisplay)||"mobile"}),p={themeData:n,themeLocale:i,page:e,frontmatter:l,isMobile:t,sidebarDisplay:r,get CommonWrapper(){return cl},get BloggerInfo(){return Lt},get HomePage(){return a2},get NormalPage(){return m2},get SkipLink(){return ce},get FadeSlideY(){return xt},Sponsor:j5};return Object.defineProperty(p,"__isScriptSetup",{enumerable:!1,value:!0}),p}});function V5(s,a,n,i,e,l){return Rs(),Ba(js,null,[ds(i.SkipLink),ds(i.CommonWrapper,null,qu({default:cn(()=>[i.frontmatter.home?(Rs(),Ba(js,{key:0},[i.frontmatter.home?(Rs(),Wa(i.HomePage,{key:0})):Gi("v-if",!0)],64)):(Rs(),Wa(i.FadeSlideY,{key:1},{default:cn(()=>[(Rs(),Wa(i.NormalPage,{key:i.page.path},{contentAfter:cn(()=>[ds(i.Sponsor)]),_:1}))]),_:1}))]),_:2},[i.sidebarDisplay!=="none"?{name:"navScreenBottom",fn:cn(()=>[ds(i.BloggerInfo)]),key:"0"}:void 0,!i.isMobile&&i.sidebarDisplay==="always"?{name:"sidebar",fn:cn(()=>[ds(i.BloggerInfo)]),key:"1"}:void 0]),1024)],64)}const z5=xn(q5,[["render",V5],["__file","Layout.vue"]]),N5=L({__name:"NewsItem",props:{path:{},info:{}},setup(s,{expose:a}){a();const n=s,i=Di(n,"info"),{info:e}=_2(n),{["t"]:l,["e"]:t}=i.value,r=e.value,p=Fa(),c=p.resolve(n.path),B=g(()=>c?c.path.toString():""),k={props:n,articleInfo:i,pageInfo:e,title:l,excerpt:t,pinfo:r,router:p,route:c,routePath:B,get DateInfo(){return B2},get PageViewInfo(){return k2},get TagInfo(){return h2},get WordInfo(){return y2},get Content(){return Dt}};return Object.defineProperty(k,"__isScriptSetup",{enumerable:!1,value:!0}),k}}),H5="/assets/avatar.webp",U5={class:"vp-article-wrapper"},$5={class:"vp-article-item",vocab:"https://schema.org/",typeof:"Article"},Q5={class:"news-item-content"},W5={class:"info-row"},G5={key:0,class:"page-info"},K5={class:"tag"},X5={property:"headline"};function Y5(s,a,n,i,e,l){return Rs(),Ba("div",U5,[Y("article",$5,[Y("div",Q5,[Y("div",W5,[a[1]||(a[1]=Y("img",{class:"avatar",src:H5},null,-1)),Y("div",null,[a[0]||(a[0]=Y("a",{href:"/intro"},[Y("span",{class:"name"},"春鸽鸽")],-1)),i.pinfo?(Rs(),Ba("div",G5,[ds(i.DateInfo,ye(Ri(i.pinfo)),null,16),ds(i.PageViewInfo,ye(Ri(i.pinfo)),null,16),ds(i.TagInfo,ye(Ri(i.pinfo)),null,16),ds(i.WordInfo,ye(Ri(i.pinfo)),null,16)])):Gi("v-if",!0)])]),a[2]||(a[2]=Y("hr",{class:"vp-article-hr"},null,-1)),Vu(s.$slots,"excerpt",ye(Ri({excerpt:i.excerpt})),()=>[i.excerpt?(Rs(),Ba(js,{key:0},[Gi(' <div class="vp-article-excerpt" v-html="excerpt"></div> '),ds(i.Content,{path:i.routePath},null,8,["path"])],64)):Gi("v-if",!0)])]),Y("div",K5,[Y("span",X5,"#"+Qn(i.title),1)])])])}const Z5=xn(N5,[["render",Y5],["__scopeId","data-v-7b630972"],["__file","NewsItem.vue"]]),s9=L({__name:"NewsList",props:{items:{}},setup(s,{expose:a}){a();const n=s,i=Ta(),e=Fa(),l=de(),t=n2(),r=M(1),p=g(()=>l.value.articlePerPage??10),c=g(()=>n.items.slice((r.value-1)*p.value,r.value*p.value)),B=M(""),k=M(Math.random());e.beforeEach((u,A,F)=>{k.value=Math.random(),F()}),async function(){const u=await hy.request();u.status==200&&(B.value=u.data.hitokoto)}();const h=async u=>{r.value=u;const A={...i.query};!(A.page===u.toString()||u===1&&!A.page)&&(u===1?delete A.page:A.page=u.toString(),await e.push({path:i.path,query:A})),await ya(),t({selector:".vp-pageview"})};as(()=>{const{page:u}=i.query;h(u?Number(u):1),os(r,()=>{const A=document.querySelector("#article-list").getBoundingClientRect().top+window.scrollY;setTimeout(()=>{window.scrollTo(0,A)},100)})});const y={props:n,route:i,router:e,blogOptions:l,updatePageview:t,currentPage:r,articlePerPage:p,currentArticles:c,hitokotoContent:B,imageKey:k,updatePage:h,get DropTransition(){return ps},get Pagination(){return I2},get EmptyIcon(){return tp},NewsItem:Z5};return Object.defineProperty(y,"__isScriptSetup",{enumerable:!1,value:!0}),y}}),a9={id:"article-list",class:"vp-article-list"},n9=["data-item-count"];function i9(s,a,n,i,e,l){return Rs(),Ba("div",a9,[Y("h3",null,Qn(i.hitokotoContent),1),Y("p",{class:"sub-title","data-item-count":String(n.items.length)}," 共"+Qn(n.items.length)+"条碎碎念~ (｡♥‿♥｡) ",9,n9),Y("figure",null,[(Rs(),Ba("img",{class:"news-top-img",src:"https://tuapi.eees.cc/api.php?category=dongman&px=pc&type=302",alt:"图",key:i.imageKey}))]),i.currentArticles.length?(Rs(),Ba(js,{key:0},[(Rs(!0),Ba(js,null,ju(i.currentArticles,({info:t,path:r},p)=>(Rs(),Wa(i.DropTransition,{appear:!0,delay:p*.04},{default:cn(()=>[(Rs(),Wa(i.NewsItem,{info:t,path:r,key:r},null,8,["info","path"]))]),_:2},1032,["delay"]))),256)),ds(i.Pagination,{current:i.currentPage,perPage:i.articlePerPage,total:n.items.length,onUpdateCurrentPage:i.updatePage},null,8,["current","perPage","total"])],64)):(Rs(),Wa(i.EmptyIcon,{key:1}))])}const e9=xn(s9,[["render",i9],["__scopeId","data-v-4794fe0c"],["__file","NewsList.vue"]]),l9=L({__name:"News",setup(s,{expose:a}){a();const n=dl("news"),i=gs(),e=g(()=>n.value?n.value.items:null),{isDarkmode:l}=wi(),t=g(()=>r("CommentService")?"CommentService":null),r=c=>!!wa(c),p={news:n,page:i,items:e,isDarkmode:l,commentService:t,hasGlobalComponent:r,get BlogWrapper(){return yl},get DropTransition(){return ps},get SkipLink(){return ce},NewsList:e9};return Object.defineProperty(p,"__isScriptSetup",{enumerable:!1,value:!0}),p}}),t9={class:"theme-container no-sidebar has-toc"},r9={class:"vp-page",id:"main-content"},o9={class:"theme-hope-content"};function p9(s,a,n,i,e,l){return Rs(),Ba(js,null,[ds(i.SkipLink),ds(i.BlogWrapper,null,{default:cn(()=>[Y("div",t9,[Y("main",r9,[Y("div",o9,[ds(i.DropTransition,{appear:"",delay:.24},{default:cn(()=>[(Rs(),Wa(i.NewsList,{key:i.page.path,items:i.items},null,8,["items"]))]),_:1}),(Rs(),Wa(Mu(i.commentService),{darkmode:i.isDarkmode},null,8,["darkmode"]))])])])]),_:1})],64)}const c9=xn(l9,[["render",p9],["__scopeId","data-v-e2907d7e"],["__file","News.vue"]]),by=()=>d("div",{class:"vp-nav-item vp-action"},d("a",{class:"vp-action-link",href:"https://foreverblog.cn/go.html",title:"穿梭虫洞-随机访问十年之约友链博客",target:"_blank",rel:"noopener noreferrer","aria-label":"wormhole",innerHTML:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1024 1024" fill="currentColor" style="width:1.25rem;height:1.25rem;vertical-align:middle"><path d="M644.608 665.6c192.512-171.008 342.016-395.776 254.464-494.592-27.648-31.232-66.56-45.568-108.032-41.472-34.816 3.584-70.656 20.992-107.008 50.176-116.224-59.904-254.464-55.296-366.592 11.776-86.016 51.2-148.48 134.656-172.544 231.936-18.944 74.24-14.336 152.064 12.8 223.744-44.544 50.688-86.528 154.624-34.816 212.992 21.504 24.576 52.736 35.328 90.112 35.328 114.176-0.512 286.72-100.864 431.616-229.888z m155.648-452.608c14.848-1.536 26.624 2.56 36.352 13.824 9.728 10.752 7.168 39.936-10.752 80.896-18.944-28.672-41.984-55.296-68.096-77.824 17.92-10.752 32.256-15.872 42.496-16.896z m-598.528 517.12c18.944 27.136 40.96 51.712 66.048 73.216-43.008 12.8-72.192 11.776-81.92 1.024-8.704-10.752 0.512-45.056 15.872-74.24z m685.568-246.784c-51.2 75.264-122.368 154.112-200.704 224.256-81.408 72.192-171.008 134.656-254.464 176.64 26.112 5.632 52.224 8.704 78.848 8.704 68.096 0 135.168-18.944 194.048-53.76 124.416-73.216 195.072-211.968 182.272-355.84z m0 0" p-id="4157"></path></svg>'}));by.displayName="Wormhole";const fy=()=>d("div",{class:"vp-nav-item vp-action"},d("a",{class:"vp-action-link",href:"https://www.travellings.cn/go.html",title:"开往",target:"_blank",rel:"noopener noreferrer","aria-label":"travelling",innerHTML:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1024 1024" fill="currentColor" style="width:1.25rem;height:1.25rem;vertical-align:middle"><path d="M658.836 519.32c-22.121 0-40.145 18.431-40.145 40.957 0 22.528 18.023 40.962 40.145 40.962 22.117 0 40.141-18.434 40.141-40.962 0-22.526-18.024-40.957-40.141-40.957zM364.742 519.32c-22.121 0-40.141 18.431-40.141 40.957 0.41 22.528 18.02 40.962 40.141 40.962 22.117 0 40.141-18.434 40.141-40.962 0-22.526-18.024-40.957-40.141-40.957z" p-id="8700"></path><path d="M512 0C229.23 0 0 229.23 0 512s229.23 512 512 512 512-229.23 512-512S794.77 0 512 0z m133.727 804.81c0 7.375-6.145 13.52-13.516 13.52H391.773c-7.371 0-13.515-6.145-13.515-13.52v-13.516c0-7.371 6.144-13.517 13.515-13.517h240.438c7.371 0 13.516 6.146 13.516 13.517v13.516z m120.832 37.273c-12.289 6.965-27.441 2.867-34.406-9.418l-54.887-96.668c-4.504 0.82-9.422 1.23-13.926 1.23H361.054c-4.914 0-9.421-0.41-13.925-1.23l-54.887 96.668c-6.965 12.285-22.527 16.383-34.406 9.418-12.289-6.961-16.383-22.938-9.422-35.223l51.199-90.113c-27.031-19.66-43.418-52.43-40.957-88.883l19.25-293.273c3.277-49.152 34.406-88.066 87.246-88.066h80.281c0-37.684 29.899-67.993 66.762-67.993 36.868 0 66.766 30.309 66.766 67.993h93.391c53.246 0 70.449 38.914 73.727 88.066l19.25 293.273c2.461 36.453-13.926 69.223-40.957 88.883l51.199 90.113c6.964 12.696 2.867 28.262-9.012 35.223z" p-id="8701"></path><path d="M672.352 314.931H351.633c-14.747 0-26.622 12.285-26.622 27.441v108.953c0 15.157 11.875 27.446 26.622 27.446h320.719c14.746 0 26.625-12.289 26.625-27.446V342.372c0-15.156-11.879-27.441-26.625-27.441z" p-id="8702"></svg>'}));fy.displayName="Travelling";const d9="mrjason",B9="2.7.0",k9="春鸽鸽的博客",h9="MIT",y9="module",u9={build:"vuepress-vite build src","clean-dev":"vuepress-vite dev src --clean-cache",dev:"vuepress-vite dev src","update-package":"pnpm dlx vp-update","fix-memory-limit":"cross-env LIMIT=8192 increase-memory-limit"},A9={"@commitlint/cli":"^19.3.0","@commitlint/config-conventional":"^19.2.2","@vue/repl":"^4.2.0","@vuepress/bundler-vite":"2.0.0-rc.12","@vuepress/helper":"2.0.0-rc.31","@vuepress/plugin-blog":"2.0.0-rc.31","@vuepress/plugin-comment":"2.0.0-rc.31","@vuepress/plugin-docsearch":"2.0.0-rc.31","@vuepress/plugin-feed":"2.0.0-rc.31","@vuepress/plugin-google-analytics":"2.0.0-rc.31","@vuepress/plugin-pwa":"2.0.0-rc.31","@waline/client":"^3.2.1","chart.js":"^4.4.3","cz-git":"^1.9.2",echarts:"^5.5.0","flowchart.ts":"^2.0.0",katex:"^0.16.10",mermaid:"^10.9.1","reveal.js":"^5.1.0",vite:"5.2.11",vue:"^3.4.27","vue-router":"^4.3.2",vuepress:"2.0.0-rc.12","vuepress-plugin-meting2":"1.4.2","vuepress-theme-hope":"2.0.0-rc.46"},v9={"@moefy-canvas/core":"^0.5.2","@moefy-canvas/theme-popper":"^0.5.2",aplayer:"^1.10.1",axios:"^1.7.2","deepmerge-ts":"^5.1.0","hls.js":"^1.5.9","http-proxy-middleware":"^2.0.6","vuepress-plugin-oh-my-live2d":"0.19.3"},m9="pnpm@9.1.2",E9={peerDependencyRules:{ignoreMissing:["@types/react","react","react-dom"]}},F9={commitizen:{path:"node_modules/cz-git"}},C9={name:d9,version:B9,description:k9,license:h9,type:y9,scripts:u9,devDependencies:A9,dependencies:v9,packageManager:m9,pnpm:E9,config:F9},g9=zs({layouts:{Layout:z5,NotFound:x5,News:c9},enhance:({app:s})=>{s.component("Wormhole",by),s.component("Travelling",fy)},setup:()=>{as(()=>{console.log(`%c ✨春鸽鸽的博客 v${C9.version}✨ %c ✨mrjason’s Blog✨ %c

               你，对，你，就是你

                  🍻- ( ゜- ゜)つロ 乾杯~🍻

                          ---- 最是春风留不住，徒留我孤直。

                                  欲寄彩笺兼尺素，山长水阔知何处？
`,"background: #eb507e; padding:5px; font-size:12px; color: #f9f4dc;","background: #030307; padding:5px; font-size:12px; color:#fff;","color: #51c4d3; font-size:12px;")})}}),b9=Object.freeze(Object.defineProperty({__proto__:null,default:g9},Symbol.toStringTag,{value:"Module"})),Pl=[NA,G0,nv,pv,kv,vv,bv,zv,Wv,Zv,nE,vE,TE,mC,xC,TC,QC,GC,ZC,n5,r5,C5,b9].map(s=>s.default).filter(Boolean),f9=JSON.parse('{"base":"/","lang":"zh-CN","title":"","description":"","head":[["meta",{"name":"referrer","content":"no-referrer-when-downgrade"}],["link",{"rel":"icon","href":"/favicon.ico"}],["link",{"rel":"icon","href":"/assets/icon/chrome-mask-512.png","type":"image/png","sizes":"512x512"}],["link",{"rel":"icon","href":"/assets/icon/chrome-mask-192.png","type":"image/png","sizes":"192x192"}],["link",{"rel":"icon","href":"/assets/icon/chrome-512.png","type":"image/png","sizes":"512x512"}],["link",{"rel":"icon","href":"/assets/icon/chrome-192.png","type":"image/png","sizes":"192x192"}],["link",{"rel":"manifest","href":"/manifest.webmanifest","crossorigin":"use-credentials"}],["meta",{"name":"theme-color","content":"#46bd87"}],["link",{"rel":"apple-touch-icon","href":"/assets/icon/apple-icon-152.png"}],["meta",{"name":"apple-mobile-web-app-capable","content":"yes"}],["meta",{"name":"apple-mobile-web-app-status-bar-style","content":"black"}],["meta",{"name":"msapplication-TileImage","content":"/assets/icon/ms-icon-144.png"}],["meta",{"name":"msapplication-TileColor","content":"#ffffff"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://mrjackc.github.io/rss.xml","title":"mrjason’s Blog RSS Feed"}]],"locales":{"/":{"lang":"zh-CN","title":"mrjason’s Blog","description":"上冬十二的博客"}}}');var _e=ms(f9),D9=tA,_9=()=>{const s=xA({history:D9(Et("/")),routes:[{name:"vuepress-route",path:"/:catchAll(.*)",components:{}}],scrollBehavior:(a,n,i)=>i||(a.hash?{el:a.hash}:{top:0})});return s.beforeResolve(async(a,n)=>{if(a.path!==n.path||n===mn){const i=kn(a.fullPath);if(i.path!==a.fullPath)return i.path;const e=await i.loader();a.meta={...i.meta,_pageChunk:e}}else a.path===n.path&&(a.meta=n.meta)}),s},S9=s=>{s.component("ClientOnly",ft),s.component("Content",Dt),s.component("RouteLink",Qs)},w9=(s,a,n)=>{const i=g(()=>a.currentRoute.value.path),e=Do((F,C)=>({get(){return F(),a.currentRoute.value.meta._pageChunk},set(b){a.currentRoute.value.meta._pageChunk=b,C()}})),l=g(()=>pi.resolveLayouts(n)),t=g(()=>pi.resolveRouteLocale(_e.value.locales,i.value)),r=g(()=>pi.resolveSiteLocaleData(_e.value,t.value)),p=g(()=>e.value.comp),c=g(()=>e.value.data),B=g(()=>c.value.frontmatter),k=g(()=>pi.resolvePageHeadTitle(c.value,r.value)),h=g(()=>pi.resolvePageHead(k.value,B.value,r.value)),y=g(()=>pi.resolvePageLang(c.value,r.value)),u=g(()=>pi.resolvePageLayout(c.value,l.value)),A={layouts:l,pageData:c,pageComponent:p,pageFrontmatter:B,pageHead:h,pageHeadTitle:k,pageLang:y,pageLayout:u,redirects:jr,routeLocale:t,routePath:i,routes:Ki,siteData:_e,siteLocaleData:r};return s.provide(jo,A),Object.defineProperties(s.config.globalProperties,{$frontmatter:{get:()=>B.value},$head:{get:()=>h.value},$headTitle:{get:()=>k.value},$lang:{get:()=>y.value},$page:{get:()=>c.value},$routeLocale:{get:()=>t.value},$site:{get:()=>_e.value},$siteLocale:{get:()=>r.value},$withBase:{get:()=>_s}}),A},x9=()=>{const s=OA(),a=gt();let n=[];const i=()=>{s.value.forEach(t=>{const r=L9(t);r&&n.push(r)})},e=()=>{const t=[];return s.value.forEach(r=>{const p=T9(r);p&&t.push(p)}),t},l=()=>{document.documentElement.lang=a.value;const t=e();n.forEach((r,p)=>{const c=t.findIndex(B=>r.isEqualNode(B));c===-1?(r.remove(),delete n[p]):t.splice(c,1)}),t.forEach(r=>document.head.appendChild(r)),n=[...n.filter(r=>!!r),...t]};ja(RA,l),as(()=>{i(),os(s,l,{immediate:!1})})},L9=([s,a,n=""])=>{const i=Object.entries(a).map(([r,p])=>Os(p)?`[${r}=${JSON.stringify(p)}]`:p===!0?`[${r}]`:"").join(""),e=`head > ${s}${i}`;return Array.from(document.querySelectorAll(e)).find(r=>r.innerText===n)||null},T9=([s,a,n])=>{if(!Os(s))return null;const i=document.createElement(s);return Bn(a)&&Object.entries(a).forEach(([e,l])=>{Os(l)?i.setAttribute(e,l):l===!0&&i.setAttribute(e,"")}),Os(n)&&i.appendChild(document.createTextNode(n)),i},O9=B7,J9=async()=>{var n;const s=O9({name:"Vuepress",setup(){var l;x9();for(const t of Pl)(l=t.setup)==null||l.call(t);const i=Pl.flatMap(({rootComponents:t=[]})=>t.map(r=>d(r))),e=JA();return()=>[d(e.value),i]}}),a=_9();S9(s),w9(s,a,Pl);for(const i of Pl)await((n=i.enhance)==null?void 0:n.call(i,{app:s,router:a,siteData:_e}));return s.use(a),{app:s,router:a}};J9().then(({app:s,router:a})=>{a.isReady().then(()=>{s.mount("#app")})});export{Fs as A,Vu as B,V9 as C,Ze as D,Fu as E,js as F,I6 as G,$a as H,as as I,si as J,Wa as K,Ns as L,sc as M,z9 as N,uu as O,ya as P,Zn as Q,ai as R,Zd as S,bi as T,zy as U,d as V,q9 as W,il as X,xn as _,A6 as a,Y as b,Ba as c,J9 as createVueApp,Oo as d,ds as e,Gi as f,L as g,ju as h,o as i,M as j,g as k,te as l,M9 as m,Zi as n,Rs as o,R9 as p,ja as q,wa as r,ms as s,Qn as t,j9 as u,lk as v,cn as w,P9 as x,To as y,os as z};
