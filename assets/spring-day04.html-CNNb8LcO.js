import{_ as a,c as n,a as i,o as l}from"./app-CpAF2rca.js";const o={};function r(p,s){return l(),n("div",null,s[0]||(s[0]=[i(`<h1 id="spring-事务" tabindex="-1"><a class="header-anchor" href="#spring-事务"><span>spring 事务</span></a></h1><h2 id="_1-事务回顾" tabindex="-1"><a class="header-anchor" href="#_1-事务回顾"><span>1)事务回顾</span></a></h2><h3 id="_1-1-什么是事务" tabindex="-1"><a class="header-anchor" href="#_1-1-什么是事务"><span>1.1)什么是事务？</span></a></h3><p>事务指数据库中多个操作合并在一起形成的操作序列</p><h3 id="_1-2-事务的作用" tabindex="-1"><a class="header-anchor" href="#_1-2-事务的作用"><span>1.2)事务的作用</span></a></h3><p>1.当数据库操作序列中个别操作失败时，提供一种方式使数据库状态恢复到正常状态（<strong>A</strong>），保障数据库即使在异常状态下仍能保持数据一致性（<strong>C</strong>）（要么操作前状态，要么操作后状态）。</p><p>2.当出现并发访问数据库时，在多个访问间进行相互隔离，防止并发访问操作结果互相干扰（<strong>I</strong>）。</p><ul><li><p>事务特征（ACID）</p><ul><li><p>原子性（Atomicity）指事务是一个不可分割的整体，其中的操作要么全执行或全不执行</p></li><li><p>一致性（Consistency）事务前后数据的完整性必须保持一致</p></li><li><p>隔离性（Isolation）事务的隔离性是多个用户并发访问数据库时，数据库为每一个用户开启的事务，不能被其他事务的操作数据所干扰，多个并发事务之间要相互隔离</p></li><li><p>持久性（Durability）持久性是指一个事务一旦被提交，它对数据库中数据的改变就是永久性的，接下来即使数据库发生故障也不应该对其有任何影响</p></li></ul></li></ul><h3 id="_1-3-事务的隔离级" tabindex="-1"><a class="header-anchor" href="#_1-3-事务的隔离级"><span>1.3)事务的隔离级</span></a></h3><ul><li><p>脏读：允许读取未提交的信息</p><ul><li>原因：Read uncommitted</li></ul><p>解决方案： （表级读锁）</p></li></ul><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111607652.png" alt="1591321851725" tabindex="0" loading="lazy"><figcaption>1591321851725</figcaption></figure><ul><li>不可重复读：读取过程中单个数据发生了变化 <ul><li>解决方案： Repeatable read （行级写锁）</li></ul></li></ul><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111607710.png" alt="1591321927034" tabindex="0" loading="lazy"><figcaption>1591321927034</figcaption></figure><ul><li>幻读：读取过程中数据条目发生了变化 <ul><li>解决方案： Serializable（表级写锁）</li></ul></li></ul><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111607750.png" alt="1591321959641" tabindex="0" loading="lazy"><figcaption>1591321959641</figcaption></figure><h2 id="_2-事务管理" tabindex="-1"><a class="header-anchor" href="#_2-事务管理"><span>2)事务管理</span></a></h2><h3 id="_2-1-spring事务核心对象" tabindex="-1"><a class="header-anchor" href="#_2-1-spring事务核心对象"><span>2.1)<strong>Spring</strong>事务核心对象</span></a></h3><ul><li><p>J2EE开发使用分层设计的思想进行，对于简单的业务层转调数据层的单一操作，事务开启在业务层或者数据层并无太大差别，当业务中包含多个数据层的调用时，需要在业务层开启事务，对数据层中多个操作进行组合并归属于同一个事务进行处理</p></li><li><p>Spring为业务层提供了整套的事务解决方案</p><ul><li><p>PlatformTransactionManager</p></li><li><p>TransactionDefinition</p></li><li><p>TransactionStatus</p></li></ul></li></ul><h3 id="_2-2-platformtransactionmanager" tabindex="-1"><a class="header-anchor" href="#_2-2-platformtransactionmanager"><span><strong>2.2)PlatformTransactionManager</strong></span></a></h3><ul><li><p>平台事务管理器实现类</p><ul><li><p>DataSourceTransactionManager 适用于Spring JDBC或MyBatis</p></li><li><p>HibernateTransactionManager 适用于Hibernate3.0及以上版本</p></li><li><p>JpaTransactionManager 适用于JPA</p></li><li><p>JdoTransactionManager 适用于JDO</p></li><li><p>JtaTransactionManager 适用于JTA</p></li></ul></li><li><p>JPA（Java Persistence API）Java EE 标准之一，为POJO提供持久化标准规范，并规范了持久化开发的统一API，符合JPA规范的开发可以在不同的JPA框架下运行</p></li><li><p>JDO(Java Data Object )是Java对象持久化规范，用于存取某种数据库中的对象，并提供标准化API。与JDBC相比，JDBC仅针对关系数据库进行操作，JDO可以扩展到关系数据库、文件、XML、对象数据库（ODBMS）等，可移植性更强</p></li><li><p>JTA（Java Transaction API）Java EE 标准之一，允许应用程序执行分布式事务处理。与JDBC相比，JDBC事务则被限定在一个单一的数据库连接，而一个JTA事务可以有多个参与者，比如JDBC连接、JDO 都可以参与到一个JTA事务中</p></li></ul><p>此接口定义了事务的基本操作</p><ul><li><p>获取事务 ：</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">TransactionStatus</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> getTransaction</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">TransactionDefinition</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> definition)</span></span></code></pre></div></li><li><p>提交事务 ：</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> commit</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">TransactionStatus</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> status)</span></span></code></pre></div></li><li><p>回滚事务 ：</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> rollback</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">TransactionStatus</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> status)</span></span></code></pre></div></li></ul><h3 id="_2-3-transactiondefinition" tabindex="-1"><a class="header-anchor" href="#_2-3-transactiondefinition"><span><strong>2.3)TransactionDefinition</strong></span></a></h3><p>此接口定义了事务的基本信息</p><ul><li><p>获取事务定义名称</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> getName</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span></span></code></pre></div></li><li><p>获取事务的读写属性</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">boolean</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> isReadOnly</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span></span></code></pre></div></li><li><p>获取事务隔离级别</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">int</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> getIsolationLevel</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span></span></code></pre></div></li><li><p>获事务超时时间</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">int</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> getTimeout</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span></span></code></pre></div></li><li><p>获取事务传播行为特征</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">int</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> getPropagationBehavior</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span></span></code></pre></div></li></ul><h3 id="_2-4-transactionstatus" tabindex="-1"><a class="header-anchor" href="#_2-4-transactionstatus"><span><strong>2.4)TransactionStatus</strong></span></a></h3><p>此接口定义了事务在执行过程中某个时间点上的状态信息及对应的状态操作</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111607775.png" alt="1591322466820" tabindex="0" loading="lazy"><figcaption>1591322466820</figcaption></figure><h3 id="_2-5-事务控制方式" tabindex="-1"><a class="header-anchor" href="#_2-5-事务控制方式"><span><strong>2.5)事务控制方式</strong></span></a></h3><ul><li><p>编程式</p></li><li><p>声明式（XML）</p></li><li><p>声明式（注解）</p></li></ul><h3 id="_2-6-案例说明" tabindex="-1"><a class="header-anchor" href="#_2-6-案例说明"><span><strong>2.6)案例说明</strong></span></a></h3><h4 id="_2-6-1-案例说明" tabindex="-1"><a class="header-anchor" href="#_2-6-1-案例说明"><span>2.6.1)案例说明</span></a></h4><p>银行转账业务说明</p><p>银行转账操作中，涉及从A账户到B账户的资金转移操作。数据层仅提供单条数据的基础操作，未设计多账户间的业务操作。</p><h4 id="_2-6-2-案例环境-基于spring、mybatis整合" tabindex="-1"><a class="header-anchor" href="#_2-6-2-案例环境-基于spring、mybatis整合"><span>2.6.2)案例环境（基于Spring、Mybatis整合）</span></a></h4><ul><li>业务层接口提供转账操作</li></ul><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">* 转账操作</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">* </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> outName</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     出账用户名</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">* </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> inName</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      入账用户名</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">* </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> money</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">       转账金额</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">*/</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> transfer</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> outName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> inName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Double</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> money)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span></code></pre></div><ul><li>业务层实现提供转账操作</li></ul><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> transfer</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> outName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> inName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Double</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> money){</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    accountDao</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">inMoney</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(outName,money);</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">                                                       accountDao</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">outMoney</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(inName,money);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">}</span></span></code></pre></div><ul><li>数据层提供对应的入账与出账操作</li></ul><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">update</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;inMoney&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">	update account set money = money + #{money} where name = #{name}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">update</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">update</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;outMoney&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">	update account set money = money - #{money} where name = #{name}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">update</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><h4 id="_2-6-3-编程式事务" tabindex="-1"><a class="header-anchor" href="#_2-6-3-编程式事务"><span><strong>2.6.3)编程式事务</strong></span></a></h4><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> transfer</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> outName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> inName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Double</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> money){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    //创建事务管理器</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    DataSourceTransactionManager</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> dstm </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> DataSourceTransactionManager</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    //为事务管理器设置与数据层相同的数据源</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    dstm</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">setDataSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(dataSource);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    //创建事务定义对象</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    TransactionDefinition</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> td </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> DefaultTransactionDefinition</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    //创建事务状态对象，用于控制事务执行</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    TransactionStatus</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> ts </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> dstm</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getTransaction</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(td);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    accountDao</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">inMoney</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(outName,money);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    int</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/</span><span style="color:#D19A66;--shiki-dark:#D19A66;">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    //模拟业务层事务过程中出现错误</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    accountDao</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">outMoney</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(inName,money);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    //提交事务</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    dstm</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">commit</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(ts);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-7-使用aop控制事务" tabindex="-1"><a class="header-anchor" href="#_2-7-使用aop控制事务"><span>2.7)使用AOP控制事务</span></a></h3><p>将业务层的事务处理功能抽取出来制作成AOP通知，利用环绕通知运行期动态织入</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Object</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> tx</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">ProceedingJoinPoint</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> pjp) throws Throwable {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    </span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    DataSourceTransactionManager</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> dstm </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> DataSourceTransactionManager</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    dstm</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">setDataSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(dataSource);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    TransactionDefinition</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> td </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> DefaultTransactionDefinition</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    TransactionStatus</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> ts </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> dstm</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getTransaction</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(td);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    Object</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> ret </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> pjp</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">proceed</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">pjp</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    dstm</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">commit</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(ts);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    </span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    return</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> ret</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">}</span></span></code></pre></div><p>配置AOP通知类，并注入dataSource</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bean</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;txAdvice&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;com.mrjason.aop.TxAdvice&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;dataSource&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> ref</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;dataSource&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><p>使用环绕通知将通知类织入到原始业务对象执行过程中</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">aop:config</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">aop:pointcut</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;pt&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> expression</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;execution(* *..transfer(..))&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">aop:aspect</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> ref</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;txAdvice&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">aop:around</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> method</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;tx&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> pointcut-ref</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;pt&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">aop:aspect</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">aop:config</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><h3 id="_2-8声明式事务-xml" tabindex="-1"><a class="header-anchor" href="#_2-8声明式事务-xml"><span><strong>2.8声明式事务（XML）</strong></span></a></h3><p><strong>AOP</strong>配置事务是否具有特例性？</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Object</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> tx</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">ProceedingJoinPoint</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> pjp) throws Throwable {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    DataSourceTransactionManager</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> dstm </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> DataSourceTransactionManager</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    dstm</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">setDataSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(dataSource);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    TransactionDefinition</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> td </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> DefaultTransactionDefinition</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    TransactionStatus</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> ts </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> dstm</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getTransaction</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(td);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    Object</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> ret </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> pjp</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">proceed</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">pjp</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    dstm</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">commit</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(ts);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    return</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> ret</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">}</span></span></code></pre></div><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bean</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;txAdvice&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;com.mrjason.aop.TxAdvice&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">	&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;dataSource&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> ref</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;dataSource&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><p>使用tx命名空间配置事务专属通知类</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">tx:advice</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;txAdvice&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> transaction-manager</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;txManager&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">tx:attributes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">tx:method</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;*&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> read-only</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;false&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">tx:method</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;get*&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> read-only</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;true&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">tx:method</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;find*&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> read-only</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;true&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">tx:attributes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">tx:advice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><p>使用aop:advisor在AOP配置中引用事务专属通知类</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">aop:config</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">aop:pointcut</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;pt&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> expression</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;execution(* *..*(..))&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">aop:advisor</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> advice-ref</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;txAdvice&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> pointcut-ref</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;pt&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">aop:config</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><h4 id="_2-8-1-aop-advice与aop-advisor区别" tabindex="-1"><a class="header-anchor" href="#_2-8-1-aop-advice与aop-advisor区别"><span>2.8.1)<strong>aop:advice与aop:advisor区别</strong></span></a></h4><ul><li><p>aop:advice配置的通知类可以是普通java对象，不实现接口，也不使用继承关系</p></li><li><p>aop:advisor配置的通知类必须实现通知接口</p><ul><li><p>MethodBeforeAdvice</p></li><li><p>AfterReturningAdvice</p></li><li><p>ThrowsAdvice</p></li><li><p>……</p></li></ul></li></ul><h4 id="_2-8-2-tx配置-tx-advice" tabindex="-1"><a class="header-anchor" href="#_2-8-2-tx配置-tx-advice"><span>2.8.2)tx配置----tx:advice</span></a></h4><ul><li><p>名称：tx:advice</p></li><li><p>类型：<strong>标签</strong></p></li><li><p>归属：beans标签</p></li><li><p>作用：专用于声明事务通知</p></li><li><p>格式：</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">beans</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">tx:advice</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;txAdvice&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> transaction-manager</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;txManager&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">tx:advice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">beans</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div></li><li><p>基本属性：</p><ul><li><p>id ：用于配置aop时指定通知器的id</p></li><li><p>transaction-manager ：指定事务管理器bean</p></li></ul></li></ul><h4 id="_2-8-3-tx配置-tx-attributes" tabindex="-1"><a class="header-anchor" href="#_2-8-3-tx配置-tx-attributes"><span>2.8.3)tx配置----tx:attributes</span></a></h4><ul><li><p>名称：tx:attributes</p></li><li><p>类型：<strong>标签</strong></p></li><li><p>归属：tx:advice标签</p></li><li><p>作用：定义通知属性</p></li><li><p>格式：</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">tx:advice</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;txAdvice&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> transaction-manager</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;txManager&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">tx:attributes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">tx:attributes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">tx:advice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div></li><li><p>基本属性：</p><ul><li>无</li></ul></li></ul><h4 id="_2-8-4-tx配置-tx-method" tabindex="-1"><a class="header-anchor" href="#_2-8-4-tx配置-tx-method"><span>2.8.4)tx配置----tx:method</span></a></h4><ul><li><p>名称：tx:method</p></li><li><p>类型：<strong>标签</strong></p></li><li><p>归属：tx:attribute标签</p></li><li><p>作用：设置具体的事务属性</p></li><li><p>格式：</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">tx:attributes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">tx:method</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;*&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> read-only</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;false&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">tx:method</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;get*&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> read-only</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;true&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">tx:attributes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div></li><li><p>说明：</p><p>通常事务属性会配置多个，包含1个读写的全事务属性，1个只读的查询类事务属性</p></li></ul><p><strong>tx:method属性</strong></p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111607810.png" alt="1591367291135" tabindex="0" loading="lazy"><figcaption>1591367291135</figcaption></figure><h3 id="_2-9-事务传播行为" tabindex="-1"><a class="header-anchor" href="#_2-9-事务传播行为"><span><strong>2.9)事务传播行为</strong></span></a></h3><ul><li><p>事务管理员</p></li><li><p>事务协调员</p></li></ul><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111607839.png" alt="1591367347482" tabindex="0" loading="lazy"><figcaption>1591367347482</figcaption></figure><ul><li>事务传播行为描述的是事务协调员对事务管理员所携带事务的处理态度</li></ul><h3 id="_2-10-事务传播行为" tabindex="-1"><a class="header-anchor" href="#_2-10-事务传播行为"><span><strong>2.10)事务传播行为</strong></span></a></h3><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111607871.png" alt="1591367375088" tabindex="0" loading="lazy"><figcaption>1591367375088</figcaption></figure><h3 id="_2-11-事务传播应用" tabindex="-1"><a class="header-anchor" href="#_2-11-事务传播应用"><span><strong>2.11)事务传播应用</strong></span></a></h3><ul><li><p>场景A：生成订单业务</p><ul><li><p>子业务S1：记录日志到数据库表X</p></li><li><p>子业务S2：保存订单数据到数据库表Y</p></li><li><p>子业务S3：……</p></li><li><p>如果S2或S3或……事务提交失败，此时S1是否回滚？如何控制？</p></li><li><p>（S1需要新事务）</p></li></ul></li><li><p>场景B：生成订单业务</p><ul><li><p>背景1：订单号生成依赖数据库中一个专门用于控制订单号编号生成的表M获取</p></li><li><p>背景2：每次获取完订单号，表M中记录的编号自增1</p></li><li><p>子业务S1：从表M中获取订单编号</p></li><li><p>子业务S2：保存订单数据，订单编号来自于表M</p></li><li><p>子业务S3：……</p></li><li><p>如果S2或S3或……事务提交失败，此时S1是否回滚？如何控制？</p></li><li><p>（S1需要新事务）</p></li></ul></li></ul><h3 id="_2-12-声明式事务-注解" tabindex="-1"><a class="header-anchor" href="#_2-12-声明式事务-注解"><span><strong>2.12)声明式事务（注解）</strong></span></a></h3><h4 id="_2-12-1-transactional" tabindex="-1"><a class="header-anchor" href="#_2-12-1-transactional"><span>2.12.1)@Transactional</span></a></h4><ul><li><p>名称：@Transactional</p></li><li><p>类型：<strong>方法注解，类注解，接口注解</strong></p></li><li><p>位置：方法定义上方，类定义上方，接口定义上方</p></li><li><p>作用：设置当前类/接口中所有方法或具体方法开启事务，并指定相关事务属性</p></li><li><p>范例：</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Transactional</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    readOnly</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> false</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    timeout</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> -</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    isolation</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Isolation</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">DEFAULT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    rollbackFor</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> {</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">ArithmeticException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> IOException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">class</span><span style="color:#E06C75;--shiki-dark:#E06C75;">}</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    noRollbackFor</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> {}</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    propagation</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Propagation</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">REQUIRES_NEW</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">)</span></span></code></pre></div></li></ul><h4 id="_2-12-2-tx-annotation-driven" tabindex="-1"><a class="header-anchor" href="#_2-12-2-tx-annotation-driven"><span>2.12.2)tx:annotation-driven</span></a></h4><ul><li><p>名称：tx:annotation-driven</p></li><li><p>类型：<strong>标签</strong></p></li><li><p>归属：beans标签</p></li><li><p>作用：开启事务注解驱动，并指定对应的事务管理器</p></li><li><p>范例：</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">tx:annotation-driven</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> transaction-manager</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;txManager&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/&gt;</span></span></code></pre></div></li></ul><h3 id="_2-13-声明式事务-纯注解驱动" tabindex="-1"><a class="header-anchor" href="#_2-13-声明式事务-纯注解驱动"><span><strong>2.13)声明式事务（纯注解驱动）</strong></span></a></h3><ul><li><p>名称：@EnableTransactionManagement</p></li><li><p>类型：<strong>类注解</strong></p></li><li><p>位置：Spring注解配置类上方</p></li><li><p>作用：开启注解驱动，等同XML格式中的注解驱动</p></li><li><p>范例：</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Configuration</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">ComponentScan</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;com.mrjason&quot;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">PropertySource</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;classpath:jdbc.properties&quot;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Import</span><span style="color:#E06C75;--shiki-dark:#E06C75;">({</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">JDBCConfig</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">MyBatisConfig</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">TransactionManagerConfig</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">class</span><span style="color:#E06C75;--shiki-dark:#E06C75;">})</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">EnableTransactionManagement</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> SpringConfig</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> TransactionManagerConfig</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Bean</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> PlatformTransactionManager</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> getTransactionManager</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Autowired</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> DataSource</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> dataSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> DataSourceTransactionManager</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(dataSource);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div></li></ul><h2 id="_3-模板对象" tabindex="-1"><a class="header-anchor" href="#_3-模板对象"><span>3)模板对象</span></a></h2><h3 id="_3-1-spring模块对象" tabindex="-1"><a class="header-anchor" href="#_3-1-spring模块对象"><span>3.1)Spring模块对象</span></a></h3><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111607905.png" alt="1591368087398" tabindex="0" loading="lazy"><figcaption>1591368087398</figcaption></figure><ul><li><p>TransactionTemplate</p></li><li><p>JdbcTemplate</p></li><li><p>RedisTemplate</p></li><li><p>RabbitTemplate</p></li><li><p>JmsTemplate</p></li><li><p>HibernateTemplate</p></li><li><p>RestTemplate</p></li></ul><h3 id="_3-2-jdbctemplate-了解" tabindex="-1"><a class="header-anchor" href="#_3-2-jdbctemplate-了解"><span>3.2)JdbcTemplate（了解）</span></a></h3><p>提供标准的sql语句操作API</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> save</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Account</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> account) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> sql </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;insert into account(name,money)values(?,?)&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    jdbcTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">update</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(sql,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">account</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(),</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">account</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getMoney</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">}</span></span></code></pre></div><h3 id="_3-3-namedparameterjdbctemplate-了解" tabindex="-1"><a class="header-anchor" href="#_3-3-namedparameterjdbctemplate-了解"><span>3.3)NamedParameterJdbcTemplate(了解）</span></a></h3><p>提供标准的具名sql语句操作API</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> save</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Account</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> account) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> sql </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;insert into account(name,money)values(:name,:money)&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    Map</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> pm </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> HashMap</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    pm</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;name&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">account</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    pm</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;money&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">account</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getMoney</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    jdbcTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">update</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(sql,pm);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">}</span></span></code></pre></div><h3 id="_3-4-redistemplate" tabindex="-1"><a class="header-anchor" href="#_3-4-redistemplate"><span><strong>3.4)RedisTemplate</strong></span></a></h3><p>RedisTemplate对象结构</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111607935.png" alt="1591368270508" tabindex="0" loading="lazy"><figcaption>1591368270508</figcaption></figure><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> changeMoney</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Integer</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Double</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> money) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">opsForValue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;account:id:&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">id,money);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">}</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Double</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> findMondyById</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Integer</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> id) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    Object</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> money </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">opsForValue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;account:id:&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> +</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> id);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    return</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> Double</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">money</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">toString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">}</span></span></code></pre></div><h2 id="_4-事务底层原理解析" tabindex="-1"><a class="header-anchor" href="#_4-事务底层原理解析"><span>4)事务底层原理解析</span></a></h2><h3 id="_4-1-策略模式应用" tabindex="-1"><a class="header-anchor" href="#_4-1-策略模式应用"><span><strong>4.1)策略模式应用</strong></span></a></h3><p>策略模式（Strategy Pattern）使用不同策略的对象实现不同的行为方式，策略对象的变化导致行为的变化。</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111607970.png" alt="1591368340720" tabindex="0" loading="lazy"><figcaption>1591368340720</figcaption></figure><p>策略模式（Strategy Pattern）使用不同策略的对象实现不同的行为方式，策略对象的变化导致行为的变化。</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111607001.png" alt="1591368370924" tabindex="0" loading="lazy"><figcaption>1591368370924</figcaption></figure>`,103)]))}const t=a(o,[["render",r],["__file","spring-day04.html.vue"]]),k=JSON.parse('{"path":"/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-day04.html","title":"spring 事务","lang":"zh-CN","frontmatter":{"created":"2022-09-27 17:45","updated":"2024-10-11 16:08","description":"spring 事务 1)事务回顾 1.1)什么是事务？ 事务指数据库中多个操作合并在一起形成的操作序列 1.2)事务的作用 1.当数据库操作序列中个别操作失败时，提供一种方式使数据库状态恢复到正常状态（A），保障数据库即使在异常状态下仍能保持数据一致性（C）（要么操作前状态，要么操作后状态）。 2.当出现并发访问数据库时，在多个访问间进行相互隔离，防止...","watermark":true,"head":[["meta",{"property":"og:url","content":"https://springg.us.kg/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-day04.html"}],["meta",{"property":"og:site_name","content":"mrjason’s Blog"}],["meta",{"property":"og:title","content":"spring 事务"}],["meta",{"property":"og:description","content":"spring 事务 1)事务回顾 1.1)什么是事务？ 事务指数据库中多个操作合并在一起形成的操作序列 1.2)事务的作用 1.当数据库操作序列中个别操作失败时，提供一种方式使数据库状态恢复到正常状态（A），保障数据库即使在异常状态下仍能保持数据一致性（C）（要么操作前状态，要么操作后状态）。 2.当出现并发访问数据库时，在多个访问间进行相互隔离，防止..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111607652.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-29T09:32:06.000Z"}],["meta",{"property":"article:author","content":"MrJason"}],["meta",{"property":"article:modified_time","content":"2024-10-29T09:32:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"spring 事务\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111607652.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111607710.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111607750.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111607775.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111607810.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111607839.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111607871.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111607905.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111607935.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111607970.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111607001.png\\"],\\"dateModified\\":\\"2024-10-29T09:32:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MrJason\\",\\"url\\":\\"https://springg.us.kg\\"}]}"]]},"headers":[{"level":2,"title":"1)事务回顾","slug":"_1-事务回顾","link":"#_1-事务回顾","children":[{"level":3,"title":"1.1)什么是事务？","slug":"_1-1-什么是事务","link":"#_1-1-什么是事务","children":[]},{"level":3,"title":"1.2)事务的作用","slug":"_1-2-事务的作用","link":"#_1-2-事务的作用","children":[]},{"level":3,"title":"1.3)事务的隔离级","slug":"_1-3-事务的隔离级","link":"#_1-3-事务的隔离级","children":[]}]},{"level":2,"title":"2)事务管理","slug":"_2-事务管理","link":"#_2-事务管理","children":[{"level":3,"title":"2.1)Spring事务核心对象","slug":"_2-1-spring事务核心对象","link":"#_2-1-spring事务核心对象","children":[]},{"level":3,"title":"2.2)PlatformTransactionManager","slug":"_2-2-platformtransactionmanager","link":"#_2-2-platformtransactionmanager","children":[]},{"level":3,"title":"2.3)TransactionDefinition","slug":"_2-3-transactiondefinition","link":"#_2-3-transactiondefinition","children":[]},{"level":3,"title":"2.4)TransactionStatus","slug":"_2-4-transactionstatus","link":"#_2-4-transactionstatus","children":[]},{"level":3,"title":"2.5)事务控制方式","slug":"_2-5-事务控制方式","link":"#_2-5-事务控制方式","children":[]},{"level":3,"title":"2.6)案例说明","slug":"_2-6-案例说明","link":"#_2-6-案例说明","children":[]},{"level":3,"title":"2.7)使用AOP控制事务","slug":"_2-7-使用aop控制事务","link":"#_2-7-使用aop控制事务","children":[]},{"level":3,"title":"2.8声明式事务（XML）","slug":"_2-8声明式事务-xml","link":"#_2-8声明式事务-xml","children":[]},{"level":3,"title":"2.9)事务传播行为","slug":"_2-9-事务传播行为","link":"#_2-9-事务传播行为","children":[]},{"level":3,"title":"2.10)事务传播行为","slug":"_2-10-事务传播行为","link":"#_2-10-事务传播行为","children":[]},{"level":3,"title":"2.11)事务传播应用","slug":"_2-11-事务传播应用","link":"#_2-11-事务传播应用","children":[]},{"level":3,"title":"2.12)声明式事务（注解）","slug":"_2-12-声明式事务-注解","link":"#_2-12-声明式事务-注解","children":[]},{"level":3,"title":"2.13)声明式事务（纯注解驱动）","slug":"_2-13-声明式事务-纯注解驱动","link":"#_2-13-声明式事务-纯注解驱动","children":[]}]},{"level":2,"title":"3)模板对象","slug":"_3-模板对象","link":"#_3-模板对象","children":[{"level":3,"title":"3.1)Spring模块对象","slug":"_3-1-spring模块对象","link":"#_3-1-spring模块对象","children":[]},{"level":3,"title":"3.2)JdbcTemplate（了解）","slug":"_3-2-jdbctemplate-了解","link":"#_3-2-jdbctemplate-了解","children":[]},{"level":3,"title":"3.3)NamedParameterJdbcTemplate(了解）","slug":"_3-3-namedparameterjdbctemplate-了解","link":"#_3-3-namedparameterjdbctemplate-了解","children":[]},{"level":3,"title":"3.4)RedisTemplate","slug":"_3-4-redistemplate","link":"#_3-4-redistemplate","children":[]}]},{"level":2,"title":"4)事务底层原理解析","slug":"_4-事务底层原理解析","link":"#_4-事务底层原理解析","children":[{"level":3,"title":"4.1)策略模式应用","slug":"_4-1-策略模式应用","link":"#_4-1-策略模式应用","children":[]}]}],"git":{"createdTime":1729494189000,"updatedTime":1730194326000,"contributors":[{"name":"MrJason","email":"845886914@qq.com","commits":2}]},"readingTime":{"minutes":8.73,"words":2620},"filePathRelative":"posts/Java/Java框架/Spring/spring-day04.md","localizedDate":"2024年10月21日","excerpt":"\\n<h2>1)事务回顾</h2>\\n<h3>1.1)什么是事务？</h3>\\n<p>事务指数据库中多个操作合并在一起形成的操作序列</p>\\n<h3>1.2)事务的作用</h3>\\n<p>1.当数据库操作序列中个别操作失败时，提供一种方式使数据库状态恢复到正常状态（<strong>A</strong>），保障数据库即使在异常状态下仍能保持数据一致性（<strong>C</strong>）（要么操作前状态，要么操作后状态）。</p>\\n<p>2.当出现并发访问数据库时，在多个访问间进行相互隔离，防止并发访问操作结果互相干扰（<strong>I</strong>）。</p>\\n<ul>\\n<li>\\n<p>事务特征（ACID）</p>\\n<ul>\\n<li>\\n<p>原子性（Atomicity）指事务是一个不可分割的整体，其中的操作要么全执行或全不执行</p>\\n</li>\\n<li>\\n<p>一致性（Consistency）事务前后数据的完整性必须保持一致</p>\\n</li>\\n<li>\\n<p>隔离性（Isolation）事务的隔离性是多个用户并发访问数据库时，数据库为每一个用户开启的事务，不能被其他事务的操作数据所干扰，多个并发事务之间要相互隔离</p>\\n</li>\\n<li>\\n<p>持久性（Durability）持久性是指一个事务一旦被提交，它对数据库中数据的改变就是永久性的，接下来即使数据库发生故障也不应该对其有任何影响</p>\\n</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{t as comp,k as data};
