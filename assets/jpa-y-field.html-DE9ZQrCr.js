import{_ as a,c as e,a as r,o as n}from"./app-CQys7GfP.js";const i={};function l(o,s){return n(),e("div",null,s[0]||(s[0]=[r(`<h1 id="jpa查询部分字段列名无效问题" tabindex="-1"><a class="header-anchor" href="#jpa查询部分字段列名无效问题"><span>JPA查询部分字段列名无效问题</span></a></h1><h2 id="_1-背景" tabindex="-1"><a class="header-anchor" href="#_1-背景"><span>1. 背景</span></a></h2><p>spring data jpa原生sql查询问题，我<strong>只要表其中的几个字段的值</strong>，本以为写个原生sql，拿实体类对象去接没问题，结果列名无效</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Query</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> </span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">      &quot;select d.order_id,d.user_id,d.price  from EDU_ORDER d  where  d.GENERIC_PROD_ID in(?1) &quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> +</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">      &quot; order by d.create_time desc &quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> nativeQuery</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> true</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">Order</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  findOrderList</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> groupSubIdList)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span></code></pre></div><p>java.sql.SQLException: 列名无效</p><h2 id="_2-解决方案" tabindex="-1"><a class="header-anchor" href="#_2-解决方案"><span>2. 解决方案</span></a></h2><h3 id="_2-1-select" tabindex="-1"><a class="header-anchor" href="#_2-1-select"><span>2.1 select *</span></a></h3><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Query</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">&quot;select d.* from EDU_ORDER d where d.GENERIC_PROD_ID in(?1) &quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> +</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">&quot; order by d.create_time desc &quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> nativeQuery</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> true</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">Order</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> findOrderList</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> groupSubIdList)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span></code></pre></div><p>虽然实现了功能， 这样还是全表查询了，而且对表关联等复杂逻辑无法比较无力</p><h3 id="_2-2-hql" tabindex="-1"><a class="header-anchor" href="#_2-2-hql"><span>2.2 HQL</span></a></h3><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">@Query</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#C678DD;--shiki-dark:#C678DD;">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">&quot;select d.orderId,d.userId,d.price from Order where d.GENERICPRODID in(?1) &quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> +</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">&quot; order by d.createTime desc &quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span></code></pre></div><p>使用HQL 也可以实现，但还是不够灵活</p><h3 id="_2-3-返回map-string-object-不返回实体" tabindex="-1"><a class="header-anchor" href="#_2-3-返回map-string-object-不返回实体"><span>2.3 返回Map&lt;String,Object&gt; 不返回实体</span></a></h3><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">@Query</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#C678DD;--shiki-dark:#C678DD;">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">      &quot;select d.order_id,d.user_id,d.price  from EDU_ORDER d  where  d.GENERIC_PROD_ID in(?1) &quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> +</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">      &quot; order by d.create_time desc &quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, nativeQuery </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> true)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">List</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&lt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">Map</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&lt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">String,</span><span style="color:#C678DD;--shiki-dark:#C678DD;">Object</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  findOrderList(List groupSubIdList);</span></span></code></pre></div><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章"><span>参考文章</span></a></h2><p><a href="https://blog.csdn.net/theweather/article/details/104961113" target="_blank" rel="noopener noreferrer">JPA 列名无效问题</a></p>`,16)]))}const p=a(i,[["render",l],["__file","jpa-y-field.html.vue"]]),d=JSON.parse('{"path":"/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/jpa/jpa-y-field.html","title":"JPA查询部分字段列名无效问题","lang":"zh-CN","frontmatter":{"description":"JPA查询部分字段列名无效问题 1. 背景 spring data jpa原生sql查询问题，我只要表其中的几个字段的值，本以为写个原生sql，拿实体类对象去接没问题，结果列名无效 java.sql.SQLException: 列名无效 2. 解决方案 2.1 select * 虽然实现了功能， 这样还是全表查询了，而且对表关联等复杂逻辑无法比较无力 ...","head":[["meta",{"property":"og:url","content":"https://mrjackc.github.io/posts/Java/Java%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96/jpa/jpa-y-field.html"}],["meta",{"property":"og:site_name","content":"mrjason’s Blog"}],["meta",{"property":"og:title","content":"JPA查询部分字段列名无效问题"}],["meta",{"property":"og:description","content":"JPA查询部分字段列名无效问题 1. 背景 spring data jpa原生sql查询问题，我只要表其中的几个字段的值，本以为写个原生sql，拿实体类对象去接没问题，结果列名无效 java.sql.SQLException: 列名无效 2. 解决方案 2.1 select * 虽然实现了功能， 这样还是全表查询了，而且对表关联等复杂逻辑无法比较无力 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-21T07:03:09.000Z"}],["meta",{"property":"article:author","content":"MrJason"}],["meta",{"property":"article:modified_time","content":"2024-10-21T07:03:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JPA查询部分字段列名无效问题\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-21T07:03:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MrJason\\",\\"url\\":\\"https://mrjackc.github.io\\"}]}"]]},"headers":[{"level":2,"title":"1. 背景","slug":"_1-背景","link":"#_1-背景","children":[]},{"level":2,"title":"2. 解决方案","slug":"_2-解决方案","link":"#_2-解决方案","children":[{"level":3,"title":"2.1 select *","slug":"_2-1-select","link":"#_2-1-select","children":[]},{"level":3,"title":"2.2 HQL","slug":"_2-2-hql","link":"#_2-2-hql","children":[]},{"level":3,"title":"2.3 返回Map<String,Object> 不返回实体","slug":"_2-3-返回map-string-object-不返回实体","link":"#_2-3-返回map-string-object-不返回实体","children":[]}]},{"level":2,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}],"git":{"createdTime":1729494189000,"updatedTime":1729494189000,"contributors":[{"name":"MrJason","email":"845886914@qq.com","commits":1}]},"readingTime":{"minutes":0.81,"words":242},"filePathRelative":"posts/Java/Java第三方依赖/jpa/jpa-y-field.md","localizedDate":"2024年10月21日","excerpt":"\\n<h2>1. 背景</h2>\\n<p>spring data jpa原生sql查询问题，我<strong>只要表其中的几个字段的值</strong>，本以为写个原生sql，拿实体类对象去接没问题，结果列名无效</p>\\n<div class=\\"language-java\\" data-ext=\\"java\\" data-title=\\"java\\"><pre class=\\"shiki shiki-themes one-dark-pro one-dark-pro vp-code\\" style=\\"background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">@</span><span style=\\"color:#E5C07B;--shiki-dark:#E5C07B\\">Query</span><span style=\\"color:#E06C75;--shiki-dark:#E06C75\\">(</span><span style=\\"color:#D19A66;--shiki-dark:#D19A66\\">value</span><span style=\\"color:#56B6C2;--shiki-dark:#56B6C2\\"> =</span><span style=\\"color:#E06C75;--shiki-dark:#E06C75\\"> </span></span>\\n<span class=\\"line\\"><span style=\\"color:#98C379;--shiki-dark:#98C379\\">      \\"select d.order_id,d.user_id,d.price  from EDU_ORDER d  where  d.GENERIC_PROD_ID in(?1) \\"</span><span style=\\"color:#56B6C2;--shiki-dark:#56B6C2\\"> +</span></span>\\n<span class=\\"line\\"><span style=\\"color:#98C379;--shiki-dark:#98C379\\">      \\" order by d.create_time desc \\"</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">,</span><span style=\\"color:#D19A66;--shiki-dark:#D19A66\\"> nativeQuery</span><span style=\\"color:#56B6C2;--shiki-dark:#56B6C2\\"> =</span><span style=\\"color:#D19A66;--shiki-dark:#D19A66\\"> true</span><span style=\\"color:#E06C75;--shiki-dark:#E06C75\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"color:#E5C07B;--shiki-dark:#E5C07B\\">List</span><span style=\\"color:#56B6C2;--shiki-dark:#56B6C2\\">&lt;</span><span style=\\"color:#E06C75;--shiki-dark:#E06C75\\">Order</span><span style=\\"color:#56B6C2;--shiki-dark:#56B6C2\\">&gt;</span><span style=\\"color:#61AFEF;--shiki-dark:#61AFEF\\">  findOrderList</span><span style=\\"color:#E06C75;--shiki-dark:#E06C75\\">(</span><span style=\\"color:#E5C07B;--shiki-dark:#E5C07B\\">List</span><span style=\\"color:#E06C75;--shiki-dark:#E06C75\\"> groupSubIdList)</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">;</span></span></code></pre>\\n</div>","autoDesc":true}');export{p as comp,d as data};
