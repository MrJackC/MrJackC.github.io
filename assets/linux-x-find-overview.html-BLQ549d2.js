import{_ as s,c as i,a as e,o as n}from"./app-JRvFIbSa.js";const r={};function t(l,a){return n(),i("div",null,a[0]||(a[0]=[e(`<h1 id="linux下各种查找命令汇总" tabindex="-1"><a class="header-anchor" href="#linux下各种查找命令汇总"><span>Linux下各种查找命令汇总</span></a></h1><h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介"><span>1. 简介</span></a></h2><p>linux 常用的文件查找命令有（find, grep, which, whereis, locate）</p><table><thead><tr><th></th><th>find</th><th>which</th><th>whereis</th><th>locate</th></tr></thead><tbody><tr><td>文件支持</td><td>所有文件类型</td><td>可执行文件</td><td>二进制文件、源文件、帮助文档</td><td>所有文件类型</td></tr><tr><td>查找路径</td><td>可指定，默认遍历当前路径及其子路径</td><td>环境变量PATH</td><td>数据库索引</td><td>数据库索引</td></tr><tr><td>查找原理</td><td>遍历磁盘</td><td>遍历PATH所指定的目录，寻找完全匹配filename的可执行文件</td><td>数据库索引，对去除.之后的所有字符后的filename进行完全匹配</td><td>数据库索引，绝对路径，部分匹配</td></tr><tr><td>查找效率/速度</td><td>低</td><td>高</td><td>高</td><td>高</td></tr><tr><td>适合场景</td><td>能使用which，whereis，locate时，尽量不使用find</td><td>可执行文件的查询</td><td>二进制文件，源文件、帮助文档的查找</td><td>模糊查找（由于默认是部分匹配，会列出很多无关文件）</td></tr></tbody></table><h2 id="_2-命令" tabindex="-1"><a class="header-anchor" href="#_2-命令"><span>2. 命令</span></a></h2><h3 id="_2-1-find" tabindex="-1"><a class="header-anchor" href="#_2-1-find"><span>2.1 find</span></a></h3><h4 id="_2-1-1-简介" tabindex="-1"><a class="header-anchor" href="#_2-1-1-简介"><span>2.1.1 简介</span></a></h4><p>find是最常见和最强大的查找命令，你可以用它找到任何你想找的文件。</p><h4 id="_2-1-2-命令语法" tabindex="-1"><a class="header-anchor" href="#_2-1-2-命令语法"><span>2.1.2 命令语法</span></a></h4><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">find</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> &lt; </span><span style="color:#98C379;--shiki-dark:#98C379;">path</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> &gt; &lt; </span><span style="color:#98C379;--shiki-dark:#98C379;">expression</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> &gt; &lt; </span><span style="color:#98C379;--shiki-dark:#98C379;">cmd</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> &gt;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">find</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> &lt;</span><span style="color:#98C379;--shiki-dark:#98C379;">指定目</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">录&gt; &lt;</span><span style="color:#98C379;--shiki-dark:#98C379;">指定条</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">件&gt; &lt;</span><span style="color:#98C379;--shiki-dark:#98C379;">指定动</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">作&gt;</span></span></code></pre></div><ul><li>path： 所要搜索的目录及其所有子目录。默认为当前目录。</li><li>expression： 所要搜索的文件的特征。</li><li>cmd： 对搜索结果进行特定的处理。</li></ul><p>如果什么参数也不加，find默认搜索当前目录及其子目录，并且不过滤任何结果（也就是返回所有文件），将它们全都显示在屏幕上。</p><h4 id="_2-1-3-实例" tabindex="-1"><a class="header-anchor" href="#_2-1-3-实例"><span>2.1.3 实例</span></a></h4><h5 id="_2-1-3-1-按扩展名查找文件" tabindex="-1"><a class="header-anchor" href="#_2-1-3-1-按扩展名查找文件"><span>2.1.3.1 按扩展名查找文件</span></a></h5><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 语法</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> find</span><span style="color:#98C379;--shiki-dark:#98C379;"> root_path</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -name</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;*.ext&#39;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 示例</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> find</span><span style="color:#98C379;--shiki-dark:#98C379;"> /home</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -name</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;*.txt&quot;</span></span></code></pre></div><h5 id="_2-1-3-2-在不区分大小写的模式下-查找与给定名称匹配的目录" tabindex="-1"><a class="header-anchor" href="#_2-1-3-2-在不区分大小写的模式下-查找与给定名称匹配的目录"><span>2.1.3.2 在不区分大小写的模式下，查找与给定名称匹配的目录</span></a></h5><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 语法</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">find</span><span style="color:#98C379;--shiki-dark:#98C379;"> root_path</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -type</span><span style="color:#98C379;--shiki-dark:#98C379;"> d</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -iname</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;*lib*&#39;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 示例</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> find</span><span style="color:#98C379;--shiki-dark:#98C379;"> /home</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -type</span><span style="color:#98C379;--shiki-dark:#98C379;"> d</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -name</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;*service*&quot;</span></span></code></pre></div><h5 id="_2-1-3-3-通过匹配多个模式查找文件" tabindex="-1"><a class="header-anchor" href="#_2-1-3-3-通过匹配多个模式查找文件"><span>2.1.3.3 通过匹配多个模式查找文件</span></a></h5><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 语法</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">find</span><span style="color:#98C379;--shiki-dark:#98C379;"> root_path</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -name</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;*pattern_1*&#39;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -or</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -name</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;*pattern_2*&#39;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 示例</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">find</span><span style="color:#98C379;--shiki-dark:#98C379;"> .</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -name</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;*.txt&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -o</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -name</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;*.pdf&quot;</span></span></code></pre></div><h5 id="_2-1-3-4-查找与路径模式匹配的文件" tabindex="-1"><a class="header-anchor" href="#_2-1-3-4-查找与路径模式匹配的文件"><span>2.1.3.4 查找与路径模式匹配的文件:</span></a></h5><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 语法</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> find</span><span style="color:#98C379;--shiki-dark:#98C379;"> root_path</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -path</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;**/lib/**/*.ext&#39;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 示例</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> find</span><span style="color:#98C379;--shiki-dark:#98C379;"> /usr/</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -path</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;*local*&quot;</span></span></code></pre></div><h5 id="_2-1-3-5查找与给定大小范围匹配的文件" tabindex="-1"><a class="header-anchor" href="#_2-1-3-5查找与给定大小范围匹配的文件"><span>2.1.3.5查找与给定大小范围匹配的文件:</span></a></h5><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">find</span><span style="color:#98C379;--shiki-dark:#98C379;"> root_path</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -size</span><span style="color:#98C379;--shiki-dark:#98C379;"> +500k</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -size</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -10M</span></span></code></pre></div><h5 id="_2-1-3-6-找到最近7天修改过的文件-并删除它们" tabindex="-1"><a class="header-anchor" href="#_2-1-3-6-找到最近7天修改过的文件-并删除它们"><span>2.1.3.6 找到最近7天修改过的文件，并删除它们:</span></a></h5><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">find</span><span style="color:#98C379;--shiki-dark:#98C379;"> root_path</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -mtime</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -7</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -delete</span></span></code></pre></div><h5 id="_2-1-3-7-根据文件类型进行搜索" tabindex="-1"><a class="header-anchor" href="#_2-1-3-7-根据文件类型进行搜索"><span>2.1.3.7 根据文件类型进行搜索</span></a></h5><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>find . -type 类型参数</span></span></code></pre></div><p>类型参数列表：</p><ul><li><strong>f</strong> 普通文件</li><li><strong>l</strong> 符号连接</li><li><strong>d</strong> 目录</li><li><strong>c</strong> 字符设备</li><li><strong>b</strong> 块设备</li><li><strong>s</strong> 套接字</li><li><strong>p</strong> Fifo</li></ul><h5 id="_2-1-3-8-根据文件时间戳进行搜索" tabindex="-1"><a class="header-anchor" href="#_2-1-3-8-根据文件时间戳进行搜索"><span>2.1.3.8 根据文件时间戳进行搜索</span></a></h5><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>find . -type f 时间戳</span></span></code></pre></div><p>UNIX/Linux文件系统每个文件都有三种时间戳：</p><ul><li><strong>访问时间</strong>（-atime/天，-amin/分钟）：用户最近一次访问时间。</li><li><strong>修改时间</strong>（-mtime/天，-mmin/分钟）：文件最后一次修改时间。</li><li><strong>变化时间</strong>（-ctime/天，-cmin/分钟）：文件数据元（例如权限等）最后一次修改时间。</li></ul><p>搜索最近七天内被访问过的所有文件</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>find . -type f -atime -7</span></span></code></pre></div><p>搜索恰好在七天前被访问过的所有文件</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>find . -type f -atime 7</span></span></code></pre></div><p>搜索超过七天内被访问过的所有文件</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>find . -type f -atime +7</span></span></code></pre></div><p>搜索访问时间超过10分钟的所有文件</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>find . -type f -amin +10</span></span></code></pre></div><p>找出比<a href="http://man.linuxde.net/file" target="_blank" rel="noopener noreferrer">file</a>.log修改时间更长的所有文件</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>find . -type f -newer file.log</span></span></code></pre></div><h3 id="_2-2-grep" tabindex="-1"><a class="header-anchor" href="#_2-2-grep"><span>2.2 grep</span></a></h3><h4 id="_2-2-1-简介" tabindex="-1"><a class="header-anchor" href="#_2-2-1-简介"><span>2.2.1 简介</span></a></h4><p>Linux系统中grep命令是一种强大的<strong>文本搜索工具</strong>，它能使用<strong>正则表达式搜索文本</strong>，并把匹 <strong>配的行</strong>打印出来。grep全称是Global Regular Expression Print，表示全局正则表达式版本，它的使用权限是所有用户。</p><p>grep的工作方式是这样的，它在一个或多个文件中搜索字符串模板。如果模板包括空格，则必须被引用，模板后的所有字符串被看作文件名。搜索的结果被送到标准输出，不影响原文件内容。</p><p>grep可用于shell脚本，因为grep通过返回一个状态值来说明搜索的状态，如果<strong>模板搜索成功，则返回0，如果搜索不成功，则返回1</strong>，如果搜索的文件不存在，则返回2。我们利用这些返回值就可进行一些自动化的文本处理工作。</p><h4 id="_2-2-2-命令语法" tabindex="-1"><a class="header-anchor" href="#_2-2-2-命令语法"><span>2.2.2 命令语法</span></a></h4><p>用于过滤/搜索的特定字符。可使用正则表达式能多种命令配合使用，使用上十分灵活。</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">grep</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [选项] pattern [文件名]</span></span></code></pre></div><h4 id="_2-2-3-命令参数" tabindex="-1"><a class="header-anchor" href="#_2-2-3-命令参数"><span>2.2.3 命令参数</span></a></h4><p>-? 同时显示匹配行上下的？行，如：grep -2 pattern filename 同时显示匹配行的上下2行。<br> -b，—byte-offset 打印匹配行前面打印该行所在的块号码。<br> -c,—count 只打印匹配的行数，不显示匹配的内容。<br> -f File，—file=File 从文件中提取模板。空文件中包含0个模板，所以什么都不匹配。<br> -h，—no-filename 当搜索多个文件时，不显示匹配文件名前缀。<br> -i，—ignore-case 忽略大小写差别。<br> -q，—quiet 取消显示，只返回退出状态。0则表示找到了匹配的行。<br> -l，—files-with-matches 打印匹配模板的文件清单。<br> -L，—files-without-match 打印不匹配模板的文件清单。<br> -n，—line-number 在匹配的行前面打印行号。<br> -s，—silent 不显示关于不存在或者无法读取文件的错误信息。<br> -v，—revert-match 反检索，只显示不匹配的行。<br> -w，—word-regexp 如果被&lt;和&gt;引用，就把表达式做为一个单词搜索。<br> -V，—version 显示软件版本信息。</p><h4 id="_2-2-4-pattern-规则表达式" tabindex="-1"><a class="header-anchor" href="#_2-2-4-pattern-规则表达式"><span>2.2.4 pattern 规则表达式</span></a></h4><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>. 匹配任意一个字符</span></span>
<span class="line"><span>* 匹配0 个或多个*前的字符</span></span>
<span class="line"><span>^ 匹配行开头</span></span>
<span class="line"><span>$ 匹配行结尾</span></span>
<span class="line"><span>[] 匹配[ ]中的任意一个字符，[]中可用 - 表示范围，</span></span>
<span class="line"><span>例如[a-z]表示字母a 至z 中的任意一个</span></span>
<span class="line"><span>\\ 转意字符</span></span></code></pre></div><h4 id="_2-2-5-实例" tabindex="-1"><a class="header-anchor" href="#_2-2-5-实例"><span>2.2.5 实例</span></a></h4><p>文件fruits.txt</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>i like apple</span></span>
<span class="line"><span>i like pineapple</span></span>
<span class="line"><span>i like Apple</span></span>
<span class="line"><span>i like banana</span></span>
<span class="line"><span>i like watermelon</span></span></code></pre></div><h5 id="_2-2-5-1-在文件中搜索模式" tabindex="-1"><a class="header-anchor" href="#_2-2-5-1-在文件中搜索模式"><span>2.2.5.1 在文件中搜索模式</span></a></h5><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 语法</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">grep</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;search_pattern&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> path/to/file</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 示例(查看文件中带有apple的行)</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">grep</span><span style="color:#98C379;--shiki-dark:#98C379;"> apple</span><span style="color:#98C379;--shiki-dark:#98C379;"> fruits.txt</span></span></code></pre></div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231051232.png" alt="image-20220412135702730" tabindex="0" loading="lazy"><figcaption>image-20220412135702730</figcaption></figure><h5 id="_2-2-5-2-or-条件" tabindex="-1"><a class="header-anchor" href="#_2-2-5-2-or-条件"><span>2.2.5.2 or 条件</span></a></h5><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 语法</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 方式一： -E (E需要大写)</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">grep</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -E</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;string1|string2&#39;</span><span style="color:#98C379;--shiki-dark:#98C379;"> filename</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 方式二： egrep</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">egrep</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;string1|string2&#39;</span><span style="color:#98C379;--shiki-dark:#98C379;"> filename</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 示例</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">grep</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -E</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;apple|banana&#39;</span><span style="color:#98C379;--shiki-dark:#98C379;">  fruits.txt</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">egrep</span><span style="color:#98C379;--shiki-dark:#98C379;"> apple</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">|</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">banana</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&#39;  fruits.txt</span></span></code></pre></div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231051277.png" alt="image-20220412135839507" tabindex="0" loading="lazy"><figcaption>image-20220412135839507</figcaption></figure><h5 id="_2-2-5-3-忽略大小写" tabindex="-1"><a class="header-anchor" href="#_2-2-5-3-忽略大小写"><span>2.2.5.3 忽略大小写</span></a></h5><p>默认情况下，grep区分大小写，这意味着您必须精确搜索大写的字符串。通过使用-i开关告诉grep忽略大小写，可以避免这种情况。</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 语法</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">grep</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -i</span><span style="color:#98C379;--shiki-dark:#98C379;"> string</span><span style="color:#98C379;--shiki-dark:#98C379;"> filename</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 示例</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">grep</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -i</span><span style="color:#98C379;--shiki-dark:#98C379;"> apple</span><span style="color:#98C379;--shiki-dark:#98C379;"> fruits.txt</span></span></code></pre></div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231051305.png" alt="image-20220412140005854" tabindex="0" loading="lazy"><figcaption>image-20220412140005854</figcaption></figure><h5 id="_2-2-5-4-搜索精确的字符串-禁用正则表达式" tabindex="-1"><a class="header-anchor" href="#_2-2-5-4-搜索精确的字符串-禁用正则表达式"><span>2.2.5.4 搜索精确的字符串 (禁用正则表达式):</span></a></h5><p>在上面的示例中，每当我们在文档中搜索字符串“ apple”时，grep也会在输出中返回“ pineapple”。为了避免这种情况，并严格搜索“ apple”，可以使用以下命令：</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 示例</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">grep</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;\\&lt;apple\\&gt;&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> fruits.txt</span></span></code></pre></div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231051339.png" alt="image-20220412140216431" tabindex="0" loading="lazy"><figcaption>image-20220412140216431</figcaption></figure><h5 id="_2-2-5-5-带行号的grep" tabindex="-1"><a class="header-anchor" href="#_2-2-5-5-带行号的grep"><span>2.2.5.5 <em><strong>带行号的Grep</strong></em></span></a></h5><p>要显示搜索字符串所在的行数，请使用-n开关。</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 语法</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">grep</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -n</span><span style="color:#98C379;--shiki-dark:#98C379;"> string</span><span style="color:#98C379;--shiki-dark:#98C379;"> filename</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 示例</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">grep</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -n</span><span style="color:#98C379;--shiki-dark:#98C379;">  apple</span><span style="color:#98C379;--shiki-dark:#98C379;">  fruits.txt</span></span></code></pre></div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231051363.png" alt="image-20220412140342553" tabindex="0" loading="lazy"><figcaption>image-20220412140342553</figcaption></figure><h5 id="_2-2-5-6-显示之前和之后的行" tabindex="-1"><a class="header-anchor" href="#_2-2-5-6-显示之前和之后的行"><span>2.2.5.6 <em><strong>显示之前和之后的行</strong></em></span></a></h5><p>如果需要更多grep输出上下文，可以使用-c开关在指定的搜索字符串前后显示一行：</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 语法 大写的C</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">grep</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -C</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1</span><span style="color:#98C379;--shiki-dark:#98C379;"> string</span><span style="color:#98C379;--shiki-dark:#98C379;"> filename</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 示例</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">grep</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -C</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1</span><span style="color:#98C379;--shiki-dark:#98C379;"> banana</span><span style="color:#98C379;--shiki-dark:#98C379;"> fruits.txt</span></span></code></pre></div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231051408.png" alt="image-20220412140621158" tabindex="0" loading="lazy"><figcaption>image-20220412140621158</figcaption></figure><h4 id="_2-2-6-与其他命令配合使用" tabindex="-1"><a class="header-anchor" href="#_2-2-6-与其他命令配合使用"><span>2.2.6 与其他命令配合使用</span></a></h4><p>Linux命令的输出通过管道传输到grep，grep就可以仅显示您需要查看的输出。</p><h5 id="_2-2-6-1-查找文件是否存在" tabindex="-1"><a class="header-anchor" href="#_2-2-6-1-查找文件是否存在"><span>2.2.6.1 查找文件是否存在</span></a></h5><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#查找当前目录 .sh结尾的文件</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">ls</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> |</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">grep</span><span style="color:#98C379;--shiki-dark:#98C379;"> .sh</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#查找当前目录 xx.sh结尾的文件，返回空则证明文件不存在</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">bin</span><span style="color:#98C379;--shiki-dark:#98C379;"> ls</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> |</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">grep</span><span style="color:#98C379;--shiki-dark:#98C379;"> xx.sh</span></span></code></pre></div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231051445.png" alt="image-20220412151129285" tabindex="0" loading="lazy"><figcaption>image-20220412151129285</figcaption></figure><h3 id="_2-3-which命令" tabindex="-1"><a class="header-anchor" href="#_2-3-which命令"><span>2.3 which命令</span></a></h3><h4 id="_2-3-1-简介" tabindex="-1"><a class="header-anchor" href="#_2-3-1-简介"><span>2.3.1 简介</span></a></h4><p><strong>查看可执行文件的位置</strong></p><p>which命令的作用是，<strong>在PATH变量指定的路径中</strong>，搜索某个系统命令的位置，并且返回第一个搜索结果。</p><blockquote><p>也就是说，使用which命令，就可以看到某个系统命令是否存在，以及执行的到底是哪一个位置的命令。</p></blockquote><h4 id="_2-3-2-命令语法" tabindex="-1"><a class="header-anchor" href="#_2-3-2-命令语法"><span>2.3.2 命令语法</span></a></h4><p>which 可执行文件名称</p><h4 id="_2-3-3-命令参数" tabindex="-1"><a class="header-anchor" href="#_2-3-3-命令参数"><span>2.3.3 命令参数</span></a></h4><ul><li>-a 如果有多个匹配结果则打印所有结果:</li><li>-n 指定文件名长度，指定的长度必须大于或等于所有文件中最长的文件名。</li><li>-p 与-n参数相同，但此处的包括了文件的路径。</li><li>-w 指定输出时栏位的宽度。</li><li>-V 显示版本信息</li></ul><h4 id="_2-3-4-实例" tabindex="-1"><a class="header-anchor" href="#_2-3-4-实例"><span>2.3.4 实例</span></a></h4><h5 id="_2-3-4-1-java-命令所在的位置" tabindex="-1"><a class="header-anchor" href="#_2-3-4-1-java-命令所在的位置"><span>2.3.4.1 java 命令所在的位置</span></a></h5><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">which</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -a</span><span style="color:#98C379;--shiki-dark:#98C379;"> java</span></span></code></pre></div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231051470.png" alt="image-20220418174207332" tabindex="0" loading="lazy"><figcaption>image-20220418174207332</figcaption></figure><h5 id="_2-3-4-2-找出-cd-这个命令" tabindex="-1"><a class="header-anchor" href="#_2-3-4-2-找出-cd-这个命令"><span><strong>2.3.4.2 找出 cd 这个命令</strong></span></a></h5><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">which</span><span style="color:#98C379;--shiki-dark:#98C379;"> cd</span></span></code></pre></div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231051502.png" alt="image-20220418174012154" tabindex="0" loading="lazy"><figcaption>image-20220418174012154</figcaption></figure><h5 id="_2-3-4-3-找出-xx这个命令" tabindex="-1"><a class="header-anchor" href="#_2-3-4-3-找出-xx这个命令"><span>2.3.4.3 找出 xx这个命令</span></a></h5><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">which</span><span style="color:#98C379;--shiki-dark:#98C379;"> xxx</span></span></code></pre></div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231051530.png" alt="image-20220418174248167" tabindex="0" loading="lazy"><figcaption>image-20220418174248167</figcaption></figure><h5 id="_2-3-4-4-找出-redis-这个命令" tabindex="-1"><a class="header-anchor" href="#_2-3-4-4-找出-redis-这个命令"><span>2.3.4.4 找出 redis 这个命令</span></a></h5><p>redis 只是软件，并不是命令</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span> which redis</span></span></code></pre></div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231051551.png" alt="image-20220419105639815" tabindex="0" loading="lazy"><figcaption>image-20220419105639815</figcaption></figure><h3 id="_2-4-whereis命令" tabindex="-1"><a class="header-anchor" href="#_2-4-whereis命令"><span>2.4 whereis命令</span></a></h3><h4 id="_2-4-1-简介" tabindex="-1"><a class="header-anchor" href="#_2-4-1-简介"><span>2.4.1 简介</span></a></h4><p><strong>whereis命令只能用于程序名的搜索</strong>，而且只搜索二进制文件（参数-b）、man说明文件（参数-m）和源代码文件（参数-s）。如果省略参数，则返回所有信息。</p><p>搜索来源是数据库索引</p><blockquote><p>在搜索一些进程位置时，</p><ul><li><p>如果是可执行文件，which的准确性会好一点</p></li><li><p>但如果只是普通程序，可能并不会加入PATH，可以使用whereis 搜索</p></li></ul></blockquote><h4 id="_2-4-2-文件支持" tabindex="-1"><a class="header-anchor" href="#_2-4-2-文件支持"><span>2.4.2 文件支持</span></a></h4><ul><li>二进制文件</li><li>源文件</li><li>帮助文档</li></ul><h4 id="_2-4-3-实例" tabindex="-1"><a class="header-anchor" href="#_2-4-3-实例"><span>2.4.3 实例</span></a></h4><h5 id="_2-4-3-1-java的二进制文件" tabindex="-1"><a class="header-anchor" href="#_2-4-3-1-java的二进制文件"><span>2.4.3.1 java的二进制文件</span></a></h5><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> whereis</span><span style="color:#98C379;--shiki-dark:#98C379;">  java</span></span></code></pre></div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231051589.png" alt="image-20220419105359735" tabindex="0" loading="lazy"><figcaption>image-20220419105359735</figcaption></figure><p>返回的结果就比which 多了很多</p><h5 id="_2-4-3-2-查找redis的二进制文件" tabindex="-1"><a class="header-anchor" href="#_2-4-3-2-查找redis的二进制文件"><span>2.4.3.2 查找redis的二进制文件</span></a></h5><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>whereis redis</span></span></code></pre></div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231051621.png" alt="image-20220419105732272" tabindex="0" loading="lazy"><figcaption>image-20220419105732272</figcaption></figure><h3 id="_2-5-locate命令" tabindex="-1"><a class="header-anchor" href="#_2-5-locate命令"><span>2.5 <strong>locate命令</strong></span></a></h3><h4 id="_2-5-1-简介" tabindex="-1"><a class="header-anchor" href="#_2-5-1-简介"><span>2.5.1 简介</span></a></h4><p>locate命令其实是“find -name”的另一种写法，但是要比后者快得多，原因在于它不搜索具体目录，<strong>而是搜索一个数据库（/var/lib/locatedb），这个数据库中含有本地所有文件信息</strong>。Linux系统自动创建这个数据库，并且<strong>每天自动更新一次</strong>，所以使用locate命令查不到最新变动过的文件。为了避免这种情况，可以在使用locate之前，先使用updatedb命令，手动更新数据库。</p><h4 id="_2-5-2-命令语法" tabindex="-1"><a class="header-anchor" href="#_2-5-2-命令语法"><span>2.5.2 命令语法</span></a></h4><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">locate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [OPTION]… [PATTERN]…</span></span></code></pre></div><h4 id="_2-5-3-命令参数-用得不多" tabindex="-1"><a class="header-anchor" href="#_2-5-3-命令参数-用得不多"><span>2.5.3 命令参数（用得不多）</span></a></h4><p>在mlocate数据库中搜索条目.</p><ul><li>-A, --all 只显示匹配所有模式的条目</li><li>-b, --basename 匹配唯一的路径名称的基本文件名</li><li>-c, --count 只显示找到条目的号码</li><li>-d, --database DBPATH 用 DBPATH 替代默认的数据库(/var/lib/mlocate/mlocate.db)</li><li>-e, --existing 只显示当前存在的文件条目</li><li>-L, --follow 当文件存在时跟随蔓延的符号链接 (默认)</li><li>-h, --help 显示本帮助</li><li>-i, --ignore-case 匹配模式时忽略大小写区别</li><li>-l, --limit, -n LIMIT 限制为 LIMIT项目的输出 (或 计数)</li><li>-m, --mmap 忽略向后兼容性</li><li>-P, --nofollow, -H 当检查文件时不跟随蔓延的符号链接</li><li>-0, --null 输出时以 NUL 分隔项目</li><li>-S, --statistics 不搜索项目,显示有关每个已用数据库的统计信息</li><li>-q, --quiet 不报告关于读取数据库的错误消息</li><li>-r, --regexp REGEXP 搜索基本正则表达式 REGEXP 来代替模式<br> --regex 模式是扩展正则表达式</li><li>-s, --stdio 忽略向后兼容性</li><li>-V, --version 显示版本信息</li><li>-w, --wholename 匹配完整路径名 (默认)</li></ul><h4 id="_2-5-4-实例" tabindex="-1"><a class="header-anchor" href="#_2-5-4-实例"><span>2.5.4 实例</span></a></h4><h5 id="_2-5-2-1-查找包含某个字符串的相关文件" tabindex="-1"><a class="header-anchor" href="#_2-5-2-1-查找包含某个字符串的相关文件"><span>2.5.2.1 查找包含某个字符串的相关文件</span></a></h5><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">locate</span><span style="color:#98C379;--shiki-dark:#98C379;"> redis</span></span></code></pre></div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231051657.png" alt="image-20220419113313972" tabindex="0" loading="lazy"><figcaption>image-20220419113313972</figcaption></figure><h5 id="_2-5-2-2-按文件名查找文件-不包含填充字符的模式被解释为-关键字" tabindex="-1"><a class="header-anchor" href="#_2-5-2-2-按文件名查找文件-不包含填充字符的模式被解释为-关键字"><span>2.5.2.2 按文件名查找文件（不包含填充字符的模式被解释为 <em>关键字</em>）:</span></a></h5><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 语法</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">locate</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> *</span><span style="color:#98C379;--shiki-dark:#98C379;">/文件名</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 示例</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> locate</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> *</span><span style="color:#98C379;--shiki-dark:#98C379;">/redis</span></span></code></pre></div><p>这样过滤出的结果更加符合我们想要的</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231051686.png" alt="image-20220419134741153" tabindex="0" loading="lazy"><figcaption>image-20220419134741153</figcaption></figure><h5 id="_2-5-2-3-重新建立文件数据索引数据库。" tabindex="-1"><a class="header-anchor" href="#_2-5-2-3-重新建立文件数据索引数据库。"><span>2.5.2.3 重新建立文件数据索引数据库。</span></a></h5><p>如果要查找最近添加的文件，则需要执行此操作:</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">sudo</span><span style="color:#98C379;--shiki-dark:#98C379;"> updatedb</span></span></code></pre></div><h5 id="_2-5-2-4-搜索目录下所有以-sh开头的文件" tabindex="-1"><a class="header-anchor" href="#_2-5-2-4-搜索目录下所有以-sh开头的文件"><span>2.5.2.4 搜索目录下所有以 sh开头的文件</span></a></h5><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">locate</span><span style="color:#98C379;--shiki-dark:#98C379;"> /bin/sh</span></span></code></pre></div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231051709.png" alt="image-20220419113440829" tabindex="0" loading="lazy"><figcaption>image-20220419113440829</figcaption></figure><h5 id="_2-4-2-5-指定显示数量" tabindex="-1"><a class="header-anchor" href="#_2-4-2-5-指定显示数量"><span>2.4.2.5 指定显示数量</span></a></h5><p>如果显示的内容过多，可以使用 -n 选项来限定显示数量。</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">locate</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -n</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 3</span><span style="color:#98C379;--shiki-dark:#98C379;"> redis</span></span></code></pre></div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231051734.png" alt="image-20220419113647925" tabindex="0" loading="lazy"><figcaption>image-20220419113647925</figcaption></figure><h4 id="_2-5-5-locate-命令安装" tabindex="-1"><a class="header-anchor" href="#_2-5-5-locate-命令安装"><span>2.5.5 locate 命令安装</span></a></h4><p>如果locate 搜索时提示命令不存在</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231051762.png" alt="image-20220419112033248" tabindex="0" loading="lazy"><figcaption>image-20220419112033248</figcaption></figure><p>则需要先安装一下</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">yum</span><span style="color:#98C379;--shiki-dark:#98C379;"> install</span><span style="color:#98C379;--shiki-dark:#98C379;"> mlocate</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">sudo</span><span style="color:#98C379;--shiki-dark:#98C379;"> updatedb</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">locate</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">  *</span><span style="color:#98C379;--shiki-dark:#98C379;">.doc</span></span></code></pre></div><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章"><span>参考文章</span></a></h2><p><a href="https://blog.csdn.net/wzzfeitian/article/details/40985549" target="_blank" rel="noopener noreferrer">Linux下各种查找命令（find, grep, which, whereis, locate）</a></p><p><a href="https://cloud.tencent.com/developer/article/1554542" target="_blank" rel="noopener noreferrer">是真的很详细了！Linux中的Grep命令使用实例</a></p><p><a href="https://www.jianshu.com/p/151a960b8de0" target="_blank" rel="noopener noreferrer">linux查找的四个命令which，whereis，locate，find</a></p><p><a href="https://cloud.tencent.com/developer/article/1725970" target="_blank" rel="noopener noreferrer">Linux locate命令的使用方法</a></p>`,159)]))}const p=s(r,[["render",t],["__file","linux-x-find-overview.html.vue"]]),d=JSON.parse('{"path":"/posts/Linux/linux-x-find-overview.html","title":"Linux下各种查找命令汇总","lang":"zh-CN","frontmatter":{"description":"Linux下各种查找命令汇总 1. 简介 linux 常用的文件查找命令有（find, grep, which, whereis, locate） 2. 命令 2.1 find 2.1.1 简介 find是最常见和最强大的查找命令，你可以用它找到任何你想找的文件。 2.1.2 命令语法 path： 所要搜索的目录及其所有子目录。默认为当前目录。 exp...","watermark":true,"head":[["meta",{"property":"og:url","content":"https://springg.us.kg/posts/Linux/linux-x-find-overview.html"}],["meta",{"property":"og:site_name","content":"mrjason’s Blog"}],["meta",{"property":"og:title","content":"Linux下各种查找命令汇总"}],["meta",{"property":"og:description","content":"Linux下各种查找命令汇总 1. 简介 linux 常用的文件查找命令有（find, grep, which, whereis, locate） 2. 命令 2.1 find 2.1.1 简介 find是最常见和最强大的查找命令，你可以用它找到任何你想找的文件。 2.1.2 命令语法 path： 所要搜索的目录及其所有子目录。默认为当前目录。 exp..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231051232.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-21T07:03:09.000Z"}],["meta",{"property":"article:author","content":"MrJason"}],["meta",{"property":"article:modified_time","content":"2024-10-21T07:03:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Linux下各种查找命令汇总\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231051232.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231051277.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231051305.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231051339.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231051363.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231051408.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231051445.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231051470.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231051502.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231051530.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231051551.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231051589.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231051621.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231051657.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231051686.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231051709.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231051734.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231051762.png\\"],\\"dateModified\\":\\"2024-10-21T07:03:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MrJason\\",\\"url\\":\\"https://springg.us.kg\\"}]}"]]},"headers":[{"level":2,"title":"1. 简介","slug":"_1-简介","link":"#_1-简介","children":[]},{"level":2,"title":"2. 命令","slug":"_2-命令","link":"#_2-命令","children":[{"level":3,"title":"2.1 find","slug":"_2-1-find","link":"#_2-1-find","children":[]},{"level":3,"title":"2.2 grep","slug":"_2-2-grep","link":"#_2-2-grep","children":[]},{"level":3,"title":"2.3 which命令","slug":"_2-3-which命令","link":"#_2-3-which命令","children":[]},{"level":3,"title":"2.4 whereis命令","slug":"_2-4-whereis命令","link":"#_2-4-whereis命令","children":[]},{"level":3,"title":"2.5 locate命令","slug":"_2-5-locate命令","link":"#_2-5-locate命令","children":[]}]},{"level":2,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}],"git":{"createdTime":1729494189000,"updatedTime":1729494189000,"contributors":[{"name":"MrJason","email":"845886914@qq.com","commits":1}]},"readingTime":{"minutes":10.35,"words":3104},"filePathRelative":"posts/Linux/linux-x-find-overview.md","localizedDate":"2024年10月21日","excerpt":"\\n<h2>1. 简介</h2>\\n<p>linux 常用的文件查找命令有（find, grep, which, whereis, locate）</p>\\n<table>\\n<thead>\\n<tr>\\n<th></th>\\n<th>find</th>\\n<th>which</th>\\n<th>whereis</th>\\n<th>locate</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>文件支持</td>\\n<td>所有文件类型</td>\\n<td>可执行文件</td>\\n<td>二进制文件、源文件、帮助文档</td>\\n<td>所有文件类型</td>\\n</tr>\\n<tr>\\n<td>查找路径</td>\\n<td>可指定，默认遍历当前路径及其子路径</td>\\n<td>环境变量PATH</td>\\n<td>数据库索引</td>\\n<td>数据库索引</td>\\n</tr>\\n<tr>\\n<td>查找原理</td>\\n<td>遍历磁盘</td>\\n<td>遍历PATH所指定的目录，寻找完全匹配filename的可执行文件</td>\\n<td>数据库索引，对去除.之后的所有字符后的filename进行完全匹配</td>\\n<td>数据库索引，绝对路径，部分匹配</td>\\n</tr>\\n<tr>\\n<td>查找效率/速度</td>\\n<td>低</td>\\n<td>高</td>\\n<td>高</td>\\n<td>高</td>\\n</tr>\\n<tr>\\n<td>适合场景</td>\\n<td>能使用which，whereis，locate时，尽量不使用find</td>\\n<td>可执行文件的查询</td>\\n<td>二进制文件，源文件、帮助文档的查找</td>\\n<td>模糊查找（由于默认是部分匹配，会列出很多无关文件）</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{p as comp,d as data};
