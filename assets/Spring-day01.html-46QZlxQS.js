import{_ as a,c as i,a as l,o as n}from"./app-4x2aIoqi.js";const p={};function r(e,s){return n(),i("div",null,s[0]||(s[0]=[l(`<h1 id="spring-day01-ioc" tabindex="-1"><a class="header-anchor" href="#spring-day01-ioc"><span>Spring-day01 IoC</span></a></h1><h2 id="_1-spring简介" tabindex="-1"><a class="header-anchor" href="#_1-spring简介"><span>1 Spring简介</span></a></h2><h3 id="_1-1-什么是框架" tabindex="-1"><a class="header-anchor" href="#_1-1-什么是框架"><span>1.1 什么是框架</span></a></h3><ul><li><p>源自于建筑学,隶属土木工程,后发展到软件工程领域</p></li><li><p>软件工程框架：经过验证的,具有一定功能的,半成品软件</p><ul><li><p>经过验证</p></li><li><p>具有一定功能</p></li><li><p>半成品</p></li></ul></li></ul><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111601015.png" alt="1590631254933" tabindex="0" loading="lazy"><figcaption>1590631254933</figcaption></figure><h3 id="_1-2-框架的作用" tabindex="-1"><a class="header-anchor" href="#_1-2-框架的作用"><span>1.2 框架的作用</span></a></h3><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111601073.png" alt="1590631300743" tabindex="0" loading="lazy"><figcaption>1590631300743</figcaption></figure><h3 id="_1-3-spring是什么" tabindex="-1"><a class="header-anchor" href="#_1-3-spring是什么"><span>1.3 Spring是什么</span></a></h3><p>Spring是分层的JavaSE/EE应用full-stack轻量级开源框架</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111601119.png" alt="1590631495077" tabindex="0" loading="lazy"><figcaption>1590631495077</figcaption></figure><h3 id="_1-4-spring的体系结构" tabindex="-1"><a class="header-anchor" href="#_1-4-spring的体系结构"><span>1.4 Spring的体系结构</span></a></h3><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111601153.png" alt="1590631552693" tabindex="0" loading="lazy"><figcaption>1590631552693</figcaption></figure><h3 id="_1-5-spring的发展历史" tabindex="-1"><a class="header-anchor" href="#_1-5-spring的发展历史"><span>1.5 Spring的发展历史</span></a></h3><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111601198.png" alt="1590631606747" tabindex="0" loading="lazy"><figcaption>1590631606747</figcaption></figure><h3 id="_1-6-spring优势" tabindex="-1"><a class="header-anchor" href="#_1-6-spring优势"><span>1.6 Spring优势</span></a></h3><table><thead><tr><th>Spring的优势</th><th></th></tr></thead><tbody><tr><td>方便解耦,简化开发</td><td>第一天</td></tr><tr><td>方便集成各种优秀框架</td><td>第一天</td></tr><tr><td>方便程序的测试</td><td>第二天</td></tr><tr><td>AOP编程的支持</td><td>第三天</td></tr><tr><td>声明式事务的支持</td><td>第四天</td></tr><tr><td>降低JavaEE API的使用难度</td><td>第四天</td></tr><tr><td>Java源码是经典学习范例</td><td>长期学习</td></tr></tbody></table><h2 id="_2-ioc简介" tabindex="-1"><a class="header-anchor" href="#_2-ioc简介"><span>2 IoC简介</span></a></h2><h3 id="_2-1-优质程序代码的制作原则" tabindex="-1"><a class="header-anchor" href="#_2-1-优质程序代码的制作原则"><span>2.1 优质程序代码的制作原则</span></a></h3><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111601249.png" alt="1590636507198" tabindex="0" loading="lazy"><figcaption>1590636507198</figcaption></figure><h3 id="_2-2-耦合与内聚" tabindex="-1"><a class="header-anchor" href="#_2-2-耦合与内聚"><span>2.2 耦合与内聚</span></a></h3><ul><li><p>耦合（Coupling）：代码书写过程中所使用技术的结合紧密度,用于衡量软件中各个模块之间的互联程度</p></li><li><p>内聚（Cohesion）：代码书写过程中单个模块内部各组成部分间的联系,用于衡量软件中各个功能模块内部的功能联系</p></li></ul><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111601289.png" alt="1590636557953" tabindex="0" loading="lazy"><figcaption>1590636557953</figcaption></figure><ul><li>程序书写的目标：高内聚,低耦合 <ul><li>就是同一个模块内的各个元素之间要高度紧密,但是各个模块之间的相互依存度却不要那么紧密</li></ul></li></ul><h3 id="_2-3-工厂模式发展史" tabindex="-1"><a class="header-anchor" href="#_2-3-工厂模式发展史"><span>2.3 工厂模式发展史</span></a></h3><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111601320.png" alt="1590636616069" tabindex="0" loading="lazy"><figcaption>1590636616069</figcaption></figure><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111601358.png" alt="1590636644096" tabindex="0" loading="lazy"><figcaption>1590636644096</figcaption></figure><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111601394.png" alt="1590636661026" tabindex="0" loading="lazy"><figcaption>1590636661026</figcaption></figure><h3 id="_2-4-spring发展历程" tabindex="-1"><a class="header-anchor" href="#_2-4-spring发展历程"><span>2.4 Spring发展历程</span></a></h3><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111601430.png" alt="1590636704098" tabindex="0" loading="lazy"><figcaption>1590636704098</figcaption></figure><h3 id="_2-5-ioc" tabindex="-1"><a class="header-anchor" href="#_2-5-ioc"><span>2.5 IoC</span></a></h3><ul><li><p>IoC（Inversion Of Control）控制反转,Spring反向控制应用程序所需要使用的外部资源</p></li><li><p>Spring控制的资源全部放置在Spring容器中,该容器称为IoC容器</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111601462.png" alt="1590636750876" tabindex="0" loading="lazy"><figcaption>1590636750876</figcaption></figure></li></ul><h2 id="_3-入门案例" tabindex="-1"><a class="header-anchor" href="#_3-入门案例"><span>3 入门案例</span></a></h2><h3 id="_3-1-案例环境说明" tabindex="-1"><a class="header-anchor" href="#_3-1-案例环境说明"><span>3.1 案例环境说明</span></a></h3><ul><li><p>模拟三层架构中表现层调用业务层功能</p><ul><li><p>表现层：UserApp模拟UserServlet（使用main方法模拟）</p></li><li><p>业务层：UserService</p></li></ul></li></ul><h3 id="_3-2-ioc入门案例制作步骤" tabindex="-1"><a class="header-anchor" href="#_3-2-ioc入门案例制作步骤"><span>3.2 IoC入门案例制作步骤</span></a></h3><p>1.导入spring坐标（5.1.9.release）</p><p>2.编写业务层与表现层（模拟）接口与实现类</p><p>3.建立spring配置文件</p><p>4.配置所需资源（Service）为spring控制的资源</p><p>5.表现层（App）通过spring获取资源（Service实例）</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111601501.png" alt="1590637353510" tabindex="0" loading="lazy"><figcaption>1590637353510</figcaption></figure><h4 id="_3-2-1-ioc入门案例制作步骤-1" tabindex="-1"><a class="header-anchor" href="#_3-2-1-ioc入门案例制作步骤-1"><span>3.2.1 IoC入门案例制作步骤-1</span></a></h4><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;org.springframework&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;spring-context&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;5.1.9.RELEASE&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><h4 id="_3-2-2-ioc入门案例制作步骤-2" tabindex="-1"><a class="header-anchor" href="#_3-2-2-ioc入门案例制作步骤-2"><span>3.2.2 IoC入门案例制作步骤-2</span></a></h4><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> interface</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> UserService</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	//业务方法  </span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">	void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> save</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><h4 id="_3-2-3-ioc入门案例制作步骤-3" tabindex="-1"><a class="header-anchor" href="#_3-2-3-ioc入门案例制作步骤-3"><span>3.2.3 IoC入门案例制作步骤-3</span></a></h4><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> UserServiceImpl</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> implements</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> UserService</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> save</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;user service running...&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><h4 id="_3-2-4-ioc入门案例制作步骤-4" tabindex="-1"><a class="header-anchor" href="#_3-2-4-ioc入门案例制作步骤-4"><span>3.2.4 IoC入门案例制作步骤-4</span></a></h4><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;?</span><span style="color:#E06C75;--shiki-dark:#E06C75;">xml</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;1.0&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> encoding</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;UTF-8&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">?&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">beans</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> xmlns</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;http://www.springframework.org/schema/beans&quot;</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">       xmlns:xsi</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">       xsi:schemaLocation</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;http://www.springframework.org/schema/beans</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        https://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    &lt;!-- 1.创建spring控制的资源--&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bean</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;userService&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;com.mrjason.service.impl.UserServiceImpl&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">beans</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><h4 id="_3-2-5-ioc入门案例制作步骤-5" tabindex="-1"><a class="header-anchor" href="#_3-2-5-ioc入门案例制作步骤-5"><span>3.2.5 IoC入门案例制作步骤-5</span></a></h4><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> UserApp</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[] </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        //2.加载配置文件</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        ApplicationContext</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> ctx</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> ClassPathXmlApplicationContext</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;applicationContext.xml&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        //3.获取资源</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        UserService</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> userService</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (UserService) </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">ctx</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getBean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;userService&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        userService</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">save</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><h2 id="_4-ioc配置-xml格式" tabindex="-1"><a class="header-anchor" href="#_4-ioc配置-xml格式"><span>4 IoC配置（XML格式）</span></a></h2><h3 id="_4-1-bean" tabindex="-1"><a class="header-anchor" href="#_4-1-bean"><span>4.1 bean</span></a></h3><ul><li><p>名称：bean</p></li><li><p>类型：<strong>标签</strong></p></li><li><p>归属：beans标签</p></li><li><p>作用：定义spring中的资源,受此标签定义的资源将受到spring控制</p></li><li><p>格式：</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">beans</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">	&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">beans</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div></li><li><p>基本属性：</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bean</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;beanId&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;beanName1,beanName2&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;ClassName&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><p>​ id：bean的名称,通过id值获取bean</p><p>​ class：bean的类型</p><p>​ name：bean的名称,可以通过name值获取bean,用于多人配合时给bean起别名</p></li></ul><h3 id="_4-2-bean属性scope" tabindex="-1"><a class="header-anchor" href="#_4-2-bean属性scope"><span>4.2 bean属性scope</span></a></h3><ul><li><p>名称：scope</p></li><li><p>类型：<strong>属性</strong></p></li><li><p>归属：bean标签</p></li><li><p>作用：定义bean的作用范围</p></li><li><p>格式：</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bean</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> scope</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;singleton&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div></li><li><p>取值：</p><ul><li>singleton：设定创建出的对象保存在spring容器中,是一个单例的对象</li><li>prototype：设定创建出的对象保存在spring容器中,是一个非单例的对象</li><li>request、session、application、 websocket ：设定创建出的对象放置在web容器对应的位置</li></ul></li></ul><h3 id="_4-3-bean生命周期" tabindex="-1"><a class="header-anchor" href="#_4-3-bean生命周期"><span>4.3 bean生命周期</span></a></h3><ul><li><p>名称：init-method,destroy-method</p></li><li><p>类型：<strong>属性</strong></p></li><li><p>归属：bean标签</p></li><li><p>作用：定义bean对象在初始化或销毁时完成的工作</p></li><li><p>格式：</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bean</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> init-method</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;init&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> destroy-method</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;destroy&gt;&lt;/bean&gt;</span></span></code></pre></div></li><li><p>取值：bean对应的类中对应的具体方法名</p></li><li><p>注意事项：</p><ul><li><p>当scope=“singleton”时,spring容器中有且仅有一个对象,init方法在创建容器时仅执行一次</p></li><li><p>当scope=“prototype”时,spring容器要创建同一类型的多个对象,init方法在每个对象创建时均执行一次</p></li><li><p>当scope=“singleton”时,关闭容器会导致bean实例的销毁,调用destroy方法一次</p></li><li><p>当scope=“prototype”时,对象的销毁由垃圾回收机制gc()控制,destroy方法将不会被执行</p></li></ul></li></ul><h3 id="_4-4-bean对象创建方式-了解" tabindex="-1"><a class="header-anchor" href="#_4-4-bean对象创建方式-了解"><span>4.4 bean对象创建方式（了解）</span></a></h3><p>(1) factory-bean</p><ul><li><p>名称：factory-bean</p></li><li><p>类型：<strong>属性</strong></p></li><li><p>归属：bean标签</p></li><li><p>作用：定义bean对象创建方式,使用静态工厂的形式创建bean,兼容早期遗留系统的升级工作</p></li><li><p>格式：</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bean</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;FactoryClassName&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> factory-method</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;factoryMethodName&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div></li><li><p>取值：工厂bean中用于获取对象的静态方法名</p></li><li><p>注意事项：</p><ul><li>class属性必须配置成静态工厂的类名</li></ul></li></ul><p>(2) factory-bean,factory-method</p><ul><li><p>名称：factory-bean,factory-method</p></li><li><p>类型：<strong>属性</strong></p></li><li><p>归属：bean标签</p></li><li><p>作用：定义bean对象创建方式,使用实例工厂的形式创建bean,兼容早期遗留系统的升级工作</p></li><li><p>格式：</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bean</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> factory-bean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;factoryBeanId&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> factory-method</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;factoryMethodName&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div></li><li><p>取值：工厂bean中用于获取对象的实例方法名</p></li><li><p>注意事项：</p><ul><li><p>使用实例工厂创建bean首先需要将实例工厂配置bean,交由spring进行管理</p></li><li><p>factory-bean是实例工厂的beanId</p></li></ul></li></ul><h3 id="_4-5-di" tabindex="-1"><a class="header-anchor" href="#_4-5-di"><span>4.5 DI</span></a></h3><ul><li><p>IoC（Inversion Of Control）控制翻转,Spring反向控制应用程序所需要使用的外部资源</p></li><li><p>DI（Dependency Injection）依赖注入,应用程序运行依赖的资源由Spring为其提供,资源进入应用程序的方式称为注入</p></li></ul><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111601533.png" alt="1590659778689" tabindex="0" loading="lazy"><figcaption>1590659778689</figcaption></figure><p>IoC与DI的关系</p><ul><li><p>IoC与DI是同一件事站在不同角度看待问题</p></li><li><p>半杯水</p></li><li></li><li></li></ul><p><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111601572.png" alt="1590659854696" loading="lazy">set注入（主流）</p><h3 id="_4-6-set注入-主流" tabindex="-1"><a class="header-anchor" href="#_4-6-set注入-主流"><span>4.6 set注入（主流）</span></a></h3><ul><li><p>名称：property</p></li><li><p>类型：<strong>标签</strong></p></li><li><p>归属：bean标签</p></li><li><p>作用：使用set方法的形式为bean提供资源</p></li><li><p>格式：</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bean</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">	&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bean</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span></span></code></pre></div></li><li><p>基本属性：</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;propertyName&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;propertyValue&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> ref</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;beanId&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/&gt;</span></span></code></pre></div></li></ul><p>​ name：对应bean中的属性名,要求该属性必须提供可访问的set方法（严格规范为此名称是set方法对应名称）</p><p>​ value：设定非引用类型属性对应的值,不能与ref同时使用</p><p>​ ref：设定引用类型属性对应bean的id ,不能与value同时使用</p><ul><li>注意：一个bean可以有多个property标签</li></ul><h3 id="_4-7-构造器注入-了解" tabindex="-1"><a class="header-anchor" href="#_4-7-构造器注入-了解"><span>4.7 构造器注入（了解）</span></a></h3><ul><li><p>名称：constructor-arg</p></li><li><p>类型：<strong>标签</strong></p></li><li><p>归属：bean标签</p></li><li><p>作用：使用构造方法的形式为bean提供资源,兼容早期遗留系统的升级工作</p></li><li><p>格式：</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">	&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">constructor-arg</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div></li><li><p>基本属性：</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">constructor-arg</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;argsName&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;argsValue /&gt;</span></span></code></pre></div></li></ul><p>​ name：对应bean中的构造方法所携带的参数名</p><p>​ value：设定非引用类型构造方法参数对应的值,不能与ref同时使用</p><p>其他属性：</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">constructor-arg</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> index</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;arg-index&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> type</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;arg-type&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> ref</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;beanId&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/&gt;</span></span></code></pre></div><p>​ ref：设定引用类型构造方法参数对应bean的id ,不能与value同时使用</p><p>​ type ：设定构造方法参数的类型,用于按类型匹配参数或进行类型校验</p><p>​ index ：设定构造方法参数的位置,用于按位置匹配参数,参数index值从0开始计数</p><ul><li>注意：一个bean可以有多个constructor-arg标签</li></ul><h3 id="_4-8-集合类型数据注入" tabindex="-1"><a class="header-anchor" href="#_4-8-集合类型数据注入"><span>4.8 集合类型数据注入</span></a></h3><ul><li><p>名称：array,list,set,map,props</p></li><li><p>类型：<strong>标签</strong></p></li><li><p>归属：property标签 或 constructor-arg标签</p></li><li><p>作用：注入集合数据类型属性</p></li><li><p>格式：</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">	&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">list</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">list</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div></li></ul><p>(1) 集合类型数据注入——list</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;al&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">list</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;itheima&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;66666&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">list</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><p>(2) 集合类型数据注入——props</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;properties&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">props</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">prop</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;name&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;itheima666&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">prop</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">prop</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;value&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;666666&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">prop</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">props</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><p>(3) 集合类型数据注入——array （了解）</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;arr&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">array</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;123456&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;66666&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">array</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><p>(4) 集合类型数据注入——set（了解）</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;hs&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">     &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">         &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;itheima&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">         &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;66666&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">     &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><p>(5) 集合类型数据注入——map（了解）</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;hm&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">entry</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;name&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;itheima66666&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">entry</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;value&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;6666666666&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><h3 id="_4-9-使用p命名空间简化配置-了解" tabindex="-1"><a class="header-anchor" href="#_4-9-使用p命名空间简化配置-了解"><span>4.9 使用p命名空间简化配置（了解）</span></a></h3><ul><li><p>名称：p:propertyName,p:propertyName-ref</p></li><li><p>类型：<strong>属性</strong></p></li><li><p>归属：bean标签</p></li><li><p>作用：为bean注入属性值</p></li><li><p>格式：</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bean</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> p:propertyName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;propertyValue&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> p:propertyName-ref</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;beanId&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/&gt;</span></span></code></pre></div></li><li><p>注意：使用p命令空间需要先开启spring对p命令空间的的支持,在beans标签中添加对应空间支持</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">beans</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> xmlns</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;http://www.springframework.org/schema/beans&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;">    xmlns:xsi</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;">    xmlns:p</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;http://www.springframework.org/schema/p&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;">       xsi:schemaLocation</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;http://www.springframework.org/schema/beans     https://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><p>后续课程中还将开启其他的命名空间,方式同上</p></li><li><p>案例：</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bean</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">       id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;userService&quot;</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">       class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;com.mrjason.service.impl.UserServiceImpl&quot;</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">       p:userDao-ref</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;userDao&quot;</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">       p:bookDao-ref</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;bookDao&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">       /&gt;</span></span></code></pre></div></li></ul><h3 id="_4-10-spel-了解" tabindex="-1"><a class="header-anchor" href="#_4-10-spel-了解"><span>4.10 SpEL （了解）</span></a></h3><ul><li><p>Spring提供了对EL表达式的支持,统一属性注入格式</p></li><li><p>类型：<strong>属性值</strong></p></li><li><p>归属：value属性值</p></li><li><p>作用：为bean注入属性值</p></li><li><p>格式：</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;EL&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div></li><li><p>注意：所有属性值不区分是否引用类型,统一使用value赋值</p></li><li><p>所有格式统一使用 value=“********”</p><ul><li><p>常量 <code>#{10}</code> <code>#{3.14}</code> <code>#{2e5}</code> <code>#{&#39;itcast&#39;}</code></p></li><li><p>引用bean <code>#{beanId}</code></p></li><li><p>引用bean属性 <code>#{beanId.propertyName}</code></p></li><li><p>引用bean方法 beanId.methodName().method2()</p></li><li><p>引用静态方法 T(java.lang.Math).PI</p></li><li><p>运算符支持 <code>#{3 lt 4 == 4 ge 3}</code></p></li><li><p>正则表达式支持 <code>#{user.name matches&#39;[a-z]{6,}&#39;}</code></p></li><li><p>集合支持 <code>#{likes[3]}</code></p></li></ul></li><li><p>案例：</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bean</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;userService&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;com.mrjason.service.impl.UserServiceImpl&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">     &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;userDao&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;#{userDao}&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">     &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;bookDao&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;#{bookDao}&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">     &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;num&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;#{666666666}&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">     &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;version&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;#{&#39;itcast&#39;}&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div></li></ul><h3 id="_4-11-properties文件" tabindex="-1"><a class="header-anchor" href="#_4-11-properties文件"><span>4.11 properties文件</span></a></h3><ul><li><p>Spring提供了读取外部properties文件的机制,使用读取到的数据为bean的属性赋值</p></li><li><p>操作步骤</p><p>1.准备外部properties文件</p><p>2.开启context命名空间支持</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">xmlns:context=&quot;http://www.springframework.org/schema/context&quot;</span></span></code></pre></div></li></ul><p>​ 3.加载指定的properties文件</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">context:property-placeholder</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> location</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;classpath:filename.properties&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><p>​ 4.使用加载的数据</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;propertyName&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;\${propertiesName}&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/&gt;</span></span></code></pre></div><ul><li><p>注意：如果需要加载所有的properties文件,可以使用<code>*.properties</code>表示加载所有的properties文件</p></li><li><p>注意：读取数据使用**\${propertiesName}<strong>格式进行,其中</strong>propertiesName**指properties文件中的属性名</p></li></ul><h3 id="_4-12-团队开发" tabindex="-1"><a class="header-anchor" href="#_4-12-团队开发"><span>4.12 团队开发</span></a></h3><ul><li><p>名称：import</p></li><li><p>类型：<strong>标签</strong></p></li><li><p>归属：beans标签</p></li><li><p>作用：在当前配置文件中导入其他配置文件中的项</p></li><li><p>格式：</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">beans</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">import</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">beans</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div></li><li><p>基本属性：</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">import</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> resource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=“config.xml</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;/&gt;</span></span></code></pre></div></li></ul><p>​ resource：加载的配置文件名</p><ul><li><p>Spring容器加载多个配置文件</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> ClassPathXmlApplicationContext</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;config1.xml&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;config2.xml&quot;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span></code></pre></div></li><li><p>Spring容器中的bean定义冲突问题</p><ul><li><p>同id的bean,后定义的覆盖先定义的</p></li><li><p>导入配置文件可以理解为将导入的配置文件复制粘贴到对应位置</p></li><li><p>导入配置文件的顺序与位置不同可能会导致最终程序运行结果不同</p></li></ul></li></ul><h3 id="_4-13-applicationcontext" tabindex="-1"><a class="header-anchor" href="#_4-13-applicationcontext"><span>4.13 ApplicationContext</span></a></h3><p>1.ApplicationContext是一个接口,提供了访问spring容器的API</p><p>2.ClassPathXmlApplicationContext是一个类,实现了上述功能</p><p>3.ApplicationContext的顶层接口是BeanFactory</p><p>4.BeanFactory定义了bean相关的最基本操作</p><p>5.ApplicationContext在BeanFactory基础上追加了若干新功能</p><p><strong>对比BeanFactory</strong></p><p>1.BeanFactory创建的bean采用延迟加载形式,使用才创建</p><p>2.ApplicationContext创建的bean默认采用立即加载形式</p><p><strong>FileSystemXmlApplicationContext</strong></p><p>可以加载文件系统中任意位置的配置文件,而ClassPathXmlApplicationContext只能加载类路径下的配置文件</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111601612.png" alt="1591021082290" tabindex="0" loading="lazy"><figcaption>1591021082290</figcaption></figure><p><strong>BeanFactory</strong></p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Resource</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> res </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> ClassPathResource</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;applicationContext.xml&quot;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">BeanFactory</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> bf </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> XmlBeanFactory</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(res)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">UserService</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> userService </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (UserService)</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">bf</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getBean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;userService&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span></code></pre></div><h3 id="_4-14-第三方资源配置" tabindex="-1"><a class="header-anchor" href="#_4-14-第三方资源配置"><span>4.14 第三方资源配置</span></a></h3><ul><li><p>阿里数据源方案Druid</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bean</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;dataSource&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;driverClassName&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;com.mysql.jdbc.Driver&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;url&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;jdbc:mysql://localhost:3306/spring_ioc&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;username&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;root&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;password&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;root&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div></li></ul><h2 id="_5-综合案例" tabindex="-1"><a class="header-anchor" href="#_5-综合案例"><span>5 综合案例</span></a></h2><h3 id="_5-1-案例介绍" tabindex="-1"><a class="header-anchor" href="#_5-1-案例介绍"><span><strong>5.1 案例介绍</strong></span></a></h3><ul><li><p>使用spring整合mybatis技术,完成账户模块（Account）的基础增删改查功能</p></li><li><p>账户模块对应字段</p><ul><li><p>编号：id</p></li><li><p>账户名：name</p></li><li><p>余额：money</p></li></ul></li></ul><h3 id="_5-2-案例分析" tabindex="-1"><a class="header-anchor" href="#_5-2-案例分析"><span><strong>5.2 案例分析</strong></span></a></h3><p>非spring环境</p><p>1.实体类与表</p><p>2.业务层接口与实现</p><p>3.数据层接口</p><p>4.Mybatis核心配置</p><p>5.Mybatis映射配置</p><p>6.客户端程序测试功能</p><p>spring环境</p><p>1.实体类与表</p><p>2.业务层接口与实现（提供数据层接口的注入操作）</p><p>3.数据层接口</p><p>4.Mybatis核心配置（交给spring控制,该文件省略）</p><p>5.Mybatis映射配置</p><p>6.客户端程序测试功能（使用spring方式获取bean）</p><p>7.Spring核心配置文件</p><p>8.Druid数据源的应用（可选）</p><p>9.Spring整合MyBatis</p><h3 id="_5-3-案例制作步骤——基础准备工作" tabindex="-1"><a class="header-anchor" href="#_5-3-案例制作步骤——基础准备工作"><span>5.3 案例制作步骤——基础准备工作</span></a></h3><ul><li>环境准备</li></ul><p>1.导入Spring坐标,MyBatis坐标,MySQL坐标,Druid坐标</p><ul><li>业务类与接口准备</li></ul><p>2.创建数据库表,并制作相应的实体类Account</p><p>3.定义业务层接口与数据层接口</p><p>4.在业务层调用数据层接口,并实现业务方法的调用</p><ul><li>基础配置文件</li></ul><p>5.jdbc.properties</p><p>6.MyBatis映射配置文件</p><h3 id="_5-4-案例制作步骤——整合准备工作" tabindex="-1"><a class="header-anchor" href="#_5-4-案例制作步骤——整合准备工作"><span>5.4 案例制作步骤——整合准备工作</span></a></h3><ul><li>整合前基础准备工作</li></ul><p>1.spring配置文件,加上context命名空间,用于加载properties文件</p><p>2.开启加载properties文件</p><p>3.配置数据源druid（备用）</p><p>4.定义service层bean,注入dao层bean</p><p>5.dao的bean无需定义,使用代理自动生成</p><h3 id="_5-5-案例制作步骤——整合工作" tabindex="-1"><a class="header-anchor" href="#_5-5-案例制作步骤——整合工作"><span>5.5 案例制作步骤——整合工作</span></a></h3><ul><li>整合工作</li></ul><p>1.导入Spring整合MyBatis坐标</p><p>2.将mybatis配置成spring管理的bean（SqlSessionFactoryBean）</p><p>​ -将原始配置文件中的所有项,转入到当前配置中</p><p>​ 数据源转换</p><p>​ 映射转换</p><p>3.通过spring加载mybatis的映射配置文件到spring环境中</p><p>4.设置类型别名</p><ul><li>测试结果</li></ul><p>5.使用spring环境加载业务层bean,执行操作</p><h3 id="小节" tabindex="-1"><a class="header-anchor" href="#小节"><span><strong>小节</strong></span></a></h3><ul><li><p>需要专用的spring整合mybatis的jar包</p></li><li><p>Mybatis核心配置文件消失</p><ul><li><p>环境environment转换成数据源对象</p></li><li><p>映射Mapper扫描工作交由spring处理</p></li><li><p>类型别名交由spring处理</p></li></ul></li><li><p>业务发起使用spring上下文对象获取对应的bean</p></li></ul>`,179)]))}const t=a(p,[["render",r],["__file","Spring-day01.html.vue"]]),B=JSON.parse('{"path":"/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/Spring-day01.html","title":"Spring-day01   IoC","lang":"zh-CN","frontmatter":{"created":"2022-09-27 17:45","updated":"2024-10-11 16:02","description":"Spring-day01 IoC 1 Spring简介 1.1 什么是框架 源自于建筑学,隶属土木工程,后发展到软件工程领域 软件工程框架：经过验证的,具有一定功能的,半成品软件 经过验证 具有一定功能 半成品 15906312549331590631254933 1.2 框架的作用 15906313007431590631300743 1.3 Spr...","watermark":true,"head":[["meta",{"property":"og:url","content":"https://springg.us.kg/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/Spring-day01.html"}],["meta",{"property":"og:site_name","content":"mrjason’s Blog"}],["meta",{"property":"og:title","content":"Spring-day01   IoC"}],["meta",{"property":"og:description","content":"Spring-day01 IoC 1 Spring简介 1.1 什么是框架 源自于建筑学,隶属土木工程,后发展到软件工程领域 软件工程框架：经过验证的,具有一定功能的,半成品软件 经过验证 具有一定功能 半成品 15906312549331590631254933 1.2 框架的作用 15906313007431590631300743 1.3 Spr..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111601015.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-29T09:32:06.000Z"}],["meta",{"property":"article:author","content":"MrJason"}],["meta",{"property":"article:modified_time","content":"2024-10-29T09:32:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring-day01   IoC\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111601015.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111601073.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111601119.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111601153.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111601198.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111601249.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111601289.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111601320.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111601358.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111601394.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111601430.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111601462.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111601501.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111601533.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111601572.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111601612.png\\"],\\"dateModified\\":\\"2024-10-29T09:32:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MrJason\\",\\"url\\":\\"https://springg.us.kg\\"}]}"]]},"headers":[{"level":2,"title":"1 Spring简介","slug":"_1-spring简介","link":"#_1-spring简介","children":[{"level":3,"title":"1.1 什么是框架","slug":"_1-1-什么是框架","link":"#_1-1-什么是框架","children":[]},{"level":3,"title":"1.2 框架的作用","slug":"_1-2-框架的作用","link":"#_1-2-框架的作用","children":[]},{"level":3,"title":"1.3 Spring是什么","slug":"_1-3-spring是什么","link":"#_1-3-spring是什么","children":[]},{"level":3,"title":"1.4 Spring的体系结构","slug":"_1-4-spring的体系结构","link":"#_1-4-spring的体系结构","children":[]},{"level":3,"title":"1.5 Spring的发展历史","slug":"_1-5-spring的发展历史","link":"#_1-5-spring的发展历史","children":[]},{"level":3,"title":"1.6 Spring优势","slug":"_1-6-spring优势","link":"#_1-6-spring优势","children":[]}]},{"level":2,"title":"2 IoC简介","slug":"_2-ioc简介","link":"#_2-ioc简介","children":[{"level":3,"title":"2.1 优质程序代码的制作原则","slug":"_2-1-优质程序代码的制作原则","link":"#_2-1-优质程序代码的制作原则","children":[]},{"level":3,"title":"2.2 耦合与内聚","slug":"_2-2-耦合与内聚","link":"#_2-2-耦合与内聚","children":[]},{"level":3,"title":"2.3 工厂模式发展史","slug":"_2-3-工厂模式发展史","link":"#_2-3-工厂模式发展史","children":[]},{"level":3,"title":"2.4 Spring发展历程","slug":"_2-4-spring发展历程","link":"#_2-4-spring发展历程","children":[]},{"level":3,"title":"2.5 IoC","slug":"_2-5-ioc","link":"#_2-5-ioc","children":[]}]},{"level":2,"title":"3 入门案例","slug":"_3-入门案例","link":"#_3-入门案例","children":[{"level":3,"title":"3.1 案例环境说明","slug":"_3-1-案例环境说明","link":"#_3-1-案例环境说明","children":[]},{"level":3,"title":"3.2 IoC入门案例制作步骤","slug":"_3-2-ioc入门案例制作步骤","link":"#_3-2-ioc入门案例制作步骤","children":[]}]},{"level":2,"title":"4 IoC配置（XML格式）","slug":"_4-ioc配置-xml格式","link":"#_4-ioc配置-xml格式","children":[{"level":3,"title":"4.1 bean","slug":"_4-1-bean","link":"#_4-1-bean","children":[]},{"level":3,"title":"4.2 bean属性scope","slug":"_4-2-bean属性scope","link":"#_4-2-bean属性scope","children":[]},{"level":3,"title":"4.3 bean生命周期","slug":"_4-3-bean生命周期","link":"#_4-3-bean生命周期","children":[]},{"level":3,"title":"4.4 bean对象创建方式（了解）","slug":"_4-4-bean对象创建方式-了解","link":"#_4-4-bean对象创建方式-了解","children":[]},{"level":3,"title":"4.5 DI","slug":"_4-5-di","link":"#_4-5-di","children":[]},{"level":3,"title":"4.6 set注入（主流）","slug":"_4-6-set注入-主流","link":"#_4-6-set注入-主流","children":[]},{"level":3,"title":"4.7 构造器注入（了解）","slug":"_4-7-构造器注入-了解","link":"#_4-7-构造器注入-了解","children":[]},{"level":3,"title":"4.8 集合类型数据注入","slug":"_4-8-集合类型数据注入","link":"#_4-8-集合类型数据注入","children":[]},{"level":3,"title":"4.9 使用p命名空间简化配置（了解）","slug":"_4-9-使用p命名空间简化配置-了解","link":"#_4-9-使用p命名空间简化配置-了解","children":[]},{"level":3,"title":"4.10 SpEL （了解）","slug":"_4-10-spel-了解","link":"#_4-10-spel-了解","children":[]},{"level":3,"title":"4.11 properties文件","slug":"_4-11-properties文件","link":"#_4-11-properties文件","children":[]},{"level":3,"title":"4.12 团队开发","slug":"_4-12-团队开发","link":"#_4-12-团队开发","children":[]},{"level":3,"title":"4.13 ApplicationContext","slug":"_4-13-applicationcontext","link":"#_4-13-applicationcontext","children":[]},{"level":3,"title":"4.14 第三方资源配置","slug":"_4-14-第三方资源配置","link":"#_4-14-第三方资源配置","children":[]}]},{"level":2,"title":"5 综合案例","slug":"_5-综合案例","link":"#_5-综合案例","children":[{"level":3,"title":"5.1 案例介绍","slug":"_5-1-案例介绍","link":"#_5-1-案例介绍","children":[]},{"level":3,"title":"5.2 案例分析","slug":"_5-2-案例分析","link":"#_5-2-案例分析","children":[]},{"level":3,"title":"5.3 案例制作步骤——基础准备工作","slug":"_5-3-案例制作步骤——基础准备工作","link":"#_5-3-案例制作步骤——基础准备工作","children":[]},{"level":3,"title":"5.4 案例制作步骤——整合准备工作","slug":"_5-4-案例制作步骤——整合准备工作","link":"#_5-4-案例制作步骤——整合准备工作","children":[]},{"level":3,"title":"5.5 案例制作步骤——整合工作","slug":"_5-5-案例制作步骤——整合工作","link":"#_5-5-案例制作步骤——整合工作","children":[]},{"level":3,"title":"小节","slug":"小节","link":"#小节","children":[]}]}],"git":{"createdTime":1729494189000,"updatedTime":1730194326000,"contributors":[{"name":"MrJason","email":"845886914@qq.com","commits":2}]},"readingTime":{"minutes":11.59,"words":3477},"filePathRelative":"posts/Java/Java框架/Spring/Spring-day01.md","localizedDate":"2024年10月21日","excerpt":"\\n<h2>1 Spring简介</h2>\\n<h3>1.1 什么是框架</h3>\\n<ul>\\n<li>\\n<p>源自于建筑学,隶属土木工程,后发展到软件工程领域</p>\\n</li>\\n<li>\\n<p>软件工程框架：经过验证的,具有一定功能的,半成品软件</p>\\n<ul>\\n<li>\\n<p>经过验证</p>\\n</li>\\n<li>\\n<p>具有一定功能</p>\\n</li>\\n<li>\\n<p>半成品</p>\\n</li>\\n</ul>\\n</li>\\n</ul>\\n<figure><img src=\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111601015.png\\" alt=\\"1590631254933\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>1590631254933</figcaption></figure>","autoDesc":true}');export{t as comp,B as data};
