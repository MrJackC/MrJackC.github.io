import{_ as a,c as i,a as e,o as t}from"./app-4x2aIoqi.js";const s={};function o(p,n){return t(),i("div",null,n[0]||(n[0]=[e(`<h1 id="pyenv-win-——-windows-端-python-版本管理工具" tabindex="-1"><a class="header-anchor" href="#pyenv-win-——-windows-端-python-版本管理工具"><span>pyenv-win —— windows 端 python 版本管理工具</span></a></h1><h4 id="pyenv-win-——-windows-端-python-版本管理工具-1" tabindex="-1"><a class="header-anchor" href="#pyenv-win-——-windows-端-python-版本管理工具-1"><span>pyenv-win —— windows 端 python 版本管理工具</span></a></h4><ul><li><a href="#pyenv-win--windows-%E7%AB%AF-python-%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7">pyenv-win —— windows 端 python 版本管理工具</a><br> - <a href="#pyenv-win--windows-%E7%AB%AF-python-%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7-1">pyenv-win —— windows 端 python 版本管理工具</a><ul><li><a href="#pyenv-win-%E4%B8%8B%E8%BD%BD">pyenv-win 下载</a></li><li><a href="#%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F">配置环境变量</a></li><li><a href="#%E4%BD%BF%E7%94%A8-pyenv-win-%E7%AE%A1%E7%90%86-python-%E7%89%88%E6%9C%AC">使用 pyenv-win 管理 python 版本</a><ul><li><a href="#%E4%B8%80%E5%AE%89%E8%A3%85-%E5%92%8C-%E5%8D%B8%E8%BD%BD-python">一、安装 和 卸载 python</a></li><li><a href="#%E4%BA%8C%E8%AE%BE%E7%BD%AE-%E5%85%A8%E5%B1%80%E7%9A%84-python-%E7%89%88%E6%9C%AC%E8%AE%BE%E7%BD%AE%E6%8C%87%E5%AE%9A%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8B%E7%9A%84-python-%E7%89%88%E6%9C%AC">二、设置 全局的 python 版本；设置指定文件夹下的 python 版本</a></li><li><a href="#%E4%B8%89%E9%AA%8C%E8%AF%81-python-%E6%98%AF%E5%90%A6%E5%AE%89%E8%A3%85%E6%88%90%E5%8A%9F">三、验证 python 是否安装成功</a></li></ul></li></ul></li></ul><h2 id="pyenv-win-下载" tabindex="-1"><a class="header-anchor" href="#pyenv-win-下载"><span>pyenv-win 下载</span></a></h2><p><code>本文通过 git 方式下载</code></p><ol><li>在 github 中 找到 pyenv-win 的 git 仓库 快速打开 <a href="https://github.com/pyenv-win/pyenv-win" target="_blank" rel="noopener noreferrer">pyenv-win</a></li><li>打开终端，切换到想要安装的路径，在终端中使用 git clone <a href="https://github.com/pyenv-win/pyenv-win.git" target="_blank" rel="noopener noreferrer">https://github.com/pyenv-win/pyenv-win.git</a> 命令 将 pyenv-win 克隆到安装目录 （安装目录不要出现中文和空格）</li></ol><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">git</span><span style="color:#98C379;--shiki-dark:#98C379;"> clone</span><span style="color:#98C379;--shiki-dark:#98C379;"> https://github.com/pyenv-win/pyenv-win.git</span></span></code></pre></div><p>通过以上步骤 就可以完成 pyenv-win 的下载</p><h2 id="配置环境变量" tabindex="-1"><a class="header-anchor" href="#配置环境变量"><span>配置环境变量</span></a></h2><ol><li><p>打开<a href="https://so.csdn.net/so/search?q=%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86%E5%99%A8&amp;spm=1001.2101.3001.7020" target="_blank" rel="noopener noreferrer">资源管理器</a>，在左侧菜单栏中的 此电脑 右键，选择属性<br><img src="https://i-blog.csdnimg.cn/blog_migrate/bcb0fefb31a00fb7f3768f1d68c3a0e8.png" alt="在这里插入图片描述" loading="lazy"></p></li><li><p>在打开的 <strong>设置----关于</strong> 窗口中滚动鼠标 找到 <strong>高级系统设置</strong>，打开 <strong>高级系统设置</strong></p></li></ol><figure><img src="https://i-blog.csdnimg.cn/blog_migrate/fc8f0107f86c6cbda35438a75afc622c.png" alt="在这里插入图片描述" tabindex="0" loading="lazy"><figcaption>在这里插入图片描述</figcaption></figure><ol start="3"><li><p>在 打开的 <strong>系统属性 – 高级选项卡</strong> 中 点击 <strong>环境变量</strong><br><img src="https://i-blog.csdnimg.cn/blog_migrate/f76b9cfa39e1dd29c70029fbcdc3dfc8.png" alt="在这里插入图片描述" loading="lazy"></p></li><li><p>在 打开的 <strong>环境变量</strong> 窗口中 的 系统变量部分 选择 <strong>新建(W)…</strong>；输入 变量名：PYENV; 变量值：上面步骤pyenv-win的安装目录\\pyenv-win\\pyenv-win；点击 <strong>确定</strong><br><img src="https://i-blog.csdnimg.cn/blog_migrate/2125420280abb27b518343a825ba3880.png" alt="在这里插入图片描述" loading="lazy"></p></li><li><p>在系统变量中找到 变量名为 <strong>Path</strong> 的环境变量 点击 <strong>编辑</strong>；在打开的 编辑环境变量 窗口中 点击 <strong>新建</strong> 添加 两条 环境变量： %PYENV%\\bin %PYENV%\\shims<br><img src="https://i-blog.csdnimg.cn/blog_migrate/307390b553a3a46755c4f8f73fa41449.png" alt="在这里插入图片描述" loading="lazy"></p></li><li><p>打开终端 在 命令行中输入 pyenv --version 验证是否 配置成功，返回版本信息则为 环境配置成功（如图：）<br><img src="https://i-blog.csdnimg.cn/blog_migrate/9a8a267ee962e7e03d1fb874874c02d0.png" alt="在这里插入图片描述" loading="lazy"></p></li></ol><p>完成以上步骤 pyenv-win 的 环境就 配置 好了</p><h2 id="使用-pyenv-win-管理-python-版本" tabindex="-1"><a class="header-anchor" href="#使用-pyenv-win-管理-python-版本"><span>使用 pyenv-win 管理 python 版本</span></a></h2><h3 id="一、安装-和-卸载-python" tabindex="-1"><a class="header-anchor" href="#一、安装-和-卸载-python"><span>一、安装 和 卸载 python</span></a></h3><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看所有可安装的 python 版本</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">pyenv</span><span style="color:#98C379;--shiki-dark:#98C379;"> install</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -l</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 安装指定版本的 python</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">pyenv</span><span style="color:#98C379;--shiki-dark:#98C379;"> install</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 3.5.2</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 一个命令中安装多个版本</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">pyenv</span><span style="color:#98C379;--shiki-dark:#98C379;"> install</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 2.4.3</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 3.6.8</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 卸载 指定 版本 的 python</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">pyenv</span><span style="color:#98C379;--shiki-dark:#98C379;"> uninstall</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 3.5.2</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看已安装的版本</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">pyenv</span><span style="color:#98C379;--shiki-dark:#98C379;"> versions</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看当前使用版本</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">pyenv</span><span style="color:#98C379;--shiki-dark:#98C379;"> version</span></span></code></pre></div><blockquote></blockquote><p>使用 pyenv 下载python镜像可能会有点慢，等不及的小伙伴可以在 执行 <code>pyenv install 2.7.18</code> （当From 和 To 的路径输出出来后 <code>ctrl + c</code> 取消执行）后 手动使用 From 后面的下载路径放到浏览器中下载，然后拷贝到 To 后面的路径中，再次执行 <code>pyenv install 2.7.18</code></p><figure><img src="https://i-blog.csdnimg.cn/blog_migrate/c1db27ed32a0b1bf2c3172983542f053.png" alt="在这里插入图片描述" tabindex="0" loading="lazy"><figcaption>在这里插入图片描述</figcaption></figure><h3 id="二、设置-全局的-python-版本-设置指定文件夹下的-python-版本" tabindex="-1"><a class="header-anchor" href="#二、设置-全局的-python-版本-设置指定文件夹下的-python-版本"><span>二、设置 全局的 python 版本；设置指定文件夹下的 python 版本</span></a></h3><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 设置 全局的 python 版本</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">pyenv</span><span style="color:#98C379;--shiki-dark:#98C379;"> global</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 3.5.2</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 设置指定文件夹下的 python 版本；在指定 文件夹下执行该命令，文件夹下会生成一个配置文件（不能删除）</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">pyenv</span><span style="color:#98C379;--shiki-dark:#98C379;"> local</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 3.5.2</span></span></code></pre></div><h3 id="三、验证-python-是否安装成功" tabindex="-1"><a class="header-anchor" href="#三、验证-python-是否安装成功"><span>三、验证 python 是否安装成功</span></a></h3><blockquote></blockquote><p>在 终端 中输入 <code>python -V</code> 查看打印的版本号是否与设置的版本号 一致（如图）</p><figure><img src="https://i-blog.csdnimg.cn/blog_migrate/db2616eaaae719ce29dd45718c573ff2.png" alt="在这里插入图片描述" tabindex="0" loading="lazy"><figcaption>在这里插入图片描述</figcaption></figure><p>该教程是 <strong>本菜鸟</strong> 凭借记忆 完成的 可能存在 问题 和 纰漏，旨在交流和学习；如发现问题 请评论区友好指出（勿喷…）</p><p>参考文档: <a href="https://pyenv-win.github.io/pyenv-win/#validate-installation" target="_blank" rel="noopener noreferrer">pyenv-win 官网文档</a></p><p><a href="https://blog.csdn.net/2301_82000445/article/details/135478769" target="_blank" rel="noopener noreferrer">!其他安装文档</a></p>`,28)]))}const r=a(s,[["render",o],["__file","python-install.html.vue"]]),h=JSON.parse('{"path":"/posts/Python/python-install.html","title":"pyenv-win —— windows 端 python 版本管理工具","lang":"zh-CN","frontmatter":{"description":"pyenv-win —— windows 端 python 版本管理工具 pyenv-win —— windows 端 python 版本管理工具 pyenv-win —— windows 端 python 版本管理工具 - pyenv-win —— windows 端 python 版本管理工具 pyenv-win 下载 配置环境变量 使用 pyen...","watermark":true,"head":[["meta",{"property":"og:url","content":"https://springg.us.kg/posts/Python/python-install.html"}],["meta",{"property":"og:site_name","content":"mrjason’s Blog"}],["meta",{"property":"og:title","content":"pyenv-win —— windows 端 python 版本管理工具"}],["meta",{"property":"og:description","content":"pyenv-win —— windows 端 python 版本管理工具 pyenv-win —— windows 端 python 版本管理工具 pyenv-win —— windows 端 python 版本管理工具 - pyenv-win —— windows 端 python 版本管理工具 pyenv-win 下载 配置环境变量 使用 pyen..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://i-blog.csdnimg.cn/blog_migrate/bcb0fefb31a00fb7f3768f1d68c3a0e8.png "}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-20T07:21:44.000Z"}],["meta",{"property":"article:author","content":"MrJason"}],["meta",{"property":"article:modified_time","content":"2025-02-20T07:21:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"pyenv-win —— windows 端 python 版本管理工具\\",\\"image\\":[\\"https://i-blog.csdnimg.cn/blog_migrate/bcb0fefb31a00fb7f3768f1d68c3a0e8.png \\",\\"https://i-blog.csdnimg.cn/blog_migrate/fc8f0107f86c6cbda35438a75afc622c.png \\",\\"https://i-blog.csdnimg.cn/blog_migrate/f76b9cfa39e1dd29c70029fbcdc3dfc8.png \\",\\"https://i-blog.csdnimg.cn/blog_migrate/2125420280abb27b518343a825ba3880.png \\",\\"https://i-blog.csdnimg.cn/blog_migrate/307390b553a3a46755c4f8f73fa41449.png \\",\\"https://i-blog.csdnimg.cn/blog_migrate/9a8a267ee962e7e03d1fb874874c02d0.png \\",\\"https://i-blog.csdnimg.cn/blog_migrate/c1db27ed32a0b1bf2c3172983542f053.png \\",\\"https://i-blog.csdnimg.cn/blog_migrate/db2616eaaae719ce29dd45718c573ff2.png \\"],\\"dateModified\\":\\"2025-02-20T07:21:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MrJason\\",\\"url\\":\\"https://springg.us.kg\\"}]}"]]},"headers":[{"level":2,"title":"pyenv-win 下载","slug":"pyenv-win-下载","link":"#pyenv-win-下载","children":[]},{"level":2,"title":"配置环境变量","slug":"配置环境变量","link":"#配置环境变量","children":[]},{"level":2,"title":"使用 pyenv-win 管理 python 版本","slug":"使用-pyenv-win-管理-python-版本","link":"#使用-pyenv-win-管理-python-版本","children":[{"level":3,"title":"一、安装 和 卸载 python","slug":"一、安装-和-卸载-python","link":"#一、安装-和-卸载-python","children":[]},{"level":3,"title":"二、设置 全局的 python 版本；设置指定文件夹下的 python 版本","slug":"二、设置-全局的-python-版本-设置指定文件夹下的-python-版本","link":"#二、设置-全局的-python-版本-设置指定文件夹下的-python-版本","children":[]},{"level":3,"title":"三、验证 python 是否安装成功","slug":"三、验证-python-是否安装成功","link":"#三、验证-python-是否安装成功","children":[]}]}],"git":{"createdTime":1740036104000,"updatedTime":1740036104000,"contributors":[{"name":"MrJason","email":"845886914@qq.com","commits":1}]},"readingTime":{"minutes":3.36,"words":1009},"filePathRelative":"posts/Python/python-install.md","localizedDate":"2025年2月20日","excerpt":"\\n<h4>pyenv-win —— windows 端 python 版本管理工具</h4>\\n<ul>\\n<li><a href=\\"#pyenv-win--windows-%E7%AB%AF-python-%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7\\">pyenv-win —— windows 端 python 版本管理工具</a><br>\\n- <a href=\\"#pyenv-win--windows-%E7%AB%AF-python-%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7-1\\">pyenv-win —— windows 端 python 版本管理工具</a>\\n<ul>\\n<li><a href=\\"#pyenv-win-%E4%B8%8B%E8%BD%BD\\">pyenv-win 下载</a></li>\\n<li><a href=\\"#%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F\\">配置环境变量</a></li>\\n<li><a href=\\"#%E4%BD%BF%E7%94%A8-pyenv-win-%E7%AE%A1%E7%90%86-python-%E7%89%88%E6%9C%AC\\">使用 pyenv-win 管理 python 版本</a>\\n<ul>\\n<li><a href=\\"#%E4%B8%80%E5%AE%89%E8%A3%85-%E5%92%8C-%E5%8D%B8%E8%BD%BD-python\\">一、安装 和 卸载 python</a></li>\\n<li><a href=\\"#%E4%BA%8C%E8%AE%BE%E7%BD%AE-%E5%85%A8%E5%B1%80%E7%9A%84-python-%E7%89%88%E6%9C%AC%E8%AE%BE%E7%BD%AE%E6%8C%87%E5%AE%9A%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8B%E7%9A%84-python-%E7%89%88%E6%9C%AC\\">二、设置 全局的 python 版本；设置指定文件夹下的 python 版本</a></li>\\n<li><a href=\\"#%E4%B8%89%E9%AA%8C%E8%AF%81-python-%E6%98%AF%E5%90%A6%E5%AE%89%E8%A3%85%E6%88%90%E5%8A%9F\\">三、验证 python 是否安装成功</a></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{r as comp,h as data};
