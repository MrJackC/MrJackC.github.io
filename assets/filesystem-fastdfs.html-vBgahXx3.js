import{_ as a,c as n,a as e,o as i}from"./app-DQS7qcOs.js";const r={};function l(p,s){return i(),n("div",null,s[0]||(s[0]=[e(`<h1 id="fastdfs安装" tabindex="-1"><a class="header-anchor" href="#fastdfs安装"><span>FastDFS安装</span></a></h1><h2 id="_1-什么是-fastdfs" tabindex="-1"><a class="header-anchor" href="#_1-什么是-fastdfs"><span>1.什么是 FastDFS</span></a></h2><h3 id="_1-1-简介" tabindex="-1"><a class="header-anchor" href="#_1-1-简介"><span>1.1 简介</span></a></h3><p>FastDFS 由淘宝的余庆大佬在 2008 年开源的一款轻量级分布式文件管理系统，FastDFS 用 C 语言实现，支持 Linux、FreeBSD、MacOS 等类 UNIX 系统。FastDFS 类似 google FS，属于应用级文件系统，不是通用的文件系统，只能通过专有 API 访问，目前提供了 C 和 Java SDK ，以及 PHP 扩展 SDK。</p><p>FastDFS 专为互联网应用量身定做，解决大容量文件存储问题，追求高性能和高扩展性，它可以看做是基于文件的 key/value 存储系统，key 为文件 ID，value 为文件内容，因此称作分布式文件存储服务更为合适。</p><h3 id="_1-2-为什么需要-fastdfs" tabindex="-1"><a class="header-anchor" href="#_1-2-为什么需要-fastdfs"><span>1.2 为什么需要 FastDFS</span></a></h3><p>传统的企业级开发对于高并发要求不是很高，而且数据量可能也不大，在这样的环境下文件管理可能非常 Easy。</p><p>但是互联网应用访问量大、数据量大，在互联网应用中，我们必须考虑解决文件大容量存储和高性能访问的问题，而 FastDFS 就特别适合干这件事情，常见的图片存储、视频存储、文档存储等等我们都可以采用 FastDFS 来做。</p><h3 id="_1-3-fastdfs-架构" tabindex="-1"><a class="header-anchor" href="#_1-3-fastdfs-架构"><span>1.3 FastDFS 架构</span></a></h3><p>作为一款分布式文件管理系统，FastDFS 主要包括四个方面的功能：</p><ul><li>文件存储</li><li>文件同步</li><li>文件上传</li><li>文件下载</li></ul><p>这个方面的功能，基本上就能搞定我们常见的文件管理需求了。</p><p>下面这是一张来自 FastDFS 官网的系统架构图：</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301012620.png" alt="image-20201211172156714" tabindex="0" loading="lazy"><figcaption>image-20201211172156714</figcaption></figure><p>从上面这张图中我们可以看到，<strong>FastDFS 架构包括 Tracker 和 Storage 两部分，看名字大概就能知道，Tracker 用来追踪文件，相当于是文件的一个索引，而 Storage 则用来保存文件。</strong></p><p>我们上传文件的文件最终保存在 Storage 上，文件的元数据信息保存在 Tracker 上，通过 Tracker 可以实现对 Storage 的负载均衡。</p><p>Storage 一般会搭建成集群，一个 Storage Cluster 可以由多个组构成，不同的组之间不进行通信，一个组又相当于一个小的集群，组由多个 Storage Server 组成，组内的 Storage Server 会通过连接进行文件同步来保证高可用。</p><h2 id="_2-安装" tabindex="-1"><a class="header-anchor" href="#_2-安装"><span>2. 安装</span></a></h2><p>为了测试方便，不开启多台虚拟机，Tracker 和 Storage 我将安装在同一台服务器上。</p><p>图片上传我们一般使用 FastDFS，图片上传成功之后，接下来的图片访问我们一般采用 Nginx。我们分别从以下三个方面介绍</p><ul><li>Tracker 安装</li><li>Storage 安装</li><li>Nginx 安装（只介绍关键配置）</li></ul><h3 id="_2-1-tracker-安装" tabindex="-1"><a class="header-anchor" href="#_2-1-tracker-安装"><span>2.1 Tracker 安装</span></a></h3><p>安装，我们首先需要准备一个环境两个库以及一个安装包。</p><ol><li><p>一个环境</p><p>FastDFS 采用 C 语言开发，所以在安装之前，如果没有 gcc 环境，需要先安装，安装命令如下：</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>yum install gcc-c++</span></span></code></pre></div></li><li><p>两个库</p><ul><li><p>libevent</p><p>FastDFS 依赖 libevent 库，安装命令如下：</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>yum -y install libevent</span></span></code></pre></div></li><li><p>libfastcommon</p><p>FastDFS 官方提供的，它包含了 FastDFS 运行所需要的一些基础库。</p><p><a href="https://github.com/happyfish100/libfastcommon/archive/V1.0.43.tar.gz" target="_blank" rel="noopener noreferrer">下载地址</a> : <a href="https://github.com/happyfish100/libfastcommon/archive/V1.0.43.tar.gz" target="_blank" rel="noopener noreferrer">https://github.com/happyfish100/libfastcommon/archive/V1.0.43.tar.gz</a></p><p>将下载好的 libfastcommon 拷贝至 /usr/local/ 目录下，然后依次执行如下命令：</p><div class="language-sh" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> cd</span><span style="color:#98C379;--shiki-dark:#98C379;"> /usr/local</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> tar</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -zxvf</span><span style="color:#98C379;--shiki-dark:#98C379;"> libfastcommon-1.0.43.tar.gz</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> cd</span><span style="color:#98C379;--shiki-dark:#98C379;"> libfastcommon-1.0.43/</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> ./make.sh</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> ./make.sh</span><span style="color:#98C379;--shiki-dark:#98C379;"> install</span></span></code></pre></div></li></ul></li><li><p>一个安装包</p><p>接下来我们下载 Tracker，注意，<strong>由于 Tracker 和 Storage 是相同的安装包</strong>，所以下载一次即可</p><p><a href="https://github.com/happyfish100/fastdfs/archive/V6.06.tar.gz" target="_blank" rel="noopener noreferrer">下载地址</a> : <a href="https://github.com/happyfish100/fastdfs/archive/V6.06.tar.gz" target="_blank" rel="noopener noreferrer">https://github.com/happyfish100/fastdfs/archive/V6.06.tar.gz</a></p><p>下载成功后，将下载文件拷贝到 /usr/local 目录下，然后依次执行如下命令安装：</p><div class="language-sh" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">cd</span><span style="color:#98C379;--shiki-dark:#98C379;"> /usr/local</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">tar</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -zxvf</span><span style="color:#98C379;--shiki-dark:#98C379;"> fastdfs-6.06.tar.gz</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">cd</span><span style="color:#98C379;--shiki-dark:#98C379;"> fastdfs-6.06/</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">./make.sh</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">./make.sh</span><span style="color:#98C379;--shiki-dark:#98C379;"> install</span></span></code></pre></div><p>安装成功后，执行如下命令，将安装目录内 conf 目录下的配置文件拷贝到 /etc/fdfs 目录下：</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>cd conf/</span></span>
<span class="line"><span>cp ./* /etc/fdfs/</span></span></code></pre></div></li><li><p>配置</p><p>进入 /etc/fdfs/ 目录下进行配置：</p><p>打开 tracker.conf 文件：</p><div class="language-sh" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">vi</span><span style="color:#98C379;--shiki-dark:#98C379;"> tracker.conf</span></span></code></pre></div><p>修改如下配置：</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301012661.png" alt="image-20201211094903515" tabindex="0" loading="lazy"><figcaption>image-20201211094903515</figcaption></figure></li></ol><ul><li>默认端口:22122 （无特殊需求暂不做修改）</li><li>元数据的保存目录：（注意目录要存在）</li></ul><ol><li><p>启动</p><p>接下来执行如下命令启动 Tracker：</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>/usr/bin/fdfs_trackerd /etc/fdfs/tracker.conf start</span></span></code></pre></div></li></ol><h3 id="_2-2-storage-安装" tabindex="-1"><a class="header-anchor" href="#_2-2-storage-安装"><span>2.2 Storage 安装</span></a></h3><p>这里我们搭建一个 Storage 实例即可。Storage 安装也需要 libevent 和 libfastcommon，这两个库的安装参考上文</p><p>Storage 本身的安装，也和 Tracker 一致，执行命令也都一样，因为我这里将 Tracker 和 Storage 安装在同一台服务器上，所以不用再执行安装命令了（相当于安装 Tracker 时已经安装了 Storage 了）。</p><p>唯一要做的，就是进入到 /etc/fdfs 目录下，配置 Storage：</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>vi storage.conf</span></span></code></pre></div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301012687.png" alt="image-20201211101021672" tabindex="0" loading="lazy"><figcaption>image-20201211101021672</figcaption></figure><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301012707.png" alt="image-20201211100945362" tabindex="0" loading="lazy"><figcaption>image-20201211100945362</figcaption></figure><p>这里一共配置三个地方，分别是 base_path、store_path0 以及 tracker_server ，tracker_server 模板有两个地址，我们这里只有一个，配置完成后，记得注释掉另外一个不用的。</p><p>配置完成后，执行如下命令启动 Storage：</p><div class="language-sh" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">/usr/bin/fdfs_storaged</span><span style="color:#98C379;--shiki-dark:#98C379;"> /etc/fdfs/storage.conf</span><span style="color:#98C379;--shiki-dark:#98C379;"> start</span></span></code></pre></div><p>这两个启动完成后，现在就可以做文件的上传了，但是一般如果是图片文件，我们还需要提供一个图片的访问功能，目前来说最佳方案当然是 Nginx 了，所以我们这里连同 Nginx 一起配置好，再来做测试。</p><h3 id="_2-3-nginx-安装" tabindex="-1"><a class="header-anchor" href="#_2-3-nginx-安装"><span>2.3 Nginx 安装</span></a></h3><p>Nginx 的安装分为两个步骤：</p><ul><li>安装 Nginx</li><li>首先在 Storage 下安装 fastdfs-nginx-module</li></ul><h4 id="_2-3-1-安装nginx" tabindex="-1"><a class="header-anchor" href="#_2-3-1-安装nginx"><span>2.3.1 安装Nginx</span></a></h4><p>参考：<a href="http://java.isture.com/linux/nginx/%E5%AE%89%E8%A3%85nginx.html" target="_blank" rel="noopener noreferrer">安装nginx</a></p><h4 id="_2-3-2-storage-下安装-fastdfs-nginx-module" tabindex="-1"><a class="header-anchor" href="#_2-3-2-storage-下安装-fastdfs-nginx-module"><span>2.3.2 Storage 下安装 fastdfs-nginx-module</span></a></h4><ol><li><p>下载fastdfs-nginx-module</p><p><a href="https://github.com/happyfish100/fastdfs-nginx-module/releases" target="_blank" rel="noopener noreferrer">下载地址</a></p></li><li><p>下载完成后，将下载的文件拷贝到 /usr/local 目录下。然后进入 /usr/local 目录，分别执行如下命令：</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>cd /usr/local/</span></span>
<span class="line"><span>tar -zxvf fastdfs-nginx-module-1.22.tar.gz</span></span></code></pre></div></li><li><p>然后将 <code>/usr/local/fastdfs-nginx-module-1.22/src/mod_fastdfs.conf</code> 文件拷贝到 <code>/etc/fdfs/</code> 目录下，并修改该文件的内容：</p><div class="language-sh" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">cp</span><span style="color:#98C379;--shiki-dark:#98C379;"> /usr/local/fastdfs-nginx-module-1.22/src/mod_fastdfs.conf</span><span style="color:#98C379;--shiki-dark:#98C379;"> /etc/fdfs/</span></span></code></pre></div></li><li><p>修改mod_fastdfs.conf的内容：</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>vi /etc/fdfs/mod_fastdfs.conf</span></span></code></pre></div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301012730.png" alt="image-20201211102958727" tabindex="0" loading="lazy"><figcaption>image-20201211102958727</figcaption></figure></li><li><p>接下来，回到第一步下载的 nginx 安装文件的解压目录中，执行如下命令，重新配置编译安装：</p><div class="language-sh" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">./configure</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> --add-module=/usr/local/fastdfs-nginx-module-1.22/src</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">make</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">make</span><span style="color:#98C379;--shiki-dark:#98C379;"> install</span></span></code></pre></div></li><li><p>安装完成后，修改 nginx 的配置文件，如下：</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>vi /usr/local/nginx/conf/nginx.conf</span></span></code></pre></div><p>添加</p><div class="language-txt" data-ext="txt" data-title="txt"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>	server {</span></span>
<span class="line"><span>        listen          80;</span></span>
<span class="line"><span>        server_name     127.0.0.1;       </span></span>
<span class="line"><span>		location ~/group([0-9]) {</span></span>
<span class="line"><span>            ngx_fastdfs_module;</span></span>
<span class="line"><span>       	}</span></span>
<span class="line"><span>    }</span></span></code></pre></div><p>在这里配置 nginx 请求转发。</p><p>配置完成后，启动 nginx，看到如下日志，表示 nginx 启动成功：</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>ngx_http_fastdfs_set pid=19040</span></span></code></pre></div><p><strong>疑问：fastdfs-nginx-module 有啥用</strong></p><p>看了整个安装过程之后，很多小伙伴有疑问，到头来还是 nginx 本身直接找到了图片文件目录，fastdfs-nginx-module 到底有啥用？</p><p>前面我们说过，Storage 由很多组构成，每个组又是一个小的集群，在每一个组里边，数据会进行同步，但是如果数据还没同步，这个时候就有请求发来了，该怎么办？此时<strong>fastdfs-nginx-module 会帮助我们直接从源 Storage 上获取文件。</strong></p></li></ol><h2 id="_3-启动fastdfs" tabindex="-1"><a class="header-anchor" href="#_3-启动fastdfs"><span>3. 启动fastDFS</span></a></h2><p>重启tracker</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">/usr/bin/fdfs_trackerd</span><span style="color:#98C379;--shiki-dark:#98C379;"> /etc/fdfs/tracker.conf</span><span style="color:#98C379;--shiki-dark:#98C379;"> start</span></span></code></pre></div><p>重启storage</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">/usr/bin/fdfs_storaged</span><span style="color:#98C379;--shiki-dark:#98C379;"> /etc/fdfs/storage.conf</span><span style="color:#98C379;--shiki-dark:#98C379;"> start</span></span></code></pre></div><h2 id="_4-java客户端调用" tabindex="-1"><a class="header-anchor" href="#_4-java客户端调用"><span>4. Java客户端调用</span></a></h2><h3 id="_4-1-相关配置" tabindex="-1"><a class="header-anchor" href="#_4-1-相关配置"><span>4.1 相关配置</span></a></h3><p>安装成功后，接下来我们就用 Java 客户端来测试一下文件上传下载。</p><ol><li><p>添加maven 依赖</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;net.oschina.zcx7878&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;fastdfs-client-java&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;1.27.0.0&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div></li><li><p>在项目的 resources 目录下添加 FastDFS 的配置文件 fastdfs-client.properties，内容如下：</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>fastdfs.connect_timeout_in_seconds = 5</span></span>
<span class="line"><span>fastdfs.network_timeout_in_seconds = 30</span></span>
<span class="line"><span>fastdfs.charset = UTF-8</span></span>
<span class="line"><span>fastdfs.http_anti_steal_token = false</span></span>
<span class="line"><span>fastdfs.http_secret_key = FastDFS1234567890</span></span>
<span class="line"><span>fastdfs.http_tracker_http_port = 80</span></span>
<span class="line"><span>fastdfs.tracker_servers = 120.79.200.222:22122</span></span>
<span class="line"><span>fastdfs.connection_pool.enabled = true</span></span>
<span class="line"><span>fastdfs.connection_pool.max_count_per_entry = 500</span></span>
<span class="line"><span>fastdfs.connection_pool.max_idle_time = 3600</span></span>
<span class="line"><span>fastdfs.connection_pool.max_wait_time_in_ms = 1000</span></span></code></pre></div><p>fastdfs.tracker_servers: 这是 Tracker 的地址，根据实际情况配置即可。</p></li></ol><h3 id="_4-2-文件上传" tabindex="-1"><a class="header-anchor" href="#_4-2-文件上传"><span>4.2 文件上传</span></a></h3><p>配置完成后，先来看文件上传，代码如下：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> testUpload</span><span style="color:#E06C75;--shiki-dark:#E06C75;">() {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        try</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">            ClientGlobal</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">initByProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;fastdfs-client.properties&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">            TrackerClient</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> tracker </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> TrackerClient</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">            TrackerServer</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> trackerServer </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> tracker</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getConnection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">            StorageServer</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> storageServer </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">            StorageClient1</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> client </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> StorageClient1</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(trackerServer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> storageServer)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">            NameValuePair</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> nvp[] </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            //上传到文件系统</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">            String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> fileId </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> client</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">upload_file1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;img</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">\\t</span><span style="color:#98C379;--shiki-dark:#98C379;">est.jpg&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;jpg&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                    nvp);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">            logger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">info</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(fileId);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD;">catch</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Exception</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> e</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">            e</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">printStackTrace</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        }</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行步骤</p><ol><li><p>首先加载配置文件</p></li><li><p>然后构造一个 TrackerClient 对象</p></li><li><p>根据这个对象获取到一个 TrackerServer</p></li><li><p>然后创建一个 StorageClient1 实例</p></li><li><p>NameValuePair 中保存的是文件的元数据信息，如果有的话，就以 key/value 的方式来设置，如果没有的话，直接给一个 null 即可。</p></li><li><p>调用 client 的 upload_file1 方法上传文件，第一个参数是文件路径，第二个参数是文件的扩展名，第三个参数就是文件的元数据信息，这个方法的返回值，就是上传文件的访问路径。</p><p>执行该方法，打印日志如下：</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>group1/M00/00/00/eE_Ib1_S57OAa6pQAADzHWHkPwM335.jpg</span></span></code></pre></div><p>就是文件的路径，此时，在浏览器中输入<a href="http://120.79.200.xxx:8701/group1/M00/00/00/eE_Ib1_S57OAa6pQAADzHWHkPwM335.jpg" target="_blank" rel="noopener noreferrer">http://120.79.200.xxx:8701/group1/M00/00/00/eE_Ib1_S57OAa6pQAADzHWHkPwM335.jpg</a> 就可以看到上传的图片了。</p></li></ol><h4 id="_4-2-1-图片显示不出" tabindex="-1"><a class="header-anchor" href="#_4-2-1-图片显示不出"><span>4.2.1 图片显示不出</span></a></h4><p>FastDFS 配好了，Nginx也配好了，可是网页打开图片地址就是访问不了，查看Nginx的log文件看到</p><div class="language-sh" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  ERROR</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> file:</span><span style="color:#98C379;--shiki-dark:#98C379;"> /usr/local/src/fastdfs-nginx-module-1.20/src/common.c,</span><span style="color:#98C379;--shiki-dark:#98C379;"> line:</span><span style="color:#98C379;--shiki-dark:#98C379;"> 111,</span><span style="color:#98C379;--shiki-dark:#98C379;"> section:</span><span style="color:#98C379;--shiki-dark:#98C379;"> group1,</span><span style="color:#98C379;--shiki-dark:#98C379;"> you</span><span style="color:#98C379;--shiki-dark:#98C379;"> must</span><span style="color:#98C379;--shiki-dark:#98C379;"> set</span><span style="color:#98C379;--shiki-dark:#98C379;"> parameter:</span><span style="color:#98C379;--shiki-dark:#98C379;"> group_name!</span></span></code></pre></div><p>找到 mod_fastdfs.conf ，发现groupname 没有写对(被注释了)</p><div class="language-sh" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># when support multi-group on this storage server, uncomment following section</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  [group1]</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  group_name</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">group1</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  storage_server_port</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">23000</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  store_path_count</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">1</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  store_path0</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">/home/fastdfsuser/fastdfs</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  #store_path1=/home/yuqing/fastdfs1</span></span></code></pre></div><p>重启fastdfs 和 nginx</p><h3 id="_4-3-文件下载" tabindex="-1"><a class="header-anchor" href="#_4-3-文件下载"><span>4.3 文件下载</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> testDownload</span><span style="color:#E06C75;--shiki-dark:#E06C75;">() {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        try</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">            ClientGlobal</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">initByProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;fastdfs-client.properties&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">            TrackerClient</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> tracker </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> TrackerClient</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">            TrackerServer</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> trackerServer </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> tracker</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getConnection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">            StorageServer</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> storageServer </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">            StorageClient1</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> client </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> StorageClient1</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(trackerServer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> storageServer)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">            byte</span><span style="color:#E06C75;--shiki-dark:#E06C75;">[] bytes </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> client</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">download_file1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;group1/M00/00/00/eE_Ib1_S57OAa6pQAADzHWHkPwM335.jpg&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">            FileOutputStream</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> fos </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> FileOutputStream</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#C678DD;--shiki-dark:#C678DD;">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> File</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;img</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">\\\\</span><span style="color:#98C379;--shiki-dark:#98C379;">out.png&quot;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">))</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">            fos</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">write</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(bytes);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">            fos</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">close</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD;">catch</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Exception</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> e</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">            e</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">printStackTrace</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    }</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>直接调用 download_file1 方法获取到一个 byte 数组，然后通过 IO 流写出到本地文件即可。</p><h2 id="_5-安全问题" tabindex="-1"><a class="header-anchor" href="#_5-安全问题"><span>5. 安全问题</span></a></h2><p>现在，任何人都可以访问我们服务器上传文件，这肯定是不行的，这个问题好解决，加一个上传时候的令牌即可。</p><ol><li><p>首先我们在服务端开启令牌校验：</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>vi /etc/fdfs/http.conf</span></span></code></pre></div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301012754.png" alt="image-20201211150330620" tabindex="0" loading="lazy"><figcaption>image-20201211150330620</figcaption></figure></li><li><p>重启服务端</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>./nginx -s stop</span></span>
<span class="line"><span>./nginx</span></span></code></pre></div></li><li><p>前端获取令牌</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> getToken</span><span style="color:#E06C75;--shiki-dark:#E06C75;">() throws Exception {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        int</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> ts </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD;">int</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Instant</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">now</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getEpochSecond</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> token </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> ProtoCommon</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getToken</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;M00/00/00/eE_Ib1_S57OAa6pQAADzHWHkPwM335.jpg&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, ts, </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;FastDFS1234567890&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        StringBuilder</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> sb </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> StringBuilder</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        sb</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">append</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;?token=&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">append</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(token);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        sb</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">append</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;&amp;ts=&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">append</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(ts);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">sb</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">toString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    }</span></span></code></pre></div><p>根据 ProtoCommon.getToken 方法来获取令牌</p><ul><li>第一个参数是你要访问的文件 id，<strong>注意，这个地址里边不包含 group，千万别搞错了；</strong></li><li>第二个参数是时间戳</li><li>第三个参数是密钥，密钥要和服务端的配置一致。</li></ul><p>将生成的字符串拼接，追加到访问路径后面，如：</p><p><a href="http://120.79.200.xxx:8701/group1/M00/00/00/eE_Ib1_S57OAa6pQAADzHWHkPwM335.jpg?token=94a8e7167e1583b0efa674d0dbf5fc63&amp;ts=1607670503%E3%80%82**%E6%AD%A4%E6%97%B6%E8%AE%BF%E9%97%AE%E8%B7%AF%E5%BE%84%E9%87%8C%E8%BE%B9%E5%A6%82%E6%9E%9C%E6%B2%A1%E6%9C%89%E4%BB%A4%E7%89%8C%EF%BC%8C%E4%BC%9A%E8%AE%BF%E9%97%AE%E5%A4%B1%E8%B4%A5%E3%80%82" target="_blank" rel="noopener noreferrer">http://120.79.200.xxx:8701/group1/M00/00/00/eE_Ib1_S57OAa6pQAADzHWHkPwM335.jpg?token=94a8e7167e1583b0efa674d0dbf5fc63&amp;ts=1607670503。**此时访问路径里边如果没有令牌，会访问失败。</a>**</p></li></ol><h2 id="_6-异常处理" tabindex="-1"><a class="header-anchor" href="#_6-异常处理"><span>6.异常处理</span></a></h2><h3 id="_6-1-getstorestorage-fail-errno-code-28" tabindex="-1"><a class="header-anchor" href="#_6-1-getstorestorage-fail-errno-code-28"><span>6.1 getStoreStorage fail, errno code: 28</span></a></h3><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301012774.png" alt="image-20201211113209071" tabindex="0" loading="lazy"><figcaption>image-20201211113209071</figcaption></figure><p>引起错误的原因是，在我们配置tracker的时候，里面有一个配置项：</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span># reserved storage space for system or other applications.</span></span>
<span class="line"><span># if the free(available) space of any stoarge server in</span></span>
<span class="line"><span># a group &lt;= reserved_storage_space, no file can be uploaded to this group.</span></span>
<span class="line"><span># bytes unit can be one of follows:</span></span>
<span class="line"><span>### G or g for gigabyte(GB)</span></span>
<span class="line"><span>### M or m for megabyte(MB)</span></span>
<span class="line"><span>### K or k for kilobyte(KB)</span></span>
<span class="line"><span>### no unit for byte(B)</span></span>
<span class="line"><span>### XX.XX% as ratio such as: reserved_storage_space = 10%</span></span>
<span class="line"><span>reserved_storage_space = 10%</span></span></code></pre></div><p>该配置项是配置storage服务预留磁盘空间的大小的比值，默认是10%，即当磁盘空间不足10%时，则tracker拒绝上传文件。</p><p>解决方法：</p><ol><li>删除不用文件，最好调用DFS的删除API执行删除，因为DFS会维护一个索引文件，调用API删除时会连同索引文件都会删除。这种方式谨慎使用。</li><li>如果文件不允许删除，则需要扩展磁盘。</li><li>临时解决方案，调小该比例</li></ol><h3 id="_6-2-客户端连接超时" tabindex="-1"><a class="header-anchor" href="#_6-2-客户端连接超时"><span>6.2 客户端连接超时</span></a></h3><p>connect timed out</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301012794.png" alt="image-20210324234312735" tabindex="0" loading="lazy"><figcaption>image-20210324234312735</figcaption></figure><p>我们需要确认fdfs 端口是否打开，如果是阿里云服务器，则需要配置安全组</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301012823.png" alt="image-20210324234130717" tabindex="0" loading="lazy"><figcaption>image-20210324234130717</figcaption></figure><p>端口有两个：<strong>22122 和23000 都要开启</strong>！！！！</p><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章"><span>参考文章</span></a></h2><p><a href="https://blog.csdn.net/u012702547/article/details/104589468" target="_blank" rel="noopener noreferrer">手把手教你用 FastDFS 构建分布式文件管理系统</a></p><p><a href="https://blog.csdn.net/weixin_42591789/article/details/87931282" target="_blank" rel="noopener noreferrer">FastDFS + Nginx 网页访问不了</a></p>`,87)]))}const t=a(r,[["render",l],["__file","filesystem-fastdfs.html.vue"]]),c=JSON.parse('{"path":"/posts/Architect/filesystem/filesystem-fastdfs.html","title":"FastDFS安装","lang":"zh-CN","frontmatter":{"aliases":"FastDFS安装","tags":null,"cssclass":null,"source":null,"created":"2024-04-24 14:35","updated":"2024-04-30 10:14","description":"FastDFS安装 1.什么是 FastDFS 1.1 简介 FastDFS 由淘宝的余庆大佬在 2008 年开源的一款轻量级分布式文件管理系统，FastDFS 用 C 语言实现，支持 Linux、FreeBSD、MacOS 等类 UNIX 系统。FastDFS 类似 google FS，属于应用级文件系统，不是通用的文件系统，只能通过专有 API 访...","head":[["meta",{"property":"og:url","content":"https://mrjackc.github.io/posts/Architect/filesystem/filesystem-fastdfs.html"}],["meta",{"property":"og:site_name","content":"mrjason’s Blog"}],["meta",{"property":"og:title","content":"FastDFS安装"}],["meta",{"property":"og:description","content":"FastDFS安装 1.什么是 FastDFS 1.1 简介 FastDFS 由淘宝的余庆大佬在 2008 年开源的一款轻量级分布式文件管理系统，FastDFS 用 C 语言实现，支持 Linux、FreeBSD、MacOS 等类 UNIX 系统。FastDFS 类似 google FS，属于应用级文件系统，不是通用的文件系统，只能通过专有 API 访..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301012620.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-28T01:58:08.000Z"}],["meta",{"property":"article:author","content":"MrJason"}],["meta",{"property":"article:modified_time","content":"2024-10-28T01:58:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"FastDFS安装\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301012620.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301012661.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301012687.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301012707.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301012730.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301012754.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301012774.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301012794.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301012823.png\\"],\\"dateModified\\":\\"2024-10-28T01:58:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MrJason\\",\\"url\\":\\"https://mrjackc.github.io\\"}]}"]]},"headers":[{"level":2,"title":"1.什么是 FastDFS","slug":"_1-什么是-fastdfs","link":"#_1-什么是-fastdfs","children":[{"level":3,"title":"1.1 简介","slug":"_1-1-简介","link":"#_1-1-简介","children":[]},{"level":3,"title":"1.2 为什么需要 FastDFS","slug":"_1-2-为什么需要-fastdfs","link":"#_1-2-为什么需要-fastdfs","children":[]},{"level":3,"title":"1.3 FastDFS 架构","slug":"_1-3-fastdfs-架构","link":"#_1-3-fastdfs-架构","children":[]}]},{"level":2,"title":"2. 安装","slug":"_2-安装","link":"#_2-安装","children":[{"level":3,"title":"2.1 Tracker 安装","slug":"_2-1-tracker-安装","link":"#_2-1-tracker-安装","children":[]},{"level":3,"title":"2.2 Storage 安装","slug":"_2-2-storage-安装","link":"#_2-2-storage-安装","children":[]},{"level":3,"title":"2.3 Nginx 安装","slug":"_2-3-nginx-安装","link":"#_2-3-nginx-安装","children":[]}]},{"level":2,"title":"3. 启动fastDFS","slug":"_3-启动fastdfs","link":"#_3-启动fastdfs","children":[]},{"level":2,"title":"4. Java客户端调用","slug":"_4-java客户端调用","link":"#_4-java客户端调用","children":[{"level":3,"title":"4.1 相关配置","slug":"_4-1-相关配置","link":"#_4-1-相关配置","children":[]},{"level":3,"title":"4.2 文件上传","slug":"_4-2-文件上传","link":"#_4-2-文件上传","children":[]},{"level":3,"title":"4.3 文件下载","slug":"_4-3-文件下载","link":"#_4-3-文件下载","children":[]}]},{"level":2,"title":"5. 安全问题","slug":"_5-安全问题","link":"#_5-安全问题","children":[]},{"level":2,"title":"6.异常处理","slug":"_6-异常处理","link":"#_6-异常处理","children":[{"level":3,"title":"6.1 getStoreStorage fail, errno code: 28","slug":"_6-1-getstorestorage-fail-errno-code-28","link":"#_6-1-getstorestorage-fail-errno-code-28","children":[]},{"level":3,"title":"6.2 客户端连接超时","slug":"_6-2-客户端连接超时","link":"#_6-2-客户端连接超时","children":[]}]},{"level":2,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}],"git":{"createdTime":1730080688000,"updatedTime":1730080688000,"contributors":[{"name":"MrJason","email":"845886914@qq.com","commits":1}]},"readingTime":{"minutes":9.67,"words":2900},"filePathRelative":"posts/Architect/filesystem/filesystem-fastdfs.md","localizedDate":"2024年10月28日","excerpt":"\\n<h2>1.什么是 FastDFS</h2>\\n<h3>1.1 简介</h3>\\n<p>FastDFS 由淘宝的余庆大佬在 2008 年开源的一款轻量级分布式文件管理系统，FastDFS 用 C 语言实现，支持 Linux、FreeBSD、MacOS 等类 UNIX 系统。FastDFS 类似 google FS，属于应用级文件系统，不是通用的文件系统，只能通过专有 API 访问，目前提供了 C 和 Java SDK ，以及 PHP 扩展 SDK。</p>\\n<p>FastDFS 专为互联网应用量身定做，解决大容量文件存储问题，追求高性能和高扩展性，它可以看做是基于文件的 key/value 存储系统，key 为文件 ID，value 为文件内容，因此称作分布式文件存储服务更为合适。</p>","autoDesc":true}');export{t as comp,c as data};
