import{_ as e,c as s,a as n,o as i}from"./app-CzniW49G.js";const o={};function r(l,a){return i(),s("div",null,a[0]||(a[0]=[n(`<h1 id="工作流-flowable-会签、或签" tabindex="-1"><a class="header-anchor" href="#工作流-flowable-会签、或签"><span>工作流（Flowable）会签、或签</span></a></h1><p>项目基于 Flowable 实现了工作流的功能。本章节，我们将介绍工作流的相关功能。</p><p>以请假流程为例，讲解系统支持的两种表单方式的工作流：</p><ol><li>流程表单：在线配置动态表单，无需建表与开发</li><li>业务表单：业务需建立独立的数据库表，并开发对应的表单、详情界面</li></ol><p>整个过程包括：</p><ol><li>定义流程：【管理员】新建流程、设计流程模型、并设置用户任务的审批人，最终发布流程</li><li>发起流程：【员工】选择流程，并发起流程实例</li><li>审批流程：【审批人】接收到流程任务，审批结果为通过或不通过</li></ol><figure><img src="https://doc.iocoder.cn/img/工作流/54.png" alt="示例流程" tabindex="0" loading="lazy"><figcaption>示例流程</figcaption></figure><p>微信扫描下方二维码，加入后可观看视频！</p><figure><img src="https://doc.iocoder.cn/img/视频教程/zsxq_bpm.png" alt="示例流程" tabindex="0" loading="lazy"><figcaption>示例流程</figcaption></figure><ul><li><a href="https://t.zsxq.com/04aqfIiY3" target="_blank" rel="noopener noreferrer">01、如何集成 Flowable 框架？(opens new window)</a></li><li><a href="https://t.zsxq.com/04nun2RRz" target="_blank" rel="noopener noreferrer">02、如何实现动态的流程表单？(opens new window)</a></li><li><a href="https://t.zsxq.com/04uneeaUb" target="_blank" rel="noopener noreferrer">03、如何实现流程表单的保存？(opens new window)</a></li><li><a href="https://t.zsxq.com/04jiMrjAm" target="_blank" rel="noopener noreferrer">04、如何实现流程表单的展示？(opens new window)</a></li><li><a href="https://t.zsxq.com/04iynUF6e" target="_blank" rel="noopener noreferrer">05、如何实现流程模型的新建？(opens new window)</a></li><li><a href="https://t.zsxq.com/04rNVbEQB" target="_blank" rel="noopener noreferrer">06、如何实现流程模型的流程图的设计？(opens new window)</a></li><li><a href="https://t.zsxq.com/042neybYz" target="_blank" rel="noopener noreferrer">07、如何实现流程模型的流程图的预览？(opens new window)</a></li><li><a href="https://t.zsxq.com/04uburRvZ" target="_blank" rel="noopener noreferrer">08、如何实现流程模型的分配规则？(opens new window)</a></li><li><a href="https://t.zsxq.com/04jUBMjyF" target="_blank" rel="noopener noreferrer">09、如何实现流程模型的发布？(opens new window)</a></li><li><a href="https://t.zsxq.com/04MF6URvz" target="_blank" rel="noopener noreferrer">10、如何实现流程定义的查询？(opens new window)</a></li><li><a href="https://t.zsxq.com/04jyvNfqj" target="_blank" rel="noopener noreferrer">11、如何实现流程的发起？(opens new window)</a></li><li><a href="https://t.zsxq.com/046UFqRzz" target="_blank" rel="noopener noreferrer">12、如何实现我的流程列表？(opens new window)</a></li><li><a href="https://t.zsxq.com/04aM72rzv" target="_blank" rel="noopener noreferrer">13、如何实现流程的取消？(opens new window)</a></li><li><a href="https://t.zsxq.com/04rNvFI2f" target="_blank" rel="noopener noreferrer">14、如何实现流程的任务分配？(opens new window)</a></li><li><a href="https://t.zsxq.com/04yFUVZvF" target="_blank" rel="noopener noreferrer">15、如何实现会签、或签任务？(opens new window)</a></li><li><a href="https://t.zsxq.com/04QZzjAme" target="_blank" rel="noopener noreferrer">16、如何实现我的待办任务列表？(opens new window)</a></li><li><a href="https://t.zsxq.com/04uj6AQJE" target="_blank" rel="noopener noreferrer">17、如何实现我的已办任务列表？(opens new window)</a></li><li><a href="https://t.zsxq.com/04Q7UbqBM" target="_blank" rel="noopener noreferrer">18、如何实现任务的审批通过？(opens new window)</a></li><li><a href="https://t.zsxq.com/04BQvJM7y" target="_blank" rel="noopener noreferrer">19、如何实现任务的审批不通过？(opens new window)</a></li><li><a href="https://t.zsxq.com/04Ie2v7m2" target="_blank" rel="noopener noreferrer">20、如何实现流程的审批记录？(opens new window)</a></li><li><a href="https://t.zsxq.com/04R72rzzN" target="_blank" rel="noopener noreferrer">21、如何实现流程的流程图的高亮？(opens new window)</a></li><li><a href="https://t.zsxq.com/04eyRRJ2f" target="_blank" rel="noopener noreferrer">22、如何实现工作流的短信通知？(opens new window)</a></li><li><a href="https://t.zsxq.com/04rFUjIei" target="_blank" rel="noopener noreferrer">23、如何实现 OA 请假的发起？(opens new window)</a></li><li><a href="https://t.zsxq.com/04fMJiufQ" target="_blank" rel="noopener noreferrer">24、如何实现 OA 请假的审批？(opens new window)</a></li></ul><h2 id="_0-如何开启-bpm-模块" tabindex="-1"><a class="header-anchor" href="#_0-如何开启-bpm-模块"><span><a href="https://doc.iocoder.cn/bpm/#_0-%E5%A6%82%E4%BD%95%E5%BC%80%E5%90%AF-bpm-%E6%A8%A1%E5%9D%97" target="_blank" rel="noopener noreferrer">#</a>0. 如何开启 bpm 模块？</span></a></h2><p><code>yudao-module-bpm</code> 模块默认未启用，需要手动开启。步骤如下：</p><p>① 第一步，修改根目录的 <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/pom.xml" target="_blank" rel="noopener noreferrer"><code>pom.xml</code> (opens new window)</a>文件，取消 <code>yudao-module-bpm</code> 模块的注释。</p><figure><img src="https://doc.iocoder.cn/img/工作流/-1.png" alt="引入  模块" tabindex="0" loading="lazy"><figcaption>引入 模块</figcaption></figure><p>② 第二步，修改 <code>yudao-server</code> 的 <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-server/pom.xml" target="_blank" rel="noopener noreferrer"><code>pom.xml</code> (opens new window)</a>文件，取消 <code>yudao-module-bpm-biz</code> 依赖的注释，并进行 IDEA 的 Maven 刷新。</p><figure><img src="https://doc.iocoder.cn/img/工作流/0.png" alt="引入  依赖" tabindex="0" loading="lazy"><figcaption>引入 依赖</figcaption></figure><p>③ 第三步，点击 <a href="https://doc.iocoder.cn/file/bpm.sql" target="_blank" rel="noopener noreferrer"><code>bpm.sql</code></a> 下载，然后导入到数据库中。</p><p>友情提示：↑↑↑ bpm.sql 是可以点击下载的！ ↑↑↑</p><figure><img src="https://doc.iocoder.cn/img/工作流/功能开启/SQL导入.png" alt="导入 " tabindex="0" loading="lazy"><figcaption>导入 </figcaption></figure><p>④ 第四步，重启项目，看到 <code>Property Source flowable-liquibase-override refreshed</code> 说明开启成功。</p><p>另外，启动过程中，Flowable 会自动创建 <code>ACT_</code> 和 <code>FLW_</code> 开头的表。</p><p>如果启动中报 <a href="https://gitee.com/zhijiantianya/ruoyi-vue-pro/issues/I57FYM" target="_blank" rel="noopener noreferrer">MySQL “Specified key was too long; max key length is 1000 bytes” (opens new window)</a>错误，可以将 MySQL 的缺省存储引擎设置为 innodb，即 <code>default-storage-engine=innodb</code> 配置项。</p><h2 id="_1-请假流程【流程表单】" tabindex="-1"><a class="header-anchor" href="#_1-请假流程【流程表单】"><span><a href="https://doc.iocoder.cn/bpm/#_1-%E8%AF%B7%E5%81%87%E6%B5%81%E7%A8%8B%E3%80%90%E6%B5%81%E7%A8%8B%E8%A1%A8%E5%8D%95%E3%80%91" target="_blank" rel="noopener noreferrer">#</a>1. 请假流程【流程表单】</span></a></h2><h3 id="_1-1-第一步-定义流程" tabindex="-1"><a class="header-anchor" href="#_1-1-第一步-定义流程"><span><a href="https://doc.iocoder.cn/bpm/#_1-1-%E7%AC%AC%E4%B8%80%E6%AD%A5-%E5%AE%9A%E4%B9%89%E6%B5%81%E7%A8%8B" target="_blank" rel="noopener noreferrer">#</a>1.1 第一步：定义流程</span></a></h3><p>登录账号 admin、密码 admin123 的用户，扮演【管理员】的角色，进行流程的定义。</p><p>① 访问 [工作流程 -&gt; 流程管理 -&gt; 流程模型] 菜单，点击 [新建流程] 按钮，填写流程标识、流程名称。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/工作流/1.png" alt="新建流程" tabindex="0" loading="lazy"><figcaption>新建流程</figcaption></figure><ul><li>流程标识：对应 BPMN 流程文件 XML 的 <code>id</code> 属性，不能重复，新建后不可修改。</li><li>流程名称：对应 BPMN 流程文件 XML 的 <code>name</code> 属性。</li></ul><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">&lt;!-- 这是一个 BPMN XML 的示例，主要看 id 和 name 属性 --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;?</span><span style="color:#E06C75;--shiki-dark:#E06C75;">xml</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;1.0&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> encoding</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;UTF-8&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">?&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bpmn2:definitions</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> xmlns:xsi</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> xmlns:bpmn2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;http://www.omg.org/spec/BPMN/20100524/MODEL&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> xmlns:bpmndi</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;http://www.omg.org/spec/BPMN/20100524/DI&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;diagram_Process_1647305370393&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> targetNamespace</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;http://activiti.org/bpmn&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bpmn2:process</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;common-form&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;通用表单流程&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> isExecutable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;true&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bpmndi:BPMNDiagram</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;BPMNDiagram_1&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bpmndi:BPMNPlane</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;common-form_di&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> bpmnElement</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;common-form&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bpmndi:BPMNDiagram</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bpmn2:definitions</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><p>② 访问 [工作流程 -&gt; 流程管理 -&gt; 流程表单] 菜单，点击 [新增] 按钮，新增一个名字为 leave-form 的表单。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/工作流/3.png" alt="流程表单新增" tabindex="0" loading="lazy"><figcaption>流程表单新增</figcaption></figure><p>流程表单的实现？</p><p>基于 <a href="https://github.com/JakHuang/form-generator" target="_blank" rel="noopener noreferrer">https://github.com/JakHuang/form-generator (opens new window)</a>项目实现的动态表单。</p><p>回到 [工作流程 -&gt; 流程管理 -&gt; 流程模型] 菜单，点击 [修改流程] 按钮，配置表单类型为流程表单，选择名字为 leave-form 的流程表单。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/工作流/4.png" alt="修改流程" tabindex="0" loading="lazy"><figcaption>修改流程</figcaption></figure><p>③ 点击 [设计流程] 按钮，在线设计请假流程模型，包含两个用户任务：领导审批、HR 审批。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/工作流/5.png" alt="设计流程" tabindex="0" loading="lazy"><figcaption>设计流程</figcaption></figure><p>设计流程的实现？</p><p>基于 <a href="https://github.com/miyuesc/bpmn-process-designer" target="_blank" rel="noopener noreferrer">https://github.com/miyuesc/bpmn-process-designer (opens new window)</a>项目实现，它的底层是 <a href="https://github.com/bpmn-io" target="_blank" rel="noopener noreferrer">bpmn-js (opens new window)</a>。</p><p>④ 点击 [分配规则] 按钮，设置用户任务的审批人。其中，规则类型用于分配用户任务的审批人，目前有 7 种规则：角色、部门成员、部门负责人、岗位、用户、用户组、自定义脚本，基本可以满足绝大多数场景，是不是非常良心。</p><ul><li>设置【领导审批】的规则类型为自定义脚本 + 流程发起人的一级领导，如下图所示： <img src="https://doc.iocoder.cn/img/工作流/6-a.png" alt="分配规则 - 领导审批" loading="lazy"></li><li>设置【HR 审批】的规则类型为岗位 + 人力资源，如下图所示： <img src="https://doc.iocoder.cn/img/工作流/6-b.png" alt="分配规则 - HR 审批" loading="lazy"></li></ul><p>规则类型的实现？</p><p>可见 <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/framework/flowable/core/behavior/BpmUserTaskActivityBehavior.java" target="_blank" rel="noopener noreferrer">BpmUserTaskActivityBehavior (opens new window)</a>代码，目前暂时支持分配一个审批人。</p><p>⑤ 点击 [发布流程] 按钮，把定义的流程模型部署出去。部署成功后，就可以发起该流程了。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/工作流/7.png" alt="发布路程" tabindex="0" loading="lazy"><figcaption>发布路程</figcaption></figure><p>修改流程后，需要重新发布流程吗？</p><p>需要，<strong>必须重新发布</strong>才能生效。每次流程发布后，会生成一个新的流程定义，版本号从 v1 开始递增。</p><p>发布成功后，会部署新版本的流程定义，旧版本的流程定义将被挂起。当然，已经发起的流程不会受到影响，还是走老的流程定义。</p><h3 id="_1-2-第二步-发起流程" tabindex="-1"><a class="header-anchor" href="#_1-2-第二步-发起流程"><span><a href="https://doc.iocoder.cn/bpm/#_1-2-%E7%AC%AC%E4%BA%8C%E6%AD%A5-%E5%8F%91%E8%B5%B7%E6%B5%81%E7%A8%8B" target="_blank" rel="noopener noreferrer">#</a>1.2 第二步：发起流程</span></a></h3><p>登录账号 admin、密码 admin123 的用户，扮演【员工】的角色，进行流程的发起。</p><p>① 访问 [工作流程 -&gt; 任务管理 -&gt; 我的流程] 菜单，点击 [发起流程] 按钮，可以看到可以选择的流程定义的列表。</p><figure><img src="https://doc.iocoder.cn/img/工作流/33.png" alt="流程定义的列表" tabindex="0" loading="lazy"><figcaption>流程定义的列表</figcaption></figure><p>② 选择名字为通用表单的流程定义，发起请假流程。填写请假表单信息如下：</p><figure><img src="https://doc.iocoder.cn/img/工作流/10.png" alt="发起流程" tabindex="0" loading="lazy"><figcaption>发起流程</figcaption></figure><p>③ 点击提交成功后，可在我的流程中，可看到该流程的状态、结果。</p><figure><img src="https://doc.iocoder.cn/img/工作流/11.png" alt="我的流程" tabindex="0" loading="lazy"><figcaption>我的流程</figcaption></figure><p>④ 点击 [详情] 按钮，可以查看申请的表单信息、审批记录、流程跟踪图。</p><figure><img src="https://doc.iocoder.cn/img/工作流/12.png" alt="详情" tabindex="0" loading="lazy"><figcaption>详情</figcaption></figure><h3 id="_1-2-第三步-审批流程-领导审批" tabindex="-1"><a class="header-anchor" href="#_1-2-第三步-审批流程-领导审批"><span><a href="https://doc.iocoder.cn/bpm/#_1-2-%E7%AC%AC%E4%B8%89%E6%AD%A5-%E5%AE%A1%E6%89%B9%E6%B5%81%E7%A8%8B-%E9%A2%86%E5%AF%BC%E5%AE%A1%E6%89%B9" target="_blank" rel="noopener noreferrer">#</a>1.2 第三步：审批流程（领导审批）</span></a></h3><p>登录账号 test、密码 test123 的用户，扮演【审批人】的角色，进行请假流程的【领导审批】任务。</p><p>① 访问 [工作流程 -&gt; 任务管理 -&gt; 待办任务] 菜单，可以查询到需要审批的任务。</p><figure><img src="https://doc.iocoder.cn/img/工作流/13.png" alt="待办任务" tabindex="0" loading="lazy"><figcaption>待办任务</figcaption></figure><p>② 点击 [审批] 按钮，填写审批建议，并点击 [通过] 按钮，这样任务的审批就完成了。</p><figure><img src="https://doc.iocoder.cn/img/工作流/14.png" alt="部门领导审批" tabindex="0" loading="lazy"><figcaption>部门领导审批</figcaption></figure><p>③ 访问 [工作流程 -&gt; 任务管理 -&gt; 已办任务] 菜单，可以查询到已经审批的任务。</p><figure><img src="https://doc.iocoder.cn/img/工作流/34.png" alt="已办任务" tabindex="0" loading="lazy"><figcaption>已办任务</figcaption></figure><hr><p>此时，使用【员工】的角色，访问 [工作流程 -&gt; 任务管理 -&gt; 我的流程] 菜单，可以看到流程流转到了【HR 审批】任务。</p><figure><img src="https://doc.iocoder.cn/img/工作流/15.png" alt="部门领导审批后我的流程" tabindex="0" loading="lazy"><figcaption>部门领导审批后我的流程</figcaption></figure><h3 id="_1-3-第三步-审批流程-hr-审批" tabindex="-1"><a class="header-anchor" href="#_1-3-第三步-审批流程-hr-审批"><span><a href="https://doc.iocoder.cn/bpm/#_1-3-%E7%AC%AC%E4%B8%89%E6%AD%A5-%E5%AE%A1%E6%89%B9%E6%B5%81%E7%A8%8B-hr-%E5%AE%A1%E6%89%B9" target="_blank" rel="noopener noreferrer">#</a>1.3 第三步：审批流程（HR 审批）</span></a></h3><p>登录账号 hrmgr、密码 hr123 的用户，扮演【审批人】的角色，进行请假流程的【HR 审批】任务。</p><p>① 访问 [工作流程 -&gt; 任务管理 -&gt; 待办任务] 菜单，点击 [审批] 按钮，填写审批建议，并点击 [通过] 按钮。</p><hr><p>此时，使用【员工】的角色，访问 [工作流程 -&gt; 任务管理 -&gt; 我的流程] 菜单，可以看到流程处理结束，最终审批通过。</p><figure><img src="https://doc.iocoder.cn/img/工作流/18.png" alt="请假流程最终状态" tabindex="0" loading="lazy"><figcaption>请假流程最终状态</figcaption></figure><h2 id="_2-请假流程【业务表单】" tabindex="-1"><a class="header-anchor" href="#_2-请假流程【业务表单】"><span><a href="https://doc.iocoder.cn/bpm/#_2-%E8%AF%B7%E5%81%87%E6%B5%81%E7%A8%8B%E3%80%90%E4%B8%9A%E5%8A%A1%E8%A1%A8%E5%8D%95%E3%80%91" target="_blank" rel="noopener noreferrer">#</a>2. 请假流程【业务表单】</span></a></h2><p>根据业务需要，业务通过建立独立的数据库表（业务表）记录申请信息，而流程引擎只负责推动流程的前进或者结束。两者需要进行<strong>双向</strong>的关联：</p><ul><li>每一条业务表记录，通过它的流程实例的编号( <code>process_instance_id</code> )指向对应的流程实例</li><li>每一个流程实例，通过它的业务键( <code>BUSINESS_KEY_</code> ) 指向对应的业务表记录。</li></ul><p>以项目中提供的 <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/oa/BpmOALeaveServiceImpl.java" target="_blank" rel="noopener noreferrer">OALeave (opens new window)</a>请假举例子，它的业务表 <code>bpm_oa_leave</code> 和流程引擎的流程实例的关系如下图：</p><figure><img src="https://doc.iocoder.cn/img/工作流/19.png" alt="请假单数据库表" tabindex="0" loading="lazy"><figcaption>请假单数据库表</figcaption></figure><p>也因为业务建立了独立的业务表，所以必须开发业务表对应的列表、表单、详情页面。不过，审核相关的功能是无需重新开发的，原因是业务表已经关联对应的流程实例，流程引擎审批流程实例即可。</p><p>下面，我们以项目中的 <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/oa/BpmOALeaveServiceImpl.java" target="_blank" rel="noopener noreferrer">OALeave (opens new window)</a>为例子，详细讲解下业务表单的开发与使用的过程。</p><h3 id="_2-0-第零步-业务开发" tabindex="-1"><a class="header-anchor" href="#_2-0-第零步-业务开发"><span><a href="https://doc.iocoder.cn/bpm/#_2-0-%E7%AC%AC%E9%9B%B6%E6%AD%A5-%E4%B8%9A%E5%8A%A1%E5%BC%80%E5%8F%91" target="_blank" rel="noopener noreferrer">#</a>2.0 第零步：业务开发</span></a></h3><p>① 新建业务表 <code>bpm_oa_leave</code>，建表语句如下：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">CREATE</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> TABLE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> \`</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">bpm_oa_leave</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">\` (</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">  \`id\`</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> bigint</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> NOT NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> AUTO_INCREMENT COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;请假表单主键&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">  \`user_id\`</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> bigint</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> NOT NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;申请人的用户编号&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">  \`type\`</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> tinyint</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> NOT NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;请假类型&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">  \`reason\`</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">200</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#C678DD;--shiki-dark:#C678DD;">CHARACTER</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> SET</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> utf8mb4 </span><span style="color:#C678DD;--shiki-dark:#C678DD;">COLLATE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> utf8mb4_unicode_ci </span><span style="color:#C678DD;--shiki-dark:#C678DD;">NOT NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;请假原因&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">  \`start_time\`</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> datetime</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> NOT NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;开始时间&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">  \`end_time\`</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> datetime</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> NOT NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;结束时间&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">  \`day\`</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> tinyint</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> NOT NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;请假天数&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">  \`result\`</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> tinyint</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> NOT NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;请假结果&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">  \`process_instance_id\`</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">64</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#C678DD;--shiki-dark:#C678DD;">CHARACTER</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> SET</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> utf8mb4 </span><span style="color:#C678DD;--shiki-dark:#C678DD;">COLLATE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> utf8mb4_unicode_ci </span><span style="color:#C678DD;--shiki-dark:#C678DD;">DEFAULT</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;流程实例的编号&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">  \`creator\`</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">64</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#C678DD;--shiki-dark:#C678DD;">CHARACTER</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> SET</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> utf8mb4 </span><span style="color:#C678DD;--shiki-dark:#C678DD;">COLLATE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> utf8mb4_unicode_ci </span><span style="color:#C678DD;--shiki-dark:#C678DD;">DEFAULT</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;创建者&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">  \`create_time\`</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> datetime</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> NOT NULL</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> DEFAULT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> CURRENT_TIMESTAMP COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;创建时间&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">  \`updater\`</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">64</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#C678DD;--shiki-dark:#C678DD;">CHARACTER</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> SET</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> utf8mb4 </span><span style="color:#C678DD;--shiki-dark:#C678DD;">COLLATE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> utf8mb4_unicode_ci </span><span style="color:#C678DD;--shiki-dark:#C678DD;">DEFAULT</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;更新者&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">  \`update_time\`</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> datetime</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> NOT NULL</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> DEFAULT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> CURRENT_TIMESTAMP </span><span style="color:#C678DD;--shiki-dark:#C678DD;">ON</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> UPDATE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> CURRENT_TIMESTAMP COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;更新时间&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">  \`deleted\`</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> bit</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#C678DD;--shiki-dark:#C678DD;">NOT NULL</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> DEFAULT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> b</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;0&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;是否删除&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">  \`tenant_id\`</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> bigint</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> NOT NULL</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> DEFAULT</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;0&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;租户编号&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  PRIMARY KEY</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (</span><span style="color:#98C379;--shiki-dark:#98C379;">\`id\`</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#C678DD;--shiki-dark:#C678DD;">USING</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> BTREE</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) ENGINE</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">InnoDB AUTO_INCREMENT</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#D19A66;--shiki-dark:#D19A66;">26</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> DEFAULT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> CHARSET</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">utf8mb4 </span><span style="color:#C678DD;--shiki-dark:#C678DD;">COLLATE</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">utf8mb4_unicode_ci COMMENT</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;OA 请假申请表&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>process_instance_id</code> 字段，关联流程引擎的流程实例对应的 <code>ACT_HI_PROCINST</code> 表的 <code>PROC_INST_ID_</code> 字段</li><li><code>result</code> 字段，请假结果，需要通过 Listener 监听回调结果，稍后来看看</li></ul><p>② 实现业务表的【后端】业务逻辑，具体代码可以看看如下两个类：</p><ul><li><a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/oa/BpmOALeaveController.java" target="_blank" rel="noopener noreferrer">BpmOALeaveController(opens new window)</a></li><li><a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/oa/BpmOALeaveServiceImpl.java" target="_blank" rel="noopener noreferrer">BpmOALeaveServiceImpl(opens new window)</a></li></ul><p>重点是看流程发起的逻辑，它定义了 <code>/bpm/oa/leave/create</code> 给业务的表单界面调用，UML 时序图如下：</p><figure><img src="https://doc.iocoder.cn/img/工作流/35.png" alt="请假单数据库表" tabindex="0" loading="lazy"><figcaption>请假单数据库表</figcaption></figure><p>具体的实现代码比较简单，如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/工作流/36.png" alt="BpmOALeaveServiceImpl 创建流程的逻辑" tabindex="0" loading="lazy"><figcaption>BpmOALeaveServiceImpl 创建流程的逻辑</figcaption></figure><ul><li><code>PROCESS_KEY</code> 静态变量：是业务对应的流程模型的编号，稍后会进行创建编号为 oa_leave 的流程模型。</li><li><a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-bpm/yudao-module-bpm-api/src/main/java/cn/iocoder/yudao/module/bpm/api/task/BpmProcessInstanceApi.java" target="_blank" rel="noopener noreferrer">BpmProcessInstanceApi (opens new window)</a>定义了 <code>#createProcessInstance(...)</code> 方法，用于创建流程实例，业务无需关心底层是 Activiti 还是 Flowable 引擎，甚至未来可能的 Camunda 引擎。</li></ul><p>③ 实现业务表的【前端】业务逻辑，具体代码可以看看如下三个页面：</p><ul><li><a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-ui-admin/src/views/bpm/oa/leave/create.vue" target="_blank" rel="noopener noreferrer"><code>leave/create.vue</code>(opens new window)</a></li><li><a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-ui-admin/src/views/bpm/oa/leave/detail.vue" target="_blank" rel="noopener noreferrer"><code>leave/detail.vue</code>(opens new window)</a></li><li><a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-ui-admin/src/views/bpm/oa/leave/index.vue" target="_blank" rel="noopener noreferrer"><code>leave/index.vue</code>(opens new window)</a></li></ul><p>另外，在 <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-ui-admin/src/router/index.js" target="_blank" rel="noopener noreferrer"><code>router/index.js</code> (opens new window)</a>中定义 <code>create.vue</code> 和 <code>detail.vue</code> 的路由，配置如下：</p><div class="language-javascript line-numbers-mode" data-ext="javascript" data-title="javascript"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    path</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;/bpm&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    component</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E06C75;--shiki-dark:#E06C75;">Layout</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    hidden</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    redirect</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;noredirect&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    children</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: [{</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        path</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;oa/leave/create&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        component</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: (</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">resolve</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#C678DD;--shiki-dark:#C678DD;">=&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> require</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">([</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;@/views/bpm/oa/leave/create&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">], </span><span style="color:#E06C75;--shiki-dark:#E06C75;">resolve</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;发起 OA 请假&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        meta</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: {</span><span style="color:#E06C75;--shiki-dark:#E06C75;">title</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;发起 OA 请假&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E06C75;--shiki-dark:#E06C75;">icon</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;form&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E06C75;--shiki-dark:#E06C75;">activeMenu</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;/bpm/oa/leave&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      }, {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        path</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;oa/leave/detail&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        component</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: (</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">resolve</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#C678DD;--shiki-dark:#C678DD;">=&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> require</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">([</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;@/views/bpm/oa/leave/detail&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">], </span><span style="color:#E06C75;--shiki-dark:#E06C75;">resolve</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;查看 OA 请假&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        meta</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: {</span><span style="color:#E06C75;--shiki-dark:#E06C75;">title</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;查看 OA 请假&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E06C75;--shiki-dark:#E06C75;">icon</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;view&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E06C75;--shiki-dark:#E06C75;">activeMenu</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;/bpm/oa/leave&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    ]</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>为什么要做独立的 <code>create.vue</code> 和 <code>index.vue</code> 页面？</p><ul><li>创建流程时，需要跳转到 <code>create.vue</code> 页面，填写业务表的信息，才能提交流程。</li><li>审批流程时，需要跳转到 <code>detail.vue</code> 页面，查看业务表的信息。</li></ul><p>④ 实现业务表的【后端】监听逻辑，具体可见 <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/oa/listener/BpmOALeaveResultListener.java" target="_blank" rel="noopener noreferrer">BpmOALeaveResultListener (opens new window)</a>监听器。它实现流程引擎定义的 <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/framework/bpm/core/event/BpmProcessInstanceResultEventListener.java" target="_blank" rel="noopener noreferrer">BpmProcessInstanceResultEventListener (opens new window)</a>抽象类，在流程实例结束时，回调通知它<strong>最终的</strong>结果是通过还是不通过。代码如下图：</p><figure><img src="https://doc.iocoder.cn/img/工作流/37.png" alt="BpmOALeaveServiceImpl 创建流程的逻辑" tabindex="0" loading="lazy"><figcaption>BpmOALeaveServiceImpl 创建流程的逻辑</figcaption></figure><hr><p>至此，我们了解了 OALeave 使用业务表单所涉及到的开发，下面我们来定义对应的流程、发起该流程、并审批该流程。</p><h3 id="_2-1-第一步-定义流程" tabindex="-1"><a class="header-anchor" href="#_2-1-第一步-定义流程"><span><a href="https://doc.iocoder.cn/bpm/#_2-1-%E7%AC%AC%E4%B8%80%E6%AD%A5-%E5%AE%9A%E4%B9%89%E6%B5%81%E7%A8%8B" target="_blank" rel="noopener noreferrer">#</a>2.1 第一步：定义流程</span></a></h3><p>登录账号 admin、密码 admin123 的用户，扮演【管理员】的角色，进行流程的定义。</p><p>① 访问 [工作流程 -&gt; 流程管理 -&gt; 流程模型] 菜单，点击 [新建流程] 按钮，填写流程标识、流程名称。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/工作流/41.png" alt="新建流程" tabindex="0" loading="lazy"><figcaption>新建流程</figcaption></figure><p>注意，流程标识需要填 oa_leave。因为在 BpmOALeaveServiceImpl 类中，规定了对应的流程标识为 oa_leave。</p><p>② 点击 [修改流程] 按钮，配置表单类型为业务表单，填写表单提交路由为 <code>/bpm/oa/leave/create</code>（用于发起流程时，跳转的业务表单的路由）、表单查看路由为 <code>/bpm/oa/leave/detail</code>（用于在流程详情中，点击查看表单的路由）。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/工作流/21.png" alt="修改流程" tabindex="0" loading="lazy"><figcaption>修改流程</figcaption></figure><p>③ 点击 [设计流程] 按钮，在线设计请假流程模型，包含两个用户任务：领导审批、HR 审批。如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/工作流/23.png" alt="设计流程" tabindex="0" loading="lazy"><figcaption>设计流程</figcaption></figure><p>可以点击 <a href="https://doc.iocoder.cn/img/%E5%B7%A5%E4%BD%9C%E6%B5%81/oa_leave_bpmn.XML" target="_blank" rel="noopener noreferrer"><code>oa_leave_bpmn.XML</code></a> 进行下载，然后点击 [打开文件] 按钮，进行导入。</p><p>④ 点击 [分配规则] 按钮，设置用户任务的审批人。</p><ul><li>设置【领导审批】的规则类型为自定义脚本 + 流程发起人的一级领导，如下图所示： <img src="https://doc.iocoder.cn/img/工作流/6-a.png" alt="分配规则 - 领导审批" loading="lazy"></li><li>设置【HR 审批】的规则类型为岗位 + 人力资源，如下图所示： <img src="https://doc.iocoder.cn/img/工作流/6-b.png" alt="分配规则 - HR 审批" loading="lazy"></li></ul><p>⑤ 点击 [发布流程] 按钮，把定义的流程模型部署出去。部署成功后，就可以发起该流程了。</p><h3 id="_2-1-第二步-发起流程" tabindex="-1"><a class="header-anchor" href="#_2-1-第二步-发起流程"><span><a href="https://doc.iocoder.cn/bpm/#_2-1-%E7%AC%AC%E4%BA%8C%E6%AD%A5-%E5%8F%91%E8%B5%B7%E6%B5%81%E7%A8%8B" target="_blank" rel="noopener noreferrer">#</a>2.1 第二步：发起流程</span></a></h3><p>登录账号 admin、密码 admin123 的用户，扮演【员工】的角色，进行流程的发起。</p><p>① 发起业务表单请假流程，两种路径：</p><ol><li>访问 [工作流程 -&gt; 任务管理 -&gt; 我的流程] 菜单，点击 [发起流程] 按钮，会跳转到流程模型 oa_leave 配置的表单提交路由。 <img src="https://doc.iocoder.cn/img/工作流/25.png" alt="路径一：我的流程 -&gt; 发起流程" loading="lazy"></li><li>访问 [工作流程 -&gt; 请假查询] 菜单，点击 [发起请假] 按钮。 <img src="https://doc.iocoder.cn/img/工作流/26.png" alt="路径二：请假查询 -&gt; 发起请假" loading="lazy"></li></ol><p>② 填写一个小于等于 3 天的请假，只会走【领导审批】任务；填写一个大于 3 天的请假，在走完【领导审批】任务后，会额外走【HR 审批】任务。</p><p>后续的流程，和「1. 请假流程【流程表单】」是基本一致的，这里就不重复赘述，当然你还是要试着跑一跑，了解整个的过程。</p><h3 id="_2-3-第三步-审批流程-领导审批" tabindex="-1"><a class="header-anchor" href="#_2-3-第三步-审批流程-领导审批"><span><a href="https://doc.iocoder.cn/bpm/#_2-3-%E7%AC%AC%E4%B8%89%E6%AD%A5-%E5%AE%A1%E6%89%B9%E6%B5%81%E7%A8%8B-%E9%A2%86%E5%AF%BC%E5%AE%A1%E6%89%B9" target="_blank" rel="noopener noreferrer">#</a>2.3 第三步：审批流程（领导审批）</span></a></h3><p>略~自己跑</p><h3 id="_2-4-第三步-审批流程-hr-审批" tabindex="-1"><a class="header-anchor" href="#_2-4-第三步-审批流程-hr-审批"><span><a href="https://doc.iocoder.cn/bpm/#_2-4-%E7%AC%AC%E4%B8%89%E6%AD%A5-%E5%AE%A1%E6%89%B9%E6%B5%81%E7%A8%8B-hr-%E5%AE%A1%E6%89%B9" target="_blank" rel="noopener noreferrer">#</a>2.4 第三步：审批流程（HR 审批）</span></a></h3><p>略~自己跑</p><h2 id="_2-流程通知" tabindex="-1"><a class="header-anchor" href="#_2-流程通知"><span><a href="https://doc.iocoder.cn/bpm/#_2-%E6%B5%81%E7%A8%8B%E9%80%9A%E7%9F%A5" target="_blank" rel="noopener noreferrer">#</a>2. 流程通知</span></a></h2><p>流程在发生变化时，会发送通知给相关的人。目前有三个场景会有通知，通过短信的方式。</p><figure><img src="https://doc.iocoder.cn/img/工作流/53.png" alt="短信通知" tabindex="0" loading="lazy"><figcaption>短信通知</figcaption></figure><h2 id="_3-流程图示例" tabindex="-1"><a class="header-anchor" href="#_3-流程图示例"><span><a href="https://doc.iocoder.cn/bpm/#_3-%E6%B5%81%E7%A8%8B%E5%9B%BE%E7%A4%BA%E4%BE%8B" target="_blank" rel="noopener noreferrer">#</a>3. 流程图示例</span></a></h2><h3 id="_3-1-会签" tabindex="-1"><a class="header-anchor" href="#_3-1-会签"><span><a href="https://doc.iocoder.cn/bpm/#_3-1-%E4%BC%9A%E7%AD%BE" target="_blank" rel="noopener noreferrer">#</a>3.1 会签</span></a></h3><p>定义：指同一个审批节点设置多个人，如 ABC 三人，三人会同时收到审批，需全部同意之后，审批才可到下一审批节点。</p><p>配置方式如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/工作流/60.png" alt="会签示例" tabindex="0" loading="lazy"><figcaption>会签示例</figcaption></figure><p>重点是【完成条件】为 <code>\${ nrOfCompletedInstances== nrOfInstances }</code>。</p><h3 id="_3-2-或签" tabindex="-1"><a class="header-anchor" href="#_3-2-或签"><span><a href="https://doc.iocoder.cn/bpm/#_3-2-%E6%88%96%E7%AD%BE" target="_blank" rel="noopener noreferrer">#</a>3.2 或签</span></a></h3><p>定义：指同一个审批节点设置多个人，如ABC三人，三人会同时收到审批，只要其中任意一人审批即可到下一审批节点。</p><p>配置方式如下图所示：</p><figure><img src="https://doc.iocoder.cn/img/工作流/61.png" alt="或签示例" tabindex="0" loading="lazy"><figcaption>或签示例</figcaption></figure><p>重点是【完成条件】为 <code>\${ nrOfCompletedInstances== 1 }</code>。</p><h2 id="_4-如何使用-activiti" tabindex="-1"><a class="header-anchor" href="#_4-如何使用-activiti"><span><a href="https://doc.iocoder.cn/bpm/#_4-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-activiti" target="_blank" rel="noopener noreferrer">#</a>4. 如何使用 Activiti？</span></a></h2><p>Activiti 和 Flowable 提供的 Java API 是基本一致的，例如说 Flowable 的 <code>org.flowable.engine.RepositoryService</code> 对应 Activiti 的 <code>org.activiti.engine .RepositoryService</code>。所以，我们可以修改 <code>import</code> 的包路径来替换。</p><p>另外，在项目的老版本，我们也提供了 Activiti 实现，你可以具体参考下：</p><ul><li><a href="https://gitee.com/zhijiantianya/ruoyi-vue-pro/tree/v1.6.2/yudao-framework/yudao-spring-boot-starter-activiti" target="_blank" rel="noopener noreferrer"><code>yudao-spring-boot-starter-activiti</code>(opens new window)</a></li><li><a href="https://gitee.com/zhijiantianya/ruoyi-vue-pro/tree/v1.6.2/yudao-module-bpm/yudao-module-bpm-biz-activiti" target="_blank" rel="noopener noreferrer"><code>yudao-module-bpm-biz-activiti</code>(opens new window)</a></li></ul><figure><img src="https://doc.iocoder.cn/img/工作流/52.png" alt="项目结构" tabindex="0" loading="lazy"><figcaption>项目结构</figcaption></figure><h2 id="_4-迭代计划" tabindex="-1"><a class="header-anchor" href="#_4-迭代计划"><span><a href="https://doc.iocoder.cn/bpm/#_4-%E8%BF%AD%E4%BB%A3%E8%AE%A1%E5%88%92" target="_blank" rel="noopener noreferrer">#</a>4. 迭代计划</span></a></h2><p>工作流的基本功能已经开发完成，当然还是有很多功能需要进行建设。已经整理在 <a href="https://gitee.com/zhijiantianya/ruoyi-vue-pro/issues/I4UPEU" target="_blank" rel="noopener noreferrer">https://gitee.com/zhijiantianya/ruoyi-vue-pro/issues/I4UPEU (opens new window)</a>链接中，你也可以提一些功能的想法。</p><p>如果您有参与工作流开发的想法，可以添加我的微信 <strong>wangwenbin10</strong> ！</p><p>艿艿会带着你做技术方案，Code Review 你的每一行代码的实现。相信在这个过程中，你会收获不错的技术成长！</p><p>上次更新: 2023/07/31, 01:33:57</p>`,150)]))}const t=e(o,[["render",r],["__file","工作流（Flowable）会签、或签.html.vue"]]),c=JSON.parse('{"path":"/posts/Java/Ruoyi-Vue-Pro/4.%E5%B7%A5%E4%BD%9C%E6%B5%81%E6%89%8B%E5%86%8C/%E5%B7%A5%E4%BD%9C%E6%B5%81%EF%BC%88Flowable%EF%BC%89%E4%BC%9A%E7%AD%BE%E3%80%81%E6%88%96%E7%AD%BE.html","title":"工作流（Flowable）会签、或签","lang":"zh-CN","frontmatter":{"description":"工作流（Flowable）会签、或签 项目基于 Flowable 实现了工作流的功能。本章节，我们将介绍工作流的相关功能。 以请假流程为例，讲解系统支持的两种表单方式的工作流： 流程表单：在线配置动态表单，无需建表与开发 业务表单：业务需建立独立的数据库表，并开发对应的表单、详情界面 整个过程包括： 定义流程：【管理员】新建流程、设计流程模型、并设置用...","watermark":true,"head":[["meta",{"property":"og:url","content":"https://mrjackc.github.io/posts/Java/Ruoyi-Vue-Pro/4.%E5%B7%A5%E4%BD%9C%E6%B5%81%E6%89%8B%E5%86%8C/%E5%B7%A5%E4%BD%9C%E6%B5%81%EF%BC%88Flowable%EF%BC%89%E4%BC%9A%E7%AD%BE%E3%80%81%E6%88%96%E7%AD%BE.html"}],["meta",{"property":"og:site_name","content":"mrjason’s Blog"}],["meta",{"property":"og:title","content":"工作流（Flowable）会签、或签"}],["meta",{"property":"og:description","content":"工作流（Flowable）会签、或签 项目基于 Flowable 实现了工作流的功能。本章节，我们将介绍工作流的相关功能。 以请假流程为例，讲解系统支持的两种表单方式的工作流： 流程表单：在线配置动态表单，无需建表与开发 业务表单：业务需建立独立的数据库表，并开发对应的表单、详情界面 整个过程包括： 定义流程：【管理员】新建流程、设计流程模型、并设置用..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://doc.iocoder.cn/img/%E5%B7%A5%E4%BD%9C%E6%B5%81/54.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-21T07:41:53.000Z"}],["meta",{"property":"article:author","content":"MrJason"}],["meta",{"property":"article:modified_time","content":"2024-11-21T07:41:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"工作流（Flowable）会签、或签\\",\\"image\\":[\\"https://doc.iocoder.cn/img/%E5%B7%A5%E4%BD%9C%E6%B5%81/54.png\\",\\"https://doc.iocoder.cn/img/%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/zsxq_bpm.png\\",\\"https://doc.iocoder.cn/img/%E5%B7%A5%E4%BD%9C%E6%B5%81/-1.png\\",\\"https://doc.iocoder.cn/img/%E5%B7%A5%E4%BD%9C%E6%B5%81/0.png\\",\\"https://doc.iocoder.cn/img/%E5%B7%A5%E4%BD%9C%E6%B5%81/%E5%8A%9F%E8%83%BD%E5%BC%80%E5%90%AF/SQL%E5%AF%BC%E5%85%A5.png\\",\\"https://doc.iocoder.cn/img/%E5%B7%A5%E4%BD%9C%E6%B5%81/1.png\\",\\"https://doc.iocoder.cn/img/%E5%B7%A5%E4%BD%9C%E6%B5%81/3.png\\",\\"https://doc.iocoder.cn/img/%E5%B7%A5%E4%BD%9C%E6%B5%81/4.png\\",\\"https://doc.iocoder.cn/img/%E5%B7%A5%E4%BD%9C%E6%B5%81/5.png\\",\\"https://doc.iocoder.cn/img/%E5%B7%A5%E4%BD%9C%E6%B5%81/6-a.png\\",\\"https://doc.iocoder.cn/img/%E5%B7%A5%E4%BD%9C%E6%B5%81/6-b.png\\",\\"https://doc.iocoder.cn/img/%E5%B7%A5%E4%BD%9C%E6%B5%81/7.png\\",\\"https://doc.iocoder.cn/img/%E5%B7%A5%E4%BD%9C%E6%B5%81/33.png\\",\\"https://doc.iocoder.cn/img/%E5%B7%A5%E4%BD%9C%E6%B5%81/10.png\\",\\"https://doc.iocoder.cn/img/%E5%B7%A5%E4%BD%9C%E6%B5%81/11.png\\",\\"https://doc.iocoder.cn/img/%E5%B7%A5%E4%BD%9C%E6%B5%81/12.png\\",\\"https://doc.iocoder.cn/img/%E5%B7%A5%E4%BD%9C%E6%B5%81/13.png\\",\\"https://doc.iocoder.cn/img/%E5%B7%A5%E4%BD%9C%E6%B5%81/14.png\\",\\"https://doc.iocoder.cn/img/%E5%B7%A5%E4%BD%9C%E6%B5%81/34.png\\",\\"https://doc.iocoder.cn/img/%E5%B7%A5%E4%BD%9C%E6%B5%81/15.png\\",\\"https://doc.iocoder.cn/img/%E5%B7%A5%E4%BD%9C%E6%B5%81/18.png\\",\\"https://doc.iocoder.cn/img/%E5%B7%A5%E4%BD%9C%E6%B5%81/19.png\\",\\"https://doc.iocoder.cn/img/%E5%B7%A5%E4%BD%9C%E6%B5%81/35.png\\",\\"https://doc.iocoder.cn/img/%E5%B7%A5%E4%BD%9C%E6%B5%81/36.png\\",\\"https://doc.iocoder.cn/img/%E5%B7%A5%E4%BD%9C%E6%B5%81/37.png\\",\\"https://doc.iocoder.cn/img/%E5%B7%A5%E4%BD%9C%E6%B5%81/41.png\\",\\"https://doc.iocoder.cn/img/%E5%B7%A5%E4%BD%9C%E6%B5%81/21.png\\",\\"https://doc.iocoder.cn/img/%E5%B7%A5%E4%BD%9C%E6%B5%81/23.png\\",\\"https://doc.iocoder.cn/img/%E5%B7%A5%E4%BD%9C%E6%B5%81/6-a.png\\",\\"https://doc.iocoder.cn/img/%E5%B7%A5%E4%BD%9C%E6%B5%81/6-b.png\\",\\"https://doc.iocoder.cn/img/%E5%B7%A5%E4%BD%9C%E6%B5%81/25.png\\",\\"https://doc.iocoder.cn/img/%E5%B7%A5%E4%BD%9C%E6%B5%81/26.png\\",\\"https://doc.iocoder.cn/img/%E5%B7%A5%E4%BD%9C%E6%B5%81/53.png\\",\\"https://doc.iocoder.cn/img/%E5%B7%A5%E4%BD%9C%E6%B5%81/60.png\\",\\"https://doc.iocoder.cn/img/%E5%B7%A5%E4%BD%9C%E6%B5%81/61.png\\",\\"https://doc.iocoder.cn/img/%E5%B7%A5%E4%BD%9C%E6%B5%81/52.png\\"],\\"dateModified\\":\\"2024-11-21T07:41:53.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MrJason\\",\\"url\\":\\"https://mrjackc.github.io\\"}]}"]]},"headers":[{"level":2,"title":"#0. 如何开启 bpm 模块？","slug":"_0-如何开启-bpm-模块","link":"#_0-如何开启-bpm-模块","children":[]},{"level":2,"title":"#1. 请假流程【流程表单】","slug":"_1-请假流程【流程表单】","link":"#_1-请假流程【流程表单】","children":[{"level":3,"title":"#1.1 第一步：定义流程","slug":"_1-1-第一步-定义流程","link":"#_1-1-第一步-定义流程","children":[]},{"level":3,"title":"#1.2 第二步：发起流程","slug":"_1-2-第二步-发起流程","link":"#_1-2-第二步-发起流程","children":[]},{"level":3,"title":"#1.2 第三步：审批流程（领导审批）","slug":"_1-2-第三步-审批流程-领导审批","link":"#_1-2-第三步-审批流程-领导审批","children":[]},{"level":3,"title":"#1.3 第三步：审批流程（HR 审批）","slug":"_1-3-第三步-审批流程-hr-审批","link":"#_1-3-第三步-审批流程-hr-审批","children":[]}]},{"level":2,"title":"#2. 请假流程【业务表单】","slug":"_2-请假流程【业务表单】","link":"#_2-请假流程【业务表单】","children":[{"level":3,"title":"#2.0 第零步：业务开发","slug":"_2-0-第零步-业务开发","link":"#_2-0-第零步-业务开发","children":[]},{"level":3,"title":"#2.1 第一步：定义流程","slug":"_2-1-第一步-定义流程","link":"#_2-1-第一步-定义流程","children":[]},{"level":3,"title":"#2.1 第二步：发起流程","slug":"_2-1-第二步-发起流程","link":"#_2-1-第二步-发起流程","children":[]},{"level":3,"title":"#2.3 第三步：审批流程（领导审批）","slug":"_2-3-第三步-审批流程-领导审批","link":"#_2-3-第三步-审批流程-领导审批","children":[]},{"level":3,"title":"#2.4 第三步：审批流程（HR 审批）","slug":"_2-4-第三步-审批流程-hr-审批","link":"#_2-4-第三步-审批流程-hr-审批","children":[]}]},{"level":2,"title":"#2. 流程通知","slug":"_2-流程通知","link":"#_2-流程通知","children":[]},{"level":2,"title":"#3. 流程图示例","slug":"_3-流程图示例","link":"#_3-流程图示例","children":[{"level":3,"title":"#3.1 会签","slug":"_3-1-会签","link":"#_3-1-会签","children":[]},{"level":3,"title":"#3.2 或签","slug":"_3-2-或签","link":"#_3-2-或签","children":[]}]},{"level":2,"title":"#4. 如何使用 Activiti？","slug":"_4-如何使用-activiti","link":"#_4-如何使用-activiti","children":[]},{"level":2,"title":"#4. 迭代计划","slug":"_4-迭代计划","link":"#_4-迭代计划","children":[]}],"git":{"createdTime":1732174913000,"updatedTime":1732174913000,"contributors":[{"name":"MrJason","email":"845886914@qq.com","commits":1}]},"readingTime":{"minutes":16.37,"words":4910},"filePathRelative":"posts/Java/Ruoyi-Vue-Pro/4.工作流手册/工作流（Flowable）会签、或签.md","localizedDate":"2024年11月21日","excerpt":"\\n<p>项目基于 Flowable 实现了工作流的功能。本章节，我们将介绍工作流的相关功能。</p>\\n<p>以请假流程为例，讲解系统支持的两种表单方式的工作流：</p>\\n<ol>\\n<li>流程表单：在线配置动态表单，无需建表与开发</li>\\n<li>业务表单：业务需建立独立的数据库表，并开发对应的表单、详情界面</li>\\n</ol>\\n<p>整个过程包括：</p>\\n<ol>\\n<li>定义流程：【管理员】新建流程、设计流程模型、并设置用户任务的审批人，最终发布流程</li>\\n<li>发起流程：【员工】选择流程，并发起流程实例</li>\\n<li>审批流程：【审批人】接收到流程任务，审批结果为通过或不通过</li>\\n</ol>","autoDesc":true}');export{t as comp,c as data};
