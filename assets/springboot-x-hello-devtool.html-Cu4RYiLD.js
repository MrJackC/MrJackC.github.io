import{_ as a,c as o,a as n,o as i}from"./app-B1yAKrtW.js";const l={};function r(p,s){return i(),o("div",null,s[0]||(s[0]=[n(`<h1 id="springboot部署-配置热部署devtools工具" tabindex="-1"><a class="header-anchor" href="#springboot部署-配置热部署devtools工具"><span>SpringBoot部署 - 配置热部署devtools工具</span></a></h1><blockquote><p>在SpringBoot开发调试中，如果我每行代码的修改都需要重启启动再调试，可能比较费时间；SpringBoot团队针对此问题提供了spring-boot-devtools（简称devtools）插件，它试图提升开发调试的效率。</p></blockquote><h2 id="_1-准备知识点" tabindex="-1"><a class="header-anchor" href="#_1-准备知识点"><span>1. 准备知识点</span></a></h2><h3 id="_1-1-什么是热部署和热加载" tabindex="-1"><a class="header-anchor" href="#_1-1-什么是热部署和热加载"><span>1.1 什么是热部署和热加载？</span></a></h3><blockquote><p>热部署和热加载是在应用正在运行的时候，自动更新（重新加载或者替换class等）应用的一种能力。（PS：<strong>spring-boot-devtools提供的方案也是要重启的，只是无需手动重启能实现自动加载而已。</strong>）</p></blockquote><p>严格意义上，我们需要区分下热部署和热加载, 对于Java项目而言：</p><ul><li><strong>热部署</strong><ul><li>在服务器运行时重新部署项目</li><li>它是直接重新加载整个应用，这种方式会释放内存，比热加载更加干净彻底，但同时也更费时间。</li></ul></li><li><strong>热加载</strong><ul><li>在运行时重新加载class，从而升级应用。</li><li>热加载的实现原理主要<strong>依赖java的类加载机制</strong>，在实现方式可以概括为在容器启动的时候起一条后台线程，定时的检测类文件的时间戳变化，如果类的时间戳变掉了，则将类重新载入。</li><li>对比反射机制，反射是在运行时获取类信息，通过动态的调用来改变程序行为； 热加载则是在运行时通过重新加载改变类信息，直接改变程序行为。</li></ul></li></ul><h3 id="_1-2-什么是liveload" tabindex="-1"><a class="header-anchor" href="#_1-2-什么是liveload"><span>1.2 什么是LiveLoad？</span></a></h3><p>LiveLoad是提供浏览器客户端自动加载更新的工具，分为LiveLoad服务器和Liveload浏览器插件两部分； devtools中已经集成了LiveLoad服务器，所以如果我们开发的是web应用，并且期望浏览器自动刷新， 这时候可以考虑LiveLoad.</p><p><img src="https://raw.githubusercontent.com/MrJackC/PicGoImages/main/other/202404232136362.png" alt="" loading="lazy"><br><img src="https://raw.githubusercontent.com/MrJackC/PicGoImages/main/other/202404232136362.png" alt="" loading="lazy"><br> 同一时间只能运行一个LiveReload服务器。 开始应用程序之前，请确保没有其他LiveReload服务器正在运行。如果从IDE启动多个应用程序，则只有第一个应用程序将支持LiveReload。</p><h2 id="_2-配置devtools实现热部署" tabindex="-1"><a class="header-anchor" href="#_2-配置devtools实现热部署"><span>2. 配置devtools实现热部署</span></a></h2><blockquote><p>我们通过如下配置来实现自动重启方式的热部署。</p></blockquote><h3 id="_2-1-pom配置" tabindex="-1"><a class="header-anchor" href="#_2-1-pom配置"><span>2.1 POM配置</span></a></h3><p>添加spring-boot-devtools的依赖</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">dependencies</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;org.springframework.boot&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;spring-boot-devtools&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">optional</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;true&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">optional</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt; </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">&lt;!-- 可以防止将devtools依赖传递到其他模块中 --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">dependencies</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><h3 id="_2-2-idea配置" tabindex="-1"><a class="header-anchor" href="#_2-2-idea配置"><span>2.2 IDEA配置</span></a></h3><blockquote><p>如果你使用IDEA开发工具，通常有如下两种方式：</p></blockquote><h4 id="_2-2-1-方式一-无任何配置时-手动触发重启更新-ctrl-f9" tabindex="-1"><a class="header-anchor" href="#_2-2-1-方式一-无任何配置时-手动触发重启更新-ctrl-f9"><span>2.2.1 方式一： <strong>无任何配置时，手动触发重启更新（Ctrl+F9）</strong></span></a></h4><figure><img src="https://raw.githubusercontent.com/MrJackC/PicGoImages/main/other/202404232139624.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>（也可以用<code>mvn compile</code>编译触发重启更新）</p><h4 id="_2-2-2-方式二-idea需开启运行时编译-自动重启更新" tabindex="-1"><a class="header-anchor" href="#_2-2-2-方式二-idea需开启运行时编译-自动重启更新"><span>2.2.2 方式二： <strong>IDEA需开启运行时编译，自动重启更新</strong></span></a></h4><p><strong>设置1</strong>：</p><p>File-&gt;Setting-&gt;Build,Execution,Deployment-&gt;Compile</p><p>勾选：Make project automatically</p><p><img src="https://raw.githubusercontent.com/MrJackC/PicGoImages/main/other/202404232140289.png" alt="" loading="lazy"><br><strong>设置2</strong>：</p><p>快捷键：ctrl+alt+shift+/</p><p>选择：Registry</p><p>勾选：compiler.automake.allow.when.app.running</p><p>新版本的IDEA可以在File-&gt;setting-&gt;Advanced Setttings里面的第一个设置：</p><figure><img src="https://raw.githubusercontent.com/MrJackC/PicGoImages/main/other/202404232140097.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_2-3-application-yml配置" tabindex="-1"><a class="header-anchor" href="#_2-3-application-yml配置"><span>2.3 application.yml配置</span></a></h3><div class="language-yml" data-ext="yml" data-title="yml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">spring</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  devtools</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    restart</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">      enabled</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">true</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  #设置开启热部署</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">      additional-paths</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">src/main/java</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #重启目录</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">      exclude</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">WEB-INF/**</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  thymeleaf</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    cache</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">false</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #使用Thymeleaf模板引擎，关闭缓存</span></span></code></pre></div><h3 id="_2-4-使用liveload" tabindex="-1"><a class="header-anchor" href="#_2-4-使用liveload"><span>2.4 使用LiveLoad</span></a></h3><p>spring-boot-devtools模块包含<strong>嵌入式LiveReload服务器</strong>，可以在资源更改时用于触发浏览器刷新。 LiveReload浏览器扩展程序支持Chrome，Firefox和Safari，你可以从livereload.com免费下载。</p><figure><img src="https://raw.githubusercontent.com/MrJackC/PicGoImages/main/other/202404232141792.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>或者从浏览器插件中心下载，比如firefox:</p><figure><img src="https://raw.githubusercontent.com/MrJackC/PicGoImages/main/other/202404232141017.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>安装完之后，可以通过如下图标管理</p><figure><img src="https://raw.githubusercontent.com/MrJackC/PicGoImages/main/other/202404232142500.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>如果你不想在应用程序运行时启动LiveReload服务器，则可以将spring.devtools.livereload.enabled属性设置为false 。</p><p>同一时间只能运行一个LiveReload服务器。 开始应用程序之前，请确保没有其他LiveReload服务器正在运行。如果从IDE启动多个应用程序，则只有第一个应用程序将支持LiveReload。</p><h2 id="_3-进一步理解" tabindex="-1"><a class="header-anchor" href="#_3-进一步理解"><span>3. 进一步理解</span></a></h2><blockquote><p>虽然一些开发者会使用devtool工具，但是很少有能够深入理解的；让我们理解如下几个问题，帮助你进一步理解。</p></blockquote><h3 id="_3-1-devtool的原理-为何会自动重启" tabindex="-1"><a class="header-anchor" href="#_3-1-devtool的原理-为何会自动重启"><span>3.1 devtool的原理？为何会自动重启？</span></a></h3><blockquote><p>为什么同样是重启应用，为什么不手动重启，而是建议使用spring-boot-devtools进行热部署重启？</p></blockquote><p>spring-boot-devtools使用了两个类加载器ClassLoader，一个ClassLoader加载不会发生更改的类（第三方jar包），另一个ClassLoader（restart ClassLoader）加载会更改的类（自定义的类）。</p><p>后台启动一个<strong>文件监听线程（File Watcher）</strong>，<strong>监测的目录中的文件发生变动时， 原来的restart ClassLoader被丢弃，将会重新加载新的restart ClassLoader</strong>。</p><p>因为文件变动后，第三方jar包不再重新加载，<strong>只加载自定义的类，加载的类比较少，所以重启比较快。</strong></p><p>这也是为什么，同样是重启应用，为什么不手动重启，建议使用spring-boot-devtools进行热部署重启。</p><p>在自动重启中有几点需要注意:</p><ul><li><strong>自动重启会记录日志的</strong></li></ul><p>（记录在什么情况下重启的日志）</p><p>可以通过如下关闭</p><div class="language-yml" data-ext="yml" data-title="yml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">spring</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  devtools</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    restart</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">      log-condition-evaluation-delta</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">false</span></span></code></pre></div><ul><li><strong>排除一些不需要自动重启的资源</strong></li></ul><p>某些资源在更改时不一定需要触发重新启动。默认情况下，改变资源/META-INF/maven，/META-INF/resources，/resources，/static，/public，或/templates不触发重新启动，但确会触发现场重装。如果要自定义这些排除项，可以使用该spring.devtools.restart.exclude属性。例如，要仅排除/static，/public你将设置以下属性：</p><div class="language-yml" data-ext="yml" data-title="yml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">spring</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  devtools</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    restart</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">      exclude</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;static/**,public/**&quot;</span></span></code></pre></div><p>如果要保留这些默认值并添加其他排除项，请改用该spring.devtools.restart.additional-exclude属性。</p><ul><li><strong>自定义重启类加载器</strong></li></ul><p>重启功能是通过使用两个类加载器来实现的。对于大多数应用程序，这种方法效果很好。但是，它有时会导致类加载问题。</p><p>默认情况下，IDE 中的任何打开项目都使用“重启”类加载器加载，任何常规.jar文件都使用“基本”类加载器加载。如果你处理一个多模块项目，并且不是每个模块都导入到你的 IDE 中，你可能需要自定义一些东西。为此，你可以创建一个META-INF/spring-devtools.properties文件。</p><p>该spring-devtools.properties文件可以包含以restart.exclude和为前缀的属性restart.include。该include元素是应该被拉高到“重启”的类加载器的项目，以及exclude要素是应该向下推入“Base”类加载器的项目。该属性的值是应用于类路径的正则表达式模式，如以下示例所示：</p><div class="language-yml" data-ext="yml" data-title="yml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">restart</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  exclude</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    companycommonlibs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;/mycorp-common-[</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">\\\\</span><span style="color:#98C379;--shiki-dark:#98C379;">w</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">\\\\</span><span style="color:#98C379;--shiki-dark:#98C379;">d-</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">\\\\</span><span style="color:#98C379;--shiki-dark:#98C379;">.]+</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">\\\\</span><span style="color:#98C379;--shiki-dark:#98C379;">.jar&quot;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  include</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    projectcommon</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;/mycorp-myproj-[</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">\\\\</span><span style="color:#98C379;--shiki-dark:#98C379;">w</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">\\\\</span><span style="color:#98C379;--shiki-dark:#98C379;">d-</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">\\\\</span><span style="color:#98C379;--shiki-dark:#98C379;">.]+</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">\\\\</span><span style="color:#98C379;--shiki-dark:#98C379;">.jar&quot;</span></span></code></pre></div><h3 id="_3-2-devtool是否会被打包进jar" tabindex="-1"><a class="header-anchor" href="#_3-2-devtool是否会被打包进jar"><span>3.2 devtool是否会被打包进Jar？</span></a></h3><blockquote><p>devtool原则上来说应该是只在开发调试的时候使用，而在生产环境运行jar包时是不需要的，所以Spring打包会不会把它打进JAR吗？</p></blockquote><ul><li><strong>默认情况下，不会被打包进JAR</strong></li></ul><p>运行打包的应用程序时，开发人员工具<strong>会自动禁用</strong>。如果你通过 java -jar或者其他特殊的类加载器进行启动时，都会被认为是“生产环境的应用”。</p><ul><li><strong>如果我们期望远程调试应用</strong></li></ul><p>（<em>生产环境勿用，只有在受信任的网络上运行或使用 SSL 进行保护时，才应启用它</em>）</p><p>在这种情况下，devtool也具备远程调试的能力：远程客户端应用程序旨在从你的 IDE 中运行。你需要org.springframework.boot.devtools.RemoteSpringApplication使用与你连接的远程项目相同的类路径运行。应用程序的唯一必需参数是它连接到的远程 URL。</p><p>例如，如果使用 Eclipse 或 Spring Tools，并且你有一个my-app已部署到 Cloud Foundry 的名为的项目，执行以下操作：</p><ol><li>选择Run Configurations…从Run菜单。</li><li>创建一个新的Java Application“启动配置”。</li><li>浏览my-app项目。</li><li>使用org.springframework.boot.devtools.RemoteSpringApplication作为主类。</li><li>添加<a href="https://myapp.cfapps.xn--ioProgram-6y4o" target="_blank" rel="noopener noreferrer">https://myapp.cfapps.io到Program</a> arguments（或任何你的远程 URL）。</li></ol><p>正在运行的远程客户端可能类似于以下列表：</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  .</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">   ____</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">          _</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">                                              __</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> _</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> _</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> /</span><span style="color:#E06C75;--shiki-dark:#E06C75;">\\\\ </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> ___</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;_ __ _ _(_)_ __  __ _          ___               _      </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">\\ \\ \\ </span><span style="color:#98C379;--shiki-dark:#98C379;">\\</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">( ( )</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">\\_</span><span style="color:#98C379;--shiki-dark:#98C379;">__ | &#39;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">_ </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">|</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;_| | &#39;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">_ \\</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> _\` </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">|</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">        |</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> _ \\</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">___</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> _</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> __</span><span style="color:#E06C75;--shiki-dark:#E06C75;">  ___</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">|</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> |</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">_</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> ___ \\ \\ \\ \\</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;"> \\\\</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">  ___)</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">|</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> |</span><span style="color:#E06C75;--shiki-dark:#E06C75;">_)</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">|</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> |</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> |</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> |</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> |</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> ||</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (_</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">|</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> []</span><span style="color:#C678DD;--shiki-dark:#C678DD;">::::::</span><span style="color:#E06C75;--shiki-dark:#E06C75;">[]   </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> -</span><span style="color:#E06C75;--shiki-dark:#E06C75;">_) </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;  </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">\\/</span><span style="color:#98C379;--shiki-dark:#98C379;"> _ </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">\\ </span><span style="color:#98C379;--shiki-dark:#98C379;"> _/ -_) ) ) ) )</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">  &#39;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">  |</span><span style="color:#E06C75;--shiki-dark:#E06C75;">____</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">|</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> .</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">__</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">|</span><span style="color:#E06C75;--shiki-dark:#E06C75;">_</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">|</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> |</span><span style="color:#E06C75;--shiki-dark:#E06C75;">_</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">|</span><span style="color:#E06C75;--shiki-dark:#E06C75;">_</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">|</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> |</span><span style="color:#E06C75;--shiki-dark:#E06C75;">_\\__</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> |</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">        |</span><span style="color:#E06C75;--shiki-dark:#E06C75;">_</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">|</span><span style="color:#E06C75;--shiki-dark:#E06C75;">_\\___</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">|</span><span style="color:#E06C75;--shiki-dark:#E06C75;">_</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">|</span><span style="color:#E06C75;--shiki-dark:#E06C75;">_</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">|</span><span style="color:#E06C75;--shiki-dark:#E06C75;">_\\___</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">\\__\\___</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">|/</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> /</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> /</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> /</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =========|</span><span style="color:#E06C75;--shiki-dark:#E06C75;">_</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">|==============|</span><span style="color:#E06C75;--shiki-dark:#E06C75;">___</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/===================================/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">_</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">_</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">_</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;"> ::</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Spring</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Boot</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> Remote </span><span style="color:#C678DD;--shiki-dark:#C678DD;">::</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 2.5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#FFFFFF;--shiki-dark:#FFFFFF;">4</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2015</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="color:#D19A66;--shiki-dark:#D19A66;">06</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="color:#D19A66;--shiki-dark:#D19A66;">10</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 18</span><span style="color:#C678DD;--shiki-dark:#C678DD;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;">25</span><span style="color:#C678DD;--shiki-dark:#C678DD;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;">06</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#FFFFFF;--shiki-dark:#FFFFFF;">632</span><span style="color:#E06C75;--shiki-dark:#E06C75;">  INFO </span><span style="color:#D19A66;--shiki-dark:#D19A66;">14938</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> --</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> [           main] </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">o</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">s</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">b</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">devtools</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">RemoteSpringApplication</span><span style="color:#C678DD;--shiki-dark:#C678DD;">   :</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Starting</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> RemoteSpringApplication</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> on pwmbp with PID </span><span style="color:#D19A66;--shiki-dark:#D19A66;">14938</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">Users</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">pwebb</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">projects</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">spring</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="color:#E06C75;--shiki-dark:#E06C75;">boot</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">code</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">spring</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="color:#E06C75;--shiki-dark:#E06C75;">boot</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="color:#E06C75;--shiki-dark:#E06C75;">project</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">spring</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="color:#E06C75;--shiki-dark:#E06C75;">boot</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="color:#E06C75;--shiki-dark:#E06C75;">devtools</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">target</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">classes started by pwebb in </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">Users</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">pwebb</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">projects</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">spring</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="color:#E06C75;--shiki-dark:#E06C75;">boot</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">code)</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2015</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="color:#D19A66;--shiki-dark:#D19A66;">06</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="color:#D19A66;--shiki-dark:#D19A66;">10</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 18</span><span style="color:#C678DD;--shiki-dark:#C678DD;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;">25</span><span style="color:#C678DD;--shiki-dark:#C678DD;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;">06</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#FFFFFF;--shiki-dark:#FFFFFF;">671</span><span style="color:#E06C75;--shiki-dark:#E06C75;">  INFO </span><span style="color:#D19A66;--shiki-dark:#D19A66;">14938</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> --</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> [           main] </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">s</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">c</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">a</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">AnnotationConfigApplicationContext</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> :</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Refreshing</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> org</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">springframework</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">context</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">annotation</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">AnnotationConfigApplicationContext</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">2a17b7b6</span><span style="color:#C678DD;--shiki-dark:#C678DD;">:</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> startup date [</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Wed</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> Jun </span><span style="color:#D19A66;--shiki-dark:#D19A66;">10</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 18</span><span style="color:#C678DD;--shiki-dark:#C678DD;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;">25</span><span style="color:#C678DD;--shiki-dark:#C678DD;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;">06</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> PDT </span><span style="color:#D19A66;--shiki-dark:#D19A66;">2015</span><span style="color:#E06C75;--shiki-dark:#E06C75;">]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> root of context hierarchy</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2015</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="color:#D19A66;--shiki-dark:#D19A66;">06</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="color:#D19A66;--shiki-dark:#D19A66;">10</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 18</span><span style="color:#C678DD;--shiki-dark:#C678DD;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;">25</span><span style="color:#C678DD;--shiki-dark:#C678DD;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;">07</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#FFFFFF;--shiki-dark:#FFFFFF;">043</span><span style="color:#E06C75;--shiki-dark:#E06C75;">  WARN </span><span style="color:#D19A66;--shiki-dark:#D19A66;">14938</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> --</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> [           main] </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">o</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">s</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">b</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">d</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">r</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">c</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">RemoteClientConfiguration</span><span style="color:#C678DD;--shiki-dark:#C678DD;">    :</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> The</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> connection to http</span><span style="color:#C678DD;--shiki-dark:#C678DD;">:</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//localhost:8080 is insecure. You should use a URL starting with &#39;https://&#39;.</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2015</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="color:#D19A66;--shiki-dark:#D19A66;">06</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="color:#D19A66;--shiki-dark:#D19A66;">10</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 18</span><span style="color:#C678DD;--shiki-dark:#C678DD;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;">25</span><span style="color:#C678DD;--shiki-dark:#C678DD;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;">07</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#FFFFFF;--shiki-dark:#FFFFFF;">074</span><span style="color:#E06C75;--shiki-dark:#E06C75;">  INFO </span><span style="color:#D19A66;--shiki-dark:#D19A66;">14938</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> --</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> [           main] </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">o</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">s</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">b</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">d</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">a</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">OptionalLiveReloadServer</span><span style="color:#C678DD;--shiki-dark:#C678DD;">       :</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> LiveReload</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> server is running on port </span><span style="color:#D19A66;--shiki-dark:#D19A66;">35729</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2015</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="color:#D19A66;--shiki-dark:#D19A66;">06</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="color:#D19A66;--shiki-dark:#D19A66;">10</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 18</span><span style="color:#C678DD;--shiki-dark:#C678DD;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;">25</span><span style="color:#C678DD;--shiki-dark:#C678DD;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;">07</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#FFFFFF;--shiki-dark:#FFFFFF;">130</span><span style="color:#E06C75;--shiki-dark:#E06C75;">  INFO </span><span style="color:#D19A66;--shiki-dark:#D19A66;">14938</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> --</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> [           main] </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">o</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">s</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">b</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">devtools</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">RemoteSpringApplication</span><span style="color:#C678DD;--shiki-dark:#C678DD;">   :</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Started</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> RemoteSpringApplication</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> in </span><span style="color:#D19A66;--shiki-dark:#D19A66;">0.74</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> seconds</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">JVM</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> running </span><span style="color:#C678DD;--shiki-dark:#C678DD;">for</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1.105</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)</span></span></code></pre></div><h3 id="_3-3-devtool为何会默认禁用缓存选项" tabindex="-1"><a class="header-anchor" href="#_3-3-devtool为何会默认禁用缓存选项"><span>3.3 devtool为何会默认禁用缓存选项？</span></a></h3><blockquote><p>Spring Boot 支持的一些库<strong>使用缓存来提高性能</strong>。例如，模板引擎缓存已编译的模板以避免重复解析模板文件。此外，Spring MVC 可以在提供静态资源时向响应添加 HTTP 缓存标头。</p></blockquote><p>虽然缓存<strong>在生产中非常有益，但在开发过程中可能会适得其反</strong>，使你无法看到刚刚在应用程序中所做的更改。出于这个原因， spring-boot-devtools 默认禁用缓存选项。</p><p>比如Thymeleaf 提供了spring.thymeleaf.cache来设置模板引擎的缓存，使用spring-boot-devtools模块时是不需要手动设置这些属性的，因为spring-boot-devtools会自动进行设置。</p><p>那么会自动设置哪些配置呢？你可以在DevToolsPropertyDefaultsPostProcessor类找到对应的默认配置。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> DevToolsPropertyDefaultsPostProcessor</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> implements</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> EnvironmentPostProcessor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">	static</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">		Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> properties </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> HashMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">		properties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;spring.thymeleaf.cache&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;false&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">		properties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;spring.freemarker.cache&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;false&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">		properties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;spring.groovy.template.cache&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;false&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">		properties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;spring.mustache.cache&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;false&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">		properties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;server.servlet.session.persistent&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;true&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">		properties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;spring.h2.console.enabled&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;true&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">		properties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;spring.web.resources.cache.period&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;0&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">		properties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;spring.web.resources.chain.cache&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;false&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">		properties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;spring.template.provider.cache&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;false&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">		properties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;spring.mvc.log-resolved-exception&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;true&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">		properties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;server.error.include-binding-errors&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;ALWAYS&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">		properties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;server.error.include-message&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;ALWAYS&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">		properties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;server.error.include-stacktrace&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;ALWAYS&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">		properties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;server.servlet.jsp.init-parameters.development&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;true&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">		properties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;spring.reactor.debug&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;true&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">		PROPERTIES </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Collections</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">unmodifiableMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(properties);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">	}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当然如果你不想被应用属性被spring-boot-devtools默认设置， 可以通过spring.devtools.add-properties到false你application.yml中。</p><h3 id="_3-4-devtool是否可以给所有springboot应用做全局的配置" tabindex="-1"><a class="header-anchor" href="#_3-4-devtool是否可以给所有springboot应用做全局的配置"><span>3.4 devtool是否可以给所有Springboot应用做全局的配置？</span></a></h3><blockquote><p>可以通过将spring-boot-devtools.yml文件添加到$HOME/.config/spring-boot目录来<strong>配置全局 devtools 设置</strong>。</p></blockquote><p>添加到这些文件的任何属性都适用于你机器上使用 devtools 的所有Spring Boot 应用程序。例如，要将重新启动配置为始终使用触发器文件，你需要将以下属性添加到你的spring-boot-devtools文件中：</p><div class="language-yml" data-ext="yml" data-title="yml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">spring</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  devtools</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    restart</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">      trigger-file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;.reloadtrigger&quot;</span></span></code></pre></div><h2 id="_4-如果我不用devtool-还有什么选择" tabindex="-1"><a class="header-anchor" href="#_4-如果我不用devtool-还有什么选择"><span>4. 如果我不用devtool，还有什么选择？</span></a></h2><blockquote><p>如果我不用devtool，还有什么选择？</p></blockquote><p><strong>在实际的开发过程中，我也不会去使用devtool工具</strong>, 因为：</p><ul><li><p>devtool本身基于重启方式，这种仍然不是真正的热替换方案，JRebel才是（它是收费的）</p></li><li><p>开发调试最重要的还是一种权衡</p><ul><li><p>自动重启的开销如果和手动重启没有什么太大差别，那么还不如手动重启（按需重启）</p></li><li><p>多数情况下，如果是<strong>方法内部的修改或者静态资源的修改</strong>，在IDEA中是可以通过Rebuild（Ctrl + Shift + F9）进行热更的</p><figure><img src="https://raw.githubusercontent.com/MrJackC/PicGoImages/main/other/202404232143458.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li></ul></li><li><p>此外还有一个工具spring loaded， 可实现修改类文件的热部署，具体可看其<a href="https://github.com/spring-projects/spring-loaded" target="_blank" rel="noopener noreferrer">github地址</a>上的说明。</p></li></ul><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章"><span>参考文章</span></a></h2><p><a href="https://pdai.tech/md/spring/springboot/springboot-x-hello-devtool.html" target="_blank" rel="noopener noreferrer"><strong>SpringBoot入门 - 配置热部署devtools工具</strong></a></p>`,91)]))}const t=a(l,[["render",r],["__file","springboot-x-hello-devtool.html.vue"]]),k=JSON.parse('{"path":"/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-x-hello-devtool.html","title":"SpringBoot部署 - 配置热部署devtools工具","lang":"zh-CN","frontmatter":{"aliases":"SpringBoot部署 - 配置热部署devtools工具","tags":null,"cssclass":null,"source":null,"order":380,"created":"2024-04-23 20:40","updated":"2024-10-11 16:46","description":"SpringBoot部署 - 配置热部署devtools工具 在SpringBoot开发调试中，如果我每行代码的修改都需要重启启动再调试，可能比较费时间；SpringBoot团队针对此问题提供了spring-boot-devtools（简称devtools）插件，它试图提升开发调试的效率。 1. 准备知识点 1.1 什么是热部署和热加载？ 热部署和热加...","head":[["meta",{"property":"og:url","content":"https://mrjackc.github.io/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-x-hello-devtool.html"}],["meta",{"property":"og:site_name","content":"mrjason’s Blog"}],["meta",{"property":"og:title","content":"SpringBoot部署 - 配置热部署devtools工具"}],["meta",{"property":"og:description","content":"SpringBoot部署 - 配置热部署devtools工具 在SpringBoot开发调试中，如果我每行代码的修改都需要重启启动再调试，可能比较费时间；SpringBoot团队针对此问题提供了spring-boot-devtools（简称devtools）插件，它试图提升开发调试的效率。 1. 准备知识点 1.1 什么是热部署和热加载？ 热部署和热加..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/MrJackC/PicGoImages/main/other/202404232136362.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-21T07:03:09.000Z"}],["meta",{"property":"article:author","content":"MrJason"}],["meta",{"property":"article:modified_time","content":"2024-10-21T07:03:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SpringBoot部署 - 配置热部署devtools工具\\",\\"image\\":[\\"https://raw.githubusercontent.com/MrJackC/PicGoImages/main/other/202404232136362.png\\",\\"https://raw.githubusercontent.com/MrJackC/PicGoImages/main/other/202404232136362.png\\",\\"https://raw.githubusercontent.com/MrJackC/PicGoImages/main/other/202404232139624.png\\",\\"https://raw.githubusercontent.com/MrJackC/PicGoImages/main/other/202404232140289.png\\",\\"https://raw.githubusercontent.com/MrJackC/PicGoImages/main/other/202404232140097.png\\",\\"https://raw.githubusercontent.com/MrJackC/PicGoImages/main/other/202404232141792.png\\",\\"https://raw.githubusercontent.com/MrJackC/PicGoImages/main/other/202404232141017.png\\",\\"https://raw.githubusercontent.com/MrJackC/PicGoImages/main/other/202404232142500.png\\",\\"https://raw.githubusercontent.com/MrJackC/PicGoImages/main/other/202404232143458.png\\"],\\"dateModified\\":\\"2024-10-21T07:03:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MrJason\\",\\"url\\":\\"https://mrjackc.github.io\\"}]}"]]},"headers":[{"level":2,"title":"1. 准备知识点","slug":"_1-准备知识点","link":"#_1-准备知识点","children":[{"level":3,"title":"1.1 什么是热部署和热加载？","slug":"_1-1-什么是热部署和热加载","link":"#_1-1-什么是热部署和热加载","children":[]},{"level":3,"title":"1.2 什么是LiveLoad？","slug":"_1-2-什么是liveload","link":"#_1-2-什么是liveload","children":[]}]},{"level":2,"title":"2. 配置devtools实现热部署","slug":"_2-配置devtools实现热部署","link":"#_2-配置devtools实现热部署","children":[{"level":3,"title":"2.1 POM配置","slug":"_2-1-pom配置","link":"#_2-1-pom配置","children":[]},{"level":3,"title":"2.2 IDEA配置","slug":"_2-2-idea配置","link":"#_2-2-idea配置","children":[]},{"level":3,"title":"2.3 application.yml配置","slug":"_2-3-application-yml配置","link":"#_2-3-application-yml配置","children":[]},{"level":3,"title":"2.4 使用LiveLoad","slug":"_2-4-使用liveload","link":"#_2-4-使用liveload","children":[]}]},{"level":2,"title":"3. 进一步理解","slug":"_3-进一步理解","link":"#_3-进一步理解","children":[{"level":3,"title":"3.1 devtool的原理？为何会自动重启？","slug":"_3-1-devtool的原理-为何会自动重启","link":"#_3-1-devtool的原理-为何会自动重启","children":[]},{"level":3,"title":"3.2 devtool是否会被打包进Jar？","slug":"_3-2-devtool是否会被打包进jar","link":"#_3-2-devtool是否会被打包进jar","children":[]},{"level":3,"title":"3.3 devtool为何会默认禁用缓存选项？","slug":"_3-3-devtool为何会默认禁用缓存选项","link":"#_3-3-devtool为何会默认禁用缓存选项","children":[]},{"level":3,"title":"3.4 devtool是否可以给所有Springboot应用做全局的配置？","slug":"_3-4-devtool是否可以给所有springboot应用做全局的配置","link":"#_3-4-devtool是否可以给所有springboot应用做全局的配置","children":[]}]},{"level":2,"title":"4. 如果我不用devtool，还有什么选择？","slug":"_4-如果我不用devtool-还有什么选择","link":"#_4-如果我不用devtool-还有什么选择","children":[]},{"level":2,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}],"git":{"createdTime":1729494189000,"updatedTime":1729494189000,"contributors":[{"name":"MrJason","email":"845886914@qq.com","commits":1}]},"readingTime":{"minutes":9.8,"words":2939},"filePathRelative":"posts/Java/Java框架/SpringBoot/springboot-x-hello-devtool.md","localizedDate":"2024年10月21日","excerpt":"\\n<blockquote>\\n<p>在SpringBoot开发调试中，如果我每行代码的修改都需要重启启动再调试，可能比较费时间；SpringBoot团队针对此问题提供了spring-boot-devtools（简称devtools）插件，它试图提升开发调试的效率。</p>\\n</blockquote>\\n<h2>1. 准备知识点</h2>\\n<h3>1.1 什么是热部署和热加载？</h3>\\n<blockquote>\\n<p>热部署和热加载是在应用正在运行的时候，自动更新（重新加载或者替换class等）应用的一种能力。（PS：<strong>spring-boot-devtools提供的方案也是要重启的，只是无需手动重启能实现自动加载而已。</strong>）</p>\\n</blockquote>","autoDesc":true}');export{t as comp,k as data};
