import{_ as a,c as n,a as e,o as i}from"./app-4x2aIoqi.js";const o={};function l(p,s){return i(),n("div",null,s[0]||(s[0]=[e(`<h1 id="gitlab配置custom-hook" tabindex="-1"><a class="header-anchor" href="#gitlab配置custom-hook"><span>gitlab配置custom hook</span></a></h1><h2 id="_1-具体步骤" tabindex="-1"><a class="header-anchor" href="#_1-具体步骤"><span>1. 具体步骤</span></a></h2><h3 id="_1-1-设置custom-hooks路径" tabindex="-1"><a class="header-anchor" href="#_1-1-设置custom-hooks路径"><span>1.1 设置custom_hooks路径</span></a></h3><p>修改 gitlab 中的<code>vi /etc/gitlab/gitlab.rb</code></p><p>增加 custom_hooks_dir 路径：</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>gitlab_shell[&#39;custom_hooks_dir&#39;] = &quot;/opt/gitlab/embedded/service/gitlab-shell/hooks&quot;</span></span></code></pre></div><p>注：这里直接去掉注释使用自带的</p><h3 id="_1-2-启用配置" tabindex="-1"><a class="header-anchor" href="#_1-2-启用配置"><span>1.2 启用配置</span></a></h3><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>sudo gitlab-ctl reconfigure</span></span></code></pre></div><h3 id="_1-3-创建hook文件" tabindex="-1"><a class="header-anchor" href="#_1-3-创建hook文件"><span>1.3 创建hook文件</span></a></h3><p>自定义脚本目录要符合<code>&lt;custom_hooks_dir&gt;/&lt;hook_name.d&gt;/*</code> 的规范。具体就是</p><ul><li><p>在自定的<code>custom_hooks_dir</code> 目录下可创建三个文件夹对应三类 <code>server hook name</code> ：</p><ul><li>pre-receive.d</li><li>update.d</li><li>post-receive.d</li></ul></li><li><p>在每个文件夹下可以创建任意文件，在对应的hook时期，gitlab就会主动调用</p></li><li><p>文件名以<code>~</code>结尾的文件会被忽略</p></li><li><p>如果想看这部分的实现细节可以看 <code>&lt;gitlab-shell&gt;/lib/gitlab_custom_hook.rb</code> 文件</p></li></ul><p>目录结构示意</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>[root@localhost custom_hooks]# tree</span></span>
<span class="line"><span>.</span></span>
<span class="line"><span>├── post-receive.d</span></span>
<span class="line"><span>│   ├── 01.sh</span></span>
<span class="line"><span>│   └── 02.sh~</span></span>
<span class="line"><span>├── pre-receive.d</span></span>
<span class="line"><span>│   ├── 01.sh</span></span>
<span class="line"><span>│   ├── 02.py</span></span>
<span class="line"><span>│   └── 03.rb</span></span>
<span class="line"><span>└── update.d</span></span>
<span class="line"><span>    ├── 01.sh</span></span>
<span class="line"><span>    └── 02.sh</span></span></code></pre></div><h3 id="_1-4-编写-hook-脚本" tabindex="-1"><a class="header-anchor" href="#_1-4-编写-hook-脚本"><span>1.4 编写 hook 脚本</span></a></h3><p>hook 脚本就是git 自身的规范，写shell，python、ruby 都可以</p><p>留意脚本最后的退出值：<strong>0 正常退出，用户可以 push；非 0 异常退出，中断提交（pre-receive 和 update）</strong> 。<br> 细节参见： <a href="https://link.jianshu.com/?t=https://github.com/geeeeeeeeek/git-recipes/wiki/5.4-Git%E9%92%A9%E5%AD%90%EF%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BD%A0%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%B5%81" target="_blank" rel="noopener noreferrer">5.4 Git钩子：自定义你的工作流 · geeeeeeeeek/git-recipes Wiki · GitHub</a></p><p>如果想让用户 push 时看到相应的日志直接在脚本中 echo 即可。</p><p>这里举两个例子：</p><p>🌰：Say hi.</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#!/bin/sh</span></span>
<span class="line"></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">echo</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;Say hi from gitlab servertes ok 😄&quot;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">exit</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 0</span></span></code></pre></div><p>🌰：检查提交修改的文件，发现有特定内容禁止提交</p><div class="language- line-numbers-mode" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>#!/bin/sh</span></span>
<span class="line"><span>FIND_KEY=&#39;.test.51offer.com&#39;</span></span>
<span class="line"><span>OLD_VALUE=$2</span></span>
<span class="line"><span>NEW_VALUE=$3</span></span>
<span class="line"><span></span></span>
<span class="line"><span>FILES=$(git rev-list --objects $OLD_VALUE...$NEW_VALUE | egrep &#39;\\.(jsp|vm|java)$&#39; | awk &#39;{print $2}&#39; | sort | uniq )</span></span>
<span class="line"><span></span></span>
<span class="line"><span>FLAG=0</span></span>
<span class="line"><span>for FILE in $FILES</span></span>
<span class="line"><span>do</span></span>
<span class="line"><span>    git show $NEW_VALUE:$FILE | grep -q &quot;$FIND_KEY&quot;</span></span>
<span class="line"><span>    if [ $? -eq 0 ]</span></span>
<span class="line"><span>    then</span></span>
<span class="line"><span>        FLAG=1</span></span>
<span class="line"><span>        echo &quot;📃  包含非法字段 &#39;$FIND_KEY&#39; : $FILE&quot;</span></span>
<span class="line"><span>    fi</span></span>
<span class="line"><span>done</span></span>
<span class="line"><span></span></span>
<span class="line"><span>if [ $FLAG -eq 0 ]</span></span>
<span class="line"><span>then</span></span>
<span class="line"><span>    echo &quot;✅  代码检查通过.&quot;</span></span>
<span class="line"><span>else</span></span>
<span class="line"><span>    echo &quot;❌  代码检查不通过!&quot;</span></span>
<span class="line"><span>    exit 1</span></span>
<span class="line"><span>fi</span></span>
<span class="line"><span></span></span>
<span class="line"><span>exit 0</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例子结果</p><p>上面第二个例子中，尝试 <code>git push</code>，就能看到如下的日志：</p><div class="language-ruby" data-ext="ruby" data-title="ruby"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Pushing</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> to git</span><span style="color:#E06C75;--shiki-dark:#E06C75;">@gitlab</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.51offer.</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">inner</span><span style="color:#D19A66;--shiki-dark:#D19A66;">:</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">mall</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">paycenter.git</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">remote</span><span style="color:#D19A66;--shiki-dark:#D19A66;">:</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 📃  包含非法字段 </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;.test.51offer.com&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> : service</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">src</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">main</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">java</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">com</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">horizon</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/</span><span style="color:#C678DD;--shiki-dark:#C678DD;">module</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">paycenter</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">service</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">PayService</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.java        </span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">remote</span><span style="color:#D19A66;--shiki-dark:#D19A66;">:</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ❌  代码检查不通过!        </span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">remote</span><span style="color:#D19A66;--shiki-dark:#D19A66;">:</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> error</span><span style="color:#D19A66;--shiki-dark:#D19A66;">:</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> hook declined to update refs</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">heads</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/test</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">To</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> git</span><span style="color:#E06C75;--shiki-dark:#E06C75;">@gitlab</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.51offer.</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">inner</span><span style="color:#D19A66;--shiki-dark:#D19A66;">:</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">mall</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">paycenter.git</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [up to date]      release</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">old </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">-&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> release</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">/</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">old</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [up to date]      v1.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">0.0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">2016.9</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">8</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> -&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> v1.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">0.0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">2016.9</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">8</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> !</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [remote rejected] </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">test</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> -&gt;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> test</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (hook declined)</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">error</span><span style="color:#D19A66;--shiki-dark:#D19A66;">:</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> failed to push some refs to </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;git@gitlab.51offer.inner:mall/paycenter.git&#39;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Completed</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> with errors, see above</span></span></code></pre></div><h3 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章"><span>参考文章</span></a></h3><p><a href="https://www.jianshu.com/p/5531a21afa68" target="_blank" rel="noopener noreferrer">Gitlab 服务器端 custom hook 配置</a></p><p><a href="https://docs.gitlab.com/ee/administration/custom_hooks.html" target="_blank" rel="noopener noreferrer">官方文档</a></p>`,29)]))}const t=a(o,[["render",l],["__file","gitlab-x-custom-hook.html.vue"]]),c=JSON.parse(`{"path":"/posts/Git/gitlab-x-custom-hook.html","title":"gitlab配置custom hook","lang":"zh-CN","frontmatter":{"description":"gitlab配置custom hook 1. 具体步骤 1.1 设置custom_hooks路径 修改 gitlab 中的vi /etc/gitlab/gitlab.rb 增加 custom_hooks_dir 路径： 注：这里直接去掉注释使用自带的 1.2 启用配置 1.3 创建hook文件 自定义脚本目录要符合<custom_hooks_dir>/...","watermark":true,"head":[["meta",{"property":"og:url","content":"https://springg.us.kg/posts/Git/gitlab-x-custom-hook.html"}],["meta",{"property":"og:site_name","content":"mrjason’s Blog"}],["meta",{"property":"og:title","content":"gitlab配置custom hook"}],["meta",{"property":"og:description","content":"gitlab配置custom hook 1. 具体步骤 1.1 设置custom_hooks路径 修改 gitlab 中的vi /etc/gitlab/gitlab.rb 增加 custom_hooks_dir 路径： 注：这里直接去掉注释使用自带的 1.2 启用配置 1.3 创建hook文件 自定义脚本目录要符合<custom_hooks_dir>/..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-21T07:03:09.000Z"}],["meta",{"property":"article:author","content":"MrJason"}],["meta",{"property":"article:modified_time","content":"2024-10-21T07:03:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"gitlab配置custom hook\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-21T07:03:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MrJason\\",\\"url\\":\\"https://springg.us.kg\\"}]}"]]},"headers":[{"level":2,"title":"1. 具体步骤","slug":"_1-具体步骤","link":"#_1-具体步骤","children":[{"level":3,"title":"1.1 设置custom_hooks路径","slug":"_1-1-设置custom-hooks路径","link":"#_1-1-设置custom-hooks路径","children":[]},{"level":3,"title":"1.2 启用配置","slug":"_1-2-启用配置","link":"#_1-2-启用配置","children":[]},{"level":3,"title":"1.3 创建hook文件","slug":"_1-3-创建hook文件","link":"#_1-3-创建hook文件","children":[]},{"level":3,"title":"1.4 编写 hook 脚本","slug":"_1-4-编写-hook-脚本","link":"#_1-4-编写-hook-脚本","children":[]},{"level":3,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}]}],"git":{"createdTime":1729494189000,"updatedTime":1729494189000,"contributors":[{"name":"MrJason","email":"845886914@qq.com","commits":1}]},"readingTime":{"minutes":1.89,"words":566},"filePathRelative":"posts/Git/gitlab-x-custom-hook.md","localizedDate":"2024年10月21日","excerpt":"\\n<h2>1. 具体步骤</h2>\\n<h3>1.1 设置custom_hooks路径</h3>\\n<p>修改 gitlab 中的<code>vi /etc/gitlab/gitlab.rb</code></p>\\n<p>增加 custom_hooks_dir 路径：</p>\\n<div class=\\"language-\\" data-ext=\\"\\" data-title=\\"\\"><pre class=\\"shiki shiki-themes one-dark-pro one-dark-pro vp-code\\" style=\\"background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span>gitlab_shell['custom_hooks_dir'] = \\"/opt/gitlab/embedded/service/gitlab-shell/hooks\\"</span></span></code></pre>\\n</div>","autoDesc":true}`);export{t as comp,c as data};
