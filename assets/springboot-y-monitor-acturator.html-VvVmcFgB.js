import{_ as a,c as n,a as i,o as l}from"./app-DEK5G3U7.js";const t={};function r(e,s){return l(),n("div",null,s[0]||(s[0]=[i(`<h1 id="springboot监控-集成acturator监控工具" tabindex="-1"><a class="header-anchor" href="#springboot监控-集成acturator监控工具"><span>SpringBoot监控 - 集成acturator监控工具</span></a></h1><blockquote><p>当SpringBoot的应用部署到生产环境中后，如何监控和管理呢？比如审计日志，监控状态，指标收集等。为了解决这个问题，SpringBoot提供了Actuator。本文主要介绍Spring Boot Actuator及实现案例。</p></blockquote><h2 id="_1-知识准备" tabindex="-1"><a class="header-anchor" href="#_1-知识准备"><span>1. 知识准备</span></a></h2><blockquote><p>需要了解什么是Spring Boot Actuator， 以及其提供的功能(Endpoints)。</p></blockquote><h3 id="_1-1-什么是actuator" tabindex="-1"><a class="header-anchor" href="#_1-1-什么是actuator"><span>1.1 什么是Actuator?</span></a></h3><blockquote><p>致动器（actuator）是2018年公布的计算机科学技术名词。</p></blockquote><p><a href="https://baike.baidu.com/item/%E8%87%B4%E5%8A%A8%E5%99%A8/56538368?fr=aladdin" target="_blank" rel="noopener noreferrer">百度百科</a>的解释如下： 致动器能将某种形式的能量转换为机械能的驱动装置。如热致动器、磁致动器等，在磁盘中是指将电能转换为机械能并带动磁头运动的装置。</p><p>官网给的解释是：An actuator is a manufacturing term that refers to a mechanical device for moving or controlling something. Actuators can generate a large amount of motion from a small change.</p><p>从上述的解释不难知道Spring 命名这个组件为Actuator，就是为了提供监测程序的能力。</p><h3 id="_1-2-什么是spring-boot-actuator" tabindex="-1"><a class="header-anchor" href="#_1-2-什么是spring-boot-actuator"><span>1.2 什么是Spring Boot Actuator？</span></a></h3><blockquote><p>什么是Spring Boot Actuator? 用在什么样的场景呢？</p></blockquote><p>Spring Boot Actuator提供了对SpringBoot应用程序（可以是生产环境）监视和管理的能力， 可以选择通过使用<strong>HTTP Endpoint</strong>或使用<strong>JMX</strong>来管理和监控SpringBoot应用程序。</p><h3 id="_1-3-什么是actuator-endpoints" tabindex="-1"><a class="header-anchor" href="#_1-3-什么是actuator-endpoints"><span>1.3 什么是Actuator Endpoints？</span></a></h3><p>Spring Boot Actuator 允许你通过Endpoints对Spring Boot进行监控和交互。</p><p>Spring Boot 内置的Endpoint包括（两种Endpoint： WEB和JMX， web方式考虑到安全性默认只开启了/health）：</p><table><thead><tr><th>ID</th><th>JMX</th><th>Web</th><th>Endpoint功能描述</th></tr></thead><tbody><tr><td>auditevents</td><td>Yes</td><td>No</td><td>暴露当前应用的audit events （依赖AuditEventRepository）</td></tr><tr><td>beans</td><td>Yes</td><td>No</td><td>Spring中所有Beans</td></tr><tr><td>caches</td><td>Yes</td><td>No</td><td>暴露可用的缓存</td></tr><tr><td>conditions</td><td>Yes</td><td>No</td><td>展示configuration 和auto-configuration类中解析的condition，并展示是否匹配的信息.</td></tr><tr><td>configprops</td><td>Yes</td><td>No</td><td>展示所有的@ConfigurationProperties</td></tr><tr><td>env</td><td>Yes</td><td>No</td><td>展示环境变量，来源于ConfigurableEnvironment</td></tr><tr><td>flyway</td><td>Yes</td><td>No</td><td>flyway数据迁移信息（依赖Flyway）</td></tr><tr><td>health</td><td>Yes</td><td><strong>Yes</strong></td><td>展示应用的健康信息</td></tr><tr><td>heapdump</td><td>N/A</td><td>No</td><td>（<strong>web应用时</strong>）hprof 堆的dump文件（依赖HotSpot JVM）</td></tr><tr><td>httptrace</td><td>Yes</td><td>No</td><td>展示HTTP trace信息, 默认展示前100个（依赖HttpTraceRepository）</td></tr><tr><td>info</td><td>Yes</td><td>No</td><td>应用信息</td></tr><tr><td>integrationgraph</td><td>Yes</td><td>No</td><td>展示spring集成信息（依赖spring-integration-core）</td></tr><tr><td>jolokia</td><td>N/A</td><td>No</td><td>（<strong>web应用时</strong>）通过HTTP暴露JMX beans（依赖jolokia-core）</td></tr><tr><td>logfile</td><td>N/A</td><td>No</td><td>（<strong>web应用时</strong>）<a href="http://xn--logging-rp4kl03fph6as08ct23b.file.name" target="_blank" rel="noopener noreferrer">如果配置了logging.file.name</a> 或者 logging.file.path，展示logfile内容</td></tr><tr><td>loggers</td><td>Yes</td><td>No</td><td>展示或者配置loggers，比如修改日志的等级</td></tr><tr><td>liquibase</td><td>Yes</td><td>No</td><td>Liquibase 数据迁移信息（依赖Liquibase）</td></tr><tr><td>metrics</td><td>Yes</td><td>No</td><td>指标信息</td></tr><tr><td>mappings</td><td>Yes</td><td>No</td><td>@RequestMapping映射路径</td></tr><tr><td>prometheus</td><td>N/A</td><td>No</td><td>（<strong>web应用时</strong>）向prometheus暴露监控信息（依赖micrometer-registry-prometheus）</td></tr><tr><td>quartz</td><td>Yes</td><td>No</td><td>展示 quartz任务信息</td></tr><tr><td>scheduledtasks</td><td>Yes</td><td>No</td><td>展示Spring Scheduled 任务信息</td></tr><tr><td>sessions</td><td>Yes</td><td>No</td><td>session信息</td></tr><tr><td>shutdown</td><td>Yes</td><td>No</td><td>关闭应用</td></tr><tr><td>startup</td><td>Yes</td><td>No</td><td>展示ApplicationStartup的startup步骤的数据（依赖通在SpringApplication配置BufferingApplicationStartup）</td></tr><tr><td>threaddump</td><td>Yes</td><td>No</td><td>线程dump</td></tr></tbody></table><p>当然你也可以自己定义暴露哪些endpoint,</p><p>JMX时：</p><div class="language-yml" data-ext="yml" data-title="yml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">management</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  endpoints</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    jmx</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">      exposure</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        include</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;health,info&quot;</span></span></code></pre></div><p>web时(*代表所有）：</p><div class="language-yml" data-ext="yml" data-title="yml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">management</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  endpoints</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    web</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">      exposure</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        include</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;*&quot;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        exclude</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;env,beans&quot;</span></span></code></pre></div><h2 id="_2-简单示例" tabindex="-1"><a class="header-anchor" href="#_2-简单示例"><span>2. 简单示例</span></a></h2><blockquote><p>我们通过一个简单的例子，来展示自定义配置指定的endpoint，然后围绕这个简单的例子，谈谈后续拓展。</p></blockquote><h3 id="_2-1-pom引入actuator包" tabindex="-1"><a class="header-anchor" href="#_2-1-pom引入actuator包"><span>2.1 POM引入actuator包</span></a></h3><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;org.springframework.boot&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;spring-boot-starter-actuator&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><h3 id="_2-2-yml配置" tabindex="-1"><a class="header-anchor" href="#_2-2-yml配置"><span>2.2 yml配置</span></a></h3><p>自定义暴露哪些endpoint, 比如如下yml配置</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">server</span><span style="color:#C678DD;--shiki-dark:#C678DD;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  port</span><span style="color:#C678DD;--shiki-dark:#C678DD;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 8080</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">management</span><span style="color:#C678DD;--shiki-dark:#C678DD;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  endpoints</span><span style="color:#C678DD;--shiki-dark:#C678DD;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    enabled</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="color:#E06C75;--shiki-dark:#E06C75;">by</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="color:#C678DD;--shiki-dark:#C678DD;">default:</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> false</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    web</span><span style="color:#C678DD;--shiki-dark:#C678DD;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">      base</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="color:#E06C75;--shiki-dark:#E06C75;">path</span><span style="color:#C678DD;--shiki-dark:#C678DD;">:</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> /</span><span style="color:#E06C75;--shiki-dark:#E06C75;">manage</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">      exposure</span><span style="color:#C678DD;--shiki-dark:#C678DD;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        include</span><span style="color:#C678DD;--shiki-dark:#C678DD;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;info,health,env,beans&#39;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  endpoint</span><span style="color:#C678DD;--shiki-dark:#C678DD;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    info</span><span style="color:#C678DD;--shiki-dark:#C678DD;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">      enabled</span><span style="color:#C678DD;--shiki-dark:#C678DD;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> true</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    health</span><span style="color:#C678DD;--shiki-dark:#C678DD;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">      enabled</span><span style="color:#C678DD;--shiki-dark:#C678DD;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> true</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    env</span><span style="color:#C678DD;--shiki-dark:#C678DD;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">      enabled</span><span style="color:#C678DD;--shiki-dark:#C678DD;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> true</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    beans</span><span style="color:#C678DD;--shiki-dark:#C678DD;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">      enabled</span><span style="color:#C678DD;--shiki-dark:#C678DD;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> true</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述配置只暴露info,health,env,beans四个endpoints, web通过可以<code>/manage</code>访问，</p><figure><img src="https://raw.githubusercontent.com/MrJackC/PicGoImages/main/other/202404232200850.png" alt="image-20220720202034772" tabindex="0" loading="lazy"><figcaption>image-20220720202034772</figcaption></figure><h2 id="_3-endpoints的进一步拓展配置" tabindex="-1"><a class="header-anchor" href="#_3-endpoints的进一步拓展配置"><span>3. endpoints的进一步拓展配置</span></a></h2><h3 id="_3-1-与springsecurity集成保障安全" tabindex="-1"><a class="header-anchor" href="#_3-1-与springsecurity集成保障安全"><span>3.1 与SpringSecurity集成保障安全</span></a></h3><p>正是由于endpoint可能潜在暴露应用的安全性，web方式的endpoint才在默认情况下只暴露了一个/health。</p><p>如果你需要暴露更多，并保证endpoint接口安全，可以与Spring Security集成，比如</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Configuration</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">proxyBeanMethods</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> false</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> MySecurityConfiguration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Bean</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> SecurityFilterChain</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> securityFilterChain</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">HttpSecurity</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> http</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> throws</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Exception</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        http</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">requestMatcher</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">EndpointRequest</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">toAnyEndpoint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">())</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">authorizeRequests</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">((requests) </span><span style="color:#C678DD;--shiki-dark:#C678DD;">-&gt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> requests</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">anyRequest</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">hasRole</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;ENDPOINT_ADMIN&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        http</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">httpBasic</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> http</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><h3 id="_3-2-endpoint跨域访问" tabindex="-1"><a class="header-anchor" href="#_3-2-endpoint跨域访问"><span>3.2 Endpoint跨域访问</span></a></h3><p>跨域访问，可以通过如下配置：</p><div class="language-yml" data-ext="yml" data-title="yml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">management</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  endpoints</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    web</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">      cors</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        allowed-origins</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;https://example.com&quot;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        allowed-methods</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;GET,POST&quot;</span></span></code></pre></div><h3 id="_3-3-实现自己的endpoint" tabindex="-1"><a class="header-anchor" href="#_3-3-实现自己的endpoint"><span>3.3 实现自己的Endpoint</span></a></h3><p>我们可以通过@JmxEndpoint or @WebEndpoint注解来定义自己的endpoint, 然后通过@ReadOperation, @WriteOperation或者@DeleteOperation来暴露操作，</p><p>比如添加系统时间date的endpoint</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">package</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> tech.pdai.springboot.actuator</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> java.time.LocalDateTime</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> org.springframework.boot.actuate.endpoint.annotation.ReadOperation</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> org.springframework.boot.actuate.endpoint.web.annotation.WebEndpoint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> org.springframework.http.ResponseEntity</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> org.springframework.web.bind.annotation.RestController</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@author</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> pdai</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">RestController</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;custom&quot;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">WebEndpoint</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">id</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;date&quot;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> CustomEndpointController</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">ReadOperation</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> ResponseEntity</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> currentDate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> ResponseEntity</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">ok</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">LocalDateTime</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">now</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">toString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>enable 自定义的date</p><div class="language-yml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">management</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  endpoints</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    enabled-by-default</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">false</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    web</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">      base-path</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">/manage</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">      exposure</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        include</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;info,health,env,beans,date&#39;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  endpoint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    info</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">      enabled</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">true</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    health</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">      enabled</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">true</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    env</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">      enabled</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">true</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    beans</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">      enabled</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">true</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    date</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">      enabled</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">true</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你可以看到所有开放的接口中增加了date</p><figure><img src="https://raw.githubusercontent.com/MrJackC/PicGoImages/main/other/202404232200896.png" alt="image-20220720203321468" tabindex="0" loading="lazy"><figcaption>image-20220720203321468</figcaption></figure><p>访问效果</p><figure><img src="https://raw.githubusercontent.com/MrJackC/PicGoImages/main/other/202404232200928.png" alt="image-20220720203342038" tabindex="0" loading="lazy"><figcaption>image-20220720203342038</figcaption></figure><h3 id="_3-4-组件的health状况" tabindex="-1"><a class="header-anchor" href="#_3-4-组件的health状况"><span>3.4 组件的health状况</span></a></h3><p>SpringBoot默认集成了如下常见中间件的health监控</p><figure><img src="https://raw.githubusercontent.com/MrJackC/PicGoImages/main/other/202404232200969.png" alt="image-20220720203409194" tabindex="0" loading="lazy"><figcaption>image-20220720203409194</figcaption></figure><p>当然你也可以自定义HealthIndicator</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">package</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> tech.pdai.springboot.actuator</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> org.springframework.boot.actuate.health.Health</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> org.springframework.boot.actuate.health.HealthIndicator</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> org.springframework.stereotype.Component</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@author</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> pdai</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Component</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> CustomHealthIndicator</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> implements</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> HealthIndicator</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Health</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> health</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        int</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> errorCode</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> check</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (errorCode</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">!=</span><span style="color:#D19A66;--shiki-dark:#D19A66;">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">            return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Health</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">down</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">withDetail</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;Error Code&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, errorCode).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Health</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">up</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> int</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> check</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // perform some specific health check</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>更详细的信息可以参考</p><h3 id="_3-5-metrics接入监控系统" tabindex="-1"><a class="header-anchor" href="#_3-5-metrics接入监控系统"><span>3.5 Metrics接入监控系统</span></a></h3><p>这个也是比较常用的，具体参考</p><figure><img src="https://raw.githubusercontent.com/MrJackC/PicGoImages/main/other/202404232200000.png" alt="image-20220720203536413" tabindex="0" loading="lazy"><figcaption>image-20220720203536413</figcaption></figure><h3 id="_3-6-info信息如何获取" tabindex="-1"><a class="header-anchor" href="#_3-6-info信息如何获取"><span>3.6 Info信息如何获取</span></a></h3><p>有细心的小伙伴会发现/info是空的，最简单的配置方式是在spring-boot-maven-plugin中加入build-info， 编译成jar后运行，即可获取info：</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">plugins</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">plugin</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;org.springframework.boot&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;spring-boot-maven-plugin&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">executions</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">execution</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">goals</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">goal</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;build-info&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">goal</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">goals</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">execution</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">executions</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">plugin</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">plugins</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章"><span>参考文章</span></a></h2><p><a href="https://pdai.tech/md/spring/springboot/springboot-x-monitor-actuartor.html" target="_blank" rel="noopener noreferrer"><strong>SpringBoot监控 - 集成acturator监控工具</strong></a></p>`,62)]))}const p=a(t,[["render",r],["__file","springboot-y-monitor-acturator.html.vue"]]),d=JSON.parse('{"path":"/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-y-monitor-acturator.html","title":"SpringBoot监控 - 集成acturator监控工具","lang":"zh-CN","frontmatter":{"aliases":"SpringBoot监控 - 集成acturator监控工具","tags":null,"cssclass":null,"source":null,"order":410,"created":"2024-04-23 20:40","updated":"2024-10-11 16:46","description":"SpringBoot监控 - 集成acturator监控工具 当SpringBoot的应用部署到生产环境中后，如何监控和管理呢？比如审计日志，监控状态，指标收集等。为了解决这个问题，SpringBoot提供了Actuator。本文主要介绍Spring Boot Actuator及实现案例。 1. 知识准备 需要了解什么是Spring Boot Actu...","head":[["meta",{"property":"og:url","content":"https://mrjackc.github.io/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/springboot-y-monitor-acturator.html"}],["meta",{"property":"og:site_name","content":"mrjason’s Blog"}],["meta",{"property":"og:title","content":"SpringBoot监控 - 集成acturator监控工具"}],["meta",{"property":"og:description","content":"SpringBoot监控 - 集成acturator监控工具 当SpringBoot的应用部署到生产环境中后，如何监控和管理呢？比如审计日志，监控状态，指标收集等。为了解决这个问题，SpringBoot提供了Actuator。本文主要介绍Spring Boot Actuator及实现案例。 1. 知识准备 需要了解什么是Spring Boot Actu..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/MrJackC/PicGoImages/main/other/202404232200850.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-21T07:03:09.000Z"}],["meta",{"property":"article:author","content":"MrJason"}],["meta",{"property":"article:modified_time","content":"2024-10-21T07:03:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SpringBoot监控 - 集成acturator监控工具\\",\\"image\\":[\\"https://raw.githubusercontent.com/MrJackC/PicGoImages/main/other/202404232200850.png\\",\\"https://raw.githubusercontent.com/MrJackC/PicGoImages/main/other/202404232200896.png\\",\\"https://raw.githubusercontent.com/MrJackC/PicGoImages/main/other/202404232200928.png\\",\\"https://raw.githubusercontent.com/MrJackC/PicGoImages/main/other/202404232200969.png\\",\\"https://raw.githubusercontent.com/MrJackC/PicGoImages/main/other/202404232200000.png\\"],\\"dateModified\\":\\"2024-10-21T07:03:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MrJason\\",\\"url\\":\\"https://mrjackc.github.io\\"}]}"]]},"headers":[{"level":2,"title":"1. 知识准备","slug":"_1-知识准备","link":"#_1-知识准备","children":[{"level":3,"title":"1.1 什么是Actuator?","slug":"_1-1-什么是actuator","link":"#_1-1-什么是actuator","children":[]},{"level":3,"title":"1.2 什么是Spring Boot Actuator？","slug":"_1-2-什么是spring-boot-actuator","link":"#_1-2-什么是spring-boot-actuator","children":[]},{"level":3,"title":"1.3 什么是Actuator Endpoints？","slug":"_1-3-什么是actuator-endpoints","link":"#_1-3-什么是actuator-endpoints","children":[]}]},{"level":2,"title":"2. 简单示例","slug":"_2-简单示例","link":"#_2-简单示例","children":[{"level":3,"title":"2.1 POM引入actuator包","slug":"_2-1-pom引入actuator包","link":"#_2-1-pom引入actuator包","children":[]},{"level":3,"title":"2.2 yml配置","slug":"_2-2-yml配置","link":"#_2-2-yml配置","children":[]}]},{"level":2,"title":"3. endpoints的进一步拓展配置","slug":"_3-endpoints的进一步拓展配置","link":"#_3-endpoints的进一步拓展配置","children":[{"level":3,"title":"3.1 与SpringSecurity集成保障安全","slug":"_3-1-与springsecurity集成保障安全","link":"#_3-1-与springsecurity集成保障安全","children":[]},{"level":3,"title":"3.2 Endpoint跨域访问","slug":"_3-2-endpoint跨域访问","link":"#_3-2-endpoint跨域访问","children":[]},{"level":3,"title":"3.3 实现自己的Endpoint","slug":"_3-3-实现自己的endpoint","link":"#_3-3-实现自己的endpoint","children":[]},{"level":3,"title":"3.4 组件的health状况","slug":"_3-4-组件的health状况","link":"#_3-4-组件的health状况","children":[]},{"level":3,"title":"3.5 Metrics接入监控系统","slug":"_3-5-metrics接入监控系统","link":"#_3-5-metrics接入监控系统","children":[]},{"level":3,"title":"3.6 Info信息如何获取","slug":"_3-6-info信息如何获取","link":"#_3-6-info信息如何获取","children":[]}]},{"level":2,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}],"git":{"createdTime":1729494189000,"updatedTime":1729494189000,"contributors":[{"name":"MrJason","email":"845886914@qq.com","commits":1}]},"readingTime":{"minutes":4.84,"words":1451},"filePathRelative":"posts/Java/Java框架/SpringBoot/springboot-y-monitor-acturator.md","localizedDate":"2024年10月21日","excerpt":"\\n<blockquote>\\n<p>当SpringBoot的应用部署到生产环境中后，如何监控和管理呢？比如审计日志，监控状态，指标收集等。为了解决这个问题，SpringBoot提供了Actuator。本文主要介绍Spring Boot Actuator及实现案例。</p>\\n</blockquote>\\n<h2>1. 知识准备</h2>\\n<blockquote>\\n<p>需要了解什么是Spring Boot Actuator， 以及其提供的功能(Endpoints)。</p>\\n</blockquote>\\n<h3>1.1 什么是Actuator?</h3>\\n<blockquote>\\n<p>致动器（actuator）是2018年公布的计算机科学技术名词。</p>\\n</blockquote>","autoDesc":true}');export{p as comp,d as data};
