import{_ as a,c as n,a as i,o as l}from"./app-JRvFIbSa.js";const p={};function o(r,s){return l(),n("div",null,s[0]||(s[0]=[i(`<h1 id="springboot-高级" tabindex="-1"><a class="header-anchor" href="#springboot-高级"><span>SpringBoot 高级</span></a></h1><h2 id="springboot-启动流程" tabindex="-1"><a class="header-anchor" href="#springboot-启动流程"><span>SpringBoot 启动流程</span></a></h2><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111532170.png" alt="SpringBoot启动流程.png" tabindex="0" loading="lazy"><figcaption>SpringBoot启动流程.png</figcaption></figure><h2 id="_01-springboot高级-今日内容" tabindex="-1"><a class="header-anchor" href="#_01-springboot高级-今日内容"><span><strong>01-SpringBoot高级-今日内容</strong></span></a></h2><ul><li>SpringBoot自定配置</li><li>SpringBoot事件监听</li><li>SpringBoot流程分析</li><li>SpringBoot监控</li><li>SpringBoot部署</li></ul><h2 id="_02-springboot自动配置-condition-1" tabindex="-1"><a class="header-anchor" href="#_02-springboot自动配置-condition-1"><span><strong>02-SpringBoot自动配置-Condition-1</strong></span></a></h2><p>Condition是Spring4.0后引入的条件化配置接口，通过实现Condition接口可以完成有条件的加载相应的Bean</p><p>@Conditional要配和Condition的实现类（ClassCondition）进行使用</p><ul><li>ClassCondition</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> ClassCondition</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> implements</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Condition</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> context</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> 上下文对象。用于获取环境，IOC容器，ClassLoader对象</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> metadata</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> 注解元对象。 可以用于获取注解定义的属性值</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@return</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> boolean</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> matches</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">ConditionContext</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> context</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">AnnotatedTypeMetadata</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> metadata</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        //1.需求： 导入Jedis坐标后创建Bean</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        //思路：判断redis.clients.jedis.Jedis.class文件是否存在</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        boolean</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> flag</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        try</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">            Class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#C678DD;--shiki-dark:#C678DD;">?</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75;">cls</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">forName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;redis.clients.jedis.Jedis&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD;">catch</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">ClassNotFoundException</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> e</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            flag </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> false</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> flag;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>UserConfig</li></ul><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Configuration</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> UserConfig</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Bean</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Conditional</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">ClassCondition</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">class</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> User</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> user</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> User</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>测试</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">SpringBootApplication</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> SpringbootConditionApplication</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[] </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        //启动SpringBoot的应用，返回Spring的IOC容器</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        ConfigurableApplicationContext</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> context</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> SpringApplication</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">run</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">SpringbootConditionApplication</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, args);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        Object</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> user</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> context</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getBean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;user&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(user);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><h2 id="_03-springboot自动配置-condition-2" tabindex="-1"><a class="header-anchor" href="#_03-springboot自动配置-condition-2"><span><strong>03-SpringBoot自动配置-Condition-2</strong></span></a></h2><p>需求：将类的判断定义为动态的。判断哪个字节码文件存在可以动态指定。</p><p>自定义条件注解类</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> org.springframework.context.annotation.Conditional</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> java.lang.annotation.*</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Target</span><span style="color:#E06C75;--shiki-dark:#E06C75;">({</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">ElementType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">TYPE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> ElementType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">METHOD</span><span style="color:#E06C75;--shiki-dark:#E06C75;">})</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Retention</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">RetentionPolicy</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">RUNTIME</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Documented</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Conditional</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">ClassCondition</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">class</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> @</span><span style="color:#C678DD;--shiki-dark:#C678DD;">interface</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> ConditionOnClass</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    String</span><span style="color:#E06C75;--shiki-dark:#E06C75;">[] </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">value</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">}</span></span></code></pre></div><p>**注意：**此处@ConditionOnClass为自定义注解</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Configuration</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> UserConfig</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Bean</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    //@Conditional(ClassCondition.class)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">ConditionOnClass</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;com.alibaba.fastjson.JSON&quot;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> User</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> user</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> User</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Bean</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">ConditionalOnProperty</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">name</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;itcast&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#D19A66;--shiki-dark:#D19A66;">havingValue</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;itheima&quot;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> User</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> user2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> User</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试User对象的创建</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">SpringBootApplication</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> SpringbootConditionApplication</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[] </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        //启动SpringBoot的应用，返回Spring的IOC容器</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        ConfigurableApplicationContext</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> context</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> SpringApplication</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">run</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">SpringbootConditionApplication</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, args);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        Object</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> user</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> context</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getBean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;user&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(user);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>查看条件注解源码</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410151701886.png" alt="1571383973124" tabindex="0" loading="lazy"><figcaption>1571383973124</figcaption></figure><p><strong>SpringBoot 提供的常用条件注解：</strong></p><p>ConditionalOnProperty：判断配置文件中是否有对应属性和值才初始化Bean</p><p>ConditionalOnClass：判断环境中是否有对应字节码文件才初始化Bean</p><p>ConditionalOnMissingBean：判断环境中没有对应Bean才初始化Bean</p><h2 id="_04-springboot自动配置-切换内置web服务器" tabindex="-1"><a class="header-anchor" href="#_04-springboot自动配置-切换内置web服务器"><span><strong>04-SpringBoot自动配置-切换内置web服务器</strong></span></a></h2><p>查看继承关系图</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410151701948.png" alt="1571306414687" tabindex="0" loading="lazy"><figcaption>1571306414687</figcaption></figure><p>排除Tomcat</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410151701043.png" alt="1571306366201" tabindex="0" loading="lazy"><figcaption>1571306366201</figcaption></figure><p>pom文件中的排除依赖效果</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;org.springframework.boot&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;spring-boot-starter-web&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            &lt;!--排除tomcat依赖--&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">exclusions</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">exclusion</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;spring-boot-starter-tomcat&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;org.springframework.boot&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">exclusion</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">exclusions</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        &lt;!--引入jetty的依赖--&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;spring-boot-starter-jetty&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;org.springframework.boot&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_05-springboot自动配置-enable注解原理" tabindex="-1"><a class="header-anchor" href="#_05-springboot自动配置-enable注解原理"><span>05-SpringBoot自动配置-Enable注解原理</span></a></h2><ul><li><p>SpringBoot不能直接获取在其他工程中定义的Bean</p><p>演示代码：</p><p>springboot-enable工程</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"></span></code></pre></div></li></ul><p>/**</p><ul><li>@ComponentScan 扫描范围：当前引导类所在包及其子包</li><li><ul><li>com.mrjason.springbootenable</li><li>com.mrjason.config</li><li><a href="//1.%E4%BD%BF%E7%94%A8@xn--ComponentScancom-1416ad3o.mrjason.xn--config-gz4j" target="_blank" rel="noopener noreferrer">//1.使用@ComponentScan扫描com.mrjason.config包</a></li><li><a href="//2.xn--onq9nq7ic07b" target="_blank" rel="noopener noreferrer">//2.可以使用</a>@Import注解，加载类。这些类都会被Spring创建，并放入IOC容器</li><li><a href="//3.xn--Import-2x8i375aihsqcu81wey6d8jblxh4q3a" target="_blank" rel="noopener noreferrer">//3.可以对Import注解进行封装</a>。<br> */</li></ul></li></ul><p>//@ComponentScan(&quot;com.mrjason.config&quot;)<br> //@Import(UserConfig.class)<br> @EnableUser<br> @SpringBootApplication<br> public class SpringbootEnableApplication {</p><pre><code>  public static void main(String[] args) {
      ConfigurableApplicationContext context = SpringApplication.run(SpringbootEnableApplication.class, args);

   //获取Bean
      Object user = context.getBean(&quot;user&quot;);
      System.out.println(user);

}
</code></pre><p>}</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span>pom中引入springboot-enable-other</span></span></code></pre></div><pre><code>	&lt;dependency&gt;
          &lt;groupId&gt;com.mrjason&lt;/groupId&gt;
        &lt;artifactId&gt;springboot-enable-other&lt;/artifactId&gt;
          &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;
    &lt;/dependency&gt;
</code></pre><div class="language- line-numbers-mode" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span>springboot-enable-other工程</span></span>
<span class="line"><span></span></span>
<span class="line"><span>**UserConfig**</span></span>
<span class="line"><span></span></span>
<span class="line"><span>\`\`\`java</span></span>
<span class="line"><span>@Configuration</span></span>
<span class="line"><span>public class UserConfig {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Bean</span></span>
<span class="line"><span>  public User user() {</span></span>
<span class="line"><span>        return new User();</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>EnableUser注解类</strong></p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> org.springframework.context.annotation.Import</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> java.lang.annotation.*</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Target</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">ElementType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">TYPE</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Retention</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">RetentionPolicy</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">RUNTIME</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Documented</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Import</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">UserConfig</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">class</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> @</span><span style="color:#C678DD;--shiki-dark:#C678DD;">interface</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> EnableUser</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">}</span></span></code></pre></div><p><strong>原因</strong>：@ComponentScan 扫描范围：当前引导类所在包及其子包</p><p><strong>三种解决方案：</strong></p><p>1.使用@ComponentScan扫描com.mrjason.config包</p><p>2.可以使用@Import注解，加载类。这些类都会被Spring创建，并放入IOC容器</p><p>3.可以对Import注解进行封装。</p><p><strong>重点：Enable注解底层原理是使用@Import注解实现Bean的动态加载</strong></p><h2 id="_06-springboot自动配置-import详解" tabindex="-1"><a class="header-anchor" href="#_06-springboot自动配置-import详解"><span><strong>06-SpringBoot自动配置-@Import详解</strong></span></a></h2><p>@Enable*底层依赖于@Import注解导入一些类，使用@Import导入的类会被Spring加载到IOC容器中。而@Import提供4中用法：</p><p>①导入Bean</p><p>②导入配置类</p><p>③导入 ImportSelector 实现类。一般用于加载配置文件中的类</p><p>④导入 ImportBeanDefinitionRegistrar 实现类。</p><ul><li><p>导入Bean @Import(User.class)</p></li><li><p>导入配置类 @Import(UserConfig.class)</p></li><li><p>导入 ImportSelector 实现类 @Import(MyImportSelector.class)</p><p>MyImportSelector</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> MyImportSelector</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> implements</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> ImportSelector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> String</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">[] selectImports</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">AnnotationMetadata</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> importingClassMetadata</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[]{</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;com.mrjason.domain.User&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;com.mrjason.domain.Role&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div></li><li><p>导入 ImportBeanDefinitionRegistrar 实现类。@Import({MyImportBeanDefinitionRegistrar.class})</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> MyImportBeanDefinitionRegistrar</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> implements</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> ImportBeanDefinitionRegistrar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> registerBeanDefinitions</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">AnnotationMetadata</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> importingClassMetadata</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">BeanDefinitionRegistry</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> registry</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        AbstractBeanDefinition</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> beanDefinition</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> BeanDefinitionBuilder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">rootBeanDefinition</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">User</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getBeanDefinition</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        registry</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">registerBeanDefinition</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;user&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, beanDefinition);</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>SpringbootEnableApplication测试代码</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span></code></pre></div></li></ul><ul><li>Import4中用法： <ul><li><ol><li>导入Bean</li></ol></li><li><ol start="2"><li>导入配置类</li></ol></li><li><ol start="3"><li>导入ImportSelector的实现类。</li></ol></li><li><ol start="4"><li>导入ImportBeanDefinitionRegistrar实现类<br> */</li></ol></li></ul></li></ul><p>//@Import(User.class)<br> //@Import(UserConfig.class)<br> //@Import(MyImportSelector.class)<br> //@Import({MyImportBeanDefinitionRegistrar.class})</p><p>@SpringBootApplication<br> public class SpringbootEnableApplication {</p><pre><code>  public static void main(String[] args) {
      ConfigurableApplicationContext context = SpringApplication.run(SpringbootEnableApplication.class, args);

      /*//获取Bean
      Object user = context.getBean(&quot;user&quot;);
      System.out.println(user);*/

      /*User user = context.getBean(User.class);
      System.out.println(user);

      Role role = context.getBean(Role.class);
      System.out.println(role);*/

    /*  Object user = context.getBean(&quot;user&quot;);
      System.out.println(user);*/
   Map&lt;String, User&gt; map = context.getBeansOfType(User.class);
      System.out.println(map);

  }
</code></pre><p>}</p><div class="language- line-numbers-mode" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>@EnableAutoConfiguration中使用的是第三种方式：@Import(AutoConfigurationImportSelector.class)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>## **07-SpringBoot自动配置-@EnableAutoConfiguration详解**</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>![1571387384701](https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410151701081.png)</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>- @EnableAutoConfiguration 注解内部使用 @Import(AutoConfigurationImportSelector.**class**)来加载配置类。 </span></span>
<span class="line"><span></span></span>
<span class="line"><span>- 配置文件位置：META-INF/spring.factories，该配置文件中定义了大量的配置类，当 SpringBoot 应用启动时，会自动加载这些配置类，初始化Bean</span></span>
<span class="line"><span></span></span>
<span class="line"><span>- 并不是所有的Bean都会被初始化，在配置类中使用Condition来加载满足条件的Bean</span></span>
<span class="line"><span></span></span>
<span class="line"><span>## **08-SpringBoot自动配置-自定义starter步骤分析**</span></span>
<span class="line"><span></span></span>
<span class="line"><span>**需求：**自定义redis-starter。要求当导入redis坐标时，SpringBoot自动创建Jedis的Bean。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>**步骤：**</span></span>
<span class="line"><span></span></span>
<span class="line"><span>①创建 redis-spring-boot-autoconfigure 模块</span></span>
<span class="line"><span></span></span>
<span class="line"><span>②创建 redis-spring-boot-starter 模块,依赖 redis-spring-boot-autoconfigure的模块</span></span>
<span class="line"><span></span></span>
<span class="line"><span>③在 redis-spring-boot-autoconfigure 模块中初始化 Jedis 的 Bean。并定义META-INF/spring.factories 文件</span></span>
<span class="line"><span></span></span>
<span class="line"><span>④在测试模块中引入自定义的 redis-starter 依赖，测试获取 Jedis 的Bean，操作 redis。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>## **09-SpringBoot自动配置-自定义starter实现-1**</span></span>
<span class="line"><span></span></span>
<span class="line"><span>1. **创建redis-spring-boot-starter工程**</span></span>
<span class="line"><span></span></span>
<span class="line"><span>​         pom文件中引入redis-spring-boot-autoconfigure</span></span>
<span class="line"><span></span></span>
<span class="line"><span>\`\`\`xml</span></span>
<span class="line"><span>&lt;!--引入configure--&gt;</span></span>
<span class="line"><span>      &lt;dependency&gt;</span></span>
<span class="line"><span>          &lt;groupId&gt;com.mrjason&lt;/groupId&gt;</span></span>
<span class="line"><span>          &lt;artifactId&gt;redis-spring-boot-autoconfigure&lt;/artifactId&gt;</span></span>
<span class="line"><span>          &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span></span>
<span class="line"><span>      &lt;/dependency&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><strong>创建redis-spring-boot-autoconfigure配置工程</strong></li></ol><p>创建RedisProperties配置文件参数绑定类</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">ConfigurationProperties</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">prefix</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;redis&quot;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> RedisProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> host </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;localhost&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> int</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> port </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 6379</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> String</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> getHost</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> host;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> setHost</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> host</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">host</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> host;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> int</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> getPort</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> port;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> setPort</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#C678DD;--shiki-dark:#C678DD;">int</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> port</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">port</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> port;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建RedisAutoConfiguration自动配置类</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Configuration</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">EnableConfigurationProperties</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">RedisProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">class</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> RedisAutoConfiguration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     * 提供Jedis的bean</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Bean</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Jedis</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> jedis</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">RedisProperties</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> redisProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">       </span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> Jedis</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">redisProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getHost</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">redisProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getPort</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>在resource目录下创建META-INF文件夹并创建spring.factories</p><p>注意：”\\ “是换行使用的</p><div class="language-properties" data-ext="properties" data-title="properties"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">org.springframework.boot.autoconfigure.EnableAutoConfiguration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">\\</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">  com.mrjason.redis.config.RedisAutoConfiguration</span></span></code></pre></div><ol start="3"><li><strong>在springboot-enable工程中引入自定义的redis的starter</strong></li></ol><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>  &lt;!--自定义的redis的starter--&gt;</span></span>
<span class="line"><span>        &lt;dependency&gt;</span></span>
<span class="line"><span>            &lt;groupId&gt;com.mrjason&lt;/groupId&gt;</span></span>
<span class="line"><span>            &lt;artifactId&gt;redis-spring-boot-starter&lt;/artifactId&gt;</span></span>
<span class="line"><span>            &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span></span>
<span class="line"><span>        &lt;/dependency&gt;</span></span></code></pre></div><p>在SpringbootEnableApplication启动类中测试</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Jedis</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> jedis </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> context</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getBean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Jedis</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(jedis);</span></span></code></pre></div><h2 id="_10-springboot自动配置-自定义starter实现-2" tabindex="-1"><a class="header-anchor" href="#_10-springboot自动配置-自定义starter实现-2"><span><strong>10-SpringBoot自动配置-自定义starter实现-2</strong></span></a></h2><p>测试springboot-enable工程中的application.properties中的配置参数</p><div class="language-properties" data-ext="properties" data-title="properties"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">redis.port</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">6666</span></span></code></pre></div><p>使用注解完成有条件加载配置类</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Configuration</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">EnableConfigurationProperties</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">RedisProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">class</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">ConditionalOnClass</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Jedis</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">class</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> RedisAutoConfiguration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     * 提供Jedis的bean</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Bean</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">ConditionalOnMissingBean</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">name</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;jedis&quot;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Jedis</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> jedis</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">RedisProperties</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> redisProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;RedisAutoConfiguration....&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> Jedis</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">redisProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getHost</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">redisProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getPort</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_11-springboot事件监听" tabindex="-1"><a class="header-anchor" href="#_11-springboot事件监听"><span><strong>11-SpringBoot事件监听</strong></span></a></h2><p>Java中的事件监听机制定义了以下几个角色：</p><p>①事件：Event，继承 java.util.EventObject 类的对象</p><p>②事件源：Source ，任意对象Object</p><p>③监听器：Listener，实现 java.util.EventListener 接口 的对象</p><p>SpringBoot 在项目启动时，会对几个监听器进行回调，我们可以实现这些监听器接口，在项目启动时完成一些操作。</p><ul><li><p>ApplicationContextInitializer、</p></li><li><p>SpringApplicationRunListener、</p></li><li><p>CommandLineRunner、</p></li><li><p>ApplicationRunner</p><p>自定义监听器的启动时机：MyApplicationRunner和MyCommandLineRunner都是当项目启动后执行，使用@Component放入容器即可使用</p></li></ul><p>MyApplicationRunner</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * 当项目启动后执行run方法。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Component</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> MyApplicationRunner</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> implements</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> ApplicationRunner</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> run</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">ApplicationArguments</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> throws</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Exception</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;ApplicationRunner...run&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Arrays</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">asList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getSourceArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()));</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>MyCommandLineRunner</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Component</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> MyCommandLineRunner</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> implements</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> CommandLineRunner</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> run</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">... </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> throws</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Exception</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;CommandLineRunner...run&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Arrays</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">asList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(args));</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>MyApplicationContextInitializer的使用要在resource文件夹下添加META-INF/spring.factories</p><div class="language-properties" data-ext="properties" data-title="properties"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">org.springframework.context.ApplicationContextInitializer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">com.mrjason.springbootlistener.listener.MyApplicationContextInitializer</span></span></code></pre></div><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>@Component</span></span>
<span class="line"><span>public class MyApplicationContextInitializer implements ApplicationContextInitializer {</span></span>
<span class="line"><span>    @Override</span></span>
<span class="line"><span>    public void initialize(ConfigurableApplicationContext applicationContext) {</span></span>
<span class="line"><span>        System.out.println(&quot;ApplicationContextInitializer....initialize&quot;);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>MySpringApplicationRunListener的使用要添加<strong>构造器</strong></p><div class="language- line-numbers-mode" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>public class MySpringApplicationRunListener implements SpringApplicationRunListener {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    public MySpringApplicationRunListener(SpringApplication application, String[] args) {</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Override</span></span>
<span class="line"><span>    public void starting() {</span></span>
<span class="line"><span>        System.out.println(&quot;starting...项目启动中&quot;);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Override</span></span>
<span class="line"><span>    public void environmentPrepared(ConfigurableEnvironment environment) {</span></span>
<span class="line"><span>        System.out.println(&quot;environmentPrepared...环境对象开始准备&quot;);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Override</span></span>
<span class="line"><span>    public void contextPrepared(ConfigurableApplicationContext context) {</span></span>
<span class="line"><span>        System.out.println(&quot;contextPrepared...上下文对象开始准备&quot;);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Override</span></span>
<span class="line"><span>    public void contextLoaded(ConfigurableApplicationContext context) {</span></span>
<span class="line"><span>        System.out.println(&quot;contextLoaded...上下文对象开始加载&quot;);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Override</span></span>
<span class="line"><span>    public void started(ConfigurableApplicationContext context) {</span></span>
<span class="line"><span>        System.out.println(&quot;started...上下文对象加载完成&quot;);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Override</span></span>
<span class="line"><span>    public void running(ConfigurableApplicationContext context) {</span></span>
<span class="line"><span>        System.out.println(&quot;running...项目启动完成，开始运行&quot;);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Override</span></span>
<span class="line"><span>    public void failed(ConfigurableApplicationContext context, Throwable exception) {</span></span>
<span class="line"><span>        System.out.println(&quot;failed...项目启动失败&quot;);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_12-springboot流程分析-初始化" tabindex="-1"><a class="header-anchor" href="#_12-springboot流程分析-初始化"><span><strong>12-SpringBoot流程分析-初始化</strong></span></a></h2><ol><li><p>配置启动引导类（判断是否有启动主类）</p></li><li><p>判断是否是Web环境</p></li><li><p>获取初始化类、监听器类</p></li></ol><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410151701116.png" alt="1571369439416" tabindex="0" loading="lazy"><figcaption>1571369439416</figcaption></figure><h2 id="_13-springboot流程分析-run" tabindex="-1"><a class="header-anchor" href="#_13-springboot流程分析-run"><span><strong>13-SpringBoot流程分析-run</strong></span></a></h2><ol><li><p>启动计时器</p></li><li><p>执行监听器</p></li><li><p>准备环境</p></li><li><p>打印banner：可以resource下粘贴自定义的banner</p></li><li><p>创建context</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>refreshContext(context);</span></span></code></pre></div><p>执行refreshContext方法后才真正创建Bean</p></li></ol><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410151701160.png" alt="1571373793325" tabindex="0" loading="lazy"><figcaption>1571373793325</figcaption></figure><h2 id="_14-springboot监控-actuator基本使用" tabindex="-1"><a class="header-anchor" href="#_14-springboot监控-actuator基本使用"><span><strong>14-SpringBoot监控-actuator基本使用</strong></span></a></h2><p>①导入依赖坐标</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;org.springframework.boot&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;spring-boot-starter-actuator&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><p>②访问<a href="http://localhost:8080/acruator" target="_blank" rel="noopener noreferrer">http://localhost:8080/acruator</a></p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    &quot;_links&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:{</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        &quot;self&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:{</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            &quot;href&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;http://localhost:8080/actuator&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            &quot;templated&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;">false</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        },</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        &quot;health&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:{</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            &quot;href&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;http://localhost:8080/actuator/health&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            &quot;templated&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;">false</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        },</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        &quot;health-component-instance&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:{</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            &quot;href&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;http://localhost:8080/actuator/health/{component}/{instance}&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            &quot;templated&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;">true</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        },</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        &quot;health-component&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:{</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            &quot;href&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;http://localhost:8080/actuator/health/{component}&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            &quot;templated&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;">true</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        },</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        &quot;info&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:{</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            &quot;href&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;http://localhost:8080/actuator/info&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            &quot;templated&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;">false</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="http://localhost:8080/actuator/info" target="_blank" rel="noopener noreferrer">http://localhost:8080/actuator/info</a></p><p>在application.properties中配置</p><div class="language-properties" data-ext="properties" data-title="properties"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">info.name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">lucy</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">info.age</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">99</span></span></code></pre></div><p><a href="http://localhost:8080/actuator/health" target="_blank" rel="noopener noreferrer">http://localhost:8080/actuator/health</a></p><p>开启健康检查详细信息</p><div class="language-properties" data-ext="properties" data-title="properties"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">management.endpoint.health.show-details</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">always</span></span></code></pre></div><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    &quot;status&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;UP&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    &quot;details&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:{</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        &quot;diskSpace&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:{</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            &quot;status&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;UP&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            &quot;details&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:{</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">                &quot;total&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;">159579508736</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">                &quot;free&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;">13558104064</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">                &quot;threshold&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;">10485760</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        },</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        &quot;redis&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:{</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            &quot;status&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;UP&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            &quot;details&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:{</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">                &quot;version&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;2.4.5&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_15-springboot监控-actuator开启所有endpoint" tabindex="-1"><a class="header-anchor" href="#_15-springboot监控-actuator开启所有endpoint"><span><strong>15-SpringBoot监控-actuator开启所有endpoint</strong></span></a></h2><p>开启所有endpoint</p><p>在application.properties中配置：</p><div class="language-properties" data-ext="properties" data-title="properties"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">management.endpoints.web.exposure.include</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">*</span></span></code></pre></div><p>开启所有endpoint的返回结果：</p><div class="language-properties line-numbers-mode" data-ext="properties" data-title="properties"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">{</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">    &quot;_links&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:{</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &quot;self&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:{</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;href&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;http://localhost:8080/actuator&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;templated&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:false</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        },</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &quot;auditevents&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:{</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;href&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;http://localhost:8080/actuator/auditevents&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;templated&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:false</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        },</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &quot;beans&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:{</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;href&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;http://localhost:8080/actuator/beans&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;templated&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:false</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        },</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &quot;caches-cache&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:{</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;href&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;http://localhost:8080/actuator/caches/{cache}&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;templated&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:true</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        },</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &quot;caches&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:{</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;href&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;http://localhost:8080/actuator/caches&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;templated&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:false</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        },</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &quot;health-component-instance&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:{</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;href&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;http://localhost:8080/actuator/health/{component}/{instance}&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;templated&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:true</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        },</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &quot;health&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:{</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;href&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;http://localhost:8080/actuator/health&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;templated&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:false</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        },</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &quot;health-component&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:{</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;href&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;http://localhost:8080/actuator/health/{component}&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;templated&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:true</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        },</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &quot;conditions&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:{</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;href&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;http://localhost:8080/actuator/conditions&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;templated&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:false</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        },</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &quot;configprops&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:{</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;href&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;http://localhost:8080/actuator/configprops&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;templated&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:false</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        },</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &quot;env&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:{</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;href&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;http://localhost:8080/actuator/env&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;templated&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:false</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        },</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &quot;env-toMatch&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:{</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;href&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;http://localhost:8080/actuator/env/{toMatch}&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;templated&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:true</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        },</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &quot;info&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:{</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;href&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;http://localhost:8080/actuator/info&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;templated&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:false</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        },</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &quot;loggers&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:{</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;href&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;http://localhost:8080/actuator/loggers&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;templated&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:false</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        },</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &quot;loggers-name&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:{</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;href&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;http://localhost:8080/actuator/loggers/{name}&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;templated&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:true</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        },</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &quot;heapdump&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:{</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;href&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;http://localhost:8080/actuator/heapdump&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;templated&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:false</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        },</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &quot;threaddump&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:{</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;href&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;http://localhost:8080/actuator/threaddump&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;templated&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:false</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        },</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &quot;metrics-requiredMetricName&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:{</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;href&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;http://localhost:8080/actuator/metrics/{requiredMetricName}&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;templated&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:true</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        },</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &quot;metrics&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:{</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;href&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;http://localhost:8080/actuator/metrics&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;templated&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:false</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        },</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &quot;scheduledtasks&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:{</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;href&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;http://localhost:8080/actuator/scheduledtasks&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;templated&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:false</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        },</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &quot;httptrace&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:{</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;href&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;http://localhost:8080/actuator/httptrace&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;templated&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:false</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        },</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &quot;mappings&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:{</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;href&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;http://localhost:8080/actuator/mappings&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;templated&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">:false</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        }</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">    }</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_16-springboot监控-springboot-admin图形化界面使用" tabindex="-1"><a class="header-anchor" href="#_16-springboot监控-springboot-admin图形化界面使用"><span><strong>16-SpringBoot监控-springboot admin图形化界面使用</strong></span></a></h2><p>SpringBoot Admin 有两个角色，客户端(Client)和服务端(Server)。</p><p>以下为创建服务端和客户端工程步骤：</p><p>admin-server：</p><p>①创建 admin-server 模块</p><p>②导入依赖坐标 admin-starter-server</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410151701213.png" alt="1571812312998" tabindex="0" loading="lazy"><figcaption>1571812312998</figcaption></figure><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;de.codecentric&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;spring-boot-admin-starter-server&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><p>③在引导类上启用监控功能@EnableAdminServer</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">EnableAdminServer</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">SpringBootApplication</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> SpringbootAdminServerApplication</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[] </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        SpringApplication</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">run</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">SpringbootAdminServerApplication</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, args);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>admin-client：</p><p>①创建 admin-client 模块</p><p>②导入依赖坐标 admin-starter-client</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  		&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;de.codecentric&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;spring-boot-admin-starter-client&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><p>③配置相关信息：server地址等</p><div class="language-properties" data-ext="properties" data-title="properties"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 执行admin.server地址</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">spring.boot.admin.client.url</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">http://localhost:9000</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">management.endpoint.health.show-details</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">always</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">management.endpoints.web.exposure.include</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">*</span></span></code></pre></div><p>④启动server和client服务，访问server</p><h2 id="_17-springboot部署" tabindex="-1"><a class="header-anchor" href="#_17-springboot部署"><span><strong>17-SpringBoot部署</strong></span></a></h2><p>SpringBoot 项目开发完毕后，支持两种方式部署到服务器：</p><p>①jar包(官方推荐)</p><p>②war包</p><p><strong>更改pom文件中的打包方式为war</strong></p><p>修改启动类</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> org.springframework.boot.SpringApplication</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> org.springframework.boot.autoconfigure.SpringBootApplication</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> org.springframework.boot.builder.SpringApplicationBuilder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> org.springframework.boot.web.servlet.support.SpringBootServletInitializer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">SpringBootApplication</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> SpringbootDeployApplication</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> extends</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> SpringBootServletInitializer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[] </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        SpringApplication</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">run</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">SpringbootDeployApplication</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, args);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    protected</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> SpringApplicationBuilder</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> configure</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">SpringApplicationBuilder</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">SpringbootDeployApplication</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>指定打包的名称</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">finalName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;springboot&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">finalName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">plugins</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">plugin</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;org.springframework.boot&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;spring-boot-maven-plugin&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">plugin</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">plugins</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div>`,149)]))}const t=a(p,[["render",o],["__file","SpringBoot高级.html.vue"]]),c=JSON.parse('{"path":"/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/SpringBoot%E9%AB%98%E7%BA%A7.html","title":"SpringBoot 高级","lang":"zh-CN","frontmatter":{"created":"2022-09-30 17:46","updated":"2024-10-15 17:01","description":"SpringBoot 高级 SpringBoot 启动流程 SpringBoot启动流程.pngSpringBoot启动流程.png 01-SpringBoot高级-今日内容 SpringBoot自定配置 SpringBoot事件监听 SpringBoot流程分析 SpringBoot监控 SpringBoot部署 02-SpringBoot自动配置-...","watermark":true,"head":[["meta",{"property":"og:url","content":"https://springg.us.kg/posts/Java/Java%E6%A1%86%E6%9E%B6/SpringBoot/SpringBoot%E9%AB%98%E7%BA%A7.html"}],["meta",{"property":"og:site_name","content":"mrjason’s Blog"}],["meta",{"property":"og:title","content":"SpringBoot 高级"}],["meta",{"property":"og:description","content":"SpringBoot 高级 SpringBoot 启动流程 SpringBoot启动流程.pngSpringBoot启动流程.png 01-SpringBoot高级-今日内容 SpringBoot自定配置 SpringBoot事件监听 SpringBoot流程分析 SpringBoot监控 SpringBoot部署 02-SpringBoot自动配置-..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111532170.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-29T09:32:06.000Z"}],["meta",{"property":"article:author","content":"MrJason"}],["meta",{"property":"article:modified_time","content":"2024-10-29T09:32:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SpringBoot 高级\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111532170.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410151701886.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410151701948.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410151701043.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410151701081.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410151701116.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410151701160.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410151701213.png\\"],\\"dateModified\\":\\"2024-10-29T09:32:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MrJason\\",\\"url\\":\\"https://springg.us.kg\\"}]}"]]},"headers":[{"level":2,"title":"SpringBoot 启动流程","slug":"springboot-启动流程","link":"#springboot-启动流程","children":[]},{"level":2,"title":"01-SpringBoot高级-今日内容","slug":"_01-springboot高级-今日内容","link":"#_01-springboot高级-今日内容","children":[]},{"level":2,"title":"02-SpringBoot自动配置-Condition-1","slug":"_02-springboot自动配置-condition-1","link":"#_02-springboot自动配置-condition-1","children":[]},{"level":2,"title":"03-SpringBoot自动配置-Condition-2","slug":"_03-springboot自动配置-condition-2","link":"#_03-springboot自动配置-condition-2","children":[]},{"level":2,"title":"04-SpringBoot自动配置-切换内置web服务器","slug":"_04-springboot自动配置-切换内置web服务器","link":"#_04-springboot自动配置-切换内置web服务器","children":[]},{"level":2,"title":"05-SpringBoot自动配置-Enable注解原理","slug":"_05-springboot自动配置-enable注解原理","link":"#_05-springboot自动配置-enable注解原理","children":[]},{"level":2,"title":"06-SpringBoot自动配置-@Import详解","slug":"_06-springboot自动配置-import详解","link":"#_06-springboot自动配置-import详解","children":[]},{"level":2,"title":"10-SpringBoot自动配置-自定义starter实现-2","slug":"_10-springboot自动配置-自定义starter实现-2","link":"#_10-springboot自动配置-自定义starter实现-2","children":[]},{"level":2,"title":"11-SpringBoot事件监听","slug":"_11-springboot事件监听","link":"#_11-springboot事件监听","children":[]},{"level":2,"title":"12-SpringBoot流程分析-初始化","slug":"_12-springboot流程分析-初始化","link":"#_12-springboot流程分析-初始化","children":[]},{"level":2,"title":"13-SpringBoot流程分析-run","slug":"_13-springboot流程分析-run","link":"#_13-springboot流程分析-run","children":[]},{"level":2,"title":"14-SpringBoot监控-actuator基本使用","slug":"_14-springboot监控-actuator基本使用","link":"#_14-springboot监控-actuator基本使用","children":[]},{"level":2,"title":"15-SpringBoot监控-actuator开启所有endpoint","slug":"_15-springboot监控-actuator开启所有endpoint","link":"#_15-springboot监控-actuator开启所有endpoint","children":[]},{"level":2,"title":"16-SpringBoot监控-springboot admin图形化界面使用","slug":"_16-springboot监控-springboot-admin图形化界面使用","link":"#_16-springboot监控-springboot-admin图形化界面使用","children":[]},{"level":2,"title":"17-SpringBoot部署","slug":"_17-springboot部署","link":"#_17-springboot部署","children":[]}],"git":{"createdTime":1729494189000,"updatedTime":1730194326000,"contributors":[{"name":"MrJason","email":"845886914@qq.com","commits":2}]},"readingTime":{"minutes":9.06,"words":2717},"filePathRelative":"posts/Java/Java框架/SpringBoot/SpringBoot高级.md","localizedDate":"2024年10月21日","excerpt":"\\n<h2>SpringBoot 启动流程</h2>\\n<figure><img src=\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410111532170.png\\" alt=\\"SpringBoot启动流程.png\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>SpringBoot启动流程.png</figcaption></figure>\\n<h2><strong>01-SpringBoot高级-今日内容</strong></h2>\\n<ul>\\n<li>SpringBoot自定配置</li>\\n<li>SpringBoot事件监听</li>\\n<li>SpringBoot流程分析</li>\\n<li>SpringBoot监控</li>\\n<li>SpringBoot部署</li>\\n</ul>","autoDesc":true}');export{t as comp,c as data};
