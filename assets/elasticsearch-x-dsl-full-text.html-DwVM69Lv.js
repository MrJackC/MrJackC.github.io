import{_ as a,c as n,a as i,o as l}from"./app-tJW29Kmg.js";const e={};function o(p,s){return l(),n("div",null,s[0]||(s[0]=[i(`<h1 id="es详解-查询-dsl查询之全文搜索详解" tabindex="-1"><a class="header-anchor" href="#es详解-查询-dsl查询之全文搜索详解"><span>ES详解 - 查询：DSL查询之全文搜索详解</span></a></h1><blockquote><p>DSL查询极为常用的是对文本进行搜索，我们叫全文搜索，本文主要对全文搜索进行详解。</p></blockquote><h2 id="_0-写在前面-谈谈如何从官网学习" tabindex="-1"><a class="header-anchor" href="#_0-写在前面-谈谈如何从官网学习"><span>0. 写在前面:谈谈如何从官网学习</span></a></h2><blockquote><p>提示</p><p>很多读者在看官方文档学习时存在一个误区，以DSL中full text查询为例，其实内容是非常多的， 没有取舍/没重点去阅读， 要么需要花很多时间，要么头脑一片浆糊。所以这里重点谈谈我的理解。</p></blockquote><p>一些理解：</p><ul><li>第一点：<strong>全局观</strong>，即我们现在学习内容在整个体系的哪个位置？</li></ul><p>如下图，可以很方便的帮助你构筑这种体系</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121428688.png" alt="image-20220805205758872" tabindex="0" loading="lazy"><figcaption>image-20220805205758872</figcaption></figure><ul><li>第二点： <strong>分类别</strong>，从上层理解，而不是本身</li></ul><p>比如Full text Query中，我们只需要把如下的那么多点分为3大类，你的体系能力会大大提升</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121428740.png" alt="image-20220805205926651" tabindex="0" loading="lazy"><figcaption>image-20220805205926651</figcaption></figure><ul><li>第三点： <strong>知识点还是API</strong>？ API类型的是可以查询的，只需要知道大致有哪些功能就可以了。</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121428776.png" alt="image-20220805210053312" tabindex="0" loading="lazy"><figcaption>image-20220805210053312</figcaption></figure><h2 id="_1-match类型" tabindex="-1"><a class="header-anchor" href="#_1-match类型"><span>1. Match类型</span></a></h2><blockquote><p>第一类：match 类型</p></blockquote><h3 id="_1-1-match-查询的步骤" tabindex="-1"><a class="header-anchor" href="#_1-1-match-查询的步骤"><span>1.1 match 查询的步骤</span></a></h3><p>在前文中我们已经介绍了match查询。</p><ul><li><strong>准备一些数据</strong></li></ul><p>这里我们准备一些数据，通过实例看match 查询的步骤</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">PUT</span><span style="color:#98C379;--shiki-dark:#98C379;"> /test-dsl-match</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{ </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;settings&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;number_of_shards&quot;:</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1</span><span style="color:#98C379;--shiki-dark:#98C379;"> }}</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">POST</span><span style="color:#98C379;--shiki-dark:#98C379;"> /test-dsl-match/_bulk</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{ </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;index&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;_id&quot;:</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1</span><span style="color:#98C379;--shiki-dark:#98C379;"> }}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{ </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;title&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;The quick brown fox&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{ </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;index&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;_id&quot;:</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 2</span><span style="color:#98C379;--shiki-dark:#98C379;"> }}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{ </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;title&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;The quick brown fox jumps over the lazy dog&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{ </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;index&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;_id&quot;:</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 3</span><span style="color:#98C379;--shiki-dark:#98C379;"> }}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{ </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;title&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;The quick brown fox jumps over the quick dog&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{ </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;index&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;_id&quot;:</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 4</span><span style="color:#98C379;--shiki-dark:#98C379;"> }}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{ </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;title&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;Brown fox brown dog&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> }</span></span></code></pre></div><ul><li><strong>查询数据</strong></li></ul><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">GET</span><span style="color:#98C379;--shiki-dark:#98C379;"> /test-dsl-match/_search</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">    &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        &quot;match&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">            &quot;title&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;QUICK!&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>Elasticsearch 执行上面这个 match 查询的步骤是：</p><ol><li><strong>检查字段类型</strong> 。</li></ol><p>标题 title 字段是一个 text 类型（ analyzed ）已分析的全文字段，这意味着查询字符串本身也应该被分析。</p><ol><li><strong>分析查询字符串</strong> 。</li></ol><p>将查询的字符串 QUICK! 传入标准分析器中，输出的结果是单个项 quick 。因为只有一个单词项，所以 match 查询执行的是单个底层 term 查询。</p><ol><li><strong>查找匹配文档</strong> 。</li></ol><p>用 term 查询在倒排索引中查找 quick 然后获取一组包含该项的文档，本例的结果是文档：1、2 和 3 。</p><ol><li><strong>为每个文档评分</strong> 。</li></ol><p>用 term 查询计算每个文档相关度评分 _score ，这是种将词频（term frequency，即词 quick 在相关文档的 title 字段中出现的频率）和反向文档频率（inverse document frequency，即词 quick 在所有文档的 title 字段中出现的频率），以及字段的长度（即字段越短相关度越高）相结合的计算方式。</p><ul><li><strong>验证结果</strong></li></ul><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121428808.png" alt="image-20220805212030883" tabindex="0" loading="lazy"><figcaption>image-20220805212030883</figcaption></figure><h3 id="_1-2-match多个词深入" tabindex="-1"><a class="header-anchor" href="#_1-2-match多个词深入"><span>1.2 match多个词深入</span></a></h3><p>我们在上文中复合查询中已经使用了match多个词，比如“Quick pets”； 这里我们通过例子带你更深入理解match多个词</p><ul><li><strong>match多个词的本质</strong></li></ul><p>查询多个词&quot;BROWN DOG!&quot;</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">GET</span><span style="color:#98C379;--shiki-dark:#98C379;"> /test-dsl-match/_search</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">    &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        &quot;match&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">            &quot;title&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;BROWN DOG&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121428837.png" alt="image-20220805212307163" tabindex="0" loading="lazy"><figcaption>image-20220805212307163</figcaption></figure><p>因为 match 查询必须查找两个词（ [&quot;brown&quot;,&quot;dog&quot;] ），它在内部实际上先执行两次 term 查询，然后将两次查询的结果合并作为最终结果输出。为了做到这点，它将两个 term 查询包入一个 bool 查询中，</p><p>所以上述查询的结果，和如下语句查询结果是等同的</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">GET</span><span style="color:#98C379;--shiki-dark:#98C379;"> /test-dsl-match/_search</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">    &quot;bool&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;should&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">          &quot;term&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">            &quot;title&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;brown&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">          }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        },</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">          &quot;term&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">            &quot;title&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;dog&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">          }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      ]</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121428872.png" alt="image-20220805212509990" tabindex="0" loading="lazy"><figcaption>image-20220805212509990</figcaption></figure><ul><li><strong>match多个词的逻辑</strong></li></ul><p>上面等同于should（任意一个满足），是因为 match还有一个operator参数，默认是or, 所以对应的是should。</p><p>所以上述查询也等同于</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">GET</span><span style="color:#98C379;--shiki-dark:#98C379;"> /test-dsl-match/_search</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">    &quot;match&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;title&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;BROWN DOG&quot;,</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        &quot;operator&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;or&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>那么我们如果是需要and操作呢，即同时满足呢？</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">GET</span><span style="color:#98C379;--shiki-dark:#98C379;"> /test-dsl-match/_search</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">    &quot;match&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;title&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;BROWN DOG&quot;,</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        &quot;operator&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;and&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>等同于</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">GET</span><span style="color:#98C379;--shiki-dark:#98C379;"> /test-dsl-match/_search</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">    &quot;bool&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;must&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">          &quot;term&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">            &quot;title&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;brown&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">          }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        },</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">          &quot;term&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">            &quot;title&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;dog&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">          }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      ]</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121428903.png" alt="image-20220805215139691" tabindex="0" loading="lazy"><figcaption>image-20220805215139691</figcaption></figure><h3 id="_1-3-控制match的匹配精度" tabindex="-1"><a class="header-anchor" href="#_1-3-控制match的匹配精度"><span>1.3 控制match的匹配精度</span></a></h3><p>如果用户给定 3 个查询词，想查找至少包含其中 2 个的文档，该如何处理？将 operator 操作符参数设置成 and 或者 or 都是不合适的。</p><p>match 查询支持 minimum_should_match 最小匹配参数，这让我们可以指定必须匹配的词项数用来表示一个文档是否相关。我们可以将其设置为某个具体数字，更常用的做法是将其设置为一个百分数，因为我们无法控制用户搜索时输入的单词数量：</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">GET</span><span style="color:#98C379;--shiki-dark:#98C379;"> /test-dsl-match/_search</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">    &quot;match&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;title&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;quick brown dog&quot;,</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        &quot;minimum_should_match&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;75%&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>当给定百分比的时候， minimum_should_match 会做合适的事情：在之前三词项的示例中， 75% 会自动被截断成 66.6% ，即三个里面两个词。无论这个值设置成什么，至少包含一个词项的文档才会被认为是匹配的。</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121428934.png" alt="image-20220805215456812" tabindex="0" loading="lazy"><figcaption>image-20220805215456812</figcaption></figure><p>当然也等同于</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">GET</span><span style="color:#98C379;--shiki-dark:#98C379;"> /test-dsl-match/_search</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">    &quot;bool&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;should&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        { </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;match&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;title&quot;:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;quick&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> }},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        { </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;match&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;title&quot;:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;brown&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">   }},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        { </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;match&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;title&quot;:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;dog&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">   }}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      ],</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;minimum_should_match&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121428966.png" alt="image-20220805220030629" tabindex="0" loading="lazy"><figcaption>image-20220805220030629</figcaption></figure><h3 id="_1-4-match-phrase-查词组" tabindex="-1"><a class="header-anchor" href="#_1-4-match-phrase-查词组"><span>1.4 match_phrase 查词组</span></a></h3><ul><li><strong>match_phrase</strong></li></ul><p>match_phrase在前文中我们已经有了解，我们再看下另外一个例子。</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">GET</span><span style="color:#98C379;--shiki-dark:#98C379;"> /test-dsl-match/_search</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">    &quot;match_phrase&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;title&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;quick brown&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121428999.png" alt="image-20220805220220108" tabindex="0" loading="lazy"><figcaption>image-20220805220220108</figcaption></figure><p>很多人对它仍然有误解的，比如如下例子：</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">GET</span><span style="color:#98C379;--shiki-dark:#98C379;"> /test-dsl-match/_search</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">    &quot;match_phrase&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;title&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;quick brown f&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>这样的查询是查不出任何数据的，因为前文中我们知道了match本质上是对term组合，match_phrase本质是连续的term的查询，所以f并不是一个分词，不满足term查询，所以最终查不出任何内容了。</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121428035.png" alt="image-20220805220407000" tabindex="0" loading="lazy"><figcaption>image-20220805220407000</figcaption></figure><h3 id="_1-5-match-phrase-prefix-查最后一个词项是前缀" tabindex="-1"><a class="header-anchor" href="#_1-5-match-phrase-prefix-查最后一个词项是前缀"><span>1.5 match_phrase_prefix 查最后一个词项是前缀</span></a></h3><ul><li><strong>match_pharse_prefix</strong></li></ul><p>那有没有可以查询出<code>quick brown f</code>的方式呢？ELasticSearch在match_phrase基础上提供了一种可以查最后一个词项是前缀的方法，这样就可以查询<code>quick brown f</code>了</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">GET</span><span style="color:#98C379;--shiki-dark:#98C379;"> /test-dsl-match/_search</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">    &quot;match_phrase_prefix&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;title&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;quick brown f&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121428064.png" alt="image-20220805220518740" tabindex="0" loading="lazy"><figcaption>image-20220805220518740</figcaption></figure><p>(ps: prefix的意思不是整个text的开始匹配，而是最后一个词项满足term的prefix查询而已)</p><h3 id="_1-6-match-bool-prefix-查无序词组前缀" tabindex="-1"><a class="header-anchor" href="#_1-6-match-bool-prefix-查无序词组前缀"><span>1.6 match_bool_prefix 查无序词组前缀</span></a></h3><ul><li><strong>match_bool_prefix</strong></li></ul><p>除了match_phrase_prefix，ElasticSearch还提供了match_bool_prefix查询</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">GET</span><span style="color:#98C379;--shiki-dark:#98C379;"> /test-dsl-match/_search</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">    &quot;match_bool_prefix&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;title&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;quick brown f&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121428095.png" alt="image-20220805220608159" tabindex="0" loading="lazy"><figcaption>image-20220805220608159</figcaption></figure><p>它们两种方式有啥区别呢？match_bool_prefix本质上可以转换为：</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">GET</span><span style="color:#98C379;--shiki-dark:#98C379;"> /test-dsl-match/_search</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">    &quot;bool&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> :</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;should&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        { </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;term&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;title&quot;:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;quick&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> }},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        { </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;term&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;title&quot;:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;brown&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> }},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        { </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;prefix&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;title&quot;:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;f&quot;}}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      ]</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>所以这样你就能理解，match_bool_prefix查询中的quick,brown,f是无序的。</p><h3 id="_1-7-multi-match-一次对多个字段查询" tabindex="-1"><a class="header-anchor" href="#_1-7-multi-match-一次对多个字段查询"><span>1.7 multi_match 一次对多个字段查询</span></a></h3><p>如果我们期望一次对多个字段查询，怎么办呢？ElasticSearch提供了multi_match查询的方式</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">    &quot;multi_match&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> :</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;">    &quot;Will Smith&quot;,</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;fields&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [ </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;title&quot;,</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;*_name&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> ]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p><code>*</code>表示前缀匹配字段。</p><h3 id="_1-8-termquery-match-match-phrase区别" tabindex="-1"><a class="header-anchor" href="#_1-8-termquery-match-match-phrase区别"><span>1.8 termQuery,match,match_phrase区别</span></a></h3><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121428120.png" alt="image-20221226105601685" tabindex="0" loading="lazy"><figcaption>image-20221226105601685</figcaption></figure><h2 id="_2-query-string类型" tabindex="-1"><a class="header-anchor" href="#_2-query-string类型"><span>2. query string类型</span></a></h2><blockquote><p>第二类：query string 类型</p></blockquote><h3 id="_2-1-query-string" tabindex="-1"><a class="header-anchor" href="#_2-1-query-string"><span>2.1 query_string</span></a></h3><p>此查询使用语法根据运算符（例如AND或）来解析和拆分提供的查询字符串NOT。然后查询在返回匹配的文档之前独立分析每个拆分的文本。</p><p>可以使用该query_string查询创建一个复杂的搜索，其中包括通配符，跨多个字段的搜索等等。尽管用途广泛，但查询是严格的，如果查询字符串包含任何无效语法，则返回错误。</p><p>例如：</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">GET</span><span style="color:#98C379;--shiki-dark:#98C379;"> /test-dsl-match/_search</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">    &quot;query_string&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;(lazy dog) OR (brown dog)&quot;,</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;default_field&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;title&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>这里查询结果，你需要理解本质上查询这四个分词（term）or的结果而已，所以doc 3和4也在其中</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121428150.png" alt="image-20220805221341140" tabindex="0" loading="lazy"><figcaption>image-20220805221341140</figcaption></figure><p>对构筑知识体系已经够了，但是它其实还有很多参数和用法，更多请参考<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-query-string-query.html" target="_blank" rel="noopener noreferrer">官网</a></p><h3 id="_2-2-query-string-simple" tabindex="-1"><a class="header-anchor" href="#_2-2-query-string-simple"><span>2.2 query_string_simple</span></a></h3><p>该查询使用一种简单的语法来解析提供的查询字符串并将其拆分为基于特殊运算符的术语。然后查询在返回匹配的文档之前独立分析每个术语。</p><p>尽管其语法比query_string查询更受限制 ，但<strong>simple_query_string 查询不会针对无效语法返回错误。而是，它将忽略查询字符串的任何无效部分</strong>。</p><p>举例：</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">GET</span><span style="color:#98C379;--shiki-dark:#98C379;"> /test-dsl-match/_search</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">    &quot;simple_query_string&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> :</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">\\&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;">over the</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">\\&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> + (lazy | quick) + dog&quot;,</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        &quot;fields&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;title&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        &quot;default_operator&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;and&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121428183.png" alt="image-20220805221504432" tabindex="0" loading="lazy"><figcaption>image-20220805221504432</figcaption></figure><p>更多请参考<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-simple-query-string-query.html" target="_blank" rel="noopener noreferrer">官网</a></p><h2 id="_3-interval类型" tabindex="-1"><a class="header-anchor" href="#_3-interval类型"><span>3. Interval类型</span></a></h2><blockquote><p>第三类：interval类型</p></blockquote><p>Intervals是时间间隔的意思，本质上将多个规则按照顺序匹配。</p><p>比如：</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">GET</span><span style="color:#98C379;--shiki-dark:#98C379;"> /test-dsl-match/_search</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  &quot;query&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">:</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">    &quot;intervals&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> :</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      &quot;title&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> :</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        &quot;all_of&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> :</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">          &quot;ordered&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> :</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> true</span><span style="color:#98C379;--shiki-dark:#98C379;">,</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">          &quot;intervals&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> :</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">              &quot;match&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> :</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">                &quot;query&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> :</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;quick&quot;,</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">                &quot;max_gaps&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> :</span><span style="color:#98C379;--shiki-dark:#98C379;"> 0,</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">                &quot;ordered&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> :</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> true</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">              }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            },</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">              &quot;any_of&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> :</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">                &quot;intervals&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> :</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                  { </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;match&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> :</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;query&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> :</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;jump over&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> }</span><span style="color:#98C379;--shiki-dark:#98C379;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                  { </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">&quot;match&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> :</span><span style="color:#98C379;--shiki-dark:#98C379;"> {</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;query&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> :</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;quick dog&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> }</span><span style="color:#98C379;--shiki-dark:#98C379;"> }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                ]</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">              }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">          ]</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121428217.png" alt="image-20220805221621590" tabindex="0" loading="lazy"><figcaption>image-20220805221621590</figcaption></figure><p>因为interval之间是可以组合的，所以它可以表现的很复杂。更多请参考<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-intervals-query.html" target="_blank" rel="noopener noreferrer">官网</a></p><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章"><span>参考文章</span></a></h2><p><a href="https://pdai.tech/md/db/nosql-es/elasticsearch-x-dsl-full-text.html" target="_blank" rel="noopener noreferrer"><strong>ES详解 - 查询：DSL查询之全文搜索详解</strong></a></p>`,116)]))}const t=a(e,[["render",o],["__file","elasticsearch-x-dsl-full-text.html.vue"]]),c=JSON.parse('{"path":"/posts/Database/ES/elasticsearch-x-dsl-full-text.html","title":"ES详解 - 查询：DSL查询之全文搜索详解","lang":"zh-CN","frontmatter":{"aliases":"ES详解 - 查询：DSL查询之全文搜索详解","tags":null,"cssclass":null,"source":null,"order":90,"category":["ElasticSearch"],"created":"2024-02-22 10:49","updated":"2024-03-12 14:29","description":"ES详解 - 查询：DSL查询之全文搜索详解 DSL查询极为常用的是对文本进行搜索，我们叫全文搜索，本文主要对全文搜索进行详解。 0. 写在前面:谈谈如何从官网学习 提示 很多读者在看官方文档学习时存在一个误区，以DSL中full text查询为例，其实内容是非常多的， 没有取舍/没重点去阅读， 要么需要花很多时间，要么头脑一片浆糊。所以这里重点谈谈我...","head":[["meta",{"property":"og:url","content":"https://springg.us.kg/posts/Database/ES/elasticsearch-x-dsl-full-text.html"}],["meta",{"property":"og:site_name","content":"mrjason’s Blog"}],["meta",{"property":"og:title","content":"ES详解 - 查询：DSL查询之全文搜索详解"}],["meta",{"property":"og:description","content":"ES详解 - 查询：DSL查询之全文搜索详解 DSL查询极为常用的是对文本进行搜索，我们叫全文搜索，本文主要对全文搜索进行详解。 0. 写在前面:谈谈如何从官网学习 提示 很多读者在看官方文档学习时存在一个误区，以DSL中full text查询为例，其实内容是非常多的， 没有取舍/没重点去阅读， 要么需要花很多时间，要么头脑一片浆糊。所以这里重点谈谈我..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121428688.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-21T07:03:09.000Z"}],["meta",{"property":"article:author","content":"MrJason"}],["meta",{"property":"article:modified_time","content":"2024-10-21T07:03:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ES详解 - 查询：DSL查询之全文搜索详解\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121428688.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121428740.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121428776.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121428808.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121428837.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121428872.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121428903.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121428934.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121428966.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121428999.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121428035.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121428064.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121428095.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121428120.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121428150.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121428183.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202403121428217.png\\"],\\"dateModified\\":\\"2024-10-21T07:03:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MrJason\\",\\"url\\":\\"https://springg.us.kg\\"}]}"]]},"headers":[{"level":2,"title":"0. 写在前面:谈谈如何从官网学习","slug":"_0-写在前面-谈谈如何从官网学习","link":"#_0-写在前面-谈谈如何从官网学习","children":[]},{"level":2,"title":"1. Match类型","slug":"_1-match类型","link":"#_1-match类型","children":[{"level":3,"title":"1.1 match 查询的步骤","slug":"_1-1-match-查询的步骤","link":"#_1-1-match-查询的步骤","children":[]},{"level":3,"title":"1.2 match多个词深入","slug":"_1-2-match多个词深入","link":"#_1-2-match多个词深入","children":[]},{"level":3,"title":"1.3 控制match的匹配精度","slug":"_1-3-控制match的匹配精度","link":"#_1-3-控制match的匹配精度","children":[]},{"level":3,"title":"1.4 match_phrase 查词组","slug":"_1-4-match-phrase-查词组","link":"#_1-4-match-phrase-查词组","children":[]},{"level":3,"title":"1.5 match_phrase_prefix 查最后一个词项是前缀","slug":"_1-5-match-phrase-prefix-查最后一个词项是前缀","link":"#_1-5-match-phrase-prefix-查最后一个词项是前缀","children":[]},{"level":3,"title":"1.6 match_bool_prefix 查无序词组前缀","slug":"_1-6-match-bool-prefix-查无序词组前缀","link":"#_1-6-match-bool-prefix-查无序词组前缀","children":[]},{"level":3,"title":"1.7 multi_match 一次对多个字段查询","slug":"_1-7-multi-match-一次对多个字段查询","link":"#_1-7-multi-match-一次对多个字段查询","children":[]},{"level":3,"title":"1.8 termQuery,match,match_phrase区别","slug":"_1-8-termquery-match-match-phrase区别","link":"#_1-8-termquery-match-match-phrase区别","children":[]}]},{"level":2,"title":"2. query string类型","slug":"_2-query-string类型","link":"#_2-query-string类型","children":[{"level":3,"title":"2.1 query_string","slug":"_2-1-query-string","link":"#_2-1-query-string","children":[]},{"level":3,"title":"2.2 query_string_simple","slug":"_2-2-query-string-simple","link":"#_2-2-query-string-simple","children":[]}]},{"level":2,"title":"3. Interval类型","slug":"_3-interval类型","link":"#_3-interval类型","children":[]},{"level":2,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}],"git":{"createdTime":1729494189000,"updatedTime":1729494189000,"contributors":[{"name":"MrJason","email":"845886914@qq.com","commits":1}]},"readingTime":{"minutes":7.44,"words":2233},"filePathRelative":"posts/Database/ES/elasticsearch-x-dsl-full-text.md","localizedDate":"2024年10月21日","excerpt":"\\n<blockquote>\\n<p>DSL查询极为常用的是对文本进行搜索，我们叫全文搜索，本文主要对全文搜索进行详解。</p>\\n</blockquote>\\n<h2>0. 写在前面:谈谈如何从官网学习</h2>\\n<blockquote>\\n<p>提示</p>\\n<p>很多读者在看官方文档学习时存在一个误区，以DSL中full text查询为例，其实内容是非常多的， 没有取舍/没重点去阅读， 要么需要花很多时间，要么头脑一片浆糊。所以这里重点谈谈我的理解。</p>\\n</blockquote>\\n<p>一些理解：</p>\\n<ul>\\n<li>第一点：<strong>全局观</strong>，即我们现在学习内容在整个体系的哪个位置？</li>\\n</ul>","autoDesc":true}');export{t as comp,c as data};
