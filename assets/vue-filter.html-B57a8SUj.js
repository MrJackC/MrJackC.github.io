import{_ as a,c as e,a as i,o as l}from"./app-BhoNqsD-.js";const n={};function r(o,s){return l(),e("div",null,s[0]||(s[0]=[i(`<h1 id="vue过滤器" tabindex="-1"><a class="header-anchor" href="#vue过滤器"><span>Vue过滤器</span></a></h1><h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介"><span>1. 简介</span></a></h2><h3 id="_1-1-作用" tabindex="-1"><a class="header-anchor" href="#_1-1-作用"><span>1.1 作用</span></a></h3><p>Vue 过滤器用于一些常见的文本格式化</p><h3 id="_1-2-在哪用" tabindex="-1"><a class="header-anchor" href="#_1-2-在哪用"><span>1.2 在哪用</span></a></h3><ul><li><p>双花括号插值</p><div class="language-html" data-ext="html" data-title="html"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">&lt;!-- 在双花括号中 --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{{ message | capitalize }}</span></span></code></pre></div></li><li><p><code>v-bind</code> 表达式</p><div class="language-html" data-ext="html" data-title="html"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">&lt;!-- 在 \`v-bind\` 中 --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">div</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> v-bind:id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;rawId | formatId&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">div</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div></li></ul><p>过滤器应该被添加在 JavaScript 表达式的尾部，由“管道”符号指示：</p><h2 id="_2-定义过滤器" tabindex="-1"><a class="header-anchor" href="#_2-定义过滤器"><span>2. 定义过滤器</span></a></h2><h3 id="_2-1-组件中定义本地过滤器" tabindex="-1"><a class="header-anchor" href="#_2-1-组件中定义本地过滤器"><span>2.1 组件中定义本地过滤器</span></a></h3><div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">filters</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  capitalize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#C678DD;--shiki-dark:#C678DD;">function</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">!</span><span style="color:#E06C75;--shiki-dark:#E06C75;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#C678DD;--shiki-dark:#C678DD;">return</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;&#39;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">toString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">charAt</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">toUpperCase</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">slice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><h3 id="_2-2-创建vue-实例之前全局定义过滤器" tabindex="-1"><a class="header-anchor" href="#_2-2-创建vue-实例之前全局定义过滤器"><span>2.2 创建Vue 实例之前全局定义过滤器</span></a></h3><div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Vue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">filter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;capitalize&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#C678DD;--shiki-dark:#C678DD;">function</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">!</span><span style="color:#E06C75;--shiki-dark:#E06C75;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#C678DD;--shiki-dark:#C678DD;">return</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;&#39;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">toString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">charAt</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">toUpperCase</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">slice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> Vue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // ...</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">})</span></span></code></pre></div><p>当全局过滤器和局部过滤器重名时，会采用局部过滤器。</p><h2 id="_3-过滤器参数原则" tabindex="-1"><a class="header-anchor" href="#_3-过滤器参数原则"><span>3. 过滤器参数原则</span></a></h2><p>过滤器函数总接收表达式的值 (之前的操作链的结果) 作为第一个参数。</p><h3 id="_3-1-简单情况" tabindex="-1"><a class="header-anchor" href="#_3-1-简单情况"><span>3.1 简单情况</span></a></h3><p>在上述例子中，<code>capitalize</code> 过滤器函数将会收到 <code>message</code> 的值作为第一个参数。</p><h3 id="_3-2-过滤器串联情况" tabindex="-1"><a class="header-anchor" href="#_3-2-过滤器串联情况"><span>3.2 过滤器串联情况</span></a></h3><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>{{ message | filterA | filterB }}</span></span></code></pre></div><p>在这个例子中，<code>filterA</code> 被定义为接收单个参数的过滤器函数，表达式 <code>message</code> 的值将作为参数传入到函数中。然后继续调用同样被定义为接收单个参数的过滤器函数 <code>filterB</code>，将 <code>filterA</code> 的结果传递到 <code>filterB</code> 中。</p><h3 id="_3-3-多个参数情况" tabindex="-1"><a class="header-anchor" href="#_3-3-多个参数情况"><span>3.3 多个参数情况</span></a></h3><p>过滤器是 JavaScript 函数，因此可以接收参数：</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>{{ message | filterA(&#39;arg1&#39;, arg2) }}</span></span></code></pre></div><p>这里，<code>filterA</code> 被定义为接收三个参数的过滤器函数。其中 <code>message</code> 的值作为第一个参数，普通字符串 <code>&#39;arg1&#39;</code> 作为第二个参数，表达式 <code>arg2</code> 的值作为第三个参数。</p><h2 id="_4-补充" tabindex="-1"><a class="header-anchor" href="#_4-补充"><span>4. 补充</span></a></h2><ul><li><p>如果在element 的table 中，需要格式化数据也可以使用:formatter 达到文本格式化效果</p><div class="language-vue" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">el-table-column</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> label</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;状态&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> align</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;center&quot;</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> prop</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;status&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> :</span><span style="color:#D19A66;--shiki-dark:#D19A66;">formatter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&quot;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">statusFormat</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> /&gt;</span></span></code></pre></div><div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 岗位状态字典翻译</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">    statusFormat</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E06C75;--shiki-dark:#E06C75;">row</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E06C75;--shiki-dark:#E06C75;">column</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">      return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">selectDictLabel</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E06C75;--shiki-dark:#E06C75;">statusOptions</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">row</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E06C75;--shiki-dark:#E06C75;">status</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    },</span></span></code></pre></div></li></ul><h2 id="_5-使用全局的过滤器" tabindex="-1"><a class="header-anchor" href="#_5-使用全局的过滤器"><span>5. 使用全局的过滤器</span></a></h2><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>let dateStr = this.$options.filters[&quot;dateFormat&quot;](new Date(), &quot;YYYYMMDDHHmmss&quot;);</span></span></code></pre></div><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章"><span>参考文章</span></a></h2><p><a href="https://cn.vuejs.org/v2/guide/filters.html" target="_blank" rel="noopener noreferrer">官方文档</a></p>`,30)]))}const p=a(n,[["render",r],["__file","vue-filter.html.vue"]]),c=JSON.parse('{"path":"/posts/Web/frontend-vue/vue-filter.html","title":"Vue过滤器","lang":"zh-CN","frontmatter":{"description":"Vue过滤器 1. 简介 1.1 作用 Vue 过滤器用于一些常见的文本格式化 1.2 在哪用 双花括号插值 v-bind 表达式 过滤器应该被添加在 JavaScript 表达式的尾部，由“管道”符号指示： 2. 定义过滤器 2.1 组件中定义本地过滤器 2.2 创建Vue 实例之前全局定义过滤器 当全局过滤器和局部过滤器重名时，会采用局部过滤器。 ...","head":[["meta",{"property":"og:url","content":"https://mrjason.me/posts/Web/frontend-vue/vue-filter.html"}],["meta",{"property":"og:site_name","content":"mrjason’s Blog"}],["meta",{"property":"og:title","content":"Vue过滤器"}],["meta",{"property":"og:description","content":"Vue过滤器 1. 简介 1.1 作用 Vue 过滤器用于一些常见的文本格式化 1.2 在哪用 双花括号插值 v-bind 表达式 过滤器应该被添加在 JavaScript 表达式的尾部，由“管道”符号指示： 2. 定义过滤器 2.1 组件中定义本地过滤器 2.2 创建Vue 实例之前全局定义过滤器 当全局过滤器和局部过滤器重名时，会采用局部过滤器。 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-21T07:03:09.000Z"}],["meta",{"property":"article:author","content":"MrJason"}],["meta",{"property":"article:modified_time","content":"2024-10-21T07:03:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Vue过滤器\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-21T07:03:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MrJason\\",\\"url\\":\\"https://mrjason.me\\"}]}"]]},"headers":[{"level":2,"title":"1. 简介","slug":"_1-简介","link":"#_1-简介","children":[{"level":3,"title":"1.1 作用","slug":"_1-1-作用","link":"#_1-1-作用","children":[]},{"level":3,"title":"1.2 在哪用","slug":"_1-2-在哪用","link":"#_1-2-在哪用","children":[]}]},{"level":2,"title":"2. 定义过滤器","slug":"_2-定义过滤器","link":"#_2-定义过滤器","children":[{"level":3,"title":"2.1 组件中定义本地过滤器","slug":"_2-1-组件中定义本地过滤器","link":"#_2-1-组件中定义本地过滤器","children":[]},{"level":3,"title":"2.2 创建Vue 实例之前全局定义过滤器","slug":"_2-2-创建vue-实例之前全局定义过滤器","link":"#_2-2-创建vue-实例之前全局定义过滤器","children":[]}]},{"level":2,"title":"3. 过滤器参数原则","slug":"_3-过滤器参数原则","link":"#_3-过滤器参数原则","children":[{"level":3,"title":"3.1 简单情况","slug":"_3-1-简单情况","link":"#_3-1-简单情况","children":[]},{"level":3,"title":"3.2 过滤器串联情况","slug":"_3-2-过滤器串联情况","link":"#_3-2-过滤器串联情况","children":[]},{"level":3,"title":"3.3 多个参数情况","slug":"_3-3-多个参数情况","link":"#_3-3-多个参数情况","children":[]}]},{"level":2,"title":"4. 补充","slug":"_4-补充","link":"#_4-补充","children":[]},{"level":2,"title":"5. 使用全局的过滤器","slug":"_5-使用全局的过滤器","link":"#_5-使用全局的过滤器","children":[]},{"level":2,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}],"git":{"createdTime":1729494189000,"updatedTime":1729494189000,"contributors":[{"name":"MrJason","email":"845886914@qq.com","commits":1}]},"readingTime":{"minutes":1.68,"words":503},"filePathRelative":"posts/Web/frontend-vue/vue-filter.md","localizedDate":"2024年10月21日","excerpt":"\\n<h2>1. 简介</h2>\\n<h3>1.1 作用</h3>\\n<p>Vue 过滤器用于一些常见的文本格式化</p>\\n<h3>1.2 在哪用</h3>\\n<ul>\\n<li>\\n<p>双花括号插值</p>\\n<div class=\\"language-html\\" data-ext=\\"html\\" data-title=\\"html\\"><pre class=\\"shiki shiki-themes one-dark-pro one-dark-pro vp-code\\" style=\\"background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">&lt;!-- 在双花括号中 --&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">{{ message | capitalize }}</span></span></code></pre>\\n</div></li>\\n<li>\\n<p><code>v-bind</code> 表达式</p>\\n<div class=\\"language-html\\" data-ext=\\"html\\" data-title=\\"html\\"><pre class=\\"shiki shiki-themes one-dark-pro one-dark-pro vp-code\\" style=\\"background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">&lt;!-- 在 `v-bind` 中 --&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">&lt;</span><span style=\\"color:#E06C75;--shiki-dark:#E06C75\\">div</span><span style=\\"color:#D19A66;--shiki-dark:#D19A66\\"> v-bind:id</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">=</span><span style=\\"color:#98C379;--shiki-dark:#98C379\\">\\"rawId | formatId\\"</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">&gt;&lt;/</span><span style=\\"color:#E06C75;--shiki-dark:#E06C75\\">div</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">&gt;</span></span></code></pre>\\n</div></li>\\n</ul>","autoDesc":true}');export{p as comp,c as data};
