import{_ as n,c as a,a as s,o as t}from"./app-BfIe-EZg.js";const d={};function o(i,e){return t(),a("div",null,e[0]||(e[0]=[s(`<h1 id="项目结构" tabindex="-1"><a class="header-anchor" href="#项目结构"><span>项目结构</span></a></h1><figure><img src="https://doc.iocoder.cn/img/项目结构/01.png" alt="项目结构" tabindex="0" loading="lazy"><figcaption>项目结构</figcaption></figure><h2 id="👍-相关视频教程" tabindex="-1"><a class="header-anchor" href="#👍-相关视频教程"><span><a href="https://doc.iocoder.cn/project-intro/#%F0%9F%91%8D-%E7%9B%B8%E5%85%B3%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B" target="_blank" rel="noopener noreferrer">#</a>👍 相关视频教程</span></a></h2><ul><li><a href="https://t.zsxq.com/07rbyjM7A" target="_blank" rel="noopener noreferrer">从零开始 01：视频课程导读：项目简介、功能列表、技术选型(opens new window)</a></li><li><a href="https://t.zsxq.com/07FiIaQr3" target="_blank" rel="noopener noreferrer">从零开始 04：自顶向下，讲解项目的整体结构（上）(opens new window)</a></li><li><a href="https://t.zsxq.com/07yNfE6un" target="_blank" rel="noopener noreferrer">从零开始 04：自顶向下，讲解项目的整体结构（下）(opens new window)</a></li></ul><h2 id="👻-后端结构" tabindex="-1"><a class="header-anchor" href="#👻-后端结构"><span><a href="https://doc.iocoder.cn/project-intro/#%F0%9F%91%BB-%E5%90%8E%E7%AB%AF%E7%BB%93%E6%9E%84" target="_blank" rel="noopener noreferrer">#</a>👻 后端结构</span></a></h2><p>后端采用模块化的架构，按照功能拆分成多个 Maven Module，提升开发与研发的效率，带来更好的可维护性。</p><p>一共有<strong>四</strong>类 Maven Module：</p><table><thead><tr><th>Maven Module</th><th>作用</th></tr></thead><tbody><tr><td><code>yudao-dependencies</code></td><td>Maven 依赖版本管理</td></tr><tr><td><code>yudao-framework</code></td><td>Java 框架拓展</td></tr><tr><td><code>yudao-module-xxx</code></td><td>XXX 功能的 Module 模块</td></tr><tr><td><code>yudao-server</code></td><td>管理后台 + 用户 App 的服务端</td></tr></tbody></table><p>下面，我们来逐个看看。</p><h3 id="_1-yudao-dependencies" tabindex="-1"><a class="header-anchor" href="#_1-yudao-dependencies"><span><a href="https://doc.iocoder.cn/project-intro/#_1-yudao-dependencies" target="_blank" rel="noopener noreferrer">#</a>1. yudao-dependencies</span></a></h3><p>该模块是一个 Maven Bom，只有一个 <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-dependencies/pom.xml" target="_blank" rel="noopener noreferrer"><code>pom.xml</code> (opens new window)</a>文件，定义项目中所有 Maven 依赖的<strong>版本号</strong>，解决依赖冲突问题。</p><blockquote><p>详细的解释，可见 <a href="http://www.iocoder.cn/maven/bom?yudao" target="_blank" rel="noopener noreferrer">《微服务中使用 Maven BOM 来管理你的版本依赖 》 (opens new window)</a>文章。</p></blockquote><p>从定位上来说，它和 Spring Boot 的 <a href="https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-parent" target="_blank" rel="noopener noreferrer"><code>spring-boot-starter-parent</code> (opens new window)</a>和 Spring Cloud 的 <a href="https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-dependencies" target="_blank" rel="noopener noreferrer"><code>spring-cloud-dependencies</code> (opens new window)</a>是一致的。</p><p>实际上，<code>ruoyi-vue-pro</code> 本质上还是个<strong>单体</strong>项目，直接在根目录 <a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/pom.xml" target="_blank" rel="noopener noreferrer"><code>pom.xml</code> (opens new window)</a>管理依赖版本会更加方便，也符合绝大多数程序员的认知。但是要额外考虑一个场景，如果每个 <code>yudao-module-xxx</code> 模块都维护在一个独立的 Git 仓库，那么 <code>yudao-dependencies</code> 就可以在多个 <code>yudao-module-xxx</code> 模块下复用。</p><h3 id="_2-yudao-framework" tabindex="-1"><a class="header-anchor" href="#_2-yudao-framework"><span><a href="https://doc.iocoder.cn/project-intro/#_2-yudao-framework" target="_blank" rel="noopener noreferrer">#</a>2. yudao-framework</span></a></h3><p>该模块是 <code>ruoyi-vue-pro</code> 项目的框架封装，其下的每个 Maven Module 都是一个组件，分成两种类型：</p><p>① 技术组件：技术相关的组件封装，例如说 MyBatis、Redis 等等。</p><table><thead><tr><th>Maven Module</th><th>作用</th></tr></thead><tbody><tr><td><code>yudao-common</code></td><td>定义基础 pojo 类、枚举、工具类等</td></tr><tr><td><code>yudao-spring-boot-starter-web</code></td><td>Web 封装，提供全局异常、访问日志等</td></tr><tr><td><code>yudao-spring-boot-starter-security</code></td><td>认证授权，基于 Spring Security 实现</td></tr><tr><td><code>yudao-spring-boot-starter-mybatis</code></td><td>数据库操作，基于 MyBatis Plus 实现</td></tr><tr><td><code>yudao-spring-boot-starter-redis</code></td><td>缓存操作，基于 Spring Data Redis + Redisson 实现</td></tr><tr><td><code>yudao-spring-boot-starter-mq</code></td><td>消息队列，基于 Redis 实现，支持集群消费和广播消费</td></tr><tr><td><code>yudao-spring-boot-starter-job</code></td><td>定时任务，基于 Quartz 实现，支持集群模式</td></tr><tr><td><code>yudao-spring-boot-starter-flowable</code></td><td>工作流，基于 Flowable 实现</td></tr><tr><td><code>yudao-spring-boot-starter-protection</code></td><td>服务保障，提供幂等、分布式锁、限流、熔断等功能</td></tr><tr><td><code>yudao-spring-boot-starter-file</code></td><td>文件客户端，支持将文件存储到 S3（MinIO、阿里云、腾讯云、七牛云）、本地、FTP、SFTP、数据库等</td></tr><tr><td><code>yudao-spring-boot-starter-excel</code></td><td>Excel 导入导出，基于 EasyExcel 实现</td></tr><tr><td><code>yudao-spring-boot-starter-monitor</code></td><td>服务监控，提供链路追踪、日志服务、指标收集等功能</td></tr><tr><td><code>yudao-spring-boot-starter-captcha</code></td><td>验证码 Captcha，提供滑块验证码</td></tr><tr><td><code>yudao-spring-boot-starter-test</code></td><td>单元测试，基于 Junit + Mockito 实现</td></tr><tr><td><code>yudao-spring-boot-starter-banner</code></td><td>控制台 Banner，启动打印各种提示</td></tr><tr><td><code>yudao-spring-boot-starter-desensitize</code></td><td>脱敏组件：支持 JSON 返回数据时，将邮箱、手机等字段进行脱敏</td></tr></tbody></table><p>② 业务组件：业务相关的组件封装，例如说数据字典、操作日志等等。如果是业务组件，名字会包含 <code>biz</code> 关键字。</p><table><thead><tr><th>Maven Module</th><th>作用</th></tr></thead><tbody><tr><td><code>yudao-spring-boot-starter-biz-tenant</code></td><td>SaaS 多租户</td></tr><tr><td><code>yudao-spring-boot-starter-biz-data-permissionn</code></td><td>数据权限</td></tr><tr><td><code>yudao-spring-boot-starter-biz-dict</code></td><td>数据字典</td></tr><tr><td><code>yudao-spring-boot-starter-biz-operatelog</code></td><td>操作日志</td></tr><tr><td><code>yudao-spring-boot-starter-biz-pay</code></td><td>支付客户端，对接微信支付、支付宝等支付平台</td></tr><tr><td><code>yudao-spring-boot-starter-biz-sms</code></td><td>短信客户端，对接阿里云、腾讯云等短信服务</td></tr><tr><td><code>yudao-spring-boot-starter-biz-social</code></td><td>社交客户端，对接微信公众号、小程序、企业微信、钉钉等三方授权平台</td></tr><tr><td><code>yudao-spring-boot-starter-biz-weixin</code></td><td>微信客户端，对接微信的公众号、开放平台等</td></tr><tr><td><code>yudao-spring-boot-starter-biz-error-code</code></td><td>全局错误码</td></tr><tr><td><code>yudao-spring-boot-starter-biz-ip</code></td><td>地区 &amp; IP 库</td></tr></tbody></table><hr><p>每个组件，包含两部分：</p><ol><li><code>core</code> 包：组件的核心封装，拓展相关的功能。</li><li><code>config</code> 包：组件的 Spring Boot 自动配置。</li></ol><figure><img src="https://static.iocoder.cn/images/Yudao/2022-03-01/11.png" alt=" 示例" tabindex="0" loading="lazy"><figcaption> 示例</figcaption></figure><h3 id="_3-yudao-module-xxx" tabindex="-1"><a class="header-anchor" href="#_3-yudao-module-xxx"><span><a href="https://doc.iocoder.cn/project-intro/#_3-yudao-module-xxx" target="_blank" rel="noopener noreferrer">#</a>3. yudao-module-xxx</span></a></h3><p>该模块是 XXX 功能的 Module 模块，目前内置了 8 个模块。</p><table><thead><tr><th>项目</th><th>说明</th><th>是否必须</th></tr></thead><tbody><tr><td><code>yudao-module-system</code></td><td>系统功能</td><td>√</td></tr><tr><td><code>yudao-module-infra</code></td><td>基础设施</td><td>√</td></tr><tr><td><code>yudao-module-member</code></td><td>会员中心</td><td>x</td></tr><tr><td><code>yudao-module-bpm</code></td><td>工作流程</td><td>x</td></tr><tr><td><code>yudao-module-pay</code></td><td>支付系统</td><td>x</td></tr><tr><td><code>yudao-module-report</code></td><td>大屏报表</td><td>x</td></tr><tr><td><code>yudao-module-mall</code></td><td>商城系统</td><td>x</td></tr><tr><td><code>yudao-module-mp</code></td><td>微信公众号</td><td>x</td></tr></tbody></table><hr><p>每个模块包含两个 Maven Module，分别是：</p><table><thead><tr><th>Maven Module</th><th>作用</th></tr></thead><tbody><tr><td><code>yudao-module-xxx-api</code></td><td>提供给其它模块的 API 定义</td></tr><tr><td><code>yudao-module-xxx-biz</code></td><td>模块的功能的具体实现</td></tr></tbody></table><p>例如说，<code>yudao-module-infra</code> 想要访问 <code>yudao-module-system</code> 的用户、部门等数据，需要引入 <code>yudao-module-system-api</code> 子模块。示例如下：</p><figure><img src="https://static.iocoder.cn/images/Yudao/2022-03-01/21.png" alt="引用的示例" tabindex="0" loading="lazy"><figcaption>引用的示例</figcaption></figure><p>疑问：为什么设计 <code>yudao-module-xxx-api</code> 模块呢？</p><ol><li><strong>明确</strong>需要提供给其它模块的 API 定义，方便未来迁移微服务架构。</li><li>模块之间可能会存在相互引用的情况，虽然说从系统设计上要尽量避免，但是有时在快速迭代的情况下，可能会出现。此时，通过只引用对方模块的 API 子模块，解决相互引用导致 Maven 无法打包的问题。</li></ol><p><code>yudao-module-xxx-api</code> 子模块的项目结构如下：</p><figure><img src="https://static.iocoder.cn/images/Yudao/2022-03-01/31.png" alt=" 项目结构" tabindex="0" loading="lazy"><figcaption> 项目结构</figcaption></figure><table><thead><tr><th>所在包</th><th>类</th><th>作用</th><th>示例</th></tr></thead><tbody><tr><td><code>api</code></td><td>Api 接口</td><td>提供给其它模块的 API 接口</td><td><a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/api/user/AdminUserApi.java" target="_blank" rel="noopener noreferrer">AdminUserApi(opens new window)</a></td></tr><tr><td><code>api</code></td><td>DTO 类</td><td>Api 接口的入参 ReqDTO、出参 RespDTO</td><td><a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/api/logger/dto/LoginLogCreateReqDTO.java" target="_blank" rel="noopener noreferrer">LoginLogCreateReqDTO (opens new window)</a><a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/api/dept/dto/DeptRespDTO.java" target="_blank" rel="noopener noreferrer">DeptRespDTO(opens new window)</a></td></tr><tr><td><code>enums</code></td><td>Enum 类</td><td>字段的枚举</td><td><a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/enums/logger/LoginLogTypeEnum.java" target="_blank" rel="noopener noreferrer">LoginLogTypeEnum(opens new window)</a></td></tr><tr><td><code>enums</code></td><td>DictTypeConstants 类</td><td>数据字典的枚举</td><td><a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/enums/DictTypeConstants.java" target="_blank" rel="noopener noreferrer">DictTypeConstants(opens new window)</a></td></tr><tr><td><code>enums</code></td><td>ErrorCodeConstants 类</td><td>错误码的枚举</td><td><a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/enums/ErrorCodeConstants.java" target="_blank" rel="noopener noreferrer">ErrorCodeConstants(opens new window)</a></td></tr></tbody></table><p><code>yudao-module-xxx-biz</code> 子模块的项目结构如下：</p><figure><img src="https://static.iocoder.cn/images/Yudao/2022-03-01/32-2.png" alt=" 项目结构" tabindex="0" loading="lazy"><figcaption> 项目结构</figcaption></figure><table><thead><tr><th>所在包</th><th>类</th><th>作用</th><th>示例</th></tr></thead><tbody><tr><td><code>api</code></td><td>ApiImpl 类</td><td>提供给其它模块的 API 实现类</td><td><a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/api/user/AdminUserApiImpl.java" target="_blank" rel="noopener noreferrer">AdminUserApiImpl(opens new window)</a></td></tr><tr><td><code>controler.admin</code></td><td>Controller 类</td><td>提供给管理后台的 RESTful API，默认以 <code>admin-api/</code> 作为前缀。 例如 <code>admin-api/system/auth/login</code> 登录接口</td><td><a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/auth/AuthController.java" target="_blank" rel="noopener noreferrer">AuthController(opens new window)</a></td></tr><tr><td><code>controler.admin</code></td><td>VO 类</td><td>Admin Controller 接口的入参 ReqVO、出参 RespVO</td><td><a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/auth/vo/auth/AuthLoginReqVO.java" target="_blank" rel="noopener noreferrer">AuthLoginReqVO (opens new window)</a><a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/auth/vo/auth/AuthLoginRespVO.java" target="_blank" rel="noopener noreferrer">AuthLoginRespVO(opens new window)</a></td></tr><tr><td><code>controler.app</code></td><td>Controller 类，<strong>以 App 为前缀</strong></td><td>提供给用户 App 的 RESTful API，默认以 <code>app-api/</code> 作为前缀。 例如 <code>app-api/member/auth/login</code> 登录接口</td><td><a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/auth/AppAuthController.java" target="_blank" rel="noopener noreferrer">AppAuthController(opens new window)</a></td></tr><tr><td><code>controler.app</code></td><td>VO 类，<strong>以 App 为前缀</strong></td><td>App Controller 接口的入参 ReqVO、出参 RespVO</td><td><a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/auth/vo/AppAuthLoginReqVO.java" target="_blank" rel="noopener noreferrer">AppAuthLoginReqVO (opens new window)</a><a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/auth/vo/AppAuthLoginRespVO.java" target="_blank" rel="noopener noreferrer">AppAuthLoginRespVO(opens new window)</a></td></tr><tr><td><code>controler</code></td><td><code>.http</code> 文件</td><td><a href="https://www.iocoder.cn/Spring-Boot/IDEA-HTTP-Client/?yudao" target="_blank" rel="noopener noreferrer">IDEA Http Client 插件 (opens new window)</a>，模拟请求 RESTful 接口</td><td><a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/auth/AuthController.http" target="_blank" rel="noopener noreferrer">AuthController.http(opens new window)</a></td></tr><tr><td><code>service</code></td><td>Service 接口</td><td>业务逻辑的接口定义</td><td><a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/user/AdminUserService.java" target="_blank" rel="noopener noreferrer">AdminUserService(opens new window)</a></td></tr><tr><td><code>service</code></td><td>ServiceImpl 类</td><td>业务逻辑的实现类</td><td><a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/user/AdminUserServiceImpl.java" target="_blank" rel="noopener noreferrer">AdminUserServiceImpl(opens new window)</a></td></tr><tr><td><code>dal</code></td><td>-</td><td>Data Access Layer，数据访问层</td><td></td></tr><tr><td><code>dal.dataobject</code></td><td>DO 类</td><td>Data Object，映射数据库表、或者 Redis 对象</td><td><a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/dataobject/user/AdminUserDO.java" target="_blank" rel="noopener noreferrer">AdminUserDO(opens new window)</a></td></tr><tr><td><code>dal.mysql</code></td><td>Mapper 接口</td><td>数据库的操作</td><td><a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/mysql/user/AdminUserMapper.java" target="_blank" rel="noopener noreferrer">AdminUserMapper(opens new window)</a></td></tr><tr><td><code>dal.redis</code></td><td>RedisDAO 类</td><td>Redis 的操作</td><td><a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/redis/auth/LoginUserRedisDAO.java" target="_blank" rel="noopener noreferrer">LoginUserRedisDAO(opens new window)</a></td></tr><tr><td><code>convert</code></td><td>Convert 接口</td><td>DTO / VO / DO 等对象之间的转换器</td><td><a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/convert/user/UserConvert.java" target="_blank" rel="noopener noreferrer">UserConvert(opens new window)</a></td></tr><tr><td><code>job</code></td><td>Job 类</td><td>定时任务</td><td><a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/job/auth/UserSessionTimeoutJob.java" target="_blank" rel="noopener noreferrer">UserSessionTimeoutJob(opens new window)</a></td></tr><tr><td><code>mq</code></td><td>-</td><td>Message Queue，消息队列</td><td></td></tr><tr><td><code>mq.message</code></td><td>Message 类</td><td>发送和消费的消息</td><td><a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/mq/message/dept/DeptRefreshMessage.java" target="_blank" rel="noopener noreferrer">DeptRefreshMessage(opens new window)</a></td></tr><tr><td><code>mq.producer</code></td><td>Producer 类</td><td>消息的生产者</td><td><a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/mq/producer/dept/DeptProducer.java" target="_blank" rel="noopener noreferrer">DeptProducer(opens new window)</a></td></tr><tr><td><code>mq.consumer</code></td><td>Producer 类</td><td>消息的消费者</td><td><a href="https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/mq/consumer/dept/DeptRefreshConsumer.java" target="_blank" rel="noopener noreferrer">DeptRefreshConsumer(opens new window)</a></td></tr><tr><td><code>framework</code></td><td>-</td><td>模块自身的框架封装</td><td><a href="https://github.com/YunaiV/ruoyi-vue-pro/tree/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/framework" target="_blank" rel="noopener noreferrer"><code>framework</code>(opens new window)</a></td></tr></tbody></table><p>疑问：为什么 Controller 分成 Admin 和 App 两种？</p><p>提供给 Admin 和 App 的 RESTful API 接口是不同的，拆分后更加清晰。</p><p>疑问：为什么 VO 分成 Admin 和 App 两种？</p><p>相同功能的 RESTful API 接口，对于 Admin 和 App 传入的参数、返回的结果都可能是不同的。例如说，Admin 查询某个用户的基本信息时，可以返回全部字段；而 App 查询时，不会返回 mobile 手机等敏感字段。</p><p>疑问：为什么 DO 不作为 Controller 的出入参？</p><ol><li>明确每个 RESTful API 接口的出入参。例如说，创建部门时，只需要传入 name、parentId 字段，使用 DO 接参就会导致 type、createTime、creator 等字段可以被传入，导致前端同学一脸懵逼。</li><li>每个 RESTful API 有自己独立的 VO，可以更好的设置 Swagger 注解、Validator 校验规则，而让 DO 保持整洁，专注映射好数据库表。</li></ol><p>疑问：为什么操作 Redis 需要通过 RedisDAO？</p><p>Service 直接使用 RedisTemplate 操作 Redis，导致大量 Redis 的操作细节和业务逻辑杂糅在一起，导致代码不够整洁。通过 RedisDAO 类，将每个 Redis Key 像一个数据表一样对待，清晰易维护。</p><p>总结来说，每个模块采用<strong>三层</strong>架构 + <strong>非严格</strong>分层，如下图所示：</p><figure><img src="https://static.iocoder.cn/images/Yudao/2022-03-01/33.png" alt="项目分层" tabindex="0" loading="lazy"><figcaption>项目分层</figcaption></figure><h3 id="_4-yudao-server" tabindex="-1"><a class="header-anchor" href="#_4-yudao-server"><span><a href="https://doc.iocoder.cn/project-intro/#_4-yudao-server" target="_blank" rel="noopener noreferrer">#</a>4. yudao-server</span></a></h3><p>该模块是后端 Server 的<strong>主项目</strong>，通过引入需要 <code>yudao-module-xxx</code> 业务模块，从而实现提供 RESTful API 给 <code>yudao-ui-admin</code>、<code>yudao-ui-user</code> 等前端项目。</p><p>本质上来说，它就是个空壳（容器）！如下图所示：</p><figure><img src="https://static.iocoder.cn/images/Yudao/2022-03-01/34.png" alt=" 项目" tabindex="0" loading="lazy"><figcaption> 项目</figcaption></figure><h2 id="👾-前端结构" tabindex="-1"><a class="header-anchor" href="#👾-前端结构"><span><a href="https://doc.iocoder.cn/project-intro/#%F0%9F%91%BE-%E5%89%8D%E7%AB%AF%E7%BB%93%E6%9E%84" target="_blank" rel="noopener noreferrer">#</a>👾 前端结构</span></a></h2><p>前端一共有六个项目，分别是：</p><table><thead><tr><th>项目</th><th>说明</th></tr></thead><tbody><tr><td><a href="https://github.com/yudaocode/yudao-ui-admin-vue3/" target="_blank" rel="noopener noreferrer"><code>yudao-ui-admin-vue3</code>(opens new window)</a></td><td>基于 Vue3 + element-plus 实现的管理后台</td></tr><tr><td><a href="https://github.com/yudaocode/yudao-ui-admin-vben/" target="_blank" rel="noopener noreferrer"><code>yudao-ui-admin-vben</code>(opens new window)</a></td><td>基于 Vue3 + vben(ant-design-vue) 实现的管理后台</td></tr><tr><td><code>yudao-ui-admin</code></td><td>基于 Vue2 + element-ui 实现的管理后台</td></tr><tr><td><a href="https://gitee.com/yudaocode/yudao-ui-go-view" target="_blank" rel="noopener noreferrer"><code>yudao-ui-go-view</code>(opens new window)</a></td><td>基于 Vue3 + naive-ui 实现的大屏报表</td></tr><tr><td><code>yudao-ui-admin-uniapp</code></td><td>基于 uni-app + uni-ui 实现的管理后台的小程序</td></tr><tr><td><code>yudao-ui-app</code></td><td>基于 uni-app + uview 实现的用户 App</td></tr></tbody></table><h3 id="_1-yudao-admin-ui-vue3" tabindex="-1"><a class="header-anchor" href="#_1-yudao-admin-ui-vue3"><span><a href="https://doc.iocoder.cn/project-intro/#_1-yudao-admin-ui-vue3" target="_blank" rel="noopener noreferrer">#</a>1. yudao-admin-ui-vue3</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>.</span></span>
<span class="line"><span>├── .github # github workflows 相关</span></span>
<span class="line"><span>├── .husky # husky 配置</span></span>
<span class="line"><span>├── .vscode # vscode 配置</span></span>
<span class="line"><span>├── mock # 自定义 mock 数据及配置</span></span>
<span class="line"><span>├── public # 静态资源</span></span>
<span class="line"><span>├── src # 项目代码</span></span>
<span class="line"><span>│   ├── api # api接口管理</span></span>
<span class="line"><span>│   ├── assets # 静态资源</span></span>
<span class="line"><span>│   ├── components # 公用组件</span></span>
<span class="line"><span>│   ├── hooks # 常用hooks</span></span>
<span class="line"><span>│   ├── layout # 布局组件</span></span>
<span class="line"><span>│   ├── locales # 语言文件</span></span>
<span class="line"><span>│   ├── plugins # 外部插件</span></span>
<span class="line"><span>│   ├── router # 路由配置</span></span>
<span class="line"><span>│   ├── store # 状态管理</span></span>
<span class="line"><span>│   ├── styles # 全局样式</span></span>
<span class="line"><span>│   ├── utils # 全局工具类</span></span>
<span class="line"><span>│   ├── views # 路由页面</span></span>
<span class="line"><span>│   ├── App.vue # 入口vue文件</span></span>
<span class="line"><span>│   ├── main.ts # 主入口文件</span></span>
<span class="line"><span>│   └── permission.ts # 路由拦截</span></span>
<span class="line"><span>├── types # 全局类型</span></span>
<span class="line"><span>├── .env.base # 本地开发环境 环境变量配置</span></span>
<span class="line"><span>├── .env.dev # 打包到开发环境 环境变量配置</span></span>
<span class="line"><span>├── .env.gitee # 针对 gitee 的环境变量 可忽略</span></span>
<span class="line"><span>├── .env.pro # 打包到生产环境 环境变量配置</span></span>
<span class="line"><span>├── .env.test # 打包到测试环境 环境变量配置</span></span>
<span class="line"><span>├── .eslintignore # eslint 跳过检测配置</span></span>
<span class="line"><span>├── .eslintrc.js # eslint 配置</span></span>
<span class="line"><span>├── .gitignore # git 跳过配置</span></span>
<span class="line"><span>├── .prettierignore # prettier 跳过检测配置</span></span>
<span class="line"><span>├── .stylelintignore # stylelint 跳过检测配置</span></span>
<span class="line"><span>├── .versionrc 自动生成版本号及更新记录配置</span></span>
<span class="line"><span>├── CHANGELOG.md # 更新记录</span></span>
<span class="line"><span>├── commitlint.config.js # git commit 提交规范配置</span></span>
<span class="line"><span>├── index.html # 入口页面</span></span>
<span class="line"><span>├── package.json</span></span>
<span class="line"><span>├── .postcssrc.js # postcss 配置</span></span>
<span class="line"><span>├── prettier.config.js # prettier 配置</span></span>
<span class="line"><span>├── README.md # 英文 README</span></span>
<span class="line"><span>├── README.zh-CN.md # 中文 README</span></span>
<span class="line"><span>├── stylelint.config.js # stylelint 配置</span></span>
<span class="line"><span>├── tsconfig.json # typescript 配置</span></span>
<span class="line"><span>├── vite.config.ts # vite 配置</span></span>
<span class="line"><span>└── windi.config.ts # windicss 配置</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-yudao-ui-admin-vben" tabindex="-1"><a class="header-anchor" href="#_2-yudao-ui-admin-vben"><span><a href="https://doc.iocoder.cn/project-intro/#_2-yudao-ui-admin-vben" target="_blank" rel="noopener noreferrer">#</a>2. yudao-ui-admin-vben</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>.</span></span>
<span class="line"><span>├── build # 打包脚本相关</span></span>
<span class="line"><span>│   ├── config # 配置文件</span></span>
<span class="line"><span>│   ├── generate # 生成器</span></span>
<span class="line"><span>│   ├── script # 脚本</span></span>
<span class="line"><span>│   └── vite # vite配置</span></span>
<span class="line"><span>├── mock # mock文件夹</span></span>
<span class="line"><span>├── public # 公共静态资源目录</span></span>
<span class="line"><span>├── src # 主目录</span></span>
<span class="line"><span>│   ├── api # 接口文件</span></span>
<span class="line"><span>│   ├── assets # 资源文件</span></span>
<span class="line"><span>│   │   ├── icons # icon sprite 图标文件夹</span></span>
<span class="line"><span>│   │   ├── images # 项目存放图片的文件夹</span></span>
<span class="line"><span>│   │   └── svg # 项目存放svg图片的文件夹</span></span>
<span class="line"><span>│   ├── components # 公共组件</span></span>
<span class="line"><span>│   ├── design # 样式文件</span></span>
<span class="line"><span>│   ├── directives # 指令</span></span>
<span class="line"><span>│   ├── enums # 枚举/常量</span></span>
<span class="line"><span>│   ├── hooks # hook</span></span>
<span class="line"><span>│   │   ├── component # 组件相关hook</span></span>
<span class="line"><span>│   │   ├── core # 基础hook</span></span>
<span class="line"><span>│   │   ├── event # 事件相关hook</span></span>
<span class="line"><span>│   │   ├── setting # 配置相关hook</span></span>
<span class="line"><span>│   │   └── web # web相关hook</span></span>
<span class="line"><span>│   ├── layouts # 布局文件</span></span>
<span class="line"><span>│   │   ├── default # 默认布局</span></span>
<span class="line"><span>│   │   ├── iframe # iframe布局</span></span>
<span class="line"><span>│   │   └── page # 页面布局</span></span>
<span class="line"><span>│   ├── locales # 多语言</span></span>
<span class="line"><span>│   ├── logics # 逻辑</span></span>
<span class="line"><span>│   ├── main.ts # 主入口</span></span>
<span class="line"><span>│   ├── router # 路由配置</span></span>
<span class="line"><span>│   ├── settings # 项目配置</span></span>
<span class="line"><span>│   │   ├── componentSetting.ts # 组件配置</span></span>
<span class="line"><span>│   │   ├── designSetting.ts # 样式配置</span></span>
<span class="line"><span>│   │   ├── encryptionSetting.ts # 加密配置</span></span>
<span class="line"><span>│   │   ├── localeSetting.ts # 多语言配置</span></span>
<span class="line"><span>│   │   ├── projectSetting.ts # 项目配置</span></span>
<span class="line"><span>│   │   └── siteSetting.ts # 站点配置</span></span>
<span class="line"><span>│   ├── store # 数据仓库</span></span>
<span class="line"><span>│   ├── utils # 工具类</span></span>
<span class="line"><span>│   └── views # 页面</span></span>
<span class="line"><span>├── test # 测试</span></span>
<span class="line"><span>│   └── server # 测试用到的服务</span></span>
<span class="line"><span>│       ├── api # 测试服务器</span></span>
<span class="line"><span>│       ├── upload # 测试上传服务器</span></span>
<span class="line"><span>│       └── websocket # 测试ws服务器</span></span>
<span class="line"><span>├── types # 类型文件</span></span>
<span class="line"><span>├── vite.config.ts # vite配置文件</span></span>
<span class="line"><span>└── windi.config.ts # windcss配置文件</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-yudao-admin-ui" tabindex="-1"><a class="header-anchor" href="#_3-yudao-admin-ui"><span><a href="https://doc.iocoder.cn/project-intro/#_3-yudao-admin-ui" target="_blank" rel="noopener noreferrer">#</a>3. yudao-admin-ui</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>├── bin                        // 执行脚本</span></span>
<span class="line"><span>├── build                      // 构建相关  </span></span>
<span class="line"><span>├── public                     // 公共文件</span></span>
<span class="line"><span>│   ├── favicon.ico            // favicon 图标</span></span>
<span class="line"><span>│   └── index.html             // html 模板</span></span>
<span class="line"><span>│   └── robots.txt             // 反爬虫</span></span>
<span class="line"><span>├── src                        // 源代码</span></span>
<span class="line"><span>│   ├── api                    // 所有请求【重要】</span></span>
<span class="line"><span>│   ├── assets                 // 主题、字体等静态资源</span></span>
<span class="line"><span>│   ├── components             // 全局公用组件</span></span>
<span class="line"><span>│   ├── directive              // 全局指令</span></span>
<span class="line"><span>│   ├── icons                  // 图标</span></span>
<span class="line"><span>│   ├── layout                 // 布局</span></span>
<span class="line"><span>│   ├── plugins                // 插件</span></span>
<span class="line"><span>│   ├── router                 // 路由</span></span>
<span class="line"><span>│   ├── store                  // 全局 store 管理</span></span>
<span class="line"><span>│   ├── utils                  // 全局公用方法</span></span>
<span class="line"><span>│   ├── views                  // 视图【重要】</span></span>
<span class="line"><span>│   ├── App.vue                // 入口页面</span></span>
<span class="line"><span>│   ├── main.js                // 入口 JS，加载组件、初始化等</span></span>
<span class="line"><span>│   ├── permission.js          // 权限管理</span></span>
<span class="line"><span>│   └── settings.js            // 系统配置</span></span>
<span class="line"><span>├── .editorconfig              // 编码格式</span></span>
<span class="line"><span>├── .env.development           // 开发环境配置</span></span>
<span class="line"><span>├── .env.production            // 生产环境配置</span></span>
<span class="line"><span>├── .env.staging               // 测试环境配置</span></span>
<span class="line"><span>├── .eslintignore              // 忽略语法检查</span></span>
<span class="line"><span>├── .eslintrc.js               // eslint 配置项</span></span>
<span class="line"><span>├── .gitignore                 // git 忽略项</span></span>
<span class="line"><span>├── babel.config.js            // babel.config.js</span></span>
<span class="line"><span>├── package.json               // package.json</span></span>
<span class="line"><span>└── vue.config.js              // vue.config.js</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-yudao-admin-ui-uniapp" tabindex="-1"><a class="header-anchor" href="#_4-yudao-admin-ui-uniapp"><span><a href="https://doc.iocoder.cn/project-intro/#_4-yudao-admin-ui-uniapp" target="_blank" rel="noopener noreferrer">#</a>4. yudao-admin-ui-uniapp</span></a></h3><p>TODO 待补充</p><h3 id="_5-yudao-ui-app" tabindex="-1"><a class="header-anchor" href="#_5-yudao-ui-app"><span><a href="https://doc.iocoder.cn/project-intro/#_5-yudao-ui-app" target="_blank" rel="noopener noreferrer">#</a>5. yudao-ui-app</span></a></h3><p>建设中，基于 uniapp 实现...</p><h3 id="_6-yudao-ui-go-view" tabindex="-1"><a class="header-anchor" href="#_6-yudao-ui-go-view"><span><a href="https://doc.iocoder.cn/project-intro/#_6-yudao-ui-go-view" target="_blank" rel="noopener noreferrer">#</a>6. yudao-ui-go-view</span></a></h3><p>TODO 待补充</p><p>上次更新: 2023/04/14, 23:29:13</p>`,70)]))}const p=n(d,[["render",o],["__file","9.项目结构.html.vue"]]),l=JSON.parse('{"path":"/posts/Java/Ruoyi-Vue-Pro/1.%E8%90%8C%E6%96%B0%E5%BF%85%E8%AF%BB/9.%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84.html","title":"项目结构","lang":"zh-CN","frontmatter":{"description":"项目结构 项目结构项目结构 #👍 相关视频教程 从零开始 01：视频课程导读：项目简介、功能列表、技术选型(opens new window) 从零开始 04：自顶向下，讲解项目的整体结构（上）(opens new window) 从零开始 04：自顶向下，讲解项目的整体结构（下）(opens new window) #👻 后端结构 后端采用模块化...","watermark":true,"head":[["meta",{"property":"og:url","content":"https://springg.us.kg/posts/Java/Ruoyi-Vue-Pro/1.%E8%90%8C%E6%96%B0%E5%BF%85%E8%AF%BB/9.%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84.html"}],["meta",{"property":"og:site_name","content":"mrjason’s Blog"}],["meta",{"property":"og:title","content":"项目结构"}],["meta",{"property":"og:description","content":"项目结构 项目结构项目结构 #👍 相关视频教程 从零开始 01：视频课程导读：项目简介、功能列表、技术选型(opens new window) 从零开始 04：自顶向下，讲解项目的整体结构（上）(opens new window) 从零开始 04：自顶向下，讲解项目的整体结构（下）(opens new window) #👻 后端结构 后端采用模块化..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://doc.iocoder.cn/img/%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84/01.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-24T05:58:00.000Z"}],["meta",{"property":"article:author","content":"MrJason"}],["meta",{"property":"article:modified_time","content":"2024-11-24T05:58:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"项目结构\\",\\"image\\":[\\"https://doc.iocoder.cn/img/%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84/01.png\\",\\"https://static.iocoder.cn/images/Yudao/2022-03-01/11.png\\",\\"https://static.iocoder.cn/images/Yudao/2022-03-01/21.png\\",\\"https://static.iocoder.cn/images/Yudao/2022-03-01/31.png\\",\\"https://static.iocoder.cn/images/Yudao/2022-03-01/32-2.png\\",\\"https://static.iocoder.cn/images/Yudao/2022-03-01/33.png\\",\\"https://static.iocoder.cn/images/Yudao/2022-03-01/34.png\\"],\\"dateModified\\":\\"2024-11-24T05:58:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MrJason\\",\\"url\\":\\"https://springg.us.kg\\"}]}"]]},"headers":[{"level":2,"title":"#👍 相关视频教程","slug":"👍-相关视频教程","link":"#👍-相关视频教程","children":[]},{"level":2,"title":"#👻 后端结构","slug":"👻-后端结构","link":"#👻-后端结构","children":[{"level":3,"title":"#1. yudao-dependencies","slug":"_1-yudao-dependencies","link":"#_1-yudao-dependencies","children":[]},{"level":3,"title":"#2. yudao-framework","slug":"_2-yudao-framework","link":"#_2-yudao-framework","children":[]},{"level":3,"title":"#3. yudao-module-xxx","slug":"_3-yudao-module-xxx","link":"#_3-yudao-module-xxx","children":[]},{"level":3,"title":"#4. yudao-server","slug":"_4-yudao-server","link":"#_4-yudao-server","children":[]}]},{"level":2,"title":"#👾 前端结构","slug":"👾-前端结构","link":"#👾-前端结构","children":[{"level":3,"title":"#1. yudao-admin-ui-vue3","slug":"_1-yudao-admin-ui-vue3","link":"#_1-yudao-admin-ui-vue3","children":[]},{"level":3,"title":"#2. yudao-ui-admin-vben","slug":"_2-yudao-ui-admin-vben","link":"#_2-yudao-ui-admin-vben","children":[]},{"level":3,"title":"#3. yudao-admin-ui","slug":"_3-yudao-admin-ui","link":"#_3-yudao-admin-ui","children":[]},{"level":3,"title":"#4. yudao-admin-ui-uniapp","slug":"_4-yudao-admin-ui-uniapp","link":"#_4-yudao-admin-ui-uniapp","children":[]},{"level":3,"title":"#5. yudao-ui-app","slug":"_5-yudao-ui-app","link":"#_5-yudao-ui-app","children":[]},{"level":3,"title":"#6. yudao-ui-go-view","slug":"_6-yudao-ui-go-view","link":"#_6-yudao-ui-go-view","children":[]}]}],"git":{"createdTime":1732174913000,"updatedTime":1732427880000,"contributors":[{"name":"MrJason","email":"845886914@qq.com","commits":1}]},"readingTime":{"minutes":11.83,"words":3548},"filePathRelative":"posts/Java/Ruoyi-Vue-Pro/1.萌新必读/9.项目结构.md","localizedDate":"2024年11月21日","excerpt":"\\n<figure><img src=\\"https://doc.iocoder.cn/img/项目结构/01.png\\" alt=\\"项目结构\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>项目结构</figcaption></figure>\\n<h2><a class=\\"header-anchor\\" href=\\"#👍-相关视频教程\\"><span></span></a><a href=\\"https://doc.iocoder.cn/project-intro/#%F0%9F%91%8D-%E7%9B%B8%E5%85%B3%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">#</a>👍 相关视频教程</h2>","autoDesc":true}');export{p as comp,l as data};
