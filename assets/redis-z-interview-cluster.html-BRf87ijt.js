import{_ as s,c as t,a as i,o as r}from"./app-DP7tPpgD.js";const a={};function l(d,e){return r(),t("div",null,e[0]||(e[0]=[i('<h1 id="redis面试-集群-分片技术" tabindex="-1"><a class="header-anchor" href="#redis面试-集群-分片技术"><span>Redis面试 - 集群-分片技术</span></a></h1><h2 id="_1-什么是redis-cluster" tabindex="-1"><a class="header-anchor" href="#_1-什么是redis-cluster"><span>1 什么是Redis Cluster？</span></a></h2><p>Redis-cluster是一种服务器Sharding技术，Redis3.0以后版本正式提供支持。</p><h2 id="_2-说说redis哈希槽的概念-为什么是16384个" tabindex="-1"><a class="header-anchor" href="#_2-说说redis哈希槽的概念-为什么是16384个"><span>2 说说Redis哈希槽的概念？为什么是16384个？</span></a></h2><p>Redis-cluster没有使用一致性hash，而是引入了<strong>哈希槽</strong>的概念。Redis-cluster中有16384(即2的14次方）个哈希槽，每个key通过CRC16校验后对16383取模来决定放置哪个槽。Cluster中的每个节点负责一部分hash槽（hash slot）。</p><p>比如集群中存在三个节点，则可能存在的一种分配如下：</p><ol><li>节点A包含0到5500号哈希槽；</li><li>节点B包含5501到11000号哈希槽；</li><li>节点C包含11001 到 16384号哈希槽。</li></ol><ul><li><strong>为什么是16384个</strong></li></ul><p>我们知道一致性hash算法是2的16次方，为什么hash slot是2的14次方呢？</p><ol><li><p>如果槽位为65536，发送心跳信息的消息头达8k，发送的心跳包过于庞大。</p><p>如上所述，在消息头中，最占空间的是myslots[CLUSTER_SLOTS/8]。 当槽位为65536时，这块的大小是: 65536÷8÷1024=8kb 因为每秒钟，redis节点需要发送一定数量的ping消息作为心跳包，如果槽位为65536，这个ping消息的消息头太大了，浪费带宽。</p></li><li><p>redis的集群主节点数量基本不可能超过1000个。</p><p>如上所述，集群节点越多，心跳包的消息体内携带的数据越多。如果节点过1000个，也会导致网络拥堵。因此redis作者，不建议redis cluster节点数量超过1000个。 那么，对于节点数在1000以内的redis cluster集群，16384个槽位够用了。没有必要拓展到65536个。</p></li><li><p>槽位越小，节点少的情况下，压缩比高</p><p>Redis主节点的配置信息中，它所负责的哈希槽是通过一张bitmap的形式来保存的，在传输过程中，会对bitmap进行压缩，但是如果bitmap的填充率slots / N很高的话(N表示节点数)，bitmap的压缩率就很低。 如果节点数很少，而哈希槽数量很多的话，bitmap的压缩率就很低。</p></li></ol><h2 id="_3-redis集群会有写操作丢失吗-为什么" tabindex="-1"><a class="header-anchor" href="#_3-redis集群会有写操作丢失吗-为什么"><span>3 Redis集群会有写操作丢失吗？为什么？</span></a></h2><p>Redis并不能保证数据的强一致性，这意味这在实际中集群在特定的条件下可能会丢失写操作。</p><h2 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h2>',13)]))}const p=s(a,[["render",l],["__file","redis-z-interview-cluster.html.vue"]]),o=JSON.parse('{"path":"/posts/Redis/redis-z-interview-cluster.html","title":"Redis面试 - 集群-分片技术","lang":"zh-CN","frontmatter":{"aliases":"Redis面试 - 集群-分片技术","tags":null,"cssclass":null,"source":null,"order":1100,"category":["数据库","Redis"],"created":"2024-02-22 10:49","updated":"2024-03-13 10:27","description":"Redis面试 - 集群-分片技术 1 什么是Redis Cluster？ Redis-cluster是一种服务器Sharding技术，Redis3.0以后版本正式提供支持。 2 说说Redis哈希槽的概念？为什么是16384个？ Redis-cluster没有使用一致性hash，而是引入了哈希槽的概念。Redis-cluster中有16384(即2的...","watermark":true,"head":[["meta",{"property":"og:url","content":"https://springg.us.kg/posts/Redis/redis-z-interview-cluster.html"}],["meta",{"property":"og:site_name","content":"mrjason’s Blog"}],["meta",{"property":"og:title","content":"Redis面试 - 集群-分片技术"}],["meta",{"property":"og:description","content":"Redis面试 - 集群-分片技术 1 什么是Redis Cluster？ Redis-cluster是一种服务器Sharding技术，Redis3.0以后版本正式提供支持。 2 说说Redis哈希槽的概念？为什么是16384个？ Redis-cluster没有使用一致性hash，而是引入了哈希槽的概念。Redis-cluster中有16384(即2的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-21T07:03:09.000Z"}],["meta",{"property":"article:author","content":"MrJason"}],["meta",{"property":"article:modified_time","content":"2024-10-21T07:03:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Redis面试 - 集群-分片技术\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-21T07:03:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MrJason\\",\\"url\\":\\"https://springg.us.kg\\"}]}"]]},"headers":[{"level":2,"title":"1 什么是Redis Cluster？","slug":"_1-什么是redis-cluster","link":"#_1-什么是redis-cluster","children":[]},{"level":2,"title":"2 说说Redis哈希槽的概念？为什么是16384个？","slug":"_2-说说redis哈希槽的概念-为什么是16384个","link":"#_2-说说redis哈希槽的概念-为什么是16384个","children":[]},{"level":2,"title":"3 Redis集群会有写操作丢失吗？为什么？","slug":"_3-redis集群会有写操作丢失吗-为什么","link":"#_3-redis集群会有写操作丢失吗-为什么","children":[]},{"level":2,"title":"","slug":"","link":"#","children":[]}],"git":{"createdTime":1729494189000,"updatedTime":1729494189000,"contributors":[{"name":"MrJason","email":"845886914@qq.com","commits":1}]},"readingTime":{"minutes":2.13,"words":638},"filePathRelative":"posts/Redis/redis-z-interview-cluster.md","localizedDate":"2024年10月21日","excerpt":"\\n<h2>1 什么是Redis Cluster？</h2>\\n<p>Redis-cluster是一种服务器Sharding技术，Redis3.0以后版本正式提供支持。</p>\\n<h2>2 说说Redis哈希槽的概念？为什么是16384个？</h2>\\n<p>Redis-cluster没有使用一致性hash，而是引入了<strong>哈希槽</strong>的概念。Redis-cluster中有16384(即2的14次方）个哈希槽，每个key通过CRC16校验后对16383取模来决定放置哪个槽。Cluster中的每个节点负责一部分hash槽（hash slot）。</p>\\n<p>比如集群中存在三个节点，则可能存在的一种分配如下：</p>","autoDesc":true}');export{p as comp,o as data};
