import{_ as a,c as n,a as i,o as l}from"./app-DEK5G3U7.js";const e={};function p(r,s){return l(),n("div",null,s[0]||(s[0]=[i(`<h1 id="数仓项目补充" tabindex="-1"><a class="header-anchor" href="#数仓项目补充"><span>数仓项目补充</span></a></h1><hr><h2 id="一、kafka精准一次性消费" tabindex="-1"><a class="header-anchor" href="#一、kafka精准一次性消费"><span>一、Kafka精准一次性消费</span></a></h2><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 1. 原理解析</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      在离线的数仓中，flume1 -</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> kafka -</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> flume2时，kafka会给数据加时间戳。而且这是时间戳默认为系统时间，数据写到hdfs时，</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      按照headers中的timestamp时间戳，进入到某一个文件夹中。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 2. 问题描述：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      在实际开发中，当前一天23:</span><span style="color:#D19A66;--shiki-dark:#D19A66;">59</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:58秒产生的数据，由于网络延迟的原因，数据采集到达kafka时，到了第二天，那么此时数据通过flume</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      采集到hdfs后，存储在第二天的文件夹中。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 3. 问题的验证：</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">      1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 修改数据生成器jar包的properties文件，将时间修改为2020-</span><span style="color:#D19A66;--shiki-dark:#D19A66;">08</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">-</span><span style="color:#D19A66;--shiki-dark:#D19A66;">21</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">， 不修改虚拟机的系统时间</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">      2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 开启采集通道：zk、hadoop集群、kafka、flume2、flume2</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">      3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 去到hdfs文件系统中查看数据，发生生成的文件为今天：</span><span style="color:#D19A66;--shiki-dark:#D19A66;">2020</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">-</span><span style="color:#D19A66;--shiki-dark:#D19A66;">07</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">-</span><span style="color:#D19A66;--shiki-dark:#D19A66;">26</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">，而不是数据生成的时间。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--4 . 解决方法：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      在flume2中，自定义拦截器，将数据的时间戳添加到event的header中的timestamp中，这样数据就会根据数据的时间戳去到指定的文件夹中，实现精准一次性消费。</span></span></code></pre></div><h3 id="_1-1-编写拦截器" tabindex="-1"><a class="header-anchor" href="#_1-1-编写拦截器"><span>1.1 编写拦截器</span></a></h3><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 1. 编写拦截器的步骤：</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 自定义类 implements Interceptor</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 实现4个方法</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   初始化、关闭资源、单个event处理逻辑、 多个event的处理逻辑</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 创建一个内部类，继承与Builder</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   重写2个方法</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 2. 打包 -&gt; 上传到flume/lib包下</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 3. 编写flume的配置文件</span></span></code></pre></div><ul><li>代码</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">package</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> com.atguigu.realtime.utils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> com.alibaba.fastjson.JSON</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> com.alibaba.fastjson.JSONObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> org.apache.flume.Context</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> org.apache.flume.Event</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> org.apache.flume.interceptor.Interceptor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> java.util.List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@author</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> lianzhipeng</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * @Description</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * @create 2020-07-25 18:42:09</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> TimeInterceptor</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> implements</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Interceptor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     * configure配置的初始化</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> initialize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     * 单个event的处理逻辑</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> event</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@return</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Event</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> intercept</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Event</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> event</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 获取event的body数据</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> body</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">  =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> event</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getBody</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">toString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 将数据解成json对象</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        JSONObject</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> json</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> JSON</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">parseObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(body);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 获取key为ts的value值</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> ts</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> json</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;ts&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(ts);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     // 判断数据不能为空</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">       if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (ts </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">!=</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">           // 将ts增加到header中，数据必须是timestamp</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">           event</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getHeaders</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;timestamp&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,ts);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">       }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">       // 返回event</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> event;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     * 多个event的处理方式，内部调用单个event的处理逻辑</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> events</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@return</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Event</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> intercept</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Event</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">events</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Event</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> event</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> :</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> events) {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">            intercept</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(event);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> events;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     * 资源的关闭</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> close</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     * 自定义内部类，实现Builder类，重写两个方法</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">  MyBuilder</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> implements</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">   Builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">         * 返回自定义类的对象</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">         * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@return</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">         */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Interceptor</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">          return</span><span style="color:#C678DD;--shiki-dark:#C678DD;">   new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> MyInterceptor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> configure</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Context</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> context</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-在flume2配置文件中使用拦截器" tabindex="-1"><a class="header-anchor" href="#_1-2-在flume2配置文件中使用拦截器"><span>1.2 在flume2配置文件中使用拦截器</span></a></h3><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#步骤一：agent Name</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources</span><span style="color:#98C379;--shiki-dark:#98C379;">=r1</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.channels</span><span style="color:#98C379;--shiki-dark:#98C379;">=c1</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sinks</span><span style="color:#98C379;--shiki-dark:#98C379;">=k1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#步骤二：kafka source</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#source类型</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources.r1.type</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.apache.flume.source.kafka.KafkaSource</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#putlist中数据达到了6K以后提交到channel中</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources.r1.batchSize</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 5000</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#拉取数据的时间达到2s以后，将获取的数据提交到channel中</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources.r1.batchDurationMillis</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 2000</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#kafka的集群</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources.r1.kafka.bootstrap.servers</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> hadoop105:9092,hadoop106:9092,hadoop107:9092</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#订阅的话题</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources.r1.kafka.topics</span><span style="color:#98C379;--shiki-dark:#98C379;">=topic_log</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#步骤三：定义拦截器</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources.r1.interceptors</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> i1</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#指定拦截器的类型 = 自定义拦截器中builder的实现类的全类名</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources.r1.interceptors.i1.type</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> MyInterceptor</span><span style="color:#E06C75;--shiki-dark:#E06C75;">$MyBuilder</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#步骤四：定义file channel</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.channels.c1.type</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> file</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#checkpoint文件存储的地址</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.channels.c1.checkpointDir</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> /opt/module/flume/checkpoint/behavior1</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># channel中event文件在磁盘中存储的地址</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.channels.c1.dataDirs</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> /opt/module/flume/data/behavior1/</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#一个event文件存储的最大的大小</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.channels.c1.maxFileSize</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 2146435071</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#checkpoint个数的最大容量</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.channels.c1.capacity</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1000000</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#当put事务将数据提交到channel队列中，channel队列没有足够的空间时，提交事务等待的最大时间</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.channels.c1.keep-alive</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 6</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#步骤五：sink</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sinks.k1.type</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> hdfs</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#上传到HDFS的路径</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sinks.k1.hdfs.path</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> /origin_data/gmall/log/topic_log/%Y-%m-%d</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#上传文件的前缀</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sinks.k1.hdfs.filePrefix</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> log-</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#是否按照时间滚动文件夹</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sinks.k1.hdfs.round</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#多久生成一个新的文件</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sinks.k1.hdfs.rollInterval</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 10</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#设置每个文件的滚动大小大概是128M</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sinks.k1.hdfs.rollSize</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 134217728</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#文件的滚动与Event数量无关</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sinks.k1.hdfs.rollCount</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#开启压缩</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sinks.k1.hdfs.fileType</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> CompressedStream</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sinks.k1.hdfs.codeC</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> lzop</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#第六步：连接source和channel</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources.r1.channels</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> c1</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sinks.k1.channel</span><span style="color:#98C379;--shiki-dark:#98C379;">=</span><span style="color:#98C379;--shiki-dark:#98C379;"> c1</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-3-碰到的问题" tabindex="-1"><a class="header-anchor" href="#_1-3-碰到的问题"><span>1.3 碰到的问题</span></a></h3><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 上面的配置文件是使用在第二个flume2中，消费kafka中数据到hdfs上，不是第一个flume1。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 报jsonexception异常，反查发现是拦截器使用json时不对。需按照我们上面的方式对数据进行解析，当然也可以有其他的方式。我</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   们的主要目的就是取出ts对应的时间戳，加到event的header的timestamp属性中</span></span></code></pre></div><h2 id="二、日志数据分多个topic" tabindex="-1"><a class="header-anchor" href="#二、日志数据分多个topic"><span>二、日志数据分多个topic</span></a></h2><h3 id="_2-1-需求分析" tabindex="-1"><a class="header-anchor" href="#_2-1-需求分析"><span>2.1 需求分析</span></a></h3><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 1. 需求</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   在实际开发中，我们的一条日志数据可能包含很多信息（取决于前端的埋点），如启动数据、加购物车数据、评论数据、错误数据等等，对应</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   在公司中，有多个部门，来处理不同的数据，如故障信息处理部门，评论信息处理部门，这样一来，对于故障信息处理部门来说，除故障信息</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   以外的所有数据都是脏数据。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 2. 实现方式：</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">   &#39;flume1&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">   1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 将采集到的数据，使用自定义拦截器：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      a、获取这条数据的属性，比如是启动数据、评论数据等。</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      b、将这个属性加入到event的header中</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">   2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 使用多路复用的选择器，将数据指定到不同的channel中。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">   3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 开启两个kafka channel</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">   &#39;flume2&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">   1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 开启两个kafka source</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">   2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 两个channel和两个sink一一对应</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">   3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 实现一天中，一个topic一个文件夹</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>![image-20200726101947395](<a href="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic" target="_blank" rel="noopener noreferrer">https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic</a> GO/20200726101947.png)</p><h3 id="_2-2-实现" tabindex="-1"><a class="header-anchor" href="#_2-2-实现"><span>2.2 实现</span></a></h3><h4 id="_2-2-1-自定义拦截器" tabindex="-1"><a class="header-anchor" href="#_2-2-1-自定义拦截器"><span>2.2.1 自定义拦截器</span></a></h4><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 1. 思想：</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">   1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 获取event的数据</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">   2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 获取数据的类型</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">   3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 将数据的类型加入到event的header中</span></span></code></pre></div><ul><li>代码</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> com.alibaba.fastjson.JSONObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> org.apache.flume.Context</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> org.apache.flume.Event</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> org.apache.flume.interceptor.Interceptor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> java.util.List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@author</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> lianzhipeng</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * @Description</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * @create 2020-07-25 21:03:42</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> StartTopicandEventTopic</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> implements</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">  Interceptor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">         * 封装confing属性</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">         */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> initialize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">         * 处理单个event</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">         * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> event</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">         * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@return</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">         */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Event</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> intercept</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Event</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> event</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">            String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> str</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">event</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getBody</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">            JSONObject</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> json</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> JSONObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">parseObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(str);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">            String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> ts</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> json</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;actions&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">            if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ( ts </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">!=</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ){</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">                event</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getHeaders</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;type&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;event&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            }</span><span style="color:#C678DD;--shiki-dark:#C678DD;">else</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">                event</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getHeaders</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;type&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;start&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">            return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> event;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">         * 处理多个event</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">         * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> events</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">         * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@return</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">         */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Event</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> intercept</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Event</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">events</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">            for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Event</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> event</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> :</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> events) {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">                intercept</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(event);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">            return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> events;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">         *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">         */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> close</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD;">  class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">  MyBuilder</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> implements</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Interceptor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">            public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Interceptor</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">                return</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> StartTopicandEventTopic</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">            public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> configure</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Context</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> context</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-2-2-编写flume1的配置文件" tabindex="-1"><a class="header-anchor" href="#_2-2-2-编写flume1的配置文件"><span>2.2.2 编写flume1的配置文件</span></a></h4><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#步骤一：agent Name</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> r1</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.channels</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> c1</span><span style="color:#98C379;--shiki-dark:#98C379;"> c2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#步骤二：taildir source</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources.r1.type</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> TAILDIR</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#指定position_file 的位置，(记录每次上传后的偏移量，实现断点续传的关键)</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources.r1.positionFile</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> /opt/module/flume/tail_dir.json</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources.r1.batchSize</span><span style="color:#98C379;--shiki-dark:#98C379;">=500</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#监控的文件目录集合</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources.r1.filegroups</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> f1</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#定义监控的文件目录1</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources.r1.filegroups.f1</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> /opt/module/applog/log/app.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">*</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#指定拦截器</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources.r1.interceptors</span><span style="color:#98C379;--shiki-dark:#98C379;"> =i1</span><span style="color:#98C379;--shiki-dark:#98C379;"> i2</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#指定拦截器的类型 = 自定义拦截器中builder的实现类的全类名</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources.r1.interceptors.i1.type</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> com.atguigu.flume.interceptor.LogInterceptor</span><span style="color:#E06C75;--shiki-dark:#E06C75;">$MyBuilder</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#指定拦截器的类型 = 自定义拦截器中builder的实现类的全类名</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources.r1.interceptors.i2.type</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> StartTopicandEventTopic</span><span style="color:#E06C75;--shiki-dark:#E06C75;">$MyBuilder</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#步骤三、指定channel的选择器:多路复用</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources.r1.selector.type</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> multiplexing</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#自定义拦截器的header的k</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources.r1.selector.header</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> type</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#event是map中一个value值，相同的event进入channel1中</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources.r1.selector.mapping.event</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#start是map中一个value值，相同的event进入channel2中</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources.r1.selector.mapping.start</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> c2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#步骤四：指定channel</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.channels.c1.type</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.apache.flume.channel.kafka.KafkaChannel</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.channels.c1.kafka.bootstrap.servers</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> hadoop105:9092,hadoop106:9092,hadoop107:9092</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.channels.c1.kafka.topic</span><span style="color:#98C379;--shiki-dark:#98C379;"> =event</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.channels.c1.parseAsFlumeEvent</span><span style="color:#98C379;--shiki-dark:#98C379;">=</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.channels.c2.type</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.apache.flume.channel.kafka.KafkaChannel</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.channels.c2.kafka.bootstrap.servers</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> hadoop105:9092,hadoop106:9092,hadoop107:9092</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.channels.c2.kafka.topic</span><span style="color:#98C379;--shiki-dark:#98C379;"> =start</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.channels.c2.parseAsFlumeEvent</span><span style="color:#98C379;--shiki-dark:#98C379;">=</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#第五步：连接source和channel</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources.r1.channels</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> c1</span><span style="color:#98C379;--shiki-dark:#98C379;"> c2</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-2-3-编写flume2的配置文件" tabindex="-1"><a class="header-anchor" href="#_2-2-3-编写flume2的配置文件"><span>2.2.3 编写flume2的配置文件</span></a></h4><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#步骤一：agent Name</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources</span><span style="color:#98C379;--shiki-dark:#98C379;">=r1</span><span style="color:#98C379;--shiki-dark:#98C379;"> r2</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.channels</span><span style="color:#98C379;--shiki-dark:#98C379;">=c1</span><span style="color:#98C379;--shiki-dark:#98C379;"> c2</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sinks</span><span style="color:#98C379;--shiki-dark:#98C379;">=k1</span><span style="color:#98C379;--shiki-dark:#98C379;"> k2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#步骤二：kafka source1</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources.r1.type</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.apache.flume.source.kafka.KafkaSource</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources.r1.batchSize</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 5000</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources.r1.batchDurationMillis</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 2000</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources.r1.kafka.bootstrap.servers</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> hadoop105:9092,hadoop106:9092,hadoop107:9092</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources.r1.kafka.topics</span><span style="color:#98C379;--shiki-dark:#98C379;">=start</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#步骤三：定义拦截器</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources.r1.interceptors</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> i1</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources.r1.interceptors.i1.type</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> MyInterceptor</span><span style="color:#E06C75;--shiki-dark:#E06C75;">$MyBuilder</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#步骤四：kafka source2</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources.r2.type</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.apache.flume.source.kafka.KafkaSource</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources.r2.batchSize</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 5000</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources.r2.batchDurationMillis</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 2000</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources.r2.kafka.bootstrap.servers</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> hadoop105:9092,hadoop106:9092,hadoop107:9092</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources.r2.kafka.topics</span><span style="color:#98C379;--shiki-dark:#98C379;">=event</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#步骤五：定义拦截器</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources.r2.interceptors</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> i1</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources.r2.interceptors.i1.type</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> MyInterceptor</span><span style="color:#E06C75;--shiki-dark:#E06C75;">$MyBuilder</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#步骤六：定义channel1</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.channels.c1.type</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> file</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.channels.c1.checkpointDir</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> /opt/module/flume/checkpoint/behavior1</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.channels.c1.dataDirs</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> /opt/module/flume/data/behavior1/</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.channels.c1.maxFileSize</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 2146435071</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.channels.c1.capacity</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1000000</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.channels.c1.keep-alive</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 6</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#步骤七：定义sink1</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sinks.k1.type</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> hdfs</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sinks.k1.hdfs.path</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> /origin_data/gmall/log/topic_log/%Y-%m-%d/start</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sinks.k1.hdfs.filePrefix</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> log-</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sinks.k1.hdfs.round</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> false</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sinks.k1.hdfs.rollInterval</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 10</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sinks.k1.hdfs.rollSize</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 134217728</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sinks.k1.hdfs.rollCount</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 0</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sinks.k1.hdfs.fileType</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> CompressedStream</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sinks.k1.hdfs.codeC</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> lzop</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#步骤八：定义channe2</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.channels.c2.type</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> file</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.channels.c2.checkpointDir</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> /opt/module/flume/checkpoint/behavior2</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.channels.c2.dataDirs</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> /opt/module/flume/data/behavior2/</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.channels.c2.maxFileSize</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 2146435071</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.channels.c2.capacity</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1000000</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.channels.c2.keep-alive</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 6</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#步骤九：定义sink2</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sinks.k2.type</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> hdfs</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sinks.k2.hdfs.path</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> /origin_data/gmall/log/topic_log/%Y-%m-%d/event</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sinks.k2.hdfs.filePrefix</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> log-</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sinks.k2.hdfs.round</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> false</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">		  		  </span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sinks.k2.hdfs.rollInterval</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 10</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sinks.k2.hdfs.rollSize</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 134217728</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sinks.k2.hdfs.rollCount</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 0</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">		  		  </span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sinks.k2.hdfs.fileType</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> CompressedStream</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sinks.k2.hdfs.codeC</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> lzop</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#步骤十：连接source 、 channel 、 sink</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources.r1.channels</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> c1</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sources.r2.channels</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> c2</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sinks.k1.channel</span><span style="color:#98C379;--shiki-dark:#98C379;">=</span><span style="color:#98C379;--shiki-dark:#98C379;"> c1</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">a1.sinks.k2.channel</span><span style="color:#98C379;--shiki-dark:#98C379;">=</span><span style="color:#98C379;--shiki-dark:#98C379;"> c2</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-碰到的问题" tabindex="-1"><a class="header-anchor" href="#_2-3-碰到的问题"><span>2.3 碰到的问题</span></a></h3><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 1. 多个file时，不能共用一个checkpoint路径</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 2. 定义sources 、 channels 、 sinks 时，多个source 、channel、sink之间不需要使用逗号</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 3. 连接source和channel时，一个source对应多个channel，c1 和c2之间不需要逗号</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 4. 一天的数据中，有两个文件，一个是start，一个是event</span></span></code></pre></div>`,27)]))}const c=a(e,[["render",p],["__file","项目知识点补充.html.vue"]]),t=JSON.parse('{"path":"/posts/BigData/11_%E6%95%B0%E4%BB%93/%E9%A1%B9%E7%9B%AE%E7%9F%A5%E8%AF%86%E7%82%B9%E8%A1%A5%E5%85%85.html","title":"数仓项目补充","lang":"zh-CN","frontmatter":{"description":"数仓项目补充 一、Kafka精准一次性消费 1.1 编写拦截器 代码 1.2 在flume2配置文件中使用拦截器 1.3 碰到的问题 二、日志数据分多个topic 2.1 需求分析 ![image-20200726101947395](https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/2020072...","head":[["meta",{"property":"og:url","content":"https://mrjackc.github.io/posts/BigData/11_%E6%95%B0%E4%BB%93/%E9%A1%B9%E7%9B%AE%E7%9F%A5%E8%AF%86%E7%82%B9%E8%A1%A5%E5%85%85.html"}],["meta",{"property":"og:site_name","content":"mrjason’s Blog"}],["meta",{"property":"og:title","content":"数仓项目补充"}],["meta",{"property":"og:description","content":"数仓项目补充 一、Kafka精准一次性消费 1.1 编写拦截器 代码 1.2 在flume2配置文件中使用拦截器 1.3 碰到的问题 二、日志数据分多个topic 2.1 需求分析 ![image-20200726101947395](https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/2020072..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200726101947.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-28T01:58:08.000Z"}],["meta",{"property":"article:author","content":"MrJason"}],["meta",{"property":"article:modified_time","content":"2024-10-28T01:58:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数仓项目补充\\",\\"image\\":[\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200726101947.png\\"],\\"dateModified\\":\\"2024-10-28T01:58:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MrJason\\",\\"url\\":\\"https://mrjackc.github.io\\"}]}"]]},"headers":[{"level":2,"title":"一、Kafka精准一次性消费","slug":"一、kafka精准一次性消费","link":"#一、kafka精准一次性消费","children":[{"level":3,"title":"1.1  编写拦截器","slug":"_1-1-编写拦截器","link":"#_1-1-编写拦截器","children":[]},{"level":3,"title":"1.2 在flume2配置文件中使用拦截器","slug":"_1-2-在flume2配置文件中使用拦截器","link":"#_1-2-在flume2配置文件中使用拦截器","children":[]},{"level":3,"title":"1.3 碰到的问题","slug":"_1-3-碰到的问题","link":"#_1-3-碰到的问题","children":[]}]},{"level":2,"title":"二、日志数据分多个topic","slug":"二、日志数据分多个topic","link":"#二、日志数据分多个topic","children":[{"level":3,"title":"2.1  需求分析","slug":"_2-1-需求分析","link":"#_2-1-需求分析","children":[]},{"level":3,"title":"2.2 实现","slug":"_2-2-实现","link":"#_2-2-实现","children":[]},{"level":3,"title":"2.3 碰到的问题","slug":"_2-3-碰到的问题","link":"#_2-3-碰到的问题","children":[]}]}],"git":{"createdTime":1730080688000,"updatedTime":1730080688000,"contributors":[{"name":"MrJason","email":"845886914@qq.com","commits":1}]},"readingTime":{"minutes":6.85,"words":2056},"filePathRelative":"posts/BigData/11_数仓/项目知识点补充.md","localizedDate":"2024年10月28日","excerpt":"\\n<hr>\\n<h2>一、Kafka精准一次性消费</h2>\\n<div class=\\"language-sql\\" data-ext=\\"sql\\" data-title=\\"sql\\"><pre class=\\"shiki shiki-themes one-dark-pro one-dark-pro vp-code\\" style=\\"background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">-- 1. 原理解析</span></span>\\n<span class=\\"line\\"><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">      在离线的数仓中，flume1 -</span><span style=\\"color:#56B6C2;--shiki-dark:#56B6C2\\">&gt;</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\"> kafka -</span><span style=\\"color:#56B6C2;--shiki-dark:#56B6C2\\">&gt;</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\"> flume2时，kafka会给数据加时间戳。而且这是时间戳默认为系统时间，数据写到hdfs时，</span></span>\\n<span class=\\"line\\"><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">      按照headers中的timestamp时间戳，进入到某一个文件夹中。</span></span>\\n<span class=\\"line\\"><span style=\\"color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">-- 2. 问题描述：</span></span>\\n<span class=\\"line\\"><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">      在实际开发中，当前一天23:</span><span style=\\"color:#D19A66;--shiki-dark:#D19A66\\">59</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">:58秒产生的数据，由于网络延迟的原因，数据采集到达kafka时，到了第二天，那么此时数据通过flume</span></span>\\n<span class=\\"line\\"><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">      采集到hdfs后，存储在第二天的文件夹中。</span></span>\\n<span class=\\"line\\"><span style=\\"color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">-- 3. 问题的验证：</span></span>\\n<span class=\\"line\\"><span style=\\"color:#D19A66;--shiki-dark:#D19A66\\">      1</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">. 修改数据生成器jar包的properties文件，将时间修改为2020-</span><span style=\\"color:#D19A66;--shiki-dark:#D19A66\\">08</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">-</span><span style=\\"color:#D19A66;--shiki-dark:#D19A66\\">21</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">， 不修改虚拟机的系统时间</span></span>\\n<span class=\\"line\\"><span style=\\"color:#D19A66;--shiki-dark:#D19A66\\">      2</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">. 开启采集通道：zk、hadoop集群、kafka、flume2、flume2</span></span>\\n<span class=\\"line\\"><span style=\\"color:#D19A66;--shiki-dark:#D19A66\\">      3</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">. 去到hdfs文件系统中查看数据，发生生成的文件为今天：</span><span style=\\"color:#D19A66;--shiki-dark:#D19A66\\">2020</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">-</span><span style=\\"color:#D19A66;--shiki-dark:#D19A66\\">07</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">-</span><span style=\\"color:#D19A66;--shiki-dark:#D19A66\\">26</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">，而不是数据生成的时间。</span></span>\\n<span class=\\"line\\"><span style=\\"color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">--4 . 解决方法：</span></span>\\n<span class=\\"line\\"><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">      在flume2中，自定义拦截器，将数据的时间戳添加到event的header中的timestamp中，这样数据就会根据数据的时间戳去到指定的文件夹中，实现精准一次性消费。</span></span></code></pre>\\n</div>","autoDesc":true}');export{c as comp,t as data};
