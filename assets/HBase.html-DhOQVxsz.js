import{_ as a,c as n,a as i,o as l}from"./app-W9QyTiMU.js";const e={};function r(p,s){return l(),n("div",null,s[0]||(s[0]=[i(`<h1 id="hbase" tabindex="-1"><a class="header-anchor" href="#hbase"><span>HBase</span></a></h1><hr><h2 id="一、hbase简介" tabindex="-1"><a class="header-anchor" href="#一、hbase简介"><span>一、HBase简介</span></a></h2><h3 id="_1-1-定义" tabindex="-1"><a class="header-anchor" href="#_1-1-定义"><span>1.1 定义</span></a></h3><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 1. HBase是什么？</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 分布式</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 可扩展</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 支持海量数据的存储</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. NoSQL的数据库。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 2. 说明：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   a、NoSQL: </span><span style="color:#C678DD;--shiki-dark:#C678DD;">Not</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> only </span><span style="color:#C678DD;--shiki-dark:#C678DD;">SQL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">，不仅仅是一个数据库</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   b、是基于谷歌的三篇论文之bigtable生成的。</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   c、HBase：理解为Hadoop base</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 3. 大数据框架：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   a、数据的存储：hdfs / hive / hbase</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   b、数据的传输：flume / sqoop</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   c、数据的计算：tez / mr / spark / flink</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 4. 和传统数据库的差别：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   传统数据库的结构：数据库 </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--&gt; 表 --&gt; 行和列</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   HBase的结构 ： </span><span style="color:#C678DD;--shiki-dark:#C678DD;">namespace</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(命名空间) </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--&gt; table --&gt; 列族 --&gt; 行和列 --&gt; orgion --&gt; store</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   HBase可以理解为多维的map，嵌套的map结构。</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-hbase数据模型" tabindex="-1"><a class="header-anchor" href="#_1-2-hbase数据模型"><span>1.2 HBase数据模型</span></a></h3><h4 id="_1-2-1-hbase逻辑结构" tabindex="-1"><a class="header-anchor" href="#_1-2-1-hbase逻辑结构"><span>1.2.1 HBase逻辑结构</span></a></h4><p>![image-20200623181231019](<a href="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic" target="_blank" rel="noopener noreferrer">https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic</a> GO/20200623181231.png)</p><h4 id="_1-2-2-hbase的物理结构" tabindex="-1"><a class="header-anchor" href="#_1-2-2-hbase的物理结构"><span>1.2.2 HBase的物理结构</span></a></h4><p>![image-20200810140718245](<a href="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic" target="_blank" rel="noopener noreferrer">https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic</a> GO/20200810140725.png)</p><h4 id="_1-2-3-数据模型" tabindex="-1"><a class="header-anchor" href="#_1-2-3-数据模型"><span>1.2.3 数据模型</span></a></h4><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--1. HBase表的几个概念</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;namespace&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：命名空间，类似mysql的数据库，在HBase中默认有两个namespace：</span><span style="color:#C678DD;--shiki-dark:#C678DD;">default</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/HBase</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;列族&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">     ：</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;column&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   ：列，在使用时，格式为：</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;列族名：列名&#39;</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;row&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      ：行，在HBase中，行是逻辑概念上的，在物理内存中，同一行的数据很可能不在一起的。</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">                    &quot;那么我们通过什么参数来判断两个数据是不是属于同一行呢&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">？</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                    就是下面的rowkey，rowkey相同，就表示是同一行的数据。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;rowKey&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   ：行的标签，唯一定位行的标识             </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    6</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;region&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   ：区域，表示多行数据，在HBase中，一个table默认是一个region</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    7</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;store&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    ：在同一个region中，列族的个数 </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> store的个数,store有两种：memstore/storefile</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    8</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;timeStemp&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：时间戳，表示数据执行的时间，每执行一次操作就会生成一个版本。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    9</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;table&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    ：表，可以理解为多维的map，在创建表的时候，只需要声明表名和列族就可以.</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">                    &quot;非常适用于非结构化数据，不需要指定数据的格式&quot;</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    10</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;cell&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    : 单元格，在表中的同一个位置</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;某一行的某一列位置&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">，会有多个cell，相同的位置每修改一次，就会生成一个cell。</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                    由{rowkey,列族：列名，</span><span style="color:#C678DD;--shiki-dark:#C678DD;">time</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> stamp}，进行唯一标识。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 2. HBase集群的几个概念</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;master&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：可以理解为hadoop的NM，专门负责管理小弟</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;regionServer&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">，实现类为：Hmaster</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;regionServer&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：可以理解为hadoop的DM，专门负责管理region中的数据，还有两个组件：WAL</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;可理解为NM的内存区域的元数</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">    				   据&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">和balckcache，至于具体是干嘛的，后面写操作的时候讲，实现类为：HRegionServer</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;meta&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  : 元数据，zookeeper有它的地址，某一个regionServer保存着这个数据。主要有table和region所在的位置。 </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;zookeeper&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：① master的高可用 ② RegionServer的监控 ③ Region的元数据管理。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 3. 说明：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   在底层存储时，数据按照rowkey的字典顺序从小到大进行排列。</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>![image-20200623184151239](<a href="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic" target="_blank" rel="noopener noreferrer">https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic</a> GO/20200623184151.png)</p><h2 id="二、-hbase的安装" tabindex="-1"><a class="header-anchor" href="#二、-hbase的安装"><span>二、 HBase的安装</span></a></h2><h3 id="_2-1-部署zookeeper和hadoop" tabindex="-1"><a class="header-anchor" href="#_2-1-部署zookeeper和hadoop"><span>2.1 部署zookeeper和Hadoop</span></a></h3><h3 id="_2-2-解压hbase到指定的位置" tabindex="-1"><a class="header-anchor" href="#_2-2-解压hbase到指定的位置"><span>2.2 解压HBase到指定的位置</span></a></h3><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[atguigu@hadoop105 software]$ tar -zxvf hbase-2.0.5-bin.tar.gz -C /opt/module</span></span></code></pre></div><h3 id="_2-3-配置环境变量" tabindex="-1"><a class="header-anchor" href="#_2-3-配置环境变量"><span>2.3 配置环境变量</span></a></h3><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[atguigu@hadoop105 ~]$ sudo vim /etc/profile.d/my_env.sh</span></span></code></pre></div><ul><li>添加</li></ul><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#HBASE_HOME</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">export</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> HBASE_HOME</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">opt</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">module</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">hbase-2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E06C75;--shiki-dark:#E06C75;">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E06C75;--shiki-dark:#E06C75;">5</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">export</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> PATH</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E06C75;--shiki-dark:#E06C75;">$PATH</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span><span style="color:#E06C75;--shiki-dark:#E06C75;">$HBASE_HOME</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bin</span></span></code></pre></div><h3 id="_2-4-配置hbase的文件" tabindex="-1"><a class="header-anchor" href="#_2-4-配置hbase的文件"><span>2.4 配置HBase的文件</span></a></h3><ul><li>修改HBase对应的配置文件</li></ul><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#export HBASE_MANAGES_ZK=true </span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">修改至：</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">export</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> HBASE_MANAGES_ZK</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E06C75;--shiki-dark:#E06C75;">false</span></span></code></pre></div><ul><li>hbase-site.xml增加如下配置内容：</li></ul><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">configuration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;hbase.rootdir&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;hdfs://hadoop105:8020/hbase&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;hbase.cluster.distributed&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;true&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;hbase.zookeeper.quorum&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;hadoop105,hadoop106,hadoop107&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;hbase.unsafe.stream.capability.enforce&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;false&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;hbase.wal.provider&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;filesystem&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">configuration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>配置regionservers</li></ul><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">hadoop105</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">hadoop106</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">hadoop107</span></span></code></pre></div><h3 id="_2-5-分发hbase" tabindex="-1"><a class="header-anchor" href="#_2-5-分发hbase"><span>2.5 分发HBase</span></a></h3><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[atguigu@hadoop105 module]$ xsync hbase-2.0.5</span></span></code></pre></div><h3 id="_2-6-启动hbase" tabindex="-1"><a class="header-anchor" href="#_2-6-启动hbase"><span>2.6 启动HBase</span></a></h3><p>先启动hadoop集群，再启动zk，然后启动HBase</p><ul><li>单点启动</li></ul><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">hbase-daemon.sh</span><span style="color:#98C379;--shiki-dark:#98C379;"> start</span><span style="color:#98C379;--shiki-dark:#98C379;"> master</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">hbase-daemon.sh</span><span style="color:#98C379;--shiki-dark:#98C379;"> start</span><span style="color:#98C379;--shiki-dark:#98C379;"> regionserver</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">-daemon是指后台启动。</span></span></code></pre></div><ul><li>群起</li></ul><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[atguigu@hadoop105 hbase-2.0.5]$ start-hbase.sh</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--</span><span style="color:#98C379;--shiki-dark:#98C379;"> 说明：</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">   a、会启动当前节点的master</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">   b、在所有节点启动regionServer</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">   c、Hmaster和regionServer都是一个进程。</span></span></code></pre></div><h3 id="_2-7-查看hbase的页面" tabindex="-1"><a class="header-anchor" href="#_2-7-查看hbase的页面"><span>2.7 查看HBase的页面</span></a></h3><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>网址：hadoop105:16010</span></span></code></pre></div><h3 id="_2-8-master的高可用-可选" tabindex="-1"><a class="header-anchor" href="#_2-8-master的高可用-可选"><span>2.8 master的高可用（可选）</span></a></h3><ul><li>关闭HBase的集群</li></ul><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">stop-hbase.sh</span></span></code></pre></div><ul><li>在conf目录下创建backup-masters文件</li></ul><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">touch</span><span style="color:#98C379;--shiki-dark:#98C379;"> conf/backup-masters</span></span></code></pre></div><ul><li>在backup-masters文件中配置高可用HMaster节点</li></ul><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">echo</span><span style="color:#98C379;--shiki-dark:#98C379;"> hadoop106</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> &gt; </span><span style="color:#98C379;--shiki-dark:#98C379;">conf/backup-masters</span></span></code></pre></div><ul><li>将整个conf目录scp到其他节点</li></ul><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">xsync</span><span style="color:#98C379;--shiki-dark:#98C379;"> conf</span></span></code></pre></div><h2 id="三、-hbase的操作" tabindex="-1"><a class="header-anchor" href="#三、-hbase的操作"><span>三、 HBase的操作</span></a></h2><h3 id="_3-1-基本操作" tabindex="-1"><a class="header-anchor" href="#_3-1-基本操作"><span>3.1 基本操作</span></a></h3><ol><li>进入hbase的客户端</li></ol><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[atguigu@hadoop105 conf]$ hbase shell</span></span></code></pre></div><ol start="2"><li>查看所有namespace中所有的表</li></ol><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">hbase(main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">):001:0&gt; list</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">TABLE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   </span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">test</span><span style="color:#98C379;--shiki-dark:#98C379;">:user</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  #test是一个namespace</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">user</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">       #没有写命名空间的，则默认是default</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#98C379;--shiki-dark:#98C379;"> row</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">s</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">Took</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 0.4410</span><span style="color:#98C379;--shiki-dark:#98C379;"> seconds</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt; [</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;test:user&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;user&quot;]</span></span></code></pre></div><h3 id="_3-2-表的操作" tabindex="-1"><a class="header-anchor" href="#_3-2-表的操作"><span>3.2 表的操作</span></a></h3><ol><li>创建表</li></ol><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--1.语法:</span><span style="color:#98C379;--shiki-dark:#98C379;"> create</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;namespace:tablename&#39;,&#39;列族1&#39;，&#39;列族2&#39;，...</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">    如果是namespace是default，则可以省略</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--2.实例1：hbase(main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">):002:0&gt; create </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;test&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;info&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;info1&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">    实例2：hbase(main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">):004:0&gt; create </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;test:lianzp&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;info&#39;</span></span></code></pre></div><ol start="2"><li>添加数据</li></ol><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--</span><span style="color:#98C379;--shiki-dark:#98C379;"> 1.</span><span style="color:#98C379;--shiki-dark:#98C379;"> 语法：</span><span style="color:#98C379;--shiki-dark:#98C379;"> put</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;tablename&#39;,&#39;rowkey&#39;,&#39;列族1:列名&#39;，&#39;value&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      说明：shell操作每次只能添加一个值</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--</span><span style="color:#98C379;--shiki-dark:#98C379;"> 2.</span><span style="color:#98C379;--shiki-dark:#98C379;"> 实例：</span><span style="color:#98C379;--shiki-dark:#98C379;"> hbase</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">:008:</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">0&gt; </span><span style="color:#98C379;--shiki-dark:#98C379;">put</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;user&#39;,&#39;1001&#39;,&#39;info1:age&#39;,20</span></span></code></pre></div><ol start="3"><li>全局扫描数据</li></ol><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--</span><span style="color:#98C379;--shiki-dark:#98C379;"> 1.</span><span style="color:#98C379;--shiki-dark:#98C379;"> 语法：</span><span style="color:#98C379;--shiki-dark:#98C379;"> scan</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;tablename&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--</span><span style="color:#98C379;--shiki-dark:#98C379;"> 2.</span><span style="color:#98C379;--shiki-dark:#98C379;"> 实例：</span><span style="color:#98C379;--shiki-dark:#98C379;"> hbase</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">:009:</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">0&gt; </span><span style="color:#98C379;--shiki-dark:#98C379;">scan</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;user&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--</span><span style="color:#98C379;--shiki-dark:#98C379;"> 3.</span><span style="color:#98C379;--shiki-dark:#98C379;"> 打印结果：#如下是显示了4行数据，实际上数据在表中属于3行</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">     ROW</span><span style="color:#98C379;--shiki-dark:#98C379;">                          COLUMN+CELL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                                                   </span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">     1000</span><span style="color:#98C379;--shiki-dark:#98C379;">                        column=info2:sex,</span><span style="color:#98C379;--shiki-dark:#98C379;"> timestamp=1592894945017,</span><span style="color:#98C379;--shiki-dark:#98C379;"> value=woman</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                            </span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">     1001</span><span style="color:#98C379;--shiki-dark:#98C379;">                        column=info1:age,</span><span style="color:#98C379;--shiki-dark:#98C379;"> timestamp=1592911858092,</span><span style="color:#98C379;--shiki-dark:#98C379;"> value=</span><span style="color:#D19A66;--shiki-dark:#D19A66;">20</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                               </span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">     1001</span><span style="color:#98C379;--shiki-dark:#98C379;">                        column=info1:name,</span><span style="color:#98C379;--shiki-dark:#98C379;"> timestamp=1592894905511,</span><span style="color:#98C379;--shiki-dark:#98C379;"> value=lianzp</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                          </span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">     1003</span><span style="color:#98C379;--shiki-dark:#98C379;">                        column=info1:age,</span><span style="color:#98C379;--shiki-dark:#98C379;"> timestamp=1592894925226,</span><span style="color:#98C379;--shiki-dark:#98C379;"> value=</span><span style="color:#D19A66;--shiki-dark:#D19A66;">50</span></span></code></pre></div><ol start="4"><li>扫描指定行的数据</li></ol><div class="language-shell line-numbers-mode" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--</span><span style="color:#98C379;--shiki-dark:#98C379;"> 1.</span><span style="color:#98C379;--shiki-dark:#98C379;"> 语法：scan</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;tablename&#39;,{STARTROW</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=&gt;</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;rowkey&#39;,STOPROW</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=&gt;</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;rowkey&#39;}</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--</span><span style="color:#98C379;--shiki-dark:#98C379;"> 2.</span><span style="color:#98C379;--shiki-dark:#98C379;"> 说明：</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">           a、区间为左闭右开</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">           b、如果STARTROW没有写，则表示开始的rowkey为负无穷，即没有下限，只有上限</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">              如果STOPROW没有写，则表示结束的rowkey为正无穷，即没有上限，只有下限</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">           </span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--</span><span style="color:#98C379;--shiki-dark:#98C379;"> 3.</span><span style="color:#98C379;--shiki-dark:#98C379;"> 实例：hbase</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">:012:</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">0&gt; </span><span style="color:#98C379;--shiki-dark:#98C379;">scan</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;user&#39;,{STARTROW</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=&gt;</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;1000&#39;,STOPROW</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=&gt;</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;1003&#39;}</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">            hbase(main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">):014:0&gt; scan </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;user&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,{</span><span style="color:#E06C75;--shiki-dark:#E06C75;">STARTROW</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;1000&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">            hbase(main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">):015:0&gt; scan </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;user&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,{</span><span style="color:#E06C75;--shiki-dark:#E06C75;">STOPROW</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;1001&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--</span><span style="color:#98C379;--shiki-dark:#98C379;"> 4.</span><span style="color:#98C379;--shiki-dark:#98C379;"> 结果：</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">         ROW</span><span style="color:#98C379;--shiki-dark:#98C379;">                          COLUMN+CELL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">         </span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">         1000</span><span style="color:#98C379;--shiki-dark:#98C379;">                        column=info2:sex,</span><span style="color:#98C379;--shiki-dark:#98C379;"> timestamp=1592894945017,</span><span style="color:#98C379;--shiki-dark:#98C379;"> value=woman</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">         1001</span><span style="color:#98C379;--shiki-dark:#98C379;">                        column=info1:age,</span><span style="color:#98C379;--shiki-dark:#98C379;"> timestamp=1592911858092,</span><span style="color:#98C379;--shiki-dark:#98C379;"> value=</span><span style="color:#D19A66;--shiki-dark:#D19A66;">20</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">         </span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">         1001</span><span style="color:#98C379;--shiki-dark:#98C379;">                        column=info1:name,</span><span style="color:#98C379;--shiki-dark:#98C379;"> timestamp=1592894905511,</span><span style="color:#98C379;--shiki-dark:#98C379;"> value=lianzp</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   </span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        2</span><span style="color:#98C379;--shiki-dark:#98C379;"> row</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">s</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>获取某一行的数据</li></ol><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--</span><span style="color:#98C379;--shiki-dark:#98C379;"> 1.</span><span style="color:#98C379;--shiki-dark:#98C379;"> 语法：</span><span style="color:#98C379;--shiki-dark:#98C379;"> get</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;tablename&#39;,&#39;rowkey&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--</span><span style="color:#98C379;--shiki-dark:#98C379;"> 2.</span><span style="color:#98C379;--shiki-dark:#98C379;"> 实例：</span><span style="color:#98C379;--shiki-dark:#98C379;"> get</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;user&#39;,&#39;1001&#39;</span></span></code></pre></div><ol start="6"><li>获取某一行指定列的数据</li></ol><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--</span><span style="color:#98C379;--shiki-dark:#98C379;"> 1.</span><span style="color:#98C379;--shiki-dark:#98C379;"> 语法：</span><span style="color:#98C379;--shiki-dark:#98C379;"> get</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;tablename&#39;,&#39;rowkey&#39;，&#39;列族1:列名&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--</span><span style="color:#98C379;--shiki-dark:#98C379;"> 2.</span><span style="color:#98C379;--shiki-dark:#98C379;"> 实例：</span><span style="color:#98C379;--shiki-dark:#98C379;"> get</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;user&#39;,&#39;1001&#39;,&#39;info1:age&#39;</span></span></code></pre></div><ol start="7"><li>获取行的数量</li></ol><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--</span><span style="color:#98C379;--shiki-dark:#98C379;"> 1.</span><span style="color:#98C379;--shiki-dark:#98C379;"> 语法：</span><span style="color:#98C379;--shiki-dark:#98C379;"> count</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;tablename&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--</span><span style="color:#98C379;--shiki-dark:#98C379;"> 2.</span><span style="color:#98C379;--shiki-dark:#98C379;"> 实例：</span><span style="color:#98C379;--shiki-dark:#98C379;"> hbase</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">:001:</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">0&gt; </span><span style="color:#98C379;--shiki-dark:#98C379;">count</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;user&#39;</span></span></code></pre></div><ol start="8"><li>查询表的结构</li></ol><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--</span><span style="color:#98C379;--shiki-dark:#98C379;"> 1.</span><span style="color:#98C379;--shiki-dark:#98C379;"> 语法：</span><span style="color:#98C379;--shiki-dark:#98C379;"> describe</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;tablename&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--</span><span style="color:#98C379;--shiki-dark:#98C379;"> 2.</span><span style="color:#98C379;--shiki-dark:#98C379;"> 实例：</span><span style="color:#98C379;--shiki-dark:#98C379;"> hbase</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">:002:</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">0&gt; </span><span style="color:#98C379;--shiki-dark:#98C379;">describe</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;user&#39;</span></span></code></pre></div><p>![image-20200623195415990](<a href="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic" target="_blank" rel="noopener noreferrer">https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic</a> GO/20200623195416.png)</p><ol start="9"><li>删除某一行某一列的值</li></ol><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--</span><span style="color:#98C379;--shiki-dark:#98C379;"> 1.</span><span style="color:#98C379;--shiki-dark:#98C379;"> 语法：</span><span style="color:#98C379;--shiki-dark:#98C379;"> delete</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;tablename&#39;,&#39;rowkey&#39;，&#39;列族1:列名&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--</span><span style="color:#98C379;--shiki-dark:#98C379;"> 2.</span><span style="color:#98C379;--shiki-dark:#98C379;"> 实例：</span><span style="color:#98C379;--shiki-dark:#98C379;"> hbase</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">:002:</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">0&gt; </span><span style="color:#98C379;--shiki-dark:#98C379;">hbase</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">:005:</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">0&gt; </span><span style="color:#98C379;--shiki-dark:#98C379;">delete</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;user&#39;,&#39;1001&#39;,&#39;info1:age&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--</span><span style="color:#98C379;--shiki-dark:#98C379;"> 3.</span><span style="color:#98C379;--shiki-dark:#98C379;"> 说明：</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      a、一个位置默认保留一个版本，如果一个位置被多次修改时，删除当前的数据，再进行查询时，在未flush的情况下，上一个版本的数据</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">         可以被查询出来。</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      b、此处的删除并不是真正的删除，只是给这个删除的数据打上了一个标记，只有当落盘flush的时候，才会真正的被清理掉。</span></span></code></pre></div><p>10 . 删除某一行的全部数据</p><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--</span><span style="color:#98C379;--shiki-dark:#98C379;"> 1.</span><span style="color:#98C379;--shiki-dark:#98C379;"> 语法：</span><span style="color:#98C379;--shiki-dark:#98C379;"> deleteall</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;tablename&#39;,&#39;rowkey&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--</span><span style="color:#98C379;--shiki-dark:#98C379;"> 2.</span><span style="color:#98C379;--shiki-dark:#98C379;"> 实例：</span><span style="color:#98C379;--shiki-dark:#98C379;"> hbase</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">:020:</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">0&gt; </span><span style="color:#98C379;--shiki-dark:#98C379;">deleteall</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;user&#39;,&#39;1001&#39;</span></span></code></pre></div><ol start="11"><li>清除表数据</li></ol><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--</span><span style="color:#98C379;--shiki-dark:#98C379;"> 1.</span><span style="color:#98C379;--shiki-dark:#98C379;"> 语法：</span><span style="color:#98C379;--shiki-dark:#98C379;"> truncate</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;tablename&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--</span><span style="color:#98C379;--shiki-dark:#98C379;"> 2.</span><span style="color:#98C379;--shiki-dark:#98C379;"> 实例：hbase</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">:020:</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">0&gt; </span><span style="color:#98C379;--shiki-dark:#98C379;">truncate</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;user&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--</span><span style="color:#98C379;--shiki-dark:#98C379;"> 3.</span><span style="color:#98C379;--shiki-dark:#98C379;"> 说明：</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      a、在执行的过程中，首先会自动disable</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;user&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      b、然后再清空表数据,truncate</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;user&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> --</span><span style="color:#98C379;--shiki-dark:#98C379;"> 4.</span><span style="color:#98C379;--shiki-dark:#98C379;"> 打印结果</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        Truncating</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;user&#39;</span><span style="color:#98C379;--shiki-dark:#98C379;"> table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (it </span><span style="color:#98C379;--shiki-dark:#98C379;">may</span><span style="color:#98C379;--shiki-dark:#98C379;"> take</span><span style="color:#98C379;--shiki-dark:#98C379;"> a</span><span style="color:#98C379;--shiki-dark:#98C379;"> while</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        Disabling</span><span style="color:#98C379;--shiki-dark:#98C379;"> table...</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        Truncating</span><span style="color:#98C379;--shiki-dark:#98C379;"> table...</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        Took</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1.5164</span><span style="color:#98C379;--shiki-dark:#98C379;"> seconds</span></span></code></pre></div><ol start="12"><li>删除表</li></ol><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--</span><span style="color:#98C379;--shiki-dark:#98C379;"> 1.</span><span style="color:#98C379;--shiki-dark:#98C379;"> 语法：</span><span style="color:#98C379;--shiki-dark:#98C379;"> drop</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;tablename&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--</span><span style="color:#98C379;--shiki-dark:#98C379;"> 2.</span><span style="color:#98C379;--shiki-dark:#98C379;"> 实例：</span><span style="color:#98C379;--shiki-dark:#98C379;"> hbase</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">:020:</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">0&gt; </span><span style="color:#98C379;--shiki-dark:#98C379;">drop</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;user&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--</span><span style="color:#98C379;--shiki-dark:#98C379;"> 3.</span><span style="color:#98C379;--shiki-dark:#98C379;"> 说明：</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">     如果直接drop表，会报错：ERROR:</span><span style="color:#98C379;--shiki-dark:#98C379;"> Table</span><span style="color:#98C379;--shiki-dark:#98C379;"> student</span><span style="color:#98C379;--shiki-dark:#98C379;"> is</span><span style="color:#98C379;--shiki-dark:#98C379;"> enabled.</span><span style="color:#98C379;--shiki-dark:#98C379;"> Disable</span><span style="color:#98C379;--shiki-dark:#98C379;"> it</span><span style="color:#98C379;--shiki-dark:#98C379;"> first</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      a、在删除表时，需要手动将表设置为：disable</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;tablename&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      b、然后再删除,drop</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;tablename&#39;</span></span></code></pre></div><ol start="13"><li>多版本</li></ol><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--</span><span style="color:#98C379;--shiki-dark:#98C379;"> 1.设置多版本</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">   alter</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;student&#39;</span><span style="color:#98C379;--shiki-dark:#98C379;"> ,{NAME</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> =&gt; </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;info&#39;,VERSIONS</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> =&gt; </span><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#98C379;--shiki-dark:#98C379;">}</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--</span><span style="color:#98C379;--shiki-dark:#98C379;"> 2.查询多版本</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">   get</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;student&#39;,&#39;1001&#39;,{COLUMN</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> =&gt; </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;info:age&#39;</span><span style="color:#98C379;--shiki-dark:#98C379;"> ,VERSIONS</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> =&gt; </span><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#98C379;--shiki-dark:#98C379;"> }</span></span></code></pre></div><h3 id="_3-3-namespace操作" tabindex="-1"><a class="header-anchor" href="#_3-3-namespace操作"><span>3.3 namespace操作</span></a></h3><ol><li>创建namespace</li></ol><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">hbase(main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">):037:0&gt; create_namespace </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;lianzp&#39;</span></span></code></pre></div><ol start="2"><li>查询namespace</li></ol><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">hbase(main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">):039:0&gt; list_namespace</span></span></code></pre></div><ol start="3"><li>创建自定的namespace的表</li></ol><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">hbase(main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">):042:0&gt; create </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;lianzp:test&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;info&#39;</span></span></code></pre></div><ol start="4"><li>查询指定namespace的所有表</li></ol><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">hbase(main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">):044:0&gt; list_namespace_tables </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;lianzp&#39;</span></span></code></pre></div><ol start="5"><li>删除namespace</li></ol><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">hbase(main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">):049:0&gt; drop_namespace </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;lianzp&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--</span><span style="color:#98C379;--shiki-dark:#98C379;"> 说明：在删除namespace之前，需要先删除namespace的表，删除表时，需要先将表置于不可用的状态。</span></span></code></pre></div><h2 id="四、hbase进阶" tabindex="-1"><a class="header-anchor" href="#四、hbase进阶"><span>四、HBase进阶</span></a></h2><h3 id="_4-1-region-server的架构" tabindex="-1"><a class="header-anchor" href="#_4-1-region-server的架构"><span>4.1 Region Server的架构</span></a></h3><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--1. 说明：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  a、1个Region </span><span style="color:#C678DD;--shiki-dark:#C678DD;">Server</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  1个WAL + 1个 </span><span style="color:#C678DD;--shiki-dark:#C678DD;">Block</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> Cache + N个regoin </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  b、1个Region </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  1个MemStore + N个StoreFile </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 2. Region Server</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  a、是一个进程，是HBase分布式的一个节点。</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 3. WAL</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  a、预防日志，存储在hdfs上，向RegionServer发送请求时，首先会经过WAL，将具体的操作保存下来，然后再进行具体的操作；</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  b、作用：当regionServer出现故障时，因为WAL保留了具体的操作，所以数据不会丢失。</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 4. Block Cache</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   a、读缓存，每次查询出的数据会缓存在BlockCache中，方便下次查询</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 5. Region</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   a、是一张表中的多行数据，默认是一个Region。</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 6. Store</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   a、对应一张表中的列族的个数。</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   b、有两种，分别是MemStore 和StoreFile</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 7. memstore</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   a、数据是先存储在MemStore中，排好序后，等到达刷写时机才会刷写到HFile，每次刷写都会形成一个新的HFile</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 8. StoreFile</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   a、StoreFile以Hfile的形式存储在HDFS上</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   b、数据在每个StoreFile中都是有序的</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>![image-20200623202240623](<a href="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic" target="_blank" rel="noopener noreferrer">https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic</a> GO/20200623202240.png)</p><h3 id="_4-2-写流程" tabindex="-1"><a class="header-anchor" href="#_4-2-写流程"><span>4.2 写流程</span></a></h3><p>![image-20200623204209982](<a href="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic" target="_blank" rel="noopener noreferrer">https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic</a> GO/20200623204210.png)</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--1. 具体流程：</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. Client先访问zookeeper，请求hbase:meta元数据位于哪个Region Server中。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. zookeeper返回hbase:meta所在的Region Server地址</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. client访问对应的Region </span><span style="color:#C678DD;--shiki-dark:#C678DD;">Server</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">，请求hbase:meta元数据信息</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. Region Server返回meta元数据信息</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. client根据写请求的namespace:</span><span style="color:#C678DD;--shiki-dark:#C678DD;">table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/rowkey，查询出目标数据位于哪个Region Server中的哪个Region中。</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">       并将该table的region信息以及meta表的位置信息缓存在客户端的meta cache，方便下次访问。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    6</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 与目标Region Server进行通讯；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    7</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 将数据顺序写入（追加）到WAL；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    8</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. WAL将数据写入对应的MemStore，数据会在MemStore进行排序；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    9</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 完成写数据操作以后，向客户端发送ack；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    10</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 等达到MemStore的刷写时机后，将数据刷写到HFile。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 2. hbase:meta包含哪些信息呢？</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   命令：scan ‘hbase:meta’</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   a、rowkey： test,,</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1592911245995</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.c42a3b247c7ed78f071</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">               1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) test：</span><span style="color:#C678DD;--shiki-dark:#C678DD;">namespace</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,命名空间</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">               2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) ,,：startkey endkey，起止的rowkey</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">               3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#D19A66;--shiki-dark:#D19A66;">1592911245995</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：</span><span style="color:#C678DD;--shiki-dark:#C678DD;">time</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> stamp ，时间戳</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">               4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) .c42a3b247c7ed78f071:前面3个参数的MD5值。</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   b、column</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">info:regioninfo ： region的信息，</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">                               value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{ENCODED </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> c42a3b247c7ed78f071f60721bad78ad, </span><span style="color:#C678DD;--shiki-dark:#C678DD;">NAME</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =&gt;</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;test,,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;"> f60721bad78ad.1592911245995.c42a3b247c7ed78f071f60721bad78ad.&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, STARTKEY </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=&gt;</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, ENDKEY </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=&gt;</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   c、column</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">info:seqnumDuringOpen ：序列号，</span><span style="color:#C678DD;--shiki-dark:#C678DD;">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02 </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   d、column</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">info:</span><span style="color:#C678DD;--shiki-dark:#C678DD;">server</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ： 该region所在的server，</span><span style="color:#C678DD;--shiki-dark:#C678DD;">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">hadoop106:</span><span style="color:#D19A66;--shiki-dark:#D19A66;">16020</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   e、column</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">info:serverstartcode ： 该region所在的server创建的时间戳，</span><span style="color:#C678DD;--shiki-dark:#C678DD;">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1592887276902</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   f、column</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">info:sn    ： </span><span style="color:#C678DD;--shiki-dark:#C678DD;">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">hadoop106,</span><span style="color:#D19A66;--shiki-dark:#D19A66;">16020</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1592887276902</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   g、column</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">info:</span><span style="color:#C678DD;--shiki-dark:#C678DD;">state</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ：该region的状态，</span><span style="color:#C678DD;--shiki-dark:#C678DD;">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#C678DD;--shiki-dark:#C678DD;">OPEN</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>![image-20200623205526788](<a href="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic" target="_blank" rel="noopener noreferrer">https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic</a> GO/20200623205526.png)</p><h3 id="_4-3-memstore-flush时机" tabindex="-1"><a class="header-anchor" href="#_4-3-memstore-flush时机"><span>4.3 MemStore flush时机</span></a></h3><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- MemStore刷写时机：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  	如下一共有4种刷写实时机，任何一个时机点到达后均会进行刷写，刷写分为：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 	a、刷写：memStore向storeFile中写数据。</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 	b、阻止写：阻止客户端往region中写数据。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 时机1:region级别，刷写方式：当前region中所有memstore都刷写</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    a、</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;刷写&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：当某个memstroe的大小达到了</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;hbase.hregion.memstore.flush.size&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">（默认值128M），</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">               时，该region中所有memstore都会刷写。</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">               &#39;每一个region有多个store，一个store包含了一个memStore和多个storeFile&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    b、</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;阻止写&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：当memstore的大小达到了</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;hbase.hregion.memstore.flush.size（默认值128M）</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">                                    * hbase.hregion.memstore.block.multiplier（默认值4）&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">               时512MB，会阻止继续往该memstore写数据。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 时机2： regionServer级别，刷写方式：按照所有memstore的数据大小顺序（由大到小）依次进行刷写</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    a、</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;刷写&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：当regionserver中memstore的总大小达到</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">              &#39;java_heapsize*hbase.regionserver.global.memstore.size（默认值0.4）</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">              *hbase.regionserver.global.memstore.size.lower.limit（默认值0.95）&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">，</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">              即 </span><span style="color:#D19A66;--shiki-dark:#D19A66;">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">38</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> * JVM堆内存</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">              region会按照其所有memstore的大小顺序（由大到小）依次进行刷写。</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">              直到region server中所有memstore的总大小减小到上述值以下。</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    b、</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;阻止写&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：当region server中memstore的总大小达到</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;java_heapsize*hbase.regionserver.global.memstore.size&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">               （</span><span style="color:#D19A66;--shiki-dark:#D19A66;">默认值0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）时，会阻止继续往所有的memstore写数据。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 时机3：时间级别：刷写方式：默认1H进行刷写               </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    a、</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;刷写&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：到达自动刷写的时间，也会触发memstore flush。自动刷新的时间间隔由该属性进行配置</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &#39;hbase.regionserver.optionalcacheflushinterval（默认1小时）。&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> -- 时机4：关闭hbase时，刷写方式：进行刷写</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    a、</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;刷写&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：关闭hbase即进行刷写。</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-4-读流程" tabindex="-1"><a class="header-anchor" href="#_4-4-读流程"><span>4.4 读流程</span></a></h3><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 整体的流程和写的流程大致一致，主要的区别在于：</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 读的位置有很多位置</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      a、</span><span style="color:#C678DD;--shiki-dark:#C678DD;">block</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> cache</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      b、memStore</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      c、StoreFile</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 不同的位置，均会有数据，但是数据的版本可能不一样，所以当客户端读取多个版本数据时，可能每个位置都需要读取。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 读取到每个位置的数据以后，然后进行merge，将数据进行合并，最后发送给客户端。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 客户端每次读取到的数据最后会缓存到block cache中，缓冲内存的大小</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;默认大小为64kb&#39;</span></span></code></pre></div><p>![image-20200623223543002](<a href="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic" target="_blank" rel="noopener noreferrer">https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic</a> GO/20200623223543.png)</p><p>​ ![image-20200623223736145](<a href="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic" target="_blank" rel="noopener noreferrer">https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic</a> GO/20200623223736.png)</p><h3 id="_4-5-storefile-compaction" tabindex="-1"><a class="header-anchor" href="#_4-5-storefile-compaction"><span>4.5 StoreFile Compaction</span></a></h3><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--1. StoreFile文件合并的原因</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">  1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. memstore每次刷写都会生成一个新的HFile。</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--小文件</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">  2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 同一个字段的不同版本（</span><span style="color:#C678DD;--shiki-dark:#C678DD;">timestamp</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）和不同类型（Put/</span><span style="color:#C678DD;--shiki-dark:#C678DD;">Delete</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">）有可能会分布在不同的HFile中</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">  3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 为了减少HFile的个数</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">  4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 清理掉过期和删除的数据</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--2. 说明：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  a、什么是过期的数据？</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">     table中每一个位置有保留的版本数，同一位置进行多次数据修改时，就会有多个版本，在flush之前，数据不会丢失，在落盘时，只会</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">     保留对应版本数量的最新的数据，超过版本数量的数据就属于过期数据。</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  b、什么是删除的数据？</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">     使用delete删除数据时，数据并不是真正的删除，而是给数据打一个标识，当落盘时，这些数据就会被过滤和删除。</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--3. 合并分类：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  a、Minor Compaction，小合并，临近的若干个较小的HFile合并成一个较大的HFile，并清理掉部分过期和删除的数据。默认是3个文件</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  b、Major Compaction，大合并，将一个Store下的所有的HFile合并成一个大HFile，并且会清理掉所有过期和删除的数据。</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>![image-20200623225525470](<a href="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic" target="_blank" rel="noopener noreferrer">https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic</a> GO/20200623225525.png)</p><h3 id="_4-6-多版本" tabindex="-1"><a class="header-anchor" href="#_4-6-多版本"><span>4.6 多版本</span></a></h3><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#创建一个列族的版本数为2</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">create</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;t1&#39;</span><span style="color:#98C379;--shiki-dark:#98C379;"> ,{NAME</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=&gt;</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;f1，VERSIONS=&gt;2}</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">#获取两个2个版本</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">get &#39;t1&#39;,&#39;1002&#39;,{CLOUMN =&gt; &#39;f1:age&#39;,VERSIONS =&gt; 2}</span></span></code></pre></div><h3 id="_4-7-region-split" tabindex="-1"><a class="header-anchor" href="#_4-7-region-split"><span>4.7 Region Split</span></a></h3><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--1. Region基本介绍</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 默认一个Table，只有一个Region</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 随着数据的不断写入，Region会自动进行拆分，</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;如果设定了region分区的规则，那么这个默认切分规则不会有效&#39;</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 拆分以后，HMaster有可能会将某个Region转移到其他的Region </span><span style="color:#C678DD;--shiki-dark:#C678DD;">Server</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">，涉及到数据的迁移，</span><span style="color:#C678DD;--shiki-dark:#C678DD;">IO</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--2. Region切分的时机</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">   &#39;情况1&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：</span><span style="color:#D19A66;--shiki-dark:#D19A66;">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.94版本之前</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">   当1个region中的某个Store下所有StoreFile的总大小超过hbase</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">hregion</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">max</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">filesize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">，该Region就会进行拆分。</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">   &#39;情况2&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：</span><span style="color:#D19A66;--shiki-dark:#D19A66;">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.94版本之后</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.当1个region中的某个Store下所有StoreFile的总大小超过Min(initialSize*R^</span><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ,</span><span style="color:#D19A66;--shiki-dark:#D19A66;">hbase</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">hregion</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">max</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">filesize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)，该Region就会进行拆分。其中initialSize的默认值为2*</span><span style="color:#D19A66;--shiki-dark:#D19A66;">hbase</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">hregion</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">memstore</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">flush</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#C678DD;--shiki-dark:#C678DD;">size</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">，R为当前Region Server中属于该Table的Region个数</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    -- 10G以前，按照取最小值进行切分，10G以后，就每10G切分一次。</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    具体的切分策略为：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    第一次split：</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">^</span><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> * </span><span style="color:#D19A66;--shiki-dark:#D19A66;">256</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 256MB </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    第二次split：</span><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">^</span><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> * </span><span style="color:#D19A66;--shiki-dark:#D19A66;">256</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 2048MB </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    第三次split：</span><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">^</span><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> * </span><span style="color:#D19A66;--shiki-dark:#D19A66;">256</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 6912MB </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    第四次split：</span><span style="color:#D19A66;--shiki-dark:#D19A66;">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">^</span><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> * </span><span style="color:#D19A66;--shiki-dark:#D19A66;">256</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 16384MB </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 10GB，因此取较小的值10GB </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    后面每次split的size都是10GB了。</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">    &#39;情况3&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：Hbase </span><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">0</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    如果当前RegionServer上该表只有一个Region，按照2 * </span><span style="color:#D19A66;--shiki-dark:#D19A66;">hbase</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">hregion</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">memstore</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">flush</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#C678DD;--shiki-dark:#C678DD;">size</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;默认是128M&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)分裂，否则按照</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    hbase</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">hregion</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">max</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">filesize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;默认是10G&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)分裂</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-8-一些命令" tabindex="-1"><a class="header-anchor" href="#_4-8-一些命令"><span>4.8 一些命令</span></a></h3><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--1.</span><span style="color:#98C379;--shiki-dark:#98C379;"> 刷写：</span><span style="color:#98C379;--shiki-dark:#98C379;"> flush</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;tableName&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--2.</span><span style="color:#98C379;--shiki-dark:#98C379;"> 防止退出hbase客户端：q</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--3.</span><span style="color:#98C379;--shiki-dark:#98C379;"> 大合并：major_compact</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;tableName&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--4.</span><span style="color:#98C379;--shiki-dark:#98C379;"> 小合并：compact</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;tableName&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--5.</span><span style="color:#98C379;--shiki-dark:#98C379;"> scan查询的时候：scan</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;student&#39;,{COLUMNS</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> =&gt; </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;info:age:toLong&#39;}</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">     ROW</span><span style="color:#98C379;--shiki-dark:#98C379;">                             COLUMN+CELL</span><span style="color:#D19A66;--shiki-dark:#D19A66;">                                                                          1002</span><span style="color:#98C379;--shiki-dark:#98C379;">                           column=info:age,</span><span style="color:#98C379;--shiki-dark:#98C379;"> timestamp=1593192755078,</span><span style="color:#98C379;--shiki-dark:#98C379;"> value=</span><span style="color:#D19A66;--shiki-dark:#D19A66;">10</span></span></code></pre></div><h2 id="五-、-hbase-api" tabindex="-1"><a class="header-anchor" href="#五-、-hbase-api"><span>五 、 HBase API</span></a></h2><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--1.DML(Data Manipulation Language)数据操纵语言：使用conn进行操作</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">适用范围：对数据库中的数据进行一些简单操作，如insert,</span><span style="color:#C678DD;--shiki-dark:#C678DD;">delete</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#C678DD;--shiki-dark:#C678DD;">update</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,select等.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--2.DDL(Data Definition Language)数据定义语言：使用admin对象进行操作</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">适用范围：对数据库中的某些对象(例如，</span><span style="color:#C678DD;--shiki-dark:#C678DD;">database</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#C678DD;--shiki-dark:#C678DD;">table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)进行管理，如Create,Alter和Drop.</span></span></code></pre></div><h3 id="_5-1-环境准备" tabindex="-1"><a class="header-anchor" href="#_5-1-环境准备"><span>5.1 环境准备</span></a></h3><ul><li>添加依赖</li></ul><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;org.apache.hbase&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;hbase-server&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;2.0.5&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;org.apache.hbase&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;hbase-client&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;2.0.5&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><h3 id="_5-2-ddl" tabindex="-1"><a class="header-anchor" href="#_5-2-ddl"><span>5.2 DDL</span></a></h3><div class="language-scala line-numbers-mode" data-ext="scala" data-title="scala"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">package</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> com.atguigui.lianzp</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> org.apache.hadoop.conf.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Configuration</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> org.apache.hadoop.hbase.{</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">HBaseConfiguration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">NamespaceDescriptor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">TableName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> org.apache.hadoop.hbase.client._</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> org.apache.hadoop.hbase.util.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Bytes</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * @Description</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@author</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> lianzhipeng</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * @create 2020-06-24 9:59:55</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">object</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> HBase_DDL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 1. 获取zookeeper的连接</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> conf</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Configuration</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> HBaseConfiguration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.create()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  conf.set(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;hbase.zookeeper.quorum&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;hadoop105,hadoop106,hadoop107&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> conn</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Connection</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> ConnectionFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.createConnection(conf)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 2. 获取hbase的对象</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> admin</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Admin</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> conn.getAdmin</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  def</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Array</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">]): </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Unit</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> result</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Boolean</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> tableExists(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;user&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//    println(result)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//    createTable(&quot;emp&quot;,&quot;cf1&quot;,&quot;cf2&quot;)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//    deleteTable(&quot;user&quot;)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//    val bool: Boolean = nsExists(&quot;lianzp&quot;)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//    println(bool)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    createNS(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;lianzp&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    connclose()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  def</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> createNS</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (namespace:</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">!</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">nsExists(namespace)){</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">      val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> ns</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">NamespaceDescriptor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Builder</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> NamespaceDescriptor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.create(namespace)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      admin.createNamespace(ns.build())</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      println(</span><span style="color:#C678DD;--shiki-dark:#C678DD;">s</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;namespace:{</span><span style="color:#C678DD;--shiki-dark:#C678DD;">$</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">namespace</span><span style="color:#98C379;--shiki-dark:#98C379;">}创建成功&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span><span style="color:#C678DD;--shiki-dark:#C678DD;">else</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      println(</span><span style="color:#C678DD;--shiki-dark:#C678DD;">s</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;namespace:{</span><span style="color:#C678DD;--shiki-dark:#C678DD;">$</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">namespace</span><span style="color:#98C379;--shiki-dark:#98C379;">}已存在，创建失败&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  def</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> nsExists</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">namespace</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> : </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 获取当前所有的namespace的描述，是一个数组</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> nss</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Array</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">NamespaceDescriptor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">] </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> admin.listNamespaceDescriptors()</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 进行格式转换，获取namespace的名字，然后确定namespace是否存在</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    nss.map(_.getName).contains(namespace)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  def</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> deleteTable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> : </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 获取当前表</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> tn</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">TableName</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> TableName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.valueOf(table)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (tableExists(table)){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     // 删除表，首先需要将表置于不可用的状态才能进行删除</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      admin.disableTable(tn)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      admin.deleteTable(tn)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      println(</span><span style="color:#C678DD;--shiki-dark:#C678DD;">s</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;{</span><span style="color:#C678DD;--shiki-dark:#C678DD;">$</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">table</span><span style="color:#98C379;--shiki-dark:#98C379;">}表删除成功&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span><span style="color:#C678DD;--shiki-dark:#C678DD;">else</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      println(</span><span style="color:#C678DD;--shiki-dark:#C678DD;">s</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;{</span><span style="color:#C678DD;--shiki-dark:#C678DD;">$</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">table</span><span style="color:#98C379;--shiki-dark:#98C379;">}表不存在，删除失败&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    * 判断表是否存在</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> name</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@return</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  def</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> tableExists</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> tableName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">TableName</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> TableName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.valueOf(name)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> bool</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Boolean</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> admin.tableExists(tableName)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    bool</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    * 创建表</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> tableName</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> columns</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  def</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> createTable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (tableName :</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> , </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">columns</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">*</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    //TableDescriptor desc</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> tn</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">TableName</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> TableName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.valueOf(tableName)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> tb</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">TableDescriptorBuilder</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> TableDescriptorBuilder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.newBuilder(tn)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">!</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">tableExists(tableName)) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      columns.foreach(cf </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> descriptor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">ColumnFamilyDescriptor</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> ColumnFamilyDescriptorBuilder</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">          .newBuilder(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Bytes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.toBytes(cf))</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">          .build()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        tb.setColumnFamily(descriptor)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      })</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      admin.createTable(tb.build())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      println(</span><span style="color:#C678DD;--shiki-dark:#C678DD;">s</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;{</span><span style="color:#C678DD;--shiki-dark:#C678DD;">$</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">tableName</span><span style="color:#98C379;--shiki-dark:#98C379;">}表创建成功&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span><span style="color:#C678DD;--shiki-dark:#C678DD;">else</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      println(</span><span style="color:#C678DD;--shiki-dark:#C678DD;">s</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;当前的表{</span><span style="color:#C678DD;--shiki-dark:#C678DD;">$</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">tableName</span><span style="color:#98C379;--shiki-dark:#98C379;">}已存在&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  def</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> connclose</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 4. 关闭对象</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    admin.close()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 5. 关闭连接</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    conn.close()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-3-dml" tabindex="-1"><a class="header-anchor" href="#_5-3-dml"><span>5.3 DML</span></a></h3><div class="language-scala line-numbers-mode" data-ext="scala" data-title="scala"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">package</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> com.atguigui.lianzp</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> java.util</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> org.apache.hadoop.conf.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Configuration</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> org.apache.hadoop.hbase.{</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Cell</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">CellUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">HBaseConfiguration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">TableName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> org.apache.hadoop.hbase.client._</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> org.apache.hadoop.hbase.util.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Bytes</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * @Description</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@author</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> lianzhipeng</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * @create 2020-06-24 14:16:48</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">object</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> HBase_DML</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 1. 获取连接</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  private</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> var</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> conf</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Configuration</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> HBaseConfiguration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.create()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  conf.set(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;hbase.zookeeper.quorum&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;hadoop105,hadoop106,hadoop107&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  private</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> conn</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Connection</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> ConnectionFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.createConnection(conf)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 2. 创建hbase的master的对象</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  private</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> admin</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Admin</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> conn.getAdmin</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  def</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Array</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">]): </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Unit</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 1. 增加数据</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    //    putData(&quot;test&quot;, &quot;1002&quot;, &quot;info&quot;, &quot;age&quot;, &quot;2&quot;)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 2. 扫描数据</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    //    scanData(&quot;test&quot;)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 3. 删除数据</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    deleteData(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;test&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;1001&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;info&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;name&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 4. 获取数据</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    //    getData(&quot;test&quot;, &quot;1002&quot;, &quot;info&quot;, &quot;age&quot;)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    closeConn</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    * 删除数据</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> tableName</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> rowKey</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> columnFamily</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> column</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  def</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> deleteData</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">tableName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">rowKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">columnFamily</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">column</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 1. 获取表</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 封装表</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> tn</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">TableName</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> TableName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.valueOf(tableName)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 获取表</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Table</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> conn.getTable(tn)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 2. 判断表是否存在</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (tableExists(tableName)) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // 封装一个delete</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">      val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> delete</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Delete</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Bytes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.toBytes(rowKey))</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">      val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> dl</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Delete</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> delete.addColumn(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Bytes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.toBytes(columnFamily), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Bytes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.toBytes(column))</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // 对表进行删除</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      table.delete(dl)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  def</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> scanData</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">tableName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 1. 获取表</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> tn</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">TableName</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> TableName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.valueOf(tableName)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Table</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> conn.getTable(tn)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 2.判断表是否存在</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (tableExists(tableName)) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // 获取一个scan对象</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">      val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> scan</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Scan</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // 获取表的全局扫描</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">      val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> scanner</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">ResultScanner</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> table.getScanner(scan)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // 这个是用来在java的集合和scala的集合之间互转  (隐式转换)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">      import</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> scala.collection.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">JavaConversions</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">._</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // 使用迭代器，获取所有数据的集合</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">      val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> results</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: util.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Iterator</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Result</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">] </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> scanner.iterator()</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // 遍历每一行的数据</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">      for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (result </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&lt;-</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> results) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 获取每一行数据中所有的单元格</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> cells</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: util.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Cell</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">] </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> result.listCells()</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (cells </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">!=</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">          // 遍历所有的单元格，只能获取最新的版本</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">          for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (cell </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&lt;-</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> cells) {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            println(</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">              s</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">                 |rowKey= </span><span style="color:#C678DD;--shiki-dark:#C678DD;">\${</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Bytes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.toString(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">CellUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.cloneRow(cell))</span><span style="color:#C678DD;--shiki-dark:#C678DD;">}</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">                 |columnFamily = </span><span style="color:#C678DD;--shiki-dark:#C678DD;">\${</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Bytes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.toString(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">CellUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.cloneFamily(cell))</span><span style="color:#C678DD;--shiki-dark:#C678DD;">}</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">                 |column = </span><span style="color:#C678DD;--shiki-dark:#C678DD;">\${</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Bytes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.toString(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">CellUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.cloneQualifier(cell))</span><span style="color:#C678DD;--shiki-dark:#C678DD;">}</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">                 |value = </span><span style="color:#C678DD;--shiki-dark:#C678DD;">\${</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Bytes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.toString(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">CellUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.cloneValue(cell))</span><span style="color:#C678DD;--shiki-dark:#C678DD;">}</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">            &quot;&quot;&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.stripMargin)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            println(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;=======================================&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">          }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  def</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> getData</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">tableName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">rowKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">columnFamily</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">column</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 1. 获取表</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> tn</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">TableName</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> TableName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.valueOf(tableName)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Table</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> conn.getTable(tn)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 2. 判断表是否存在，如果存在则进行查询，如果不存在，则直接退出方法，并提示client查询的表不存在</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (tableExists(tableName)) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">      val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> get</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Bytes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.toBytes(rowKey))</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      get.addColumn(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Bytes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.toBytes(columnFamily), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Bytes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.toBytes(column))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">      val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> result</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Result</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> table.get(get)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">      import</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> scala.collection.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">JavaConversions</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">._</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">      val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> cells</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: util.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Cell</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">] </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> result.listCells()</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">      for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (cell </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&lt;-</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> cells) {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        println(</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">          s</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">             |columnFamliy = </span><span style="color:#C678DD;--shiki-dark:#C678DD;">\${</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Bytes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.toString(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">CellUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.cloneFamily(cell))</span><span style="color:#C678DD;--shiki-dark:#C678DD;">}</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">             |column = </span><span style="color:#C678DD;--shiki-dark:#C678DD;">\${</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Bytes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.toString(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">CellUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.cloneQualifier(cell))</span><span style="color:#C678DD;--shiki-dark:#C678DD;">}</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">             |value = </span><span style="color:#C678DD;--shiki-dark:#C678DD;">\${</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Bytes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.toString(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">CellUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.cloneValue(cell))</span><span style="color:#C678DD;--shiki-dark:#C678DD;">}</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">             |rowKey = </span><span style="color:#C678DD;--shiki-dark:#C678DD;">\${</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Bytes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.toString(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">CellUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.cloneRow(cell))</span><span style="color:#C678DD;--shiki-dark:#C678DD;">}</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">           &quot;&quot;&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.stripMargin)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    } </span><span style="color:#C678DD;--shiki-dark:#C678DD;">else</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      println(</span><span style="color:#C678DD;--shiki-dark:#C678DD;">s</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;{</span><span style="color:#C678DD;--shiki-dark:#C678DD;">$</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">tableName</span><span style="color:#98C379;--shiki-dark:#98C379;">}表不存在&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    * 增加数据</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> tableName</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> rowKey</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> columnFamily</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> column</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> value</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  def</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> putData</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">tableName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">rowKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">columnFamily</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">column</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 1. 获取表</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> tn</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">TableName</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> TableName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.valueOf(tableName)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Table</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> conn.getTable(tn)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 2. 判断表是否存在，如果存在，则添加数据，如果不存在，则通知client</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (tableExists(tableName)) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // 封装插入的数据</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">      val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> put</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Bytes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.toBytes(rowKey))</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      put.addColumn(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Bytes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.toBytes(columnFamily), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Bytes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.toBytes(column), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Bytes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.toBytes(value))</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // 将数据插入</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      table.put(put)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // 关闭连接</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      table.close()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      println(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;插入数据操作执行成功&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    } </span><span style="color:#C678DD;--shiki-dark:#C678DD;">else</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      println(</span><span style="color:#C678DD;--shiki-dark:#C678DD;">s</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;当前表{</span><span style="color:#C678DD;--shiki-dark:#C678DD;">$</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">tableName</span><span style="color:#98C379;--shiki-dark:#98C379;">}不存在&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  def</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> tableExists</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">tableName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    val</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> tn</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">TableName</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> TableName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.valueOf(tableName)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    admin.tableExists(tn)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    * 关闭连接</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  def</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> closeConn</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 3. 关闭对象</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    admin.close()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 4. 关闭连接</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    conn.close()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="六、hbase的优化" tabindex="-1"><a class="header-anchor" href="#六、hbase的优化"><span>六、HBase的优化</span></a></h2><h3 id="_6-1-预分区" tabindex="-1"><a class="header-anchor" href="#_6-1-预分区"><span>6.1 预分区</span></a></h3><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 通过预分区的方式，使添加的数据进入指定的region中，提前进行数据分区。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 当指定预分区的规则以后，那么默认的region split分区原则则不会有效。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 每一个region维护着一个startkey和endkey，新增的数据，根据数据的rowkey判断进入哪个region，比较的方式：按照字典的顺序。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 在实际开发中，基本上所有的表都会进行预分区，且经常是第一个或者是最后一个region中是没有数据。</span></span></code></pre></div><h4 id="_6-1-1-手动设定预分区" tabindex="-1"><a class="header-anchor" href="#_6-1-1-手动设定预分区"><span>6.1.1 手动设定预分区</span></a></h4><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">hbase</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt; </span><span style="color:#98C379;--shiki-dark:#98C379;">create</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;staff1&#39;,&#39;info&#39;,&#39;partition1&#39;,SPLITS</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> =&gt; [</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;1000&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;2000&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;3000&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;4000&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">]</span></span></code></pre></div><h4 id="_6-1-2-生成16进制序列预分区" tabindex="-1"><a class="header-anchor" href="#_6-1-2-生成16进制序列预分区"><span>6.1.2 生成16进制序列预分区</span></a></h4><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">create</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;staff2&#39;,&#39;info&#39;,&#39;partition2&#39;,{NUMREGIONS</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> =&gt; </span><span style="color:#98C379;--shiki-dark:#98C379;">15,</span><span style="color:#98C379;--shiki-dark:#98C379;"> SPLITALGO</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> =&gt; </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;HexStringSplit&#39;}</span></span></code></pre></div><h4 id="_6-1-3-按照文件设置预分区" tabindex="-1"><a class="header-anchor" href="#_6-1-3-按照文件设置预分区"><span>6.1.3 按照文件设置预分区</span></a></h4><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>#文件内容</span></span>
<span class="line"><span>aaaa</span></span>
<span class="line"><span>bbbb</span></span>
<span class="line"><span>cccc</span></span>
<span class="line"><span>dddd</span></span></code></pre></div><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">create</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;staff3&#39;,&#39;partition3&#39;,SPLITS_FILE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> =&gt; </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;splits.txt&#39;</span></span></code></pre></div><h4 id="_6-1-4-使用api设置" tabindex="-1"><a class="header-anchor" href="#_6-1-4-使用api设置"><span>6.1.4 使用API设置</span></a></h4><div class="language-scala" data-ext="scala" data-title="scala"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//自定义算法，产生一系列Hash散列值存储在二维数组中</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">byte[][] splitKeys </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> 某个散列值函数</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//创建HbaseAdmin实例</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">HBaseAdmin</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> hAdmin </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> HBaseAdmin</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">HbaseConfiguration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.create());</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//创建HTableDescriptor实例</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">HTableDescriptor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> tableDesc </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> HTableDescriptor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(tableName);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//通过HTableDescriptor实例和散列值二维数组创建带有预分区的Hbase表</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">hAdmin.createTable(tableDesc, splitKeys);</span></span></code></pre></div><h3 id="_6-2-rowkey设计" tabindex="-1"><a class="header-anchor" href="#_6-2-rowkey设计"><span>6.2 RowKey设计</span></a></h3><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 1. 现状</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    在hbase中，rowkey是唯一区分数据进入哪个region中，如果region设计合理，那么有可能导致数据冗余和数据倾斜。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 2. 设计规则</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 长度：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        a、rowkey理论字节数在10-100字节之间最好，一是可以表述较多的数据内容，其次是数据不会过多；</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        b、数据长度最好是2的n次幂；</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        c、rowkey的数据长度最好相同；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 散列：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        a、对rowkey进行散列，采用md5，hash等方式，以防止数据倾斜；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 唯一性：防止rowkey相同。</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 3. 实现方式：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      a、字符串反转。如：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      20170524000001转成10000042507102</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      20170524000002转成20000042507102</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      b、字符串连接：将本来放进列的数据，放到rowkey中，主要是将经常需要使用到的字段/不发生改变的数据拼接到rowkey中。</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">       如：rowkey：id_name_age</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-3-内存优化" tabindex="-1"><a class="header-anchor" href="#_6-3-内存优化"><span>6.3 内存优化</span></a></h3><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>HBase操作过程中需要大量的内存开销，毕竟Table是可以缓存在内存中的，但是不建议分配非常大的堆内存，因为GC过程持续太久会导致RegionServer处于长期不可用状态，一般16~36G内存就可以了，如果因为框架占用内存过高导致系统内存不足，框架一样会被系统服务拖死</span></span></code></pre></div><h3 id="_6-4-基础优化" tabindex="-1"><a class="header-anchor" href="#_6-4-基础优化"><span>6.4 基础优化</span></a></h3><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 1.Zookeeper会话超时时间</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">    &#39;配置文件&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：hbase-</span><span style="color:#D19A66;--shiki-dark:#D19A66;">site</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">xml</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">    &#39;属性&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：</span><span style="color:#D19A66;--shiki-dark:#D19A66;">zookeeper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">session</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#C678DD;--shiki-dark:#C678DD;">timeout</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">    &#39;解释&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：默认值为90000毫秒（90s）。当某个RegionServer挂掉，90s之后Master才能察觉到。可适当减小此值，以加快Master响应，可调整至600000毫秒。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--2.设置RPC监听数量</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">    &#39;配置文件&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：hbase-</span><span style="color:#D19A66;--shiki-dark:#D19A66;">site</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">xml</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">    &#39;属性&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：</span><span style="color:#D19A66;--shiki-dark:#D19A66;">hbase</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">regionserver</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">handler</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">count</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">    &#39;解释&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：默认值为30，用于指定RPC监听的数量，可以根据客户端的请求数进行调整，读写请求较多时，增加此值。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--3.手动控制Major Compaction</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">    &#39;配置文件&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：hbase-</span><span style="color:#D19A66;--shiki-dark:#D19A66;">site</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">xml</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">    &#39;属性&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：</span><span style="color:#D19A66;--shiki-dark:#D19A66;">hbase</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">hregion</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.majorcompaction</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">    &#39;解释&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：默认值：604800000秒（7天）， Major Compaction的周期，若关闭自动Major Compaction，可将其设为0</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    在实际开发中，我们一般设置为0，然后通过azkaban进行调度。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--4.优化HStore文件大小</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">    &#39;配置文件&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：hbase-</span><span style="color:#D19A66;--shiki-dark:#D19A66;">site</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">xml</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">    &#39;属性&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：</span><span style="color:#D19A66;--shiki-dark:#D19A66;">hbase</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">hregion</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">max</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">filesize</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">    &#39;解释&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：默认值10737418240（10GB），如果需要运行HBase的MR任务，可以减小此值，因为一个region对应一个map任务，如果单个region过大，会导致map任务执行时间过长。该值的意思就是，如果HFile的大小达到这个数值，则这个region会被切分为两个Hfile。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--5.优化HBase客户端缓存</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">    &#39;配置文件&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：hbase-</span><span style="color:#D19A66;--shiki-dark:#D19A66;">site</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">xml</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">    &#39;属性&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：</span><span style="color:#D19A66;--shiki-dark:#D19A66;">hbase</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">client</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">write</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">buffer</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">    &#39;解释&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：默认值2097152bytes（2M）用于指定HBase客户端缓存，增大该值可以减少RPC调用次数，但是会消耗更多内存，反之则反之。一般我们需要设定一定的缓存大小，以达到减少RPC次数的目的。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--6.指定scan.next扫描HBase所获取的行数</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">    &#39;配置文件&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：hbase-</span><span style="color:#D19A66;--shiki-dark:#D19A66;">site</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">xml</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">    &#39;属性&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：</span><span style="color:#D19A66;--shiki-dark:#D19A66;">hbase</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">client</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">scanner</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">caching</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">    &#39;解释&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：</span><span style="color:#D19A66;--shiki-dark:#D19A66;">用于指定scan</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">next方法获取的默认行数</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">，值越大，消耗内存越大。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--7.BlockCache占用RegionServer堆内存的比例</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">    &#39;配置文件&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：hbase-</span><span style="color:#D19A66;--shiki-dark:#D19A66;">site</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">xml</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">    &#39;属性&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：</span><span style="color:#D19A66;--shiki-dark:#D19A66;">hfile</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">block</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">cache</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">size</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">    &#39;解释&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：</span><span style="color:#D19A66;--shiki-dark:#D19A66;">默认0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">，读请求比较多的情况下，可适当调大</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--8.MemStore占用RegionServer堆内存的比例</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">    &#39;配置文件&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：hbase-</span><span style="color:#D19A66;--shiki-dark:#D19A66;">site</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">xml</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">    &#39;属性&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：</span><span style="color:#D19A66;--shiki-dark:#D19A66;">hbase</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">regionserver</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">global</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">memstore</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#C678DD;--shiki-dark:#C678DD;">size</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">    &#39;解释&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：</span><span style="color:#D19A66;--shiki-dark:#D19A66;">默认0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">，写请求较多的情况下，可适当调大</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="七、与hive的集成" tabindex="-1"><a class="header-anchor" href="#七、与hive的集成"><span>七、与Hive的集成</span></a></h2><h3 id="_7-1-hbase与hive的对比" tabindex="-1"><a class="header-anchor" href="#_7-1-hbase与hive的对比"><span>7.1 HBase与Hive的对比</span></a></h3><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--1. Hive</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">   1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 是一个数据仓库：Hive的本质其实就是相当于将HDFS中已经存储的文件在Mysql中做一个双射关系，以方便使用HQL去管理查询；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">   2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 用于数据分析、清洗</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">   3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 基于HDFS 、 MapReduce： Hive存储的数据依旧在DataNode上，编写的HQL语句终将转换为MapReduce代码执行；</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--2. HBase</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 是数据库</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 用于存储结构化和非结构化数据</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 基于HDFS</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">    4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 延迟低。接入在线业务使用</span></span></code></pre></div><h3 id="_7-2-hbase-与-hive集成使用" tabindex="-1"><a class="header-anchor" href="#_7-2-hbase-与-hive集成使用"><span>7.2 HBase 与 Hive集成使用</span></a></h3><ul><li>在hive-site.xml中添加zookeeper的属性，如下：</li></ul><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;hive.zookeeper.quorum&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;hadoop105,hadoop106,hadoop107&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;hive.zookeeper.client.port&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;2181&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><h3 id="_7-3-案例一" tabindex="-1"><a class="header-anchor" href="#_7-3-案例一"><span>7.3 案例一</span></a></h3><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 需求：在Hive中创建的表，在HBase中可以查询到。</span></span></code></pre></div><ol><li>在Hive中创建表同时关联HBase</li></ol><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">CREATE</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> TABLE</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> hive_hbase_emp_table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">empno </span><span style="color:#C678DD;--shiki-dark:#C678DD;">int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">ename string,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">job string,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">mgr </span><span style="color:#C678DD;--shiki-dark:#C678DD;">int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">hiredate string,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">sal double,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">comm double,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">deptno </span><span style="color:#C678DD;--shiki-dark:#C678DD;">int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">STORED </span><span style="color:#C678DD;--shiki-dark:#C678DD;">BY</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;org.apache.hadoop.hive.hbase.HBaseStorageHandler&#39;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">WITH</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> SERDEPROPERTIES (</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;hbase.columns.mapping&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;:key,info:ename,info:job,info:mgr,info:hiredate,info:sal,info:comm,info:deptno&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">TBLPROPERTIES (</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;hbase.table.name&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;hbase_emp_table&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span></code></pre></div><blockquote><p>完成之后，可以分别进入Hive和HBase查看，都生成了对应的表</p></blockquote><ol start="2"><li>在Hive中创建临时中间表，用于load文件中的数据</li></ol><blockquote><p>建立上诉的表，不能直接通过load的方式加载数据，需要通过查询其他表的数据进行插入</p></blockquote><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">CREATE</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> TABLE</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> emp</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">empno </span><span style="color:#C678DD;--shiki-dark:#C678DD;">int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">ename string,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">job string,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">mgr </span><span style="color:#C678DD;--shiki-dark:#C678DD;">int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">hiredate string,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">sal double,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">comm double,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">deptno </span><span style="color:#C678DD;--shiki-dark:#C678DD;">int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">row</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> format delimited fields terminated </span><span style="color:#C678DD;--shiki-dark:#C678DD;">by</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;\\t&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span></code></pre></div><ol start="3"><li>向Hive中间表中load数据</li></ol><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">load</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> data</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> local</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> inpath </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;/opt/module/hive/datas/emp&#39;</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> into</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> emp;</span></span></code></pre></div><ol start="4"><li>通过insert命令将中间表中的数据导入到Hive关联Hbase的那张表中</li></ol><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">insert into</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> hive_hbase_emp_table </span><span style="color:#C678DD;--shiki-dark:#C678DD;">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> * </span><span style="color:#C678DD;--shiki-dark:#C678DD;">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> emp;</span></span></code></pre></div><ol start="5"><li>查看Hive以及关联的HBase表中是否已经成功的同步插入了数据</li></ol><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- Hive</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">hive</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> * </span><span style="color:#C678DD;--shiki-dark:#C678DD;">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> hive_hbase_emp_table;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- HBase</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">Hbase</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> scan </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;hbase_emp_table&#39;</span></span></code></pre></div><h3 id="_7-4-案例二" tabindex="-1"><a class="header-anchor" href="#_7-4-案例二"><span>7.4 案例二</span></a></h3><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 需求：在HBase中已经存储了某一张表hbase_emp_table，然后在Hive中创建一个外部表来关联HBase中的hbase_emp_table这张表</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">在案例1的基础上进行完成。</span></span></code></pre></div><ol><li>在Hive中创建外部表</li></ol><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">CREATE</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> EXTERNAL</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> TABLE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> relevance_hbase_emp(</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">empno </span><span style="color:#C678DD;--shiki-dark:#C678DD;">int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">ename string,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">job string,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">mgr </span><span style="color:#C678DD;--shiki-dark:#C678DD;">int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">hiredate string,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">sal double,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">comm double,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">deptno </span><span style="color:#C678DD;--shiki-dark:#C678DD;">int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">STORED </span><span style="color:#C678DD;--shiki-dark:#C678DD;">BY</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">&#39;org.apache.hadoop.hive.hbase.HBaseStorageHandler&#39;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">WITH</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> SERDEPROPERTIES (</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;hbase.columns.mapping&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">&quot;:key,info:ename,info:job,info:mgr,info:hiredate,info:sal,info:comm,info:deptno&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">TBLPROPERTIES (</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;hbase.table.name&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;hbase_emp_table&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span></code></pre></div><ol start="2"><li>关联后就可以使用Hive函数进行一些分析操作了</li></ol><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">hive (</span><span style="color:#C678DD;--shiki-dark:#C678DD;">default</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> * </span><span style="color:#C678DD;--shiki-dark:#C678DD;">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> relevance_hbase_emp;</span></span></code></pre></div><h2 id="八、phoenix" tabindex="-1"><a class="header-anchor" href="#八、phoenix"><span>八、Phoenix</span></a></h2><h3 id="_8-1-phoenix简介" tabindex="-1"><a class="header-anchor" href="#_8-1-phoenix简介"><span>8.1 Phoenix简介</span></a></h3><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 1. Phoenix是什么？</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   可以理解是HBase的开源SQL皮肤，可以使用标准的JDBC API代替HBase客户端API来创建表，插入数据和查询HBase数据。</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 2. Phoenix中创建的表存储在HBase中。</span></span></code></pre></div><h3 id="_8-2-phoenix特点" tabindex="-1"><a class="header-anchor" href="#_8-2-phoenix特点"><span>8.2 Phoenix特点</span></a></h3><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 容易集成：如Spark 、 Hive 、 Pig 、 Flume 、 MAPReduce</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 操作容易：DML命令以及通过DDL命令来对表进行操作</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">. 支持HBase的二级索引创建。</span></span></code></pre></div><h3 id="_8-3-phoenix架构" tabindex="-1"><a class="header-anchor" href="#_8-3-phoenix架构"><span>8.3 Phoenix架构</span></a></h3><p>![image-20200628213131835](<a href="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic" target="_blank" rel="noopener noreferrer">https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic</a> GO/20200628213139.png)</p><h3 id="_8-4-phoenix安装" tabindex="-1"><a class="header-anchor" href="#_8-4-phoenix安装"><span>8.4 Phoenix安装</span></a></h3><h4 id="_8-4-1-官网地址" tabindex="-1"><a class="header-anchor" href="#_8-4-1-官网地址"><span>8.4.1 官网地址</span></a></h4><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>http://phoenix.apache.org/</span></span></code></pre></div><h4 id="_8-4-2-phoenix部署" tabindex="-1"><a class="header-anchor" href="#_8-4-2-phoenix部署"><span>8.4.2 Phoenix部署</span></a></h4><ol><li>上传并解压tar包并修改名字</li></ol><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[atguigu@hadoop105 module]$ tar -zxvf apache-phoenix-5.0.0-HBase-2.0-bin.tar.gz -C /opt/module/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[atguigu@hadoop102 module]$ mv apache-phoenix-5.0.0-HBase-2.0-bin phoenix</span></span></code></pre></div><ol start="2"><li>复制server包并拷贝到各个节点的hbase/lib</li></ol><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[atguigu@hadoop102 module]$ cd /opt/module/phoenix/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[atguigu@hadoop102 phoenix]$ cp /opt/module/phoenix/phoenix-5.0.0-HBase-2.0-server.jar /opt/module/hbase/lib/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[atguigu@hadoop102 phoenix]$ xsync /opt/module/hbase/lib/phoenix-5.0.0-HBase-2.0-server.jar</span></span></code></pre></div><ol start="3"><li>配置环境变量</li></ol><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#phoenix</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">export</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> PHOENIX_HOME</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">opt</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">module</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">phoenix</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">export</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> PHOENIX_CLASSPATH</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E06C75;--shiki-dark:#E06C75;">$PHOENIX_HOME</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">export</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> PATH</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E06C75;--shiki-dark:#E06C75;">$PATH</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span><span style="color:#E06C75;--shiki-dark:#E06C75;">$PHOENIX_HOME</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bin</span></span></code></pre></div><ol start="4"><li>重启HBase</li></ol><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[atguigu@hadoop102 ~]$ stop-hbase.sh</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[atguigu@hadoop102 ~]$ start-hbase.sh</span></span></code></pre></div><ol start="5"><li>连接Phoenix</li></ol><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[atguigu@hadoop101 phoenix]$ /opt/module/phoenix/bin/sqlline.py hadoop102,hadoop103,hadoop104:2181</span></span></code></pre></div><h3 id="_8-5-phoenix-shell-操作" tabindex="-1"><a class="header-anchor" href="#_8-5-phoenix-shell-操作"><span>8.5 Phoenix Shell 操作</span></a></h3><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--说明：</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">  1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">、 在Phoenix创建的表，都是存储在hbase中；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">  2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">、 Phoenix表的主键，在hbase表中，相当于rowkey，所以在Phoenix建表时，至少设置一个主键，且数据类型最好设置为varchar；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">  3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">、 在Phoenix创建表时，表名和字段自动会变成大写，如果想要设置为小写，那么需要使用</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;双引号&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">  4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">、 </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;单引号&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">表示字符串；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">  5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">、 在HBase创建的表，默认在Phoenix是查询不到的，需要通过映射的方式可以查询。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">  6</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">、 Phoenix中不支持insert语法，使用了</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;upsert&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">代替;</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">  7</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">、 Phoenix的shell操作，很多和sql语法相似，但是也有些语法时不支持的；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">  8</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">、 Phoenix创建的表，在hbase默认只有一个列族</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;0&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">；</span></span></code></pre></div><h4 id="_8-5-1-显示所有表" tabindex="-1"><a class="header-anchor" href="#_8-5-1-显示所有表"><span>8.5.1 显示所有表</span></a></h4><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">!</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">table</span><span style="color:#98C379;--shiki-dark:#98C379;"> 或</span><span style="color:#98C379;--shiki-dark:#98C379;"> !tables</span></span></code></pre></div><h4 id="_8-5-2-创建表" tabindex="-1"><a class="header-anchor" href="#_8-5-2-创建表"><span>8.5.2 创建表</span></a></h4><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">create</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> table</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> lianzp</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (id </span><span style="color:#C678DD;--shiki-dark:#C678DD;">varchar</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> primary key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> , age </span><span style="color:#C678DD;--shiki-dark:#C678DD;">varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> )</span></span></code></pre></div><ul><li>联合主键</li></ul><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">指定多个列的联合作为RowKey</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">CREATE</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> TABLE</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> IF</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> NOT</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> EXISTS</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> us_population (</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">State</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> CHAR</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#C678DD;--shiki-dark:#C678DD;">NOT NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">City </span><span style="color:#C678DD;--shiki-dark:#C678DD;">VARCHAR</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> NOT NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">Population</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> BIGINT</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">CONSTRAINT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> my_pk </span><span style="color:#C678DD;--shiki-dark:#C678DD;">PRIMARY KEY</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD;">state</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, city));</span></span></code></pre></div><h4 id="_8-5-3-插入数据" tabindex="-1"><a class="header-anchor" href="#_8-5-3-插入数据"><span>8.5.3 插入数据</span></a></h4><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">upsert </span><span style="color:#C678DD;--shiki-dark:#C678DD;">into</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> student </span><span style="color:#C678DD;--shiki-dark:#C678DD;">values</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;1001&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;zhangsan&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;beijing&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span></code></pre></div><h4 id="_8-5-4-查询记录" tabindex="-1"><a class="header-anchor" href="#_8-5-4-查询记录"><span>8.5.4 查询记录</span></a></h4><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> * </span><span style="color:#C678DD;--shiki-dark:#C678DD;">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> student;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> * </span><span style="color:#C678DD;--shiki-dark:#C678DD;">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> student </span><span style="color:#C678DD;--shiki-dark:#C678DD;">where</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> id</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;1001&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span></code></pre></div><h4 id="_8-5-5-删除记录" tabindex="-1"><a class="header-anchor" href="#_8-5-5-删除记录"><span>8.5.5 删除记录</span></a></h4><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">delete</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> student </span><span style="color:#C678DD;--shiki-dark:#C678DD;">where</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> id</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;1001&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span></code></pre></div><h4 id="_8-5-6-删除表" tabindex="-1"><a class="header-anchor" href="#_8-5-6-删除表"><span>8.5.6 删除表</span></a></h4><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">drop</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> table</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> student;</span></span></code></pre></div><h4 id="_8-5-7-退出命令行" tabindex="-1"><a class="header-anchor" href="#_8-5-7-退出命令行"><span>8.5.7 退出命令行</span></a></h4><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">!quit</span></span></code></pre></div><h3 id="_8-6-phoenix与hbase表映射" tabindex="-1"><a class="header-anchor" href="#_8-6-phoenix与hbase表映射"><span>8.6 Phoenix与hbase表映射</span></a></h3><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 1. 说明：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">       a. 在Phoenix创建的表可以在hbase中直接查询到，因为Phoenix创建的表就是在hbase上；</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">       b. 在hbase的表，Phoenix默认不能直接看到，需要使用映射的方式才能看到。 </span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 2. 序列化问题：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      a、Phoenix数据的序列化器和hbase数据序列化器不一致；</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      b、Phoenix使用自身的序列化器，</span><span style="color:#D19A66;--shiki-dark:#D19A66;">而hbase使用的是bytes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">toBtes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()对数据进行序列化，则导致从Phoenix读取hbase和从hbase读取Phoenix数据时，会出现读出的数据和原表中的数据不一致。现象为：</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      -- 1). Hbase读取Phoenix表</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      a、</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;列名格式问题&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：列名将Phoenix的字段转换为16进制显示</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      b、</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;value格式问题&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：值类型数据也被转换成了16进制显示</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      -- 2). Phoenix读取hbase表</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      a、</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;列名格式问题&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：在Phoenix创建的字段和hbase表中的字段一样，但是没有数据</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      b、</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;value格式问题&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：查询的数据和hbase的数据完全不等，描述见下图：</span></span></code></pre></div><p>![image-20200629000242062](<a href="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic" target="_blank" rel="noopener noreferrer">https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic</a> GO/20200629000242.png)</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 3. 解决方案如下：</span></span></code></pre></div><p>![image-20200629003822649](<a href="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic" target="_blank" rel="noopener noreferrer">https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic</a> GO/20200629003822.png)</p><h4 id="_8-6-1-phoenix创建的表" tabindex="-1"><a class="header-anchor" href="#_8-6-1-phoenix创建的表"><span>8.6.1 Phoenix创建的表</span></a></h4><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 1. 在Phoenix创建的表，在hbase中可以查询到，但是会发现多了每行数据中，会多如下一列数据，&#39;称之为空/虚的keyvalue&#39;：</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66;">      1001</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">     column</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#D19A66;--shiki-dark:#D19A66;">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:_0, </span><span style="color:#C678DD;--shiki-dark:#C678DD;">timestamp</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1593071947795</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#C678DD;--shiki-dark:#C678DD;">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">x  </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 2. 为什么Phoenix在进行upsert时会添加一个空/虚拟KeyValue？</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   在hbase表中，rowkey对应Phoenix表中的主键，如果Phoenix中表只有主键，没有其他列，那么在habse的表中，就只有rowkey，没有列族了。所有通过增加这样一列空的列，确保这行数据即有rowkey，也有列族.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 3. 官网说明：</span></span></code></pre></div><p>![image-20200628234338247](<a href="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic" target="_blank" rel="noopener noreferrer">https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic</a> GO/20200628234338.png)</p><h4 id="_8-6-2-hbase创建的表" tabindex="-1"><a class="header-anchor" href="#_8-6-2-hbase创建的表"><span>8.6.2 HBase创建的表</span></a></h4><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 1. 在HBase表映射方式有两种：视图映射和表映射</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 2. 在Phoenix实现映射的方式：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      a、创建的表名和hbase的表名相同，注意大小写；</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      b、创建一个主键，用来接收hbase表中的rowkey；</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      c、其余的字段，声明方式为：hbase表中的：</span><span style="color:#D19A66;--shiki-dark:#D19A66;">列族</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">列名</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      d、最后需要加上：column_encoded_bytes</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#D19A66;--shiki-dark:#D19A66;">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">，</span><span style="color:#D19A66;--shiki-dark:#D19A66;">使的Phoenix反序列器为bytes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#D19A66;--shiki-dark:#D19A66;">toBytes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()，与hbase序列化器一致，则Phoenix可以</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">         找到hbase表中的列。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> -- 3. 说明：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      a、创建时表名和字段名一定要相同；</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">      b、如果创建的字段在hbase表不存在，也是可以的。相当于空列</span></span></code></pre></div><h5 id="_8-6-2-1-视图映射" tabindex="-1"><a class="header-anchor" href="#_8-6-2-1-视图映射"><span>8.6.2.1 视图映射</span></a></h5><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 1. 创建的视图是只读，只能用来进行查询，无法通过视图对原数据进行修改等操作。</span></span></code></pre></div><ol><li>在hbase准备数据</li></ol><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">create</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;lianzp&#39;</span><span style="color:#98C379;--shiki-dark:#98C379;"> ,&#39;info&#39;，&#39;info1&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">put</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;lianzp&#39;,&#39;1001&#39;,&#39;info:name&#39;,&#39;zs&#39;</span></span></code></pre></div><ol start="2"><li>Phoenix端操操作</li></ol><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--</span><span style="color:#98C379;--shiki-dark:#98C379;"> 创建视图</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">create</span><span style="color:#98C379;--shiki-dark:#98C379;"> view</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;lianzp&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (id </span><span style="color:#98C379;--shiki-dark:#98C379;">varchar</span><span style="color:#98C379;--shiki-dark:#98C379;"> primary</span><span style="color:#98C379;--shiki-dark:#98C379;"> key</span><span style="color:#98C379;--shiki-dark:#98C379;"> ,</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;info&quot;.&quot;name&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> varchar</span><span style="color:#98C379;--shiki-dark:#98C379;"> ,</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;info1&quot;.&quot;address&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ) </span><span style="color:#E06C75;--shiki-dark:#E06C75;">column_encoded_bytes</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--</span><span style="color:#98C379;--shiki-dark:#98C379;"> 删除视图</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">drop</span><span style="color:#98C379;--shiki-dark:#98C379;"> view</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;lianzp&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span></code></pre></div><h5 id="_8-6-2-2-表映射" tabindex="-1"><a class="header-anchor" href="#_8-6-2-2-表映射"><span>8.6.2.2 表映射</span></a></h5><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 只需要将将create view 改成create table 即可。</span></span></code></pre></div><h3 id="_8-7-二级索引" tabindex="-1"><a class="header-anchor" href="#_8-7-二级索引"><span>8.7 二级索引</span></a></h3><h4 id="_8-7-1-修改配置" tabindex="-1"><a class="header-anchor" href="#_8-7-1-修改配置"><span>8.7.1 修改配置</span></a></h4><ul><li>添加如下配置到HBase的HRegionserver节点的hbase-site.xml</li></ul><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  &lt;!-- phoenix regionserver 配置参数--&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;hbase.regionserver.wal.codec&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;org.apache.hadoop.hbase.regionserver.wal.IndexedWALEditCodec&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;hbase.region.server.rpc.scheduler.factory.class&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;org.apache.hadoop.hbase.ipc.PhoenixRpcSchedulerFactory&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">description</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;Factory to create the Phoenix RPC Scheduler that uses separate queues for index and metadata updates&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">description</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;hbase.rpc.controllerfactory.class&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;org.apache.hadoop.hbase.ipc.controller.ServerRpcControllerFactory&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">description</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;Factory to create the Phoenix RPC Scheduler that uses separate queues for index and metadata updates&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">description</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_8-7-2-全局二级索引" tabindex="-1"><a class="header-anchor" href="#_8-7-2-全局二级索引"><span>8.7.2 全局二级索引</span></a></h4><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 1. 创建全局索引时，会在HBase中建立一张新表</span></span></code></pre></div><ol><li>创建单个字段的全局索引</li></ol><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">CREATE</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> INDEX</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> my_index</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> ON</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> my_table (my_col);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">&#39;如果想查询的字段不是索引字段的话,索引表不会被使用，也就是说不会带来查询速度的提升</span></span></code></pre></div><p>![image-20200629010950631](<a href="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic" target="_blank" rel="noopener noreferrer">https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic</a> GO/20200629010950.png)</p><ol start="2"><li>创建携带其他字段的全局索引</li></ol><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">CREATE</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> INDEX</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> my_index</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> ON</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> my_table (v1) </span><span style="color:#C678DD;--shiki-dark:#C678DD;">INCLUDE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (v2);</span></span></code></pre></div><p>![image-20200629011141184](<a href="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic" target="_blank" rel="noopener noreferrer">https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic</a> GO/20200629011141.png)</p><h4 id="_8-7-3-局部二级索引" tabindex="-1"><a class="header-anchor" href="#_8-7-3-局部二级索引"><span>8.7.3 局部二级索引</span></a></h4><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 1. 索引数据和数据表的数据是存放在同一张表中（且是同一个Region）</span></span></code></pre></div><ul><li>创建局部索引</li></ul><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">CREATE</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> LOCAL</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> INDEX</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> my_index </span><span style="color:#C678DD;--shiki-dark:#C678DD;">ON</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> my_table (my_column);</span></span></code></pre></div><p>![image-20200629011154264](<a href="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic" target="_blank" rel="noopener noreferrer">https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic</a> GO/20200629011154.png)</p><h4 id="_8-7-4-局部和全局的选择" tabindex="-1"><a class="header-anchor" href="#_8-7-4-局部和全局的选择"><span>8.7.4 局部和全局的选择</span></a></h4><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 1. 两种索引的介绍</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">全局索引：会单独创建一个新的文件，默认是一个region，同时会采用默认的region split的切分规则；</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">局部索引：在原数据表的插入数据，索引数据和数据表的数据是存放在同一张表中（且是同一个Region）。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 2. 在需要创建索引时，我们是选择创建哪种索引呢？</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">创建索引以后，每次数据的改动都需要更新索引表。</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">两种索引选择的规则如下：</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">&#39;情况1&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">：写操作频繁，则选择局部索引，因为数据和索引在同一张表的同一个region中，所以更新索引的数据就不需要跨节点，</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        避免了在写操作的时候往不同服务器的索引表中写索引带来的额外开销;</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">&#39;情况2&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: 读操作频繁时，则选择全局索引，因为全局索引中可以直接定位到数据，效率高。</span></span></code></pre></div><h3 id="_8-8-phoenix-jdbc操作" tabindex="-1"><a class="header-anchor" href="#_8-8-phoenix-jdbc操作"><span>8.8 Phoenix JDBC操作</span></a></h3><h4 id="_8-8-1-启动query-server" tabindex="-1"><a class="header-anchor" href="#_8-8-1-启动query-server"><span>8.8.1 启动query server</span></a></h4><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>queryserver.py start</span></span></code></pre></div><h4 id="_8-8-2-创建项目并导入依赖" tabindex="-1"><a class="header-anchor" href="#_8-8-2-创建项目并导入依赖"><span>8.8.2 创建项目并导入依赖</span></a></h4><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">dependencies</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        &lt;!-- https://mvnrepository.com/artifact/org.apache.phoenix/phoenix-queryserver-client --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;org.apache.phoenix&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;phoenix-queryserver-client&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;5.0.0-HBase-2.0&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">dependencies</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><h4 id="_8-8-3-编写代码" tabindex="-1"><a class="header-anchor" href="#_8-8-3-编写代码"><span>8.8.3 编写代码</span></a></h4><div class="language-scala line-numbers-mode" data-ext="scala" data-title="scala"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">package</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> com.atguigu;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> java.sql.*;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> org.apache.phoenix.queryserver.client.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">ThinClientUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">public </span><span style="color:#C678DD;--shiki-dark:#C678DD;">class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> PhoenixTest</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">public static void main(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[] args) throws </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">SQLException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> connectionUrl </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> ThinClientUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.getConnectionUrl(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;hadoop105&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#D19A66;--shiki-dark:#D19A66;">8765</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.out.println(connectionUrl);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> connection </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> DriverManager</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.getConnection(connectionUrl);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        PreparedStatement</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> preparedStatement </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> connection.prepareStatement(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;select * from student&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        ResultSet</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> resultSet </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> preparedStatement.executeQuery();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        while</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (resultSet.next()) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">            System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.out.println(resultSet.getString(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">\\t</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> +</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> resultSet.getString(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        //关闭</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        connection.close();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">		}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,251)]))}const B=a(e,[["render",r],["__file","HBase.html.vue"]]),k=JSON.parse('{"path":"/posts/BigData/10_Hbase/HBase.html","title":"HBase","lang":"zh-CN","frontmatter":{"description":"HBase 一、HBase简介 1.1 定义 1.2 HBase数据模型 1.2.1 HBase逻辑结构 ![image-20200623181231019](https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200623181231.png) 1.2.2 HBase的物理结构 ![image-...","head":[["meta",{"property":"og:url","content":"https://mrjackc.github.io/posts/BigData/10_Hbase/HBase.html"}],["meta",{"property":"og:site_name","content":"mrjason’s Blog"}],["meta",{"property":"og:title","content":"HBase"}],["meta",{"property":"og:description","content":"HBase 一、HBase简介 1.1 定义 1.2 HBase数据模型 1.2.1 HBase逻辑结构 ![image-20200623181231019](https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200623181231.png) 1.2.2 HBase的物理结构 ![image-..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200623181231.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-28T01:58:08.000Z"}],["meta",{"property":"article:author","content":"MrJason"}],["meta",{"property":"article:modified_time","content":"2024-10-28T01:58:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"HBase\\",\\"image\\":[\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200623181231.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200810140725.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200623184151.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200623195416.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200623202240.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200623204210.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200623205526.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200623223543.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200623223736.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200623225525.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200628213139.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200629000242.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200629003822.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200628234338.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200629010950.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200629011141.png\\",\\"https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200629011154.png\\"],\\"dateModified\\":\\"2024-10-28T01:58:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MrJason\\",\\"url\\":\\"https://mrjackc.github.io\\"}]}"]]},"headers":[{"level":2,"title":"一、HBase简介","slug":"一、hbase简介","link":"#一、hbase简介","children":[{"level":3,"title":"1.1 定义","slug":"_1-1-定义","link":"#_1-1-定义","children":[]},{"level":3,"title":"1.2 HBase数据模型","slug":"_1-2-hbase数据模型","link":"#_1-2-hbase数据模型","children":[]}]},{"level":2,"title":"二、 HBase的安装","slug":"二、-hbase的安装","link":"#二、-hbase的安装","children":[{"level":3,"title":"2.1 部署zookeeper和Hadoop","slug":"_2-1-部署zookeeper和hadoop","link":"#_2-1-部署zookeeper和hadoop","children":[]},{"level":3,"title":"2.2 解压HBase到指定的位置","slug":"_2-2-解压hbase到指定的位置","link":"#_2-2-解压hbase到指定的位置","children":[]},{"level":3,"title":"2.3 配置环境变量","slug":"_2-3-配置环境变量","link":"#_2-3-配置环境变量","children":[]},{"level":3,"title":"2.4 配置HBase的文件","slug":"_2-4-配置hbase的文件","link":"#_2-4-配置hbase的文件","children":[]},{"level":3,"title":"2.5 分发HBase","slug":"_2-5-分发hbase","link":"#_2-5-分发hbase","children":[]},{"level":3,"title":"2.6 启动HBase","slug":"_2-6-启动hbase","link":"#_2-6-启动hbase","children":[]},{"level":3,"title":"2.7 查看HBase的页面","slug":"_2-7-查看hbase的页面","link":"#_2-7-查看hbase的页面","children":[]},{"level":3,"title":"2.8 master的高可用（可选）","slug":"_2-8-master的高可用-可选","link":"#_2-8-master的高可用-可选","children":[]}]},{"level":2,"title":"三、 HBase的操作","slug":"三、-hbase的操作","link":"#三、-hbase的操作","children":[{"level":3,"title":"3.1 基本操作","slug":"_3-1-基本操作","link":"#_3-1-基本操作","children":[]},{"level":3,"title":"3.2 表的操作","slug":"_3-2-表的操作","link":"#_3-2-表的操作","children":[]},{"level":3,"title":"3.3 namespace操作","slug":"_3-3-namespace操作","link":"#_3-3-namespace操作","children":[]}]},{"level":2,"title":"四、HBase进阶","slug":"四、hbase进阶","link":"#四、hbase进阶","children":[{"level":3,"title":"4.1 Region Server的架构","slug":"_4-1-region-server的架构","link":"#_4-1-region-server的架构","children":[]},{"level":3,"title":"4.2 写流程","slug":"_4-2-写流程","link":"#_4-2-写流程","children":[]},{"level":3,"title":"4.3 MemStore flush时机","slug":"_4-3-memstore-flush时机","link":"#_4-3-memstore-flush时机","children":[]},{"level":3,"title":"4.4 读流程","slug":"_4-4-读流程","link":"#_4-4-读流程","children":[]},{"level":3,"title":"4.5  StoreFile  Compaction","slug":"_4-5-storefile-compaction","link":"#_4-5-storefile-compaction","children":[]},{"level":3,"title":"4.6 多版本","slug":"_4-6-多版本","link":"#_4-6-多版本","children":[]},{"level":3,"title":"4.7 Region Split","slug":"_4-7-region-split","link":"#_4-7-region-split","children":[]},{"level":3,"title":"4.8  一些命令","slug":"_4-8-一些命令","link":"#_4-8-一些命令","children":[]}]},{"level":2,"title":"五 、 HBase API","slug":"五-、-hbase-api","link":"#五-、-hbase-api","children":[{"level":3,"title":"5.1 环境准备","slug":"_5-1-环境准备","link":"#_5-1-环境准备","children":[]},{"level":3,"title":"5.2 DDL","slug":"_5-2-ddl","link":"#_5-2-ddl","children":[]},{"level":3,"title":"5.3 DML","slug":"_5-3-dml","link":"#_5-3-dml","children":[]}]},{"level":2,"title":"六、HBase的优化","slug":"六、hbase的优化","link":"#六、hbase的优化","children":[{"level":3,"title":"6.1 预分区","slug":"_6-1-预分区","link":"#_6-1-预分区","children":[]},{"level":3,"title":"6.2 RowKey设计","slug":"_6-2-rowkey设计","link":"#_6-2-rowkey设计","children":[]},{"level":3,"title":"6.3 内存优化","slug":"_6-3-内存优化","link":"#_6-3-内存优化","children":[]},{"level":3,"title":"6.4 基础优化","slug":"_6-4-基础优化","link":"#_6-4-基础优化","children":[]}]},{"level":2,"title":"七、与Hive的集成","slug":"七、与hive的集成","link":"#七、与hive的集成","children":[{"level":3,"title":"7.1 HBase与Hive的对比","slug":"_7-1-hbase与hive的对比","link":"#_7-1-hbase与hive的对比","children":[]},{"level":3,"title":"7.2 HBase 与 Hive集成使用","slug":"_7-2-hbase-与-hive集成使用","link":"#_7-2-hbase-与-hive集成使用","children":[]},{"level":3,"title":"7.3 案例一","slug":"_7-3-案例一","link":"#_7-3-案例一","children":[]},{"level":3,"title":"7.4 案例二","slug":"_7-4-案例二","link":"#_7-4-案例二","children":[]}]},{"level":2,"title":"八、Phoenix","slug":"八、phoenix","link":"#八、phoenix","children":[{"level":3,"title":"8.1 Phoenix简介","slug":"_8-1-phoenix简介","link":"#_8-1-phoenix简介","children":[]},{"level":3,"title":"8.2  Phoenix特点","slug":"_8-2-phoenix特点","link":"#_8-2-phoenix特点","children":[]},{"level":3,"title":"8.3 Phoenix架构","slug":"_8-3-phoenix架构","link":"#_8-3-phoenix架构","children":[]},{"level":3,"title":"8.4 Phoenix安装","slug":"_8-4-phoenix安装","link":"#_8-4-phoenix安装","children":[]},{"level":3,"title":"8.5 Phoenix Shell 操作","slug":"_8-5-phoenix-shell-操作","link":"#_8-5-phoenix-shell-操作","children":[]},{"level":3,"title":"8.6 Phoenix与hbase表映射","slug":"_8-6-phoenix与hbase表映射","link":"#_8-6-phoenix与hbase表映射","children":[]},{"level":3,"title":"8.7 二级索引","slug":"_8-7-二级索引","link":"#_8-7-二级索引","children":[]},{"level":3,"title":"8.8 Phoenix JDBC操作","slug":"_8-8-phoenix-jdbc操作","link":"#_8-8-phoenix-jdbc操作","children":[]}]}],"git":{"createdTime":1730080688000,"updatedTime":1730080688000,"contributors":[{"name":"MrJason","email":"845886914@qq.com","commits":1}]},"readingTime":{"minutes":29.29,"words":8788},"filePathRelative":"posts/BigData/10_Hbase/HBase.md","localizedDate":"2024年10月28日","excerpt":"\\n<hr>\\n<h2>一、HBase简介</h2>\\n<h3>1.1 定义</h3>\\n<div class=\\"language-sql line-numbers-mode\\" data-ext=\\"sql\\" data-title=\\"sql\\"><pre class=\\"shiki shiki-themes one-dark-pro one-dark-pro vp-code\\" style=\\"background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">-- 1. HBase是什么？</span></span>\\n<span class=\\"line\\"><span style=\\"color:#D19A66;--shiki-dark:#D19A66\\">    1</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">. 分布式</span></span>\\n<span class=\\"line\\"><span style=\\"color:#D19A66;--shiki-dark:#D19A66\\">    2</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">. 可扩展</span></span>\\n<span class=\\"line\\"><span style=\\"color:#D19A66;--shiki-dark:#D19A66\\">    3</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">. 支持海量数据的存储</span></span>\\n<span class=\\"line\\"><span style=\\"color:#D19A66;--shiki-dark:#D19A66\\">    4</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">. NoSQL的数据库。</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">-- 2. 说明：</span></span>\\n<span class=\\"line\\"><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">   a、NoSQL: </span><span style=\\"color:#C678DD;--shiki-dark:#C678DD\\">Not</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\"> only </span><span style=\\"color:#C678DD;--shiki-dark:#C678DD\\">SQL</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">，不仅仅是一个数据库</span></span>\\n<span class=\\"line\\"><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">   b、是基于谷歌的三篇论文之bigtable生成的。</span></span>\\n<span class=\\"line\\"><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">   c、HBase：理解为Hadoop base</span></span>\\n<span class=\\"line\\"><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">   </span></span>\\n<span class=\\"line\\"><span style=\\"color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">-- 3. 大数据框架：</span></span>\\n<span class=\\"line\\"><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">   a、数据的存储：hdfs / hive / hbase</span></span>\\n<span class=\\"line\\"><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">   b、数据的传输：flume / sqoop</span></span>\\n<span class=\\"line\\"><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">   c、数据的计算：tez / mr / spark / flink</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">-- 4. 和传统数据库的差别：</span></span>\\n<span class=\\"line\\"><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">   传统数据库的结构：数据库 </span><span style=\\"color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">--&gt; 表 --&gt; 行和列</span></span>\\n<span class=\\"line\\"><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">   HBase的结构 ： </span><span style=\\"color:#C678DD;--shiki-dark:#C678DD\\">namespace</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">(命名空间) </span><span style=\\"color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">--&gt; table --&gt; 列族 --&gt; 行和列 --&gt; orgion --&gt; store</span></span>\\n<span class=\\"line\\"><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">   HBase可以理解为多维的map，嵌套的map结构。</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{B as comp,k as data};
