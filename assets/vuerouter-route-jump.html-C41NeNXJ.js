import{_ as a,c as r,a as o,o as e}from"./app-B-YfeyLA.js";const n={};function i(t,s){return e(),r("div",null,s[0]||(s[0]=[o(`<h1 id="vue-router路由跳转" tabindex="-1"><a class="header-anchor" href="#vue-router路由跳转"><span>Vue Router路由跳转</span></a></h1><h2 id="_1-简单的跳转" tabindex="-1"><a class="header-anchor" href="#_1-简单的跳转"><span>1. 简单的跳转</span></a></h2><div class="language-vue" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">router-link</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> :</span><span style="color:#D19A66;--shiki-dark:#D19A66;">to</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">...</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><h2 id="_2-router-push-跳转" tabindex="-1"><a class="header-anchor" href="#_2-router-push-跳转"><span>2. Router.push() 跳转</span></a></h2><p>想要导航到不同的 URL，则使用 <code>router.push</code> 方法。这个方法会向 history 栈添加一个新的记录，所以，当用户点击浏览器后退按钮时，则回到之前的 URL。</p><blockquote><p>非history，就无法用go()</p></blockquote><table><thead><tr><th>声明式</th><th>编程式</th></tr></thead><tbody><tr><td><code>&lt;router-link :to=&quot;...&quot;&gt;</code></td><td><code>router.push(...)</code></td></tr></tbody></table><h3 id="_2-1-常用push-方法" tabindex="-1"><a class="header-anchor" href="#_2-1-常用push-方法"><span>2.1 常用push()方法</span></a></h3><p>该方法的参数可以是一个字符串路径，或者一个描述地址的对象。例如：</p><div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 字符串</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">router</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">push</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;home&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 对象</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">router</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">push</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">({ </span><span style="color:#E06C75;--shiki-dark:#E06C75;">path</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;home&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 命名的路由</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">router</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">push</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">({ </span><span style="color:#E06C75;--shiki-dark:#E06C75;">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;user&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E06C75;--shiki-dark:#E06C75;">params</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: { </span><span style="color:#E06C75;--shiki-dark:#E06C75;">userId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;123&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> }})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 带查询参数，变成 /register?plan=private</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">router</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">push</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">({ </span><span style="color:#E06C75;--shiki-dark:#E06C75;">path</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;register&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E06C75;--shiki-dark:#E06C75;">query</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: { </span><span style="color:#E06C75;--shiki-dark:#E06C75;">plan</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;private&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> }})</span></span></code></pre></div><h2 id="_2-2-params-被忽略的问题" tabindex="-1"><a class="header-anchor" href="#_2-2-params-被忽略的问题"><span>2.2 params 被忽略的问题</span></a></h2><p><strong>如果提供了 <code>path</code>，<code>params</code> 会被忽略，</strong></p><p>解决方案：需要提供路由的 <code>name</code> 或手写完整的带有参数的 <code>path</code>：</p><div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">const</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> userId</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;123&#39;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">router</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">push</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">({ </span><span style="color:#E06C75;--shiki-dark:#E06C75;">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;user&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E06C75;--shiki-dark:#E06C75;">params</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: { </span><span style="color:#E06C75;--shiki-dark:#E06C75;">userId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> }}) </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// -&gt; /user/123</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">router</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">push</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">({ </span><span style="color:#E06C75;--shiki-dark:#E06C75;">path</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">\`/user/</span><span style="color:#C678DD;--shiki-dark:#C678DD;">\${</span><span style="color:#E06C75;--shiki-dark:#E06C75;">userId</span><span style="color:#C678DD;--shiki-dark:#C678DD;">}</span><span style="color:#98C379;--shiki-dark:#98C379;">\`</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> }) </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// -&gt; /user/123</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 这里的 params 不生效</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">router</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">push</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">({ </span><span style="color:#E06C75;--shiki-dark:#E06C75;">path</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&#39;/user&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E06C75;--shiki-dark:#E06C75;">params</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: { </span><span style="color:#E06C75;--shiki-dark:#E06C75;">userId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> }}) </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// -&gt; /user</span></span></code></pre></div><h2 id="_3-router-replace-跳转" tabindex="-1"><a class="header-anchor" href="#_3-router-replace-跳转"><span>3. router.replace() 跳转</span></a></h2><p>跟 <code>router.push</code> 很像，唯一的不同就是，<strong>它不会向 history 添加新记录</strong>，而是跟它的方法名一样 —— 替换掉当前的 history 记录。</p><table><thead><tr><th>声明式</th><th>编程式</th></tr></thead><tbody><tr><td><code>&lt;router-link :to=&quot;...&quot; replace&gt;</code></td><td><code>router.replace(...)</code></td></tr></tbody></table><h2 id="_4-router-go-n" tabindex="-1"><a class="header-anchor" href="#_4-router-go-n"><span>4. router.go(n)</span></a></h2><p>这个方法的参数是一个整数，意思是在 <strong>history 记录</strong>中向前或者后退多少步，类似 <code>window.history.go(n)</code>。</p><p>例子</p><div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 在浏览器记录中前进一步，等同于 history.forward()</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">router</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">go</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 后退一步记录，等同于 history.back()</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">router</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">go</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="color:#D19A66;--shiki-dark:#D19A66;">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 前进 3 步记录</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">router</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">go</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 如果 history 记录不够用，那就默默地失败呗</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">router</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">go</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="color:#D19A66;--shiki-dark:#D19A66;">100</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">router</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">go</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">100</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span></code></pre></div><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章"><span>参考文章</span></a></h2><p><a href="https://router.vuejs.org/zh/guide/essentials/navigation.html" target="_blank" rel="noopener noreferrer">编程式的导航</a></p>`,23)]))}const p=a(n,[["render",i],["__file","vuerouter-route-jump.html.vue"]]),B=JSON.parse('{"path":"/posts/Web/frontend-vue/vuerouter-route-jump.html","title":"Vue Router路由跳转","lang":"zh-CN","frontmatter":{"description":"Vue Router路由跳转 1. 简单的跳转 2. Router.push() 跳转 想要导航到不同的 URL，则使用 router.push 方法。这个方法会向 history 栈添加一个新的记录，所以，当用户点击浏览器后退按钮时，则回到之前的 URL。 非history，就无法用go() 2.1 常用push()方法 该方法的参数可以是一个字符串...","head":[["meta",{"property":"og:url","content":"https://mrjackc.github.io/posts/Web/frontend-vue/vuerouter-route-jump.html"}],["meta",{"property":"og:site_name","content":"mrjason’s Blog"}],["meta",{"property":"og:title","content":"Vue Router路由跳转"}],["meta",{"property":"og:description","content":"Vue Router路由跳转 1. 简单的跳转 2. Router.push() 跳转 想要导航到不同的 URL，则使用 router.push 方法。这个方法会向 history 栈添加一个新的记录，所以，当用户点击浏览器后退按钮时，则回到之前的 URL。 非history，就无法用go() 2.1 常用push()方法 该方法的参数可以是一个字符串..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-21T07:03:09.000Z"}],["meta",{"property":"article:author","content":"MrJason"}],["meta",{"property":"article:modified_time","content":"2024-10-21T07:03:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Vue Router路由跳转\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-21T07:03:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MrJason\\",\\"url\\":\\"https://mrjackc.github.io\\"}]}"]]},"headers":[{"level":2,"title":"1. 简单的跳转","slug":"_1-简单的跳转","link":"#_1-简单的跳转","children":[]},{"level":2,"title":"2. Router.push() 跳转","slug":"_2-router-push-跳转","link":"#_2-router-push-跳转","children":[{"level":3,"title":"2.1 常用push()方法","slug":"_2-1-常用push-方法","link":"#_2-1-常用push-方法","children":[]}]},{"level":2,"title":"2.2 params 被忽略的问题","slug":"_2-2-params-被忽略的问题","link":"#_2-2-params-被忽略的问题","children":[]},{"level":2,"title":"3. router.replace() 跳转","slug":"_3-router-replace-跳转","link":"#_3-router-replace-跳转","children":[]},{"level":2,"title":"4. router.go(n)","slug":"_4-router-go-n","link":"#_4-router-go-n","children":[]},{"level":2,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}],"git":{"createdTime":1729494189000,"updatedTime":1729494189000,"contributors":[{"name":"MrJason","email":"845886914@qq.com","commits":1}]},"readingTime":{"minutes":1.38,"words":414},"filePathRelative":"posts/Web/frontend-vue/vuerouter-route-jump.md","localizedDate":"2024年10月21日","excerpt":"\\n<h2>1. 简单的跳转</h2>\\n<div class=\\"language-vue\\" data-ext=\\"vue\\" data-title=\\"vue\\"><pre class=\\"shiki shiki-themes one-dark-pro one-dark-pro vp-code\\" style=\\"background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">&lt;</span><span style=\\"color:#E06C75;--shiki-dark:#E06C75\\">router-link</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\"> :</span><span style=\\"color:#D19A66;--shiki-dark:#D19A66\\">to</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">=</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">\\"</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">...</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">\\"</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\">&gt;</span></span></code></pre>\\n</div>","autoDesc":true}');export{p as comp,B as data};
