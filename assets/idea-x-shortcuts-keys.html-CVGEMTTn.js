import{_ as d,c as r,a as e,o as a}from"./app-mWs04Xnh.js";const n={};function l(h,t){return a(),r("div",null,t[0]||(t[0]=[e('<h1 id="idea常用快捷键-mac和win" tabindex="-1"><a class="header-anchor" href="#idea常用快捷键-mac和win"><span>IDEA常用快捷键（MAC和WIN）</span></a></h1><h2 id="_1-最常用的快捷键" tabindex="-1"><a class="header-anchor" href="#_1-最常用的快捷键"><span>1. 最常用的快捷键</span></a></h2><h3 id="_1-1-编辑" tabindex="-1"><a class="header-anchor" href="#_1-1-编辑"><span>1.1 编辑</span></a></h3><table><thead><tr><th>快捷键功能</th><th>WIN</th><th>MAC</th></tr></thead><tbody><tr><td>格式化代码</td><td>Ctrl + Alt + L</td><td>Command + Option + L</td></tr><tr><td>所选择的内容进行大小写转换</td><td>Ctrl + Shift + U</td><td>Command + Shift + U</td></tr><tr><td>复制当前选中的代码</td><td>Ctrl + D</td><td></td></tr><tr><td>删除当前光标所在的代码行</td><td>Ctrl + Y</td><td></td></tr><tr><td>展开或收缩代码段。</td><td>Ctrl + NumPad(+/-)</td><td><code>Command</code> + 加号 / <code>Command</code> + 减号</td></tr><tr><td>展开所以代码块</td><td></td><td><code>Command + Shift</code> + 加号</td></tr><tr><td>折叠所有代码块</td><td></td><td><code>Command + Shift</code> + 减号</td></tr><tr><td>修改名字</td><td>Shift + F6</td><td></td></tr><tr><td>自动生成某个类的 Getters, Setters, Constructors, hashCode/equals, toString 等代码</td><td>Alt + Insert</td><td>Command + N<code>, </code>Control + Enter</td></tr><tr><td>自动生成具有环绕性质的代码，比如：if..else,try..catch, for, synchronized 等等，使用前要先选择好需要环绕的代码块。</td><td>Ctrl + Alt + T</td><td></td></tr><tr><td>剪切当前代码</td><td>Ctrl + X</td><td></td></tr><tr><td>拷贝当前代码</td><td>Ctrl + C</td><td></td></tr><tr><td>粘贴之前剪切或拷贝的代码</td><td>Ctrl + V</td><td></td></tr><tr><td>显示方法的参数信息</td><td>Command + P</td><td></td></tr></tbody></table><h3 id="_1-2-查找和替换【search-replace】" tabindex="-1"><a class="header-anchor" href="#_1-2-查找和替换【search-replace】"><span>1.2 查找和替换【Search/Replace】</span></a></h3><table><thead><tr><th>快捷键功能</th><th>WIN</th><th>MAC</th></tr></thead><tbody><tr><td>文件内查找</td><td>Ctrl + F</td><td>Command + F</td></tr><tr><td>查找模式下，向下查找</td><td>F3</td><td>Command + G</td></tr><tr><td>查找模式下，向上查找</td><td>Shift + F3</td><td>Command + Shift + G</td></tr><tr><td>文件内替换</td><td>Ctrl + R</td><td>Command + R</td></tr><tr><td>全局查找（根据路径）</td><td>Ctrl + Shift + F</td><td>Command + Shift + F</td></tr><tr><td>全局替换（根据路径）</td><td>Ctrl + Shift + R</td><td>Command + Shift + R</td></tr><tr><td><strong>查询任何东西</strong></td><td></td><td>Double Shift</td></tr></tbody></table><h3 id="_1-3-使用情况" tabindex="-1"><a class="header-anchor" href="#_1-3-使用情况"><span>1.3 使用情况</span></a></h3><table><thead><tr><th>快捷键功能</th><th>WIN</th><th>MAC</th></tr></thead><tbody><tr><td>打开使用情况列表（常用）</td><td>Ctrl + Alt + F7</td><td></td></tr><tr><td>在当前项目中的使用情况，会打开一个使用情况面板。</td><td>Alt + F7</td><td></td></tr></tbody></table><h3 id="_1-4-编译和运行" tabindex="-1"><a class="header-anchor" href="#_1-4-编译和运行"><span>1.4 编译和运行</span></a></h3><table><thead><tr><th>快捷键功能</th><th>WIN</th><th>MAC</th></tr></thead><tbody><tr><td>立即运行当前配置的运行实例</td><td>Shift + F10</td><td></td></tr><tr><td>debug当前配置的实例</td><td>Shift + F9</td><td></td></tr></tbody></table><h3 id="_1-5-调试" tabindex="-1"><a class="header-anchor" href="#_1-5-调试"><span>1.5 调试</span></a></h3><table><thead><tr><th>快捷键功能</th><th>WIN</th><th>MAC</th></tr></thead><tbody><tr><td>跳到当前代码下一行</td><td>F8</td><td></td></tr><tr><td>跳入到调用的方法内部代码。</td><td>F7</td><td></td></tr><tr><td>跳出当前的类，到上一级。</td><td>Shift + F8</td><td></td></tr><tr><td>让代码运行到当前光标所在处，非常棒的功能。 （常用）</td><td>Alt + F9</td><td></td></tr><tr><td>结束当前断点的本轮调试（因为有可能代码会被调用多次，所以调用后只会结束当前的这一次）；如果有下一个断点会跳到下一个断点中。（常用）</td><td>F9</td><td></td></tr></tbody></table><h3 id="_1-5-导航【navigation】" tabindex="-1"><a class="header-anchor" href="#_1-5-导航【navigation】"><span>1.5 导航【Navigation】</span></a></h3><table><thead><tr><th>快捷键功能</th><th>WIN</th><th>MAC</th></tr></thead><tbody><tr><td>弹出当前文件结构层，可以在弹出的层上直接输入进行筛选（<strong>可用于搜索类中的方法</strong>）</td><td>Ctrl + F12</td><td>Command + F12</td></tr><tr><td>显示当前类的层次结构（可以查看<strong>继承和实现</strong>）</td><td>Ctrl + H</td><td>Control + H<br></td></tr><tr><td>显示<strong>调用层次结构</strong></td><td></td><td>Control + Option + H</td></tr><tr><td>查找类文件</td><td></td><td>Command + O</td></tr><tr><td>查找所有类型文件</td><td></td><td>Command + Shift + O</td></tr><tr><td></td><td></td><td></td></tr><tr><td>查看类图</td><td>弹窗：Ctrl + ALT+U<br>新窗口：Ctrl + ALT+shift+U&lt;br</td><td>shift+option+Command+U</td></tr><tr><td>打开所有类的方法列表，这些方法都调用了当前光标所处的某个类方法。（常用）</td><td>Ctrl + Alt + H</td><td></td></tr><tr><td>在编译错误的代码行中来回跳。</td><td>F2/Shift + F2</td><td></td></tr><tr><td>跳转至某一行代码</td><td>Ctrl + G</td><td></td></tr><tr><td>打开曾经操作过的文件历史列表</td><td>Ctrl + E</td><td></td></tr><tr><td>在曾经浏览过的代码行中来回跳</td><td>Ctrl + Alt + 右箭头/左箭头</td><td></td></tr><tr><td>跳转到最近的编辑位置（如果曾经编辑过代码）。</td><td>Ctrl + Shift + Backspace</td><td></td></tr><tr><td>如果是类，那么会跳转到当前光标所在的类定义或者接口；如果是变量，会打开一个变量被引用的列表。（常用）</td><td>Ctrl + B 或 Ctrl + 鼠标左键</td><td></td></tr><tr><td>跳转到实现类，而不是接口。（常用）</td><td>Ctrl + Alt + B</td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h3 id="_1-6-重构-refactoring" tabindex="-1"><a class="header-anchor" href="#_1-6-重构-refactoring"><span>1.6 重构（Refactoring）</span></a></h3><table><thead><tr><th>快捷键功能</th><th>WIN</th><th>MAC</th></tr></thead><tbody><tr><td>重命名文件</td><td></td><td>fn+Shift + F6</td></tr><tr><td>将选中的代码提取为方法</td><td></td><td>Command + Option + M</td></tr></tbody></table><h2 id="_2-一般常用的快捷键" tabindex="-1"><a class="header-anchor" href="#_2-一般常用的快捷键"><span>2. 一般常用的快捷键</span></a></h2><h3 id="_2-1-编辑" tabindex="-1"><a class="header-anchor" href="#_2-1-编辑"><span>2.1 编辑</span></a></h3><table><thead><tr><th>快捷键功能</th><th>WIN</th><th>MAC</th></tr></thead><tbody><tr><td>选中当前光标所在的代码块，多次触发，代码块会逐级变大。（常用）</td><td>Ctrl + W（反向Ctrl + Shift + W）</td><td></td></tr><tr><td>从当前光标所在位置开始，一直选择到当前光标所在代码段起始或者结束位置。</td><td>Ctrl + Shift + ]/[</td><td></td></tr><tr><td>删除从当前光标所在位置开始，直到这个单词的结尾的内容。</td><td>Ctrl + Delete</td><td></td></tr><tr><td>去除没有实际用到的包，这在 java 类中特别有用</td><td>Ctrl + Alt + O</td><td></td></tr><tr><td>展开所有代码段。</td><td>Ctrl + Shift + NumPad(+)</td><td></td></tr><tr><td>收缩所有代码段。</td><td>Ctrl + Shift + NumPad(-)</td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h3 id="_2-2-导航" tabindex="-1"><a class="header-anchor" href="#_2-2-导航"><span>2.2 导航</span></a></h3><table><thead><tr><th>快捷键功能</th><th>WIN</th><th>MAC</th></tr></thead><tbody><tr><td>在某个类中，跳到上一个/下一个方法的签名上。</td><td>Alt + 上/下箭头</td><td></td></tr><tr><td>打开类查询框（查找类）</td><td>Ctrl + N</td><td></td></tr><tr><td>打开文件查询框</td><td>Ctrl + Shift + N</td><td></td></tr><tr><td>跳到下一个/上一个编辑器标签。</td><td>Alt + 右箭头/左箭头</td><td></td></tr><tr><td>打开一个面板，里面包含类代码。</td><td>Ctrl + Shift + I</td><td></td></tr><tr><td>打开变量的类型所对应的类代码，只对变量有用。</td><td>Ctrl + Shift + B</td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h2 id="_3-特定场景快捷键" tabindex="-1"><a class="header-anchor" href="#_3-特定场景快捷键"><span>3. 特定场景快捷键</span></a></h2><h3 id="_3-1-书签的快捷键" tabindex="-1"><a class="header-anchor" href="#_3-1-书签的快捷键"><span>3.1 书签的快捷键</span></a></h3><table><thead><tr><th>快捷键功能</th><th>WIN</th><th>MAC</th></tr></thead><tbody><tr><td>选中文件 / 文件夹 / 代码行，<strong>添加 / 取消书签</strong></td><td>F11</td><td>fn+F3</td></tr><tr><td>选中文件 / 文件夹/代码行，使用助记符添加 / 取消书签</td><td>Ctrl + F11</td><td>fn+Option + F3</td></tr><tr><td>定位到对应数值的书签位置</td><td>Ctrl + [0-9]</td><td>Control + 0<code>…</code>Control + 9</td></tr><tr><td>打开书签列表。（常用）</td><td>Shift + F11</td><td>fn+Command + F3</td></tr></tbody></table><h2 id="_4-mac-键盘符号和修饰键说明" tabindex="-1"><a class="header-anchor" href="#_4-mac-键盘符号和修饰键说明"><span>4. Mac 键盘符号和修饰键说明</span></a></h2><ul><li>⌘ ——&gt; Command</li><li>⇧ ——&gt; Shift</li><li>⌥ ——&gt; Option</li><li>⌃ ——&gt; Control</li><li>↩︎ ——&gt; Return/Enter</li><li>⌫ ——&gt; Delete</li><li>⌦ ——&gt; 向前删除键(Fn + Delete)</li><li>↑ ——&gt; 上箭头</li><li>↓ ——&gt; 下箭头</li><li>← ——&gt; 左箭头</li><li>→ ——&gt; 右箭头</li><li>⇞ ——&gt; Page Up(Fn + ↑)</li><li>⇟ ——&gt; Page Down(Fn + ↓)</li><li>⇥ ——&gt; 右制表符(Tab键)</li><li>⇤ ——&gt; 左制表符(Shift + Tab)</li><li>⎋ ——&gt; Escape(Esc)</li><li>End ——&gt; Fn + →</li><li>Home ——&gt; Fn + ←</li></ul><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章"><span>参考文章</span></a></h2><p><a href="https://juejin.im/post/6844903566302248974" target="_blank" rel="noopener noreferrer">IntelliJ IDEA 快捷键说明大全（中英对照、带图示详解）</a></p><p><a href="https://blog.csdn.net/qq_35246620/article/details/78263380" target="_blank" rel="noopener noreferrer">IntelliJ IDEA 常用快捷键 之 Mac 版</a></p>',29)]))}const o=d(n,[["render",l],["__file","idea-x-shortcuts-keys.html.vue"]]),s=JSON.parse('{"path":"/posts/Development-Tools/IDEA/idea-x-shortcuts-keys.html","title":"IDEA常用快捷键（MAC和WIN）","lang":"zh-CN","frontmatter":{"aliases":"IDEA常用快捷键（MAC和WIN）","tags":null,"cssclass":null,"source":null,"created":"2024-02-22 10:50","updated":"2024-04-23 10:28","description":"IDEA常用快捷键（MAC和WIN） 1. 最常用的快捷键 1.1 编辑 1.2 查找和替换【Search/Replace】 1.3 使用情况 1.4 编译和运行 1.5 调试 1.5 导航【Navigation】 1.6 重构（Refactoring） 2. 一般常用的快捷键 2.1 编辑 2.2 导航 3. 特定场景快捷键 3.1 书签的快捷键 4...","head":[["meta",{"property":"og:url","content":"https://springg.us.kg/posts/Development-Tools/IDEA/idea-x-shortcuts-keys.html"}],["meta",{"property":"og:site_name","content":"mrjason’s Blog"}],["meta",{"property":"og:title","content":"IDEA常用快捷键（MAC和WIN）"}],["meta",{"property":"og:description","content":"IDEA常用快捷键（MAC和WIN） 1. 最常用的快捷键 1.1 编辑 1.2 查找和替换【Search/Replace】 1.3 使用情况 1.4 编译和运行 1.5 调试 1.5 导航【Navigation】 1.6 重构（Refactoring） 2. 一般常用的快捷键 2.1 编辑 2.2 导航 3. 特定场景快捷键 3.1 书签的快捷键 4..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-28T01:58:08.000Z"}],["meta",{"property":"article:author","content":"MrJason"}],["meta",{"property":"article:modified_time","content":"2024-10-28T01:58:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"IDEA常用快捷键（MAC和WIN）\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-28T01:58:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MrJason\\",\\"url\\":\\"https://springg.us.kg\\"}]}"]]},"headers":[{"level":2,"title":"1. 最常用的快捷键","slug":"_1-最常用的快捷键","link":"#_1-最常用的快捷键","children":[{"level":3,"title":"1.1 编辑","slug":"_1-1-编辑","link":"#_1-1-编辑","children":[]},{"level":3,"title":"1.2 查找和替换【Search/Replace】","slug":"_1-2-查找和替换【search-replace】","link":"#_1-2-查找和替换【search-replace】","children":[]},{"level":3,"title":"1.3 使用情况","slug":"_1-3-使用情况","link":"#_1-3-使用情况","children":[]},{"level":3,"title":"1.4 编译和运行","slug":"_1-4-编译和运行","link":"#_1-4-编译和运行","children":[]},{"level":3,"title":"1.5 调试","slug":"_1-5-调试","link":"#_1-5-调试","children":[]},{"level":3,"title":"1.5 导航【Navigation】","slug":"_1-5-导航【navigation】","link":"#_1-5-导航【navigation】","children":[]},{"level":3,"title":"1.6 重构（Refactoring）","slug":"_1-6-重构-refactoring","link":"#_1-6-重构-refactoring","children":[]}]},{"level":2,"title":"2. 一般常用的快捷键","slug":"_2-一般常用的快捷键","link":"#_2-一般常用的快捷键","children":[{"level":3,"title":"2.1 编辑","slug":"_2-1-编辑","link":"#_2-1-编辑","children":[]},{"level":3,"title":"2.2 导航","slug":"_2-2-导航","link":"#_2-2-导航","children":[]}]},{"level":2,"title":"3. 特定场景快捷键","slug":"_3-特定场景快捷键","link":"#_3-特定场景快捷键","children":[{"level":3,"title":"3.1 书签的快捷键","slug":"_3-1-书签的快捷键","link":"#_3-1-书签的快捷键","children":[]}]},{"level":2,"title":"4. Mac 键盘符号和修饰键说明","slug":"_4-mac-键盘符号和修饰键说明","link":"#_4-mac-键盘符号和修饰键说明","children":[]},{"level":2,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}],"git":{"createdTime":1730080688000,"updatedTime":1730080688000,"contributors":[{"name":"MrJason","email":"845886914@qq.com","commits":1}]},"readingTime":{"minutes":4.63,"words":1390},"filePathRelative":"posts/Development-Tools/IDEA/idea-x-shortcuts-keys.md","localizedDate":"2024年10月28日","excerpt":"\\n<h2>1. 最常用的快捷键</h2>\\n<h3>1.1 编辑</h3>\\n<table>\\n<thead>\\n<tr>\\n<th>快捷键功能</th>\\n<th>WIN</th>\\n<th>MAC</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>格式化代码</td>\\n<td>Ctrl + Alt + L</td>\\n<td>Command + Option + L</td>\\n</tr>\\n<tr>\\n<td>所选择的内容进行大小写转换</td>\\n<td>Ctrl + Shift + U</td>\\n<td>Command + Shift + U</td>\\n</tr>\\n<tr>\\n<td>复制当前选中的代码</td>\\n<td>Ctrl + D</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>删除当前光标所在的代码行</td>\\n<td>Ctrl + Y</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>展开或收缩代码段。</td>\\n<td>Ctrl + NumPad(+/-)</td>\\n<td><code>Command</code> + 加号 / <code>Command</code> + 减号</td>\\n</tr>\\n<tr>\\n<td>展开所以代码块</td>\\n<td></td>\\n<td><code>Command + Shift</code> + 加号</td>\\n</tr>\\n<tr>\\n<td>折叠所有代码块</td>\\n<td></td>\\n<td><code>Command + Shift</code> + 减号</td>\\n</tr>\\n<tr>\\n<td>修改名字</td>\\n<td>Shift + F6</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>自动生成某个类的 Getters, Setters, Constructors, hashCode/equals, toString 等代码</td>\\n<td>Alt + Insert</td>\\n<td>Command + N<code>, </code>Control + Enter</td>\\n</tr>\\n<tr>\\n<td>自动生成具有环绕性质的代码，比如：if..else,try..catch, for, synchronized 等等，使用前要先选择好需要环绕的代码块。</td>\\n<td>Ctrl + Alt + T</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>剪切当前代码</td>\\n<td>Ctrl + X</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>拷贝当前代码</td>\\n<td>Ctrl + C</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>粘贴之前剪切或拷贝的代码</td>\\n<td>Ctrl + V</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>显示方法的参数信息</td>\\n<td>Command + P</td>\\n<td></td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{o as comp,s as data};
