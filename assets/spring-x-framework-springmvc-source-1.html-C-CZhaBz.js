import{_ as a,c as n,a as i,o as l}from"./app-CQys7GfP.js";const r={};function e(o,s){return l(),n("div",null,s[0]||(s[0]=[i(`<h1 id="spring进阶-springmvc实现原理之dispatcherservlet的初始化过程" tabindex="-1"><a class="header-anchor" href="#spring进阶-springmvc实现原理之dispatcherservlet的初始化过程"><span>Spring进阶 - SpringMVC实现原理之DispatcherServlet的初始化过程</span></a></h1><blockquote><p>前文我们有了IOC的源码基础以及SpringMVC的基础，我们便可以进一步深入理解SpringMVC主要实现原理，包含DispatcherServlet的初始化过程和DispatcherServlet处理请求的过程的源码解析。本文是第一篇：DispatcherServlet的初始化过程的源码解析。</p></blockquote><h2 id="_1-dispatcherservlet和applicationcontext有何关系" tabindex="-1"><a class="header-anchor" href="#_1-dispatcherservlet和applicationcontext有何关系"><span>1. DispatcherServlet和ApplicationContext有何关系？</span></a></h2><blockquote><p>DispatcherServlet 作为一个 Servlet，需要根据 Servlet 规范使用 Java 配置或 web.xml 声明和映射。反过来，DispatcherServlet 使用 Spring 配置来发现请求映射、视图解析、异常处理等等所需的委托组件。那它和ApplicationContext有和关系呢？如下内容可以参考<a href="https://docs.spring.io/spring-framework/docs/current/reference/html/web.html#mvc-servlet" target="_blank" rel="noopener noreferrer">官网-SpringMVC文档</a></p></blockquote><p>DispatcherServlet 需要 WebApplicationContext（继承自 ApplicationContext） 来配置。WebApplicationContext 可以链接到ServletContext 和 Servlet。因为绑定了 ServletContext，这样应用程序就可以在需要的时候使用 RequestContextUtils 的静态方法访问 WebApplicationContext。</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> DispatcherServlet</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> extends</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> FrameworkServlet</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> DispatcherServlet</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">setDispatchOptionsRequest</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  	// 1. DispatcherServlet 需要 WebApplicationContext（继承自 ApplicationContext） 来配置。</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    public</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> DispatcherServlet</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">WebApplicationContext</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> webApplicationContext</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        super</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(webApplicationContext);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">setDispatchOptionsRequest</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#D19A66;--shiki-dark:#D19A66;">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> interface</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> WebApplicationContext</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> extends</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> ApplicationContext</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> WebApplicationContext</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> +</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;.ROOT&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> SCOPE_REQUEST </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;request&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> SCOPE_SESSION </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;session&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> SCOPE_APPLICATION </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;application&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> SERVLET_CONTEXT_BEAN_NAME </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;servletContext&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> CONTEXT_PARAMETERS_BEAN_NAME </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;contextParameters&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> CONTEXT_ATTRIBUTES_BEAN_NAME </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;contextAttributes&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  	// 2. WebApplicationContext 可以链接到ServletContext 和 Servlet。因为绑定了 ServletContext，这样应用程序就可以在需要的时候使用 RequestContextUtils 的静态方法访问 WebApplicationContext。</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Nullable</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    ServletContext</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> getServletContext</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>大多数应用程序只有一个WebApplicationContext，除此之外也可以一个Root WebApplicationContext 被多个 Servlet实例，然后各自拥有自己的Servlet WebApplicationContext 配置。</p><p>Root WebApplicationContext 包含需要共享给多个 Servlet 实例的数据源和业务服务基础 Bean。这些 Bean 可以在 Servlet 特定的范围被继承或覆盖。</p><p>（PS：官网上的这张图可以可以帮助你构建DispatcherServlet和ApplicationContext在设计上的认知，这一点对于理解DispatcherServlet的设计和初始化过程非常重要）</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231646509.png" alt="image-20220713220057199" tabindex="0" loading="lazy"><figcaption>image-20220713220057199</figcaption></figure><h2 id="_2-dispatcherservlet是如何初始化的" tabindex="-1"><a class="header-anchor" href="#_2-dispatcherservlet是如何初始化的"><span>2. DispatcherServlet是如何初始化的？</span></a></h2><blockquote><p>DispatcherServlet首先是Sevlet，Servlet有自己的生命周期的方法（init,destory等），那么我们在看DispatcherServlet初始化时首先需要看源码中DispatcherServlet的类结构设计。</p></blockquote><p>首先我们看DispatcherServlet的类结构关系，在这个类依赖结构中找到init的方法</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231646555.png" alt="image-20220713220205748" tabindex="0" loading="lazy"><figcaption>image-20220713220205748</figcaption></figure><p>很容易找到init()的方法位于HttpServletBean中，然后跑<a href="https://pdai.tech/md/spring/spring-x-framework-springmvc.html" target="_blank" rel="noopener noreferrer">Spring基础 - SpringMVC请求流程和案例</a>中的代码，在init方法中打断点。</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231646583.png" alt="image-20220713220255887" tabindex="0" loading="lazy"><figcaption>image-20220713220255887</figcaption></figure><h3 id="_2-1-init" tabindex="-1"><a class="header-anchor" href="#_2-1-init"><span>2.1 init</span></a></h3><p>init()方法如下, 主要读取web.xml中servlet参数配置，并将交给子类方法initServletBean()继续初始化</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * Map config parameters onto bean properties of this servlet, and</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * invoke subclass initialization.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@throws</span><span style="color:#E5C07B;font-style:italic;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic;"> ServletException</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> if bean properties are invalid (or required</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * properties are missing), or if subclass initialization fails.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">public</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> final</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> init</span><span style="color:#E06C75;--shiki-dark:#E06C75;">() throws ServletException {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 读取web.xml中的servlet配置</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">  PropertyValues</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> pvs </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> ServletConfigPropertyValues</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getServletConfig</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">requiredProperties</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">!</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">pvs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">isEmpty</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    try</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // 转换成BeanWrapper，为了方便使用Spring的属性注入功能</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">      BeanWrapper</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> bw </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> PropertyAccessorFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">forBeanPropertyAccess</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // 注入Resource类型需要依赖于ResourceEditor解析，所以注册Resource类关联到ResourceEditor解析器</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">      ResourceLoader</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> resourceLoader </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> ServletContextResourceLoader</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getServletContext</span><span style="color:#E06C75;--shiki-dark:#E06C75;">())</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">      bw</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">registerCustomEditor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Resource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#C678DD;--shiki-dark:#C678DD;">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> ResourceEditor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(resourceLoader, </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getEnvironment</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()));</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // 更多的初始化可以让子类去拓展</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      initBeanWrapper</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(bw)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // 让spring注入namespace,contextConfigLocation等属性</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">      bw</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">setPropertyValues</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(pvs, </span><span style="color:#D19A66;--shiki-dark:#D19A66;">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    catch</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">BeansException</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> ex</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">      if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">logger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">isErrorEnabled</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        logger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">error</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;Failed to set bean properties on servlet &#39;&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> +</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> getServletName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;&#39;&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, ex);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">      }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">      throw</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> ex</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 让子类去拓展</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  initServletBean</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>读取配置可以从下图看出，正是初始化了我们web.xml中配置</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231646617.png" alt="image-20220713220525343" tabindex="0" loading="lazy"><figcaption>image-20220713220525343</figcaption></figure><p>再看下initServletBean()方法，位于FrameworkServlet类中</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * Overridden method of {@link HttpServletBean}, invoked after any bean properties</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * have been set. Creates this servlet&#39;s WebApplicationContext.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">protected</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> final</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> initServletBean</span><span style="color:#E06C75;--shiki-dark:#E06C75;">() throws ServletException {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  getServletContext</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;Initializing Spring &quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> +</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> getClass</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getSimpleName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot; &#39;&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> +</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> getServletName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;&#39;&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">logger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">isInfoEnabled</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    logger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">info</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;Initializing Servlet &#39;&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> +</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> getServletName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;&#39;&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  long</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> startTime </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">currentTimeMillis</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  try</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 最重要的是这个方法</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">webApplicationContext</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> initWebApplicationContext</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 可以让子类进一步拓展</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">    initFrameworkServlet</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  catch</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">ServletException</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> | </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">RuntimeException</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> ex</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    logger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">error</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;Context initialization failed&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, ex);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    throw</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> ex</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">logger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">isDebugEnabled</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> value </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">enableLoggingRequestDetails</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> ?</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &quot;shown which may lead to unsafe logging of potentially sensitive data&quot;</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> :</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &quot;masked to prevent unsafe logging of potentially sensitive data&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    logger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">debug</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;enableLoggingRequestDetails=&#39;&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">enableLoggingRequestDetails</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> +</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &quot;&#39;: request parameters and headers will be &quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> +</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> value);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">logger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">isInfoEnabled</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    logger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">info</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;Completed initialization in &quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> +</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">currentTimeMillis</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> startTime) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot; ms&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-initwebapplicationcontext" tabindex="-1"><a class="header-anchor" href="#_2-2-initwebapplicationcontext"><span>2.2 initWebApplicationContext</span></a></h3><p>initWebApplicationContext用来初始化和刷新WebApplicationContext。</p><p>initWebApplicationContext() 方法如下</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * Initialize and publish the WebApplicationContext for this servlet.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * &lt;p&gt;Delegates to {@link #createWebApplicationContext} for actual creation</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * of the context. Can be overridden in subclasses.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@return</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> the WebApplicationContext instance</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@see</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #FrameworkServlet(WebApplicationContext)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@see</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #setContextClass</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@see</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #setContextConfigLocation</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">protected</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> WebApplicationContext</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> initWebApplicationContext</span><span style="color:#E06C75;--shiki-dark:#E06C75;">() {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">  WebApplicationContext</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> rootContext </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">      WebApplicationContextUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getWebApplicationContext</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getServletContext</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">  WebApplicationContext</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> wac </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 如果在构造函数已经被初始化</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">webApplicationContext</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> !=</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> null</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // A context instance was injected at construction time -&gt; use it</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    wac </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">webApplicationContext</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (wac </span><span style="color:#C678DD;--shiki-dark:#C678DD;">instanceof</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> ConfigurableWebApplicationContext) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">      ConfigurableWebApplicationContext</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> cwac </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (ConfigurableWebApplicationContext) wac</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">      if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">!</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">cwac</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">isActive</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // The context has not yet been refreshed -&gt; provide services such as</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // setting the parent context, setting the application context id, etc</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">cwac</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getParent</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> ==</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> null</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">          // The context instance was injected without an explicit parent -&gt; set</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">          // the root application context (if any; may be null) as the parent</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">          cwac</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">setParent</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(rootContext);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        }</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">        configureAndRefreshWebApplicationContext</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(cwac)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">      }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 没有在构造函数中初始化，则尝试通过contextAttribute初始化</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (wac </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">==</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> null</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // No context instance was injected at construction time -&gt; see if one</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // has been registered in the servlet context. If one exists, it is assumed</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // that the parent context (if any) has already been set and that the</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // user has performed any initialization such as setting the context id</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    wac </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> findWebApplicationContext</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 还没有的话，只能重新创建了</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (wac </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">==</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> null</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // No context instance is defined for this servlet -&gt; create a local one</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    wac </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> createWebApplicationContext</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(rootContext)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">!</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">refreshEventReceived</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // Either the context is not a ConfigurableApplicationContext with refresh</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // support or the context injected at construction time had already been</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // refreshed -&gt; trigger initial onRefresh manually here.</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    synchronized</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">onRefreshMonitor</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">      onRefresh</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(wac)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">publishContext</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // Publish the context as a servlet context attribute.</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> attrName </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> getServletContextAttributeName</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">    getServletContext</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">setAttribute</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(attrName, wac);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  return</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> wac</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>webApplicationContext只会初始化一次，依次尝试构造函数初始化，没有则通过contextAttribute初始化，仍没有则创建新的</p><p>创建的createWebApplicationContext方法如下</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * Instantiate the WebApplicationContext for this servlet, either a default</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * {@link org.springframework.web.context.support.XmlWebApplicationContext}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * or a {@link #setContextClass custom context class}, if set.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * &lt;p&gt;This implementation expects custom contexts to implement the</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * {@link org.springframework.web.context.ConfigurableWebApplicationContext}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * interface. Can be overridden in subclasses.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * &lt;p&gt;Do not forget to register this servlet instance as application listener on the</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * created context (for triggering its {@link #onRefresh callback}, and to call</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * {</span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@link</span><span style="color:#E5C07B;font-style:italic;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic;"> org.springframework.context.ConfigurableApplicationContext</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">refresh()</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * before returning the context instance.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> parent</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> the parent ApplicationContext to use, or {@code null} if none</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@return</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> the WebApplicationContext for this servlet</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@see</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> org.springframework.web.context.support.XmlWebApplicationContext</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">protected</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> WebApplicationContext</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> createWebApplicationContext</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Nullable</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> ApplicationContext</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> parent) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">  Class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#C678DD;--shiki-dark:#C678DD;">?</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> contextClass </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> getContextClass</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">!</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">ConfigurableWebApplicationContext</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">isAssignableFrom</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(contextClass)</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    throw</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> ApplicationContextException</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &quot;Fatal initialization error in servlet with name &#39;&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> +</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> getServletName</span><span style="color:#E06C75;--shiki-dark:#E06C75;">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &quot;&#39;: custom WebApplicationContext class [&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> contextClass</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> +</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">        &quot;] is not of type ConfigurableWebApplicationContext&quot;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 通过反射方式初始化</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">  ConfigurableWebApplicationContext</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> wac </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">      (ConfigurableWebApplicationContext) </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">BeanUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">instantiateClass</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(contextClass);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">  wac</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">setEnvironment</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getEnvironment</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">  wac</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">setParent</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(parent);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">  String</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> configLocation </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> getContextConfigLocation</span><span style="color:#E06C75;--shiki-dark:#E06C75;">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 就是前面Demo中的springmvc.xml</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (configLocation </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">!=</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> null</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    wac</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">setConfigLocation</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(configLocation);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 初始化Spring环境</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  configureAndRefreshWebApplicationContext</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(wac)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  return</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> wac</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>configureAndRefreshWebApplicationContext方法初始化设置Spring环境</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">protected</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> configureAndRefreshWebApplicationContext</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">ConfigurableWebApplicationContext</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> wac) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 设置context ID</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">ObjectUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">identityToString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(wac).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">equals</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">wac</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">())</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // The application context id is still set to its original default value</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // -&gt; assign a more useful id based on available information</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">contextId</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> !=</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> null</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">      wac</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">setId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">contextId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    else</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // Generate default id...</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">      wac</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">setId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">ConfigurableWebApplicationContext</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">APPLICATION_CONTEXT_ID_PREFIX</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> +</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">          ObjectUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getDisplayString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getServletContext</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getContextPath</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;/&#39;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> +</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> getServletName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 设置servletContext, servletConfig, namespace, listener...</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">  wac</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">setServletContext</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getServletContext</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">  wac</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">setServletConfig</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getServletConfig</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">  wac</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">setNamespace</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getNamespace</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">  wac</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">addApplicationListener</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#C678DD;--shiki-dark:#C678DD;">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> SourceFilteringListener</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(wac, </span><span style="color:#C678DD;--shiki-dark:#C678DD;">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> ContextRefreshListener</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // The wac environment&#39;s #initPropertySources will be called in any case when the context</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // is refreshed; do it eagerly here to ensure servlet property sources are in place for</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // use in any post-processing or initialization that occurs below prior to #refresh</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">  ConfigurableEnvironment</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> env </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> wac</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getEnvironment</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (env </span><span style="color:#C678DD;--shiki-dark:#C678DD;">instanceof</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> ConfigurableWebEnvironment) {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    ((ConfigurableWebEnvironment) env)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">initPropertySources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getServletContext</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(), </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getServletConfig</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 让子类去拓展</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  postProcessWebApplicationContext</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(wac)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  applyInitializers</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(wac)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // Spring环境初始化完了，就可以初始化DispatcherServlet处理流程中需要的组件了。</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">  wac</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">refresh</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-refresh" tabindex="-1"><a class="header-anchor" href="#_2-3-refresh"><span>2.3 refresh</span></a></h3><p>有了webApplicationContext后，就开始刷新了（onRefresh()方法），这个方法是FrameworkServlet提供的模板方法，由子类DispatcherServlet来实现的。</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * This implementation calls {@link #initStrategies}.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">protected</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> onRefresh</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">ApplicationContext</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> context) {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  initStrategies</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(context)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">}</span></span></code></pre></div><p>刷新主要是调用initStrategies(context)方法对DispatcherServlet中的组件进行初始化，这些组件就是在SpringMVC请求流程中包的主要组件。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * Initialize the strategy objects that this servlet uses.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * &lt;p&gt;May be overridden in subclasses in order to initialize further strategy objects.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">protected</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> initStrategies</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">ApplicationContext</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> context) {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  initMultipartResolver</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(context)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  initLocaleResolver</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(context)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  initThemeResolver</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(context)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 主要看如下三个方法</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  initHandlerMappings</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(context)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  initHandlerAdapters</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(context)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  initHandlerExceptionResolvers</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(context)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  initRequestToViewNameTranslator</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(context)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  initViewResolvers</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(context)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  initFlashMapManager</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(context)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-4-inithanlderxxx" tabindex="-1"><a class="header-anchor" href="#_2-4-inithanlderxxx"><span>2.4 initHanlderxxx</span></a></h3><p>我们主要看initHandlerXXX相关的方法，它们之间的关系可以看SpringMVC的请求流程：</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231646659.png" alt="image-20220713221212802" tabindex="0" loading="lazy"><figcaption>image-20220713221212802</figcaption></figure><ol><li>HandlerMapping是映射处理器</li><li>HandlerAdpter是<strong>处理适配器</strong>，它用来找到你的Controller中的处理方法</li><li>HandlerExceptionResolver是当遇到处理异常时的异常解析器</li></ol><p>initHandlerMapping方法如下，无非就是获取按照优先级排序后的HanlderMappings, 将来匹配时按照优先级最高的HanderMapping进行处理。</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231646698.png" alt="image-20220713221245137" tabindex="0" loading="lazy"><figcaption>image-20220713221245137</figcaption></figure><p>initHandlerAdapters方法和initHandlerExceptionResolvers方法也是类似的，如果没有找到，那就构建默认的。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * Initialize the HandlerAdapters used by this class.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * &lt;p&gt;If no HandlerAdapter beans are defined in the BeanFactory for this namespace,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * we default to SimpleControllerHandlerAdapter.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">private</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> initHandlerAdapters</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">ApplicationContext</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> context) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">  this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">handlerAdapters</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">detectAllHandlerAdapters</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // Find all HandlerAdapters in the ApplicationContext, including ancestor contexts.</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> HandlerAdapter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> matchingBeans </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">        BeanFactoryUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">beansOfTypeIncludingAncestors</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(context, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">HandlerAdapter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#D19A66;--shiki-dark:#D19A66;">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#D19A66;--shiki-dark:#D19A66;">false</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">!</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">matchingBeans</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">isEmpty</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">      this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">handlerAdapters</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">matchingBeans</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">values</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // We keep HandlerAdapters in sorted order.</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">      AnnotationAwareOrderComparator</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">sort</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">handlerAdapters</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  else</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    try</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">      HandlerAdapter</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> ha </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> context</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getBean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(HANDLER_ADAPTER_BEAN_NAME, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">HandlerAdapter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">      this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">handlerAdapters</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Collections</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">singletonList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(ha);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    catch</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">NoSuchBeanDefinitionException</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> ex</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // Ignore, we&#39;ll add a default HandlerAdapter later.</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // Ensure we have at least some HandlerAdapters, by registering</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // default HandlerAdapters if no other adapters are found.</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">handlerAdapters</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> ==</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> null</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">handlerAdapters</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> getDefaultStrategies</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(context</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> HandlerAdapter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">class</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">logger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">isTraceEnabled</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">      logger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">trace</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;No HandlerAdapters declared for servlet &#39;&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> +</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> getServletName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">          &quot;&#39;: using default strategies from DispatcherServlet.properties&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * Initialize the HandlerExceptionResolver used by this class.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * &lt;p&gt;If no bean is defined with the given name in the BeanFactory for this namespace,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  * we default to no exception resolver.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">private</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> initHandlerExceptionResolvers</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">ApplicationContext</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> context) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">  this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">handlerExceptionResolvers</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">detectAllHandlerExceptionResolvers</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // Find all HandlerExceptionResolvers in the ApplicationContext, including ancestor contexts.</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> HandlerExceptionResolver</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> matchingBeans </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> BeanFactoryUtils</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">beansOfTypeIncludingAncestors</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(context, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">HandlerExceptionResolver</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#D19A66;--shiki-dark:#D19A66;">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#D19A66;--shiki-dark:#D19A66;">false</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">!</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">matchingBeans</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">isEmpty</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">      this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">handlerExceptionResolvers</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">matchingBeans</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">values</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // We keep HandlerExceptionResolvers in sorted order.</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">      AnnotationAwareOrderComparator</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">sort</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">handlerExceptionResolvers</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  else</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    try</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">      HandlerExceptionResolver</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> her </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">          context</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">getBean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(HANDLER_EXCEPTION_RESOLVER_BEAN_NAME, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">HandlerExceptionResolver</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">      this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">handlerExceptionResolvers</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Collections</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">singletonList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(her);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    catch</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">NoSuchBeanDefinitionException</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> ex</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // Ignore, no HandlerExceptionResolver is fine too.</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // Ensure we have at least some HandlerExceptionResolvers, by registering</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // default HandlerExceptionResolvers if no other resolvers are found.</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">handlerExceptionResolvers</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> ==</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> null</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">    this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">handlerExceptionResolvers</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> getDefaultStrategies</span><span style="color:#E06C75;--shiki-dark:#E06C75;">(context</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> HandlerExceptionResolver</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">class</span><span style="color:#E06C75;--shiki-dark:#E06C75;">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">logger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">isTraceEnabled</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()</span><span style="color:#E06C75;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">      logger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">trace</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;No HandlerExceptionResolvers declared in servlet &#39;&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> +</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> getServletName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">+</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">          &quot;&#39;: using default strategies from DispatcherServlet.properties&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后我们看下初始化的日志：</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:33.163</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> INFO</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.web.servlet.DispatcherServlet</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Initializing</span><span style="color:#98C379;--shiki-dark:#98C379;"> Servlet</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;springmvc-demo&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:38.242</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.web.context.support.XmlWebApplicationContext</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Refreshing</span><span style="color:#98C379;--shiki-dark:#98C379;"> WebApplicationContext</span><span style="color:#98C379;--shiki-dark:#98C379;"> for</span><span style="color:#98C379;--shiki-dark:#98C379;"> namespace</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;springmvc-demo-servlet&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:39.256</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.context.annotation.ClassPathBeanDefinitionScanner</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Identified</span><span style="color:#98C379;--shiki-dark:#98C379;"> candidate</span><span style="color:#98C379;--shiki-dark:#98C379;"> component</span><span style="color:#98C379;--shiki-dark:#98C379;"> class:</span><span style="color:#98C379;--shiki-dark:#98C379;"> file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [/Users/pdai/pdai/www/tech-pdai-spring-demos/011-spring-framework-demo-springmvc/target/011-spring-framework-demo-springmvc-1.0-SNAPSHOT/WEB-INF/classes/tech/pdai/springframework/springmvc/controller/UserController.class]</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:39.261</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.context.annotation.ClassPathBeanDefinitionScanner</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Identified</span><span style="color:#98C379;--shiki-dark:#98C379;"> candidate</span><span style="color:#98C379;--shiki-dark:#98C379;"> component</span><span style="color:#98C379;--shiki-dark:#98C379;"> class:</span><span style="color:#98C379;--shiki-dark:#98C379;"> file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [/Users/pdai/pdai/www/tech-pdai-spring-demos/011-spring-framework-demo-springmvc/target/011-spring-framework-demo-springmvc-1.0-SNAPSHOT/WEB-INF/classes/tech/pdai/springframework/springmvc/dao/UserDaoImpl.class]</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:39.274</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.context.annotation.ClassPathBeanDefinitionScanner</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Identified</span><span style="color:#98C379;--shiki-dark:#98C379;"> candidate</span><span style="color:#98C379;--shiki-dark:#98C379;"> component</span><span style="color:#98C379;--shiki-dark:#98C379;"> class:</span><span style="color:#98C379;--shiki-dark:#98C379;"> file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [/Users/pdai/pdai/www/tech-pdai-spring-demos/011-spring-framework-demo-springmvc/target/011-spring-framework-demo-springmvc-1.0-SNAPSHOT/WEB-INF/classes/tech/pdai/springframework/springmvc/service/UserServiceImpl.class]</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:39.546</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.beans.factory.xml.XmlBeanDefinitionReader</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Loaded</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 29</span><span style="color:#98C379;--shiki-dark:#98C379;"> bean</span><span style="color:#98C379;--shiki-dark:#98C379;"> definitions</span><span style="color:#98C379;--shiki-dark:#98C379;"> from</span><span style="color:#98C379;--shiki-dark:#98C379;"> class</span><span style="color:#98C379;--shiki-dark:#98C379;"> path</span><span style="color:#98C379;--shiki-dark:#98C379;"> resource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [springmvc.xml]</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:39.711</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.beans.factory.support.DefaultListableBeanFactory</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Creating</span><span style="color:#98C379;--shiki-dark:#98C379;"> shared</span><span style="color:#98C379;--shiki-dark:#98C379;"> instance</span><span style="color:#98C379;--shiki-dark:#98C379;"> of</span><span style="color:#98C379;--shiki-dark:#98C379;"> singleton</span><span style="color:#98C379;--shiki-dark:#98C379;"> bean</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;org.springframework.context.annotation.internalConfigurationAnnotationProcessor&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:39.973</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.beans.factory.support.DefaultListableBeanFactory</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Creating</span><span style="color:#98C379;--shiki-dark:#98C379;"> shared</span><span style="color:#98C379;--shiki-dark:#98C379;"> instance</span><span style="color:#98C379;--shiki-dark:#98C379;"> of</span><span style="color:#98C379;--shiki-dark:#98C379;"> singleton</span><span style="color:#98C379;--shiki-dark:#98C379;"> bean</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;org.springframework.context.event.internalEventListenerProcessor&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:39.984</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.beans.factory.support.DefaultListableBeanFactory</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Creating</span><span style="color:#98C379;--shiki-dark:#98C379;"> shared</span><span style="color:#98C379;--shiki-dark:#98C379;"> instance</span><span style="color:#98C379;--shiki-dark:#98C379;"> of</span><span style="color:#98C379;--shiki-dark:#98C379;"> singleton</span><span style="color:#98C379;--shiki-dark:#98C379;"> bean</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;org.springframework.context.event.internalEventListenerFactory&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:39.995</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.beans.factory.support.DefaultListableBeanFactory</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Creating</span><span style="color:#98C379;--shiki-dark:#98C379;"> shared</span><span style="color:#98C379;--shiki-dark:#98C379;"> instance</span><span style="color:#98C379;--shiki-dark:#98C379;"> of</span><span style="color:#98C379;--shiki-dark:#98C379;"> singleton</span><span style="color:#98C379;--shiki-dark:#98C379;"> bean</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;org.springframework.context.annotation.internalAutowiredAnnotationProcessor&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:40.003</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.beans.factory.support.DefaultListableBeanFactory</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Creating</span><span style="color:#98C379;--shiki-dark:#98C379;"> shared</span><span style="color:#98C379;--shiki-dark:#98C379;"> instance</span><span style="color:#98C379;--shiki-dark:#98C379;"> of</span><span style="color:#98C379;--shiki-dark:#98C379;"> singleton</span><span style="color:#98C379;--shiki-dark:#98C379;"> bean</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;org.springframework.context.annotation.internalCommonAnnotationProcessor&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:40.042</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.ui.context.support.UiApplicationContextUtils</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Unable</span><span style="color:#98C379;--shiki-dark:#98C379;"> to</span><span style="color:#98C379;--shiki-dark:#98C379;"> locate</span><span style="color:#98C379;--shiki-dark:#98C379;"> ThemeSource</span><span style="color:#98C379;--shiki-dark:#98C379;"> with</span><span style="color:#98C379;--shiki-dark:#98C379;"> name</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;themeSource&#39;:</span><span style="color:#98C379;--shiki-dark:#98C379;"> using</span><span style="color:#98C379;--shiki-dark:#98C379;"> default</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [org.springframework.ui.context.support.ResourceBundleThemeSource@791af912]</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:40.052</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.beans.factory.support.DefaultListableBeanFactory</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Creating</span><span style="color:#98C379;--shiki-dark:#98C379;"> shared</span><span style="color:#98C379;--shiki-dark:#98C379;"> instance</span><span style="color:#98C379;--shiki-dark:#98C379;"> of</span><span style="color:#98C379;--shiki-dark:#98C379;"> singleton</span><span style="color:#98C379;--shiki-dark:#98C379;"> bean</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;userController&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:40.136</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.beans.factory.support.DefaultListableBeanFactory</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Creating</span><span style="color:#98C379;--shiki-dark:#98C379;"> shared</span><span style="color:#98C379;--shiki-dark:#98C379;"> instance</span><span style="color:#98C379;--shiki-dark:#98C379;"> of</span><span style="color:#98C379;--shiki-dark:#98C379;"> singleton</span><span style="color:#98C379;--shiki-dark:#98C379;"> bean</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;userServiceImpl&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:40.140</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.beans.factory.support.DefaultListableBeanFactory</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Creating</span><span style="color:#98C379;--shiki-dark:#98C379;"> shared</span><span style="color:#98C379;--shiki-dark:#98C379;"> instance</span><span style="color:#98C379;--shiki-dark:#98C379;"> of</span><span style="color:#98C379;--shiki-dark:#98C379;"> singleton</span><span style="color:#98C379;--shiki-dark:#98C379;"> bean</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;userDaoImpl&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:40.147</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.beans.factory.support.DefaultListableBeanFactory</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Creating</span><span style="color:#98C379;--shiki-dark:#98C379;"> shared</span><span style="color:#98C379;--shiki-dark:#98C379;"> instance</span><span style="color:#98C379;--shiki-dark:#98C379;"> of</span><span style="color:#98C379;--shiki-dark:#98C379;"> singleton</span><span style="color:#98C379;--shiki-dark:#98C379;"> bean</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:40.153</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.beans.factory.support.DefaultListableBeanFactory</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Creating</span><span style="color:#98C379;--shiki-dark:#98C379;"> shared</span><span style="color:#98C379;--shiki-dark:#98C379;"> instance</span><span style="color:#98C379;--shiki-dark:#98C379;"> of</span><span style="color:#98C379;--shiki-dark:#98C379;"> singleton</span><span style="color:#98C379;--shiki-dark:#98C379;"> bean</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;org.springframework.web.servlet.handler.SimpleUrlHandlerMapping#0&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:40.350</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.beans.factory.support.DefaultListableBeanFactory</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Creating</span><span style="color:#98C379;--shiki-dark:#98C379;"> shared</span><span style="color:#98C379;--shiki-dark:#98C379;"> instance</span><span style="color:#98C379;--shiki-dark:#98C379;"> of</span><span style="color:#98C379;--shiki-dark:#98C379;"> singleton</span><span style="color:#98C379;--shiki-dark:#98C379;"> bean</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;org.springframework.web.servlet.handler.MappedInterceptor#0&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:40.356</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.beans.factory.support.DefaultListableBeanFactory</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Creating</span><span style="color:#98C379;--shiki-dark:#98C379;"> shared</span><span style="color:#98C379;--shiki-dark:#98C379;"> instance</span><span style="color:#98C379;--shiki-dark:#98C379;"> of</span><span style="color:#98C379;--shiki-dark:#98C379;"> singleton</span><span style="color:#98C379;--shiki-dark:#98C379;"> bean</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;org.springframework.format.support.FormattingConversionServiceFactoryBean#0&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:40.741</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> _org.springframework.web.servlet.HandlerMapping.Mappings</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;org.springframework.web.servlet.handler.SimpleUrlHandlerMapping#0&#39;</span><span style="color:#98C379;--shiki-dark:#98C379;"> {/</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">**</span><span style="color:#98C379;--shiki-dark:#98C379;">=org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@216c0f1f}</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:40.742</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.beans.factory.support.DefaultListableBeanFactory</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Creating</span><span style="color:#98C379;--shiki-dark:#98C379;"> shared</span><span style="color:#98C379;--shiki-dark:#98C379;"> instance</span><span style="color:#98C379;--shiki-dark:#98C379;"> of</span><span style="color:#98C379;--shiki-dark:#98C379;"> singleton</span><span style="color:#98C379;--shiki-dark:#98C379;"> bean</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;mvcCorsConfigurations&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:40.742</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.beans.factory.support.DefaultListableBeanFactory</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Creating</span><span style="color:#98C379;--shiki-dark:#98C379;"> shared</span><span style="color:#98C379;--shiki-dark:#98C379;"> instance</span><span style="color:#98C379;--shiki-dark:#98C379;"> of</span><span style="color:#98C379;--shiki-dark:#98C379;"> singleton</span><span style="color:#98C379;--shiki-dark:#98C379;"> bean</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:40.792</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> _org.springframework.web.servlet.HandlerMapping.Mappings</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping&#39;</span><span style="color:#98C379;--shiki-dark:#98C379;"> {}</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:40.792</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.beans.factory.support.DefaultListableBeanFactory</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Creating</span><span style="color:#98C379;--shiki-dark:#98C379;"> shared</span><span style="color:#98C379;--shiki-dark:#98C379;"> instance</span><span style="color:#98C379;--shiki-dark:#98C379;"> of</span><span style="color:#98C379;--shiki-dark:#98C379;"> singleton</span><span style="color:#98C379;--shiki-dark:#98C379;"> bean</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:40.793</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.beans.factory.support.DefaultListableBeanFactory</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Creating</span><span style="color:#98C379;--shiki-dark:#98C379;"> shared</span><span style="color:#98C379;--shiki-dark:#98C379;"> instance</span><span style="color:#98C379;--shiki-dark:#98C379;"> of</span><span style="color:#98C379;--shiki-dark:#98C379;"> singleton</span><span style="color:#98C379;--shiki-dark:#98C379;"> bean</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:40.794</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.beans.factory.support.DefaultListableBeanFactory</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Creating</span><span style="color:#98C379;--shiki-dark:#98C379;"> shared</span><span style="color:#98C379;--shiki-dark:#98C379;"> instance</span><span style="color:#98C379;--shiki-dark:#98C379;"> of</span><span style="color:#98C379;--shiki-dark:#98C379;"> singleton</span><span style="color:#98C379;--shiki-dark:#98C379;"> bean</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;localeResolver&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:40.796</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.beans.factory.support.DefaultListableBeanFactory</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Creating</span><span style="color:#98C379;--shiki-dark:#98C379;"> shared</span><span style="color:#98C379;--shiki-dark:#98C379;"> instance</span><span style="color:#98C379;--shiki-dark:#98C379;"> of</span><span style="color:#98C379;--shiki-dark:#98C379;"> singleton</span><span style="color:#98C379;--shiki-dark:#98C379;"> bean</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;themeResolver&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:40.798</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.beans.factory.support.DefaultListableBeanFactory</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Creating</span><span style="color:#98C379;--shiki-dark:#98C379;"> shared</span><span style="color:#98C379;--shiki-dark:#98C379;"> instance</span><span style="color:#98C379;--shiki-dark:#98C379;"> of</span><span style="color:#98C379;--shiki-dark:#98C379;"> singleton</span><span style="color:#98C379;--shiki-dark:#98C379;"> bean</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;viewNameTranslator&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:40.799</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.beans.factory.support.DefaultListableBeanFactory</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Creating</span><span style="color:#98C379;--shiki-dark:#98C379;"> shared</span><span style="color:#98C379;--shiki-dark:#98C379;"> instance</span><span style="color:#98C379;--shiki-dark:#98C379;"> of</span><span style="color:#98C379;--shiki-dark:#98C379;"> singleton</span><span style="color:#98C379;--shiki-dark:#98C379;"> bean</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;flashMapManager&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:40.805</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.beans.factory.support.DefaultListableBeanFactory</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Creating</span><span style="color:#98C379;--shiki-dark:#98C379;"> shared</span><span style="color:#98C379;--shiki-dark:#98C379;"> instance</span><span style="color:#98C379;--shiki-dark:#98C379;"> of</span><span style="color:#98C379;--shiki-dark:#98C379;"> singleton</span><span style="color:#98C379;--shiki-dark:#98C379;"> bean</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;mvcContentNegotiationManager&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:40.887</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.beans.factory.support.DefaultListableBeanFactory</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Creating</span><span style="color:#98C379;--shiki-dark:#98C379;"> shared</span><span style="color:#98C379;--shiki-dark:#98C379;"> instance</span><span style="color:#98C379;--shiki-dark:#98C379;"> of</span><span style="color:#98C379;--shiki-dark:#98C379;"> singleton</span><span style="color:#98C379;--shiki-dark:#98C379;"> bean</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:41.150</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> _org.springframework.web.servlet.HandlerMapping.Mappings</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">	t.p.s.s.c.UserController:</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">	{ [/user]}: list(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">HttpServletRequest,HttpServletResponse</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:41.202</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1</span><span style="color:#98C379;--shiki-dark:#98C379;"> mappings</span><span style="color:#98C379;--shiki-dark:#98C379;"> in</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:41.202</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.beans.factory.support.DefaultListableBeanFactory</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Creating</span><span style="color:#98C379;--shiki-dark:#98C379;"> shared</span><span style="color:#98C379;--shiki-dark:#98C379;"> instance</span><span style="color:#98C379;--shiki-dark:#98C379;"> of</span><span style="color:#98C379;--shiki-dark:#98C379;"> singleton</span><span style="color:#98C379;--shiki-dark:#98C379;"> bean</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:41.626</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> ControllerAdvice</span><span style="color:#98C379;--shiki-dark:#98C379;"> beans:</span><span style="color:#98C379;--shiki-dark:#98C379;"> none</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:41.738</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.beans.factory.support.DefaultListableBeanFactory</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Creating</span><span style="color:#98C379;--shiki-dark:#98C379;"> shared</span><span style="color:#98C379;--shiki-dark:#98C379;"> instance</span><span style="color:#98C379;--shiki-dark:#98C379;"> of</span><span style="color:#98C379;--shiki-dark:#98C379;"> singleton</span><span style="color:#98C379;--shiki-dark:#98C379;"> bean</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;mvcUriComponentsContributor&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:41.786</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> ControllerAdvice</span><span style="color:#98C379;--shiki-dark:#98C379;"> beans:</span><span style="color:#98C379;--shiki-dark:#98C379;"> none</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:41.806</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.beans.factory.support.DefaultListableBeanFactory</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Creating</span><span style="color:#98C379;--shiki-dark:#98C379;"> shared</span><span style="color:#98C379;--shiki-dark:#98C379;"> instance</span><span style="color:#98C379;--shiki-dark:#98C379;"> of</span><span style="color:#98C379;--shiki-dark:#98C379;"> singleton</span><span style="color:#98C379;--shiki-dark:#98C379;"> bean</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver#0&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:41.919</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> ControllerAdvice</span><span style="color:#98C379;--shiki-dark:#98C379;"> beans:</span><span style="color:#98C379;--shiki-dark:#98C379;"> none</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:41.920</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.beans.factory.support.DefaultListableBeanFactory</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Creating</span><span style="color:#98C379;--shiki-dark:#98C379;"> shared</span><span style="color:#98C379;--shiki-dark:#98C379;"> instance</span><span style="color:#98C379;--shiki-dark:#98C379;"> of</span><span style="color:#98C379;--shiki-dark:#98C379;"> singleton</span><span style="color:#98C379;--shiki-dark:#98C379;"> bean</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver#0&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:41.949</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.beans.factory.support.DefaultListableBeanFactory</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Creating</span><span style="color:#98C379;--shiki-dark:#98C379;"> shared</span><span style="color:#98C379;--shiki-dark:#98C379;"> instance</span><span style="color:#98C379;--shiki-dark:#98C379;"> of</span><span style="color:#98C379;--shiki-dark:#98C379;"> singleton</span><span style="color:#98C379;--shiki-dark:#98C379;"> bean</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver#0&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:41.967</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.beans.factory.support.DefaultListableBeanFactory</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Creating</span><span style="color:#98C379;--shiki-dark:#98C379;"> shared</span><span style="color:#98C379;--shiki-dark:#98C379;"> instance</span><span style="color:#98C379;--shiki-dark:#98C379;"> of</span><span style="color:#98C379;--shiki-dark:#98C379;"> singleton</span><span style="color:#98C379;--shiki-dark:#98C379;"> bean</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;jspViewResolver&#39;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:44.214</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.web.servlet.DispatcherServlet</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Detected</span><span style="color:#98C379;--shiki-dark:#98C379;"> AcceptHeaderLocaleResolver</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:30:44.214</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.web.servlet.DispatcherServlet</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Detected</span><span style="color:#98C379;--shiki-dark:#98C379;"> FixedThemeResolver</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:31:02.141</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.web.servlet.DispatcherServlet</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Detected</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@d57bc91</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:31:03.483</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.web.servlet.DispatcherServlet</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Detected</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.web.servlet.support.SessionFlashMapManager@2b4e795e</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:44:08.180</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.jndi.JndiTemplate</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Looking</span><span style="color:#98C379;--shiki-dark:#98C379;"> up</span><span style="color:#98C379;--shiki-dark:#98C379;"> JNDI</span><span style="color:#98C379;--shiki-dark:#98C379;"> object</span><span style="color:#98C379;--shiki-dark:#98C379;"> with</span><span style="color:#98C379;--shiki-dark:#98C379;"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [java:comp/env/spring.liveBeansView.mbeanDomain]</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:44:08.185</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.jndi.JndiLocatorDelegate</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Converted</span><span style="color:#98C379;--shiki-dark:#98C379;"> JNDI</span><span style="color:#98C379;--shiki-dark:#98C379;"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: 名称[spring.liveBeansView.mbeanDomain]未在此上下文中绑定。找不到[spring.liveBeansView.mbeanDomain]。</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:44:08.185</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.jndi.JndiTemplate</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Looking</span><span style="color:#98C379;--shiki-dark:#98C379;"> up</span><span style="color:#98C379;--shiki-dark:#98C379;"> JNDI</span><span style="color:#98C379;--shiki-dark:#98C379;"> object</span><span style="color:#98C379;--shiki-dark:#98C379;"> with</span><span style="color:#98C379;--shiki-dark:#98C379;"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [spring.liveBeansView.mbeanDomain]</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:44:08.185</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.jndi.JndiPropertySource</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> JNDI</span><span style="color:#98C379;--shiki-dark:#98C379;"> lookup</span><span style="color:#98C379;--shiki-dark:#98C379;"> for</span><span style="color:#98C379;--shiki-dark:#98C379;"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [spring.liveBeansView.mbeanDomain] threw NamingException with message: 名称[spring.liveBeansView.mbeanDomain]未在此上下文中绑定。找不到[spring.liveBeansView.mbeanDomain]。. Returning null.</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:44:08.195</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> DEBUG</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.web.servlet.DispatcherServlet</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> enableLoggingRequestDetails=&#39;false&#39;:</span><span style="color:#98C379;--shiki-dark:#98C379;"> request</span><span style="color:#98C379;--shiki-dark:#98C379;"> parameters</span><span style="color:#98C379;--shiki-dark:#98C379;"> and</span><span style="color:#98C379;--shiki-dark:#98C379;"> headers</span><span style="color:#98C379;--shiki-dark:#98C379;"> will</span><span style="color:#98C379;--shiki-dark:#98C379;"> be</span><span style="color:#98C379;--shiki-dark:#98C379;"> masked</span><span style="color:#98C379;--shiki-dark:#98C379;"> to</span><span style="color:#98C379;--shiki-dark:#98C379;"> prevent</span><span style="color:#98C379;--shiki-dark:#98C379;"> unsafe</span><span style="color:#98C379;--shiki-dark:#98C379;"> logging</span><span style="color:#98C379;--shiki-dark:#98C379;"> of</span><span style="color:#98C379;--shiki-dark:#98C379;"> potentially</span><span style="color:#98C379;--shiki-dark:#98C379;"> sensitive</span><span style="color:#98C379;--shiki-dark:#98C379;"> data</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">21:44:08.195</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [RMI </span><span style="color:#98C379;--shiki-dark:#98C379;">TCP</span><span style="color:#98C379;--shiki-dark:#98C379;"> Connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">-127.0.0.1]</span><span style="color:#98C379;--shiki-dark:#98C379;"> INFO</span><span style="color:#98C379;--shiki-dark:#98C379;"> org.springframework.web.servlet.DispatcherServlet</span><span style="color:#98C379;--shiki-dark:#98C379;"> -</span><span style="color:#98C379;--shiki-dark:#98C379;"> Completed</span><span style="color:#98C379;--shiki-dark:#98C379;"> initialization</span><span style="color:#98C379;--shiki-dark:#98C379;"> in</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 815032</span><span style="color:#98C379;--shiki-dark:#98C379;"> ms</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章"><span>参考文章</span></a></h2><p><a href="https://pdai.tech/md/spring/spring-x-framework-springmvc-source-1.html" target="_blank" rel="noopener noreferrer"><strong>Spring进阶 - SpringMVC实现原理之DispatcherServlet的初始化过程</strong></a></p>`,50)]))}const t=a(r,[["render",e],["__file","spring-x-framework-springmvc-source-1.html.vue"]]),k=JSON.parse('{"path":"/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-x-framework-springmvc-source-1.html","title":"Spring进阶 - SpringMVC实现原理之DispatcherServlet的初始化过程","lang":"zh-CN","frontmatter":{"aliases":"Spring进阶 - SpringMVC实现原理之DispatcherServlet的初始化过程","tags":null,"cssclass":null,"source":null,"order":160,"created":"2024-02-22 10:50","updated":"2024-10-11 16:46","description":"Spring进阶 - SpringMVC实现原理之DispatcherServlet的初始化过程 前文我们有了IOC的源码基础以及SpringMVC的基础，我们便可以进一步深入理解SpringMVC主要实现原理，包含DispatcherServlet的初始化过程和DispatcherServlet处理请求的过程的源码解析。本文是第一篇：Dispatch...","head":[["meta",{"property":"og:url","content":"https://mrjackc.github.io/posts/Java/Java%E6%A1%86%E6%9E%B6/Spring/spring-x-framework-springmvc-source-1.html"}],["meta",{"property":"og:site_name","content":"mrjason’s Blog"}],["meta",{"property":"og:title","content":"Spring进阶 - SpringMVC实现原理之DispatcherServlet的初始化过程"}],["meta",{"property":"og:description","content":"Spring进阶 - SpringMVC实现原理之DispatcherServlet的初始化过程 前文我们有了IOC的源码基础以及SpringMVC的基础，我们便可以进一步深入理解SpringMVC主要实现原理，包含DispatcherServlet的初始化过程和DispatcherServlet处理请求的过程的源码解析。本文是第一篇：Dispatch..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231646509.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-21T07:03:09.000Z"}],["meta",{"property":"article:author","content":"MrJason"}],["meta",{"property":"article:modified_time","content":"2024-10-21T07:03:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring进阶 - SpringMVC实现原理之DispatcherServlet的初始化过程\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231646509.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231646555.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231646583.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231646617.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231646659.png\\",\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231646698.png\\"],\\"dateModified\\":\\"2024-10-21T07:03:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MrJason\\",\\"url\\":\\"https://mrjackc.github.io\\"}]}"]]},"headers":[{"level":2,"title":"1. DispatcherServlet和ApplicationContext有何关系？","slug":"_1-dispatcherservlet和applicationcontext有何关系","link":"#_1-dispatcherservlet和applicationcontext有何关系","children":[]},{"level":2,"title":"2. DispatcherServlet是如何初始化的？","slug":"_2-dispatcherservlet是如何初始化的","link":"#_2-dispatcherservlet是如何初始化的","children":[{"level":3,"title":"2.1 init","slug":"_2-1-init","link":"#_2-1-init","children":[]},{"level":3,"title":"2.2 initWebApplicationContext","slug":"_2-2-initwebapplicationcontext","link":"#_2-2-initwebapplicationcontext","children":[]},{"level":3,"title":"2.3 refresh","slug":"_2-3-refresh","link":"#_2-3-refresh","children":[]},{"level":3,"title":"2.4 initHanlderxxx","slug":"_2-4-inithanlderxxx","link":"#_2-4-inithanlderxxx","children":[]}]},{"level":2,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}],"git":{"createdTime":1729494189000,"updatedTime":1729494189000,"contributors":[{"name":"MrJason","email":"845886914@qq.com","commits":1}]},"readingTime":{"minutes":10.95,"words":3284},"filePathRelative":"posts/Java/Java框架/Spring/spring-x-framework-springmvc-source-1.md","localizedDate":"2024年10月21日","excerpt":"\\n<blockquote>\\n<p>前文我们有了IOC的源码基础以及SpringMVC的基础，我们便可以进一步深入理解SpringMVC主要实现原理，包含DispatcherServlet的初始化过程和DispatcherServlet处理请求的过程的源码解析。本文是第一篇：DispatcherServlet的初始化过程的源码解析。</p>\\n</blockquote>\\n<h2>1. DispatcherServlet和ApplicationContext有何关系？</h2>\\n<blockquote>\\n<p>DispatcherServlet 作为一个 Servlet，需要根据 Servlet 规范使用 Java 配置或 web.xml 声明和映射。反过来，DispatcherServlet 使用 Spring 配置来发现请求映射、视图解析、异常处理等等所需的委托组件。那它和ApplicationContext有和关系呢？如下内容可以参考<a href=\\"https://docs.spring.io/spring-framework/docs/current/reference/html/web.html#mvc-servlet\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">官网-SpringMVC文档</a></p>\\n</blockquote>","autoDesc":true}');export{t as comp,k as data};
