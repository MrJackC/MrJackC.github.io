import{_ as a,c as i,a as e,o as n}from"./app-JRvFIbSa.js";const r={};function l(t,s){return n(),i("div",null,s[0]||(s[0]=[e(`<h1 id="rabbitmq管理-应用与集群管理" tabindex="-1"><a class="header-anchor" href="#rabbitmq管理-应用与集群管理"><span>RabbitMQ管理 - 应用与集群管理</span></a></h1><p>本章主要介绍应用与集群相关的一些操作管理命令，包括关闭、重置、开启服务，还有建立集群的一些信息。有关集群搭建请参考后续的「RabbitMQ 运维」章节</p><h2 id="_1-应用管理" tabindex="-1"><a class="header-anchor" href="#_1-应用管理"><span>1. 应用管理</span></a></h2><h3 id="_1-1-停止运行-stop" tabindex="-1"><a class="header-anchor" href="#_1-1-停止运行-stop"><span>1.1 停止运行 stop</span></a></h3><p>用于停止运行 RabbitMQ 和 Erlang 虚拟机。</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">rabbitmqctl</span><span style="color:#98C379;--shiki-dark:#98C379;"> stop</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [pid_file]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">参数：</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">	pid_file：通过</span><span style="color:#98C379;--shiki-dark:#98C379;"> rabbitmq-server</span><span style="color:#98C379;--shiki-dark:#98C379;"> 命令启动</span><span style="color:#98C379;--shiki-dark:#98C379;"> RabbitMQ</span><span style="color:#98C379;--shiki-dark:#98C379;"> 服务创建的。默认情况存放与</span><span style="color:#98C379;--shiki-dark:#98C379;"> rabbitmq安装目录/var/lib/rabbitmq/mnesia</span><span style="color:#98C379;--shiki-dark:#98C379;"> 目录下；可以通过</span><span style="color:#98C379;--shiki-dark:#98C379;"> RABBITMQ_PID_FILE</span><span style="color:#98C379;--shiki-dark:#98C379;"> 环境变量来改变存放路径。</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">			  注意：通过</span><span style="color:#98C379;--shiki-dark:#98C379;"> rabbitmq-server</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> --detach</span><span style="color:#98C379;--shiki-dark:#98C379;"> 这个后缀命令启动不会生成</span><span style="color:#98C379;--shiki-dark:#98C379;"> pid_file</span><span style="color:#98C379;--shiki-dark:#98C379;"> 文件</span></span></code></pre></div><p>实践练习</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 注意啊，我们通过 rabbitmq-server -detached 后台运行启动的</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 可以通过它来停止，而且写一个错误的路径也可以停止运行</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 通过下面讲解的 shutdown 命令，可以看到这个 pid 或许不是真正的 pid 文件</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 因为在启动的时候打印了 Warning: PID file not written; -detached was passed.</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[root@study mnesia]# rabbitmqctl stop /opt/rabbitmq/var/lib/rabbitmq/mnesia/rabbit@study.pid</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">Stopping</span><span style="color:#98C379;--shiki-dark:#98C379;"> and</span><span style="color:#98C379;--shiki-dark:#98C379;"> halting</span><span style="color:#98C379;--shiki-dark:#98C379;"> node</span><span style="color:#98C379;--shiki-dark:#98C379;"> rabbit@study</span></span></code></pre></div><h3 id="_1-2-停止运行-shutdown" tabindex="-1"><a class="header-anchor" href="#_1-2-停止运行-shutdown"><span>1.2 停止运行 shutdown</span></a></h3><p>用于停止运行 RabbitMQ 和 Erlang 虚拟机。</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">rabbitmqctl</span><span style="color:#98C379;--shiki-dark:#98C379;"> shutdown</span></span></code></pre></div><p>执行该指令会阻塞知道 Erlang 虚拟机进程退出。如果 RabbitMQ 没有成功关闭，则会返回一个非零值。</p><p>与 stop 不同的是，不需要指定 pid_file，而且可以阻塞等待指定进程的关闭</p><p>实践练习</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[root@study mnesia]# rabbitmqctl shutdown</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">Shutting</span><span style="color:#98C379;--shiki-dark:#98C379;"> down</span><span style="color:#98C379;--shiki-dark:#98C379;"> RabbitMQ</span><span style="color:#98C379;--shiki-dark:#98C379;"> node</span><span style="color:#98C379;--shiki-dark:#98C379;"> rabbit@study</span><span style="color:#98C379;--shiki-dark:#98C379;"> running</span><span style="color:#98C379;--shiki-dark:#98C379;"> at</span><span style="color:#98C379;--shiki-dark:#98C379;"> PID</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 19531</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">Waiting</span><span style="color:#98C379;--shiki-dark:#98C379;"> for</span><span style="color:#98C379;--shiki-dark:#98C379;"> PID</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 19531</span><span style="color:#98C379;--shiki-dark:#98C379;"> to</span><span style="color:#98C379;--shiki-dark:#98C379;"> terminate</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">RabbitMQ</span><span style="color:#98C379;--shiki-dark:#98C379;"> node</span><span style="color:#98C379;--shiki-dark:#98C379;"> rabbit@study</span><span style="color:#98C379;--shiki-dark:#98C379;"> running</span><span style="color:#98C379;--shiki-dark:#98C379;"> at</span><span style="color:#98C379;--shiki-dark:#98C379;"> PID</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 19531</span><span style="color:#98C379;--shiki-dark:#98C379;"> successfully</span><span style="color:#98C379;--shiki-dark:#98C379;"> shut</span><span style="color:#98C379;--shiki-dark:#98C379;"> down</span></span></code></pre></div><h3 id="_1-3-停止-rabbitmq-服务应用-stop-app" tabindex="-1"><a class="header-anchor" href="#_1-3-停止-rabbitmq-服务应用-stop-app"><span>1.3 停止 RabbitMQ 服务应用：stop_app</span></a></h3><p>停止 RabbitMQ 服务应用，但是 Erlang 虚拟机还是处于运行状态。此命令的执行优先于其他管理操作（这些管理操作需要先停止 RabbitMQ 应用），比如 rabbitmqct reset</p><p>实践练习</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[root@study mnesia]# rabbitmqctl stop_app</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">Stopping</span><span style="color:#98C379;--shiki-dark:#98C379;"> rabbit</span><span style="color:#98C379;--shiki-dark:#98C379;"> application</span><span style="color:#98C379;--shiki-dark:#98C379;"> on</span><span style="color:#98C379;--shiki-dark:#98C379;"> node</span><span style="color:#98C379;--shiki-dark:#98C379;"> rabbit@study</span></span></code></pre></div><h3 id="_1-4-启动-rabbitmq-服务应用-start-app" tabindex="-1"><a class="header-anchor" href="#_1-4-启动-rabbitmq-服务应用-start-app"><span>1.4 启动 RabbitMQ 服务应用：start_app</span></a></h3><p>该命令的典型应用场景是：在执行了其他的管理操作之后，重新启动之前停止的 RabbitMQ 应用，比如 rabbitmqct reset</p><p>实践练习</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[root@study mnesia]# rabbitmqctl start_app</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">Starting</span><span style="color:#98C379;--shiki-dark:#98C379;"> node</span><span style="color:#98C379;--shiki-dark:#98C379;"> rabbit@study</span></span></code></pre></div><h3 id="_1-5-等待-rabbitmq-应用的启动-wait" tabindex="-1"><a class="header-anchor" href="#_1-5-等待-rabbitmq-应用的启动-wait"><span>1.5 等待 RabbitMQ 应用的启动：wait</span></a></h3><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">rabbitmqctl</span><span style="color:#98C379;--shiki-dark:#98C379;"> wait</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [pid_file]</span></span></code></pre></div><p>等待 RabbitMQ 应用的启动。它会 <strong>等到 pid_file 的创建</strong>，然后 <strong>等待 pid_file 中所代表的进程启动</strong>。当指定的进程没有启动 RabbitMQ 应用而关闭时将返回失败。</p><p>实践练习</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[root@study mnesia]# rabbitmqctl wait /opt/rabbitmq/var/lib/rabbitmq/mnesia/rabbit@study.pid</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">Waiting</span><span style="color:#98C379;--shiki-dark:#98C379;"> for</span><span style="color:#98C379;--shiki-dark:#98C379;"> rabbit@study</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">pid</span><span style="color:#98C379;--shiki-dark:#98C379;"> is</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 18130</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">Error:</span><span style="color:#98C379;--shiki-dark:#98C379;"> process_not_running</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 前面讲到启动时，有一个警告 Warning: PID file not written; </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 在这里也能证明出来，的确没有写入。这个 18130 可能是最开始笔者不小心直接执行了 rabbitmq-server 创建的</span></span></code></pre></div><h3 id="_1-6-重置-rabbitmq-节点-reset" tabindex="-1"><a class="header-anchor" href="#_1-6-重置-rabbitmq-节点-reset"><span>1.6 重置 RabbitMQ 节点：reset</span></a></h3><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">rabbitmqctl</span><span style="color:#98C379;--shiki-dark:#98C379;"> reset</span></span></code></pre></div><p>将 RabbitMQ 节点重置还原到最初状态。包括从 <strong>原来所在的集群中删除此节点</strong>，从管理数据库中删除所有的配置数据，如已配置的用户、vhost 等。以及删除所有的持久化消息。</p><p><strong>执行该命令前必须停止 RabbitMQ 应用</strong>，比如先执行 <code>rabbitmqctl stop_app</code></p><p>这里笔者就不尝试实践了，只有一个节点</p><h3 id="_1-7-强制重置-rabbitmq-节点-force-reset" tabindex="-1"><a class="header-anchor" href="#_1-7-强制重置-rabbitmq-节点-force-reset"><span>1.7 强制重置 RabbitMQ 节点：force_reset</span></a></h3><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">rabbitmqctl</span><span style="color:#98C379;--shiki-dark:#98C379;"> force_reset</span></span></code></pre></div><p>与 reset 类似，不过它无论当前管理数据库的状态和集群配置是什么，都会无条件的重置节点。<strong>只能在数据库或集群配置已损坏的情况下使用</strong>。</p><h3 id="_1-8-配置轮换日志文件-rotate-logs" tabindex="-1"><a class="header-anchor" href="#_1-8-配置轮换日志文件-rotate-logs"><span>1.8 配置轮换日志文件：rotate_logs</span></a></h3><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">rabbitmqctl</span><span style="color:#98C379;--shiki-dark:#98C379;"> rotate_logs</span><span style="color:#98C379;--shiki-dark:#98C379;"> {suffix}</span></span></code></pre></div><p>配置 RabbitMQ 节点轮换日志文件。RabbitMQ 节点会将原来的日志文件中的内容追加到「原始名称 + 后缀」的日志文件中，然后再将新的日志内容记录到新创建的日志文件中（与原日志同名）。</p><p>当目标文件不存在时，会重新创建。如果不指定 suffix 后缀，则日志文件只是重新打开而不会进行轮换。</p><p>实践练习</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 进入到日志目录</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[root@study ~]# cd /opt/rabbitmq/var/log/rabbitmq/</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[root@study rabbitmq]# ll</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">总用量</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 60</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">-rw-r--r--.</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1</span><span style="color:#98C379;--shiki-dark:#98C379;"> root</span><span style="color:#98C379;--shiki-dark:#98C379;"> root</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 59781</span><span style="color:#98C379;--shiki-dark:#98C379;"> 6月</span><span style="color:#D19A66;--shiki-dark:#D19A66;">  29</span><span style="color:#98C379;--shiki-dark:#98C379;"> 06:04</span><span style="color:#98C379;--shiki-dark:#98C379;"> rabbit@study.log</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">-rw-r--r--.</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1</span><span style="color:#98C379;--shiki-dark:#98C379;"> root</span><span style="color:#98C379;--shiki-dark:#98C379;"> root</span><span style="color:#D19A66;--shiki-dark:#D19A66;">     0</span><span style="color:#98C379;--shiki-dark:#98C379;"> 6月</span><span style="color:#D19A66;--shiki-dark:#D19A66;">  23</span><span style="color:#98C379;--shiki-dark:#98C379;"> 10:23</span><span style="color:#98C379;--shiki-dark:#98C379;"> rabbit@study-sasl.log</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 执行轮换操作</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[root@study rabbitmq]# rabbitmqctl rotate_logs .1</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">Rotating</span><span style="color:#98C379;--shiki-dark:#98C379;"> logs</span><span style="color:#98C379;--shiki-dark:#98C379;"> to</span><span style="color:#98C379;--shiki-dark:#98C379;"> files</span><span style="color:#98C379;--shiki-dark:#98C379;"> with</span><span style="color:#98C379;--shiki-dark:#98C379;"> suffix</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;.1&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[root@study rabbitmq]# ll</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">总用量</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 60</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">-rw-r--r--.</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1</span><span style="color:#98C379;--shiki-dark:#98C379;"> root</span><span style="color:#98C379;--shiki-dark:#98C379;"> root</span><span style="color:#D19A66;--shiki-dark:#D19A66;">     0</span><span style="color:#98C379;--shiki-dark:#98C379;"> 6月</span><span style="color:#D19A66;--shiki-dark:#D19A66;">  29</span><span style="color:#98C379;--shiki-dark:#98C379;"> 06:17</span><span style="color:#98C379;--shiki-dark:#98C379;"> rabbit@study.log</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">-rw-r--r--.</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1</span><span style="color:#98C379;--shiki-dark:#98C379;"> root</span><span style="color:#98C379;--shiki-dark:#98C379;"> root</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 59856</span><span style="color:#98C379;--shiki-dark:#98C379;"> 6月</span><span style="color:#D19A66;--shiki-dark:#D19A66;">  29</span><span style="color:#98C379;--shiki-dark:#98C379;"> 06:17</span><span style="color:#98C379;--shiki-dark:#98C379;"> rabbit@study.log.1</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">-rw-r--r--.</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1</span><span style="color:#98C379;--shiki-dark:#98C379;"> root</span><span style="color:#98C379;--shiki-dark:#98C379;"> root</span><span style="color:#D19A66;--shiki-dark:#D19A66;">     0</span><span style="color:#98C379;--shiki-dark:#98C379;"> 6月</span><span style="color:#D19A66;--shiki-dark:#D19A66;">  29</span><span style="color:#98C379;--shiki-dark:#98C379;"> 06:17</span><span style="color:#98C379;--shiki-dark:#98C379;"> rabbit@study-sasl.log</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">-rw-r--r--.</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1</span><span style="color:#98C379;--shiki-dark:#98C379;"> root</span><span style="color:#98C379;--shiki-dark:#98C379;"> root</span><span style="color:#D19A66;--shiki-dark:#D19A66;">     0</span><span style="color:#98C379;--shiki-dark:#98C379;"> 6月</span><span style="color:#D19A66;--shiki-dark:#D19A66;">  29</span><span style="color:#98C379;--shiki-dark:#98C379;"> 06:17</span><span style="color:#98C379;--shiki-dark:#98C379;"> rabbit@study-sasl.log.1</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 可以看到原来的文件被归档了一样。</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-9-编译-hipe-compile" tabindex="-1"><a class="header-anchor" href="#_1-9-编译-hipe-compile"><span>1.9 编译：hipe_compile</span></a></h3><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">rabbitmqctl</span><span style="color:#98C379;--shiki-dark:#98C379;"> hipe_compile</span><span style="color:#98C379;--shiki-dark:#98C379;"> {directory}</span></span></code></pre></div><p>将部分 RabbitMQ 代码用 HiPE 编译，并将编译后的 <code>.beam</code> 文件保存到指定的文件目录中。如果该目录不存在则会创建，如果存在，则先删除里面的任何 <code>.beam</code> 文件。</p><p>如果要使用预编译的这些文件，则需要设置 <code>RABBITMQ_SERVER_CODE_PATH</code> 环境变量来指定 hipe_compile 调用的路径</p><p>名词解释：</p><ul><li>HiPE：High Performance Erlang，是 Erlang 版的 JIT 编译</li><li><code>.beam</code> ：是 Erlang 编译器生成的文件格式，可以直接加载到 Erlang 虚拟机中运行的文件格式</li></ul><p>如下所示</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[root@study rabbitmq]# rabbitmqctl hipe_compile /opt/rabbitmq/tmp/rabbit-hipe/ebin</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">HiPE</span><span style="color:#98C379;--shiki-dark:#98C379;"> compiling:</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  |</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">---------------------------------------------------------</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                 |#########################################################|</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">Compiled</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 57</span><span style="color:#98C379;--shiki-dark:#98C379;"> modules</span><span style="color:#98C379;--shiki-dark:#98C379;"> in</span><span style="color:#98C379;--shiki-dark:#98C379;"> 221s</span></span></code></pre></div><p>虽然知道有啥用处，指定的新目录里面的确多了很多 <code>.beam</code>ni c 文件</p><h2 id="_2-集群管理" tabindex="-1"><a class="header-anchor" href="#_2-集群管理"><span>2. 集群管理</span></a></h2><p>这里只列出来命令，具体的使用详见后续章节 RabbitMQ 运维;</p><h3 id="_2-1-加入集群-join-cluster" tabindex="-1"><a class="header-anchor" href="#_2-1-加入集群-join-cluster"><span>2.1 加入集群：join_cluster</span></a></h3><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">rabbitmqctl</span><span style="color:#98C379;--shiki-dark:#98C379;"> join_cluster</span><span style="color:#98C379;--shiki-dark:#98C379;"> {cluster_node}</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [--ram]</span></span></code></pre></div><p>将节点计入指定集群中</p><h3 id="集群状态-cluster-status" tabindex="-1"><a class="header-anchor" href="#集群状态-cluster-status"><span>集群状态：cluster_status</span></a></h3><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">rabbitmqctl</span><span style="color:#98C379;--shiki-dark:#98C379;"> cluster_status</span></span></code></pre></div><p>显示集群状态。</p><h3 id="_2-3-修改集群节点类型" tabindex="-1"><a class="header-anchor" href="#_2-3-修改集群节点类型"><span>2.3 修改集群节点类型</span></a></h3><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">rabbitmqctl</span><span style="color:#98C379;--shiki-dark:#98C379;"> change_cluster_node_type</span><span style="color:#98C379;--shiki-dark:#98C379;"> {disc</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> | </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">ram</span><span style="color:#98C379;--shiki-dark:#98C379;"> }</span></span></code></pre></div><p>修改集群节点的类型，修改之前需要停止 RabbitMQ 引用</p><h3 id="_2-4-删除集群节点-forget-cluster-node" tabindex="-1"><a class="header-anchor" href="#_2-4-删除集群节点-forget-cluster-node"><span>2.4 删除集群节点：forget_cluster_node</span></a></h3><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">rabbitmqctl</span><span style="color:#98C379;--shiki-dark:#98C379;"> forget_cluster_node</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [--offline]</span></span></code></pre></div><p>将节点从集群中删除，允许离线执行。</p><h3 id="_2-5-更新集群信息-update-cluster-nodes" tabindex="-1"><a class="header-anchor" href="#_2-5-更新集群信息-update-cluster-nodes"><span>2.5 更新集群信息：update_cluster_nodes</span></a></h3><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">rabbitmqctl</span><span style="color:#98C379;--shiki-dark:#98C379;"> update_cluster_nodes</span><span style="color:#98C379;--shiki-dark:#98C379;"> {clusternode}</span></span></code></pre></div><p>在集群中的节点应用启动前咨询 clusternode 节点的最新信息，并更新相应的集群信息；</p><p><strong>与 join_cluster 不同，它不加入集群</strong>；如这种情况：</p><ul><li>节点 A 和节点 B 在集群中，</li><li>当节点 A 离线了，节点 C 又和 节点 B 组成了一个集群，</li><li>然后节点 B 又离开了集群</li></ul><p>当节点 A 醒来时，它会尝试联系节点 B，但是这样会失败，因为节点 B 已经不在集群中了。</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">rabbitmqctl</span><span style="color:#98C379;--shiki-dark:#98C379;"> update_cluster_nodes</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -n</span><span style="color:#98C379;--shiki-dark:#98C379;"> A</span><span style="color:#98C379;--shiki-dark:#98C379;"> C</span></span></code></pre></div><p>使用以上命令，可解决这种场景下出现的问题。</p><h3 id="_2-6-确保节点可以启动-force-boot" tabindex="-1"><a class="header-anchor" href="#_2-6-确保节点可以启动-force-boot"><span>2.6 确保节点可以启动：force_boot</span></a></h3><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">rabbitmqctl</span><span style="color:#98C379;--shiki-dark:#98C379;"> force_boot</span></span></code></pre></div><p>确保节点可以启动，即使它不是最后一个关闭的节点。</p><p>通常情况下，<strong>当关闭整个 RabbitMQ 集群时</strong>，<strong>重启的第一个节点</strong> <strong>应该是最后关闭的节点</strong>，因为它可以看到其他节点所看不到的事情。但是有时候会出现一些异常情况，比如整个集群都断电，所有节点都不是最后一个关闭的。</p><p>在这种情况下就可以使用该命令告诉节点可以无条件启动。</p><p>在此节点关闭后，集群的任何变化，都会丢失。如果最后一个关闭的节点永久丢失了，那么需要优先使用</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">rabbitmqctl</span><span style="color:#98C379;--shiki-dark:#98C379;"> forget_cluster_node</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> --offline</span></span></code></pre></div><p>因为他可以确保镜像队列的正常运转。</p><h3 id="_2-7-同步镜像队列内容-sync-queue" tabindex="-1"><a class="header-anchor" href="#_2-7-同步镜像队列内容-sync-queue"><span>2.7 同步镜像队列内容：sync_queue</span></a></h3><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">rabbitmqctl</span><span style="color:#98C379;--shiki-dark:#98C379;"> sync_queue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [-p </span><span style="color:#98C379;--shiki-dark:#98C379;">vhost]</span><span style="color:#98C379;--shiki-dark:#98C379;"> {queue}</span></span></code></pre></div><p>指定 <strong>未同步队列 queue 的 slave 镜像可以同步 master 镜像行的内容</strong>。同步期间此队列会被阻塞（所有此队列的生产消息都会被阻塞），直到同步完成。</p><p>**前提是：**配置了 queue 镜像</p><p>注意：未同步队列中的消息被消耗尽后，最终也会变成同步，此命令主要用于未耗尽的队列。（详见后组章节 RabbitMQ 高阶）</p><h3 id="_2-8-取消镜像队列同步-cancel-sync-queue" tabindex="-1"><a class="header-anchor" href="#_2-8-取消镜像队列同步-cancel-sync-queue"><span>2.8 取消镜像队列同步：cancel_sync_queue</span></a></h3><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">rabbitmqctl</span><span style="color:#98C379;--shiki-dark:#98C379;"> cancel_sync_queue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [-p </span><span style="color:#98C379;--shiki-dark:#98C379;">vhost]</span><span style="color:#98C379;--shiki-dark:#98C379;"> {queue}</span></span></code></pre></div><h3 id="_2-9-设置集群名称-set-cluster-name" tabindex="-1"><a class="header-anchor" href="#_2-9-设置集群名称-set-cluster-name"><span>2.9 设置集群名称：set_cluster_name</span></a></h3><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">rabbitmqctl</span><span style="color:#98C379;--shiki-dark:#98C379;"> set_cluster_name</span><span style="color:#98C379;--shiki-dark:#98C379;"> {name}</span></span></code></pre></div><p>设置集群名称。</p><p>集群名称在客户端连接时会通报给客户端。Federation 和 Shovel 插件也会有用到集群名的地方，详细内容参考后续章节 跨越集群的界限</p><p><strong>集群名称 默认是集群中第一个节点的名称</strong>，通过该命令重新设置。在 web 管理界面右上角有可以修改，如下图</p><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231125333.png" alt="image-20220924215257905" tabindex="0" loading="lazy"><figcaption>image-20220924215257905</figcaption></figure><p>通过集群状态也能查看到当前的集群名称</p><div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[root@study rabbitmq]# rabbitmqctl cluster_status</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">Cluster</span><span style="color:#98C379;--shiki-dark:#98C379;"> status</span><span style="color:#98C379;--shiki-dark:#98C379;"> of</span><span style="color:#98C379;--shiki-dark:#98C379;"> node</span><span style="color:#98C379;--shiki-dark:#98C379;"> rabbit@study</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">[{nodes,[{disc,[rabbit@study]}]},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {running_nodes,[rabbit@study]},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {cluster_name,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&lt;&lt;</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;rabbit@study&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {partitions,[]},</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {alarms,[{rabbit@study,[]}]}]</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 这个是没有操作过集群的，默认就是个单节点的集群</span></span></code></pre></div><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章"><span>参考文章</span></a></h2><p><a href="https://zq99299.github.io/mq-tutorial/rabbitmq-ac/05/04.html" target="_blank" rel="noopener noreferrer">应用与集群管理</a></p>`,98)]))}const p=a(r,[["render",l],["__file","rabbitmq-y-manange-app.html.vue"]]),c=JSON.parse('{"path":"/posts/MiddleWare/MQ_Rabbitmq/rabbitmq-y-manange-app.html","title":"RabbitMQ管理 - 应用与集群管理","lang":"zh-CN","frontmatter":{"aliases":"RabbitMQ管理 - 应用与集群管理","tags":null,"cssclass":null,"source":null,"order":450,"category":["RabbitMQ","MQ"],"created":"2024-02-22 10:50","updated":"2024-10-26 09:48","description":"RabbitMQ管理 - 应用与集群管理 本章主要介绍应用与集群相关的一些操作管理命令，包括关闭、重置、开启服务，还有建立集群的一些信息。有关集群搭建请参考后续的「RabbitMQ 运维」章节 1. 应用管理 1.1 停止运行 stop 用于停止运行 RabbitMQ 和 Erlang 虚拟机。 实践练习 1.2 停止运行 shutdown 用于停止运...","watermark":true,"head":[["meta",{"property":"og:url","content":"https://springg.us.kg/posts/MiddleWare/MQ_Rabbitmq/rabbitmq-y-manange-app.html"}],["meta",{"property":"og:site_name","content":"mrjason’s Blog"}],["meta",{"property":"og:title","content":"RabbitMQ管理 - 应用与集群管理"}],["meta",{"property":"og:description","content":"RabbitMQ管理 - 应用与集群管理 本章主要介绍应用与集群相关的一些操作管理命令，包括关闭、重置、开启服务，还有建立集群的一些信息。有关集群搭建请参考后续的「RabbitMQ 运维」章节 1. 应用管理 1.1 停止运行 stop 用于停止运行 RabbitMQ 和 Erlang 虚拟机。 实践练习 1.2 停止运行 shutdown 用于停止运..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231125333.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-28T01:58:08.000Z"}],["meta",{"property":"article:author","content":"MrJason"}],["meta",{"property":"article:modified_time","content":"2024-10-28T01:58:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"RabbitMQ管理 - 应用与集群管理\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404231125333.png\\"],\\"dateModified\\":\\"2024-10-28T01:58:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MrJason\\",\\"url\\":\\"https://springg.us.kg\\"}]}"]]},"headers":[{"level":2,"title":"1. 应用管理","slug":"_1-应用管理","link":"#_1-应用管理","children":[{"level":3,"title":"1.1 停止运行 stop","slug":"_1-1-停止运行-stop","link":"#_1-1-停止运行-stop","children":[]},{"level":3,"title":"1.2 停止运行 shutdown","slug":"_1-2-停止运行-shutdown","link":"#_1-2-停止运行-shutdown","children":[]},{"level":3,"title":"1.3 停止 RabbitMQ 服务应用：stop_app","slug":"_1-3-停止-rabbitmq-服务应用-stop-app","link":"#_1-3-停止-rabbitmq-服务应用-stop-app","children":[]},{"level":3,"title":"1.4 启动 RabbitMQ 服务应用：start_app","slug":"_1-4-启动-rabbitmq-服务应用-start-app","link":"#_1-4-启动-rabbitmq-服务应用-start-app","children":[]},{"level":3,"title":"1.5 等待 RabbitMQ 应用的启动：wait","slug":"_1-5-等待-rabbitmq-应用的启动-wait","link":"#_1-5-等待-rabbitmq-应用的启动-wait","children":[]},{"level":3,"title":"1.6 重置 RabbitMQ 节点：reset","slug":"_1-6-重置-rabbitmq-节点-reset","link":"#_1-6-重置-rabbitmq-节点-reset","children":[]},{"level":3,"title":"1.7 强制重置 RabbitMQ 节点：force_reset","slug":"_1-7-强制重置-rabbitmq-节点-force-reset","link":"#_1-7-强制重置-rabbitmq-节点-force-reset","children":[]},{"level":3,"title":"1.8 配置轮换日志文件：rotate_logs","slug":"_1-8-配置轮换日志文件-rotate-logs","link":"#_1-8-配置轮换日志文件-rotate-logs","children":[]},{"level":3,"title":"1.9 编译：hipe_compile","slug":"_1-9-编译-hipe-compile","link":"#_1-9-编译-hipe-compile","children":[]}]},{"level":2,"title":"2. 集群管理","slug":"_2-集群管理","link":"#_2-集群管理","children":[{"level":3,"title":"2.1 加入集群：join_cluster","slug":"_2-1-加入集群-join-cluster","link":"#_2-1-加入集群-join-cluster","children":[]},{"level":3,"title":"集群状态：cluster_status","slug":"集群状态-cluster-status","link":"#集群状态-cluster-status","children":[]},{"level":3,"title":"2.3 修改集群节点类型","slug":"_2-3-修改集群节点类型","link":"#_2-3-修改集群节点类型","children":[]},{"level":3,"title":"2.4 删除集群节点：forget_cluster_node","slug":"_2-4-删除集群节点-forget-cluster-node","link":"#_2-4-删除集群节点-forget-cluster-node","children":[]},{"level":3,"title":"2.5 更新集群信息：update_cluster_nodes","slug":"_2-5-更新集群信息-update-cluster-nodes","link":"#_2-5-更新集群信息-update-cluster-nodes","children":[]},{"level":3,"title":"2.6 确保节点可以启动：force_boot","slug":"_2-6-确保节点可以启动-force-boot","link":"#_2-6-确保节点可以启动-force-boot","children":[]},{"level":3,"title":"2.7 同步镜像队列内容：sync_queue","slug":"_2-7-同步镜像队列内容-sync-queue","link":"#_2-7-同步镜像队列内容-sync-queue","children":[]},{"level":3,"title":"2.8 取消镜像队列同步：cancel_sync_queue","slug":"_2-8-取消镜像队列同步-cancel-sync-queue","link":"#_2-8-取消镜像队列同步-cancel-sync-queue","children":[]},{"level":3,"title":"2.9 设置集群名称：set_cluster_name","slug":"_2-9-设置集群名称-set-cluster-name","link":"#_2-9-设置集群名称-set-cluster-name","children":[]}]},{"level":2,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}],"git":{"createdTime":1730080688000,"updatedTime":1730080688000,"contributors":[{"name":"MrJason","email":"845886914@qq.com","commits":1}]},"readingTime":{"minutes":7.25,"words":2174},"filePathRelative":"posts/MiddleWare/MQ_Rabbitmq/rabbitmq-y-manange-app.md","localizedDate":"2024年10月28日","excerpt":"\\n<p>本章主要介绍应用与集群相关的一些操作管理命令，包括关闭、重置、开启服务，还有建立集群的一些信息。有关集群搭建请参考后续的「RabbitMQ 运维」章节</p>\\n<h2>1. 应用管理</h2>\\n<h3>1.1 停止运行 stop</h3>\\n<p>用于停止运行 RabbitMQ 和 Erlang 虚拟机。</p>\\n<div class=\\"language-bash\\" data-ext=\\"bash\\" data-title=\\"bash\\"><pre class=\\"shiki shiki-themes one-dark-pro one-dark-pro vp-code\\" style=\\"background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color:#61AFEF;--shiki-dark:#61AFEF\\">rabbitmqctl</span><span style=\\"color:#98C379;--shiki-dark:#98C379\\"> stop</span><span style=\\"color:#ABB2BF;--shiki-dark:#ABB2BF\\"> [pid_file]</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#61AFEF;--shiki-dark:#61AFEF\\">参数：</span></span>\\n<span class=\\"line\\"><span style=\\"color:#61AFEF;--shiki-dark:#61AFEF\\">\\tpid_file：通过</span><span style=\\"color:#98C379;--shiki-dark:#98C379\\"> rabbitmq-server</span><span style=\\"color:#98C379;--shiki-dark:#98C379\\"> 命令启动</span><span style=\\"color:#98C379;--shiki-dark:#98C379\\"> RabbitMQ</span><span style=\\"color:#98C379;--shiki-dark:#98C379\\"> 服务创建的。默认情况存放与</span><span style=\\"color:#98C379;--shiki-dark:#98C379\\"> rabbitmq安装目录/var/lib/rabbitmq/mnesia</span><span style=\\"color:#98C379;--shiki-dark:#98C379\\"> 目录下；可以通过</span><span style=\\"color:#98C379;--shiki-dark:#98C379\\"> RABBITMQ_PID_FILE</span><span style=\\"color:#98C379;--shiki-dark:#98C379\\"> 环境变量来改变存放路径。</span></span>\\n<span class=\\"line\\"><span style=\\"color:#61AFEF;--shiki-dark:#61AFEF\\">\\t\\t\\t  注意：通过</span><span style=\\"color:#98C379;--shiki-dark:#98C379\\"> rabbitmq-server</span><span style=\\"color:#D19A66;--shiki-dark:#D19A66\\"> --detach</span><span style=\\"color:#98C379;--shiki-dark:#98C379\\"> 这个后缀命令启动不会生成</span><span style=\\"color:#98C379;--shiki-dark:#98C379\\"> pid_file</span><span style=\\"color:#98C379;--shiki-dark:#98C379\\"> 文件</span></span></code></pre>\\n</div>","autoDesc":true}');export{p as comp,c as data};
