<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="https://mrjackc.github.io/rss.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <atom:link href="https://mrjackc.github.io/rss.xml" rel="self" type="application/rss+xml"/>
    <title>mrjason’s Blog</title>
    <link>https://mrjackc.github.io/</link>
    <description>春鸽鸽的博客</description>
    <language>zh-CN</language>
    <pubDate>Mon, 28 Oct 2024 08:49:35 GMT</pubDate>
    <lastBuildDate>Mon, 28 Oct 2024 08:49:35 GMT</lastBuildDate>
    <generator>@vuepress/plugin-feed</generator>
    <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
    <category>架构</category>
    <category>CRM</category>
    <category>mall</category>
    <category>后台管理</category>
    <category>微服务</category>
    <category>Minio</category>
    <item>
      <title>01 大数据生态圈</title>
      <link>https://mrjackc.github.io/posts/BigData/</link>
      <guid>https://mrjackc.github.io/posts/BigData/</guid>
      <source url="https://mrjackc.github.io/rss.xml">01 大数据生态圈</source>
      <description>01 大数据生态圈 这是一份有关于大数据生态圈学习过程中各类知识点整理的思维导图集，最近一次更新为 00_装配文件：在此模块中，我对大数据相关软件在 Linux 和 Mac 环境下的安装进行了详细的说明，以确保大数据软件能够尽可能成功的运行在你的电脑上。 0.5_Shell：学习大数据究竟需不需要 Shell 脚本基础，这取决于你自身，若没有 Shel...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<p>这是一份有关于大数据生态圈学习过程中各类知识点整理的思维导图集，最近一次更新为</p>
<ol>
<li>
<p><code>00_装配文件</code>：在此模块中，我对大数据相关软件在 <code>Linux</code> 和 <code>Mac</code> 环境下的安装进行了详细的说明，以确保大数据软件能够尽可能成功的运行在你的电脑上。</p>
</li>
<li>
<p><code>0.5_Shell</code>：学习大数据究竟需不需要 <code>Shell</code> 脚本基础，这取决于你自身，若没有 <code>Shell</code> 脚本基础，也不妨碍你进行大数据的学习，若是拥有 <code>Shell</code> 脚本基础，那么你在处理一些进程的时候，将会事半功倍。</p>
</li>
<li>
<p><code>01_数据源</code>：这部分的思路是 <code>Docker （数据库安装环境）</code>→ <code>Database （数据库）</code>→<code> DataX （数据转换离线同步）</code>，是一个从无到有的过程， <code>Database</code> 部分目前（2019年6月28日）拥有<code> Oracle</code>、<code>MySQL</code>、<code>HBase</code>、<code>Redis</code>、<code>ClickHouse</code>五个部分。</p>
</li>
<li>
<p><code>02_接入层</code>：主要是<code>Flume</code>和<code>Sqoop</code>以及<code>Kafka</code>。</p>
</li>
<li>
<p><code>03_数据处理层</code>：这一层面的内容十分丰富，因而我又做了一次划分，主要分为五个部分:<code>数据存储：如HDFS</code>，<code>数据计算：MapReduce及Spark</code>，<code>数据查询：Hive及Impala</code>，<code>任务调度：Oozie，Azkaban，Kettle等</code>，<code>监控报警：Zookeeper</code>。</p>
</li>
</ol>
<p>针对每一个框架，思维导图的思路如下：</p>
<p>1.每一个框架我都会整理两个文件：理论文件和代码文件。（如无代码文件需要我会专门说明）</p>
<p>2.在理论文件中，我会解释清楚每个框架运作的原理，相应需要注意的细节点。在此部分中将不会或很少会出现代码。</p>
<p>3.在代码文件中，基于理论文件的理解，我会将理论文件中每一部分的功能具体实现写明，以便于在工作中可以直接查询或使用。</p>
<p>说明：红色标记的是重要点</p>
<p>最后说一句我想说的话：</p>
<blockquote>
<p>理解原理或许很简单，但如何在理解原理以后根据它的原理去进行使用创新，是一件非常困难的事，经过了长久的学习以后并非旅程的终点，而是旅程的起点。</p>
</blockquote>
<h1>索引</h1>
<!-- TOC -->
<ul>
<li>
<p><a href="#%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BD%AF%E4%BB%B6%E8%A3%85%E9%85%8D">1.大数据软件装配</a></p>
</li>
<li>
<p><a href="#Shell">2.Shell</a></p>
</li>
<li>
<p><a href="#%E6%95%B0%E6%8D%AE%E6%BA%90">3.数据源</a></p>
</li>
</ul>
<p>- <a href="#Docker">Docker</a></p>
<p>- <a href="#Database">Database</a></p>
<p>- <a href="#MySQL">MySQL</a></p>
<p>- <a href="#Oracle">Oracle</a></p>
<p>- <a href="#Redis">Redis</a></p>
<p>- <a href="#HBase">HBase</a></p>
<p>- <a href="#ClickHouse">ClickHouse</a></p>
<p>- <a href="#DataX">DataX</a></p>
<ul>
<li><a href="#%E6%8E%A5%E5%85%A5%E5%B1%82">4.接入层</a></li>
</ul>
<p>- <a href="#Flume">Flume</a></p>
<p>- <a href="#Sqoop">Sqoop</a></p>
<p>- <a href="#Kafka">Kafka</a></p>
<ul>
<li><a href="#%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E5%B1%82">5.数据处理层</a></li>
</ul>
<p>- <a href="#%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8">数据存储</a></p>
<p>- <a href="#HDFS">HDFS</a></p>
<p>- <a href="#Yarn">Yarn</a></p>
<p>- <a href="#%E6%95%B0%E6%8D%AE%E8%AE%A1%E7%AE%97">数据计算</a></p>
<p>- <a href="#MapReduce">MapReduce</a></p>
<p>- <a href="#Spark">Spark</a></p>
<p>- <a href="#%E6%95%B0%E6%8D%AE%E6%9F%A5%E8%AF%A2">数据查询</a></p>
<p>- <a href="#Hive">Hive</a></p>
<p>- <a href="#Impala">Impala</a></p>
<p>- <a href="#%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6">任务调度</a></p>
<p>- <a href="#Oozie">Oozie</a></p>
<p>- <a href="#Azkaban">Azkaban</a></p>
<p>- <a href="#Kettle">Kettle</a></p>
<p>- <a href="#%E7%9B%91%E6%8E%A7%E6%8A%A5%E8%AD%A6">监控报警</a></p>
<p>- <a href="#Zookeeper">Zookeeper</a></p>
<!-- /TOC -->
<h1>大数据软件装配</h1>
<blockquote>
<p>工欲善其事，必先利其器。</p>
</blockquote>
<p>我的配置环境是：</p>
<p><code>CentOs 6.8</code></p>
<p><code>Hadoop Apache 2.7.2</code></p>
<p><code>Zookeeper 3.4.10</code></p>
<p><code>Hive 1.2.1</code></p>
<p><code>Flume 1.7.0</code></p>
<p><code>Kafka 2.11-0.11.0.2</code></p>
<p><code>HBase 1.3.1</code></p>
<p><code>Sqoop 1.4.6</code></p>
<p><code>Oozie 4.0.0</code></p>
<p><code>Azkaban 2.5.0</code></p>
<p><code>ClickHouse 19.7.3.9</code></p>
<p><code>DataX</code></p>
<p><code>Oracle 18.3.0(这部分内容在Docker中)</code></p>
<p><code>MogoDB 4.0.10</code></p>
<h1>大数据软件装配</h1>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/01_大数据各软件详细安装流程.png" alt="01_大数据各软件详细安装流程" tabindex="0" loading="lazy"><figcaption>01_大数据各软件详细安装流程</figcaption></figure>
<h1>Shell</h1>
<p>本框架内部所做的<code>Shell</code>思维导图仅仅是一个简单的入门，学习结束以后可以看懂基本的脚本流程，和撰写一些简单的脚本，更深入的推荐去看<code>Linux命令行与shell脚本编程大全</code>。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410261012170.png" alt="Shell" tabindex="0" loading="lazy"><figcaption>Shell</figcaption></figure>
<h1>数据源</h1>
<h2>Docker</h2>
<p><code>Docker</code>是一个解决了运行环境和配置问题的软件容器，主要由三部分组成，<code>镜像（Image）</code>、<code>容器(Container)</code>、以及 <code>仓库(Repository)</code> ，我使用 <code>Docker</code> 的主要目的是在<code>Mac</code>系统上安装<code>Oracle</code>，因而在<code>Docker</code>的文档中，如何安装与使用是我的重点。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410261012213.png" alt="Docker" tabindex="0" loading="lazy"><figcaption>Docker</figcaption></figure>
<h2>Database</h2>
<h3>MySQL</h3>
<p><code>MySQL</code>目前需要更新的地方仍然很多，目前有一份依照<code>DDL、DML及DCL</code>思路进行制作的说明文档。</p>
<h3>Oracle</h3>
<p>暂无</p>
<h3>Redis</h3>
<p><code>Redis</code>是一个开源的<code>key-value</code>式存储系统，配合关系型数据库做高速缓存，由于其拥有持久化能力,利用其多样的数据结构存储特定的数据是它的两个主要用途。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410261010940.png" alt="Redis" tabindex="0" loading="lazy"><figcaption>Redis</figcaption></figure>
<h3>HBase</h3>
<h4>理论文件</h4>
<p><code>HBase</code> 作为基于 <code>hadoop</code> 的 <code>NoSQL</code> 数据库，其原理性和操作性的要求都比较强，在原理阶段讲解了 <code>HBase</code> 的逻辑结构和物理存储结构，以及针对于其结构进行优化的的操作手段。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/1726554.png" alt="HBase" tabindex="0" loading="lazy"><figcaption>HBase</figcaption></figure>
<h4>代码文件</h4>
<p><code>HBase</code>的代码文件是基于<code>HbaseAPI</code>操作搭建了一个微博项目，项目源码已写好，但具体分析文件还在制作中。</p>
<h3>ClickHouse</h3>
<p><code>ClickHouse</code>能够使用<code>SQL</code>查询实时生成分析数据报告，主要用于在线分析处理查询。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410261016963.png" alt="ClickHouse" tabindex="0" loading="lazy"><figcaption>ClickHouse</figcaption></figure>
<h2>DataX</h2>
<p><code>DataX</code>是一个异构数据源离线同步工具，致力于实现各种数据库间的数据同步功能，它的框架设计与<code>Flume</code>有些类似，通过<code>Reader</code>、<code>Framework</code>、<code>Writer</code>进行数据的转换同步，它的使用重点在于通过<code>json</code>的配置文件设定执行任务。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410261016003.png" alt="DataX" tabindex="0" loading="lazy"><figcaption>DataX</figcaption></figure>
<h1>接入层</h1>
<h2>Flume</h2>
<p><code>Flume</code>是一个基于流式架构数据采集、聚合和传输系统，因而它实用性较强，通过<code>Source</code> ，<code>Channel</code>，<code>Sink</code> 进行控制。所以我把它理论和代码文件归并。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410261016039.png" alt="Flume" tabindex="0" loading="lazy"><figcaption>Flume</figcaption></figure>
<h2>Sqoop</h2>
<p><code>Sqoop</code> 是一个用于 <code>Hadoop</code> 和关系型数据库数据互导的小框架，其原理就是讲导入导出操作译作 <code>MapReduce</code> 语言，最关键的操作就是根据其语法进行脚本写作，因而理论与代码文件合并，同时整理出了 <code>Sqoop</code> 的常用命令。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410261016086.png" alt="Sqoop" tabindex="0" loading="lazy"><figcaption>Sqoop</figcaption></figure>
<h2>Kafka</h2>
<p><code>Kafka</code>的用途多种多样，并不只局限于数据接入一种，它可以进行日志收集，消息系统，用户活动跟踪，流式处理等，要理解<code>Kafka</code>，首先要了解它的架构运行，其次了解它的文件存储机制。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410261016131.png" alt="Kafka" tabindex="0" loading="lazy"><figcaption>Kafka</figcaption></figure>
<h1>数据处理层</h1>
<h2>数据存储</h2>
<h3>HDFS</h3>
<h4>理论文件</h4>
<p><code>HDFS</code> 是 <code>Hadoop</code> 的基石，因此我把 <code>Hadoop</code> 的概述与它进行了合并，作为一个小简介，从而引出 <code>HDFS</code> ,<code>HDFS</code>的主要部分在于理解<code>NN</code>、<code>DN</code>、<code>Client</code>和<code>2NN</code>的运行机制。</p>
<p>在2019年7月13日<code>HDFS理论文件</code>进行了一次更新，将<code>HDFS</code>架构，读写流程，以及<code>NN与2NN</code>的关系纳入了<code>HDFS运作原理</code>模块中，同时新增了<code>Hadoop压缩格式</code>，及<code>Hadoop优化</code>两个模块，完善了<code>HDFS</code>的内容。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410261016160.png" alt="HDFS" tabindex="0" loading="lazy"><figcaption>HDFS</figcaption></figure>
<h4>代码文件</h4>
<p>已更新，主要是<code>Hadoop</code>在<code>shell</code>命令行中的一些常用命令整理归纳</p>
<h3>Yarn</h3>
<p><code>Yarn</code>是<code>Hadoop</code>中的资源调度平台，在这一内容中的重点主要有<code>Yarn工作机制</code>（以<code>MapReduce</code>程序为例，详细的介绍了<code>Yarn</code>的资源调度流程），<code>Yarn资源调度器</code>(介绍了<code>Yarn</code>的三种资源调度器)，以及<code>Yarn的资源推测执行机制</code>。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410261016181.png" alt="Yarn" tabindex="0" loading="lazy"><figcaption>Yarn</figcaption></figure>
<h2>数据计算</h2>
<h3>MapReduce</h3>
<h4>理论文件</h4>
<p><code>MapReduce</code> 是 <code>Hadoop</code> 中的分布式计算系统，在之后的内容中，有许多框架都是基于 <code>MapReduce</code> 所进行的，比如 <code>Oozie</code> ，比如 <code>Hive</code> ，因而理解 <code>MapReduce</code> 的原理是非常必要的。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410261016206.png" alt="MR" tabindex="0" loading="lazy"><figcaption>MR</figcaption></figure>
<h4>备注</h4>
<p><code>MapReduce</code> 的知识框架整理方面，还是存在一些代码混杂于理论文件之中的情况，在接下来的版本中应该会对这一点进行更新。</p>
<h3>Spark</h3>
<p><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/13_Spark笔记.png" alt="13_Spark笔记" loading="lazy"><br>
<img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/14_Spark内核.png" alt="14_Spark内核" loading="lazy"><br>
<img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/15_Spark调优.png" alt="15_Spark调优" loading="lazy"></p>
<h2>数据查询</h2>
<h3>Hive</h3>
<p><code>Hive</code> 的情况恰恰与 <code>Zookeeper</code> 相反，<code>Hive</code> 作为一个基于 <code>Hadoop</code> 的数仓工具，其原理运作并不难，即底层基于 <code>MapRuduce</code> 的类 <code>SQL</code> 查询工具，因此 <code>Hive</code> 更注重的是代码文件，其中 <code>4 ~ 9</code> 章我以 <code>sql</code> 整理出来。</p>
<p><code>Hive理论文档</code>在2019年7月14日又进行了一次更新，这次更新主要是增加了其与数据库的关系、保存元数据的方式，以及针对压缩和调优，进行了一次总结。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410261016231.png" alt="Hive" tabindex="0" loading="lazy"><figcaption>Hive</figcaption></figure>
<h3>Impala</h3>
<h2>任务调度</h2>
<h3>Oozie</h3>
<p><code>Oozie</code> 是一个任务调度的小框架，其原理是把<code> xml</code> 语言转译为<code> mapreduce</code> 程序来做，但 <code>Oozie1</code> 只有<code>Map</code>阶段，此处我们归纳总结的是<code> Oozie1</code>。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410261016257.png" alt="Oozie" tabindex="0" loading="lazy"><figcaption>Oozie</figcaption></figure>
<h3>Azkaban</h3>
<p><code>Azkaban</code>作为任务调度框架，其易用性无论从环境配置上来讲，以及配置文件的撰写上来讲，都要比<code>Oozie</code>更好。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410261016289.png" alt="Azkaban" tabindex="0" loading="lazy"><figcaption>Azkaban</figcaption></figure>
<h3>Kettle</h3>
<p><code>Kettle</code>是一个可视化的<code>ETL工具</code>，简单易上手，使用很轻松。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410261016314.png" alt="Kettle" tabindex="0" loading="lazy"><figcaption>Kettle</figcaption></figure>
<h2>监控报警</h2>
<h3>Zookeeper</h3>
<p><code>Zookeeper</code> 的主要目的是为了监控集群中的修改操作，它的架设与操作都非常简单，因此 <code>Zookeeper</code> 只有理论文件，在理论中，尤其要注意理解的是它的监听器原理和选举机制（类 <code>Paxos</code> 算法），此外，<code>Zookeeper</code>的写数据流程也值得注意。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202410261016341.png" alt="Zookeeper" tabindex="0" loading="lazy"><figcaption>Zookeeper</figcaption></figure>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/01_大数据各软件详细安装流程.png" type="image/png"/>
    </item>
    <item>
      <title>架构-架构基础</title>
      <link>https://mrjackc.github.io/posts/Architect/base/arch-basic.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/base/arch-basic.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">架构-架构基础</source>
      <description>架构-架构基础 1. 软件架构简介 所谓架构，见仁见智，很难有一个明确或标准的定义；但架构并非镜花水月或阳春白雪，有系统的地方就需要架构，大到航空飞机，小到一个电商系统里面的一个功能组件，都需要设计和架构。抽象而言，架构就是对系统中的实体以及实体之间的关系所进行的抽象描述，是对物/信息的功能与形式元素之间的对应情况所做的分配，是对元素之间的关系以及元素...</description>
      <category>架构</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 软件架构简介</h2>
<p>所谓架构，见仁见智，很难有一个明确或标准的定义；但架构并非镜花水月或阳春白雪，有系统的地方就需要架构，大到航空飞机，小到一个电商系统里面的一个功能组件，都需要设计和架构。<strong>抽象而言，架构就是对系统中的实体以及实体之间的关系所进行的抽象描述，是对物/信息的功能与形式元素之间的对应情况所做的分配，是对元素之间的关系以及元素同周边环境之间的关系所做的定义</strong>。架构能将目标系统按某个原则进行切分，切分的原则，是要便于不同的角色进行并行工作，结构良好的创造活动要优于毫无结构的创造活动。</p>
<p>软件架构的核心价值，即是控制系统的复杂性，将核心业务逻辑和技术细节的分离与解耦。软件架构是系统的草图，它描述的对象是直接构成系统的抽象组件；各个组件之间的连接则明确和相对细致地描述组件之间的通信。在实现阶段，这些抽象组件被细化为实际的组件，比如具体某个类或者对象。在面向对象领域中，组件之间的连接通常用接口来实现。架构师的职责是努力训练自己的思维，用它去理解复杂的系统，通过合理的分解和抽象，理解并解析需求，创建有用的模型，确认、细化并扩展模型，管理架构；能够进行系统分解形成整体架构，能够正确的技术选型，能够制定技术规格说明并有效推动实施落地。</p>
<h2>2. 系统复杂性的来源与应对</h2>
<p>在软件开发中，程序员往往能够脱离现实规律的束缚，创造出天马行空的世界，其也是最具有创造力的活动之一。编程唯一需要的是创造力思维和思维组织能力，这意味着在软件开发过程中最大限制是理解我们正在创建的对象。随着软件的演进，加入更多的功能点，系统变得越来越复杂：各个模块（Module）间存在着各种微妙的依赖关系。系统的复杂性随着时间积累，对于程序员来说，修改系统时考虑周全所有的的相关因素变得越来越困难。这就会使软件开放进度变缓慢，并且引入 Bug，而导致会进一步延缓开发进度，增加开发成本。在任何一个系统的生命周期中，复杂性不可避免会增加；系统越大，需要更多的人开发，管理系统复杂性的工作就越困难。</p>
<p>Eric Evans 在 Domain‐Driven Design 一书中吐槽了所谓的意大利面式架构，即代码确实做了有用的事，但很难解释它是如何去执行的；他认为造成这种窘境的主要原因是，将领域问题的复杂度与技术细节的复杂度混合在了一起，最终导致整体复杂度的指数级增长。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300852051.png" alt="image-20220704092621383" tabindex="0" loading="lazy"><figcaption>image-20220704092621383</figcaption></figure>
<p>复杂性不是凭空而来，很多时候也不是刻意为之，这也就意味着复杂性的增加往往不会以我们的主观意志为转移。就像房间里的大象，我们无法逃避，也不能视而不见。复杂性的来源可能是：</p>
<ul>
<li>吸积与持续迭代：增量式设计意味着软件设计永不结束，设计在系统的生命周期中持续发生，程序员要时刻考虑设计问题。增量开发也意味着持续重构。一个系统的初始设计几乎从来都不是最好的方案。随着经验的增加，必然会发现更好的设计方案。</li>
<li>交互且无扩展性设计：当吸积效应导致的大规模系统，结合了交互这个特性，会使技术系统更加复杂。一个技术系统除了作用于自身，还会与其它大量系统产生交互。比如下单购买一件商品，那么订单系统，商品系统，支付系统，物流系统，卡券系统就会交互协作。这样吸积的复杂性，由于交互特性的出现，会呈现几何级数上升。</li>
<li>不合理的业务封装：不合理的业务封装是一个相对宽泛的概念，其具体的表现譬如面向过程而不是对象、分层不合理等。</li>
<li>缺乏统一语言：典型的敏捷开发的结构，流水线上的各个角色往往会专注于自己负责的环节，精细化的分工也限制了每个角色的全局视角；虽然我们经常提倡所谓的主人翁意识，但是在落地时又很难去推进。</li>
<li>缺乏约束与规范：在团队协作开发的背景下，缺少规范和约束会严重损害架构的一致性（Consistency），代码的可维护性将急剧下降。可能规范在实现层面就是命名、分包等不影响代码运行的小问题，但是千里之堤，溃于蚁穴，正是这些微末的不注意导致了整体复杂性的雪崩。</li>
</ul>
<p>复杂性的应对永远不会是一劳永逸，我们需要不断地推陈出新，是动态、渐进的重塑自己对软件系统的认识，不断认识问题和寻找更优解的持续迭代。第一个控制复杂性的途径是代码简单，意图清晰（Obvious）。例如: 减少特殊场景的处理，或变量命名一致性都能降低系统复杂性。另一种方式就是对复杂问题的抽象然后分而治之。</p>
<h2>3. 大型网站的特点</h2>
<ul>
<li>用户多，分布广泛</li>
<li>大流量，高并发</li>
<li>海量数据，服务高可用</li>
<li>安全环境恶劣，易受网络攻击</li>
<li>功能多，变更快，频繁发布</li>
<li>从小到大，渐进发展</li>
<li>以用户为中心</li>
<li>免费服务，付费体验</li>
</ul>
<h2>4. 大型网站架构目标</h2>
<ul>
<li>高性能：提供快速的访问体验。</li>
<li>高可用：网站服务一直可以正常访问。</li>
<li>可伸缩：通过硬件增加/减少，提高/降低处理能力。</li>
<li>安全性：提供网站安全访问和数据加密，安全存储等策略。</li>
<li>扩展性：方便的通过新增/移除方式，增加/减少新的功能/模块。</li>
<li>敏捷性：随需应变，快速响应；</li>
</ul>
<h2>参考文章</h2>
<p><a href="https://pdai.tech/md/arch/arch-x-basic.html" target="_blank" rel="noopener noreferrer">架构 - 架构基础: 特点,本质...</a></p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300852051.png" type="image/png"/>
    </item>
    <item>
      <title>架构-理解架构的核心要素</title>
      <link>https://mrjackc.github.io/posts/Architect/base/arch-x-core-metrics.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/base/arch-x-core-metrics.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">架构-理解架构的核心要素</source>
      <description>架构-理解架构的核心要素 一般来说软件架构需要关注性能、可用性、伸缩性、扩展性和安全性这5个架构要素。 1. 架构的核心要素 所谓架构，一种通俗的说法就是“最高层次的规划，难以改变的决定”，这些规划和决定奠定了事物未来发展的方向和最终的蓝图。 而软件架构即“有关软件整体结构与组件的抽象描述，用于指导大型软件系统各方面的设计”。一般来说软件架构需要关注性...</description>
      <category>架构</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<blockquote>
<p>一般来说软件架构需要关注<strong>性能、可用性、伸缩性、扩展性和安全性这5个架构要素</strong>。</p>
</blockquote>
<h2>1. 架构的核心要素</h2>
<p>所谓架构，一种通俗的说法就是“最高层次的规划，难以改变的决定”，这些规划和决定奠定了事物未来发展的方向和最终的蓝图。</p>
<p>而软件架构即“有关软件整体结构与组件的抽象描述，用于指导大型软件系统各方面的设计”。一般来说软件架构需要关注性能、可用性、伸缩性、扩展性和安全性这5个架构要素。</p>
<h3>1.1 性能</h3>
<p>性能是网站架构设计的一个重要方面，任何软件架构设计方案都必须考虑可能带来的性能问题。也正因为性能问题几乎无处不在，所以优化网站性能的手段也非常多：</p>
<ul>
<li><code>浏览器端</code>：可以通过浏览器缓存、页面压缩传输、合理布局页面、减少Cookie传输等手段，甚至可以使用CDN加速功能。</li>
<li><code>应用服务器端</code>：可以使用服务器本地缓存和分布式缓存，也可以通过异步操作方式来加快响应，在高并发请求的情况下，可以将多台应用服务器组成一个集群共同对外服务，提高整体处理能力，改善性能。</li>
<li><code>数据库服务器端</code>：可用使用索引、缓存、SQL性能优化等手段，还可以使用NoSQL数据库来优化数据模型、存储结构等。</li>
</ul>
<p>衡量网站性能有一系列指标，重要的有响应时间、TPS、系统性能计数器等，通过这些指标以确定系统设计是否达到目标。</p>
<h3>1.2 可用性</h3>
<p>可用性即能够不间断提供服务的时间。几乎所有网站都承诺7×24小时可用，但事实上任何网站都不可能达到完全的7×24，总会有一些故障时间，扣除这些故障时间，就是网站的可用时间。一些大型网站可以做到4个9以上的可用性，也就是99.99%。</p>
<p>网站高可用的主要手段就是冗余，应用部署在多台服务器上同时提供服务，数据存储在多台服务器上相互备份，任何一台服务器都不会影响应用的整体可以，通常的实现手段即把多台服务器通过负载均衡设备组成一个集群。</p>
<p>衡量一个系统架构设计是否满足高可用的目标，就是假设系统中任何一台或者多台服务器宕机时，以及出现各种不可预期的问题时，系统整体是否依然可用。</p>
<h3>1.3 伸缩性</h3>
<p>大型网站需要面对大量用户的高并发访问和存储海量数据，网站通过集群的方式将多台服务器组成一个整体共同提供服务。所谓伸缩性是指通过不断向集群中加入服务器的手段来缓解不断整体上市用户并发访问压力和不断增长的数据存储需求。</p>
<p>衡量架构伸缩性的主要标准就是是否可用多台服务器构建集群，是否容易向集群中添加新的服务器。加入新的服务器后是否可以提供和原来的服务器无差别的服务。集群中可容纳的总服务器数量是否有限制。</p>
<h3>1.4 扩展性</h3>
<p>不同于其他架构要素主要关注非功能性需求，网站的扩展性架构直接关注网站的功能需求。网站快速发展，功能不断扩展，如何设计网站的架构使其能够快速响应需求变化，是网站可扩展架构的主要目标。</p>
<p>衡量网站架构扩展性好坏的主要标准就是在网站增加新的业务产品时，是否可以实现对现有产品透明无影响，不同产品之间是否很少耦合等。</p>
<p>网站可扩展架构的主要手段是事件驱动架构和分布式服务。</p>
<p>事件驱动通常利用消息队列实现，通过这种方式将消息生产和处理逻辑分隔开。</p>
<p>服务器服务则是将业务和可复用服务分离开来，通过分布式服务框架调用。新增加产品可用通过调用可复用的服务来实现自身的业务逻辑，而对现有产品没有任何影响。</p>
<h3>1.5 安全性</h3>
<p>互联网是开放的，任何人在任何地方都可以访问网站。网站的安全架构就是保护网站不受恶意访问和攻击，保护网站的重要数据不被窃取。</p>
<p>衡量网站安全架构的标准就是针对现存和潜在的各种攻击和窃密手段，是否有可靠的应对策略。</p>
<h2>参考文章</h2>
<p><a href="https://pdai.tech/md/arch/arch-x-core-metrics.html" target="_blank" rel="noopener noreferrer"><strong>架构 - 理解架构的核心要素</strong></a></p>
]]></content:encoded>
    </item>
    <item>
      <title>架构-理解架构的演进</title>
      <link>https://mrjackc.github.io/posts/Architect/base/arch-x-evolution.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/base/arch-x-evolution.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">架构-理解架构的演进</source>
      <description>架构-理解架构的演进 在学习架构时，第一步不要去学习框架，而是要学习架构的演进。强烈推荐李智慧老师的《大型网站技术架构》，这本书翻起来很快，对构筑你自己的体系很有帮助，本文的内容来源于它，在此基础上拓展了下 1. 架构演进 大型网站的技术挑战主要来自于庞大的用户，高并发的访问和海量的数据，任何简单的业务一旦需要处理数以P计的数据和面对数以亿计的用户，问...</description>
      <category>架构</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<blockquote>
<p>在学习架构时，<strong>第一步不要去学习框架，而是要学习架构的演进</strong>。强烈推荐李智慧老师的《大型网站技术架构》，这本书翻起来很快，对构筑你自己的体系很有帮助，本文的内容来源于它，在此基础上拓展了下</p>
</blockquote>
<h2>1. 架构演进</h2>
<p>大型网站的技术挑战主要来自于庞大的用户，高并发的访问和海量的数据，任何简单的业务一旦需要处理数以P计的数据和面对数以亿计的用户，问题就会变得很棘手。大型网站架构主要就是解决这类问题。</p>
<p>架构选型是根据当前业务需要来的，在满足业务需求的前提下，既要有足够的扩展性也不能过度设计，每次的架构升级都是为了解决系统瓶颈而做的。</p>
<h3>1.1 初始阶段的网站架构</h3>
<p>初始阶段都比较简单，通常一台服务器就可以搞定一个网站了，看图。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300856967.png" alt="image-20220704202232501.png" tabindex="0" loading="lazy"><figcaption>image-20220704202232501.png</figcaption></figure>
<h3>1.2 应用服务和数据服务分离</h3>
<p>随着网站业务的发展，一台服务器逐渐不能满足需求；这时候就需要将应用和数据分离，如图。<br>
<img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300856005.png" alt="image-20220704202540782.png" loading="lazy"></p>
<h3>1.3 使用缓存改善网站性能</h3>
<p>毫无疑问，现在的网站基本上都会使用缓存，即：80%的业务访问都会集中在20%的数据上。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300856044.png" alt="image-20220704202615168.png" tabindex="0" loading="lazy"><figcaption>image-20220704202615168.png</figcaption></figure>
<h3>1.4 使用应用服务器集群改善网站的并发处理能力</h3>
<p>因为单一应用服务器能够处理的请求连接有限，在网站访问高峰时期，应用服务器会成为整个网站的瓶颈。因此使用负载均衡处理器势在必然。通过负载均衡调度服务器，可将来自浏览器的访问请求分发到应用的集群中的任何一台服务器上。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300856073.png" alt="image-20220704202752594" tabindex="0" loading="lazy"><figcaption>image-20220704202752594</figcaption></figure>
<h3>1.5 数据库读写分离</h3>
<p>当用户达到一定规模后，数据库因为负载压力过高而成为网站的瓶颈。而目前主流的数据库都提供主从热备功能，通过配置两台数据库主从关系，可以将一台数据库的数据更新同步到另一台服务器上。网站利用数据库这一功能实现数据库读写分离，从而改善数据库负载压力。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300856123.png" alt="image-20220704202808118" tabindex="0" loading="lazy"><figcaption>image-20220704202808118</figcaption></figure>
<h3>1.6 使用反向代理和CDN加速网站响应</h3>
<p>提高网站的访问速度，主要手段有使用CDN和反向代理。</p>
<p>CDN和反向代理的基本原理都是缓存，区别在于CDN部署在网络提供商的机房，而反向代理是部署在网站的中心机房，当用户请求到达中心机房后，首先访问的反向代理，如果反向代理缓存着用户请求的资源，则直接返回给用户。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300856164.png" alt="image-20220704202934009" tabindex="0" loading="lazy"><figcaption>image-20220704202934009</figcaption></figure>
<h3>1.7 使用分布式文件系统和分布式数据库系统</h3>
<p>任何强大的单一服务器都满足不了大型网站持续增长的业务需求。</p>
<p>分布式数据库时网站数据库拆分的最后手段，只用在单表数据规模非常大的时候才使用。不到不得已时，网站更常用的数据库拆分手段是业务拆分，将不同业务的数据部署在不同的物理服务器上。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300856193.png" alt="image-20220704203026849" tabindex="0" loading="lazy"><figcaption>image-20220704203026849</figcaption></figure>
<h3>1.8 使用NoSQL和搜索引擎</h3>
<p>搜索引擎也基本已经形成现在大型网站必须提供的功能了，网站需要采用一些非关系数据库技术如NoSQL和非数据库查询技术如搜索引擎。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300856224.png" alt="image-20220704203106737" tabindex="0" loading="lazy"><figcaption>image-20220704203106737</figcaption></figure>
<h3>1.9 业务拆分</h3>
<p>大型网站为了应对日益复杂的业务场景，通过使用分而治之的手段将整个网站业务拆分成不同的产品线。</p>
<p>具体到技术上，也会根据产品线划分，将一个网站拆分成许多不同的应用，每个应用独立部署维护。应用之间可以通过超链接建立管理，也可以通过消息队列进行数据分发，<strong>当然最多的还是通过访问同一个数据存储系统来构成一个关联的完整系统</strong>。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300856260.png" alt="image-20220704203305103" tabindex="0" loading="lazy"><figcaption>image-20220704203305103</figcaption></figure>
<h3>1.10 分布式服务</h3>
<p>由于每一个应用系统都需要执行许多相同的业务操作，比如用户管理，session管理，那么可以将这些公用的业务提取出来，独立部署。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300856294.png" alt="image-20220704203400514" tabindex="0" loading="lazy"><figcaption>image-20220704203400514</figcaption></figure>
<h2>2. 示例:电商系统架构演进</h2>
<p>具体以电子商务网站为例， 展示web应用的架构演变过程。</p>
<h3>1.0时代</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300856326.png" alt="image-20220704203436208.png" tabindex="0" loading="lazy"><figcaption>image-20220704203436208.png</figcaption></figure>
<p>这个时候是一个web项目里包含了所有的模块，一个数据库里包含了所需要的所有表，这时候网站访问量增加时，首先遇到瓶颈的是应用服务器连接数，比如tomcat连接数不能无限增加，线程数上限受进程内存大小、CPU内核数等因素影响，当线程数到达一定数时候，线程上下文的切换对性能的损耗会越来越严重，响应会变慢，通过增加web应用服务器方式的横向扩展对架构影响最小，这时候架构会变成下面这样：</p>
<h3>2.0时代</h3>
<p><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300856361.png" alt="image-20220704203621715.png" loading="lazy"><br>
这时候随着网站访问量继续增加，继续增加应用服务器数量后发现数据库成了瓶颈，而数据库的最主要的瓶颈体现在两方面：</p>
<ul>
<li>数据库的最大连接数是有限的，比如当前数据库的连接数设置8000，如果每个应用服务器与数据库的初始连接数设置40，那么200台web服务器是极限， 并且连接数太多后，数据库的读写压力增大，耗时增加</li>
<li>当单表数量过大时，对该表的操作耗时会增加，索引优化也是缓兵之计</li>
</ul>
<p>这时，根据业务特点，如果读写比差距不大，并且对数据一致性要求不是很高的情况下，数据库可以采用主从方式进行读写分离的方案，并且引入缓存机制来抗读流量。如果读写比差距很大或者对数据一致性要求高时，就不适合用读写分离方案，需要考虑业务的垂直拆分，这时期的系统架构图如下：</p>
<h3>3.0时代</h3>
<h4>3.1 读写分离</h4>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300856391.png" alt="image-20220704203808145.png" tabindex="0" loading="lazy"><figcaption>image-20220704203808145.png</figcaption></figure>
<p>这时候仍然是垂直架构，所有业务集中在一个项目里。项目维护、快速迭代问题会越来越严重，单个模块的开发都需要发布整个项目，项目稳定性也受到很大挑战，这是需要考虑业务的垂直拆分，需要将一些大的模块单独拆出来，这时候的架构图如下：</p>
<h3>4.0 业务垂直拆分</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300856425.png" alt="image-20220704203919468" tabindex="0" loading="lazy"><figcaption>image-20220704203919468</figcaption></figure>
<p>这时候为了进一步提升用户体验，加速用户的网站访问速度，会使用CDN来缓存信息，用户会访问最近的CDN节点来提升访问速度。此时的架构图如下：</p>
<h4>4.1 使用CDN来缓存信息</h4>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300856463.png" alt="image-20220704204007659.png" tabindex="0" loading="lazy"><figcaption>image-20220704204007659.png</figcaption></figure>
<p>随着业务量增大，一些核心系统数据库单表数量达到几千万甚至亿级，这时候对该表的数据操作效率会大大降低，并且虽然有缓存来抗读的压力，但是对于大量的写操作和一些缓存miss的流量到达一定量时，单库的负荷也会到达极限，这时候需要将表拆分，一般直接采用分库分表，因为只做分表的话，单个库的连接瓶颈仍然无法解决。分库分表后的架构如下：</p>
<h4>4.2分库分表架构</h4>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300856501.png" alt="image-20220704204058186" tabindex="0" loading="lazy"><figcaption>image-20220704204058186</figcaption></figure>
<p>随着流量的进一步增大，这时候系统仍然会有瓶颈出现，以订单系统为例： 单个机房的机器是有限的，不能一直新增下去，并且基于容灾的考虑，一般采用同城双机房的方式，机房之间用专线链接，同城跨机房质检的延时在几毫秒，此时的架构图如下：</p>
<h4>4.3 同城双机房</h4>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300856538.png" alt="image-20220704204203286" tabindex="0" loading="lazy"><figcaption>image-20220704204203286</figcaption></figure>
<p>由于数据库主库只能是在一个机房，所以仍然会有一半的数据库访问是跨机房的，虽然延时只有几毫秒，但是一个调用链里的数据库访问太多后，这个延时也会积少成多。其次这个架构还是没能解决数据库连接数瓶颈问题</p>
<ul>
<li>随着应用服务器的增加，虽然是分库分表，但每增加一台应用服务器，都会与每个分库建立连接，比如数据库连接池默认连接数是40，而如果mysql数据库的最大连接数是8000的话，那么200台应用服务器就是极限。</li>
<li>当应用的量级太大后，单个城市的机器、电、带宽等资源无法满足业务的持续增长。这时就需要考虑SET化架构，也就是单元化架构，大体思路就是将一些核心系统拆成多个中心，每个中心成为一个单元，流量会按照一定的规则分配给每个单元，这样每个单元只负责处理自己的流量就可以了。每个单元要尽量自包含、高内聚。这是从整体层面将流量分而治之的思路。这是单元化后的机构简图如下：</li>
</ul>
<h3>5.0 单元化</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300856573.png" alt="image-20220704204400586" tabindex="0" loading="lazy"><figcaption>image-20220704204400586</figcaption></figure>
<p>从上面的架构图里能看到，流量从接入层按照路由规则（比如以用户ID来路由）路由到不同单元，每个单元内都是高内聚，包含了核心系统，数据层面的分片逻辑是与接入层路有逻辑一致，也解决了数据库连接的瓶颈问题，但是一些跨单元的调用是无法避免的，同时也有些无法拆分的业务需要放在中心单元，供所有其他单元调用。</p>
<h2>参考文章</h2>
<p><a href="https://pdai.tech/md/arch/arch-x-evolution.html" target="_blank" rel="noopener noreferrer"><strong>架构 - 理解架构的演进</strong></a></p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300856967.png" type="image/png"/>
    </item>
    <item>
      <title>架构-理解架构的模式2</title>
      <link>https://mrjackc.github.io/posts/Architect/base/arch-x-pattern-2.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/base/arch-x-pattern-2.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">架构-理解架构的模式2</source>
      <description>架构-理解架构的模式2 革命尚未成功，同志们还需努力。需要多揣摩揣摩 TIP 本文整理自朱晔的互联网架构实践心得, 他是结合了 微软给出的云架构的一些模式的基础上加入他自己的理解来总结互联网架构中具体的一些模式。 朱晔：设计模式是前人通过大量的实践总结出来的一些经验总结和最佳实践。在经过多年的软件开发实践之后，回过头来去看23种设计模式你会发现很多平时...</description>
      <category>架构</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<blockquote>
<p>革命尚未成功，同志们还需努力。需要多揣摩揣摩</p>
</blockquote>
<blockquote>
<p>TIP</p>
<p>本文整理自<a href="https://www.cnblogs.com/lovecindywang/p/9670356.html" target="_blank" rel="noopener noreferrer">朱晔的互联网架构实践心得</a>, 他是结合了 <strong>微软给出的云架构的一些模式</strong>的基础上加入他自己的理解来总结互联网架构中具体的一些模式。</p>
</blockquote>
<blockquote>
<p>朱晔：设计模式是前人通过大量的实践总结出来的一些经验总结和最佳实践。在经过多年的软件开发实践之后，回过头来去看23种设计模式你会发现很多平时写代码的套路和OO的套路和设计模式里总结的类似，这也说明了你悟到的东西和别人悟到的一样，经过大量实践总能趋向性得出一些最佳实践的结论。架构设计也是一样，这里结合自己的理解分析一下微软给出的云架构的一些模式。话说微软干这方面的事情真的很厉害，之前翻译过的《微软应用架构指南》写的也很不错。有了模式的好处是，技术人员和技术人员之间的对话可以毫不费力的通过几个模式关键词进行交流，就像现在大家沟通提到职责链模式，如果双方都理解这个模式的意义那么这五个字替代的可能就是半小时的解释。废话不多说，接下去来看一下这些其实已经很熟悉亲切的模式。</p>
</blockquote>
<h2>管理和监控</h2>
<h3>1. 大使模式：创建代表消费者服务或应用程序发送网络请求的帮助服务</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300947736.png" alt="image-20220704231448639" tabindex="0" loading="lazy"><figcaption>image-20220704231448639</figcaption></figure>
<p>进程外的代理服务（之前介绍中间件的时候也提到了，很多框架层面的事情可以以软件框架的形式寄宿在进程内，也可以以独立的代理形式做一个网络中间件）。这里的大使模式意思就是这么一个网络代理进程，用于和远端的服务进行通讯，完成下面的工作：</p>
<ul>
<li>服务路由</li>
<li>服务熔断</li>
<li>服务跟踪</li>
<li>服务监控</li>
<li>服务授权</li>
<li>数据加密</li>
<li>日志记录</li>
</ul>
<p>由于是独立进程的网络服务，所以这个模式适合于我们有多语言多框架都需要干同样的事情，那么我们的框架中客户端部分的很多工作可以移出来放到大使服务中去。当然了，多一层网络调用多一层开销，大使服务的部署也要考虑到性能不一定可以集中部署，这些都是要考虑的问题。</p>
<h3>2. 反腐模式：在现代应用程序和遗留系统之间实现装饰或适配器层</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300947777.png" alt="image-20220704231641497" tabindex="0" loading="lazy"><figcaption>image-20220704231641497</figcaption></figure>
<p>使用一层反腐层来作为新老系统通讯的中间人。这样新系统可以完全使用新的通讯方式和架构方式，老的系统又不用进行特别改造可以暂时保留，等老系统不用之后可以废弃这个反腐层。这种模式适合新老系统迁移的过渡方案，不属于永久使用的架构设计模式</p>
<h3>3. 外部配置存储：将应用程序部署包中的配置信息移动到中心化的位置</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300947799.png" alt="image-20220704231728207" tabindex="0" loading="lazy"><figcaption>image-20220704231728207</figcaption></figure>
<p>这个模式说的就是可以有一个外部的配置服务来保存配置信息，在之前第五篇文章介绍中间件的时候我详细说明过配置服务的功能。不管是处于管理运维的角度还是方便安全的角度，具有配置共享配置外存特点的独立配置服务对于大型的网站来说必不可少。实现的话有很多开源项目提供了配置服务。</p>
<h3>4. 网关聚合模式：使用网关将多个单独的请求聚合到一个请求中</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300947821.png" alt="image-20220704231830304.png" tabindex="0" loading="lazy"><figcaption>image-20220704231830304.png</figcaption></figure>
<p>应用程序如果需要和多个服务交互的话，在中间构建起一个聚合网关层，网关并发发出多个请求给后面的服务，然后汇总数据给到应用程序。这种模式有几个好处：</p>
<ul>
<li>允许并发调用多个服务提高性能，允许只返回部分数据</li>
<li>网关里可以做一些弹性设计方案（熔断、重试、限流）</li>
<li>网关里可以做一些缓存方案</li>
<li>对于外网通讯的时候，可以让网关作为一个网络中间层</li>
<li>当然，使用这种模式需要考虑到网关的负载、高可用、高性能（异步IO）等等。</li>
</ul>
<p>其实这种模式不仅仅用于纯后端服务之间的通讯，很多面向前端的API请求都会做一个聚合层，这样前端可以只发一个请求的情况下任意向后端一次性索取多个API的返回，减少网络请求次数提高性能。</p>
<p>实现上最简单的方式可以使用OpenResty或Nginx实现。</p>
<h3>5. 网关卸压模式：把共享或特定的服务功能放到网关代理</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300947852.png" alt="image-20220704231932879" tabindex="0" loading="lazy"><figcaption>image-20220704231932879</figcaption></figure>
<p>名字有点难以理解，其实这种模式我们可能一直在用。就是用一个代理网关层做一些和业务无关的又麻烦的点，比如SSL，实现上用Nginx实现就很简单。我们经常会对外启用HTTPS服务，然后对内服务实际提供的是HTTP接口，通过网关做一下协议转换。</p>
<h3>6. 网关路由模式：使用单个端点将请求路由到多个服务</h3>
<p><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300947884.png" alt="image-20220704232037739" loading="lazy"><br>
这也是很常见的作法，我们对外的接口可能是/cart、/order、/search这样的API，在其背后其实是不同的服务，通过网关层进行转发，不仅仅可以做后端服务的负载均衡和故障转移，在后端服务变更切换对外API路径（比如版本升级）的时候我们也可以进行灵活的路由，确保了对外接口的一致性。可以使用Nginx来实现，相信大部分公司都是由Nginx这样的网关来对外的，不会把域名直接解析到底层服务上对外。</p>
<h3>7. 健康端点监控模式：在应用程序中执行功能检查，外部工具可以定期通过暴露的端点访问</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300947915.png" alt="image-20220704232130905" tabindex="0" loading="lazy"><figcaption>image-20220704232130905</figcaption></figure>
<p>这个模式其实是挺重要的一点，有几个点需要注意：</p>
<ul>
<li>需要暴露哪些信息？不仅仅是服务本身或框架本身是否启动成功，尽可能暴露出服务依赖的外部存储或系统是否可用，原因是网络通讯是复杂的，从外部看到某个服务可用不代表我们的网站就可以成功连接，如果底层的数据库都无法连接，即使这个网站本身启动成功，那么我们应该认为这个服务是不健康的。外部存储即使对于A节点是可以连通对于B节点不能连通也是有可能的，可能是因为网络问题或权限问题，还可能因为负载问题，有的时候对于长连接的请求A节点因为始终连着存储不会有问题，新的B节点要求连接的时候因为超出最大连接限制无法连接。如果有可能的话还暴露一些服务内部各种线程池、连接池和队列的信息吧（对象数，队列长度等），这些指标很关键，但是因为在程序内部所以外围很难感知到，有了一些关键指标的外露对于排查性能问题会方便很多。</li>
<li>不只是网站，服务也应该暴露出健康信息，一来我们可以在外部收集这些信息进行监控汇总，二来我们的负载均衡器或发布系统需要有一个方式来判断服务是否可用，不可用的时候进行重启或故障转移。</li>
<li>对外的服务注意health端口的授权，这里可能会有一些敏感信息，不宜让匿名用户看到。</li>
</ul>
<p>实现上，我们应当把health端口作为插件形式集成到系统，配置一下即可启用，用不着每一个系统都自己开发一套。如果使用SpringBoot的话可以直接使用Actuator模块实现。</p>
<h3>8. 绞杀者模式：通过使用新的应用程序和服务逐渐替换特定功能部件来逐步迁移旧系统</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300947945.png" alt="image-20220704232408285" tabindex="0" loading="lazy"><figcaption>image-20220704232408285</figcaption></figure>
<p>名字挺吓人，这个模式说的是如何做迁移。通过建立一个门面来作为后端新老服务的路由，慢慢把服务替换为新服务，最后当所有的服务都是新服务后删除这个门面即可。这样对于消费者感知不到这个迁移的过程。在上一篇文章中我们提到的换引擎的方式其实说的是保留原有的门面，也是通过这个门面做底层引擎的替换。其实我觉得对于减少外围影响这种模式是完全可以理所当然想到的，真正难的过程还是之前说的数据迁移和底层服务实现的过程。</p>
<h2>性能和可扩展性</h2>
<h3>9. 缓存辅助模式：按需将数据从数据存储加载到缓存中</h3>
<p><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300947969.png" alt="image-20220704232506125" loading="lazy"><br>
这个模式说的不是广义上的缓存使用，而是其中的一种使用方式。我们对于缓存的使用一般有这么几种方式：</p>
<ul>
<li>查缓存，不存在查库，然后更新缓存</li>
<li>直接维护一大块“全量”数据，尽量和数据库同步</li>
</ul>
<p>这个模式说的是后一种方式，对于数据变动不大，这种模式是性能最好的，几乎实现了100%的命中率，而且如果数据量不大可以容纳进进程的话不需要跨进程通讯。往细致一点去想，这里还有一层性能优化的点，因为我们在内存中维护了一套复杂的全量数据的数据结构，内存中对象的引用只是指针引用，内存中的数据搜索可以很快，对于数据量不大但是关系复杂的数据，这个搜索效率可以是数据库的几百倍。实现上一般会在应用程序启动的时候把数据完全加入内存，在后续通过一些策略进行数据更新：</p>
<ul>
<li>定时更新同步数据，不同数据可以有不同的更新频率由后台线程来更新</li>
<li>数据具有不同的过期时间，过期后由请求触发主动更新或回调方式被动更新</li>
<li>数据修改后同步修改缓存和数据库中的数据</li>
</ul>
<h3>10. 命令和查询责任分离模式：通过使用单独的接口来分离读取数据和更新数据的操作</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300947989.png" alt="image-20220704232715071" tabindex="0" loading="lazy"><figcaption>image-20220704232715071</figcaption></figure>
<p>英文缩写是CQRS，看到这个关键字你可能会觉得有点熟悉了。CQRS原来说的是我们可以有两套数据模型分别用于读和写。好处是，我们可以让读和写具有完全不同的数据结构，减少相互的干扰，减少权限控制的复杂度。这里说的不一定是指架构层面我们可以这么做，也指在程序内部，我们可以有两套命令模型来处理读写这两个事情，分别进行优化和定制。</p>
<p>现在一般的做法是类似于上图的做法，为读写配置两套独立的数据源，并且和事件溯源的方式结合起来做（见后面一节）。我们来说说读写两套模型在存储上分离这个事情，在《相辅相成的存储五件套》一文中我们的架构图其实就有这方面的意思。对于读写这两个事情，我们完全可以不用一套数据源，为读建立专门的物化视图，可以针对读进行优化，避免在读的时候做很多Join的工作，可以把性能做到极致（后面会有物化视图模式的介绍）。事件溯源+CQRS+物化视图三者一般会结合起来使用。</p>
<h3>11. 事件溯源模式：使用仅追加存储去记录描述对域中的数据采取的操作的完整系列事件</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300947017.png" alt="image-20220704232750858" tabindex="0" loading="lazy"><figcaption>image-20220704232750858</figcaption></figure>
<p>事件溯源（ES）是一种有趣的模式，说的是我们记录的不是数据的当前状态而是叠加的数据变化序列（是不是想到了区块链的数据记录方式）。传统的CRUD方式因为有更新这个操作，所以会产生性能并发方面的局限性，而且我们还需要配备额外的日志来做审计，否则就产生了信息丢失。而事件溯源模式记录的是事件而不是当前状态，所以有下面的特点：</p>
<ul>
<li>事件不可变，只是追加新的事件，没有冲突，性能高</li>
<li>以事件驱动做外部处理，耦合低</li>
<li>保留第一手原始信息，信息没有损耗</li>
</ul>
<p>其实有一些业务场景下这种模式会比CRUD存储更适合：</p>
<ul>
<li>业务更看重数据的意图和目的而不是当前的状态，注重审计、回滚、历史方面的功能</li>
<li>希望避免数据更新的冲突，希望数据的产生能有较高性能，又能接受数据状态的最终一致性</li>
<li>整个系统中本身就是以事件在驱动的（我们可以想一下在真实的世界中，物体和物体之间相互影响，通过事件来影响，每个物体观察到其它物体发出的事件来做出自己的反映，这是最自然的，而不是观察到别的物体属性的变化来调整自己的属性）</li>
</ul>
<p>反过来说，业务逻辑很简单的系统，需要强一致性的系统，数据很少更新的系统不适合这种模式。不知你所了解到的采用ES模式的业务场景有哪些？大家一起交流一下。</p>
<h3>12. 物化视图模式：针对所需的查询操作，当数据没有理想地格式化时，在一个或多个数据存储中的数据上生成预填充视图</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300947045.png" alt="image-20220704232902291" tabindex="0" loading="lazy"><figcaption>image-20220704232902291</figcaption></figure>
<p>我们在使用数据存储的时候往往会更多考虑存储而不是读取。我们使用各种数据库范式来设计数据库，在读取数据的时候我们需要做大量的关联查询以输出符合需要的查询结果。这个时候性能往往会成为瓶颈，物化视图是一种空间换时间的做法。与其在查询的时候做关联，倒不如提前保存一份面向于查询和输出的数据格式。因此，物化视图适合下面的场景：</p>
<ul>
<li>经过复杂的计算才能查询出数据</li>
<li>背后存储可能会有不稳定的情况</li>
<li>需要连接多个不同类型的存储才能查询到结果</li>
</ul>
<p>但是因为需要考虑到物化视图计算保存的开销，所以也不太适合于数据变化太频繁的情况，因为数据加工需要时间，所以不适合需要数据强一致性的场景。</p>
<p>实现上一般是基于消息监听做额外维护一套物化视图的数据源和主流程解耦。惠普的Vertica是一款高性能的列式分析数据库，它的一个特性就是物化视图，通过事先提供SQL语句直接缓存面向于统计的查询结果，极大程度提高了性能，也是空间换时间的思想。</p>
<h3>13. 基于队列的负载均衡模式：使用一个队列作为任务和服务之间的缓冲区，平滑间歇性重负载</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300947064.png" alt="image-20220704232956349" tabindex="0" loading="lazy"><figcaption>image-20220704232956349</figcaption></figure>
<p>消息队列我们太熟悉了，之前我们也反复提高过好多次，甚至我说这是架构三马车之一。这个模式在这里强调的是削峰的优势。这里我还想提几点：</p>
<ul>
<li>引入消息队列不会提高处理能力，而是会降低性能，只是我们把耦合解开了允许每一个部件单独有自己的弹性，对于不能负荷的部分在队列中进行缓冲，缓冲不是存储不意味无限制</li>
<li>队列看的是处理速度和入队速度的比例，一般而言，我们需要预先做评估确保处理TPS超过2倍的最高峰的入队TPS，确保留出一半的富裕，这样在业务逻辑有修改的时候处理TPS哪怕下降了30%，还能抗住压力</li>
</ul>
<h3>14. 优先级队列模式：确定发送到服务的请求的优先级，使得具有较高优先级的请求更快地被接收和处理</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300947090.png" alt="image-20220704233208874" tabindex="0" loading="lazy"><figcaption>image-20220704233208874</figcaption></figure>
<p>区别于FIFO结构的队列，优先级队列允许消息标识处理优先级。这里实现上如上面两个图有两种方式：</p>
<ul>
<li>消息优先级方式。在队列中进行实时位置重排，永远优先处理级别较高的消息。</li>
<li>不同的处理池方式。我们可以针对不同的处理级别配备专门的处理池来处理这些消息，高级别的消息具有更多的处理资源，更好的硬件来处理，这样势必会有较高的处理能力。</li>
</ul>
<p>在方案选择和实现上要考虑消息优先级是否需要绝对按照优先级来处理，还是说相对优先处理即可，如果需要绝对优先那么除了消息位置重排还需要有抢占处理。还有，如果我们采用第二种多池的方式来处理的话可能会发生低级别的消息处理时间比高级别的消息更快的可能性（如果两者处理业务逻辑是完全不同的话）。</p>
<p>实现上的话RabbitMQ 3.5以上版本支持了消息优先级，实现的是第一种方式，在消息有缓冲的堆积的时候进行消息重排，消费端可以先看到先处理优先级高的消息，这种方式在消费速度大于产出速度的场景下是无法实现高级别消息优先处理的。</p>
<p>补充一点，对于队列中的消息，还有一种需要特别考虑的就是一直停留在队列的消息应当视为低优先级或是死信消息来处理，最好是有单独的消费者来处理，避免此类消息影响了整个队列的处理，见过很多个事故是由于队列中被废弃消息卡死导致彻底丧失处理能力的。</p>
<h3>15. 限流模式：控制应用程序，个人租户或整个服务的实例消耗的资源</h3>
<p>在做压力测试的时候我们会发现，随着压力的上升系统的吞吐慢慢变大而且这个时候响应时间可以基本保持可控（1秒内），当压力突破一个边界后，响应时间一下子会不可控，随之系统的吞吐就会下降，最后会彻底崩溃。任何系统对于压力的负荷是有边界的，超过这个边界之后系统的SLA肯定无法满足标准，导致大家都无法好好用这个服务。因为系统的扩展往往不是秒级可以做到的，所以这个时候最快的手段就是限流，只有限流了才能保护现在的系统不至于突破这个边界彻底崩溃。对于业务量超大的系统搞活动，对关键服务甚至入口层面做限流是必然的，别无它法，淘宝双11凌晨0点那一刻也能看到一定比例的下单被限流了。</p>
<p>常见的限流算法有这么几种：</p>
<ul>
<li>计数器算法。最简单的算法，资源使用加一，释放减一，达到一定的计数拒绝服务。</li>
<li>令牌桶算法。按照固定速率往桶里加令牌，桶里最多存放n个令牌，填满丢弃。处理的时候需要获取令牌，获取不到则拒绝请求。</li>
<li>漏桶算法。一个固定容量的漏洞，按照一定的速度流出水滴（任务）。可以以任意速度流入水滴（任务），满了则溢出丢弃。</li>
</ul>
<p>令牌桶算法限制的是平均流入速度，允许一定程度的突发请求，漏桶算法限制的是常量的流出速率用于平滑流入的速度。实现上，常用的一些开源类库都会有相关的实现，比如google的Guava提供的RateLimiter就是令牌桶算法。</p>
<p>限流模式有下面的一些注意事项：</p>
<ul>
<li>限流需要快速执行，任何一个超出流量控制的请求不允许放行，否则没有意义。</li>
<li>限流需要提前执行，最好在系统能力达到80%的时候进行限流，越晚限流风险越大。</li>
<li>可以返回特定的限流控制错误代码给客户端，让用户知道这不是错误是限流，可以稍后再试。</li>
<li>因为我们的系统很多地方都会做限流，在监控图上我们最好对这类限流的曲线有敏感，限流后的曲线是一下子失去了增长的梯度变为了平稳的状态，如果监控图看的时间范围过小的话会误判这是一个正常的请求量。</li>
<li>限流可以在边缘节点做。我们来考虑秒杀的场景，如果一秒有100万个请求，这100万个请求全部打到我们的应用服务器没有意义，我们可以在边缘节点（CDN）甚至客户端上做简单的边缘计算，让这100万个请求采用命中注定的方式直接随机放弃其中的99.9%留下1000个请求，最终可以进入我们的业务服务，这样TPS在1000一般是没有问题的。所以很多时候我们参与秒杀，系统会在极短的时间内毫无思考告知你活动已结束，说明你已经是被选中的命中注定的无法进入后端系统来参与秒杀的那些人。</li>
</ul>
<h2>数据管理模式</h2>
<h3>16. 分片模式：将数据存储区划分为一组水平分区或分片</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300947117.png" alt="image-20220704233331801" tabindex="0" loading="lazy"><figcaption>image-20220704233331801</figcaption></figure>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300947142.png" alt="image-20220704233343555" tabindex="0" loading="lazy"><figcaption>image-20220704233343555</figcaption></figure>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300947162.png" alt="image-20220704233353950" tabindex="0" loading="lazy"><figcaption>image-20220704233353950</figcaption></figure>
<p>一直有一个说法就是不到没路可走的时候不要考虑数据库分片。有的时候业务量大到单个业务表在经过缓存+队列削峰等措施之后的平均的TPS超过1万，单表实在是扛不住，还是只能考虑分片手段。</p>
<p>分片前：</p>
<ul>
<li>需要根据数据分布、压力情况、业务逻辑确定分片的方式，按照条件还是范围还是哈希等等（三个图展示了三种策略）。</li>
<li>需要进行业务代码改造，改掉所有不允许的SQL。</li>
<li>需要确定用HardCode方式还是框架方式还是中间件方式做数据路由。</li>
</ul>
<p>分片后：</p>
<ul>
<li>需要有运维工具可以对这么多套分片的数据进行统一的加索引等操作。</li>
<li>最好有数据仓库可以汇总所有数据，使得adhoc查询可以更方便。</li>
<li>最好有辅助工具可以用来帮助定位数据会在哪个分片中。</li>
</ul>
<h3>17. 静态内容托管模式：将静态内容部署到基于云的存储服务，可以将它们直接传递给客户端</h3>
<p>相信互联网公司90%+肯定都使用了这个模式。把静态资源从动态网站中剥离由Nginx等高性能服务器来处理静态资源，然后使用三方CDN对静态资源进行加速，不但减轻了动态网站的负载而且数据在边缘节点加速让用户的访问跟快，使用单独的一个或多个子域名做静态资源还能提高下载资源的并行度提高网页加载的速度。</p>
<p>使用CDN来进行资源加速一般有主动数据传送到CDN存储和在CDN配置回源站拉取两种方式，文件类一般使用主动推送数据，静态资源类一般使用回源方式。在使用CDN的时候考虑下面的问题：</p>
<ul>
<li>CDN以什么方式来认定同一个文件的，CDN提供了什么工具来刷新边缘节点的缓存？根据不同的策略做相应的缓存刷新方案。</li>
<li>源站对于相同的文件需要有一致性（最好版本变化后文件名变化），不能今天是这个版本明天是另一个版本，这样很可能导致边缘节点缓存了不同版本的文件，导致各种怪问题。</li>
<li>使用了CDN后不同地区的用户访问的都是CDN节点上的数据，一旦出现问题排查比较困难，考虑引入前端的错误处理框架来记录前端出现脚本错误时的调用栈，方便定位问题。</li>
</ul>
<h3>18. 索引表模式：为查询经常引用的数据存储区中的字段创建索引</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300947187.png" alt="image-20220704233457711" tabindex="0" loading="lazy"><figcaption>image-20220704233457711</figcaption></figure>
<p>出于下面的原因，我们会考虑索引表：</p>
<ul>
<li>虽然我们的关系型数据库大多支持主键之外的非聚集索引，但是在某些情况下直接对大表做很多索引性能并不好。</li>
<li>做了Sharding后我们确实没有办法以分片键之外的维度来查询数据。</li>
<li>希望以空间换时间，直接把某个维度的复合查询作为主键单独保存一份数据。</li>
</ul>
<p>不过需要考虑一点索引只有在数据区分度高的情况下才能发挥价值，如果90%以上的数据都是相同的值，那么走索引进行查询性能会比全表扫还要差一点。</p>
<h2>设计和实现模式</h2>
<h3>19. 前端专用的后端模式：通过使用单独的接口来分离读取数据和更新数据的操作</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300947216.png" alt="image-20220704233641416" tabindex="0" loading="lazy"><figcaption>image-20220704233641416</figcaption></figure>
<p>这里说的是不同的前端配以不同的专用后端。比如PC网站和APP的后端是两套程序。这种模式是否适合其实还是看两端的后端提供的数据差异有多大，我们总是希望可以尽量统一一套后端，业务逻辑不用重复写，但是我们要考虑到PC网站和APP的差异性：</p>
<ul>
<li>APP系统的接口交互一般会签名验证，有的时候还会加密</li>
<li>PC系统的流程一般和APP系统不一样</li>
<li>PC一个页面能显示的内容会比APP一个界面显示的更多</li>
<li>安全性设计上PC和APP不一样，APP很少有图形验证码</li>
</ul>
<p>考虑到这些差异，我们是在一个工程内根据来源做适配，还是独立两套工程来做独立的后端取决于差异度有多大了。</p>
<h3>20. 计算资源整合模式：将多个任务或操作整合到单个计算单元中</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300947235.png" alt="image-20220704233737997" tabindex="0" loading="lazy"><figcaption>image-20220704233737997</figcaption></figure>
<p>这个模式从资源节省的角度来说我们的计算单元任务可以进行一些合并，减少因为资源限制导致不必要的开销。</p>
<h3>21. 选举模式：通过选举一个实例作为负责管理其它实例的负责人，来协调分布式应用程序中的协作任务实例集合执行的操作</h3>
<p>对于分布式服务，我们趋向于把服务设计为无状态可以任意扩展的，但是在某些业务场景下我们不得不在服务中选举出一个Leader（Primary节点，Master节点）来做一些不适合重复做的协调管理工作。这个时候我们需要有算法来做选举。</p>
<p>最常见的实现方式是使用Zookeeper来实现，我们知道ZK的znode有Sequence和NonSequence两种，前者多个客户端只有一个可创建成功同名节点，后者创建后会自动加上序列号命名多个客户端可以创建多个同名节点，利用这个特性有两种常见实现方式：</p>
<ul>
<li><strong>非公平实现</strong>。多个客户端同时创建EPHEMERAL+NONSEQUENCE节点。只有一个可以创建成功，创建成功的就是Leader，其它的Follower需要注册watch，一旦Leader放弃节点（注意，EPHEMERAL意味着Leader待机后Session结束节点被删除），再一次重复之前的过程注册节点抢占成为Leader。这个模式实现简单，问题是在节点数量过多的时候一旦发生重新竞选，这个时候可能会有性能问题。</li>
<li><strong>公平实现</strong>。多个客户端同时创建EPHEMERAL+SEQUENCE节点。客户端都可以创建成功节点，客户端如果判断自己是最小的节点则为Leader否则为Follower。每一个Follower都去watch序号比自己小的节点（大家都看前一位）。一旦有Leader节点因为宕机被删除（还是EPHEMERAL特性），收到通知的节点会看自己是不是最小的序号，如果是的话成为Leader。节点宕机后，原先watch宕机节点的客户端重新watch比自己序号小的有效节点。这个模式实现复杂，但是由于watch的都只是一个节点所以不会发生像非公平实现的性能问题，而且竞选根据节点序号来而不是抢占式所以显得Leader的选举公平有序。</li>
</ul>
<h3>22. 管道和过滤器模式：将需要执行复杂处理的任务分解成可以重复使用的一系列单独的元素</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300947263.png" alt="image-20220704233828863" tabindex="0" loading="lazy"><figcaption>image-20220704233828863</figcaption></figure>
<p>在软件设计模式中过滤器构成的管道这种模式很常见（图上的业务逻辑就是Handler，之前的那些Task就是Filter，模式上可以是Filter+Handler也可以是Filter+Handler+Filter也可以是Handler+Filter），不管是Spring MVC框架也好，Netty这种网络框架也好都提供了这样的设计。每一个过滤器单独完成一个功能，可以独立插拔随意组合配置成一套管道，不但数据处理的整个过程清晰可见还增加了灵活性。</p>
<p>对于架构上也可以有这样的模式，在数据源进入到业务逻辑处理之前（或之后，或前后），我们可以配置一系列的数据过滤器完成各种数据转化和处理的任务。Task和Task之间可以是同步调用，也可以使用MQ做一定的可伸缩性设计。还可以把过滤器的配置信息保存在配置系统中甚至根据上下文动态构建出管道，实现更灵活的前置或后置流程处理。</p>
<h2>消息模式</h2>
<h3>23. 竞争消费者模式：使用多个并发消费者来处理在同一消息通道上接收的消息</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300947289.png" alt="image-20220704233914820" tabindex="0" loading="lazy"><figcaption>image-20220704233914820</figcaption></figure>
<p>这里说的是消息队列的消息消费者是一组对等的消费者，通过竞争方式来拉取数据执行。之前提到过这是MQ的最常见的一种模式，一般而言我们会部署多个消费节点进行负载均衡，在负载较大的时候可以方便得增加消费者进行消费能力扩容。不过对于这种模式消费者应当是对等的无状态的，在某个消费者在消费失败的时候消息重新回到队列随后可能会被另一个消费者进行处理。</p>
<h3>24. 重试模式：在应用程序尝试连接到服务或网络资源遇到预期的临时故障时，让程序通过透明地重试以前失败的操作来处理</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300947315.png" alt="image-20220704233949973" tabindex="0" loading="lazy"><figcaption>image-20220704233949973</figcaption></figure>
<p>重试适用于瞬态故障，之后会提到断路器模式，两种模式可以结合使用。首先说说重试的几个发起人：</p>
<ul>
<li>让用户自己发起，遇到错误的时候及时返回错误信息，让用户自己稍后重试整个业务功能。这种方式不容易产生瞬时的压力，但是体验较差。</li>
<li>在中间件自动发起，比如在RPC调用的时候遇到服务超时自动进行一定次数的重试，这样可以在外部没有感知的情况下有一定概率消除错误。这个方式要求服务是支持重试的。</li>
<li>由业务逻辑手动发起，不同的业务逻辑根据需求在代码中去写重试的逻辑（当然也可以通过类似Spring-Retry这种组件来做）。实现繁琐但是不容易出错。</li>
<li>由补偿逻辑发起进行同步转异步操作，非重要逻辑同步行则行，不行不在主流程重试，由单独的异步流程进行重试补偿。</li>
</ul>
<p>重试也要考虑几种策略：</p>
<ul>
<li>次数。最多重试几次。</li>
<li>异常。遇到什么样的异常（黑白名单）应该去重试。</li>
<li>等待。考虑每次重试是相同的间隔呢还是有一个延迟的递增，随着重试次数增加而增加延时时间。</li>
</ul>
<h3>25. 调度、代理、主管模式：在一组分布式服务和其它远程资源之间协调一组操作</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300947336.png" alt="image-20220704234033054" tabindex="0" loading="lazy"><figcaption>image-20220704234033054</figcaption></figure>
<p>这个模式说的是三者的角色：</p>
<ul>
<li>调度负责安排任务，在执行每个步骤的时候维护任务的状态，具体业务逻辑由代理负责。</li>
<li>代理负责和远程的服务和资源进行通讯，实现错误处理和重试。</li>
<li>管理者负责监视任务的执行状态，作为调度的补充，在合适的时候要求调度进行补偿。</li>
</ul>
<p>三个角色相互配合完成复杂的，具有较多远程服务参与的任务，确保任务的最终有效执行。在之前架构三马车一文中说到定时任务的时候提到过一种任务驱动表的模式，说到了一些驱动表的实现细节，其实整体和这个模式是类似的思想。当我们的一个复杂逻辑有多个步骤构成，每一步都依赖外部服务，这个时候我们可以选择全程MQ+补偿方式（乐观方式），也可以选择全程任务驱动的被动模式（悲观方式），具体选择取决于更看重可靠性还是及时性。</p>
<h2>弹性模式</h2>
<h3>26. 舱壁模式：将应用程序的元素隔离到池中，如果其中一个失败，其它的将继续运行</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300947358.png" alt="image-20220704234117476" tabindex="0" loading="lazy"><figcaption>image-20220704234117476</figcaption></figure>
<p>资源隔离有好几个层次，可以在进程内部做线程池或队列的隔离，在微服务的服务划分上考虑隔离出单独的物理服务，或是在服务器层面通过虚拟化技术或Docker技术进行资源隔离。隔离了就不会相互影响，但是会有成本、性能、管理便利性方面的开销。实现能够根据需求分析出可能的资源相互影响的点，提前规划隔离往往可以避免很多问题的发生。之前有遇到过几个事故是这样的：</p>
<ul>
<li>程序内部大量使用了Java8的ParallelStream特性进行并行处理，由于默认共享了相同的线程池，某一个业务的执行占满了线程影响了其它业务的正常进行。</li>
<li>消息队列因为没有对执行过多次失败的死信消息和正常的新消息进行隔离，导致一些业务下线后无法处理的死消息占满了整个队列，正常消息无法消费。</li>
<li>某个服务提供了类似文件上传的重量级操作，也提供了数据查询的轻量级操作，在上传业务大的时候服务的线程都被IO所占满，导致其它查询操作无法进行。</li>
</ul>
<h3>27. 断路器模式：连接到远程服务或资源时, 处理可能需要花费时间来修复的故障</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300947383.png" alt="image-20220704234159148" tabindex="0" loading="lazy"><figcaption>image-20220704234159148</figcaption></figure>
<p>分布式应用环节多网络环境复杂，如果遇到依赖服务调用失败的情况我们或许可以进行重试期待服务马上可以恢复，但是在某些时候依赖的服务是彻底挂了而不是网络故障无法及时恢复，如果不考虑进行熔断的，可能服务调用方会被服务提供方拖死。这个时候可以引入断路器机制，如图所示断路器一般采用三态实现，瞬间恢复可能会让底层服务压力过大：</p>
<ul>
<li>关闭：出现错误的时候增加计数器</li>
<li>打开：计数器到达阈值打开断路器，直接返回错误</li>
<li>半开：超时后允许一定的请求通过，成功率达到阈值关闭断路器，操作还是失败的话还是进入打开状态</li>
</ul>
<p>实现模式的时候考虑下面注意点：</p>
<ul>
<li>考虑熔断后怎么来处理，熔断后我们肯定拿不到实际的处理结果，这个时候考虑是功能降级还是采用后备的数据提供方来提供数据</li>
<li>紧急的时候需要人工介入，最好在外部提供手动的方式可以干预断路器的三态</li>
<li>不同的业务考虑不同的断路器打开阈值，每一个错误还能有不同的权重，比如对于下游程序返回了太多请求的错误，每次错误可以+2提高权重尽可能早断路</li>
<li>断路器应当记录熔断时的请求原始信息，在之后必要的时候可以进行重放或数据修复工作</li>
<li>注意设置好外部服务的超时，如果客户端超时比服务端短，很可能进行错误的熔断</li>
</ul>
<p>实现上我们可以看一下Netflix的Hystrix进行进一步了解。</p>
<h3>28. 事务补偿模式：撤消通过一系列步骤执行的工作，它们一起定义最终一致的操作</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300947402.png" alt="image-20220704234234642" tabindex="0" loading="lazy"><figcaption>image-20220704234234642</figcaption></figure>
<p>这个模式说的是失败时必须进行撤销的操作，可以由一组补偿程序来做相应的补偿。在这里我想说的更广一点，在服务调用的时候，调用失败有几种可能：</p>
<ul>
<li>请求客户端发出但是没到服务端，业务逻辑没有执行</li>
<li>请求客户端发出服务端收到也处理成功了，业务逻辑执行了客户端没收到结果</li>
<li>请求客户端发出服务端收到但处理失败了，客户端没收到结果</li>
</ul>
<p>所以在出现服务调用失败或超时的时候，服务端执行究竟有没有成功客户端是不明确的（只有客户端收到了明确的服务端返回的业务错误才真正代表执行失败），这个时候需要有补偿逻辑来同步服务端的执行状态。如果这样的补偿不可避免而且需要补偿的服务特别多，这样的逻辑逐一来写是一件很烦的事情，我们可以把这个工作封装成一个补偿中间件来处理：</p>
<ul>
<li>所有关键服务调用标记为需要自动补偿</li>
<li>补偿中间件在数据库记录服务的调用状态</li>
<li>关键服务的提供者提供统一状态查询接口，消费者提供统一的补偿回调接口（来处理成功和失败的情况）</li>
<li>补偿中间件根据数据库的记录调用服务提供方的状态查询和服务消费方的补偿回调接口进行补偿</li>
</ul>
<p>这样，我们在服务调用的时候就不需要考虑补偿逻辑的实现，只要实现这个标准即可。</p>
<h2>安全模式</h2>
<h3>29. 代客密钥模式：使用向客户端提供对特定资源或服务的有限直接访问权限的令牌或密钥</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300947427.png" alt="image-20220704234318864" tabindex="0" loading="lazy"><figcaption>image-20220704234318864</figcaption></figure>
<p>这个模式说的是，在访问敏感资源的时候，我们可以不必让应用程序在其中作为一个代理转一层做权限控制，而是生成一个密钥，让用户直接拿着密钥到资源池换数据。</p>
<p>一些CDN在提供资源上传下载服务的时候一般都会提供类似的安全策略，需要实现生成Token才能去使用下载和上传服务，避免了CDN数据被非法利用作为图床的可能。</p>
<p>实现上比较简单，应用程序和资源提供方约定好Token的生成算法，对资源+请求资源的时间+密钥联合在一起做签名，资源提供方如果校验到签名不正确或Token过期或资源不匹配都将拒绝服务。</p>
<h3>30. 联合身份模式：将认证委托给外部身份提供者</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300947452.png" alt="image-20220704234435596" tabindex="0" loading="lazy"><figcaption>image-20220704234435596</figcaption></figure>
<p>这个模式说的是将身份验证委托给专门的程序或模块来做。使用专门的模块来统一负责登录授权不仅仅可以提供单点登录的功能，而且服务实现上更简单不需要每次都考虑登录那套东西。实现上可以看一下Spring Security实现的OAuth 2.0。</p>
<h2>总结</h2>
<p>总结一下，对于其中的很多模式，我们可以发现其实在之前的一些介绍或多或少有一些涉及。这里提到的30种模式有些体现的是一些设计细节，有些体现的是一种设计理念，它们大多时候是组合使用的，适合的就是最好的，大家可以细细品味一下每种模式的适合场景，在合适的时候可以想到它或许会有一种豁然开朗的感觉。</p>
<h2>参考文章</h2>
<p><a href="https://pdai.tech/md/arch/arch-x-pattern-2.html" target="_blank" rel="noopener noreferrer"><strong>架构 - 理解架构的模式2</strong></a></p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300947736.png" type="image/png"/>
    </item>
    <item>
      <title>架构-理解架构的模式1</title>
      <link>https://mrjackc.github.io/posts/Architect/base/arch-x-pattern.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/base/arch-x-pattern.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">架构-理解架构的模式1</source>
      <description>架构-理解架构的模式1 架构演进中有很多知识点，总体上可以归结为以下模式，这里说的模式本质是架构中技术点的抽象。 1. 架构的模式 每一个模式描述了一个在我们周围不断重复发生的问题及该问题解决方案的核心。这样，你就能一次又一次地使用该方案而不必做重复工作。 所谓网站架构模式即为了解决大型网站面临的高并发访问、海量数据、高可靠运行等一系列问题与挑战。为此...</description>
      <category>架构</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<blockquote>
<p>架构演进中有很多知识点，总体上可以归结为以下模式，<strong>这里说的模式本质是架构中技术点的抽象</strong>。</p>
</blockquote>
<h2>1. 架构的模式</h2>
<p>每一个模式描述了一个在我们周围不断重复发生的问题及该问题解决方案的核心。这样，你就能一次又一次地使用该方案而不必做重复工作。</p>
<p>所谓网站架构模式即为了解决大型网站面临的高并发访问、海量数据、高可靠运行等一系列问题与挑战。为此，在实践中提出了许多解决方案，以实现网站高性能、高可靠性、易伸缩、可扩展、安全等各种技术架构目标。</p>
<h3>1.1 分层</h3>
<p>分层是企业应用系统中最常见的一种架构模式，将系统在横向维度上切分成几个部分，每个部分负责一部分相对简单并比较单一的职责，然后通过上层对下层的依赖和调度组成一个完整的系统。</p>
<p>在网站的分层架构中，常见的为3层，即<code>应用层</code>、<code>服务层</code>、<code>数据层</code>:</p>
<ul>
<li>应用层具体负责业务和视图的展示；</li>
<li>服务层为应用层提供服务支持；</li>
<li>数据库提供数据存储访问服务，如数据库、缓存、文件、搜索引擎等。</li>
</ul>
<p>分层架构是逻辑上的，在物理部署上，三层架构可以部署在同一个物理机器上，但是随着网站业务的发展，必然需要对已经分层的模块分离部署，即三层结构分别部署在不同的服务器上，是网站拥有更多的计算资源以应对越来越多的用户访问。</p>
<p>所以虽然分层架构模式最初的目的是规划软件清晰的逻辑结构以便于开发维护，但在网站的发展过程中，分层结构对网站支持高并发向分布式方向的发展至关重要。</p>
<h3>1.2 分隔</h3>
<p>如果说分层是将软件在横向方面进行切分，那么分隔就是在纵向方面对软件进行切分。</p>
<p>网站越大，功能越复杂，服务和数据处理的种类也越多，将这些不同的功能和服务分隔开来，包装成高内聚低耦合的模块单元，不仅有助于软件的开发维护也便于不同模块的分布式部署，提高网站的并发处理能力和功能扩展能力。</p>
<p>大型网站分隔的粒度可能会很小。比如在应用层，将不同业务进行分隔，例如将购物、论坛、搜索、广告分隔成不同的应用，有对立的团队负责，部署在不同的服务器上。</p>
<h3>1.3 分布式</h3>
<p>对于大型网站，分层和分隔的一个主要目的是为了切分后的模块便于分布式部署，即将不同模块部署在不同的服务器上，通过远程调用协同工作。分布式意味着可以使用更多的计算机完同样的工作，计算机越多，CPU、内存、存储资源就越多，能过处理的并发访问和数据量就越大，进而能够为更多的用户提供服务。</p>
<p>在网站应用中，常用的分布式方案有一下几种.</p>
<ul>
<li><code>分布式应用和服务</code>：将分层和分隔后的应用和服务模块分布式部署，可以改善网站性能和并发性、加快开发和发布速度、减少数据库连接资源消耗。</li>
<li><code>分布式静态资源</code>：网站的静态资源如JS、CSS、Logo图片等资源对立分布式部署，并采用独立的域名，即人们常说的动静分离。静态资源分布式部署可以减轻应用服务器的负载压力；通过使用独立域名加快浏览器并发加载的速度。</li>
<li><code>分布式数据和存储</code>：大型网站需要处理以P为单位的海量数据，单台计算机无法提供如此大的存储空间，这些数据库需要分布式存储。</li>
<li><code>分布式计算</code>：目前网站普遍使用Hadoop和MapReduce分布式计算框架进行此类批处理计算，其特点是移动计算而不是移动数据，将计算程序分发到数据所在的位置以加速计算和分布式计算。</li>
</ul>
<h3>1.4 集群</h3>
<p>对于用户访问集中的模块需要将独立部署的服务器集群化，即多台服务器部署相同的应用构成一个集群，通过负载均衡设备共同对外提供服务。</p>
<p>服务器集群能够为相同的服务提供更多的并发支持，因此当有更多的用户访问时，只需要向集群中加入新的机器即可；另外可以实现当其中的某台服务器发生故障时，可以通过负载均衡的失效转移机制将请求转移至集群中其他的服务器上，因此可以提高系统的可用性。</p>
<h3>1.5 缓存</h3>
<p>缓存目的就是减轻服务器的计算，使数据直接返回给用户。在现在的软件设计中，缓存已经无处不在。具体实现有CDN、反向代理、本地缓存、分布式缓存等。</p>
<p>使用缓存有两个条件：访问数据热点不均衡，即某些频繁访问的数据需要放在缓存中；数据在某个时间段内有效，不过很快过期，否则会因为数据过期而脏读，影响数据的正确性。</p>
<h3>1.6 异步</h3>
<p>使用异步，业务之间的消息传递不是同步调用，而是将一个业务操作分成多个阶段，每个阶段之间通过共享数据的方法异步执行进行协作。</p>
<p>具体实现则在单一服务器内部可用通过多线程共享内存对了的方式处理；在分布式系统中可用通过分布式消息队列来实现异步。</p>
<p>异步架构的典型就是生产者消费者方式，两者不存在直接调用。</p>
<h3>1.7 冗余</h3>
<p>网站需要7×24小时连续运行，那么就得有相应的冗余机制，以防某台机器宕掉时无法访问，而冗余则可以通过部署至少两台服务器构成一个集群实现服务高可用。数据库除了定期备份还需要实现冷热备份。甚至可以在全球范围内部署灾备数据中心。</p>
<h3>1.8 自动化</h3>
<p>具体有自动化发布过程，自动化代码管理、自动化测试、自动化安全检测、自动化部署、自动化监控、自动化报警、自动化失效转移、自动化失效恢复等。</p>
<h3>1.9 安全</h3>
<p>网站在安全架构方面有许多模式：通过密码和手机校验码进行身份认证；登录、交易需要对网络通信进行加密；为了防止机器人程序滥用资源，需要使用验证码进行识别；对常见的XSS攻击、SQL注入需要编码转换；垃圾信息需要过滤等。</p>
<h3>1.10 敏捷性</h3>
<p>积极接受需求变更，快速响应业务发展需求。</p>
<h2>参考文章</h2>
<p><a href="https://pdai.tech/md/arch/arch-x-pattern.html" target="_blank" rel="noopener noreferrer"><strong>架构 - 理解架构的模式1</strong></a></p>
]]></content:encoded>
    </item>
    <item>
      <title>架构-保障架构安全</title>
      <link>https://mrjackc.github.io/posts/Architect/base/arch-x-security.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/base/arch-x-security.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">架构-保障架构安全</source>
      <description>架构-保障架构安全 1. 架构安全 对已知问题有有效的解决方案，对未知/潜在问题建立发现和防御机制。对于安全问题，首先要提高安全意识，建立一个安全的有效机制，从政策层面，组织层面进行保障。比如服务器密码不能泄露，密码每月更新，并且三次内不能重复；每周安全扫描等。以制度化的方式，加强安全体系的建设。同时，需要注意与安全有关的各个环节。安全问题不容忽视。包...</description>
      <category>架构</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 架构安全</h2>
<p>对已知问题有有效的解决方案，对未知/潜在问题建立发现和防御机制。对于安全问题，首先要提高安全意识，建立一个安全的有效机制，从政策层面，组织层面进行保障。比如服务器密码不能泄露，密码每月更新，并且三次内不能重复；每周安全扫描等。以制度化的方式，加强安全体系的建设。同时，需要注意与安全有关的各个环节。安全问题不容忽视。包括基础设施安全，应用系统安全，数据保密安全等。</p>
<h3>1.1 基础设施安全</h3>
<p>硬件采购，操作系统，网络环境方面的安全。一般采用，正规渠道购买高质量的产品，选择安全的操作系统，及时修补漏洞，安装杀毒软件防火墙。防范病毒，后门。设置防火墙策略，建立DDOS防御系统，使用攻击检测系统，进行子网隔离等手段。</p>
<h3>1.2 应用系统安全</h3>
<p>在程序开发时，对已知常用问题，使用正确的方式，在代码层面解决掉。防止跨站脚本攻击（XSS），注入攻击，跨站请求伪造（CSRF），错误信息，HTML注释，文件上传，路径遍历等。还可以使用Web应用防火墙（比如：ModSecurity），进行安全漏洞扫描等措施，加强应用级别的安全。</p>
<h3>1.3 数据保密安全</h3>
<p>存储安全（存在在可靠的设备，实时，定时备份），保存安全（重要的信息加密保存，选择合适的人员复杂保存和检测等），传输安全（防止数据窃取和数据篡改）；</p>
<h3>1.4 其它 - 算法</h3>
<p>常用的加解密算法（单项散列加密[MD5,SHA]，对称加密[DES,3DES,RC]），非对称加密[RSA]等。</p>
<h2>参考文章</h2>
<p><a href="https://pdai.tech/md/arch/arch-x-security.html" target="_blank" rel="noopener noreferrer"><strong>架构 - 保障架构安全</strong></a></p>
]]></content:encoded>
    </item>
    <item>
      <title>架构-理解构架的视角</title>
      <link>https://mrjackc.github.io/posts/Architect/base/arch-x-view.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/base/arch-x-view.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">架构-理解构架的视角</source>
      <description>架构-理解构架的视角 在学习架构时，我认为首先要理清楚架构的视角，因为你所认知的架构和别人所说的架构可能是两码事。对于不同职位的视角是不一样的，比如开发而言他更多的看到的是开发架构；对售前人员，他可能更多的看到的是业务架构；对于运维人员，他看到的可能是运维架构；而对于技术支持和部署人员，他更多的看到的网络和物理架构。 1. 架构的视角 在笔者的知识体系...</description>
      <category>架构</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<blockquote>
<p>在学习架构时，我认为首先要理清楚架构的视角，<strong>因为你所认知的架构和别人所说的架构可能是两码事</strong>。对于不同职位的视角是不一样的，比如开发而言他更多的看到的是开发架构；对售前人员，他可能更多的看到的是业务架构；对于运维人员，他看到的可能是运维架构；而对于技术支持和部署人员，他更多的看到的网络和物理架构。</p>
</blockquote>
<h2>1. 架构的视角</h2>
<p>在笔者的知识体系中，实际上将架构分为业务架构、应用架构、云基础架构这几大类，业务架构主要着眼于控制业务的复杂性，基础架构着眼于解决分布式系统中存在的一系列问题。无论何种架构，都希望能实现系统的可变的同时保障业务的高可用。</p>
<blockquote>
<p>注意：</p>
<ul>
<li>很多时候架构的视角/分类没有明显的边界，通常是交叉的；</li>
<li>有意思的是，软件架构及其视角往往和它所在的部门组织架构有着直接关系)</li>
</ul>
</blockquote>
<h3>1.1 业务架构</h3>
<p>核心是解决业务带来的系统复杂性，了解客户/业务方的痛点，项目定义，现有环境；梳理高阶需求和非功能性需求，进行问题域划分与领域建模等工作；沟通，方案建议，多次迭代，交付总体架构。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300944627.png" alt="image-20220704155449826" tabindex="0" loading="lazy"><figcaption>image-20220704155449826</figcaption></figure>
<p>看看京东业务架构（网上分享图）：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300944675.png" alt="image-20220704155536633" tabindex="0" loading="lazy"><figcaption>image-20220704155536633</figcaption></figure>
<h3>1.2 应用/技术架构</h3>
<p>根据业务场景的需要，设计应用的层次结构，制定应用规范、定义接口和数据交互协议等。并尽量将应用的复杂度控制在一个可以接受的水平，从而在快速的支撑业务发展的同时，在保证系统的可用性和可维护性的同时，确保应用满足非功能属性要求（性能、安全、稳定性等）。技术架构主要考虑系统的非功能性特征，对系统的高可用、高性能、扩展、安全、伸缩性、简洁等做系统级的把握。</p>
<blockquote>
<p>不限于如下视角，主要表示应用开发中的软件架构视角...</p>
</blockquote>
<h4>1.2.1视角：功能视角</h4>
<blockquote>
<p>功能视角和业务视角有重合的地方，主要针对开发而言的服务功能；</p>
</blockquote>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300944699.png" alt="image-20220704160030358" tabindex="0" loading="lazy"><figcaption>image-20220704160030358</figcaption></figure>
<h4>1.2.2 视角：技术视角-总体</h4>
<p>技术框架（technological Framework）是整个或部分技术系统的可重用设计，表现为一组抽象构件及构件实例间交互的方法;另一种定义认为，技术框架是可被技术开发者定制的应用骨架。前者是从应用方面而后者是从目的方面给出的定义。</p>
<h5>1.2.2.1 示例一</h5>
<p>从技术层面描述，主要是分层模型，例如持久层、数据层、逻辑层、应用层、表现层等，然后每层使用什么技术框架，例如Spring、hibernate、ioc、MVC、成熟的类库、中间件、WebService等，分别说明，要求这些技术能够将整个系统的主要实现概括。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300944719.png" alt="image-20220704160212346" tabindex="0" loading="lazy"><figcaption>image-20220704160212346</figcaption></figure>
<h5>1.2.2.2 示例二： 前后端分离</h5>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300944745.png" alt="image-20220704160339416" tabindex="0" loading="lazy"><figcaption>image-20220704160339416</figcaption></figure>
<h5>1.2.2.2 示例三：微服务</h5>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300944767.png" alt="image-20220704160408430" tabindex="0" loading="lazy"><figcaption>image-20220704160408430</figcaption></figure>
<h4>1.2.3 视角：技术视角-数据架构</h4>
<p>专注于构建数据中台，统一数据定义规范，标准化数据表达，形成有效易维护的数据资产。打造统一的大数据处理平台，包括数据可视化运营平台、数据共享平台、数据权限管理平台等。</p>
<h4>1.2.4 视角：技术视角-基础架构</h4>
<p>PAAS，IAAS...</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300944784.png" alt="image-20220704160603956" tabindex="0" loading="lazy"><figcaption>image-20220704160603956</figcaption></figure>
<h4>12.5 视角：技术视角-运维架构</h4>
<p>负责运维系统的规划、选型、部署上线，建立规范化的运维体系。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300944810.png" alt="image-20220704160636044" tabindex="0" loading="lazy"><figcaption>image-20220704160636044</figcaption></figure>
<h3>1.3 物理架构</h3>
<p>物理架构关注软件元件是如何放到硬件上的，专注于基础设施，某种软硬件体系，甚至云平台，包括机房搭建、网络拓扑结构，网络分流器、代理服务器、Web 服务器、应用服务器、报表服务器、整合服务器、存储服务器和主机等。</p>
<h4>1.3.1 以一个银行系统为例</h4>
<p>下面为业务性能及网络性能监控的物理部署架构图，分网络接入层和汇聚层两个层次对网络流量报文进行捕获和深入分析。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300944833.png" alt="image-20220704160722727" tabindex="0" loading="lazy"><figcaption>image-20220704160722727</figcaption></figure>
<p>物理部署架构设计说明：</p>
<ul>
<li>（1）通过4台TAP设备获取青山湖和艾溪湖两个数据中心、五个机房相关应用服务器接入交换机的镜像流量，并进行规则过滤；</li>
<li>（2）通过1台高性能汇聚TAP来获取艾溪湖数据中心二层汇聚交换机和核心交换机的镜像流量，并进行规则过滤；</li>
<li>（3）艾溪湖主数据中心各机房接入层TAP设备的流量共享给汇聚TAP设备；</li>
<li>（4）BPC系统的5台BPC服务器在两个数据中心的每个机房进行分布式部署、解码和分析，并集中展示；</li>
<li>（5）NPM系统在艾溪湖数据中心部署一台管理端服务器，并在每个数据中心各部署一台NPM探针服务器，通过分布式部署、捕获数据，集中监控展示的方式，监控两个数据中心的各业务系统的网络性能；</li>
<li>（6）通过双数据中心、多机房分布式部署的方式，端到端的监控业务在各个环节的流转情况，实时监控，快速定位。</li>
</ul>
<p>下面为运维大数据平台的物理部署拓扑图，分为三个集群，Hadoop集群、ES日志集群和Kalfka消息集群。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300944853.png" alt="image-20220704160844858" tabindex="0" loading="lazy"><figcaption>image-20220704160844858</figcaption></figure>
<p>物理部署架构设计说明：</p>
<ul>
<li>配置多台服务器做Hadoop集群，满足不同应用和系统日志的单系统与跨系统交易日志统计与分析，满足数千个基础监控分区的基础性能分析与运行性能指标预测等，以及指性能标入库与历史日志数据入库的存储需要。</li>
<li>配置多台服务器做ES集群，承载实时统一日志查询与分析平台的任务，满足数天至一个月不同需求的日志查询和分析需求，历史日志查询需要从HDFS中将数据导入至ES中，进行二次查询。</li>
<li>配置多台服务器做Kafka集群用于实时的指标型与日志型数据流的采集，满足实时监控的需求。</li>
</ul>
<h2>2. DDD到各种架构</h2>
<p>领域驱动设计的战略核心即是将问题域与应用架构相剥离，将业务语义显现化，把原先晦涩难懂的业务算法逻辑，通过领域对象（Domain Object），统一语言（Ubiquitous Language）转化为领域概念清晰的显性化表达出来。</p>
<ul>
<li><strong>统一语言</strong>，软件的开发人员/使用人员都使用同一套语言，即对某个概念，名词的认知是统一的，建立清晰的业务模型，形成统一的业务语义。将模型作为语言的支柱。确保团队在内部的所有交流中，代码中，画图，写东西，特别是讲话的时候都要使用这种语言。例如账号，转账，透支策略，这些都是非常重要的领域概念，如果这些命名都和我们日常讨论以及 PRD 中的描述保持一致，将会极大提升代码的可读性，减少认知成本。比如不再会有人在会议中对“工单”、“审核单”、“表单”而反复确认含义了，DDD 的模型建立不会被 DB 所绑架。</li>
<li><strong>面向领域</strong>，业务语义显性化，以领域去思考问题，而不是模块。将隐式的业务逻辑从一推 if-else 里面抽取出来，用通用语言去命名、去写代码、去扩展，让其变成显示概念；很多重要的业务概念，按照事务脚本的写法，其含义完全淹没在代码逻辑中没有突显出来。</li>
<li><strong>职责划分</strong>，根据实际业务合理划分模型，模型之间依赖结构和边界更加清晰，避免了混乱的依赖关系，进而增加可读性、可维护性；单一职责，模型只关注自身的本职工作，避免“越权”而导致混乱的调用关系。通过建模，更好的表达现实世界中的复杂业务，随着时间的发展，不断增加系统对实际业务的沉淀，也将更好的通过清晰的代码描述业务逻辑，模型的内聚增加了系统的高度模块化，提升代码的可重用性，对比传统三层模式中，很有可能大量重复的功能散落在各个 Service 内部。</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300944875.png" alt="image-20220704171935631" tabindex="0" loading="lazy"><figcaption>image-20220704171935631</figcaption></figure>
<h2>参考文章</h2>
<p><a href="https://pdai.tech/md/arch/arch-x-view.html" target="_blank" rel="noopener noreferrer">架构 - 理解构架的视角</a></p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300944627.png" type="image/png"/>
    </item>
    <item>
      <title>架构之高可用：容灾备份,故障转移</title>
      <link>https://mrjackc.github.io/posts/Architect/base/arch-y-backup.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/base/arch-y-backup.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">架构之高可用：容灾备份,故障转移</source>
      <description>架构之高可用：容灾备份,故障转移 容灾技术是系统的高可用性技术的一个组成部分，容灾系统更加强调处理外界环境对系统的影响，特别是灾难性事件对整个IT节点的影响，提供节点级别的系统恢复功能。故障转移（failover），即当活动的服务或应用意外终止时，快速启用冗余或备用的服务器、系统、硬件或者网络接替它们工作。故障恢复是在计划内或计划外中断解决后切换回主站...</description>
      <category>架构</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<blockquote>
<p>容灾技术是系统的高可用性技术的一个组成部分，容灾系统更加强调处理外界环境对系统的影响，特别是灾难性事件对整个IT节点的影响，提供节点级别的系统恢复功能。故障转移（failover），即当活动的服务或应用意外终止时，快速启用<strong>冗余</strong>或备用的服务器、系统、硬件或者网络接替它们工作。故障恢复是在计划内或计划外中断解决后<strong>切换回主站点</strong>的过程。</p>
</blockquote>
<h2>1. 什么是容灾和备份？</h2>
<blockquote>
<p>容灾技术是系统的高可用性技术的一个组成部分，容灾系统更加强调处理外界环境对系统的影响，特别是灾难性事件对整个IT节点的影响，提供节点级别的系统恢复功能。</p>
</blockquote>
<p>容灾备份实际上是两个概念:</p>
<ul>
<li><strong>容灾</strong>是为了在遭遇灾害时能保证信息系统能正常运行，帮助企业实现业务连续性的目标；</li>
<li><strong>备份</strong>是为了应对灾难来临时造成的数据丢失问题。</li>
</ul>
<p>在容灾备份一体化产品出现之前，容灾系统与备份系统是独立的。容灾备份产品的最终目标是帮助企业应对人为误操作、软件错误、病毒入侵等“软”性灾害以及硬件故障、自然灾害等“硬”性灾害。</p>
<h3>1.1 容灾的分类</h3>
<p>从其对系统的保护程度来分，可以将容灾系统分为:</p>
<ul>
<li><strong>数据级容灾</strong>是指通过建立异地容灾中心，做数据的远程备份，在灾难发生之后要确保原有的数据不会丢失或者遭到破坏，但在数据级容灾这个级别，发生灾难时应用是会中断的。在数据级容灾方式下，所建立的异地容灾中心可以简单地把它理解成一个远程的数据备份中心。数据级容灾的恢复时间比较长，但是相比其他容灾级别来讲它的费用比较低，而且构建实施也相对简单。</li>
<li><strong>应用级容灾</strong>是在数据级容灾的基础之上，在备份站点同样构建一套相同的应用系统，通过同步或异步复制技术，这样可以保证关键应用在允许的时间范围内恢复运行，尽可能减少灾难带来的损失，让用户基本感受不到灾难的发生，这样就使系统所提供的服务是完整的、可靠的和安全的。应用级容灾生产中心和异地灾备中心之间的数据传输是采用异类的广域网传输方式；同时应用级容灾系统需要通过更多的软件来实现，可以使多种应用在灾难发生时可以进行快速切换，确保业务的连续性。</li>
<li><strong>业务级容灾</strong>是全业务的灾备，除了必要的IT相关技术，还要求具备全部的基础设施。其大部分内容是非IT系统（如电话、办公地点等），当大灾难发生后，原有的办公场所都会受到破坏，除了数据和应用的恢复，更需要一个备份的工作场所能够正常的开展业务。</li>
</ul>
<h3>1.2 容灾的技术指标</h3>
<blockquote>
<p>主要有RPO（数据恢复点目标）和 RTO（恢复时间目标）, 从客户的角度而言就是RPO需要为0（没有数据丢失），RTO越接近0越好（恢复时间越短越好）。</p>
</blockquote>
<p><strong>RPO（Recovery Point Objective）</strong>：即数据恢复点目标，主要指的是业务系统所能容忍的数据丢失量，指灾难发生后，从IT系统宕机导致业务停顿之时开始，到IT系统恢复至可以支持各部门运作、恢复运营之时，此两点之间的时间段称为RTO，广道容灾备份系统RTO达到分钟级。</p>
<p><strong>RTO（Recovery Time Objective）</strong>：即恢复时间目标，主要指的是所能容忍的业务停止服务的最长时间，也就是从灾难发生到业务系统恢复服务功能所需要的最短时间周期。</p>
<p>指从系统和应用数据而言，要实现能够恢复至可以支持各部门业务运作，系统及生产数据应恢复到怎样的更新程度，这种更新程度可以是上一周的备份数据，也可以是上一次交易的实时数据。</p>
<p>RPO针对的是数据丢失，而RTO针对的是服务丢失，二者没有必然的关联性。RTO和RPO的确定必须在进行风险分析和业务影响分析后根据不同的业务需求确定。对于不同企业的同一种业务，RTO和RPO的需求也会有所不同。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300944215.png" alt="image-20220702220035271" tabindex="0" loading="lazy"><figcaption>image-20220702220035271</figcaption></figure>
<h3>1.3 容灾和容错的区别</h3>
<blockquote>
<p>例子中的图片来源于<a href="http://www.pbenson.net/2014/02/the-difference-between-fault-tolerance-high-availability-disaster-recovery/" target="_blank" rel="noopener noreferrer">这里</a>，能够非常好的帮助你理解。</p>
</blockquote>
<ul>
<li>
<p><strong>容灾（Disaster Tolerance）</strong>：就是在上述的灾难发生时，在保证生产系统的数据尽量少丢失的情况下，保持生存系统的业务不间断地运行。容灾通常是通过冗余方式来实现的。</p>
<p>举例：飞机上有两个发动机，一个是主发动机，另外一个是备用发动机，主发动机坏了以后，立马切换到备用的发动机。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300944260.png" alt="image-20220702220141592" tabindex="0" loading="lazy"><figcaption>image-20220702220141592</figcaption></figure>
</li>
<li>
<p><strong>容错（fault tolerance）</strong>: 发生故障时，系统还能继续运行。容错的目的是，发生故障时，系统的运行水平可能有所下降，但是依然可用，不会完全失败。</p>
<p>举例：飞机有四个引擎，如果一个引擎坏了，剩下三个引擎，还能继续飞，这就是"容错"。同样的，汽车的一个轮子扎破了，剩下三个轮子，也还是勉强能行驶。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300944285.png" alt="image-20220702220248718" tabindex="0" loading="lazy"><figcaption>image-20220702220248718</figcaption></figure>
</li>
</ul>
<h3>1.4 容灾备份的等级</h3>
<blockquote>
<p>国际标准SHARE 78 对容灾系统的定义有七个层次：从最简单的仅在本地进行磁带备份，到将备份的磁带存储在异地，再到建立应用系统实时切换的异地备份系统，恢复时间也可以从几天到小时级到分钟级、秒级或零数据丢失等。目前针对这七个层次，都有相应的容灾方案，所以，用户在选择容灾方案时应重点区分它们各自的特点和适用范围，结合自己对容灾系统的要求判断选择哪个层次的方案。</p>
</blockquote>
<ul>
<li><strong>0级：无异地备份</strong></li>
</ul>
<p>0等级容灾方案数据仅在本地进行备份，没有在异地备份数据，未制定灾难恢复计划。这种方式是成本最低的灾难恢复解决方案，但不具备真正灾难恢复能力。</p>
<p>在这种容灾方案中，最常用的是备份管理软件加上磁带机，可以是手工加载磁带机或自动加载磁带机。它是所有容灾方案的基础，从个人用户到企业级用户都广泛采用了这种方案。其特点是用户投资较少，技术实现简单。缺点是一旦本地发生毁灭性灾难，将丢失全部的本地备份数据，业务无法恢复。</p>
<ul>
<li><strong>1级：实现异地备份</strong></li>
</ul>
<p>第1级容灾方案是将关键数据备份到本地磁带介质上，然后送往异地保存，但异地没有可用的备份中心、备份数据处理系统和备份网络通信系统，未制定灾难恢复计划。灾难发生后，使用新的主机，利用异地数据备份介质（磁带）将数据恢复起来。</p>
<p>这种方案成本较低，运用本地备份管理软件，可以在本地发生毁灭性灾难后，恢复从异地运送过来的备份数据到本地，进行业务恢复。但难以管理，即很难知道什么数据在什么地方，恢复时间长短依赖于何时硬件平台能够被提供和准备好。以前被许多进行关键业务生产的大企业所广泛采用，作为异地容灾的手段。目前，这一等级方案在许多中小网站和中小企业用户中采用较多。对于要求快速进行业务恢复和海量数据恢复的用户，这种方案是不能够被接受的。</p>
<ul>
<li><strong>2级：热备份站点备份</strong></li>
</ul>
<p>第2级容灾方案是将关键数据进行备份并存放到异地，制定有相应灾难恢复计划，具有热备份能力的站点灾难恢复。一旦发生灾难，利用热备份主机系统将数据恢复。它与第1级容灾方案的区别在于异地有一个热备份站点，该站点有主机系统，平时利用异地的备份管理软件将运送到异地的数据备份介质（磁带）上的数据备份到主机系统。当灾难发生时可以快速接管应用，恢复生产。</p>
<p>由于有了热备中心，用户投资会增加，相应的管理人员要增加。技术实现简单，利用异地的热备份系统，可以在本地发生毁灭性灾难后，快速进行业务恢复。但这种容灾方案由于备份介质是采用交通运输方式送往异地，异地热备中心保存的数据是上一次备份的数据，可能会有几天甚至几周的数据丢失。这对于关键数据的容灾是不能容忍的。</p>
<ul>
<li><strong>3级：在线数据恢复</strong></li>
</ul>
<p>第3级容灾方案是通过网络将关键数据进行备份并存放至异地，制定有相应灾难恢复计划，有备份中心，并配备部分数据处理系统及网络通信系统。该等级方案特点是用电子数据传输取代交通工具传输备份数据，从而提高了灾难恢复的速度。利用异地的备份管理软件将通过网络传送到异地的数据备份到主机系统。一旦灾难发生，需要的关键数据通过网络可迅速恢复，通过网络切换，关键应用恢复时间可降低到一天或小时级。这一等级方案由于备份站点要保持持续运行，对网络的要求较高，因此成本相应有所增加。</p>
<ul>
<li><strong>4级：定时数据备份</strong></li>
</ul>
<p>第4级容灾方案是在第3级容灾方案的基础上，利用备份管理软件自动通过通信网络将部分关键数据定时备份至异地，并制定相应的灾难恢复计划。一旦灾难发生，利用备份中心已有资源及异地备份数据恢复关键业务系统运行。</p>
<p>这一等级方案特点是备份数据是采用自动化的备份管理软件备份到异地，异地热备中心保存的数据是定时备份的数据，根据备份策略的不同，数据的丢失与恢复时间达到天或小时级。由于对备份管理软件设备和网络设备的要求较高，因此投入成本也会增加。但由于该级别备份的特点，业务恢复时间和数据的丢失量还不能满足关键行业对关键数据容灾的要求。</p>
<ul>
<li><strong>5级：实时数据备份</strong></li>
</ul>
<p>第5级容灾方案在前面几个级别的基础上使用了硬件的镜像技术和软件的数据复制技术，也就是说，可以实现在应用站点与备份站点的数据都被更新。数据在两个站点之间相互镜像，由远程异步提交来同步，因为关键应用使用了双重在线存储，所以在灾难发生时，仅仅很小部分的数据被丢失，恢复的时间被降低到了分钟级或秒级。由于对存储系统和数据复制软件的要求较高，所需成本也大大增加。</p>
<p>这一等级的方案由于既能保证不影响当前交易的进行，又能实时复制交易产生的数据到异地，所以这一层次的方案是目前应用最广泛的一类，正因为如此，许多厂商都有基于自己产品的容灾解决方案。如存储厂商EMC等推出的基于智能存储服务器的数据远程拷贝；系统复制软件提供商VERITAS等提供的基于系统软件的数据远程复制；数据库厂商Oracle和Sybase提供的数据库复制方案等。但这些方案有一个不足之处就是异地的备份数据是处于备用（Standby）备份状态而不是实时可用的数据，这样灾难发生后需要一定时间来进行业务恢复。更为理想的应该是备份站点不仅仅是一个分离的备份系统，而且还处于活动状态，能够提供生产应用服务，所以可以提供快速的业务接管，而备份数据则可以双向传输，数据的丢失与恢复时间达到分钟甚至秒级。据了解，目前DSG公司的RealSync全局复制软件能够提供这一功能。</p>
<ul>
<li><strong>6级：零数据丢失</strong></li>
</ul>
<p>第6级容灾方案是灾难恢复中最昂贵的方式，也是速度最快的恢复方式，它是灾难恢复的最高级别，利用专用的存储网络将关键数据同步镜像至备份中心，数据不仅在本地进行确认，而且需要在异地（备份）进行确认。因为，数据是镜像地写到两个站点，所以灾难发生时异地容灾系统保留了全部的数据，实现零数据丢失。</p>
<p>这一方案在本地和远程的所有数据被更新的同时，利用了双重在线存储和完全的网络切换能力，不仅保证数据的完全一致性，而且存储和网络等环境具备了应用的自动切换能力。一旦发生灾难，备份站点不仅有全部的数据，而且应用可以自动接管，实现零数据丢失的备份。通常在这两个系统中的光纤设备连接中还提供冗余通道，以备工作通道出现故障时及时接替工作，当然由于对存储系统和存储系统专用网络的要求很高，用户的投资巨大。采取这种容灾方式的用户主要是资金实力较为雄厚的大型企业和电信级企业。但在实际应用过程中，由于完全同步的方式对生产系统的运行效率会产生很大影响，所以适用于生产交易较少或非实时交易的关键数据系统，目前采用该级别容灾方案的用户还很少。</p>
<h2>2. 容灾备份的解决方案</h2>
<blockquote>
<p>阿里云的容灾备份解决方案为例。</p>
</blockquote>
<h3>2.1 ECS的容灾备份</h3>
<blockquote>
<p>来源于阿里云<a href="https://help.aliyun.com/document_detail/98198.html?spm=5176.22414175.sslink.10.473f5c2de0EUTt" target="_blank" rel="noopener noreferrer">官方文档</a></p>
</blockquote>
<ul>
<li><strong>备份恢复</strong></li>
</ul>
<p>阿里云ECS可通过<strong>快照</strong>与<strong>镜像</strong>对系统盘、数据盘进行备份。如果存储在磁盘上的数据本身就是错误的数据，例如由于应用错误导致的数据错误，或者黑客利用应用漏洞进行恶意读写，此时就可以使用快照服务将磁盘上的数据恢复到期望的状态。另外ECS可通过镜像重新初始化磁盘或使用自定义镜像新购ECS实例。</p>
<ul>
<li><strong>容灾应用</strong></li>
</ul>
<p>ECS可以从架构上实现容灾场景下的应用。例如，在应用前端购买SLB产品，后端相同应用部署至少两台ECS服务器，或者是使用阿里云的弹性伸缩技术，根据自定义ECS自身资源的使用规则进行弹性扩容。这样即便其中一台ECS服务器故障或者资源利用超负荷，也不会使服务对外终止，从而实现容灾场景下的应用。下图以同城两可用区机房部署ECS集群为例，所有通信均在阿里云千兆内网中完成，响应快速并减少了公网流量费用：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300944305.png" alt="image-20220702220929150" tabindex="0" loading="lazy"><figcaption>image-20220702220929150</figcaption></figure>
<ol>
<li><strong>负载均衡SLB</strong>：设备侧通过多可用区级别SLB做首层流量接入，用户流量被分发至两个及以上的可用区机房，机房内均部署ECS集群。</li>
<li><strong>ECS集群</strong>：可用区机房部署的ECS节点是对等的，单节点故障不影响数据层应用和服务器管控功能。发生故障后系统会自动热迁移，另外的ECS节点可以持续提供业务访问，防止可能的单点故障或者热迁移失败导致的业务访问中断。热迁移失败后通过系统事件获知故障信息，您可以及时部署新节点。</li>
<li><strong>数据层</strong>：在地域级别部署对象存储，不同可用区机房的ECS节点可以直接读取文件信息。若是数据库应用，使用多可用区ApsaraDB for RDS服务做承载，主节点支持多可用区读写，与应用层流量来源无冲突关系。同时，备节点支持多可用区读能力，防止主节点故障时，ECS无法读取数据。</li>
</ol>
<h3>2.2 同城容灾</h3>
<blockquote>
<p>来源于阿里云<a href="https://help.aliyun.com/document_detail/419804.html?spm=a2c4g.26937906.0.0.763f292cjWILT6" target="_blank" rel="noopener noreferrer">官方文档</a></p>
</blockquote>
<p><strong>同城容灾</strong>指应用服务部署是<strong>多机房、单地域</strong>时，当其中一机房出现故障时，系统可实现业务7*24小时稳定运行，即使单机房故障也不影响业务的可持续性，保障用户访问连续不间断。</p>
<p><strong>同城双活容灾</strong>架构，是指在同城建立两个可独立承担关键系统运行的数据中心，双中心具备基本等同的业务处理能力并通过高速链路实时同步数据，日常情况下可同时分担业务及管理系统的运行，并可切换运行；灾难情况下可在基本不丢失数据的情况下进行灾备应急切换，保持业务连续运行。多数企业为了兼顾成本与高可用性问题，会优先选择同城双活的部署方式。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300944332.png" alt="image-20220702221131412.png" tabindex="0" loading="lazy"><figcaption>image-20220702221131412.png</figcaption></figure>
<h3>2.3 异地容灾(两地三中心)</h3>
<blockquote>
<p>来源于阿里云<a href="https://help.aliyun.com/practice_detail/419526?spm=a2c4g.26937898.0.0.75ed6fc5iInM61" target="_blank" rel="noopener noreferrer">官方文档</a></p>
</blockquote>
<p><strong>异地容灾</strong>是指应用服务部署在不同地域时，当其中一地出现故障时，系统可以将出现故障地域的用户访问流量，调度至异地灾备中心，保障用户访问连续不间断。</p>
<p><strong>两地三中心容灾</strong>架构，是指在同城双中心的基础上，在异地的城市建立一个备份的灾备中心，用于双中心的数据备份，当双中心出现自然灾害等原因而发生故障时，异地灾备中心可以用备份数据进行业务的恢复。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300944355.png" alt="image-20220702221230747" tabindex="0" loading="lazy"><figcaption>image-20220702221230747</figcaption></figure>
<h2>3. 故障转移和恢复</h2>
<h3>3.1 什么是故障转移</h3>
<blockquote>
<p>故障转移（failover），即当活动的服务或应用意外终止时，快速启用冗余或备用的服务器、系统、硬件或者网络接替它们工作。 故障转移(failover)与交换转移操作基本相同，只是故障转移通常是<strong>自动完成</strong>的，没有警告提醒手动完成，而交换转移需要手动进行。</p>
</blockquote>
<p>要使故障转移正常工作，必须有一个数据备份裸机服务器或虚拟机充当恢复站点系统，以便在发生故障时替换主站点。由于故障转移是灾难恢复中必不可少的步骤，因此数据备份系统本身必须不受故障影响。</p>
<p>需要持续可用性的系统需要整体故障转移和灾难恢复。在服务器级别，数据备份环境跟踪主服务器的“脉冲”，并在检测到中断时执行自动故障转移。</p>
<h3>3.2 如何进行故障转移</h3>
<blockquote>
<p>有两种方法可以设置故障转移系统：<strong>主动-主动</strong>和<strong>主动-被动</strong>（或主动-备用）配置。两种设置都需要至少两个节点（服务器或虚拟机）才能正常工作。</p>
</blockquote>
<p>在<strong>主动-主动</strong>设置中，多个节点同时运行。这允许他们分担工作量并防止任何一个节点过载。如果一个节点停止工作，它的工作负载将被其他活动节点占用，直到它重新激活。</p>
<p><strong>主动-被动</strong>（主动-备用）设置还包括多个节点，但并非所有节点都同时处于活动状态。一旦主动节点停止工作，被动节点就会被激活并充当故障转移节点。当主节点再次运行时，数据备份节点将操作切换回主节点并再次变为被动状态。</p>
<p>无论采用哪种故障转移方法，两种配置都要求每个节点具有相同的配置。这确保了在站点之间切换时的一致性和稳定性。</p>
<h3>3.3 什么是故障恢复</h3>
<blockquote>
<p>故障恢复是在计划内或计划外中断解决后<strong>切换回主站点</strong>的过程。故障恢复通常在故障转移之后作为灾难恢复计划的一部分。</p>
</blockquote>
<p>故障恢复不是完成故障转移的唯一方法。使用虚拟机时，您可以执行永久故障恢复，使数据备份虚拟机成为新的主站点。</p>
<h3>3.4 如何进行故障恢复</h3>
<p>成功执行故障回复需要一些准备。在切换回主站点之前，请考虑以下步骤：</p>
<ol>
<li>检查与主站点的连接的质量和网络带宽。</li>
<li>检查备份站点上的所有数据是否存在潜在错误。这对于关键文件和文档尤其重要。</li>
<li>在开始故障恢复之前彻底测试所有主系统。</li>
<li>准备并实施故障恢复计划，以最大限度地减少停机时间和用户不便。</li>
</ol>
<h2>参考文章</h2>
<p><a href="https://pdai.tech/md/arch/arch-y-backup.html" target="_blank" rel="noopener noreferrer"><strong>架构之高可用：容灾备份,故障转移</strong></a></p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300944215.png" type="image/png"/>
    </item>
    <item>
      <title>系统高并发-缓存</title>
      <link>https://mrjackc.github.io/posts/Architect/base/arch-y-cache.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/base/arch-y-cache.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">系统高并发-缓存</source>
      <description>系统高并发-缓存 高并发实现的三板斧：缓存，限流和降级。缓存在高并发系统中有者极其广阔的应用，需要重点掌握，本文重点介绍下缓存及其实现。 1. 缓存简介 随着互联网的普及，内容信息越来越复杂，用户数和访问量越来越大，我们的应用需要支撑更多的并发量，同时我们的应用服务器和数据库服务器所做的计算也越来越多。但是往往我们的应用服务器资源是有限的，且技术变革是...</description>
      <category>架构</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<blockquote>
<p><strong>高并发实现的三板斧：缓存，限流和降级</strong>。缓存在高并发系统中有者极其广阔的应用，需要重点掌握，本文重点介绍下缓存及其实现。</p>
</blockquote>
<h2>1. 缓存简介</h2>
<p>随着互联网的普及，内容信息越来越复杂，用户数和访问量越来越大，我们的应用需要支撑更多的并发量，同时我们的应用服务器和数据库服务器所做的计算也越来越多。但是往往我们的应用服务器资源是有限的，且技术变革是缓慢的，数据库每秒能接受的请求次数也是有限的（或者文件的读写也是有限的），如何能够有效利用有限的资源来提供尽可能大的吞吐量? 一个有效的办法就是引入缓存，打破标准流程，每个环节中请求可以从缓存中直接获取目标数据并返回，从而减少计算量，有效提升响应速度，让有限的资源服务更多的用户。</p>
<p>如图1所示，缓存的使用可以出现在1～4的各个环节中，每个环节的缓存方案与使用各有特点。</p>
<p><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300943838.png" alt="image-20220629215619151.png" loading="lazy"><br>
图1 互联网应用一般流程</p>
<h3>1.1 关键词-命中率</h3>
<ul>
<li><strong>命中率 = 命中数 / (命中数 + 没有命中数)</strong></li>
</ul>
<h4>1.1.1 影响缓存命中率的因素：</h4>
<ol>
<li>
<p>业务场景和业务需求</p>
<p>缓存通常适合读多写少的业务场景，反之的使用意义并不多，命中率会很低。业务需求也决定了实时性的要求，直接影响到过期时间和更新策略，实时性要求越低越适合缓存。</p>
</li>
<li>
<p>缓存的设计（策略和粒度）</p>
<p>通常情况下缓存的粒度越小，命中率越高。比如说缓存一个用户信息的对象，只有当这个用户的信息发生变化的时候才更新缓存，而如果是缓存一个集合的话，集合中任何一个对象发生变化都要重新更新缓存。</p>
<p>当数据发生变化时，直接更新缓存的值比移除缓存或者让缓存过期它的命中率更高，不过这个时候系统的复杂度过高。</p>
</li>
<li>
<p>缓存的容量和基础设施</p>
<p>缓存的容量有限就会容易引起缓存的失效和被淘汰。目前多数的缓存框架和中间件都采用LRU这个算法。同时采用缓存的技术选型也是至关重要的，比如采用本地内置的应用缓存，就比较容易出现单机瓶颈。而采用分布式缓存就更加容易扩展。所以需要做好系统容量规划，系统是否可扩展。</p>
</li>
</ol>
<h4>1.1.2 <strong>最大空间</strong></h4>
<p>缓存最大空间一旦缓存中元素数量超过这个值（或者缓存数据所占空间超过其最大支持空间），那么将会触发缓存启动清空策略根据不同的场景合理的设置最大元素值往往可以一定程度上提高缓存的命中率，从而更有效的时候缓存。</p>
<h3>1.2 缓存介质</h3>
<p>虽然从硬件介质上来看，无非就是内存和硬盘两种，但从技术上，可以分成内存、硬盘文件、数据库。</p>
<ul>
<li>内存：将缓存存储于内存中是最快的选择，无需额外的I/O开销，但是内存的缺点是没有持久化落地物理磁盘，一旦应用异常break down而重新启动，数据很难或者无法复原。</li>
<li>硬盘：一般来说，很多缓存框架会结合使用内存和硬盘，在内存分配空间满了或是在异常的情况下，可以被动或主动的将内存空间数据持久化到硬盘中，达到释放空间或备份数据的目的。</li>
<li>数据库：前面有提到，增加缓存的策略的目的之一就是为了减少数据库的I/O压力。现在使用数据库做缓存介质是不是又回到了老问题上了? 其实，数据库也有很多种类型，像那些不支持SQL，只是简单的key-value存储结构的特殊数据库（如BerkeleyDB和Redis），响应速度和吞吐量都远远高于我们常用的关系型数据库等。</li>
</ul>
<h3>1.3 缓存淘汰算法</h3>
<p>FIFO/LFU/LRU/过期时间/随机</p>
<ul>
<li>FIFO：最先进入缓存的数据，在缓存空间不足时被清除，为了保证最新数据可用，保证实时性</li>
<li>LFU(Least Frequently Used)：最近最不常用，<strong>基于访问次数</strong>，<strong>去除命中次数最少的元素</strong>，保证高频数据有效性</li>
<li>LRU(Least Recently Used)：最近最少使用，<strong>基于访问时间</strong>，在被访问过的元素中<strong>去除最久未使用的元素</strong>，保证热点数据的有效性</li>
</ul>
<h3>1.4 哪里用了缓存</h3>
<p>一切地方。例如：</p>
<ul>
<li>我们从硬盘读数据的时候，其实操作系统还额外把附近的数据都读到了内存里</li>
<li>例如，CPU在从内存里读数据的时候，也额外读了许多数据到各级cache里</li>
<li>各个输入输出之间用buffer保存一批数据统一发送和接受，而不是一个byte一个byte的处理</li>
</ul>
<p>上面这是系统层面，在软件系统设计层面，很多地方也用了缓存：</p>
<ul>
<li>浏览器会缓存页面的元素，这样在重复访问网页时，就避开了要从互联网上下载数据（例如大图片）</li>
<li>web服务会把静态的东西提前部署在CDN上，这也是一种缓存</li>
<li>数据库会缓存查询，所以同一条查询第二次就是要比第一次快</li>
<li>内存数据库（如redis）选择把大量数据存在内存而非硬盘里，这可以看作是一个大型缓存，只是把整个数据库缓存了起来</li>
<li>应用程序把最近几次计算的结果放在本地内存里，如果下次到来的请求还是原请求，就跳过计算直接返回结果 ...</li>
</ul>
<h2>2. 缓存应用和实现</h2>
<p>缓存有各类特征，而且有不同介质的区别，那么实际工程中我们怎么去对缓存分类呢? 在目前的应用服务框架中，比较常见的，是根据缓存与应用的藕合度，分为local cache（本地缓存）和remote cache（分布式缓存）：</p>
<ul>
<li><strong>本地缓存</strong>：指的是在应用中的缓存组件，其最大的优点是应用和cache是在同一个进程内部，请求缓存非常快速，没有过多的网络开销等，在单应用不需要集群支持或者集群情况下各节点无需互相通知的场景下使用本地缓存较合适；同时，它的缺点也是应为缓存跟应用程序耦合，多个应用程序无法直接的共享缓存，各应用或集群的各节点都需要维护自己的单独缓存，对内存是一种浪费。</li>
<li><strong>分布式缓存</strong>：指的是与应用分离的缓存组件或服务，其最大的优点是自身就是一个独立的应用，与本地应用隔离，多个应用可直接的共享缓存。</li>
</ul>
<p>目前各种类型的缓存都活跃在成千上万的应用服务中，还没有一种缓存方案可以解决一切的业务场景或数据类型，我们需要根据自身的特殊场景和背景，选择最适合的缓存方案。缓存的使用是程序员、架构师的必备技能，好的程序员能根据数据类型、业务场景来准确判断使用何种类型的缓存，如何使用这种缓存，以最小的成本最快的效率达到最优的目的。</p>
<h3>2.1 缓存实现-本地缓存</h3>
<p>编程直接实现缓存 个别场景下，我们只需要简单的缓存数据的功能，而无需关注更多存取、清空策略等深入的特性时，直接编程实现缓存则是最便捷和高效的。</p>
<h4>2.1.1 成员变量或局部变量实现</h4>
<p>简单代码示例如下：</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> UseLocalCache</span><span style="color:#E06C75;--shiki-dark:#E06C75">(){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     //一个本地的缓存变量</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">     Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> localCacheStoreMap </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> HashMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> infosList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getInfoList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    for</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#E06C75;--shiki-dark:#E06C75"> item</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75">infosList){</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">localCacheStoreMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">containsKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(item)</span><span style="color:#E06C75;--shiki-dark:#E06C75">){ </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//缓存命中 使用缓存数据</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // todo</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#E06C75;--shiki-dark:#E06C75"> { </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 缓存未命中  IO获取数据，结果存入缓存</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            Object</span><span style="color:#E06C75;--shiki-dark:#E06C75"> valueObject </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getInfoFromDB</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            localCacheStoreMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">valueObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">toString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), valueObject);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//示例</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> List</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">Object</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getInfoList</span><span style="color:#E06C75;--shiki-dark:#E06C75">(){</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    return</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//示例数据库IO获取</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Object</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getInfoFromDB</span><span style="color:#E06C75;--shiki-dark:#E06C75">(){</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    return</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Object</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以局部变量map结构缓存部分业务数据，减少频繁的重复数据库I/O操作。缺点仅限于类的自身作用域内，类间无法共享缓存。</p>
<h4>2.1.2 静态变量实现</h4>
<p>最常用的单例实现静态资源缓存，代码示例如下：</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> CityUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> final</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> HttpClient</span><span style="color:#E06C75;--shiki-dark:#E06C75"> httpClient </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ServerHolder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">createClientWithPool</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span><span style="color:#E06C75;--shiki-dark:#E06C75"> </span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Integer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cityIdNameMap </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> HashMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Integer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Integer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> districtIdNameMap </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> HashMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Integer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    static</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        HttpGet</span><span style="color:#E06C75;--shiki-dark:#E06C75"> get </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> HttpGet</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"http://gis-in.sankuai.com/api/location/city/all"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        BaseAuthorizationUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">generateAuthAndDateHeader</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(get,</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                BaseAuthorizationUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">CLIENT_TO_REQUEST_MDC</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                BaseAuthorizationUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SECRET_TO_REQUEST_MDC</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        try</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> resultStr </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> httpClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">execute</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(get, </span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> BasicResponseHandler</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            JSONObject</span><span style="color:#E06C75;--shiki-dark:#E06C75"> resultJo </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> JSONObject</span><span style="color:#E06C75;--shiki-dark:#E06C75">(resultStr)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            JSONArray</span><span style="color:#E06C75;--shiki-dark:#E06C75"> dataJa </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> resultJo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getJSONArray</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"data"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> dataJa</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">length</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span><span style="color:#E06C75;--shiki-dark:#E06C75"> i</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">++</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                JSONObject</span><span style="color:#E06C75;--shiki-dark:#E06C75"> itemJo </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> dataJa</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getJSONObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(i);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                cityIdNameMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">itemJo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getInt</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"id"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">itemJo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"name"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD">catch</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Exception</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            throw</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> RuntimeException</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Init City List Error!"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> e)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    static</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        HttpGet</span><span style="color:#E06C75;--shiki-dark:#E06C75"> get </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> HttpGet</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"http://gis-in.sankuai.com/api/location/district/all"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        BaseAuthorizationUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">generateAuthAndDateHeader</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(get,</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                BaseAuthorizationUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">CLIENT_TO_REQUEST_MDC</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                BaseAuthorizationUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SECRET_TO_REQUEST_MDC</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        try</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> resultStr </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> httpClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">execute</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(get, </span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> BasicResponseHandler</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            JSONObject</span><span style="color:#E06C75;--shiki-dark:#E06C75"> resultJo </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> JSONObject</span><span style="color:#E06C75;--shiki-dark:#E06C75">(resultStr)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            JSONArray</span><span style="color:#E06C75;--shiki-dark:#E06C75"> dataJa </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> resultJo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getJSONArray</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"data"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> dataJa</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">length</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span><span style="color:#E06C75;--shiki-dark:#E06C75"> i</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">++</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                JSONObject</span><span style="color:#E06C75;--shiki-dark:#E06C75"> itemJo </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> dataJa</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getJSONObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(i);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                districtIdNameMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">itemJo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getInt</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"id"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">itemJo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"name"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD">catch</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Exception</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            throw</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> RuntimeException</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Init District List Error!"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> e)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getCityName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> cityId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> name</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> cityIdNameMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(cityId);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">      if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (name </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        name </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379"> "未知"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">       return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> name;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">     }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getDistrictName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> districtId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> name</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> districtIdNameMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(districtId);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">       if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (name </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">         name </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379"> "未知"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">       return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> name;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">     }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>O2O业务中常用的城市基础基本信息判断，通过静态变量一次获取缓存内存中，减少频繁的I/O读取，静态变量实现类间可共享，进程内可共享，缓存的实时性稍差。</p>
<p>为了解决本地缓存数据的实时性问题，目前大量使用的是结合ZooKeeper的自动发现机制，实时变更本地静态变量缓存：</p>
<p>美团内部的基础配置组件MtConfig，采用的就是类似原理，使用静态变量缓存，结合ZooKeeper的统一管理，做到自动动态更新缓存，如图2所示。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300943884.png" alt="image-20220629221854719" tabindex="0" loading="lazy"><figcaption>image-20220629221854719</figcaption></figure>
<p>图2 Mtconfig实现图</p>
<p>这类缓存实现，优点是能直接在heap区内读写，最快也最方便；缺点同样是受heap区域影响，缓存的数据量非常有限，同时缓存时间受GC影响。主要满足单机场景下的小数据量缓存需求，同时对缓存数据的变更无需太敏感感知，如上一般配置管理、基础静态数据等场景。</p>
<h3>2.2 Ehcache</h3>
<p>Ehcache是现在最流行的纯Java开源缓存框架，配置简单、结构清晰、功能强大，是一个非常轻量级的缓存实现，我们常用的Hibernate里面就集成了相关缓存功能。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300943908.png" alt="image-20220629221951180" tabindex="0" loading="lazy"><figcaption>image-20220629221951180</figcaption></figure>
<p>图3 Ehcache框架图</p>
<p>从图3中我们可以了解到，Ehcache的核心定义主要包括：</p>
<ul>
<li>cache manager：缓存管理器，以前是只允许单例的，不过现在也可以多实例了。</li>
<li>cache：缓存管理器内可以放置若干cache，存放数据的实质，所有cache都实现了Ehcache接口，这是一个真正使用的缓存实例；通过缓存管理器的模式，可以在单个应用中轻松隔离多个缓存实例，独立服务于不同业务场景需求，缓存数据物理隔离，同时需要时又可共享使用。</li>
<li>element：单条缓存数据的组成单位。</li>
<li>system of record（SOR）：可以取到真实数据的组件，可以是真正的业务逻辑、外部接口调用、存放真实数据的数据库等，缓存就是从SOR中读取或者写入到SOR中去的。</li>
</ul>
<p>在上层可以看到，整个Ehcache提供了对JSR、JMX等的标准支持，能够较好的兼容和移植，同时对各类对象有较完善的监控管理机制。它的缓存介质涵盖堆内存（heap）、堆外内存（BigMemory商用版本支持）和磁盘，各介质可独立设置属性和策略。Ehcache最初是独立的本地缓存框架组件，在后期的发展中，结合Terracotta服务阵列模型，可以支持分布式缓存集群，主要有RMI、JGroups、JMS和Cache Server等传播方式进行节点间通信，如图3的左侧部分描述。</p>
<p>整体数据流转包括这样几类行为:</p>
<ul>
<li>Flush：缓存条目向低层次移动。</li>
<li>Fault：从低层拷贝一个对象到高层。在获取缓存的过程中，某一层发现自己的该缓存条目已经失效，就触发了Fault行为。</li>
<li>Eviction：把缓存条目除去。</li>
<li>Expiration：失效状态。</li>
<li>Pinning：强制缓存条目保持在某一层。</li>
</ul>
<p>图4反映了数据在各个层之间的流转，同时也体现了各层数据的一个生命周期。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300943933.png" alt="image-20220629222018879.png" tabindex="0" loading="lazy"><figcaption>image-20220629222018879.png</figcaption></figure>
<p>图4 缓存数据流转图（L1:本地内存层；L2:Terracotta服务节点层)</p>
<p>Ehcache的配置使用如下：</p>
<div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">ehcache</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">&lt;!-- 指定一个文件目录，当Ehcache把数据写到硬盘上时，将把数据写到这个文件目录下 --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">diskStore</span><span style="color:#D19A66;--shiki-dark:#D19A66"> path</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"java.io.tmpdir"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">&lt;!-- 设定缓存的默认数据过期策略 --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">defaultCache</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">        maxElementsInMemory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"10000"</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">        eternal</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"false"</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">        overflowToDisk</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"true"</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">        timeToIdleSeconds</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"0"</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">        timeToLiveSeconds</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"0"</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">        diskPersistent</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"false"</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">        diskExpiryThreadIntervalSeconds</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"120"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">&lt;!--  </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    设定具体的命名缓存的数据过期策略</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    cache元素的属性：</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        name：缓存名称</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        maxElementsInMemory：内存中最大缓存对象数</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        maxElementsOnDisk：硬盘中最大缓存对象数，若是0表示无穷大</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        eternal：true表示对象永不过期，此时会忽略timeToIdleSeconds和timeToLiveSeconds属性，默认为false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        overflowToDisk：true表示当内存缓存的对象数目达到了maxElementsInMemory界限后，会把溢出的对象写到硬盘缓存中。注意：如果缓存的对象要写入到硬盘中的话，则该对象必须实现了Serializable接口才行。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        diskSpoolBufferSizeMB：磁盘缓存区大小，默认为30MB。每个Cache都应该有自己的一个缓存区。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        diskPersistent：是否缓存虚拟机重启期数据</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        diskExpiryThreadIntervalSeconds：磁盘失效线程运行时间间隔，默认为120秒</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        timeToIdleSeconds： 设定允许对象处于空闲状态的最长时间，以秒为单位。当对象自从最近一次被访问后，如果处于空闲状态的时间超过了timeToIdleSeconds属性值，这个对象就会过期，EHCache将把它从缓存中清空。只有当eternal属性为false，该属性才有效。如果该属性值为0，则表示对象可以无限期地处于空闲状态</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        timeToLiveSeconds：设定对象允许存在于缓存中的最长时间，以秒为单位。当对象自从被存放到缓存中后，如果处于缓存中的时间超过了 timeToLiveSeconds属性值，这个对象就会过期，Ehcache将把它从缓存中清除。只有当eternal属性为false，该属性才有效。如果该属性值为0，则表示对象可以无限期地存在于缓存中。timeToLiveSeconds必须大于timeToIdleSeconds属性，才有意义</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        memoryStoreEvictionPolicy：当达到maxElementsInMemory限制时，Ehcache将会根据指定的策略去清理内存。可选策略有：LRU（最近最少使用，默认策略）、FIFO（先进先出）、LFU（最少访问次数）。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">--&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">cache</span><span style="color:#D19A66;--shiki-dark:#D19A66"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"CACHE1"</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">       maxElementsInMemory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"1000"</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">       eternal</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"true"</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">       overflowToDisk</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"true"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/&gt;  </span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">cache</span><span style="color:#D19A66;--shiki-dark:#D19A66"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"CACHE2"</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">    maxElementsInMemory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"1000"</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">    eternal</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"false"</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">    timeToIdleSeconds</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"200"</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">    timeToLiveSeconds</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"4000"</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">    overflowToDisk</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"true"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">ehcache</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>整体上看，Ehcache的使用还是相对简单便捷的，提供了完整的各类API接口。需要注意的是，虽然Ehcache支持磁盘的持久化，但是由于存在两级缓存介质，在一级内存中的缓存，如果没有主动的刷入磁盘持久化的话，在应用异常down机等情形下，依然会出现缓存数据丢失，为此可以根据需要将缓存刷到磁盘，将缓存条目刷到磁盘的操作可以通过cache.flush()方法来执行，需要注意的是，对于对象的磁盘写入，前提是要将对象进行序列化。</p>
<p>主要特性：</p>
<ul>
<li>快速，针对大型高并发系统场景，Ehcache的多线程机制有相应的优化改善。</li>
<li>简单，很小的jar包，简单配置就可直接使用，单机场景下无需过多的其他服务依赖。</li>
<li>支持多种的缓存策略，灵活。</li>
<li>缓存数据有两级：内存和磁盘，与一般的本地内存缓存相比，有了磁盘的存储空间，将可以支持更大量的数据缓存需求。</li>
<li>具有缓存和缓存管理器的侦听接口，能更简单方便的进行缓存实例的监控管理。</li>
<li>支持多缓存管理器实例，以及一个实例的多个缓存区域。</li>
</ul>
<p>注意：Ehcache的超时设置主要是针对整个cache实例设置整体的超时策略，而没有较好的处理针对单独的key的个性的超时设置（有策略设置，但是比较复杂，就不描述了），因此，在使用中要注意过期失效的缓存元素无法被GC回收，时间越长缓存越多，内存占用也就越大，内存泄露的概率也越大。</p>
<h3>2.3 Guava Cache</h3>
<p>Guava Cache是Google开源的Java重用工具集库Guava里的一款缓存工具，其主要实现的缓存功能有：</p>
<ul>
<li>自动将entry节点加载进缓存结构中；</li>
<li>当缓存的数据超过设置的最大值时，使用LRU算法移除；</li>
<li>具备根据entry节点上次被访问或者写入时间计算它的过期机制；</li>
<li>缓存的key被封装在WeakReference引用内；</li>
<li>缓存的Value被封装在WeakReference或SoftReference引用内；</li>
<li>统计缓存使用过程中命中率、异常率、未命中率等统计数据。</li>
</ul>
<p>Guava Cache的架构设计灵感来源于ConcurrentHashMap，我们前面也提到过，简单场景下可以自行编码通过hashmap来做少量数据的缓存，但是，如果结果可能随时间改变或者是希望存储的数据空间可控的话，自己实现这种数据结构还是有必要的。</p>
<p>Guava Cache继承了ConcurrentHashMap的思路，使用多个segments方式的细粒度锁，在保证线程安全的同时，支持高并发场景需求。Cache类似于Map，它是存储键值对的集合，不同的是它还需要处理evict、expire、dynamic load等算法逻辑，需要一些额外信息来实现这些操作。对此，根据面向对象思想，需要做方法与数据的关联封装。如图5所示cache的内存数据模型，可以看到，使用ReferenceEntry接口来封装一个键值对，而用ValueReference来封装Value值，之所以用Reference命令，是因为Cache要支持WeakReference Key和SoftReference、WeakReference value。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300943958.png" alt="image-20220629222205342" tabindex="0" loading="lazy"><figcaption>image-20220629222205342</figcaption></figure>
<p>图5 Guava Cache数据结构图</p>
<p><strong>ReferenceEntry</strong>是对一个键值对节点的抽象，它包含了key和值的ValueReference抽象类，Cache由多个Segment组成，而每个Segment包含一个ReferenceEntry数组，每个ReferenceEntry数组项都是一条ReferenceEntry链，且一个ReferenceEntry包含key、hash、valueReference、next字段。除了在ReferenceEntry数组项中组成的链，在一个Segment中，所有ReferenceEntry还组成access链（accessQueue）和write链（writeQueue）（后面会介绍链的作用）。ReferenceEntry可以是强引用类型的key，也可以WeakReference类型的key，为了减少内存使用量，还可以根据是否配置了expireAfterWrite、expireAfterAccess、maximumSize来决定是否需要write链和access链确定要创建的具体Reference：StrongEntry、StrongWriteEntry、StrongAccessEntry、StrongWriteAccessEntry等。</p>
<p><strong>对于ValueReference</strong>，因为Cache支持强引用的Value、SoftReference Value以及WeakReference Value，因而它对应三个实现类：StrongValueReference、SoftValueReference、WeakValueReference。为了支持动态加载机制，它还有一个LoadingValueReference，在需要动态加载一个key的值时，先把该值封装在LoadingValueReference中，以表达该key对应的值已经在加载了，如果其他线程也要查询该key对应的值，就能得到该引用，并且等待改值加载完成，从而保证该值只被加载一次，在该值加载完成后，将LoadingValueReference替换成其他ValueReference类型。ValueReference对象中会保留对ReferenceEntry的引用，这是因为在Value因为WeakReference、SoftReference被回收时，需要使用其key将对应的项从Segment的table中移除。</p>
<p><strong>WriteQueue和AccessQueue</strong> ：为了实现最近最少使用算法，Guava Cache在Segment中添加了两条链：write链（writeQueue）和access链（accessQueue），这两条链都是一个双向链表，通过ReferenceEntry中的previousInWriteQueue、nextInWriteQueue和previousInAccessQueue、nextInAccessQueue链接而成，但是以Queue的形式表达。WriteQueue和AccessQueue都是自定义了offer、add（直接调用offer）、remove、poll等操作的逻辑，对offer（add）操作，如果是新加的节点，则直接加入到该链的结尾，如果是已存在的节点，则将该节点链接的链尾；对remove操作，直接从该链中移除该节点；对poll操作，将头节点的下一个节点移除，并返回。</p>
<p>了解了cache的整体数据结构后，再来看下针对缓存的相关操作就简单多了：</p>
<ul>
<li><strong>Segment中的evict清除策略操作</strong>，是在每一次调用操作的开始和结束时触发清理工作，这样比一般的缓存另起线程监控清理相比，可以减少开销，但如果长时间没有调用方法的话，会导致不能及时的清理释放内存空间的问题。evict主要处理四个Queue：1. keyReferenceQueue；2. valueReferenceQueue；3. writeQueue；4. accessQueue。前两个queue是因为WeakReference、SoftReference被垃圾回收时加入的，清理时只需要遍历整个queue，将对应的项从LocalCache中移除即可，这里keyReferenceQueue存放ReferenceEntry，而valueReferenceQueue存放的是ValueReference，要从Cache中移除需要有key，因而ValueReference需要有对ReferenceEntry的引用，这个前面也提到过了。而对后面两个Queue，只需要检查是否配置了相应的expire时间，然后从头开始查找已经expire的Entry，将它们移除即可。</li>
<li><strong>Segment中的put操作</strong>：put操作相对比较简单，首先它需要获得锁，然后尝试做一些清理工作，接下来的逻辑类似ConcurrentHashMap中的rehash，查找位置并注入数据。需要说明的是当找到一个已存在的Entry时，需要先判断当前的ValueRefernece中的值事实上已经被回收了，因为它们可以是WeakReference、SoftReference类型，如果已经被回收了，则将新值写入。并且在每次更新时注册当前操作引起的移除事件，指定相应的原因：COLLECTED、REPLACED等，这些注册的事件在退出的时候统一调用Cache注册的RemovalListener，由于事件处理可能会有很长时间，因而这里将事件处理的逻辑在退出锁以后才做。最后，在更新已存在的Entry结束后都尝试着将那些已经expire的Entry移除。另外put操作中还需要更新writeQueue和accessQueue的语义正确性。</li>
<li><strong>Segment带CacheLoader的get操作</strong>：1. 先查找table中是否已存在没有被回收、也没有expire的entry，如果找到，并在CacheBuilder中配置了refreshAfterWrite，并且当前时间间隔已经操作这个事件，则重新加载值，否则，直接返回原有的值；2. 如果查找到的ValueReference是LoadingValueReference，则等待该LoadingValueReference加载结束，并返回加载的值；3. 如果没有找到entry，或者找到的entry的值为null，则加锁后，继续在table中查找已存在key对应的entry，如果找到并且对应的entry.isLoading()为true，则表示有另一个线程正在加载，因而等待那个线程加载完成，如果找到一个非null值，返回该值，否则创建一个LoadingValueReference，并调用loadSync加载相应的值，在加载完成后，将新加载的值更新到table中，即大部分情况下替换原来的LoadingValueReference。</li>
</ul>
<p>Guava Cache提供Builder模式的CacheBuilder生成器来创建缓存的方式，十分方便，并且各个缓存参数的配置设置，类似于函数式编程的写法，可自行设置各类参数选型。它提供三种方式加载到缓存中。分别是：</p>
<ul>
<li>在构建缓存的时候，使用build方法内部调用CacheLoader方法加载数据；</li>
<li>callable 、callback方式加载数据；</li>
<li>使用粗暴直接的方式，直接Cache.put 加载数据，但自动加载是首选的，因为它可以更容易的推断所有缓存内容的一致性。</li>
</ul>
<p>build生成器的两种方式都实现了一种逻辑：从缓存中取key的值，如果该值已经缓存过了则返回缓存中的值，如果没有缓存过可以通过某个方法来获取这个值，不同的地方在于cacheloader的定义比较宽泛，是针对整个cache定义的，可以认为是统一的根据key值load value的方法，而callable的方式较为灵活，允许你在get的时候指定load方法。使用示例如下：</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">   /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    * CacheLoader</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">   public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> loadingCache</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">   {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">     LoadingCache</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> graphs </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">CacheBuilder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">newBuilder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">maximumSize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">1000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> CacheLoader</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> load</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#C678DD;--shiki-dark:#C678DD"> throws</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Exception</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"key:"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">key);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"key"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">equals</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key)){</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                    return</span><span style="color:#98C379;--shiki-dark:#98C379"> "key return result"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                }</span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                    return</span><span style="color:#98C379;--shiki-dark:#98C379"> "get-if-absent-compute"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                }                   </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        });</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">   String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> resultVal </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">   try</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">       resultVal </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> graphs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"key"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">       } </span><span style="color:#C678DD;--shiki-dark:#C678DD">catch</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ExecutionException</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">         e</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">printStackTrace</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(resultVal);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">   }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">   /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    * Callable</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">   public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> callablex</span><span style="color:#E06C75;--shiki-dark:#E06C75">() throws </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ExecutionException</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      Cache</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cache </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> CacheBuilder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">newBuilder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">maximumSize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">1000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> result </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> cache</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"key"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Callable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">       {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">         public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> call</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">         {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">          return</span><span style="color:#98C379;--shiki-dark:#98C379"> "result"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">         }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">       });</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">     System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(result);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>总体来看，Guava Cache基于ConcurrentHashMap的优秀设计借鉴，在高并发场景支持和线程安全上都有相应的改进策略，使用Reference引用命令，提升高并发下的数据……访问速度并保持了GC的可回收，有效节省空间；同时，write链和access链的设计，能更灵活、高效的实现多种类型的缓存清理策略，包括基于容量的清理、基于时间的清理、基于引用的清理等；编程式的build生成器管理，让使用者有更多的自由度，能够根据不同场景设置合适的模式。</p>
<h3>2.4 缓存实现 - 分布式缓存</h3>
<p>请参考：<a href="http://java.xiaoyanxiaoyu.com/microservice/distributed/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F-%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98%E5%8F%8A%E6%96%B9%E6%A1%88%E5%AE%9E%E7%8E%B0.html" target="_blank" rel="noopener noreferrer">分布式系统 - 分布式缓存及实现方案</a></p>
<h3>2.5 缓存实现方式 - 注解方式</h3>
<h4>2.5.1 Spring注解缓存</h4>
<p>Spring 3.1之后，引入了注解缓存技术，其本质上不是一个具体的缓存实现方案，而是一个对缓存使用的抽象，通过在既有代码中添加少量自定义的各种annotation，即能够达到使用缓存对象和缓存方法的返回对象的效果。Spring的缓存技术具备相当的灵活性，不仅能够使用SpEL（Spring Expression Language）来定义缓存的key和各种condition，还提供开箱即用的缓存临时存储方案，也支持和主流的专业缓存集成。其特点总结如下：</p>
<ul>
<li>少量的配置annotation注释即可使得既有代码支持缓存；</li>
<li>支持开箱即用，不用安装和部署额外的第三方组件即可使用缓存；</li>
<li>支持Spring Express Language（SpEL），能使用对象的任何属性或者方法来定义缓存的key和使用规则条件；</li>
<li>支持自定义key和自定义缓存管理者，具有相当的灵活性和可扩展性。</li>
</ul>
<p>和Spring的事务管理类似，Spring Cache的关键原理就是Spring AOP，通过Spring AOP实现了在方法调用前、调用后获取方法的入参和返回值，进而实现了缓存的逻辑。而Spring Cache利用了Spring AOP的动态代理技术，即当客户端尝试调用pojo的foo()方法的时候，给它的不是pojo自身的引用，而是一个动态生成的代理类。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300943999.png" alt="image-20220629222645572" tabindex="0" loading="lazy"><figcaption>image-20220629222645572</figcaption></figure>
<p>图12 Spring动态代理调用图</p>
<p>如图12所示，实际客户端获取的是一个代理的引用，在调用foo()方法的时候，会首先调用proxy的foo()方法，这个时候proxy可以整体控制实际的pojo.foo()方法的入参和返回值，比如缓存结果，比如直接略过执行实际的foo()方法等，都是可以轻松做到的。Spring Cache主要使用三个注释标签，即@Cacheable、@CachePut和@CacheEvict，主要针对方法上注解使用，部分场景也可以直接类上注解使用，当在类上使用时，该类所有方法都将受影响。我们总结一下其作用和配置方法，如下表所示。</p>
<p>| 标签类型    | 作用                                                         | 主要配置参数说明                                             |<br>
|</p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300943838.png" type="image/png"/>
    </item>
    <item>
      <title>架构之高可用: 如何保证高可用性？</title>
      <link>https://mrjackc.github.io/posts/Architect/base/arch-y-ensure-high-availability.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/base/arch-y-ensure-high-availability.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">架构之高可用: 如何保证高可用性？</source>
      <description>架构之高可用: 如何保证高可用性？ 高可用性对于我们来说应该属于经常提到的名词，本文我们将介绍在分布式系统中保证高可用性的一些常用经验。系统可用性指标系统可用性指标简单来将就是系统可用时间与总运行时间之比Availability=MTTF/(MTTF+MTTRMTTF)MTTF 是 Mean Time To Failure，指平均故障前的时间，即系统平...</description>
      <category>架构</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<blockquote>
<p>高可用性对于我们来说应该属于经常提到的名词，本文我们将介绍在分布式系统中保证高可用性的一些常用经验。系统可用性指标系统可用性指标简单来将就是系统可用时间与总运行时间之比Availability=MTTF/(MTTF+MTTRMTTF)MTTF 是 Mean Time To Failure，指平均故障前的时间，即系统平均能够正常运行多长时间才发生一次故障。系统的可靠性越高，MTTF 越长(简...</p>
</blockquote>
<p>高可用性对于我们来说应该属于经常提到的名词，本文我们将介绍在分布式系统中保证高可用性的一些常用经验。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300941947.png" alt="image-20221013102031819" tabindex="0" loading="lazy"><figcaption>image-20221013102031819</figcaption></figure>
<h2>0. 影响可用性的因素有哪些</h2>
<ul>
<li>机器的资源耗尽</li>
<li>单点故障</li>
<li>人为操作</li>
<li>网络</li>
</ul>
<h2>1. 系统可用性指标</h2>
<p>系统可用性指标简单来将就是系统可用时间与总运行时间之比</p>
<div class="language-javascript" data-ext="javascript" data-title="javascript"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">Availability</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">MTTF</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">/</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">MTTF</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">MTTRMTTF</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span></code></pre>
</div><p>MTTF 是 Mean Time To Failure，指平均故障前的时间，即系统平均能够正常运行多长时间才发生一次故障。系统的可靠性越高，MTTF 越长(简单理解MTTF 就是指系统正常运行的时间)。MTTR 是 Mean Time To Recovery， 平均修复时间，即从故障出现到故障修复的这段时间，也就是系统不可用的时间，这段时间越短越好。系统可用性指标可以用通过下表的999标准衡量，现在普遍要求至少2个9，最好4个9以上：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300941996.png" alt="image-20221012203820810" tabindex="0" loading="lazy"><figcaption>image-20221012203820810</figcaption></figure>
<h2>2. 故障不可避免</h2>
<p>高可用性是指系统提供的服务要始终可用，然而故障不可避免，特别是在分布式系统，面对不可控的用户流量和机房环境，系统故障将会显得更加复杂和不可预测。在大规模的分布式系统中，各个模块之间存在错综复杂的依赖，任一一个环节出现问题，都有可能导致雪崩式、多米诺骨牌式的故障，甚者可以断言出现故障成了常态。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300941022.png" alt="image-20221012204150756" tabindex="0" loading="lazy"><figcaption>image-20221012204150756</figcaption></figure>
<p>如上图的分布式系统中，用户请求系统中的某个服务接口，请求需要经过长长的调用链才能处理返回。我们起码要保证网络连接正常，服务网关正常、前端服务正常、后台服务正常、数据库正常，请求才能被正常处理，如果调用链中的任一环节出现问题，都会直接反馈到用户体验上。</p>
<p>系统出现故障的原因多种多样，主要有以下这些：</p>
<ul>
<li>网络问题，网络连接故障，网络带宽出现超时拥塞等；</li>
<li>性能问题，数据库慢查询、Java Full GC、硬盘 IO 过大、CPU 过高、内存不足等</li>
<li>安全问题，被网络攻击，如 DDoS 等、异常客户端请求，如爬虫等。</li>
<li>运维问题，需求变更频繁不可控，架构也在不断地被调整，监控问题等；</li>
<li>管理问题，没有梳理出关键服务以及服务的依赖关系，运行信息没有和控制系统同步；</li>
<li>硬件问题，硬盘损坏、网卡出问题、交换机出问题、机房掉电、挖掘机问题(前一阵子机房电缆就经常被挖断)等</li>
</ul>
<p>面对如此多的天灾人祸，可控和不可控的故障因素，似乎系统的高可用性变成不可能完成的任务，但是在日常开发运维中，我们可以采用一些有效的设计、实现和运维手段来提高系统的高可用性，尽量交付一个在任何时候都基本可用的系统。</p>
<h2>3. 核心实现方案</h2>
<h3>3.1 冗余设计</h3>
<p>分布式系统中单点故障不可取的，而降低单点故障的不二法门就是冗余设计，通过多点部署的方式，并且最好是部署在不同的物理位置，避免单机房中多点同时失败。冗余设计不仅可以提高服务的吞吐量，还可以在出现灾难时快速恢复。目前常见的冗余设计有<strong>主从设计和对等治理设计</strong>，主从设计又可以细分为一主多从、多主多从。</p>
<p>冗余设计中一个不可避免的问题是考虑分布式系统中数据的一致性，多个节点中冗余的数据追求强一致性还是最终一致性。即使节点提供无状态服务，也需要借助外部服务，比如数据库、分布式缓存等维护数据状态。根据分布式系统下节点数据同步的基本原理CAP(Consistency (一致性)、Availablity (可用性)、Partition tolerance (分区容忍性)三个指标不可同时满足)，数据强一致性的系统无法保证高可用性，最典型的例子就是 Zookeeper。</p>
<h4>3.1.1 主从设计：Zookeeper</h4>
<p>Zookeeper 采用主从设计，服务集群由 Leader、Follower 和 Observer 三种角色组成，它们的职责如下：</p>
<ul>
<li>Leader: Zookeeper 集群使用 ZAB 协议通过 Leader 选举从集群中选定一个节点作为 Leader。Leader 响应客户端的读写请求；</li>
<li>Follower：只提供数据的读服务，会将来自客户端的写请求转发到 Leader 中。在 Leader 选举的过程中参与投票，并与 Leader 维持数据同步；</li>
<li>Observer：与 Folllower 的功能相同，但不参与 Leader 选举和写过程的"过半写成功"策略，单纯为了提高集群的读能力。</li>
</ul>
<p>在 Zookeeper 集群中，由于只有 Leader 角色的节点具备写数据的能力，当 Leader 节点宕机时，在新的 Leader 节点没有被选举出来之前，集群的写能力都是不可用的。虽然 Zookeeper 保证了集群数据的强一致性，但是放弃了集群的高可用性。</p>
<h4>3.1.2 对等治理设计：Eureka</h4>
<p>对等治理设计中比较优秀的业内体现为 Netiflx 开源的 Eureka 服务注册和发现组件。Eureka 集群由 Eureka Client 和 Eureka Server 两种角色组成，其中 Eureka Client 是指服务实例使用的服务注册和发现的客户端，用于注册和查询服务实例信息；Eureka Server 作为服务注册中心，存储有各服务的实例信息列表，采用多实例的方式部署保证高可用性。每一个 Eureka Server 都是对等的数据节点，Eureka Client 可以向任意的 Eureka Server 发起服务注册请求和服务发现请求。Eureka Server 之间的数据通过异步 HTTP 的方式同步，由于网络的不可靠性，不同 Eureka Server 中的服务实例数据不能保证在任意时间节点都相等，只能保证在 SLA 承诺时间内达到数据的最终一致性。Eureka 点对点对等的设计保证了服务注册与发现中心的高可用性，但是牺牲了数据的强一致性，降级为数据的最终一致性。</p>
<h3>3.2 熔断设计</h3>
<p>在分布式系统中，一次完整的请求可能需要经过多个服务模块的通力合作，请求在多个服务中传递，服务对服务的调用会产生新的请求，这些请求共同组成了这次请求的调用链。当调用链中的某个环节，特别是下游服务不可用时，将会导致上游服务调用方不可用，最终将这种不可用的影响扩大到整个系统，导致整个分布式系统的不可用，引发服务雪崩现象。</p>
<p>为了避免这种情况，在下游服务不可用时，保护上游服务的可用性显得极其重要。对此，我们可以参考电路系统的断路器机制，在必要的时候壮士断腕，当下游服务因为过载或者故障不能用时，及时“熔断”服务调用方和服务提供方的调用链，保护服务调用方资源，防止服务雪崩现象的出现。</p>
<p>断路器的基本设计图如下，由关闭、打开、半开三种状态组成：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300941044.png" alt="image-20221012205543264" tabindex="0" loading="lazy"><figcaption>image-20221012205543264</figcaption></figure>
<ul>
<li>关闭(Closed)状态：此时服务调用方可以调用服务提供方。断路器中使用失败计数器周期性统计请求失败次数和请求总次数的比例，如果最近失败频率超过了周期时间内允许失败的阈值，则切换到打开(Open)状态。在关闭状态下，失败计数器基于时间周期运作，会在每个统计周期开始前自动重置，防止某次偶然错误导致断路器进入打开状态。</li>
<li>打开(Open)状态：在该状态下，对应用程序的请求会立即返回错误响应或者执行预设的失败降级逻辑，而不调用服务提供方。断路器进入打开状态后会启动超时计时器，在计时器到达后，断路器进入半开状态。</li>
<li>半开(Half-Open)状态：允许应用程序一定数量的请求去调用服务。如果这些请求对服务的调用成功，那么可以认为之前导致调用失败的错误已经修正，此时断路器切换到关闭状态，同时将失败计数器重置。如果这一定数量的请求存在调用失败的情况，则认为导致之前调用失败的问题仍然存在，断路器切回到打开状态，并重置超时计时器来给系统一定的时间来修正错误。半开状态能够有效防止正在恢复中的服务被突然而来的大量请求再次打垮。</li>
</ul>
<p>使用断路器设计模式，能够有效地保护服务调用方的稳定性，它能够避免服务调用者频繁调用可能失败的服务提供者，防止服务调用者浪费 CPU 周期、线程和 IO 资源等，提高服务整体的可用性。</p>
<h3>3.3 限流设计</h3>
<p>熔断设计保护的是服务调用者，即上游服务的可用性，对于下游服务提供者，考虑到自身服务实例的负载能力，同样需要限流设计保护自己不被过量的流量冲垮。一般来讲有以下的限流策略：</p>
<ul>
<li>拒绝服务，把多出来的请求拒绝掉。一般来说，好的限流系统在受到流量暴增时，会暂时拒绝周期时间内请求数量最大的客户端，这样可以在一定程度上把一些不正常的或者是带有恶意的高并发访问挡在门外。</li>
<li>服务降级，关闭或是把后端做降级处理，释放资源给支撑主流程服务以支持更多的请求。降级有很多方式，一种是把一些不重要的服务给停掉，把 CPU、内存或是数据的资源让给更重要的功能；一种是数据接口只返回部分关键数据，减少数据查询处理链路；还有更快的一种是直接返回预设的缓存或者静态数据，牺牲数据强一致性的方式来获得更大的性能吞吐。</li>
<li>优先级请求，是指将目前系统的资源分配给优先级更高的用户，优先处理权限更高的用户的请求。</li>
<li>延时处理，在这种情况下，一般来说会使用缓冲队列来缓冲大量的请求，系统根据自身负载能力消费队列中的请求。如果该队列也满了，那么就只能拒绝用户请求。使用缓冲队列只是为了减缓压力，一般用于应对瞬时大量的流量削峰。</li>
<li>弹性伸缩，采用自动化运维的方式对相应的服务做自动化的伸缩。这种方案需要应用性能监控系统，能够感知到目前最繁忙的服务，并自动伸缩它们；还需要一个快速响应的自动化发布、部署和服务注册的运维系统。如果系统的处理压力集中在数据库这类不易自动扩容的外部服务，服务弹性伸缩意义不大。</li>
</ul>
<p>接下来我们介绍两种常用的限流算法：漏桶算法和令牌桶算法。</p>
<h4>3.3.1 漏桶算法(Leaky Bucket)</h4>
<p>漏桶算法(Leaky Bucket)是网络世界中流量整形(Traffic Shaping)或速率限制(Rate Limiting)时经常使用的一种算法，它的主要目的是控制数据注入到系统的速率，平滑对系统的突发流量，为系统提供一个稳定的请求流量。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300941074.png" alt="image-20221012210842217" tabindex="0" loading="lazy"><figcaption>image-20221012210842217</figcaption></figure>
<p>如上图所示，水(请求)先进入到漏桶，而出去的水量表示系统处理的请求。当访问流量过大时漏桶中就会积水，如果水太多了就会溢出，此时请求将会被拒绝。</p>
<h4>3.3.2 令牌桶算法</h4>
<p>令牌桶算法则是一个存放固定容量令牌的桶，按照固定速率往桶里添加令牌。桶中存放的令牌数有最大上限，超出之后就被丢弃。当流量或者网络请求到达时，每个请求都要获取一个令牌，如果能够获取到，则直接处理，同时令牌桶会删除一个令牌。如果获取不到，该请求就要被限流，要么直接丢弃，要么在缓冲区等待。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300941106.png" alt="image-20221012211150889" tabindex="0" loading="lazy"><figcaption>image-20221012211150889</figcaption></figure>
<h2>4. 其他设计与方案</h2>
<h3>4.1 降级设计</h3>
<p>在应对大流量冲击时，可以尝试对请求的处理流程进行裁剪，去除或者异步化非关键流程的次要功能，保证主流程功能正常运转。</p>
<p>一般来说，我们的降级时可以暂时牺牲的东西有：</p>
<ul>
<li>降低一致性。从数据强一致性变成最终一致性。</li>
<li>关闭非关键服务。关闭不重要功能的服务，从而释放出更多的资源。</li>
<li>简化功能。把一些功能简化掉，比如，简化业务流程，或是不再返回全量数据，只返回部分数据。也可以使用缓存的方式，返回预设的缓存数据或者静态数据，不执行具体的业务数据查询处理。</li>
</ul>
<h3>4.2 无状态设计</h3>
<p>在分布式系统设计中，都倡导使用无状态化的方式设计开发服务模块。无状态的意思是指对于功能相同的服务模块，在服务内部不维护任何的数据状态，只会根据请求中携带的业务数据从外部服务比如数据库、分布式缓存中查询相关数据进行处理，这样能够保证请求到任意服务实例中处理结果都是一致的。</p>
<p>无状态设计的服务模块可以简单通过多实例部署的方式进行横向扩展，各服务实例完全对等，可以有效提高服务集群的吞吐量和可用性。但是如此一来，服务处理的性能瓶颈就可能出现在提供数据状态一致性的外部服务中。</p>
<h3>4.3 幂等性设计</h3>
<p>幂等性设计是指系统对于相同的请求，一次和多次请求获取到的结果都是一样的。幂等性设计对分布式系统中的超时重试、系统恢复有重要的意义，它能够保证重复调用不会产生错误，保证系统的可用性。一般我们认为声明为幂等性的接口或者服务出现调用失败是常态，由于幂等性的原因，调用方可以在调用失败后放心进行重新请求。举个简单的例子，在支付系统中，在一笔订单的支付请求中，由于网络抖动或者其他未知的因素导致请求没能及时返回，如果支付接口是幂等性，我们应该可以放心使用同一笔订单号重新请求支付，如果上次支付请求已经成功，将会返回支付成功，如果上次支付请求未成功，将会重新进行金额扣费，这样就能保证请求的正确进行，避免重复扣费的错误。</p>
<h3>4.4 重试设计</h3>
<p>在很多时候，由于网络不可靠或者服务提供方宕机的原因，服务调用者的调用很可能会失败，如果此时服务调用者中存在一定的重试机制，就能够在一定程度上减少服务失败的概率，提高服务可用性。比如业务系统在某次数据库请求中，由于临时的网络原因，数据请求超时了，如果业务系统中具备一定的超时重试机制，根据请求参数再次向数据库请求数据，就能正常获取到数据，完成业务处理流程，避免该次业务处理失败。</p>
<p>使用重试设计的时候需要注意以下问题：一是待重试的服务接口是否为幂等性，对于某些超时请求，请求可能在服务提供方中执行成功了，但是返回结果在网络传输中丢失了，此时重复调用非幂等性服务接口很可能会导致额外的系统错误；二是服务提供方是否只是临时不可用，对于无法快速恢复的服务提供方或者网络无法立即恢复的情况下，盲目的重试只会使情况更加糟糕，无脑地消耗服务调用方的 CPU 、线程和网络 IO 资源，在这种情况下建议结合熔断设计对服务调用方进行保护。</p>
<h3>4.5 接口缓存</h3>
<p>接口缓存是应对大并发量请求，提高系统吞吐量，保证系统可用性的有效手段。基本原理是，在系统内部，对于某部分请求参数和请求路径完成相同的请求的结果进行缓存，在周期时间内，这部分相同的请求的结果将会直接从缓存中读取，减少业务处理过程的负载。最简单的例子是在一些在线大数据查询系统中，查询系统会将周期时间内系统查询条件相同的查询结果进行缓存，加快访问速度。</p>
<p>接口缓存同样有着它不适用的场景。接口缓存牺牲了数据的强一致性，对于实时性要求高的系统并不适用。接口缓存加快的是相同请求的请求速率，对于请求差异化较大的系统同样无能为力，过多的缓存反而会大量浪费系统内存等资源。</p>
<h3>4.6 实时监控和度量</h3>
<p>由于分布式中服务节点众多，问题的定位变得异常复杂，对此建议对每台服务器资源使用情况和服务实例的性能指标进行实时监控和度量。最常见的方式健康检查，通过定时调用服务提供给健康检查接口判断服务是否可用。目前业内也有开源的监控系统 Prometheus，它监控各个服务实例的运行指标，并根据预设的阀值自动报警，及时通知相关开发运维人员进行处理。</p>
<h3>4.7 常规划化维护</h3>
<p>定期清理系统的无用代码，及时进行代码评审，处理代码中 bad smell。对于无状态服务可以定期重启服务器减少内存碎片和防止内存泄漏。这些都是非常有效的提高系统可用性的运维手段。</p>
<h2>5. 总结</h2>
<p>虽然在分布式系统中，由于系统的复杂性，大大加大了服务错误的可能性，但是也有足够的方案保证系统可用性。本文首先介绍了系统可用性指标，接着阐述了分布式系统中故障不可避免的情况，最后笼统地介绍了一些有效的高可用设计。</p>
<h2>参考文章</h2>
<p><a href="https://bbs.huaweicloud.com/blogs/236943" target="_blank" rel="noopener noreferrer">分布式系统如何保证高可用性？(上)</a></p>
<p><a href="https://bbs.huaweicloud.com/blogs/245653" target="_blank" rel="noopener noreferrer">分布式系统如何保证高可用性？(下)</a></p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300941947.png" type="image/png"/>
    </item>
    <item>
      <title>架构之高可用: 可用性几个9</title>
      <link>https://mrjackc.github.io/posts/Architect/base/arch-y-high-availability9999.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/base/arch-y-high-availability9999.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">架构之高可用: 可用性几个9</source>
      <description>架构之高可用: 可用性几个9 1. 简介 SLA：服务等级协议（简称：SLA，全称：service level agreement）。是在一定开销下为保障服务的性能和可用性，服务提供商与用户间定义的一种双方认可的协定。通常这个开销是驱动提供服务质量的主要因素。 SLA的定义来源百度，这到底是什么意思呢？ 我们平常经常看到互联网公司喊口号，我们今年一定要...</description>
      <category>架构</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 简介</h2>
<p><strong>SLA</strong>：服务等级协议（简称：SLA，全称：service level agreement）。是在一定开销下为保障服务的性能和可用性，服务提供商与用户间定义的一种双方认可的协定。通常这个开销是驱动提供服务质量的主要因素。</p>
<p>SLA的定义来源百度，这到底是什么意思呢？</p>
<blockquote>
<p>我们平常经常看到互联网公司喊口号，我们今年一定要做到3个9、4个9，即99.9%、99.99%，甚至还有5个9，即99.999%。</p>
</blockquote>
<h2>2. <strong>这么多9代表什么意思呢？</strong></h2>
<p>首先，SLA的概念，对互联网公司来说就是网站服务可用性的一个保证。9越多代表全年服务可用时间越长服务更可靠，停机时间越短，反之亦然。</p>
<h2>3. <strong>这么多9是怎么计算的呢？</strong></h2>
<p>全年拿365天做计算吧，看看几个9要停机多久时间做能才能达到！</p>
<blockquote>
<p>1年 = 365天 = 8760小时</p>
<p>99.9 = 8760 * 0.1% = 8760 * 0.001 = 8.76小时</p>
<p>99.99 = 8760 * 0.0001 = 0.876小时 = 0.876 * 60 = 52.6分钟</p>
<p>99.999 = 8760 * 0.00001 = 0.0876小时 = 0.0876 * 60 = 5.26分钟</p>
</blockquote>
<p>从以上看来，全年停机5.26分钟才能做到99.999%，即5个9。依此类推，要达到6个9及更多9，可说是非常难了吧。</p>
<h2>4. <strong>为什么需要更多的9</strong></h2>
<p>每个公司对几个9的定义都不一样，<strong>互联网公司至少都是99.99</strong>吧。像一些<strong>政府网站，如社保公积金等，经常故障服务不可用，能做到99.9</strong>就不错了。</p>
<p>如果我们提供的服务可用性越低，意味着造成的损失也越大，别的不说，如果是特别重要的时刻，或许就在某一分钟，你可能就会因服务不可用而丢掉一笔大的订单，这都是始料未及的。所以，只要尽可能的提升SLA可用性才能最大化的提高企业生产力。</p>
<p>要做到更多的9，<strong>就要不断的监控自己的服务，服务挂掉能及时恢复服务</strong>。就像开车出远门，首先得检查轮胎，同时还得准备一个备胎一样的道理。</p>
<h2>5. 怎么做到更多的9</h2>
<ul>
<li>
<p><a href="https://java.isture.com/arch/base/arch-y-loadbalance.html" target="_blank" rel="noopener noreferrer">架构之高可用: 负载均衡</a></p>
</li>
<li>
<p><a href="https://java.isture.com/arch/base/arch-y-backup.html" target="_blank" rel="noopener noreferrer">架构之高可用：容灾备份,故障转移</a></p>
</li>
</ul>
<h2>6. （补充）性能指标TP50、TP90、TP99、TP999</h2>
<h3>6.1 TP指标说明</h3>
<p>TP指标: 指在一个时间段内，统计该方法每次调用所消耗的时间，并将这些时间按从小到大的顺序进行排序, 并取出结果为：总次数*指标数=对应TP指标的值，再取出排序好的时间。</p>
<p>TP=Top Percentile，Top百分数，是一个统计学里的术语，与平均数、中位数都是一类。</p>
<p>TP50、TP90、TP99和TP999等指标常用于系统性能监控场景，指高于50%、90%、99%等百分线的情况</p>
<h3>6.2 计算/统计方法</h3>
<p>TP50：指在一个时间段内（如5分钟），统计该方法每次调用所消耗的时间，并将这些时间按从小到大的顺序进行排序，取第50%的那个值作为TP50的值；配置此监控指标对应的报警阀值后，需要保证在这个时间段内该方法所有调用的消耗时间至少有50%的值要小于此阀值，否则系统将会报警。</p>
<p>TP90，TP99，TP999与TP50值计算方式一致，它们分别代表着对方法的不同性能要求，TP50相对较低，TP90则比较高，TP99，TP999则对方法性能要求很高</p>
<h3>6.3 举例说明</h3>
<ol>
<li>
<p>有一个方法testTP()，6次请求的响应时间：13ms、38ms、23ms、45ms、17ms、56ms，升序排序后为[13ms、17ms、23ms、38ms、45ms、56ms]</p>
</li>
<li>
<p>计算取值</p>
<p>TP50：6<em>50%=3，</em></p>
<p><em>TP90：6</em>90%=5.4~6，</p>
<p>TP99：6*99%=5.94~6，</p>
<p>TP999：6*99.9%=5.994~6，</p>
</li>
<li>
<p>根据百分数的定义可知</p>
<p>TP50=23ms，取排序为3的值，</p>
<p>TP90=56ms，取排序为6的值，</p>
<p>TP99=56ms，取排序为6的值，</p>
<p>TP999=56ms，取排序为6的值</p>
</li>
</ol>
<h2>参考文章</h2>
<p><a href="https://cloud.tencent.com/developer/article/1080683" target="_blank" rel="noopener noreferrer">SLA服务可用性4个9是什么意思？怎么达到？</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>架构之高可用: 负载均衡</title>
      <link>https://mrjackc.github.io/posts/Architect/base/arch-y-loadbalance.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/base/arch-y-loadbalance.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">架构之高可用: 负载均衡</source>
      <description>架构之高可用: 负载均衡 负载均衡（Load Balance），意思是将负载（工作任务，访问请求）进行平衡、分摊到多个操作单元（服务器，组件）上进行执行。是解决高性能，单点故障（高可用），扩展性（水平伸缩）的终极解决方案。 1. 简介 负载均衡（Load Balance），意思是将负载（工作任务，访问请求）进行平衡、分摊到多个操作单元（服务器，组件）上...</description>
      <category>架构</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<blockquote>
<p>负载均衡（Load Balance），意思是将负载（工作任务，访问请求）进行平衡、分摊到多个操作单元（服务器，组件）上进行执行。是解决高性能，单点故障（高可用），扩展性（水平伸缩）的终极解决方案。</p>
</blockquote>
<h2>1. 简介</h2>
<p>负载均衡（Load Balance），意思是将负载（工作任务，访问请求）进行平衡、分摊到多个操作单元（服务器，组件）上进行执行。是解决高性能，单点故障（高可用），扩展性（水平伸缩）的终极解决方案。</p>
<blockquote>
<ul>
<li>从提高单机性能到分布式解决</li>
</ul>
<p>面对大量用户访问、高并发请求，海量数据，可以使用高性能的服务器、大型数据库，存储设备，高性能Web服务器，采用高效率的编程语言比如(Go,Scala)等，当单机容量达到极限时，我们需要考虑业务拆分和分布式部署，来解决大型网站访问量大，并发量高，海量数据的问题。</p>
<ul>
<li>分布式解决统一入口问题</li>
</ul>
<p>从单机网站到分布式网站，很重要的区别是业务拆分和分布式部署，将应用拆分后，部署到不同的机器上，实现大规模分布式系统。分布式和业务拆分解决了，从集中到分布的问题，但是每个部署的独立业务还存在单点的问题和访问统一入口问题，为解决单点故障，我们可以采取冗余的方式。将相同的应用部署到多台机器上。解决访问统一入口问题，我们可以在集群前面增加负载均衡设备，实现流量分发。</p>
</blockquote>
<h2>2. 负载均衡原理</h2>
<p>系统的扩展可分为纵向（垂直）扩展和横向（水平）扩展。</p>
<ul>
<li>
<p>纵向扩展</p>
<ul>
<li>从单机的角度通过增加硬件处理能力，比如CPU处理能力，内存容量，磁盘等方面，实现服务器处理能力的提升</li>
<li>不能满足大型分布式系统（网站），大流量，高并发，海量数据的问题。</li>
</ul>
<p>因此需要采用横向扩展的方式，</p>
</li>
<li>
<p>横向扩展</p>
<ul>
<li>通过添加机器来满足大型网站服务的处理能力。</li>
<li>比如：一台机器不能满足，则增加两台或者多台机器，共同承担访问压力。这就是典型的集群和负载均衡架构：如下图：</li>
</ul>
</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300940313.png" alt="image-20220701210221965" tabindex="0" loading="lazy"><figcaption>image-20220701210221965</figcaption></figure>
<h3>2.1 <strong>负载均衡的方式</strong></h3>
<ul>
<li><strong>应用集群</strong>：将同一应用部署到多台机器上，组成处理集群，接收负载均衡设备分发的请求，进行处理，并返回相应数据。</li>
<li><strong>负载均衡设备</strong>：将用户访问的请求，根据负载均衡算法，分发到集群中的一台处理服务器。（一种把网络请求分散到一个服务器集群中的可用服务器上去的设备）</li>
</ul>
<h3>2.2 <strong>负载均衡的作用</strong>（解决的问题）：</h3>
<ol>
<li>解决并发压力，提高应用处理性能（增加吞吐量，加强网络处理能力）；</li>
<li>提供故障转移，实现高可用；</li>
<li>通过添加或减少服务器数量，提供网站伸缩性（扩展性）；</li>
<li>安全防护；（负载均衡设备上做一些过滤，黑白名单等处理）</li>
</ol>
<h2>3. 负载均衡分类</h2>
<h3>3.1 DNS 负载均衡</h3>
<p>思路是 DNS 解析同一个域名时可以返回不同的IP地址。</p>
<p>用来实现地理级别的均衡，例如，北方用户访问北京机房、南方用户访问深圳机房。</p>
<ul>
<li>优点：
<ul>
<li>简单，成本低，直接交给DNS服务器处理即可，无需自己维护。</li>
<li>就近访问，提升访问速度。</li>
</ul>
</li>
<li>缺点：
<ul>
<li>DNS缓存时间较长，更新不及时。</li>
<li>DNS控制权在域名商那里，无法根据业务特点定制扩展。</li>
</ul>
</li>
</ul>
<h3>3.2 硬件负载均衡</h3>
<p>通过单独的硬件设备实现负载均衡，<strong>典型设备例如 F5</strong>、A10。</p>
<ul>
<li>优点：
<ul>
<li>功能强大，支持各级负载均衡，支持各种负载均衡算法，支持全局负载均衡。</li>
<li>性能强大，可以支持100万以上的并发。</li>
<li>稳定性高。</li>
<li>支持安全防护，除了负载均衡的功能，还有防火墙、防DDoS攻击等安全功能。</li>
</ul>
</li>
<li>缺点：
<ul>
<li>昂贵，价格几万甚至数十万。</li>
<li>扩展能力差。</li>
</ul>
</li>
</ul>
<h3>3.3 软件负载均衡</h3>
<p>通过软件实现，例如我们熟悉的 Nginx（7层负载均衡） 和 LVS（4层负载均衡）。</p>
<blockquote>
<p>和硬件负载均衡相比，性能差了很多，<strong>Nginx 能支持5万/秒，而F5是百万级</strong>，但价格也便宜了很多。</p>
</blockquote>
<ul>
<li>优点：
<ul>
<li>简单</li>
<li>便宜</li>
<li>灵活</li>
</ul>
</li>
<li>缺点：
<ul>
<li>性能一般</li>
<li>没有防火墙等安全功能</li>
</ul>
</li>
</ul>
<h2>4. 负载均衡的典型架构</h2>
<p>DNS、硬件、软件这3中方式可以组合使用，基本原则：</p>
<ul>
<li>DNS方式用于实现<strong>地理级别</strong>的负载均衡。</li>
<li>硬件方式用于实现<strong>集群级别</strong>的负载均衡。</li>
<li>软件方式用于实现<strong>机器级别</strong>的负载均衡。</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300940351.png" alt="image-20220701211454617" tabindex="0" loading="lazy"><figcaption>image-20220701211454617</figcaption></figure>
<h2>5. 负载均衡算法</h2>
<h3>5.1 轮询</h3>
<p>负载均衡系统接收到请求后，按照顺序轮流分配给服务器。</p>
<p>这种方式非常简单，只管按顺序分配，至于服务器当前负载情况、硬件能力等都不关心，只要服务器还能工作，就可以分配，除非服务器挂了。</p>
<h3>5.2 加权轮询</h3>
<p>是轮询方式的一种改进，轮询方式是无差别分配，但实际服务器的处理能力是有差异的，所以需要区别对待。</p>
<p>为服务器设置权值，权值高的就多分配点。</p>
<h3>5.3 负载最低优先</h3>
<p>将任务分配给当前负载最低的服务器。</p>
<p>例如 LVS 可以根据“连接数”判断服务器状态，NGINX 可以根据“HTTP请求数”来判断。</p>
<p>这种方式比轮询高级很多，可以感知服务器的状态了，但其复杂度也大大提高了，要收集统计服务器的负载信息。</p>
<h3>5.4 性能最优</h3>
<p>优先将任务分配给处理速度最快的服务器，来达到最快响应客户端的目的。</p>
<p>此方式也是感知服务器的状态，标准是响应时间。</p>
<p>需要收集分析服务器的响应时间，这个工作本身消耗也不小，所以采用采样的方式，不统计所有任务的响应时间，统计一个周期（例如 10秒/1分钟/5分钟）内的状态。</p>
<p>优缺点与 负载最低优先 相同。</p>
<h3>5.5 Hash</h3>
<p>对请求中的关键信息（如IP）进行hash计算，hash值相同的请求分配到同一台服务器，例如业务中希望同一用户的请求都由同一台服务器来处理。</p>
<h2>参考文章</h2>
<p><a href="https://blog.51cto.com/u_15127579/2722198" target="_blank" rel="noopener noreferrer">负载均衡的分类及算法</a></p>
<p><a href="https://pdai.tech/md/arch/arch-y-loadbalance.html" target="_blank" rel="noopener noreferrer">架构之高可用：负载均衡</a></p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300940313.png" type="image/png"/>
    </item>
    <item>
      <title>架构-高并发：概述</title>
      <link>https://mrjackc.github.io/posts/Architect/base/arch-y-overview.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/base/arch-y-overview.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">架构-高并发：概述</source>
      <description>架构-高并发：概述 摘要：本文介绍高并发系统的度量指标，讲述高并发系统的设计思路，再梳理高并发的关键技术，最后结合作者的经验做一些延伸探讨。 当前，数字化在给企业带来业务创新，推动企业高速发展的同时，也给企业的IT软件系统带来了严峻的挑战。面对流量高峰，不同的企业是如何通过技术手段解决高并发难题的呢? 0. 引言 软件系统有三个追求：高性能、高并发、高...</description>
      <category>架构</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<blockquote>
<p><strong>摘要</strong>：本文介绍高并发系统的度量指标，讲述高并发系统的设计思路，再梳理高并发的关键技术，最后结合作者的经验做一些延伸探讨。</p>
</blockquote>
<p>当前，数字化在给企业带来业务创新，推动企业高速发展的同时，也给企业的IT软件系统带来了严峻的挑战。面对流量高峰，不同的企业是如何通过技术手段解决高并发难题的呢?</p>
<h2>0. 引言</h2>
<p>软件系统有三个追求：<strong>高性能、高并发、高可用</strong>，俗称三高。三者既有区别也有联系，门门道道很多，全面讨论需要三天三夜，本篇讨论高并发。</p>
<p><strong>高并发（High Concurrency）</strong>。并发是操作系统领域的一个概念，指的是一段时间内多任务流交替执行的现象，后来这个概念被泛化，高并发用来指大流量、高请求的业务情景，比如春运抢票，电商双十一，秒杀大促等场景。</p>
<p>很多程序员每天忙着搬砖，平时接触不到高并发，哪天受不了跑去面试，还常常会被面试官犀利的高并发问题直接KO，其实吧，高并发系统也不高深，我保证任何一个智商在线的看过这篇文章后，都能战胜恐惧，重拾生活的信心。</p>
<p>本文先介绍高并发系统的度量指标，然后讲述高并发系统的设计思路，再梳理高并发的关键技术，最后结合作者的经验做一些延伸探讨。</p>
<h2>1. 高并发的度量指标</h2>
<p>既然是高并发系统，那并发一定要高，不然就名不副实。并发的指标一般有<strong>QPS、TPS、IOPS</strong>，这几个指标都是可归为<strong>系统吞吐率</strong>，QPS越高系统能hold住的请求数越多，但光关注这几个指标不够，我们还需要关注RT，即响应时间，也就是从发出request到收到response的时延，这个指标跟吞吐往往是此消彼长的，我们追求的是一定时延下的高吞吐。</p>
<p>比如有100万次请求，99万次请求都在10毫秒内响应，其他次数10秒才响应，平均时延不高，但时延高的用户受不了，所以，就有了<strong>TP90/TP99指标</strong>，这个指标不是求平均，而是把时延从小到大排序，取排名90%/99%的时延，这个指标越大，对慢请求越敏感。</p>
<p>除此之外，有时候，我们也会关注可用性指标，这可归到稳定性。</p>
<p>一般而言，用户感知友好的高并发系统，时延应该控制在250毫秒以内。</p>
<p>什么样的系统才能称为高并发？这个不好回答，因为它取决于系统或者业务的类型。不过我可以告诉你一些众所周知的指标，这样能帮助你下次在跟人扯淡的时候稍微靠点儿谱，不至于贻笑大方。</p>
<p>通常，数据库单机每秒也就能抗住几千这个量级，而做逻辑处理的服务单台每秒抗几万、甚至几十万都有可能，而消息队列等中间件单机每秒处理个几万没问题，所以我们经常听到每秒处理数百万、数千万的消息中间件集群，而像阿某的API网关，每日百亿请求也有可能。</p>
<h2>2. 高并发的设计思路</h2>
<p>高并发的设计思路有两个方向：</p>
<ol>
<li>垂直方向扩展，也叫竖向扩展</li>
<li>水平方向扩展，也叫横向扩展</li>
</ol>
<h3>2.1 垂直方向：提升单机能力</h3>
<p>提升单机处理能力又可分为硬件和软件两个方面：</p>
<ul>
<li>硬件方向，很好理解，花钱升级机器，更多核更高主频更大存储空间更多带宽</li>
<li>软件方向，包括用各快的数据结构，改进架构，应用多线程、协程，以及上性能优化各种手段，但这玩意儿天花板低，就像提升个人产出一样，996、007、最多24 X 7。</li>
</ul>
<h3>2.2 水平方向：分布式集群</h3>
<p>为了解决分布式系统的复杂性问题，一般会用到<strong>架构分层和服务拆分</strong>，通过分层做<strong>隔离</strong>，通过微服务<strong>解耦</strong>。</p>
<p>这个理论上没有上限，只要做好层次和服务划分，加机器扩容就能满足需求，但实际上并非如此，一方面分布式会增加系统复杂性，另一方面集群规模上去之后，也会引入一堆AIOps、服务发现、服务治理的新问题。</p>
<p>因为垂直向的限制，所以，我们通常更关注水平扩展，高并发系统的实施也主要围绕水平方向展开。</p>
<h2>3. 高并发的关键技术</h2>
<p>玩具式的网络服务程序，用户可以直连服务器，甚至不需要数据库，直接写磁盘文件。但春运购票系统显然不能这么做，它肯定扛不住这个压力，那一般的高并发系统是怎么做呢？比如某宝这样的正经系统是怎么处理高并发的呢？</p>
<p>其实大的思路都差不多，层次划分 + 功能划分。可以把层次划分理解为水平方向的划分，而功能划分理解为垂直方向的划分。</p>
<p>首先，用户不能直连服务器，要做分布式就要解决“分”的问题，有多个服务实例就需要做负载均衡，有不同服务类型就需要服务发现。</p>
<h3>3.1 集群化：负载均衡</h3>
<p>负载均衡就是把负载（request）均衡分配到不同的服务实例，利用集群的能力去对抗高并发，负载均衡是服务集群化的实施要素，它分3种：</p>
<ol>
<li><strong>DNS负载均衡</strong>，客户端通过URL发起网络服务请求的时候，会去DNS服务器做域名解释，DNS会按一定的策略（比如就近策略）把URL转换成IP地址，同一个URL会被解释成不同的IP地址，这便是DNS负载均衡，它是一种粗粒度的负载均衡，它只用URL前半部分，因为DNS负载均衡一般采用就近原则，所以通常能降低时延，但DNS有cache，所以也会更新不及时的问题。</li>
<li><strong>硬件负载均衡</strong>，通过布置特殊的负载均衡设备到机房做负载均衡，比如F5，这种设备贵，性能高，可以支撑每秒百万并发，还能做一些安全防护，比如防火墙。</li>
<li><strong>软件负载均衡</strong>，根据工作在ISO 7层网络模型的层次，可分为四层负载均衡（比如章文嵩博士的LVS）和七层负载均衡（NGINX），软件负载均衡配置灵活，扩展性强，阿某云的SLB作为服务对外售卖，Nginx可以对URL的后半部做解释承担API网关的职责。</li>
</ol>
<p>所以，完整的负载均衡链路是 client &lt;-&gt; DNS负载均衡 -&gt; F5 -&gt; LVS/SLB -&gt; NGINX</p>
<p>不管选择哪种LB策略，或者组合LB策略，逻辑上，我们都可以视为负载均衡层，通过添加负载均衡层，我们将负载均匀分散到了后面的服务集群，具备基础的高并发能力，但这只是万里长征第一步。</p>
<h3>3.2 数据库层面：分库分表+读写分离</h3>
<p>前面通过<strong>负载均衡解决了无状态服务的水平扩展问题</strong>，但我们的系统不全是无状态的，后面通常还有有状态的数据库，所以解决了前面的问题，存储有可能成为系统的瓶颈，我们需要<strong>对有状态存储做分片路由</strong>。</p>
<p>数据库的单机QPS一般不高，也就几千，显然满足不了高并发的要求。</p>
<p>所以，我们需要做分库分表 + 读写分离。</p>
<p>就是把一个库分成多个库，部署在多个数据库服务上，主库承载写请求，从库承载读请求。从库可以挂载多个，因为很多场景写的请求远少于读的请求，这样就把对单个库的压力降下来了。</p>
<p>如果写的请求上升就继续分库分表，如果读的请求上升就挂更多的从库，但数据库天生不是很适合高并发，而且数据库对机器配置的要求一般很高，导致单位服务成本高，所以，这样加机器抗压力成本太高，还得另外想招。</p>
<h3>3.3 读多写少：缓存</h3>
<p>缓存的理论依据是<strong>局部性原理</strong>。</p>
<p>一般系统的写入请求远少于读请求，针对写少读多的场景，很适合引入缓存集群。</p>
<p>在写数据库的时候同时写一份数据到缓存集群里，然后用缓存集群来承载大部分的读请求，因为缓存集群很容易做到高性能，所以，这样的话，通过缓存集群，就可以用更少的机器资源承载更高的并发。</p>
<p>缓存的命中率一般能做到很高，而且速度很快，处理能力也强（单机很容易做到几万并发），是理想的解决方案。</p>
<p>CDN本质上就是缓存，被用户大量访问的静态资源缓存在CDN中是目前的通用做法。</p>
<h4>3.3.1 缓存也有很多需要谨慎处理的问题：</h4>
<ol>
<li><strong>一致性问题</strong>：(a)更新db成功+更新cache失败 -&gt; 不一致 (b)更新db失败+更新cache成功 -&gt; 不一致 ©更新db成功+淘汰缓存失败 -&gt; 不一致</li>
<li><strong>缓存穿透</strong>：查询一定不存在的数据，会穿透缓存直接压到数据库，从而导致缓存失去作用，如果有人利用这个漏洞，大量查询一定不存在的数据，会对数据库造成压力，甚至打挂数据库。解决方案：布隆过滤器 或者 简单的方案，查询不存在的key，也把空结果写入缓存（设置较短的过期淘汰时间），从而降低命失</li>
<li><strong>缓存雪崩</strong>：如果大量缓存在一个时刻同时失效，则请求会转到DB，则对DB形成压迫，导致雪崩。简单的解决方案是为缓存失效时间添加随机值，降低同一时间点失效淘汰缓存数，避免集体失效事件发生</li>
</ol>
<p>但缓存是针对读，如果写的压力很大，怎么办？</p>
<h3>3.4 高写入：消息中间件</h3>
<p>同理，通过跟主库加机器，耗费的机器资源是很大的，这个就是数据库系统的特点所决定的。</p>
<p>相同的资源下，数据库系统太重太复杂，所以并发承载能力就在几千/s的量级，所以此时你需要引入别的一些技术。</p>
<p>比如说消息中间件技术，也就是MQ集群，它是非常好的做写请求异步化处理，实现<strong>削峰填谷</strong>的效果。</p>
<p>消息队列能做<strong>解耦</strong>，在只需要最终一致性的场景下，很适合用来配合做流控。</p>
<p>假如说，每秒是1万次写请求，其中比如5千次请求是必须请求过来立马写入数据库中的，但是另外5千次写请求是可以允许异步化等待个几十秒，甚至几分钟后才落入数据库内的。</p>
<p>那么此时完全可以引入消息中间件集群，把允许异步化的每秒5千次请求写入MQ，然后基于MQ做一个削峰填谷。比如就以平稳的1000/s的速度消费出来然后落入数据库中即可，此时就会大幅度降低数据库的写入压力。</p>
<p>业界有很多著名的消息中间件，比如ZeroMQ，rabbitMQ，kafka等。</p>
<p>消息队列本身也跟缓存系统一样，可以用很少的资源支撑很高的并发请求，用它来支撑部分允许异步化的高并发写入是很合适的，比使用数据库直接支撑那部分高并发请求要减少很多的机器使用量。</p>
<h3>3.5 避免挤兑：流控</h3>
<p>再强大的系统，也怕流量短时间内集中爆发，就像银行怕挤兑一样，所以，高并发另一个必不可少的模块就是流控。</p>
<p>流控的关键是流控算法，有4种常见的流控算法。</p>
<ol>
<li><strong>计数器算法</strong>（固定窗口）：计数器算法是使用计数器在周期内累加访问次数，当达到设定的限流值时，触发限流策略，下一个周期开始时，进行清零，重新计数，实现简单。计数器算法方式限流对于周期比较长的限流，存在很大的弊端，有严重的临界问题。</li>
<li><strong>滑动窗口算法</strong>：将时间周期分为N个小周期，分别记录每个小周期内访问次数，并且根据时间滑动删除过期的小周期，当滑动窗口的格子划分的越多，那么滑动窗口的滚动就越平滑，限流的统计就会越精确。此算法可以很好的解决固定窗口算法的临界问题。</li>
<li><strong>漏桶算法</strong>：访问请求到达时直接放入漏桶，如当前容量已达到上限（限流值），则进行丢弃（触发限流策略）。漏桶以固定的速率进行释放访问请求（即请求通过），直到漏桶为空。分布式环境下实施难度高。</li>
<li><strong>令牌桶算法</strong>：程序以r（r=时间周期/限流值）的速度向令牌桶中增加令牌，直到令牌桶满，请求到达时向令牌桶请求令牌，如获取到令牌则通过请求，否则触发限流策略。分布式环境下实施难度高。</li>
</ol>
<h2>4. 高并发的实践经验</h2>
<p>接入-逻辑-存储是经典的互联网后端分层，但随着业务规模的提高，逻辑层的复杂度也上升了，所以，针对逻辑层的架构设计也出现很多新的技术和思路，常见的做法包括系统拆分，微服务。</p>
<p>除此之外，也有很多业界的优秀实践，包括某信服务器通过协程（无侵入，已开源libco）改造，极大的提高了系统的并发度和稳定性，另外，缓存预热，预计算，批量读写（减少IO），池技术等也广泛应用在实践中，有效的提升了系统并发能力。</p>
<p>为了提升并发能力，逻辑后端对请求的处理，一般会用到生产者-消费者多线程模型，即I/O线程负责网络IO，协议编解码，网络字节流被解码后产生的协议对象，会被包装成task投入到task queue，然后worker线程会从该队列取出task执行，有些系统会用多进程而非多线程，通过共享存储，维护2个方向的shm queue，一个input q，一个output q，为了提高并发度，有时候会引入协程，协程是用户线程态的多执行流，它的切换成本更低，通常有更好的调度效率。</p>
<p>另外，构建<strong>漏斗型业务或者系统</strong>，从客户端请求到接入层，到逻辑层，到DB层，层层递减，过滤掉请求，Fail Fast（尽早发现尽早过滤），嘴大屁眼小，哈哈。</p>
<p>漏斗型系统不仅仅是一个技术模型，它也可以是一个<strong>产品思维</strong>，配合产品的用户分流，逻辑分离，可以构建全方位的立体模型。</p>
<h2>5. 小结</h2>
<p>莫让浮云遮望眼，除尽繁华识真颜。我们不能掌握了大方案，吹完了牛皮，而忽视了<strong>编程最本质的东西，掌握最基本最核心的编程能力</strong>，比如数据架构和算法，设计，惯用法，培养技术的审美，也是很重要的，<strong>既要致高远，又要尽精微</strong>。</p>
<h2>参考文章</h2>
<p><a href="https://zhuanlan.zhihu.com/p/187336277" target="_blank" rel="noopener noreferrer">高并发，你真的了解吗？</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>架构之高并发-降级和熔断</title>
      <link>https://mrjackc.github.io/posts/Architect/base/arch-y-reduce.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/base/arch-y-reduce.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">架构之高并发-降级和熔断</source>
      <description>架构之高并发-降级和熔断 高并发实现的三板斧：缓存，限流和降级。 在高并发环境下，服务之间的依赖关系导致调用失败，解决的方式通常是: 限流-&amp;gt;熔断-&amp;gt;隔离-&amp;gt;降级, 其目的是防止雪崩效应。 1. 背景 在分布式系统中，一个服务往往依赖多个服务，可能存在某个服务调用失败，比如超时、异常等，更坏的情况是，如果有多个服务对同一个挂起的服务进行调用，那么就很有...</description>
      <category>架构</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<blockquote>
<p><strong>高并发实现的三板斧：缓存，限流和降级</strong>。</p>
<p>在高并发环境下，<strong>服务之间的依赖关系导致调用失败，解决的方式通常是: 限流-&gt;熔断-&gt;隔离-&gt;降级, 其目的是防止雪崩效应</strong>。</p>
</blockquote>
<h2>1. 背景</h2>
<p>在分布式系统中，一个服务往往依赖多个服务，可能存在某个服务调用失败，比如超时、异常等，更坏的情况是，如果有多个服务对同一个挂起的服务进行调用，那么就很有可能的是一个服务的超时等待迅速蔓延到整个分布式系统，引起雪崩效应。</p>
<p>一般来说，解决思路是<strong>熔断或降级</strong>，通过提供<strong>有损服务</strong>，保证服务的<strong>柔性可用</strong>，避免雪崩效应。</p>
<h3>1.1 什么是<strong>降级</strong></h3>
<blockquote>
<p>就是在调用的下游服务A出现问题（常见超时），提供PLAN-B，返回的效果可能没有服务A好，但是聊胜于无。</p>
</blockquote>
<p>服务降级是服务器压力剧增的时候，根据当前业务情况及流量，为了预防某些功能出现符合过载或者响应慢的情况，在其内部暂时舍弃一些非核心的请求，<strong>直接返回一个提前准备好的fallback（退路）错误处理信息</strong>。这样，虽然提供的是一个有损服务，但可以保证整个系统的稳定性和可用性。</p>
<h3>1.2 <strong>熔断器</strong>：</h3>
<blockquote>
<p>熔断器的存在就是要保障何时走到降级方法，何时恢复，以什么样的策略恢复。</p>
</blockquote>
<p><strong>断路器（Circuit Breaker）模式</strong>就是为了防止在分布式系统中出现这种瀑布似的连锁反应导致的灾难。</p>
<p>一旦某个电器出问题，为了防止灾难，电路的保险丝就会熔断。断路器类似于电路的保险丝， 实现思路非常简单，可以将<strong>需要保护的远程服务调用封装起来，在内部监听失败次数， 一旦失败次数达到某阀值后，所有后续对该服务的调用</strong>，<strong>断路器截获后都直接返回错误到调用方</strong>，而不会继续调用已经出问题的服务， 从而达到保护调用方的目的, 整个系统也就不会出现因为超时而产生的瀑布式连锁反应。</p>
<h2>2. 基本的容错模式</h2>
<ul>
<li>主动超时：Http请求主动设置一个超时时间，超时就直接返回，不会造成服务堆积</li>
<li>限流：限制最大并发数</li>
<li>熔断：当错误数超过阈值时快速失败，不调用后端服务，同时隔一定时间放几个请求去重试后端服务是否能正常调用，如果成功则关闭熔断状态，失败则继续快速失败，直接返回。（此处有个重试，重试就是弹性恢复的能力）</li>
<li>隔离：把每个依赖或调用的服务都隔离开来，防止级联失败引起整体服务不可用</li>
<li>降级：服务失败或异常后，返回指定的默认信息</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300939739.png" alt="image-20220701223819962" tabindex="0" loading="lazy"><figcaption>image-20220701223819962</figcaption></figure>
<h2>3. 服务降级</h2>
<p>由于爆炸性的流量冲击，对一些服务进行有策略的放弃，以此缓解系统压力，保证目前主要业务的正常运行。它主要是针对非正常情况下的应急服务措施：当此时一些业务服务无法执行时，给出一个统一的返回结果。</p>
<h3>3.1降级服务的特征</h3>
<ul>
<li>原因：整体负荷超出整体负载承受能力。</li>
<li>目的：保证重要或基本服务正常运行，非重要服务延迟使用或暂停使用</li>
<li>大小：降低服务粒度，要考虑整体模块粒度的大小，将粒度控制在合适的范围内</li>
<li>可控性：在服务粒度大小的基础上增加服务的可控性，后台服务开关的功能是一项必要配置（单机可配置文件，其他可领用数据库和缓存），可分为手动控制和自动控制。</li>
<li>次序：一般从外围延伸服务开始降级，需要有一定的配置项，重要性低的优先降级，比如可以分组设置等级1-10，当服务需要降级到某一个级别时，进行相关配置</li>
</ul>
<h3>3.2 降级方式</h3>
<ul>
<li>页面降级：
<ul>
<li>在大促或者某些特殊情况下，某些页面占用了一些稀缺服务资源，在紧急情况下可以对其整个降级，以达到丢卒保帅；</li>
<li>比如可以有相关文章推荐，但是更多的页面则直接跳转到某一个地址</li>
</ul>
</li>
<li>页面片段降级：
<ul>
<li>比如商品详情页中的商家部分因为数据错误了，此时需要对其进行降级；</li>
<li>比如关闭相关文章的推荐，直接关闭推荐区</li>
</ul>
</li>
<li>页面异步请求降级：
<ul>
<li>比如商品详情页上有推荐信息/配送至等异步加载的请求，如果这些信息响应慢或者后端服务有问题，可以进行降级；</li>
</ul>
</li>
<li>写降级：
<ul>
<li>比如秒杀抢购，我们可以只进行Cache的更新，然后异步同步扣减库存到DB，保证最终一致性即可，此时可以将DB降级为Cache。</li>
</ul>
</li>
<li>读降级：
<ul>
<li>比如多级缓存模式，如果后端服务有问题，可以降级为只读缓存，这种方式适用于对读一致性要求不高的场景。</li>
</ul>
</li>
<li>服务功能降级：
<ul>
<li>比如渲染商品详情页时需要调用一些不太重要的服务：相关分类、热销榜等，而这些服务在异常情况下直接不获取，即降级即可；</li>
<li>延迟服务：比如发表了评论，重要服务，比如在文章中显示正常，但是延迟给用户增加积分，只是放到一个缓存中，等服务平稳之后再执行。</li>
</ul>
</li>
</ul>
<h3>3.3 降级预案</h3>
<p>在进行降级之前要对系统进行梳理，看看系统是不是可以丢卒保帅；从而梳理出哪些必须誓死保护，哪些可降级；比如可以参考日志级别设置预案：</p>
<ul>
<li>一般：比如有些服务偶尔因为网络抖动或者服务正在上线而超时，可以自动降级；</li>
<li>警告：有些服务在一段时间内成功率有波动（如在95~100%之间），可以自动降级或人工降级，并发送告警；</li>
<li>错误：比如可用率低于90%，或者数据库连接池被打爆了，或者访问量突然猛增到系统能承受的最大阀值，此时可以根据情况自动降级或者人工降级；</li>
<li>严重错误：比如因为特殊原因数据错误了，此时需要紧急人工降级。</li>
</ul>
<h3>3.4 服务降级分类</h3>
<ul>
<li>降级按照是否自动化可分为：自动开关降级（超时、失败次数、故障、限流）和人工开关降级（秒杀、电商大促等）。</li>
<li>降级按照功能可分为：读服务降级、写服务降级。</li>
<li>降级按照处于的系统层次可分为：多级降级。</li>
</ul>
<h3>3.5 自动降级分类</h3>
<ul>
<li>超时降级：主要配置好超时时间和超时重试次数和机制，并使用异步机制探测回复情况</li>
<li>失败次数降级：主要是一些不稳定的api，当失败调用次数达到一定阀值自动降级，同样要使用异步机制探测回复情况</li>
<li>故障降级：比如要调用的远程服务挂掉了（网络故障、DNS故障、http服务返回错误的状态码、rpc服务抛出异常），则可以直接降级。降级后的处理方案有：默认值（比如库存服务挂了，返回默认现货）、兜底数据（比如广告挂了，返回提前准备好的一些静态页面）、缓存（之前暂存的一些缓存数据）</li>
<li>限流降级: 当我们去秒杀或者抢购一些限购商品时，此时可能会因为访问量太大而导致系统崩溃，此时开发者会使用限流来进行限制访问量，当达到限流阀值，后续请求会被降级；降级后的处理方案可以是：排队页面（将用户导流到排队页面等一会重试）、无货（直接告知用户没货了）、错误页（如活动太火爆了，稍后重试）</li>
</ul>
<h3>3.6 服务降级需考虑的问题</h3>
<ul>
<li>核心服务或非核心服务。</li>
<li>是否支持降级，及其降级策略。</li>
<li>业务放通场景，及其策略。</li>
</ul>
<h2>4. 服务熔断</h2>
<h3>4.1 相关概念</h3>
<ul>
<li>
<p>服务雪崩</p>
<p>多个微服务之间调用的时候，假设微服务A调用微服务B和微服务C，微服务B和微服务C又调用其他的微服务，这就是所谓的”扇出”，如扇出的链路上某个微服务的调用响应式过长或者不可用，对微服务A的调用就会占用越来越多的系统资源，进而引起系统雪崩，所谓的”雪崩效应”</p>
</li>
<li>
<p>断路器：</p>
<p>“断路器”本身是一种开关装置，当某个服务单元发生故障监控(类似熔断保险丝)，向调用方法返回一个符合预期的、可处理的备选响应(FallBack)，而不是长时间的等待或者抛出调用方法无法处理的异常，这样就保证了服务调用方的线程不会被长时间、不必要地占用，从而避免了故障在分布式系统中的蔓延。乃至雪崩。</p>
</li>
<li>
<p>服务熔断：</p>
<p>熔断机制是应对雪崩效应的一种微服务链路保护机制，</p>
<p>当扇出链路的某个微服务不可用或者响应时间太长时，会进行服务的降级，进而熔断该节点微服务的调用，快速返回”错误”的响应信息。</p>
</li>
<li>
<p>Hystrix：</p>
<p>Hystrix是一个用于分布式系统的延迟和容错的开源库。在分布式系统里，许多依赖不可避免的调用失败，比如超时、异常等，Hystrix能够保证在一个依赖出问题的情况下，不会导致整个服务失败，避免级联故障，以提高分布式系统的弹性。</p>
</li>
</ul>
<h3>4.2 熔断流程</h3>
<p><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300939779.png" alt="image-20220702212047259" loading="lazy"><br>
上图是断路器（Curcuit Breaker）的结构，它有<strong>两个基本状态（close和open）和一个基本trip动作</strong>：</p>
<ol>
<li>close状态下，client向 supplier发起的服务请求，直接无阻碍通过断路器， supplier的返回值接直接由断路器交回给client。</li>
<li>open状态下，client 向 supplier 发起的服务请求后，断路器不会将请求转到supplier, 而是直接返回 client, client和 supplier 之间的通路是断的。</li>
<li>trip: 在close状态下，如果supplier持续超时报错，达到规定的阀值后，断路器就发生trip, 之后断路器状态就会从close进入open。</li>
</ol>
<h4><strong>4.2.1 扩展模式</strong></h4>
<p>基本的断路器模式下，保证了断路器在open状态时，保护supplier不会被调用，但我们还<strong>需要额外的措施可以在supplier恢复服务后，可以重置断路器</strong>。一种可行的办法是断路器定期探测supplier的服务是否恢复，一但恢复，就将状态设置成close。<strong>断路器进行重试时的状态为半开（half-open）状态</strong>。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300939802.png" alt="image-20220702212438910" tabindex="0" loading="lazy"><figcaption>image-20220702212438910</figcaption></figure>
<h3>4.3 服务熔断与服务降级比较</h3>
<p>服务熔断对服务提供了proxy，防止服务不可能时，出现串联故障（cascading failure），导致雪崩效应。</p>
<p>服务熔断一般是某个服务（下游服务）故障引起，而服务降级一般是从整体负荷考虑。</p>
<ul>
<li>共性：
<ul>
<li>目的 -&gt; 都是从可用性、可靠性出发，提高系统的容错能力。</li>
<li>最终表现-&gt;使某一些应用不可达或不可用，来保证整体系统稳定。</li>
<li>粒度 -&gt; 一般都是服务级别，但也有细粒度的层面：如做到数据持久层、只许查询不许增删改等。</li>
<li>自治 -&gt; 对其自治性要求很高。都要求具有较高的自动处理机制。</li>
</ul>
</li>
<li>区别：
<ul>
<li>触发原因 -&gt; 服务熔断通常是下级服务故障引起；服务降级通常为整体系统而考虑。</li>
<li>管理目标 -&gt; 熔断是每个微服务都需要的，是一个框架级的处理；而服务降级一般是关注业务，对业务进行考虑，抓住业务的层级，从而决定在哪一层上进行处理：比如在IO层，业务逻辑层，还是在外围进行处理。</li>
<li>实现方式 -&gt; 代码实现中的差异。</li>
</ul>
</li>
</ul>
<h3>4.4 服务熔断中需考虑的设计</h3>
<p>源自博主张善友的观点：</p>
<ul>
<li><strong>异常处理</strong>：调用受熔断器保护的服务的时候，我们必须要处理当服务不可用时的异常情况。这些异常处理通常需要视具体的业务情况而定。比如，如果应用程序只是暂时的功能降级，可能需要切换到其它的可替换的服务上来执行相同的任务或者获取相同的数据，或者给用户报告错误然后提示他们稍后重试。</li>
<li><strong>异常的类型</strong>：请求失败的原因可能有很多种。一些原因可能会比其它原因更严重。比如，请求会失败可能是由于远程的服务崩溃，这可能需要花费数分钟来恢复；也可能是由于服务器暂时负载过重导致超时。熔断器应该能够检查错误的类型，从而根据具体的错误情况来调整策略。比如，可能需要很多次超时异常才可以断定需要切换到断开状态，而只需要几次错误提示就可以判断服务不可用而快速切换到断开状态。</li>
<li><strong>日志</strong>：熔断器应该能够记录所有失败的请求，以及一些可能会尝试成功的请求，使得的管理员能够监控使用熔断器保护的服务的执行情况。 测试服务是否可用：在断开状态下，熔断器可以采用定期的ping远程的服务或者资源，来判断是否服务是否恢复，而不是使用计时器来自动切换到半断开状态。这种ping操作可以模拟之前那些失败的请求，或者可以使用通过调用远程服务提供的检查服务是否可用的方法来判断。</li>
<li><strong>手动重置</strong>：在系统中对于失败操作的恢复时间是很难确定的，提供一个手动重置功能能够使得管理员可以手动的强制将熔断器切换到闭合状态。同样的，如果受熔断器保护的服务暂时不可用的话，管理员能够强制的将熔断器设置为断开状态。 并发问题：相同的熔断器有可能被大量并发请求同时访问。熔断器的实现不应该阻塞并发的请求或者增加每次请求调用的负担。 资源的差异性：使用单个熔断器时，一个资源如果有分布在多个地方就需要小心。比如，一个数据可能存储在多个磁盘分区上(shard)，某个分区可以正常访问，而另一个可能存在暂时性的问题。在这种情况下，不同的错误响应如果混为一谈，那么应用程序访问的这些存在问题的分区的失败的可能性就会高，而那些被认为是正常的分区，就有可能被阻塞。</li>
<li><strong>加快熔断器的熔断操作</strong>:有时候，服务返回的错误信息足够让熔断器立即执行熔断操作并且保持一段时间。比如，如果从一个分布式资源返回的响应提示负载超重，那么应该等待几分钟后再重试。（HTTP协议定义了”HTTP 503 Service Unavailable”来表示请求的服务当前不可用，他可以包含其他信息比如，超时等）</li>
<li><strong>重复失败请求</strong>：当熔断器在断开状态的时候，熔断器可以记录每一次请求的细节，而不是仅仅返回失败信息，这样当远程服务恢复的时候，可以将这些失败的请求再重新请求一次。</li>
</ul>
<h3>4.5 服务熔断恢复需注意的问题</h3>
<p>如果服务是幂等性的，则恢复重试不会有问题；而如果服务是非幂等性的，则重试会导致数据出现问题。</p>
<h2>5. 方案：Hystrix简介</h2>
<p>Spring Cloud Netflix Hystrix就是隔离措施的一种实现,可以设置在某种超时或者失败情形下断开依赖调用或者返回指定逻辑,从而提高分布式系统的稳定性.</p>
<h3>5.1 Hystrix设计原则</h3>
<ul>
<li>防止单个服务的故障，耗尽整个系统服务的容器（比如tomcat）的线程资源，避免分布式环境里大量级联失败。通过第三方客户端访问（通常是通过网络）依赖服务出现失败、拒绝、超时或短路时执行回退逻辑</li>
<li>用快速失败代替排队(每个依赖服务维护一个小的线程池或信号量，当线程池满或信号量满，会立即拒绝服务而不会排队等待)和优雅的服务降级；当依赖服务失效后又恢复正常，快速恢复</li>
<li>提供接近实时的监控和警报，从而能够快速发现故障和修复。监控信息包括请求成功，失败（客户端抛出的异常），超时和线程拒绝。如果访问依赖服务的错误百分比超过阈值,断路器会跳闸，此时服务会在一段时间内停止对特定服务的所有请求</li>
<li>将所有请求外部系统（或请求依赖服务）封装到HystrixCommand或HystrixObservableCommand对象中，然后这些请求在一个独立的线程中执行。使用隔离技术来限制任何一个依赖的失败对系统的影响。每个依赖服务维护一个小的线程池（或信号量），当线程池满或信号量满，会立即拒绝服务而不会排队等待</li>
</ul>
<h3>5.2 Hystrix特性</h3>
<ul>
<li>请求熔断： 当Hystrix Command请求后端服务失败数量超过一定比例(默认50%), 断路器会切换到开路状态(Open). 这时所有请求会直接失败而不会发送到后端服务. 断路器保持在开路状态一段时间后(默认5秒), 自动切换到半开路状态(HALF-OPEN).</li>
</ul>
<p>这时会判断下一次请求的返回情况, 如果请求成功, 断路器切回闭路状态(CLOSED), 否则重新切换到开路状态(OPEN). Hystrix的断路器就像我们家庭电路中的保险丝, 一旦后端服务不可用, 断路器会直接切断请求链, 避免发送大量无效请求影响系统吞吐量, 并且断路器有自我检测并恢复的能力.</p>
<ul>
<li>服务降级：Fallback相当于是降级操作. 对于查询操作, 我们可以实现一个fallback方法, 当请求后端服务出现异常的时候, 可以使用fallback方法返回的值. fallback方法的返回值一般是设置的默认值或者来自缓存.告知后面的请求服务不可用了，不要再来了。</li>
<li>依赖隔离(采用舱壁模式，Docker就是舱壁模式的一种)：在Hystrix中, 主要通过线程池来实现资源隔离. 通常在使用的时候我们会根据调用的远程服务划分出多个线程池.比如说，一个服务调用两外两个服务，你如果调用两个服务都用一个线程池，那么如果一个服务卡在哪里，资源没被释放</li>
</ul>
<p>后面的请求又来了，导致后面的请求都卡在哪里等待，导致你依赖的A服务把你卡在哪里，耗尽了资源，也导致了你另外一个B服务也不可用了。这时如果依赖隔离，某一个服务调用A B两个服务，如果这时我有100个线程可用，我给A服务分配50个，给B服务分配50个，这样就算A服务挂了，我的B服务依然可以用。</p>
<ul>
<li>请求缓存：比如一个请求过来请求我userId=1的数据，你后面的请求也过来请求同样的数据，这时我不会继续走原来的那条请求链路了，而是把第一次请求缓存过了，把第一次的请求结果返回给后面的请求。</li>
<li>请求合并：我依赖于某一个服务，我要调用N次，比如说查数据库的时候，我发了N条请求发了N条SQL然后拿到一堆结果，这时候我们可以把多个请求合并成一个请求，发送一个查询多条数据的SQL的请求，这样我们只需查询一次数据库，提升了效率。</li>
</ul>
<h3>5.3 Hystrix流程</h3>
<p>Hystrix流程图如下：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300939828.png" alt="image-20220701230318380" tabindex="0" loading="lazy"><figcaption>image-20220701230318380</figcaption></figure>
<p>Hystrix流程说明:</p>
<ul>
<li>1:每次调用创建一个新的HystrixCommand,把依赖调用封装在run()方法中.</li>
<li>2:执行execute()/queue做同步或异步调用.</li>
<li>4:判断熔断器(circuit-breaker)是否打开,如果打开跳到步骤8,进行降级策略,如果关闭进入步骤5.</li>
<li>5:判断线程池/队列/信号量是否跑满，如果跑满进入降级步骤8,否则继续后续步骤6.</li>
<li>6:调用HystrixCommand的run方法.运行依赖逻辑</li>
<li>6a:依赖逻辑调用超时,进入步骤8.</li>
<li>7:判断逻辑是否调用成功</li>
<li>7a:返回成功调用结果</li>
<li>7b:调用出错，进入步骤8.</li>
<li>8:计算熔断器状态,所有的运行状态(成功, 失败, 拒绝,超时)上报给熔断器，用于统计从而判断熔断器状态.</li>
<li>9:getFallback()降级逻辑.以下四种情况将触发getFallback调用：
<ul>
<li>(1):run()方法抛出非HystrixBadRequestException异常。</li>
<li>(2):run()方法调用超时</li>
<li>(3):熔断器开启拦截调用</li>
<li>(4):线程池/队列/信号量是否跑满</li>
</ul>
</li>
<li>9a:没有实现getFallback的Command将直接抛出异常</li>
<li>9b:fallback降级逻辑调用成功直接返回</li>
<li>9c:降级逻辑调用失败抛出异常</li>
<li>10:返回执行成功结果</li>
</ul>
<p>这里接着前面的Ribbon进行Hystrix集成。说白了你想对一个请求进行熔断，必然不能让客户直接去调用那个请求，你必然要要对别人的请求进行包装一层和拦截，才能做点手脚，比如进行熔断，所以说要在Ribbon上动手脚。因为它是请求发起的地方。 我们刚开始请求一个服务，为了负载均衡进行了拦截一次，现在我们要进行熔断，所以必须跟Ribbon集成一次，再进行请求拦截来熔断。</p>
<h3>5.4 Hystrix测试说明</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300939860.png" alt="image-20220701230352419" tabindex="0" loading="lazy"><figcaption>image-20220701230352419</figcaption></figure>
<h2>6. 方案：Sentinel简介</h2>
<h3>6.1 Sentinel 是什么</h3>
<p>随着微服务的流行，服务和服务之间的稳定性变得越来越重要。Sentinel 以流量为切入点，从流量控制、熔断降级、系统负载保护等多个维度保护服务的稳定性。</p>
<h3>6.2 Sentinel特征</h3>
<ul>
<li>丰富的应用场景：Sentinel 承接了阿里巴巴近 10 年的双十一大促流量的核心场景，例如秒杀（即突发流量控制在系统容量可以承受的范围）、消息削峰填谷、集群流量控制、实时熔断下游不可用应用等。</li>
<li>完备的实时监控：Sentinel 同时提供实时的监控功能。您可以在控制台中看到接入应用的单台机器秒级数据，甚至 500 台以下规模的集群的汇总运行情况。</li>
<li>广泛的开源生态：Sentinel 提供开箱即用的与其它开源框架/库的整合模块，例如与 Spring Cloud、Dubbo、gRPC 的整合。您只需要引入相应的依赖并进行简单的配置即可快速地接入 Sentinel。</li>
<li>完善的 SPI 扩展点：Sentinel 提供简单易用、完善的 SPI 扩展接口。您可以通过实现扩展接口来快速地定制逻辑。例如定制规则管理、适配动态数据源等。</li>
</ul>
<p>Sentinel 的主要特性：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300939887.png" alt="image-20220701230453174" tabindex="0" loading="lazy"><figcaption>image-20220701230453174</figcaption></figure>
<p>Sentinel 的开源生态：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300939910.png" alt="image-20220701230507704" tabindex="0" loading="lazy"><figcaption>image-20220701230507704</figcaption></figure>
<p>Sentinel 分为两个部分:</p>
<ul>
<li>核心库（Java 客户端）不依赖任何框架/库，能够运行于所有 Java 运行时环境，同时对 Dubbo / Spring Cloud 等框架也有较好的支持。</li>
<li>控制台（Dashboard）基于 Spring Boot 开发，打包后可以直接运行，不需要额外的 Tomcat 等应用容器。</li>
</ul>
<h2>参考文章</h2>
<p><a href="https://pdai.tech/md/arch/arch-y-reduce.html" target="_blank" rel="noopener noreferrer"><strong>架构之高并发：降级和熔断</strong></a></p>
<p><a href="https://www.toutiao.com/article/6835972895500403212/?&amp;source=m_redirect&amp;wid=1656766761850" target="_blank" rel="noopener noreferrer">什么是熔断降级？(这篇写得简单精华)</a></p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300939739.png" type="image/png"/>
    </item>
    <item>
      <title>架构之高并发：降级和熔断-外卖案例</title>
      <link>https://mrjackc.github.io/posts/Architect/base/circuit-fallback.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/base/circuit-fallback.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">架构之高并发：降级和熔断-外卖案例</source>
      <description>架构之高并发：降级和熔断-外卖案例 1. 简介 降级 就是在调用的下游服务A出现问题（常见超时），提供PLAN-B，返回的效果可能没有服务A好，但是寥胜于无。 熔断器： 熔断器的存在就是要保障何时走到降级方法，何时恢复，以什么样的策略恢复。 2. 外卖案例 举个例子，详细说明熔断降级的作用和必要性。 2.1 正常流程 image-20220702205...</description>
      <category>架构</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 简介</h2>
<ul>
<li>
<p><strong>降级</strong></p>
<p>就是在调用的下游服务A出现问题（常见超时），提供PLAN-B，返回的效果可能没有服务A好，但是寥胜于无。</p>
</li>
<li>
<p><strong>熔断器</strong>：</p>
<p>熔断器的存在就是要保障何时走到降级方法，何时恢复，以什么样的策略恢复。</p>
</li>
</ul>
<h2>2. 外卖案例</h2>
<p>举个例子，详细说明熔断降级的作用和必要性。</p>
<h3>2.1 正常流程</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300939442.png" alt="image-20220702205055684" tabindex="0" loading="lazy"><figcaption>image-20220702205055684</figcaption></figure>
<p>如上图，我们公司在该地区一共有4个外面小哥，编号0-3；该地有6家流行餐厅，几乎是用户必点。编号从A-F。故事开始前，我们做如下假定：</p>
<p>（1）外卖火爆，几乎外卖小哥每次在外都能接到不止一单，且是不同的餐厅；</p>
<p>（2）外卖小哥都是耿直的人，不取完本次接单的几家餐厅，不轻易送餐。</p>
<h3>2.2 餐厅A异常超时</h3>
<p>一切看起来很和谐，直到有一天，餐厅A出事了，主厨的大叔失恋了，出餐的速度大降。每个要去餐厅A取餐的小哥都要花费更长的时间在A等餐。而且餐厅A越流行，出餐速度越慢，排队等待的小哥就会越多。在上图中，最后4个外卖小哥，有3个都排队在等A餐厅的饭食。这有两点直接影响：</p>
<p>（1）不光是A，其他餐厅单子也还没有配送，用户吃不到A的饭，就连其他用户点的B、C、D的饭也不能配送，差评，卸载，美团一生黑；</p>
<p>（2）3/4的外卖小哥处于低效率地排队等待，而不是送餐，降低了整个公司在该地区的配送效率，老王坐不住了。</p>
<h3>2.3 餐厅B的plan-B(降级)</h3>
<p>然而，正如江湖传言，美团外卖是个神秘的组织，有一天，一个机智的小哥，横空出世，改变了整个行业的布局。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300939483.png" alt="image-20220702205410716" tabindex="0" loading="lazy"><figcaption>image-20220702205410716</figcaption></figure>
<p>小哥在餐厅A亲自操刀，很快就做完后，送餐了。用户收到热乎乎的饭菜，吃起来没有以前的好吃，但也觉察不出任何异样，不会投诉；整个地区的小哥又重新流通起来，恢复到大叔失恋前的配送效率。</p>
<h3>2.4 优化流程（熔断方案）</h3>
<p>后来，在公司的内部总结中。发现不光是A餐厅的大叔会失恋，C餐厅D餐厅的大叔们也偶尔失恋，影响出餐速度。后来公司和这些餐厅们商量，为更好的规范化出餐流程，各餐厅新添加二叔，二叔厨艺一般，请二叔各餐厅花费成本不高，所以纷纷表示赞同。</p>
<p>在实践的过程中，小哥和大叔二叔们约定，如果在规定时间和次数，大叔不能按时出餐，那么二叔替代大叔，接相同的单，用同样的锅；大叔的出餐速度会被定期检查，是否恢复了正常水平，恢复了之后，单子慢慢还由大叔下厨。</p>
<p>现在，我们来对应下关系。</p>
<ul>
<li>
<p>美团外卖大本营——容器，常见的如tomcat，jetty的线程池</p>
</li>
<li>
<p>外卖小哥——线程</p>
</li>
<li>
<p>餐厅——服务接口</p>
</li>
<li>
<p>二叔——降级方法</p>
</li>
<li>
<p>大叔到二叔的切换——熔断</p>
</li>
<li>
<p>恢复大叔下厨——熔断降级的恢复策略。</p>
</li>
</ul>
<p>熔断保证了下游服务在出错率达到阈值时，上游调用切换到降级方法，提供有损服务，避免服务的级联失败，影响整个系统的稳定性。熔断的时机，取决于业务的实际场景和流量大小，不要过高，也不要过低；恢复的策略，其核心是恢复的速率，不要过快也不要过慢。一句废话，看需求。</p>
<h2>参考文章</h2>
<p><a href="https://www.cnblogs.com/jenkov/p/circuit_fallback.html" target="_blank" rel="noopener noreferrer">谈谈熔断与降级</a></p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300939442.png" type="image/png"/>
    </item>
    <item>
      <title>系统高并发-限流</title>
      <link>https://mrjackc.github.io/posts/Architect/base/rate-limiter-action.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/base/rate-limiter-action.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">系统高并发-限流</source>
      <description>系统高并发-限流 高并发实现的三板斧：缓存，限流和降级。 1. 什么是限流？为什么要限流？ 程序处理请求的能力也是有限的，一旦请求多到超出它的处理极限就会崩溃。 限流(Ratelimiting)指对应用服务的请求进行限制，例如某一接口的请求限制为 100 个每秒,对超过限制的请求则进行快速失败或丢弃。 限流是保证系统高可用的重要手段！ 由于互联网公司的...</description>
      <category>架构</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<blockquote>
<p><strong>高并发实现的三板斧：缓存，限流和降级</strong>。</p>
</blockquote>
<h2>1. 什么是限流？为什么要限流？</h2>
<p>程序处理请求的能力也是有限的，一旦请求多到超出它的处理极限就会崩溃。</p>
<p><strong>限流(Ratelimiting)指对应用服务的请求进行限制</strong>，例如某一接口的请求限制为 100 个每秒,对超过限制的请求则进行快速失败或丢弃。</p>
<blockquote>
<p>限流是保证系统高可用的重要手段！</p>
<p>由于互联网公司的流量巨大，系统上线会做一个流量峰值的评估，尤其是像各种秒杀促销活动，为了保证系统不被巨大的流量压垮，会在系统流量到达一定阈值时，拒绝掉一部分流量。</p>
<p>限流会导致用户在短时间内（这个时间段是毫秒级的）系统不可用，一般我们衡量系统处理能力的指标是每秒的QPS或者TPS，假设系统每秒的流量阈值是1000，理论上一秒内有第1001个请求进来时，那么这个请求就会被限流。</p>
</blockquote>
<h2>2. 限流的作用</h2>
<p>限流可以应对：</p>
<ul>
<li>热点业务带来的突发请求；</li>
<li>调用方 bug 导致的突发请求；</li>
<li>恶意攻击请求。</li>
</ul>
<p>因此，<strong>对于公开的接口最好采取限流措施</strong>。</p>
<h2>3. 限流方案</h2>
<h3>3.1 计数器算法</h3>
<p>Java内部也可以通过原子类计数器AtomicInteger、Semaphore信号量来做简单的限流。</p>
<h4>3.1.1 实现思路：</h4>
<ol>
<li>一般我们会限制一秒钟的能够通过的请求数，比如限流qps为100，</li>
<li>算法的实现思路就是从第一个请求进来开始计时</li>
<li>在接下来的1s内，每来一个请求，就把计数加1</li>
<li>如果累加的数字达到100，那么后续的请求就会被全部拒绝</li>
<li>等到1s结束后，把计数恢复成0，重新开始计数</li>
</ol>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 限流的个数</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> maxCount </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 100</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 指定的时间内</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> interval </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 60</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 原子类计数器</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> AtomicInteger</span><span style="color:#E06C75;--shiki-dark:#E06C75"> atomicInteger </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> AtomicInteger</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 起始时间</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> startTime </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">currentTimeMillis</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> boolean</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> limit</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> maxCount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#C678DD;--shiki-dark:#C678DD"> int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> interval) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    atomicInteger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">addAndGet</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">atomicInteger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> ==</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        startTime </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">currentTimeMillis</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        atomicInteger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">addAndGet</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#D19A66;--shiki-dark:#D19A66"> true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 超过了间隔时间，直接重新开始计数</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">currentTimeMillis</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> -</span><span style="color:#E06C75;--shiki-dark:#E06C75"> startTime </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> interval </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">*</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1000</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        startTime </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">currentTimeMillis</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        atomicInteger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#D19A66;--shiki-dark:#D19A66"> true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 还在间隔时间内,check有没有超过限流的个数</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">atomicInteger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> &gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> maxCount) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#D19A66;--shiki-dark:#D19A66"> false</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    return</span><span style="color:#D19A66;--shiki-dark:#D19A66"> true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>3.2 漏桶算法</h3>
<p>漏桶算法思路很简单，我们把水比作是请求，<strong>漏桶比作是系统处理能力极限</strong>，水先进入到漏桶里，漏桶里的<strong>水按一定速率流出</strong>，当流出的速率小于流入的速率时，由于<strong>漏桶容量有限，后续进入的水直接溢出（拒绝请求）</strong>，以此实现限流。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300938962.png" alt="image-20220610211108002" tabindex="0" loading="lazy"><figcaption>image-20220610211108002</figcaption></figure>
<h4>3.2.1 实现思路：</h4>
<ul>
<li>可以准备一个队列，用来保存请求，</li>
<li>另外通过一个线程池定期从队列中获取请求并执行，可以一次性获取多个并发执行</li>
</ul>
<p><strong>弊端</strong>：无法对应短时间的突发流量</p>
<h3>3.3 令牌桶算法</h3>
<blockquote>
<p>从某种意义上，令牌桶是对漏桶算法的一种改进，桶算法能够限制请求调用的速率，而令牌桶算法能够在限制调用的平均速率的同时还允许一定程度的突发调用</p>
</blockquote>
<p>令牌桶算法的原理也比较简单，我们可以理解成医院的挂号看病，只有拿到号以后才可以进行诊病。</p>
<p>系统会维护一个令牌（token）桶，<strong>以一个恒定的速度往桶里放入令牌（token）</strong>，这时如果有请求进来想要被处理，则需要先从桶里获取一个令牌（token），当桶里没有令牌（token）可取时，则该请求将被拒绝服务。<strong>令牌桶算法通过控制桶的容量、发放令牌的速率，来达到对请求的限制</strong>。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300938997.png" alt="image-20220610211432413" tabindex="0" loading="lazy"><figcaption>image-20220610211432413</figcaption></figure>
<h4>3.3.1 实现思路：</h4>
<p>可以准备一个队列，用来保存令牌，另外通过一个线程池定期生成令牌放到队列中，每来一个请求，就从队列中获取一个令牌，并继续执行。</p>
<h3>3.4 Redis + Lua</h3>
<blockquote>
<p>之前介绍的3中都是单机限流，单机限流无法满足五花八门的需求。如</p>
<ul>
<li>限制某个资源被每个用户或者商户的访问次数，5秒只能访问2次，或者一天只能调用100次，单机限流无法实现，需要集群限流</li>
</ul>
<p>如何实现？</p>
<p>为了控制访问次数，肯定需要一个计数器，而且这个计数器只能保存在第三方服务，比如redis</p>
</blockquote>
<p>很多同学不知道Lua是啥？个人理解，Lua脚本和 MySQL数据库的存储过程比较相似，他们执行一组命令，所有命令的执行要么全部成功或者失败，以此达到原子性。也可以把Lua脚本理解为，一段具有业务逻辑的代码块。</p>
<p>而Lua本身就是一种编程语言，虽然redis 官方没有直接提供限流相应的API，但却支持了 Lua 脚本的功能，可以使用它实现复杂的令牌桶或漏桶算法，也是分布式系统中实现限流的主要方式之一。</p>
<p>相比Redis事务，Lua脚本的优点：</p>
<ul>
<li>减少网络开销：使用Lua脚本，无需向Redis发送多次请求，执行一次即可，减少网络传输</li>
<li>原子操作：Redis将整个Lua脚本作为一个命令执行，原子，无需担心并发</li>
<li>复用：Lua脚本一旦执行，会永久保存 Redis 中，其他客户端可复用</li>
</ul>
<p>Lua脚本大致逻辑如下：</p>
<div class="language-lua line-numbers-mode" data-ext="lua" data-title="lua"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 获取调用脚本时传入的第一个key值（用作限流的 key）</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">local</span><span style="color:#E06C75;--shiki-dark:#E06C75"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> = </span><span style="color:#E06C75;--shiki-dark:#E06C75">KEYS</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 获取调用脚本时传入的第一个参数值（限流大小）</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">local</span><span style="color:#E06C75;--shiki-dark:#E06C75"> limit</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> = </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">tonumber</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E06C75;--shiki-dark:#E06C75">ARGV</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 获取当前流量大小</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">local</span><span style="color:#E06C75;--shiki-dark:#E06C75"> curentLimit</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> = </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">tonumber</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E06C75;--shiki-dark:#E06C75">redis</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">call</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">'get'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E06C75;--shiki-dark:#E06C75">key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) or </span><span style="color:#98C379;--shiki-dark:#98C379">"0"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 是否超出限流</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> curentLimit</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> + </span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> &gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75">limit</span><span style="color:#C678DD;--shiki-dark:#C678DD"> then</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 返回(拒绝)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">return</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">else</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 没有超出 value + 1</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">redis</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">call</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"INCRBY"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E06C75;--shiki-dark:#E06C75">key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 设置过期时间</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">redis</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">call</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"EXPIRE"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E06C75;--shiki-dark:#E06C75">key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 返回(放行)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">return</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">end</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li>通过KEYS[1] 获取传入的key参数</li>
<li>通过ARGV[1]获取传入的limit参数</li>
<li>redis.call方法，从缓存中get和key相关的值，如果为null那么就返回0</li>
<li>接着判断缓存中记录的数值是否会大于限制大小，如果超出表示该被限流，返回0</li>
<li>如果未超过，那么该key的缓存值+1，并设置过期时间为1秒钟以后，并返回缓存值+1</li>
</ul>
<blockquote>
<p>总的这1秒钟就只有这么多个请求。理论上来说他是令牌桶算法</p>
</blockquote>
<h3>3.5 网关层限流</h3>
<p>限流常在网关这一层做，比如Nginx、Openresty、Kong、Zuul、Spring Cloud Gateway等，而像spring cloud - gateway网关限流底层实现原理，就是基于Redis + Lua，通过内置Lua限流脚本的方式。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300938026.png" alt="image-20220610212734116" tabindex="0" loading="lazy"><figcaption>image-20220610212734116</figcaption></figure>
<h2>参考文章</h2>
<p><a href="http://dockone.io/article/10137" target="_blank" rel="noopener noreferrer">我司用了6年的Redis分布式限流器，可以说是非常厉害了！</a></p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300938962.png" type="image/png"/>
    </item>
    <item>
      <title>RedisLua限流实现</title>
      <link>https://mrjackc.github.io/posts/Architect/base/rate-limiter-redisLua.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/base/rate-limiter-redisLua.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">RedisLua限流实现</source>
      <description>RedisLua限流实现 1. Redis 配置 其中配置了默认的限流脚本就是采用Lua 的形式 2. 定义限流注解 3. 定义限流类型 4. 限流切面</description>
      <category>架构</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. Redis 配置</h2>
<p>其中配置了默认的限流脚本就是采用Lua 的形式</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * redis配置</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Configuration</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">EnableCaching</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> RedisConfig</span><span style="color:#C678DD;--shiki-dark:#C678DD"> extends</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> CachingConfigurerSupport</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Bean</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SuppressWarnings</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E06C75;--shiki-dark:#E06C75"> { </span><span style="color:#98C379;--shiki-dark:#98C379">"unchecked"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379"> "rawtypes"</span><span style="color:#E06C75;--shiki-dark:#E06C75"> })</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> RedisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">RedisConnectionFactory</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> connectionFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        RedisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75">template</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> RedisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        template</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setConnectionFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(connectionFactory);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        FastJson2JsonRedisSerializer</span><span style="color:#E06C75;--shiki-dark:#E06C75"> serializer</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> FastJson2JsonRedisSerializer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        ObjectMapper</span><span style="color:#E06C75;--shiki-dark:#E06C75"> mapper</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> ObjectMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        mapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setVisibility</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PropertyAccessor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ALL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">JsonAutoDetect</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Visibility</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ANY</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        mapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">activateDefaultTyping</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">LaissezFaireSubTypeValidator</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">instance</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ObjectMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DefaultTyping</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">NON_FINAL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">JsonTypeInfo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">As</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PROPERTY</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        serializer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setObjectMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(mapper);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 使用StringRedisSerializer来序列化和反序列化redis的key值</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        template</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setKeySerializer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> StringRedisSerializer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        template</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setValueSerializer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(serializer);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Hash的key也采用StringRedisSerializer的序列化方式</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        template</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setHashKeySerializer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> StringRedisSerializer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        template</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setHashValueSerializer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(serializer);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        template</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">afterPropertiesSet</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> template;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Bean</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> DefaultRedisScript</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> limitScript</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        DefaultRedisScript</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75">redisScript</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> DefaultRedisScript</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        redisScript</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setScriptText</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">limitScriptText</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        redisScript</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setResultType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> redisScript;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 限流脚本</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> limitScriptText</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#98C379;--shiki-dark:#98C379"> "local key = KEYS[1]</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n</span><span style="color:#98C379;--shiki-dark:#98C379">"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">                "local count = tonumber(ARGV[1])</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n</span><span style="color:#98C379;--shiki-dark:#98C379">"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">                "local time = tonumber(ARGV[2])</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n</span><span style="color:#98C379;--shiki-dark:#98C379">"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">                "local current = redis.call('get', key);</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n</span><span style="color:#98C379;--shiki-dark:#98C379">"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">                "if current and tonumber(current) &gt; count then</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n</span><span style="color:#98C379;--shiki-dark:#98C379">"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">                "    return tonumber(current);</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n</span><span style="color:#98C379;--shiki-dark:#98C379">"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">                "end</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n</span><span style="color:#98C379;--shiki-dark:#98C379">"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">                "current = redis.call('incr', key)</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n</span><span style="color:#98C379;--shiki-dark:#98C379">"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">                "if tonumber(current) == 1 then</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n</span><span style="color:#98C379;--shiki-dark:#98C379">"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">                "    redis.call('expire', key, time)</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n</span><span style="color:#98C379;--shiki-dark:#98C379">"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">                "end</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n</span><span style="color:#98C379;--shiki-dark:#98C379">"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">                "return tonumber(current);"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2>2. 定义限流注解</h2>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 限流注解</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Target</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ElementType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">METHOD</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Retention</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">RetentionPolicy</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">RUNTIME</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Documented</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> @</span><span style="color:#C678DD;--shiki-dark:#C678DD">interface</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> RateLimiter</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 限流key</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> key</span><span style="color:#E06C75;--shiki-dark:#E06C75">() </span><span style="color:#C678DD;--shiki-dark:#C678DD">default</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Constants</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">RATE_LIMIT_KEY</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 限流时间,单位秒</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> int</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> time</span><span style="color:#E06C75;--shiki-dark:#E06C75">() </span><span style="color:#C678DD;--shiki-dark:#C678DD">default</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 60</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 限流次数</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> int</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> count</span><span style="color:#E06C75;--shiki-dark:#E06C75">() </span><span style="color:#C678DD;--shiki-dark:#C678DD">default</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 100</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 限流类型</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> LimitType</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> limitType</span><span style="color:#E06C75;--shiki-dark:#E06C75">() </span><span style="color:#C678DD;--shiki-dark:#C678DD">default</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> LimitType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DEFAULT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2>3. 定义限流类型</h2>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 限流类型</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> enum</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> LimitType</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 默认策略全局限流</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">    DEFAULT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 根据请求者IP进行限流</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">    IP</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2>4. 限流切面</h2>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 限流处理</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@author</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> fd</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Aspect</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Component</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> RateLimiterAspect</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> final</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Logger</span><span style="color:#E06C75;--shiki-dark:#E06C75"> log </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> LoggerFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getLogger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">RateLimiterAspect</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> RedisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> RedisScript</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> limitScript</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Autowired</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> setRedisTemplate1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">RedisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">redisTemplate</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> redisTemplate;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Autowired</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> setLimitScript</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">RedisScript</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">limitScript</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">limitScript</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> limitScript;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Before</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"@annotation(rateLimiter)"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> doBefore</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">JoinPoint</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> point</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">RateLimiter</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> rateLimiter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#C678DD;--shiki-dark:#C678DD"> throws</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Throwable</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> key</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> rateLimiter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> time</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> rateLimiter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">time</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> count</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> rateLimiter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">count</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> combineKey</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getCombineKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(rateLimiter, point);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75">keys</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Collections</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">singletonList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(combineKey);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        try</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            Long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> number</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">execute</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(limitScript, keys, count, time);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">StringUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isNull</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(number) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">||</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> number</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">intValue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> count)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                throw</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> ServiceException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"访问过于频繁，请稍候再试"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">info</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"限制请求'{}',当前请求'{}',缓存key'{}'"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, count, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">number</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">intValue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), key);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        catch</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ServiceException</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            throw</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> e;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        catch</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Exception</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            throw</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> RuntimeException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"服务器限流异常，请稍候再试"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getCombineKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">RateLimiter</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> rateLimiter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">JoinPoint</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> point</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        StringBuffer</span><span style="color:#E06C75;--shiki-dark:#E06C75"> stringBuffer</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> StringBuffer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">rateLimiter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">rateLimiter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">limitType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> LimitType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">IP</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            stringBuffer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">append</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">IpUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getIpAddr</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ServletUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getRequest</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">())).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">append</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"-"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        MethodSignature</span><span style="color:#E06C75;--shiki-dark:#E06C75"> signature</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (MethodSignature) </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">point</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getSignature</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Method</span><span style="color:#E06C75;--shiki-dark:#E06C75"> method</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> signature</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getMethod</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#C678DD;--shiki-dark:#C678DD">?</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75">targetClass</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> method</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getDeclaringClass</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        stringBuffer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">append</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">targetClass</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">append</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"-"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">append</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">method</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> stringBuffer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">toString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>CRM（客户关系管理）- 概述</title>
      <link>https://mrjackc.github.io/posts/Architect/crm/crm-overview.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/crm/crm-overview.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">CRM（客户关系管理）- 概述</source>
      <description>CRM（客户关系管理）- 概述 1. CRM（客户关系管理）系统是什么 客户关系管理简称CRM（Customer Relationship Management）。它是以客户数据的管理为核心，可帮助你保持客户的联系信息处于最新状态，跟踪他们与企业的每次交互并管理他们的帐户。与ERP系统不同的是，crm系统是以建立、发展和维护客户关系为主要目的。本质是吸...</description>
      <category>CRM</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. CRM（客户关系管理）系统是什么</h2>
<p>客户关系管理简称CRM（Customer Relationship Management）。它是以客户数据的管理为核心，可帮助你保持客户的联系信息处于最新状态，跟踪他们与企业的每次交互并管理他们的帐户。与ERP系统不同的是，crm系统是以建立、发展和维护客户关系为主要目的。本质是吸引客户，留住客户，实现客户利益最大化。目标是帮助你发展客户关系，推动业务增长并提高客户忠诚度。</p>
<p>CRM系统是一种以信息技术为手段、有效提高企业收益、客户满意度、雇员生产力的具体软件和实现方法。它使用关于客户与公司的历史数据分析，来改善与客户的业务关系，从而达到销售增长和销售预测。</p>
<p>CRM系统也是一种管理企业与当前和潜在客户的互动的方法。它通过满足客户个性化的需求、来提高客户忠诚度，实现缩短销售周期、降低销售成本、增加销售收入、拓展市场、从而全面提升企业赢利能力和竞争能力。</p>
<p>基本上，CRM（客户关系管理）系统就是允许你管理与客户之间的业务关系，以帮助你发展业务。但在事实上，CRM系统远远超出客户理解的范围，它更能使你能够专注于企业与各种人员的关系 ，例如：员工，客户以及用户等。因为，CRM系统的实施目标就是通过全面提升企业业务流程的管理来降低企业成本，通过提供更快速与周到的优质服务来吸引和保持更多的客户。</p>
<h2>2. CRM主要类型有哪些？</h2>
<p>CRM主要类型包括有：战略型CRM、运营型CRM、分析型CRM、协作型CRM。</p>
<ul>
<li>
<p><strong>战略型CRM</strong>：以客户为中心的商业文化的发展，其目标是集中和提高客户的知识，并利用这些知识改进和定制与客户的互动，以保持与客户的长期关系。</p>
</li>
<li>
<p><strong>运营型CRM</strong>：侧重于基于客户或客户支持的业务流程的自动化，改进和增强。目标是整合和自动化销售，营销和客户支持。</p>
</li>
<li>
<p><strong>分析型CRM</strong>：主要的作用是分析客户数据和交互，以改善销售，营销和服务中的各种业务流程，以便业务经理可以做出更明智的决策。</p>
</li>
<li>
<p><strong>协作型CRM</strong>：协作型CRM是客户关系管理（CRM）的一种方法，目的是提高客户服务质量，增强了互动，还增加和改善了客户保留和自由。</p>
</li>
</ul>
<h2>3. CRM主要功能特点有哪些？</h2>
<p>CRM系统是一种以客户为中心的商业战略，以高效的方式管理员工和管理其客户，以实现更好的业务目标。而一个好的CRM系统，一<strong>般具有以下5个功能特点：</strong></p>
<ol>
<li>
<p>易用性<br>
易用性是CRM系统最重要的特性，它主要体现易于操作使用，具有直观的界面，充足的文档和良好的用户支持。毕竟，拥有CRM的整个过程是提高效率，而不是浪费时间，从而能更好帮助你的团队提高生产力。</p>
</li>
<li>
<p>易于集成<br>
CRM系统支持多种集成方法，具有很强的集成性。例如，它能够无缝和你的ERP、财务系统、人事管理系统等集成，从而确保你的不浪费时间，更好开展你的业务。</p>
</li>
<li>
<p>适应性</p>
<p>一个好的CRM系统功能特征是具有很强的适应性，它会随着你的企业发展壮大，并提供灵活性以满足你企业的当前和未来需求，其中包括多种模块，功能和可能的整合。</p>
</li>
<li>
<p>创造更好的客户体验<br>
CRM系统的核心在于保持积极的客户关系，能够将潜在客户转化为客户，并让你与客户随时保持相关联，从而为客户提供更好的服务。</p>
</li>
<li>
<p>帮助管理者做出更好的战略决策<br>
CRM收集客户的所有重要数据，为你提供大量的数据分析和评估，有助于获得最大的客户满意度和提高业务利润，同时，这些数据对于做客户分析来制定未来的商业战略很有用。</p>
</li>
</ol>
<h2>4. CRM重要性有哪些？</h2>
<p>CRM客户管理是维护和建立客户关系的最有效方法，下面给出的一些更广泛的视角，为什么CRM系统对企业来说总是重要的。</p>
<ol>
<li>
<p>提高企业效率<br>
CRM通过CRM可以解决企业部门间信息不通的问题，也可以协调各部门的信息和资源，让各个环节良好、稳定运行有一个稳定的保证。从而整合企业的全部业务环节和资源体系，使企业的效率大大提高。</p>
</li>
<li>
<p>获得更多新客户<br>
CRM不仅用于处理现有客户，而且在获得新客户方面也很有用。例如，从识别客户开始，将相应的数据存储再CRM中，然后通过仔细跟踪潜在客户，最终能将潜在客户转化为新客户或回访客户。</p>
</li>
<li>
<p>提高客户忠诚度<br>
CRM能给客户提供他们所需要的东西，解决他们的问题并做出反应，确保客户拥有最好的体验，从而提高满意度。而增强了忠诚度，同时也为公司提供了有效交叉销售的机会。</p>
</li>
<li>
<p>专注于你的业务<br>
CRM系统中的所有细节都是集中管理的，随时随地可用，从而能帮助你减少了处理时间，让你更好的专注于你的业务，并提高了生产率。</p>
</li>
<li>
<p>高效的成本效益<br>
CRM最大优势是它非常具有成本效益。与传统的业务方式相比，CRM系统所收集的所有客户数据，能加强企业对客户的了解，简化了业务流程管理，并运用这些流程来提高销售，增加了员工的效率，扩大回报。</p>
</li>
<li>
<p>更好服务客户<br>
CRM能及时处理客户的需求，并且从客户那里收集具有洞察力，可靠和及时的反馈意见，从而能及时为客户提供现有的服务，对客户建立良好的关系发挥重要作用。</p>
</li>
</ol>
<h2>5. <strong>CRM的使用意义</strong></h2>
<p>实施CRM系统解决方案有很多好处，其中重要意义在于，它通过实现客户生命周期的自动化并整合整个客户管理流程，彻底改变了客户关系流程。正如其他地方已经讨论过的那样，你越了解客户，你就越能够个性化他们的体验流程。让你实现更大的销售目标，提高转化率，提高销售效率。从而，这使得CRM尤其重要。</p>
<h2>参考文章</h2>
<p><a href="https://zhuanlan.zhihu.com/p/40038216" target="_blank" rel="noopener noreferrer">一文看懂CRM系统是什么意思？</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/464173086" target="_blank" rel="noopener noreferrer">crm系统哪家公司做的最好？</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>分布式系统-全局唯一ID实现方案</title>
      <link>https://mrjackc.github.io/posts/Architect/distributed/arch-id.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/distributed/arch-id.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">分布式系统-全局唯一ID实现方案</source>
      <description>分布式系统-全局唯一ID实现方案 常见的分布式ID生成方式，大致分类的话可以分为两类： 一种是类DB型的，根据设置不同起始值和步长来实现趋势递增，需要考虑服务的容错性和可用性; 另一种是类snowflake型，这种就是将64位划分为不同的段，每段代表不同的涵义，基本就是时间戳、机器ID和序列数。这种方案就是需要考虑时钟回拨的问题以及做一些 buffer...</description>
      <category>架构</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<blockquote>
<p>常见的分布式ID生成方式，大致分类的话可以分为两类：</p>
<ul>
<li><strong>一种是类DB型的</strong>，根据设置不同起始值和步长来实现趋势递增，需要考虑服务的容错性和可用性;</li>
<li><strong>另一种是类snowflake型</strong>，这种就是将64位划分为不同的段，每段代表不同的涵义，基本就是时间戳、机器ID和序列数。这种方案就是需要考虑时钟回拨的问题以及做一些 buffer的缓冲设计提高性能。</li>
</ul>
</blockquote>
<h2>1. 为什么需要全局唯一ID</h2>
<p>传统的单体架构的时候，我们基本是单库然后业务单表的结构。每个业务表的ID一般我们都是从1增，通过AUTO_INCREMENT=1设置自增起始值，但是在分布式服务架构模式下分库分表的设计，使得多个库或多个表存储相同的业务数据。这种情况根据数据库的自增ID就会产生相同ID的情况，不能保证主键的唯一性。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300951135.png" alt="image-20220615212429251" tabindex="0" loading="lazy"><figcaption>image-20220615212429251</figcaption></figure>
<p>如上图，如果第一个订单存储在 DB1 上则订单 ID 为1，当一个新订单又入库了存储在 DB2 上订单 ID 也为1。我们系统的架构虽然是分布式的，但是在用户层应是无感知的，重复的订单主键显而易见是不被允许的。那么针对分布式系统如何做到主键唯一性呢？</p>
<h2>2. UUID</h2>
<p><code>UUID （Universally Unique Identifier）</code>，通用唯一识别码的缩写。UUID是由一组32位数的16进制数字所构成，所以UUID理论上的总数为 <code>16^32=2^128</code>，约等于 <code>3.4 x 10^38</code>。也就是说若每纳秒产生1兆个UUID，要花100亿年才会将所有UUID用完。</p>
<p>生成的UUID是由 8-4-4-4-12格式的数据组成，其中32个字符和4个连字符' - '，一般我们使用的时候会将连字符删除 uuid.<code>toString().replaceAll("-","")</code>。</p>
<p>目前UUID的产生方式有5种版本，每个版本的算法不同，应用范围也不同。</p>
<ul>
<li><code>基于时间的UUID</code> - 版本1： 这个一般是通过当前时间，随机数，和本地Mac地址来计算出来，可以通过 org.apache.logging.log4j.core.util包中的 UuidUtil.getTimeBasedUuid()来使用或者其他包中工具。由于使用了MAC地址，因此能够确保唯一性，但是同时也暴露了MAC地址，私密性不够好。</li>
<li><code>DCE安全的UUID</code> - 版本2 DCE（Distributed Computing Environment）安全的UUID和基于时间的UUID算法相同，但会把时间戳的前4位置换为POSIX的UID或GID。这个版本的UUID在实际中较少用到。</li>
<li><code>基于名字的UUID（MD5）</code>- 版本3 基于名字的UUID通过计算名字和名字空间的MD5散列值得到。这个版本的UUID保证了：相同名字空间中不同名字生成的UUID的唯一性；不同名字空间中的UUID的唯一性；相同名字空间中相同名字的UUID重复生成是相同的。</li>
<li><code>随机UUID</code> - 版本4 根据随机数，或者伪随机数生成UUID。这种UUID产生重复的概率是可以计算出来的，但是重复的可能性可以忽略不计，因此该版本也是被经常使用的版本。JDK中使用的就是这个版本。</li>
<li><code>基于名字的UUID（SHA1）</code> - 版本5 和基于名字的UUID算法类似，只是散列值计算使用SHA1（Secure Hash Algorithm 1）算法。</li>
</ul>
<p>我们 Java中 JDK自带的 UUID产生方式就是版本4根据随机数生成的 UUID 和版本3基于名字的 UUID，有兴趣的可以去看看它的源码。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> main</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;--shiki-dark:#E06C75">[] args) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    //获取一个版本4根据随机字节数组的UUID。</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    UUID</span><span style="color:#E06C75;--shiki-dark:#E06C75"> uuid </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> UUID</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">randomUUID</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">uuid</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">toString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">replaceAll</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"-"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">""</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    //获取一个版本3(基于名称)根据指定的字节数组的UUID。</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    byte</span><span style="color:#E06C75;--shiki-dark:#E06C75">[] nbyte </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span><span style="color:#D19A66;--shiki-dark:#D19A66">10</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 20</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 30</span><span style="color:#E06C75;--shiki-dark:#E06C75">}</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    UUID</span><span style="color:#E06C75;--shiki-dark:#E06C75"> uuidFromBytes </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> UUID</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">nameUUIDFromBytes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(nbyte);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">uuidFromBytes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">toString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">replaceAll</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"-"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379">""</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
</div><p>得到的UUID结果，</p>
<div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">59f51e7ea5ca453bbfaf2c1579f09f1d</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">7f49b84d0bbc38e9a493718013baace6</span></span></code></pre>
</div><p>虽然 UUID 生成方便，本地生成没有网络消耗，但是使用起来也有一些缺点，</p>
<ul>
<li><strong>不易于存储</strong>：UUID太长，16字节128位，通常以36长度的字符串表示，很多场景不适用。</li>
<li><strong>信息不安全</strong>：基于MAC地址生成UUID的算法可能会造成MAC地址泄露，暴露使用者的位置。</li>
<li><strong>对MySQL索引不利</strong>：如果作为数据库主键，在InnoDB引擎下，UUID的无序性可能会引起数据位置频繁变动，严重影响性能，可以查阅 Mysql 索引原理 B+树的知识。</li>
</ul>
<h2>3. 数据库生成</h2>
<p>是不是一定要基于外界的条件才能满足分布式唯一ID的需求呢，我们能不能在我们分布式数据库的基础上获取我们需要的ID？</p>
<p>由于分布式数据库的起始自增值一样所以才会有冲突的情况发生，那么我们将分布式系统中数据库的同一个业务表的自增ID设计成不一样的起始值，然后设置固定的步长，步长的值即为分库的数量或分表的数量。</p>
<p>以MySQL举例，利用给字段设置<code>auto_increment_increment</code>和<code>auto_increment_offset</code>来保证ID自增。</p>
<ul>
<li><code>auto_increment_offset</code>：表示自增长字段从那个数开始，他的取值范围是1 .. 65535。</li>
<li><code>auto_increment_increment</code>：表示自增长字段每次递增的量，其默认值是1，取值范围是1 .. 65535。</li>
</ul>
<p>假设有三台机器，则DB1中order表的起始ID值为1，DB2中order表的起始值为2，DB3中order表的起始值为3，它们自增的步长都为3，则它们的ID生成范围如下图所示：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300951177.png" alt="image-20220615213155448" tabindex="0" loading="lazy"><figcaption>image-20220615213155448</figcaption></figure>
<p>通过这种方式明显的优势就是依赖于数据库自身不需要其他资源，并且ID号单调自增，可以实现一些对ID有特殊要求的业务。</p>
<p>但是缺点也很明显，首先它<strong>强依赖DB</strong>，当DB异常时整个系统不可用。虽然配置主从复制可以尽可能的增加可用性，但是<strong>数据一致性在特殊情况下难以保证</strong>。主从切换时的不一致可能会导致重复发号。还有就是<strong>ID发号性能瓶颈限制在单台MySQL的读写性能</strong>。</p>
<h2>4. 使用redis实现</h2>
<p>Redis实现分布式唯一ID主要是通过提供像 <code>INCR</code> 和 <code>INCRBY</code> 这样的自增原子命令，由于Redis自身的单线程的特点所以能保证生成的 ID 肯定是唯一有序的。</p>
<p>但是单机存在性能瓶颈，无法满足高并发的业务需求，所以可以采用集群的方式来实现。集群的方式又会涉及到和数据库集群同样的问题，所以也需要设置分段和步长来实现。</p>
<p>为了避免长期自增后数字过大可以通过与当前时间戳组合起来使用，另外为了保证并发和业务多线程的问题可以采用 Redis + Lua的方式进行编码，保证安全。</p>
<p>Redis 实现分布式全局唯一ID，它的性能比较高，生成的数据是有序的，对排序业务有利，但是同样它依赖于redis，<strong>需要系统引进redis组件，增加了系统的配置复杂性</strong>。</p>
<p>当然现在Redis的使用性很普遍，所以如果其他业务已经引进了Redis集群，则可以资源利用考虑使用Redis来实现。</p>
<h2>5. 雪花算法-Snowflake</h2>
<p>Snowflake，雪花算法是由Twitter开源的分布式ID生成算法，以划分命名空间的方式将 64-bit位分割成多个部分，每个部分代表不同的含义。而 Java中64bit的整数是Long类型，所以在 Java 中 SnowFlake 算法生成的 ID 就是 long 来存储的。</p>
<ul>
<li><strong>第1位</strong>占用1bit，其值始终是0，可看做是符号位不使用。</li>
<li><strong>第2位</strong>开始的41位是时间戳，41-bit位可表示2^41个数，每个数代表毫秒，那么雪花算法可用的时间年限是<code>(1L&lt;&lt;41)/(1000L360024*365)</code>=69 年的时间。</li>
<li><strong>中间的10-bit位</strong>可表示机器数，即2^10 = 1024台机器，但是一般情况下我们不会部署这么台机器。如果我们对IDC（互联网数据中心）有需求，还可以将 10-bit 分 5-bit 给 IDC，分5-bit给工作机器。这样就可以表示32个IDC，每个IDC下可以有32台机器，具体的划分可以根据自身需求定义。</li>
<li><strong>最后12-bit位</strong>是自增序列，可表示2^12 = 4096个数。</li>
</ul>
<p>这样的划分之后相当于<strong>在一毫秒一个数据中心的一台机器上可产生4096个有序的不重复的ID</strong>。但是我们 IDC 和机器数肯定不止一个，所以毫秒内能生成的有序ID数是翻倍的。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300951206.png" alt="image-20220615213822755" tabindex="0" loading="lazy"><figcaption>image-20220615213822755</figcaption></figure>
<p>Snowflake 的Twitter官方原版是用Scala写的，对Scala语言有研究的同学可以去阅读下，以下是 Java 版本的写法。</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">package</span><span style="color:#C678DD;--shiki-dark:#C678DD"> com.jajian.demo.distribute</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * Twitter_Snowflake&lt;br&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * SnowFlake的结构如下(每部分用-分开):&lt;br&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 0 - 0000000000 0000000000 0000000000 0000000000 0 - 00000 - 00000 - 000000000000 &lt;br&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 1位标识，由于long基本类型在Java中是带符号的，最高位是符号位，正数是0，负数是1，所以id一般是正数，最高位是0&lt;br&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 41位时间截(毫秒级)，注意，41位时间截不是存储当前时间的时间截，而是存储时间截的差值（当前时间截 - 开始时间截)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 得到的值），这里的的开始时间截，一般是我们的id生成器开始使用的时间，由我们程序来指定的（如下下面程序IdWorker类的startTime属性）。41位的时间截，可以使用69年，年T = (1L &lt;&lt; 41) / (1000L * 60 * 60 * 24 * 365) = 69&lt;br&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 10位的数据机器位，可以部署在1024个节点，包括5位datacenterId和5位workerId&lt;br&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 12位序列，毫秒内的计数，12位的计数顺序号支持每个节点每毫秒(同一机器，同一时间截)产生4096个ID序号&lt;br&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 加起来刚好64位，为一个Long型。&lt;br&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * SnowFlake的优点是，整体上按照时间自增排序，并且整个分布式系统内不会产生ID碰撞(由数据中心ID和机器ID作区分)，并且效率较高，经测试，SnowFlake每秒能够产生26万ID左右。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SnowflakeDistributeId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // ==============================Fields===========================================</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 开始时间截 (2015-01-01)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> final</span><span style="color:#C678DD;--shiki-dark:#C678DD"> long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> twepoch </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1420041600000L</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 机器id所占的位数</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> final</span><span style="color:#C678DD;--shiki-dark:#C678DD"> long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> workerIdBits </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 5L</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 数据标识id所占的位数</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> final</span><span style="color:#C678DD;--shiki-dark:#C678DD"> long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> datacenterIdBits </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 5L</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 支持的最大机器id，结果是31 (这个移位算法可以很快的计算出几位二进制数所能表示的最大十进制数)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> final</span><span style="color:#C678DD;--shiki-dark:#C678DD"> long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> maxWorkerId </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> -</span><span style="color:#D19A66;--shiki-dark:#D19A66">1L</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> ^</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#D19A66;--shiki-dark:#D19A66">1L</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> &lt;&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> workerIdBits)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 支持的最大数据标识id，结果是31</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> final</span><span style="color:#C678DD;--shiki-dark:#C678DD"> long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> maxDatacenterId </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> -</span><span style="color:#D19A66;--shiki-dark:#D19A66">1L</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> ^</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#D19A66;--shiki-dark:#D19A66">1L</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> &lt;&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> datacenterIdBits)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 序列在id中占的位数</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> final</span><span style="color:#C678DD;--shiki-dark:#C678DD"> long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> sequenceBits </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 12L</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 机器ID向左移12位</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> final</span><span style="color:#C678DD;--shiki-dark:#C678DD"> long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> workerIdShift </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75"> sequenceBits</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 数据标识id向左移17位(12+5)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> final</span><span style="color:#C678DD;--shiki-dark:#C678DD"> long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> datacenterIdShift </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75"> sequenceBits </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#E06C75;--shiki-dark:#E06C75"> workerIdBits</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 时间截向左移22位(5+5+12)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> final</span><span style="color:#C678DD;--shiki-dark:#C678DD"> long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> timestampLeftShift </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75"> sequenceBits </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#E06C75;--shiki-dark:#E06C75"> workerIdBits </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#E06C75;--shiki-dark:#E06C75"> datacenterIdBits</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 生成序列的掩码，这里为4095 (0b111111111111=0xfff=4095)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> final</span><span style="color:#C678DD;--shiki-dark:#C678DD"> long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> sequenceMask </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> -</span><span style="color:#D19A66;--shiki-dark:#D19A66">1L</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> ^</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#D19A66;--shiki-dark:#D19A66">1L</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> &lt;&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> sequenceBits)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 工作机器ID(0~31)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> workerId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 数据中心ID(0~31)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> datacenterId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 毫秒内序列(0~4095)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> sequence </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0L</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 上次生成ID的时间截</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> lastTimestamp </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> -</span><span style="color:#D19A66;--shiki-dark:#D19A66">1L</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    //==============================Constructors=====================================</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 构造函数</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> workerId</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     工作ID (0~31)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> datacenterId</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 数据中心ID (0~31)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> SnowflakeDistributeId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">long</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> workerId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#C678DD;--shiki-dark:#C678DD">long</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> datacenterId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (workerId </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> maxWorkerId </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">||</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> workerId </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            throw</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> IllegalArgumentException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">format</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"worker Id can't be greater than %d or less than 0"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, maxWorkerId));</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (datacenterId </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> maxDatacenterId </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">||</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> datacenterId </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            throw</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> IllegalArgumentException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">format</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"datacenter Id can't be greater than %d or less than 0"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, maxDatacenterId));</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">workerId</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> workerId;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">datacenterId</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> datacenterId;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // ==============================Methods==========================================</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 获得下一个ID (该方法是线程安全的)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@return</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> SnowflakeId</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> synchronized</span><span style="color:#C678DD;--shiki-dark:#C678DD"> long</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> nextId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> timestamp</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> timeGen</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //如果当前时间小于上一次ID生成的时间戳，说明系统时钟回退过这个时候应当抛出异常</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (timestamp </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> lastTimestamp) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            throw</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> RuntimeException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">format</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Clock moved backwards.  Refusing to generate id for %d milliseconds"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, lastTimestamp </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> timestamp));</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //如果是同一时间生成的，则进行毫秒内序列</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (lastTimestamp </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> timestamp) {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            sequence </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (sequence </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&amp;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> sequenceMask;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            //毫秒内序列溢出</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (sequence </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                //阻塞到下一个毫秒,获得新的时间戳</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                timestamp </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> tilNextMillis</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(lastTimestamp);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //时间戳改变，毫秒内序列重置</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        else</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            sequence </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0L</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //上次生成ID的时间截</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        lastTimestamp </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> timestamp;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //移位并通过或运算拼到一起组成64位的ID</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ((timestamp </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> twepoch) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;&lt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> timestampLeftShift) </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">                |</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (datacenterId </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;&lt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> datacenterIdShift) </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">                |</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (workerId </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;&lt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> workerIdShift) </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">                |</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> sequence;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 阻塞到下一个毫秒，直到获得新的时间戳</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> lastTimestamp</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 上次生成ID的时间截</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@return</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 当前时间戳</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    protected</span><span style="color:#C678DD;--shiki-dark:#C678DD"> long</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> tilNextMillis</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">long</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> lastTimestamp</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> timestamp</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> timeGen</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        while</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (timestamp </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> lastTimestamp) {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            timestamp </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> timeGen</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> timestamp;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 返回以毫秒为单位的当前时间</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@return</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 当前时间(毫秒)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    protected</span><span style="color:#C678DD;--shiki-dark:#C678DD"> long</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> timeGen</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">currentTimeMillis</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试的代码如下</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> main</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;--shiki-dark:#E06C75">[] args) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    SnowflakeDistributeId</span><span style="color:#E06C75;--shiki-dark:#E06C75"> idWorker </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> SnowflakeDistributeId</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> i</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">++</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> id </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> idWorker</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">nextId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//      System.out.println(Long.toBinaryString(id));</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(id);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
</div><p><strong>雪花算法提供了一个很好的设计思想，雪花算法生成的ID是趋势递增，不依赖数据库等第三方系统，以服务的方式部署，稳定性更高，生成ID的性能也是非常高的，而且可以根据自身业务特性分配bit位，非常灵活</strong>。</p>
<p>但是雪花算法强<strong>依赖机器时钟</strong>，如果机器上时钟回拨，会导致发号重复或者服务会处于不可用状态。如果恰巧回退前生成过一些ID，而时间回退后，生成的ID就有可能重复。官方对于此并没有给出解决方案，而是简单的抛错处理，这样会造成在时间被追回之前的这段时间服务不可用。</p>
<p>很多其他类雪花算法也是在此思想上的设计然后改进规避它的缺陷，后面介绍的<code>百度 UidGenerator</code> 和 <code>美团分布式ID生成系统 Leaf</code> 中snowflake模式都是在 snowflake 的基础上演进出来的。</p>
<h2>6. 百度-UidGenerator</h2>
<blockquote>
<p>百度的 <code>UidGenerator</code> 是百度开源基于Java语言实现的唯一ID生成器，是在雪花算法 snowflake 的基础上做了一些改进。<code>UidGenerator</code>以组件形式工作在应用项目中, 支持自定义workerId位数和初始化策略，适用于docker等虚拟化环境下实例自动重启、漂移等场景。</p>
</blockquote>
<p>在实现上，UidGenerator 提供了两种生成唯一ID方式，分别是 <code>DefaultUidGenerator</code> 和 <code>CachedUidGenerator</code>，官方建议如果有<strong>性能考虑</strong>的话使用 <code>CachedUidGenerator</code> 方式实现。</p>
<p><code>UidGenerator</code> 依然是以划分命名空间的方式将 64-bit位分割成多个部分，只不过它的默认划分方式有别于雪花算法 snowflake。它默认是由 <code>1-28-22-13</code> 的格式进行划分。可根据你的业务的情况和特点，自己调整各个字段占用的位数。</p>
<ul>
<li><strong>第1位</strong>仍然占用1bit，其值始终是0。</li>
<li><strong>第2位</strong>开始的28位是时间戳，28-bit位可表示2^28个数，这里不再是以毫秒而是以秒为单位，每个数代表秒则可用<code>（1L&lt;&lt;28）/ (360024365) ≈ 8.51</code> 年的时间。</li>
<li>中间的 workId （数据中心+工作机器，可以其他组成方式）则由 <strong>22-bit位</strong>组成，可表示 2^22 = 4194304个工作ID。</li>
<li>最后由<strong>13-bit位</strong>构成自增序列，可表示2^13 = 8192个数。</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300951229.png" alt="image-20220615215123947" tabindex="0" loading="lazy"><figcaption>image-20220615215123947</figcaption></figure>
<p>其中 workId （机器 id），最多可支持约420w次机器启动。<strong>内置实现为在启动时由数据库分配（表名为 WORKER_NODE），默认分配策略为用后即弃，后续可提供复用策略</strong>。</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">DROP</span><span style="color:#C678DD;--shiki-dark:#C678DD"> TABLE</span><span style="color:#C678DD;--shiki-dark:#C678DD"> IF</span><span style="color:#C678DD;--shiki-dark:#C678DD"> EXISTS</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> WORKER_NODE;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">CREATE</span><span style="color:#C678DD;--shiki-dark:#C678DD"> TABLE</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> WORKER_NODE</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">ID </span><span style="color:#C678DD;--shiki-dark:#C678DD">BIGINT</span><span style="color:#C678DD;--shiki-dark:#C678DD"> NOT NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> AUTO_INCREMENT COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379">'auto increment id'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">HOST_NAME </span><span style="color:#C678DD;--shiki-dark:#C678DD">VARCHAR</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">64</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">NOT NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379">'host name'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">PORT </span><span style="color:#C678DD;--shiki-dark:#C678DD">VARCHAR</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">64</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">NOT NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379">'port'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">TYPE</span><span style="color:#C678DD;--shiki-dark:#C678DD"> INT</span><span style="color:#C678DD;--shiki-dark:#C678DD"> NOT NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379">'node type: ACTUAL or CONTAINER'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">LAUNCH_DATE </span><span style="color:#C678DD;--shiki-dark:#C678DD">DATE</span><span style="color:#C678DD;--shiki-dark:#C678DD"> NOT NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379">'launch date'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">MODIFIED </span><span style="color:#C678DD;--shiki-dark:#C678DD">TIMESTAMP</span><span style="color:#C678DD;--shiki-dark:#C678DD"> NOT NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379">'modified time'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">CREATED </span><span style="color:#C678DD;--shiki-dark:#C678DD">TIMESTAMP</span><span style="color:#C678DD;--shiki-dark:#C678DD"> NOT NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379">'created time'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">PRIMARY KEY</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(ID)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> COMMENT</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">'DB WorkerID Assigner for UID Generator'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,ENGINE </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> INNODB;</span></span></code></pre>
</div><h3>6.1 DefaultUidGenerator 实现</h3>
<p><code>DefaultUidGenerator</code> 就是正常的根据时间戳和机器位还有序列号的生成方式，和雪花算法很相似，对于时钟回拨也只是抛异常处理。仅有一些不同，如<strong>以秒为为单位</strong>而不再是毫秒和支持Docker等虚拟化环境。</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">protected</span><span style="color:#C678DD;--shiki-dark:#C678DD"> synchronized</span><span style="color:#C678DD;--shiki-dark:#C678DD"> long</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> nextId</span><span style="color:#E06C75;--shiki-dark:#E06C75">() {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> currentSecond </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getCurrentSecond</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // Clock moved backwards, refuse to generate uid</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (currentSecond </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> lastSecond) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> refusedSeconds </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75"> lastSecond </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E06C75;--shiki-dark:#E06C75"> currentSecond</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        throw</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> UidGenerateException</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Clock moved backwards. Refusing for %d seconds"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> refusedSeconds)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // At the same second, increase sequence</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (currentSecond </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#E06C75;--shiki-dark:#E06C75"> lastSecond) {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        sequence </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (sequence </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span><span style="color:#E06C75;--shiki-dark:#E06C75">) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&amp;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> bitsAllocator</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getMaxSequence</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Exceed the max sequence, we wait the next second to generate uid</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (sequence </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            currentSecond </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getNextSecond</span><span style="color:#E06C75;--shiki-dark:#E06C75">(lastSecond)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // At the different second, sequence restart from zero</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    } </span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        sequence </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0L</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    lastSecond </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75"> currentSecond</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // Allocate bits for UID</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> bitsAllocator</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">allocate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(currentSecond </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> epochSeconds, workerId, sequence);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果你要使用 DefaultUidGenerator 的实现方式的话，以上划分的占用位数可通过 spring 进行参数配置。</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">bean</span><span style="color:#D19A66;--shiki-dark:#D19A66"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"defaultUidGenerator"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"com.baidu.fsg.uid.impl.DefaultUidGenerator"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> lazy-init</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"false"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">property</span><span style="color:#D19A66;--shiki-dark:#D19A66"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"workerIdAssigner"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> ref</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"disposableWorkerIdAssigner"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- Specified bits &amp; epoch as your demand. No specified the default value will be used --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">property</span><span style="color:#D19A66;--shiki-dark:#D19A66"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"timeBits"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"29"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">property</span><span style="color:#D19A66;--shiki-dark:#D19A66"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"workerBits"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"21"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">property</span><span style="color:#D19A66;--shiki-dark:#D19A66"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"seqBits"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"13"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">property</span><span style="color:#D19A66;--shiki-dark:#D19A66"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"epochStr"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"2016-09-20"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">bean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
</div><h3>6.2 CachedUidGenerator 实现</h3>
<p>而官方建议的性能较高的 <code>CachedUidGenerator</code> 生成方式，是使用 RingBuffer 缓存生成的id。数组每个元素成为一个slot。RingBuffer容量，默认为Snowflake算法中sequence最大值（2^13 = 8192）。可通过 boostPower 配置进行扩容，以提高 RingBuffer 读写吞吐量。</p>
<p>Tail指针、Cursor指针用于环形数组上读写slot：</p>
<ul>
<li><strong>Tail指针</strong> 表示Producer生产的最大序号(此序号从0开始，持续递增)。Tail不能超过Cursor，即生产者不能覆盖未消费的slot。当Tail已赶上curosr，此时可通过rejectedPutBufferHandler指定PutRejectPolicy</li>
<li><strong>Cursor指针</strong> 表示Consumer消费到的最小序号(序号序列与Producer序列相同)。Cursor不能超过Tail，即不能消费未生产的slot。当Cursor已赶上tail，此时可通过rejectedTakeBufferHandler指定TakeRejectPolicy</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300951248.png" alt="image-20220615215921262" tabindex="0" loading="lazy"><figcaption>image-20220615215921262</figcaption></figure>
<p>CachedUidGenerator采用了双RingBuffer，Uid-RingBuffer用于存储Uid、Flag-RingBuffer用于存储Uid状态(是否可填充、是否可消费)。</p>
<p>由于数组元素在内存中是连续分配的，可最大程度利用CPU cache以提升性能。但同时会带来「伪共享」FalseSharing问题，为此在Tail、Cursor指针、Flag-RingBuffer中采用了CacheLine 补齐方式。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300951282.png" alt="image-20220615215956912" tabindex="0" loading="lazy"><figcaption>image-20220615215956912</figcaption></figure>
<p><strong>RingBuffer填充时机</strong></p>
<ul>
<li><strong>初始化预填充</strong> RingBuffer初始化时，预先填充满整个RingBuffer。</li>
<li><strong>即时填充</strong> Take消费时，即时检查剩余可用slot量(tail - cursor)，如小于设定阈值，则补全空闲slots。阈值可通过paddingFactor来进行配置，请参考Quick Start中CachedUidGenerator配置。</li>
<li><strong>周期填充</strong> 通过Schedule线程，定时补全空闲slots。可通过scheduleInterval配置，以应用定时填充功能，并指定Schedule时间间隔。</li>
</ul>
<h2>7. 美团Leaf</h2>
<blockquote>
<p>Leaf是美团基础研发平台推出的一个分布式ID生成服务，名字取自德国哲学家、数学家莱布尼茨的著名的一句话：“There are no two identical leaves in the world”，世间不可能存在两片相同的叶子。</p>
</blockquote>
<p>Leaf 也提供了两种ID生成的方式，分别是 <code>Leaf-segment 数据库方案</code>和 <code>Leaf-snowflake 方案</code>。</p>
<h3>7.1 Leaf-segment 数据库方案</h3>
<p>Leaf-segment 数据库方案，是在上文描述的在使用数据库的方案上，做了如下改变：</p>
<ul>
<li>原方案每次获取ID都得读写一次数据库，造成数据库压力大。改为利用proxy server批量获取，每次获取一个segment(step决定大小)号段的值。用完之后再去数据库获取新的号段，可以大大的减轻数据库的压力。</li>
<li>各个业务不同的发号需求用 <code>biz_tag</code>字段来区分，每个biz-tag的ID获取相互隔离，互不影响。如果以后有性能需求需要对数据库扩容，不需要上述描述的复杂的扩容操作，只需要对biz_tag分库分表就行。</li>
</ul>
<p>数据库表设计如下：</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">CREATE</span><span style="color:#C678DD;--shiki-dark:#C678DD"> TABLE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> `</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">leaf_alloc</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">` (</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  `biz_tag`</span><span style="color:#C678DD;--shiki-dark:#C678DD"> varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">128</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)  </span><span style="color:#C678DD;--shiki-dark:#C678DD">NOT NULL</span><span style="color:#C678DD;--shiki-dark:#C678DD"> DEFAULT</span><span style="color:#98C379;--shiki-dark:#98C379"> ''</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379">'业务key'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  `max_id`</span><span style="color:#C678DD;--shiki-dark:#C678DD"> bigint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">20</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">NOT NULL</span><span style="color:#C678DD;--shiki-dark:#C678DD"> DEFAULT</span><span style="color:#98C379;--shiki-dark:#98C379"> '1'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379">'当前已经分配了的最大id'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  `step`</span><span style="color:#C678DD;--shiki-dark:#C678DD"> int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">11</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">NOT NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379">'初始步长，也是动态调整的最小步长'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  `description`</span><span style="color:#C678DD;--shiki-dark:#C678DD"> varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">256</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)  </span><span style="color:#C678DD;--shiki-dark:#C678DD">DEFAULT</span><span style="color:#C678DD;--shiki-dark:#C678DD"> NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379">'业务key的描述'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  `update_time`</span><span style="color:#C678DD;--shiki-dark:#C678DD"> timestamp</span><span style="color:#C678DD;--shiki-dark:#C678DD"> NOT NULL</span><span style="color:#C678DD;--shiki-dark:#C678DD"> DEFAULT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> CURRENT_TIMESTAMP </span><span style="color:#C678DD;--shiki-dark:#C678DD">ON</span><span style="color:#C678DD;--shiki-dark:#C678DD"> UPDATE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> CURRENT_TIMESTAMP COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379">'更新时间'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">  PRIMARY KEY</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#98C379;--shiki-dark:#98C379">`biz_tag`</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) ENGINE</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">InnoDB;</span></span></code></pre>
</div><p>原来获取ID每次都需要写数据库，现在只需要把step设置得足够大，比如1000。那么只有当1000个号被消耗完了之后才会去重新读写一次数据库。读写数据库的频率从1减小到了1/step，大致架构如下图所示：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300951313.png" alt="image-20220615220442152" tabindex="0" loading="lazy"><figcaption>image-20220615220442152</figcaption></figure>
<p>同时Leaf-segment 为了解决 TP999（满足千分之九百九十九的网络请求所需要的最低耗时）数据波动大，当号段使用完之后还是会在更新数据库的I/O上，TP999 数据会出现偶尔的尖刺的问题，提供了双buffer优化。</p>
<p>简单的说就是，Leaf 取号段的时机是在号段消耗完的时候进行的，也就意味着号段临界点的ID下发时间取决于下一次从DB取回号段的时间，并且在这期间进来的请求也会因为DB号段没有取回来，导致线程阻塞。如果请求DB的网络和DB的性能稳定，这种情况对系统的影响是不大的，但是假如取DB的时候网络发生抖动，或者DB发生慢查询就会导致整个系统的响应时间变慢。</p>
<p>为了DB取号段的过程能够做到无阻塞，不需要在DB取号段的时候阻塞请求线程，即当号段消费到某个点时就异步的把下一个号段加载到内存中，而不需要等到号段用尽的时候才去更新号段。这样做就可以很大程度上的降低系统的 TP999 指标。详细实现如下图所示：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300951336.png" alt="image-20220615220646262" tabindex="0" loading="lazy"><figcaption>image-20220615220646262</figcaption></figure>
<p>采用双buffer的方式，Leaf服务内部有两个号段缓存区segment。当前号段已下发10%时，如果下一个号段未更新，则另启一个更新线程去更新下一个号段。当前号段全部下发完后，如果下个号段准备好了则切换到下个号段为当前segment接着下发，循环往复。</p>
<ul>
<li>每个biz-tag都有消费速度监控，通常推荐segment长度设置为服务高峰期发号QPS的600倍（10分钟），这样即使DB宕机，Leaf仍能持续发号10-20分钟不受影响。</li>
<li>每次请求来临时都会判断下个号段的状态，从而更新此号段，所以偶尔的网络抖动不会影响下个号段的更新。</li>
</ul>
<p>对于这种方案依然存在一些问题，它<strong>仍然依赖 DB的稳定性，需要采用主从备份的方式提高 DB的可用性</strong>，还有 Leaf-segment方案生成的ID是趋势递增的，这样ID号是可被计算的，例如订单ID生成场景，<strong>通过订单id号相减就能大致计算出公司一天的订单量，这个是不能忍受的</strong>。</p>
<h3>7.2 Leaf-snowflake方案</h3>
<p>Leaf-snowflake方案完全沿用 snowflake 方案的bit位设计，对于workerID的分配引入了Zookeeper持久顺序节点的特性自动对snowflake节点配置 wokerID。避免了服务规模较大时，动手配置成本太高的问题。</p>
<p>Leaf-snowflake是按照下面几个步骤启动的：</p>
<ul>
<li>启动Leaf-snowflake服务，连接Zookeeper，在leaf_forever父节点下检查自己是否已经注册过（是否有该顺序子节点）。</li>
<li>如果有注册过直接取回自己的workerID（zk顺序节点生成的int类型ID号），启动服务。</li>
<li>如果没有注册过，就在该父节点下面创建一个持久顺序节点，创建成功后取回顺序号当做自己的workerID号，启动服务。</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300951360.png" alt="image-20220615221138652" tabindex="0" loading="lazy"><figcaption>image-20220615221138652</figcaption></figure>
<p>为了减少对 Zookeeper的依赖性，会在本机文件系统上缓存一个workerID文件。当ZooKeeper出现问题，恰好机器出现问题需要重启时，能保证服务能够正常启动。</p>
<p>上文阐述过在类 snowflake算法上都存在时钟回拨的问题，Leaf-snowflake在解决时钟回拨的问题上是通过校验自身系统时间与 <code>leaf_forever/${self}</code>节点记录时间做比较然后启动报警的措施。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300951386.png" alt="image-20220615221226542" tabindex="0" loading="lazy"><figcaption>image-20220615221226542</figcaption></figure>
<p>美团官方建议是由于强依赖时钟，对时间的要求比较敏感，<strong>在机器工作时NTP同步也会造成秒级别的回退，建议可以直接关闭NTP同步。要么在时钟回拨的时候直接不提供服务直接返回ERROR_CODE，等时钟追上即可。或者做一层重试，然后上报报警系统，更或者是发现有时钟回拨之后自动摘除本身节点并报警。</strong></p>
<p>在性能上官方提供的数据目前 Leaf 的性能在4C8G 的机器上QPS能压测到近5w/s，TP999 1ms。</p>
<h2>参考文章</h2>
<p><a href="https://pdai.tech/md/arch/arch-z-id.html" target="_blank" rel="noopener noreferrer"><strong>分布式系统 - 全局唯一ID实现方案</strong></a></p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300951135.png" type="image/png"/>
    </item>
    <item>
      <title>分布式系统-分布式缓存及方案实现</title>
      <link>https://mrjackc.github.io/posts/Architect/distributed/arch-z-cache.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/distributed/arch-z-cache.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">分布式系统-分布式缓存及方案实现</source>
      <description>分布式系统-分布式缓存及方案实现 TODO 待完善中 1. 本地缓存和分布式缓存 本地缓存：指的是在应用中的缓存组件，其最大的优点是应用和cache是在同一个进程内部，请求缓存非常快速，没有过多的网络开销等，在单应用不需要集群支持或者集群情况下各节点无需互相通知的场景下使用本地缓存较合适；同时，它的缺点也是因为缓存跟应用程序耦合，多个应用程序无法直接的...</description>
      <category>架构</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<blockquote>
<p>TODO 待完善中</p>
</blockquote>
<h2>1. 本地缓存和分布式缓存</h2>
<ul>
<li><strong>本地缓存</strong>：指的是在应用中的缓存组件，其最大的优点是应用和cache是在同一个进程内部，请求缓存非常快速，没有过多的网络开销等，在单应用不需要集群支持或者集群情况下各节点无需互相通知的场景下使用本地缓存较合适；同时，它的缺点也是因为缓存跟应用程序耦合，<strong>多个应用程序无法直接的共享缓存</strong>，各应用或集群的各节点都需要维护自己的单独缓存，对内存是一种浪费。</li>
<li><strong>分布式缓存</strong>：指的是与应用分离的缓存组件或服务，其最大的优点是自身就是一个独立的应用，与本地应用隔离，多个应用可直接的共享缓存。</li>
</ul>
<p>目前各种类型的缓存都活跃在成千上万的应用服务中，还没有一种缓存方案可以解决一切的业务场景或数据类型，我们需要根据自身的特殊场景和背景，选择最适合的缓存方案。缓存的使用是程序员、架构师的必备技能，好的程序员能根据数据类型、业务场景来准确判断使用何种类型的缓存，如何使用这种缓存，以最小的成本最快的效率达到最优的目的。</p>
<h2>2. 分布式缓存的实现方案</h2>
<h3>2.1 Redis缓存</h3>
<blockquote>
<p>Redis是一款内存高速缓存数据库。Redis全称为：<strong>Remote Dictionary Server</strong>（远程数据服务），使用C语言编写，Redis是一个key-value存储系统（键值存储系统），支持丰富的数据类型，如：String、list、set、zset、hash。</p>
</blockquote>
<p>Redis是一种支持key-value等多种数据结构的存储系统。可用于缓存，事件发布或订阅，高速队列等场景。支持网络，提供字符串，哈希，列表，队列，集合结构直接存取，基于内存，可持久化。同时性能强劲，具有复制特性以及解决问题而生的独一无二的数据模型。它可以存储键值对与5种不同类型的值之间的映射，可以将存储在内存的键值对数据持久化到硬盘，可以使用复制特性来扩展读性能，还可以使用客户端分片来扩展写性能。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300959028.png" alt="image-20220621192129955" tabindex="0" loading="lazy"><figcaption>image-20220621192129955</figcaption></figure>
<p>Redis内部使用一个redisObject对象来标识所有的key和value数据，redisObject最主要的信息如图所示：type代表一个value对象具体是何种数据类型，encoding是不同数据类型在Redis内部的存储方式，比如——type=string代表value存储的是一个普通字符串，那么对应的encoding可以是raw或是int，如果是int则代表世界Redis内部是按数值类型存储和表示这个字符串。</p>
<ul>
<li>
<p>编码方式</p>
<p>左边的raw列为对象的编码方式：字符串可以被编码为raw（一般字符串）或Rint（为了节约内存，Redis会将字符串表示的64位有符号整数编码为整数来进行储存）；列表可以被编码为ziplist或linkedlist，ziplist是为节约大小较小的列表空间而作的特殊表示；集合可以被编码为intset或者hashtable，intset是只储存数字的小集合的特殊表示；hash表可以编码为zipmap或者hashtable，zipmap是小hash表的特殊表示；有序集合可以被编码为ziplist或者skiplist格式，ziplist用于表示小的有序集合，而skiplist则用于表示任何大小的有序集合。</p>
</li>
<li>
<p>网络I/O模型</p>
<p>从网络I/O模型上看，Redis使用单线程的I/O复用模型，自己封装了一个简单的AeEvent事件处理框架，主要实现了epoll、kqueue和select。对于单纯只有I/O操作来说，单线程可以将速度优势发挥到最大，但是Redis也提供了一些简单的计算功能，比如排序、聚合等，对于这些操作，单线程模型实际会严重影响整体吞吐量，CPU计算过程中，整个I/O调度都是被阻塞住的，在这些特殊场景的使用中，需要额外的考虑。相较于memcached的预分配内存管理，Redis使用现场申请内存的方式来存储数据，并且很少使用free-list等方式来优化内存分配，会在一定程度上存在内存碎片。Redis跟据存储命令参数，会把带过期时间的数据单独存放在一起，并把它们称为临时数据，非临时数据是永远不会被剔除的，即便物理内存不够，导致swap也不会剔除任何非临时数据（但会尝试剔除部分临时数据）。</p>
</li>
<li>
<p>redis持久化</p>
<p>我们描述Redis为内存数据库，作为缓存服务，大量使用内存间的数据快速读写，支持高并发大吞吐；而作为数据库，则是指Redis对缓存的持久化支持。Redis由于支持了非常丰富的内存数据库结构类型，如何把这些复杂的内存组织方式持久化到磁盘上? Redis的持久化与传统数据库的方式差异较大，Redis一共支持四种持久化方式，主要使用的两种：</p>
<ul>
<li>
<p><strong>定时快照方式(snapshot)</strong>：该持久化方式实际是在Redis内部一个定时器事件，每隔固定时间去检查当前数据发生的改变次数与时间是否满足配置的持久化触发的条件，如果满足则通过操作系统fork调用来创建出一个子进程，这个子进程默认会与父进程共享相同的地址空间，这时就可以通过子进程来遍历整个内存来进行存储操作，而主进程则仍然可以提供服务，当有写入时由操作系统按照内存页（page）为单位来进行copy-on-write保证父子进程之间不会互相影响。它的缺点是快照只是代表一段时间内的内存映像，所以系统重启会丢失上次快照与重启之间所有的数据。</p>
</li>
<li>
<p><strong>基于语句追加文件的方式(aof)</strong>：aof方式实际类似MySQl的基于语句的binlog方式，即每条会使Redis内存数据发生改变的命令都会追加到一个log文件中，也就是说这个log文件就是Redis的持久化数据。 aof的方式的主要缺点是追加log文件可能导致体积过大，当系统重启恢复数据时如果是aof的方式则加载数据会非常慢，几十G的数据可能需要几小时才能加载完，当然这个耗时并不是因为磁盘文件读取速度慢，而是由于读取的所有命令都要在内存中执行一遍。另外由于每条命令都要写log，所以使用aof的方式，Redis的读写性能也会有所下降。</p>
<p>Redis的持久化使用了Buffer I/O，所谓Buffer I/O是指Redis对持久化文件的写入和读取操作都会使用物理内存的Page Cache，而大多数数据库系统会使用Direct I/O来绕过这层Page Cache并自行维护一个数据的Cache。而当Redis的持久化文件过大（尤其是快照文件），并对其进行读写时，磁盘文件中的数据都会被加载到物理内存中作为操作系统对该文件的一层Cache，而这层Cache的数据与Redis内存中管理的数据实际是重复存储的。虽然内核在物理内存紧张时会做Page Cache的剔除工作，但内核很可能认为某块Page Cache更重要，而让你的进程开始Swap，这时你的系统就会开始出现不稳定或者崩溃了，因此在持久化配置后，针对内存使用需要实时监控观察。</p>
</li>
</ul>
</li>
</ul>
<h4>2.2.1 Redis分布式存储方案</h4>
<p>与memcached客户端支持分布式方案不同，Redis更倾向于在服务端构建分布式存储，如图</p>
<p><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301001567.png" alt="image-20220621192129955" loading="lazy"><br>
Redis分布式集群图1</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301001012.png" alt="image-20220621193334604" tabindex="0" loading="lazy"><figcaption>image-20220621193334604</figcaption></figure>
<p>Redis分布式集群图2</p>
<p>Redis Cluster是一个实现了分布式且允许单点故障的Redis高级版本，它<strong>没有中心节点，具有线性可伸缩的功能</strong>。如图2，其中节点与节点之间通过二进制协议进行通信，节点与客户端之间通过ascii协议进行通信。在数据的放置策略上，Redis Cluster将整个key的数值域分成2的14次方16384个hash槽，每个节点上可以存储一个或多个hash槽，也就是说当前Redis Cluster支持的最大节点数就是16384。Redis Cluster使用的分布式算法也很简单：<code>crc16( key ) % HASH_SLOTS_NUMBER</code>。整体设计可总结为：</p>
<ul>
<li>数据hash分布在不同的Redis节点实例上；</li>
<li>M/S（主/从）的切换采用Sentinel；</li>
<li>写：只会写master Instance，从sentinel获取当前的master Instance；</li>
<li>读：从Redis Node中基于权重选取一个Redis Instance读取，失败/超时则轮询其他Instance；Redis本身就很好的支持读写分离，在单进程的I/O场景下，可以有效的避免主库的阻塞风险；</li>
</ul>
<p>通过RPC服务访问，RPC server端封装了Redis客户端，客户端基于Jedis开发。 可以看到，通过集群+主从结合的设计，Redis在扩展和稳定高可用性能方面都是比较成熟的。但是，在数据一致性问题上，Redis没有提供CAS操作命令来保障高并发场景下的数据一致性问题，不过它却提供了事务的功能，Redis的Transactions提供的并不是严格的ACID的事务（比如一串用EXEC提交执行的命令，在执行中服务器宕机，那么会有一部分命令执行了，剩下的没执行）。但是这个Transactions还是提供了基本的命令打包执行的功能（在服务器不出问题的情况下，可以保证一连串的命令是顺序在一起执行的，中间有会有其它客户端命令插进来执行）。Redis还提供了一个Watch功能，你可以对一个key进行Watch，然后再执行Transactions，在这过程中，如果这个Watched的值进行了修改，那么这个Transactions会发现并拒绝执行。</p>
<h4>2.2.2 失效策略</h4>
<p>在失效策略上，Redis支持6种的数据淘汰策略：</p>
<ul>
<li>volatile-lru：从已设置过期时间的数据集（server.db[i].expires）中挑选最近最少使用的数据淘汰；</li>
<li>volatile-ttl：从已设置过期时间的数据集（server.db[i].expires）中挑选将要过期的数据淘汰；</li>
<li>volatile-random：从已设置过期时间的数据集（server.db[i].expires）中任意选择数据淘汰 ；</li>
<li>allkeys-lru：从数据集（server.db[i].dict）中挑选最近最少使用的数据淘汰；</li>
<li>allkeys-random：从数据集（server.db[i].dict）中任意选择数据淘汰；</li>
<li>no-enviction（驱逐）：禁止驱逐数据。</li>
</ul>
<h4>2.2.3 redis应用场景</h4>
<ul>
<li><strong>在主页中显示最新的项目列表</strong>：Redis使用的是常驻内存的缓存，速度非常快。LPUSH用来插入一个内容ID，作为关键字存储在列表头部。LTRIM用来限制列表中的项目数最多为5000。如果用户需要的检索的数据量超越这个缓存容量，这时才需要把请求发送到数据库。</li>
<li><strong>删除和过滤</strong>：如果一篇文章被删除，可以使用LREM从缓存中彻底清除掉。</li>
<li><strong>排行榜及相关问题</strong>：排行榜（leader board）按照得分进行排序。ZADD命令可以直接实现这个功能，而ZREVRANGE命令可以用来按照得分来获取前100名的用户，ZRANK可以用来获取用户排名，非常直接而且操作容易。</li>
<li><strong>按照用户投票和时间排序</strong>：排行榜，得分会随着时间变化。LPUSH和LTRIM命令结合运用，把文章添加到一个列表中。一项后台任务用来获取列表，并重新计算列表的排序，ZADD命令用来按照新的顺序填充生成列表。列表可以实现非常快速的检索，即使是负载很重的站点。</li>
<li><strong>过期项目处理</strong>：使用Unix时间作为关键字，用来保持列表能够按时间排序。对current_time和time_to_live进行检索，完成查找过期项目的艰巨任务。另一项后台任务使用ZRANGE…WITHSCORES进行查询，删除过期的条目。</li>
<li><strong>计数</strong>：进行各种数据统计的用途是非常广泛的，比如想知道什么时候封锁一个IP地址。INCRBY命令让这些变得很容易，通过原子递增保持计数；GETSET用来重置计数器；过期属性用来确认一个关键字什么时候应该删除。</li>
<li><strong>特定时间内的特定项目</strong>：这是特定访问者的问题，可以通过给每次页面浏览使用SADD命令来解决。SADD不会将已经存在的成员添加到一个集合。</li>
<li><strong>Pub/Sub</strong>：在更新中保持用户对数据的映射是系统中的一个普遍任务。Redis的pub/sub功能使用了SUBSCRIBE、UNSUBSCRIBE和PUBLISH命令，让这个变得更加容易。</li>
<li><strong>队列</strong>：在当前的编程中队列随处可见。除了push和pop类型的命令之外，Redis还有阻塞队列的命令，能够让一个程序在执行时被另一个程序添加到队列。 实际工程中，对于缓存的应用可以有多种的实战方式，包括侵入式硬编码，抽象服务化应用，以及轻量的注解式使用等。本文将主要介绍下注解式方式。</li>
</ul>
<h3>2.2 memcached缓存</h3>
<p>memcached是应用较广的开源分布式缓存产品之一，它本身其实不提供分布式解决方案。在服务端，memcached集群环境实际就是一个个memcached服务器的堆积，环境搭建较为简单；cache的分布式主要是在客户端实现，通过客户端的路由处理来达到分布式解决方案的目的。客户端做路由的原理非常简单，应用服务器在每次存取某key的value时，通过某种算法把key映射到某台memcached服务器nodeA上，因此这个key所有操作都在nodeA上，结构图如图6、图7所示。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300959073.png" alt="image-20220621202928495" tabindex="0" loading="lazy"><figcaption>image-20220621202928495</figcaption></figure>
<p>图6 memcached客户端路由图</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300959100.png" alt="image-20220621202947235" tabindex="0" loading="lazy"><figcaption>image-20220621202947235</figcaption></figure>
<p>图7 memcached一致性hash示例图</p>
<p>memcached客户端采用一致性hash算法作为路由策略，如图7，相对于一般hash（如简单取模）的算法，一致性hash算法除了计算key的hash值外，还会计算每个server对应的hash值，然后将这些hash值映射到一个有限的值域上（比如0~2^32）。通过寻找hash值大于hash(key)的最小server作为存储该key数据的目标server。如果找不到，则直接把具有最小hash值的server作为目标server。同时，一定程度上，解决了扩容问题，增加或删除单个节点，对于整个集群来说，不会有大的影响。最近版本，增加了虚拟节点的设计，进一步提升了可用性。</p>
<p>memcached是一个高效的分布式内存cache，了解memcached的内存管理机制，才能更好的掌握memcached，让我们可以针对我们数据特点进行调优，让其更好的为我所用。我们知道memcached仅支持基础的key-value键值对类型数据存储。在memcached内存结构中有两个非常重要的概念：slab和chunk。如图8所示。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300959126.png" alt="image-20220621203132597" tabindex="0" loading="lazy"><figcaption>image-20220621203132597</figcaption></figure>
<p>图8 memcached内存结构图</p>
<p>slab是一个内存块，它是memcached一次申请内存的最小单位。在启动memcached的时候一般会使用参数-m指定其可用内存，但是并不是在启动的那一刻所有的内存就全部分配出去了，只有在需要的时候才会去申请，而且每次申请一定是一个slab。Slab的大小固定为1M（1048576 Byte），一个slab由若干个大小相等的chunk组成。每个chunk中都保存了一个item结构体、一对key和value。</p>
<p>虽然在同一个slab中chunk的大小相等的，但是在不同的slab中chunk的大小并不一定相等，在memcached中按照chunk的大小不同，可以把slab分为很多种类（class），默认情况下memcached把slab分为40类（class1～class40），在class 1中，chunk的大小为80字节，由于一个slab的大小是固定的1048576字节（1M），因此在class1中最多可以有13107个chunk（也就是这个slab能存最多13107个小于80字节的key-value数据）。</p>
<p>memcached内存管理采取预分配、分组管理的方式，分组管理就是我们上面提到的slab class，按照chunk的大小slab被分为很多种类。内存预分配过程是怎样的呢? 向memcached添加一个item时候，memcached首先会根据item的大小，来选择最合适的slab class：例如item的大小为190字节，默认情况下class 4的chunk大小为160字节显然不合适，class 5的chunk大小为200字节，大于190字节，因此该item将放在class 5中（显然这里会有10字节的浪费是不可避免的），计算好所要放入的chunk之后，memcached会去检查该类大小的chunk还有没有空闲的，如果没有，将会申请1M（1个slab）的空间并划分为该种类chunk。例如我们第一次向memcached中放入一个190字节的item时，memcached会产生一个slab class 2（也叫一个page），并会用去一个chunk，剩余5241个chunk供下次有适合大小item时使用，当我们用完这所有的5242个chunk之后，下次再有一个在160～200字节之间的item添加进来时，memcached会再次产生一个class 5的slab（这样就存在了2个pages）。</p>
<p>总结来看，memcached内存管理需要注意的几个方面：</p>
<ul>
<li>chunk是在page里面划分的，而page固定为1m，所以chunk最大不能超过1m。</li>
<li>chunk实际占用内存要加48B，因为chunk数据结构本身需要占用48B。</li>
<li>如果用户数据大于1m，则memcached会将其切割，放到多个chunk内。</li>
<li>已分配出去的page不能回收。</li>
</ul>
<p>对于key-value信息，最好不要超过1m的大小；同时信息长度最好相对是比较均衡稳定的，这样能够保障最大限度的使用内存；同时，memcached采用的LRU清理策略，合理甚至过期时间，提高命中率。</p>
<p>无特殊场景下，key-value能满足需求的前提下，使用memcached分布式集群是较好的选择，搭建与操作使用都比较简单；分布式集群在单点故障时，只影响小部分数据异常，目前还可以通过Magent缓存代理模式，做单点备份，提升高可用；整个缓存都是基于内存的，因此响应时间是很快，不需要额外的序列化、反序列化的程序，但同时由于基于内存，数据没有持久化，集群故障重启数据无法恢复。高版本的memcached已经支持CAS模式的原子操作，可以低成本的解决并发控制问题。</p>
<h2>3. 分布式缓存的实现技术</h2>
<blockquote>
<p>在分布式缓存的实现方案中，有哪些常见的技术实现要点呢？从Redis的视角看，在它的实现中主要包含如下实现技术要点:</p>
</blockquote>
<ul>
<li>持久化：RDB和AOF机制详解
<ul>
<li>为了防止数据丢失以及服务重启时能够恢复数据，Redis支持数据的持久化，主要分为两种方式，分别是RDB和AOF; 当然实际场景下还会使用这两种的混合模式。</li>
</ul>
</li>
<li>消息传递：发布订阅模式详解
<ul>
<li>Redis 发布订阅(pub/sub)是一种消息通信模式：发送者(pub)发送消息，订阅者(sub)接收消息。</li>
</ul>
</li>
<li>事件：Redis事件机制详解
<ul>
<li>Redis 采用事件驱动机制来处理大量的网络IO。它并没有使用 libevent 或者 libev 这样的成熟开源方案，而是自己实现一个非常简洁的事件驱动库 ae_event。</li>
</ul>
</li>
<li>事务：Redis事务详解
<ul>
<li>Redis 事务的本质是一组命令的集合。事务支持一次执行多个命令，一个事务中所有命令都会被序列化。在事务执行过程，会按照顺序串行化执行队列中的命令，其他客户端提交的命令请求不会插入到事务执行命令序列中。</li>
</ul>
</li>
<li>高可用：主从复制详解
<ul>
<li>我们知道要避免单点故障，即保证高可用，便需要冗余（副本）方式提供集群服务。而Redis 提供了主从库模式，以保证数据副本的一致，主从库之间采用的是读写分离的方式。本文主要阐述Redis的主从复制。</li>
</ul>
</li>
<li>高可用：哨兵机制（Redis Sentinel）详解
<ul>
<li>在上文主从复制的基础上，如果注节点出现故障该怎么办呢？ 在 Redis 主从集群中，哨兵机制是实现主从库自动切换的关键机制，它有效地解决了主从复制模式下故障转移的问题。</li>
</ul>
</li>
<li>高可拓展：分片技术（Redis Cluster）详解
<ul>
<li>前面两篇文章，主从复制和哨兵机制保障了高可用，就读写分离而言虽然slave节点来扩展主从的读并发能力，但是写能力和存储能力是无法进行扩展的，就只能是master节点能够承载的上限。如果面对海量数据那么必然需要构建master（主节点分片)之间的集群，同时必然需要吸收高可用（主从复制和哨兵机制）能力，即每个master分片节点还需要有slave节点，这是分布式系统中典型的纵向扩展（集群的分片技术）的体现；所以在Redis 3.0版本中对应的设计就是Redis Cluster。</li>
</ul>
</li>
</ul>
<h2>4. 分布式缓存中常见的问题和解决方案</h2>
<blockquote>
<p>缓存中存在的问题如下，具体可以看：Redis进阶 - 缓存问题：一致性, 穿击, 穿透, 雪崩, 污染等</p>
</blockquote>
<ul>
<li>缓存穿透问题</li>
<li>缓存击穿问题</li>
<li>缓存雪崩问题</li>
<li>缓存污染（或满了）
<ul>
<li>最大缓存设置多大</li>
<li>缓存淘汰策略</li>
</ul>
</li>
<li>数据库和缓存一致性问题
<ul>
<li>4种相关模式
<ul>
<li>Cache aside</li>
<li>Read through</li>
<li>Write through</li>
<li>Write behind caching</li>
</ul>
</li>
<li>方案：队列 + 重试机制</li>
<li>方案：异步更新缓存(基于订阅binlog的同步机制)</li>
</ul>
</li>
</ul>
<h2>参考文章</h2>
<p><a href="https://pdai.tech/md/arch/arch-z-cache.html" target="_blank" rel="noopener noreferrer">分布式系统 - 分布式缓存及方案实现</a></p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404300959028.png" type="image/png"/>
    </item>
    <item>
      <title>分布式系统-分布式任务及实现方案</title>
      <link>https://mrjackc.github.io/posts/Architect/distributed/arch-z-job.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/distributed/arch-z-job.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">分布式系统-分布式任务及实现方案</source>
      <description>分布式系统-分布式任务及实现方案 本文主要介绍定时任务的基础和单体方式下定时任务方案的演化，以及常见的分布式任务方案和技术实现要点 1. 定时任务和分布式任务介绍 主要介绍定时任务及其方案和演化。 1.1 定时任务应用场景 比如每天/每周/每月生成日志汇总，定时发送推送信息，定时生成数据表格等 1.2 定时任务的基础Cron Cron表达式是定时任务的...</description>
      <category>架构</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<blockquote>
<p>本文主要介绍定时任务的基础和单体方式下定时任务方案的演化，以及常见的分布式任务方案和技术实现要点</p>
</blockquote>
<h2>1. 定时任务和分布式任务介绍</h2>
<blockquote>
<p>主要介绍定时任务及其方案和演化。</p>
</blockquote>
<h3>1.1 定时任务应用场景</h3>
<p>比如每天/每周/每月生成日志汇总，定时发送推送信息，定时生成数据表格等</p>
<h3>1.2 定时任务的基础Cron</h3>
<blockquote>
<p>Cron表达式是定时任务的基础。Cron表达式是一个字符串，字符串以5或6个空格隔开，分为6或7个域，每一个域代表一个含义，Cron有如下两种语法格式：</p>
</blockquote>
<ul>
<li>Seconds Minutes Hours DayofMonth Month DayofWeek Year</li>
<li>Seconds Minutes Hours DayofMonth Month DayofWeek</li>
</ul>
<p>具体可以看如下文章：</p>
<ul>
<li><a href="https://pdai.tech/md/develop/cron/dev-cron-x-usage.html" target="_blank" rel="noopener noreferrer">CRON表达式 - CRON表达式介绍和使用</a>
<ul>
<li>定时任务和CRON表达式在开发中使用也非常广泛，本文整理了CRON表达式和常见使用例子</li>
</ul>
</li>
<li><a href="https://pdai.tech/md/develop/cron/dev-cron-x-tools.html" target="_blank" rel="noopener noreferrer">CRON表达式 - CRON生成和校验工具</a>
<ul>
<li>本文主要总结常用的在线CRON生成和校验工具，从而高效的写出正确的表达式</li>
</ul>
</li>
</ul>
<h3>1.3 单体应用定时任务的演化</h3>
<blockquote>
<p>单体中定时任务的演化大概如下，（后续章节逐步介绍分布式场景下的方案）</p>
</blockquote>
<h4>1.3.1 cron+脚本定时任务</h4>
<ul>
<li>Linux定时任务工具crontb</li>
</ul>
<h4>1.3.2 JDK内置之Timer</h4>
<blockquote>
<p>JDK内置的Timer, 现在很少被使用。</p>
</blockquote>
<p><strong>简单示例如下</strong></p>
<p>执行定时任务，延迟1秒开始执行。</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SneakyThrows</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> timer</span><span style="color:#E06C75;--shiki-dark:#E06C75">() {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // start timer</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Timer</span><span style="color:#E06C75;--shiki-dark:#E06C75"> timer </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Timer</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    timer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">schedule</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> TimerTask</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> run</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">info</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"timer-task @{}"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">LocalDateTime</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">now</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }, </span><span style="color:#D19A66;--shiki-dark:#D19A66">1000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // waiting to process(sleep to mock)</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Thread</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">sleep</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">3000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // stop timer</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    timer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">cancel</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">10</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#D19A66;--shiki-dark:#D19A66">05</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#D19A66;--shiki-dark:#D19A66">47.440</span><span style="color:#E06C75;--shiki-dark:#E06C75"> [Timer</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#E06C75;--shiki-dark:#E06C75">] </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">INFO</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> tech</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">pdai</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">springboot</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">schedule</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">timer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">timertest</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">TimerTester</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> -</span><span style="color:#E06C75;--shiki-dark:#E06C75"> timer</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E06C75;--shiki-dark:#E06C75">task </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">2021</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#D19A66;--shiki-dark:#D19A66">10</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E06C75;--shiki-dark:#E06C75">01T20</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#D19A66;--shiki-dark:#D19A66">05</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#D19A66;--shiki-dark:#D19A66">47.436</span></span></code></pre>
</div><p><strong>schedule 和 scheduleAtFixedRate 有何区别</strong>？</p>
<ul>
<li><strong>schedule</strong>：每次执行完当前任务后，然后间隔一个period的时间再执行下一个任务； 当某个任务执行周期大于时间间隔时，依然按照间隔时间执行下个任务，即它<strong>保证了任务之间执行的间隔</strong>。</li>
<li><strong>scheduleAtFixedRate</strong>：每次执行时间为上一次任务开始起向后推一个period间隔，也就是说下次执行时间相对于上一次任务开始的时间点；按照上述的例子，它<strong>保证了总时间段内的任务的执行次数</strong></li>
</ul>
<h5>1.3.2.1 <strong>为什么几乎很少使用Timer这种方式</strong>？</h5>
<p>Timer底层是使用一个单线程来实现多个Timer任务处理的，所有任务都是由同一个线程来调度，所有任务都是串行执行，意味着同一时间只能有一个任务得到执行，而前一个任务的延迟或者异常会影响到之后的任务。</p>
<p>如果有一个定时任务在运行时，产生未处理的异常，那么当前这个线程就会停止，那么所有的定时任务都会停止，受到影响。</p>
<h4>1.3.3 JDK内置之ScheduledExecutorService</h4>
<blockquote>
<p>ScheduledExecutorService是基于线程池的实现方式。</p>
</blockquote>
<p><strong>简单案例如下</strong></p>
<p>延迟1秒执行一个进程任务。</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SneakyThrows</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> schedule</span><span style="color:#E06C75;--shiki-dark:#E06C75">() {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    ScheduledExecutorService</span><span style="color:#E06C75;--shiki-dark:#E06C75"> executor </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Executors</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">newScheduledThreadPool</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    executor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">schedule</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Runnable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SneakyThrows</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> run</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">info</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"run schedule @ {}"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">LocalDateTime</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">now</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            },</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">            1000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            TimeUnit</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">MILLISECONDS</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // waiting to process(sleep to mock)</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Thread</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">sleep</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">10000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // stop</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    executor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">shutdown</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">21</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#D19A66;--shiki-dark:#D19A66">07</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#D19A66;--shiki-dark:#D19A66">02</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#FFFFFF;--shiki-dark:#FFFFFF">047</span><span style="color:#E06C75;--shiki-dark:#E06C75"> [pool</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E06C75;--shiki-dark:#E06C75">thread</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#E06C75;--shiki-dark:#E06C75">] </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">INFO</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> tech</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">pdai</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">springboot</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">schedule</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">executorservice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ScheduleExecutorServiceDemo</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> -</span><span style="color:#E06C75;--shiki-dark:#E06C75"> run schedule </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> 2022</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#D19A66;--shiki-dark:#D19A66">03</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E06C75;--shiki-dark:#E06C75">10T21</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#D19A66;--shiki-dark:#D19A66">07</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#D19A66;--shiki-dark:#D19A66">02</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#FFFFFF;--shiki-dark:#FFFFFF">046</span></span></code></pre>
</div><h5>1.3.3.2 <strong>为什么用ScheduledExecutorService 代替 Timer</strong>？</h5>
<p>上文我们说到Timer底层是使用一个单线程来实现多个Timer任务处理的，所有任务都是由同一个线程来调度，所有任务都是串行执行，意味着同一时间只能有一个任务得到执行，而前一个任务的延迟或者异常会影响到之后的任务。</p>
<p>如果有一个定时任务在运行时，产生未处理的异常，那么当前这个线程就会停止，那么所有的定时任务都会停止，受到影响。</p>
<p>而ScheduledExecutorService是基于线程池的，可以开启多个线程进行执行多个任务，每个任务开启一个线程； 这样任务的延迟和未处理异常就不会影响其它任务的执行了。</p>
<h3>1.4 Netty之HashedWheelTimer</h3>
<blockquote>
<p>时间轮(Timing Wheel)是George Varghese和Tony Lauck在1996年的论文'<a href="https://www.cse.wustl.edu/~cdgill/courses/cs6874/TimingWheels.ppt" target="_blank" rel="noopener noreferrer">Hashed and Hierarchical Timing Wheels: data structures to efficiently implement a timer facility  (opens new window)</a>'实现的，它在Linux内核中使用广泛，是Linux内核定时器的实现方法和基础之一。</p>
</blockquote>
<p>时间轮(Timing Wheel)是一种环形的数据结构，就像一个时钟可以分成很多格子（Tick)，每个格子代表时间的间隔，它指向存储的具体任务（timerTask）的一个链表。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301002652.png" alt="image-20220622220737670" tabindex="0" loading="lazy"><figcaption>image-20220622220737670</figcaption></figure>
<p>以上述在论文中的图片例子，这里一个轮子包含8个格子（Tick), 每个tick是一秒钟；</p>
<p><strong>任务的添加</strong>：如果一个任务要在17秒后执行，那么它需要转2轮，最终加到Tick=1位置的链表中。</p>
<p><strong>任务的执行</strong>：在时钟转2Round到Tick=1的位置，开始执行这个位置指向的链表中的这个任务。（# 这里表示剩余需要转几轮再执行这个任务）</p>
<ul>
<li><strong>Netty的HashedWheelTimer要解决什么问题</strong></li>
</ul>
<p>在Netty中的一个典型应用场景是判断某个连接是否idle，如果idle（如客户端由于网络原因导致到服务器的心跳无法送达），则服务器会主动断开连接，释放资源。判断连接是否idle是通过定时任务完成的，但是Netty可能维持数百万级别的长连接，对每个连接去定义一个定时任务是不可行的，所以如何提升I/O超时调度的效率呢？</p>
<p>Netty根据时间轮(Timing Wheel)开发了HashedWheelTimer工具类，用来优化I/O超时调度(本质上是延迟任务）；之所以采用时间轮(Timing Wheel)的结构还有一个很重要的原因是I/O超时这种类型的任务对时效性不需要非常精准。</p>
<ul>
<li><strong>HashedWheelTimer的使用方式</strong></li>
</ul>
<p>通过构造函数看主要参数</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> HashedWheelTimer</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        ThreadFactory</span><span style="color:#E06C75;--shiki-dark:#E06C75"> threadFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> tickDuration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> TimeUnit</span><span style="color:#E06C75;--shiki-dark:#E06C75"> unit</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#C678DD;--shiki-dark:#C678DD"> int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> ticksPerWheel</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#C678DD;--shiki-dark:#C678DD"> boolean</span><span style="color:#E06C75;--shiki-dark:#E06C75"> leakDetection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> maxPendingTimeouts</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Executor</span><span style="color:#E06C75;--shiki-dark:#E06C75"> taskExecutor) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
</div><p>具体参数说明如下：</p>
<ul>
<li><code>threadFactory</code>：线程工厂，用于创建工作线程， 默认是Executors.defaultThreadFactory()</li>
<li><code>tickDuration</code>：tick的周期，即多久tick一次</li>
<li><code>unit</code>: tick周期的单位</li>
<li><code>ticksPerWheel</code>：时间轮的长度，一圈下来有多少格</li>
<li><code>leakDetection</code>：是否开启内存泄漏检测，默认是true</li>
<li><code>maxPendingTimeouts</code>：最多执行的任务数，默认是-1，即不限制。在高并发量情况下才会设置这个参数。</li>
</ul>
<h3>1.5 Spring Tasks</h3>
<blockquote>
<p>Spring提供的schedule任务，更多内容和集成可以看：<a href="https://pdai.tech/md/spring/springboot/springboot-x-task-spring-task-timer.html" target="_blank" rel="noopener noreferrer">SpringBoot集成定时任务 - Spring tasks实现方式</a></p>
</blockquote>
<p>具体使用方式如下：</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">EnableScheduling</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Configuration</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ScheduleDemo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 每隔1分钟执行一次。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Scheduled</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">fixedRate</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1000</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> *</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 60</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> *</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> runScheduleFixedRate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">info</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"runScheduleFixedRate: current DateTime, {}"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">LocalDateTime</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">now</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 每个整点小时执行一次。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Scheduled</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">cron</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "0 0 */1 * * ?"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> runScheduleCron</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">info</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"runScheduleCron: current DateTime, {}"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">LocalDateTime</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">now</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li><strong>@Scheduled所支持的参数</strong>：</li>
</ul>
<ol>
<li><code>cron</code>：cron表达式，指定任务在特定时间执行；</li>
<li><code>fixedDelay</code>：表示上一次任务执行完成后多久再次执行，参数类型为long，单位ms；</li>
<li><code>fixedDelayString</code>：与fixedDelay含义一样，只是参数类型变为String；</li>
<li><code>fixedRate</code>：表示按一定的频率执行任务，参数类型为long，单位ms；</li>
<li><code>fixedRateString</code>: 与fixedRate的含义一样，只是将参数类型变为String；</li>
<li><code>initialDelay</code>：表示延迟多久再第一次执行任务，参数类型为long，单位ms；</li>
<li><code>initialDelayString</code>：与initialDelay的含义一样，只是将参数类型变为String；</li>
<li><code>zone</code>：时区，默认为当前时区，一般没有用到。</li>
</ol>
<h3>1.6 Quartz</h3>
<p>Quartz是OpenSymphony开源组织在Job scheduling领域又一个开源项目，它可以与J2EE与J2SE应用程序相结合也可以单独使用。Quartz可以用来创建简单或为运行十个，百个，甚至是好几万个Jobs这样复杂的程序。Jobs可以做成标准的Java组件或 EJBs。</p>
<p><strong>它的特点如下</strong></p>
<ul>
<li>纯java实现，可以作为独立的应用程序，也可以嵌入在另一个独立式应用程序运行</li>
<li>强大的调度功能，Spring默认的调度框架，灵活可配置；</li>
<li>作业持久化，调度环境持久化机制，可以保存并恢复调度现场。系统关闭数据不会丢失；灵活的应用方式，可以任意定义触发器的调度时间表，支持任务和调度各种组合，组件式监听器、各种插件、线程池等功能，多种存储方式等；</li>
<li>分布式和集群能力，可以被实例化，一个Quartz集群中的每个节点作为一个独立的Quartz使用，通过相同的数据库表来感知到另一个Quartz应用</li>
</ul>
<h4>1.6.1 <strong>Quartz的体系结构</strong></h4>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301002697.png" alt="image-20220622222458113" tabindex="0" loading="lazy"><figcaption>image-20220622222458113</figcaption></figure>
<ul>
<li><strong>Job</strong> 表示一个工作，要执行的具体内容。</li>
<li><strong>JobDetail</strong> 表示一个具体的可执行的调度程序，Job 是这个可执行程调度程序所要执行的内容，另外 JobDetail 还包含了这个任务调度的方案和策略。</li>
<li><strong>Trigger</strong> 代表一个调度参数的配置，什么时候去调。</li>
<li><strong>Scheduler</strong> 代表一个调度容器，一个调度容器中可以注册多个 JobDetail 和 Trigger。当 Trigger 与 JobDetail 组合，就可以被 Scheduler 容器调度了。</li>
</ul>
<h2>2. 分布式任务的方案</h2>
<blockquote>
<p>常见的分布式任务的方案有：Quartz Cluster，XXL-Job，Elastic-Job等。</p>
<p>综合<strong>代码质量，License, 维护方，拓展性</strong>等，选择的建议：</p>
<ol>
<li>如果仅是小团队内部自用，可以采用XXL-Job</li>
<li>如果是稍大一点的团队，建议使用ElasticJob或者基于ElasticJob进行二次开发</li>
<li>如果是团队具备自研能力，可以参考后续的章节（分布式任务的技术要点）设计和自研</li>
</ol>
</blockquote>
<h3>2.1 Quartz Cluster</h3>
<blockquote>
<p>Quartz 提供的持久化方式，更多内容和集成可以看</p>
</blockquote>
<h4>2.1.1 为什么要持久化？</h4>
<p>当程序突然被中断时，如断电，内存超出时，很有可能造成任务的丢失。 可以将调度信息存储到数据库里面，进行持久化，当程序被中断后，再次启动，仍然会保留中断之前的数据，继续执行，而并不是重新开始。</p>
<h4>2.1.2 <strong>Quartz提供了两种持久化方式</strong></h4>
<p>Quartz提供两种基本作业存储类型:</p>
<ol>
<li>
<p><strong>RAMJobStore</strong></p>
<p>在默认情况下Quartz将任务调度的运行信息保存在内存中，这种方法提供了最佳的性能，因为内存中数据访问最快。不足之处是缺乏数据的持久性，当程序路途停止或系统崩溃时，所有运行的信息都会丢失。</p>
</li>
<li>
<p><strong>JobStoreTX</strong></p>
<p>所有的任务信息都会保存到数据库中，可以控制事物，还有就是如果应用服务器关闭或者重启，任务信息都不会丢失，并且可以恢复因服务器关闭或者重启而导致执行失败的任务。</p>
</li>
</ol>
<h3>2.2 XXL-Job</h3>
<blockquote>
<p>XXL-JOB是一个分布式任务调度平台，其核心设计目标是开发迅速、学习简单、轻量级、易扩展。现已开放源代码并接入多家公司线上产品线，开箱即用。</p>
</blockquote>
<p>如下内容来源于<a href="https://www.xuxueli.com/xxl-job/" target="_blank" rel="noopener noreferrer">xxl-job官网</a>; 支持如下特性：</p>
<ul>
<li>1、简单：支持通过Web页面对任务进行CRUD操作，操作简单，一分钟上手；</li>
<li>2、动态：支持动态修改任务状态、启动/停止任务，以及终止运行中任务，即时生效；</li>
<li>3、调度中心HA（中心式）：调度采用中心式设计，“调度中心”自研调度组件并支持集群部署，可保证调度中心HA；</li>
<li>4、执行器HA（分布式）：任务分布式执行，任务"执行器"支持集群部署，可保证任务执行HA；</li>
<li>5、注册中心: 执行器会周期性自动注册任务, 调度中心将会自动发现注册的任务并触发执行。同时，也支持手动录入执行器地址；</li>
<li>6、弹性扩容缩容：一旦有新执行器机器上线或者下线，下次调度时将会重新分配任务；</li>
<li>7、触发策略：提供丰富的任务触发策略，包括：Cron触发、固定间隔触发、固定延时触发、API（事件）触发、人工触发、父子任务触发；</li>
<li>8、调度过期策略：调度中心错过调度时间的补偿处理策略，包括：忽略、立即补偿触发一次等；</li>
<li>9、阻塞处理策略：调度过于密集执行器来不及处理时的处理策略，策略包括：单机串行（默认）、丢弃后续调度、覆盖之前调度；</li>
<li>10、任务超时控制：支持自定义任务超时时间，任务运行超时将会主动中断任务；</li>
<li>11、任务失败重试：支持自定义任务失败重试次数，当任务失败时将会按照预设的失败重试次数主动进行重试；其中分片任务支持分片粒度的失败重试；</li>
<li>12、任务失败告警；默认提供邮件方式失败告警，同时预留扩展接口，可方便的扩展短信、钉钉等告警方式；</li>
<li>13、路由策略：执行器集群部署时提供丰富的路由策略，包括：第一个、最后一个、轮询、随机、一致性HASH、最不经常使用、最近最久未使用、故障转移、忙碌转移等；</li>
<li>14、分片广播任务：执行器集群部署时，任务路由策略选择"分片广播"情况下，一次任务调度将会广播触发集群中所有执行器执行一次任务，可根据分片参数开发分片任务；</li>
<li>15、动态分片：分片广播任务以执行器为维度进行分片，支持动态扩容执行器集群从而动态增加分片数量，协同进行业务处理；在进行大数据量业务操作时可显著提升任务处理能力和速度。</li>
<li>16、故障转移：任务路由策略选择"故障转移"情况下，如果执行器集群中某一台机器故障，将会自动Failover切换到一台正常的执行器发送调度请求。</li>
<li>17、任务进度监控：支持实时监控任务进度；</li>
<li>18、Rolling实时日志：支持在线查看调度结果，并且支持以Rolling方式实时查看执行器输出的完整的执行日志；</li>
<li>19、GLUE：提供Web IDE，支持在线开发任务逻辑代码，动态发布，实时编译生效，省略部署上线的过程。支持30个版本的历史版本回溯。</li>
<li>20、脚本任务：支持以GLUE模式开发和运行脚本任务，包括Shell、Python、NodeJS、PHP、PowerShell等类型脚本;</li>
<li>21、命令行任务：原生提供通用命令行任务Handler（Bean任务，"CommandJobHandler"）；业务方只需要提供命令行即可；</li>
<li>22、任务依赖：支持配置子任务依赖，当父任务执行结束且执行成功后将会主动触发一次子任务的执行, 多个子任务用逗号分隔；</li>
<li>23、一致性：“调度中心”通过DB锁保证集群分布式调度的一致性, 一次任务调度只会触发一次执行；</li>
<li>24、自定义任务参数：支持在线配置调度任务入参，即时生效；</li>
<li>25、调度线程池：调度系统多线程触发调度运行，确保调度精确执行，不被堵塞；</li>
<li>26、数据加密：调度中心和执行器之间的通讯进行数据加密，提升调度信息安全性；</li>
<li>27、邮件报警：任务失败时支持邮件报警，支持配置多邮件地址群发报警邮件；</li>
<li>28、推送maven中央仓库: 将会把最新稳定版推送到maven中央仓库, 方便用户接入和使用;</li>
<li>29、运行报表：支持实时查看运行数据，如任务数量、调度次数、执行器数量等；以及调度报表，如调度日期分布图，调度成功分布图等；</li>
<li>30、全异步：任务调度流程全异步化设计实现，如异步调度、异步运行、异步回调等，有效对密集调度进行流量削峰，理论上支持任意时长任务的运行；</li>
<li>31、跨语言：调度中心与执行器提供语言无关的 RESTful API 服务，第三方任意语言可据此对接调度中心或者实现执行器。除此之外，还提供了 “多任务模式”和“httpJobHandler”等其他跨语言方案；</li>
<li>32、国际化：调度中心支持国际化设置，提供中文、英文两种可选语言，默认为中文；</li>
<li>33、容器化：提供官方docker镜像，并实时更新推送dockerhub，进一步实现产品开箱即用；</li>
<li>34、线程池隔离：调度线程池进行隔离拆分，慢任务自动降级进入"Slow"线程池，避免耗尽调度线程，提高系统稳定性；</li>
<li>35、用户管理：支持在线管理系统用户，存在管理员、普通用户两种角色；</li>
<li>36、权限控制：执行器维度进行权限控制，管理员拥有全量权限，普通用户需要分配执行器权限后才允许相关操作；</li>
</ul>
<h4>2.2.1 xxl-job的架构设计</h4>
<h5>2.2.1.1 设计思想</h5>
<p>将调度行为抽象形成“调度中心”公共平台，而平台自身并不承担业务逻辑，“调度中心”负责发起调度请求。</p>
<p>将任务抽象成分散的JobHandler，交由“执行器”统一管理，“执行器”负责接收调度请求并执行对应的JobHandler中业务逻辑。</p>
<p>因此，“调度”和“任务”两部分可以相互解耦，提高系统整体稳定性和扩展性；</p>
<h5>2.2.1.2 系统组成</h5>
<ol>
<li>
<p>调度模块</p>
<p>（调度中心）</p>
<ol>
<li>负责管理调度信息，按照调度配置发出调度请求，自身不承担业务代码。调度系统与任务解耦，提高了系统可用性和稳定性，同时调度系统性能不再受限于任务模块；</li>
<li>支持可视化、简单且动态的管理调度信息，包括任务新建，更新，删除，GLUE开发和任务报警等，所有上述操作都会实时生效，同时支持监控调度结果以及执行日志，支持执行器Failover。</li>
</ol>
</li>
<li>
<p>执行模块</p>
<p>（执行器）：</p>
<ol>
<li>负责接收调度请求并执行任务逻辑。任务模块专注于任务的执行等操作，开发和维护更加简单和高效；</li>
<li>接收“调度中心”的执行请求、终止请求和日志请求等</li>
</ol>
</li>
</ol>
<h5>2.2.1.3 架构图</h5>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301002721.png" alt="image-20220622224456185" tabindex="0" loading="lazy"><figcaption>image-20220622224456185</figcaption></figure>
<h3>2.3 Elastic-Job</h3>
<blockquote>
<p>ElasticJob 是面向互联网生态和海量任务的分布式调度解决方案，由两个相互独立的子项目 ElasticJob-Lite 和 ElasticJob-Cloud 组成。 它通过弹性调度、资源管控、以及作业治理的功能，打造一个适用于互联网场景的分布式调度解决方案，并通过开放的架构设计，提供多元化的作业生态。 它的各个产品使用统一的作业 API，开发者仅需一次开发，即可随意部署。ElasticJob 已于 2020 年 5 月 28 日成为 Apache ShardingSphere 的子项目。</p>
</blockquote>
<p>使用 ElasticJob 能够让开发工程师不再担心任务的线性吞吐量提升等非功能需求，使他们能够更加专注于面向业务编码设计； 同时，它也能够解放运维工程师，使他们不必再担心任务的可用性和相关管理需求，只通过轻松的增加服务节点即可达到自动化运维的目的。</p>
<p><strong>ElasticJob-Lite</strong>: 定位为轻量级无中心化解决方案，使用 jar 的形式提供分布式任务的协调服务。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301002747.png" alt="image-20220622224644115" tabindex="0" loading="lazy"><figcaption>image-20220622224644115</figcaption></figure>
<p><strong>ElasticJob-Cloud</strong>： 采用自研 Mesos Framework 的解决方案，额外提供资源治理、应用分发以及进程隔离等功能。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301002766.png" alt="image-20220622224701923" tabindex="0" loading="lazy"><figcaption>image-20220622224701923</figcaption></figure>
<p><strong>ElasticJob-Lite和ElasticJob-Cloud的区别</strong></p>
<p>|          | ElasticJob-Lite | ElasticJob-Cloud  |<br>
|</p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301002652.png" type="image/png"/>
    </item>
    <item>
      <title>分布式系统 -  Redisson实现分布式锁原理</title>
      <link>https://mrjackc.github.io/posts/Architect/distributed/arch-z-lock-redisson.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/distributed/arch-z-lock-redisson.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">分布式系统 -  Redisson实现分布式锁原理</source>
      <description>分布式系统 - Redisson实现分布式锁原理 image-20221216152713896image-20221216152713896 0. 前言 在一个分布式系统中，由于涉及到多个实例同时对同一个资源加锁的问题，像传统的synchronized、ReentrantLock等单进程情况加锁的api就不再适用，需要使用分布式锁来保证多服务实例之间...</description>
      <category>架构</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301004792.png" alt="image-20221216152713896" tabindex="0" loading="lazy"><figcaption>image-20221216152713896</figcaption></figure>
<h2>0. 前言</h2>
<p>在一个分布式系统中，由于涉及到多个实例同时对同一个资源加锁的问题，像传统的synchronized、ReentrantLock等单进程情况加锁的api就不再适用，需要使用分布式锁来保证多服务实例之间加锁的安全性。常见的分布式锁的实现方式有zookeeper和redis等。而由于redis分布式锁相对于比较简单，在实际的项目中，redis分布式锁被用于很多实际的业务场景中。</p>
<p>redis分布式锁的实现中又以Redisson比较出名，所以本文来着重看一下Redisson是如何实现分布式锁的，以及Redisson提供了哪些其它的功能。</p>
<h2>1. 如何保证加锁的原子性</h2>
<blockquote>
<p>Redisson实现加锁的原子性是依赖lua脚本来实现的</p>
<p>PS:Redisson 的最终加锁是由Lua脚本来实现的，redis在执行lua脚本的时候是可以保证加锁的原子性的</p>
</blockquote>
<p>说到redis的分布式锁，可能第一时间就想到了setNx命令，这个命令保证一个key同时只能有一个线程设置成功，这样就能实现加锁的互斥性。但是Redisson并没有通过setNx命令来实现加锁，而是自己实现了一套完成的加锁的逻辑。</p>
<p>Redisson的加锁使用代码如下，接下来会有几节着重分析一下这段代码逻辑背后实现的原理。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301004838.png" alt="image-20221216153411470" tabindex="0" loading="lazy"><figcaption>image-20221216153411470</figcaption></figure>
<p>先通过RedissonClient，传入锁的名称，拿到一个RLock，然后通过RLock实现加锁和释放锁。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301004864.png" alt="image-20221216153429479" tabindex="0" loading="lazy"><figcaption>image-20221216153429479</figcaption></figure>
<p>getLock获得的RLock接口的实现是RedissonLock，所以我们看一下RedissonLock对lock()方法的实现。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301004883.png" alt="image-20221216153454064" tabindex="0" loading="lazy"><figcaption>image-20221216153454064</figcaption></figure>
<p>lock方法会调用重载的lock方法，传入的leaseTime为-1，调用到这个lock方法，之后会调用tryAcquire实现加锁的逻辑。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301004906.png" alt="image-20221216153651580" tabindex="0" loading="lazy"><figcaption>image-20221216153651580</figcaption></figure>
<p>tryAcquire最后会调到tryAcquireAsync方法，传入了leaseTime和当前加锁线程的id。tryAcquire和tryAcquireAsync的区别就是tryAcquireAsync是异步执行，而tryAcquire是同步等待tryAcquireAsync的结果，也就是异步转同步的过程。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301004930.png" alt="image-20221216153755162" tabindex="0" loading="lazy"><figcaption>image-20221216153755162</figcaption></figure>
<p>tryAcquireAsync方法会根据leaseTime是不是-1来判断使用哪个分支加锁，其实不论走哪个分支，最后都是调用tryLockInnerAsync方法来实现加锁，只不过是参数不同罢了。但是我们这里的leaseTime其实就是-1，所以会走下面的分支，尽管传入到tryAcquireAsync的leaseTime是-1，但是在调用tryLockInnerAsync方法传入的leaseTime参数是internalLockLeaseTime，默认是30s。</p>
<p>tryLockInnerAsync方法。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301004948.png" alt="image-20221216153908319" tabindex="0" loading="lazy"><figcaption>image-20221216153908319</figcaption></figure>
<p>通过tryLockInnerAsync方法的实现可以看出，最终加锁是通过一段lua脚本来实现加锁的，redis在执行lua脚本的时候是可以保证加锁的原子性的，所以Redisson实现加锁的原子性是依赖lua脚本来实现的。其实对于RedissonLock这个实现来说，最终实现加锁的逻辑都是通过tryLockInnerAsync来实现的。</p>
<p>来一张图总结一下lock方法加锁的调用逻辑。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301004973.png" alt="image-20221216153949830" tabindex="0" loading="lazy"><figcaption>image-20221216153949830</figcaption></figure>
<h2><strong>2. 如何通过lua脚本实现加锁</strong></h2>
<blockquote>
<p>lua脚本加锁逻辑：</p>
<ol>
<li>先调用redids的exist命令判断加锁的key存不存在</li>
<li>不存在(第一次加锁)</li>
<li>调用redis的hincrby的命令，设置加锁的key和加锁的某个客户端的某个线程，加锁次数设置为1（加锁次数是可重入的关键）</li>
<li>调用redis的pexpire的命令，将加锁的key过期时间设置为30s</li>
<li>存在</li>
<li>判断加锁的key是否是当前要加锁的线程，是的话加锁成功，对应的加锁次数加1（可重入实现）</li>
</ol>
</blockquote>
<p>通过上面分析可以看出，redis是通过执行lua脚本来实现加锁，保证加锁的原子性。那么接下来分析一下这段lua脚本干了什么。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301004991.png" alt="image-20221216154147848" tabindex="0" loading="lazy"><figcaption>image-20221216154147848</figcaption></figure>
<p>其中这段脚本中的lua脚本中的参数的意思：</p>
<ul>
<li>KEYS[1]：就是锁的名称，对于我们的demo来说，就是myLock</li>
<li>ARGV[1]：就是锁的过期时间，不指定的话默认是30s</li>
<li>ARGV[2]：代表了加锁的唯一标识，由UUID和线程id组成。一个Redisson客户端一个UUID，UUID代表了一个唯一的客户端。所以由UUID和线程id组成了加锁的唯一标识，可以理解为某个客户端的某个线程加锁。</li>
</ul>
<p>那么这些参数是怎么传过去的呢，其实是在这里。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301004018.png" alt="image-20221216154400005" tabindex="0" loading="lazy"><figcaption>image-20221216154400005</figcaption></figure>
<ul>
<li>getName：方法就是获取锁的名称</li>
<li>leaseTime：就是传入的锁的过期时间，如果指定超时时间就是指定的时间，没指定默认是30s</li>
<li>getLockName：就是获取加锁的客户端线程的唯一标识。</li>
</ul>
<h3>2.1 lua的加锁</h3>
<p>分析一下这段lua的加锁的逻辑。</p>
<ol>
<li>先调用redis的exists命令判断加锁的key存不存在，如果不存在的话，那么就进入if。不存在的意思就是还没有某个客户端的某个线程来加锁，第一次加锁肯定没有人来加锁，于是第一次if条件成立。</li>
<li>然后调用redis的hincrby的命令，设置加锁的key和加锁的某个客户端的某个线程，加锁次数设置为1，加锁次数很关键，是实现可重入锁特性的一个关键数据。用hash数据结构保存。hincrby命令完成后就形成如下的数据结构。</li>
</ol>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>myLock:{</span></span>
<span class="line"><span></span></span>
<span class="line"><span>"b983c153-7421-469a-addb-44fb92259a1b:1":1</span></span>
<span class="line"><span></span></span>
<span class="line"><span>}</span></span></code></pre>
</div><ol>
<li>最后调用redis的pexpire的命令，将加锁的key过期时间设置为30s。</li>
</ol>
<p>​	从这里可以看出，第一次有某个客户端的某个线程来加锁的逻辑还是挺简单的，就是判断有没有人加过锁，没有的话就自己去加锁，设置加锁的key，再存一下加锁的线程和加锁次数，设置一下锁的过期时间为30s。</p>
<h3>2.2 lua脚本加锁流程图</h3>
<p>画一张图来看一下lua脚本加锁的逻辑干了什么。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301004046.png" alt="image-20221216155034735" tabindex="0" loading="lazy"><figcaption>image-20221216155034735</figcaption></figure>
<p>至于第二段if是干什么的，我们后面再说。</p>
<h2>3. <strong>为什么需要设置加锁key的过期时间</strong></h2>
<blockquote>
<p>为了防止死锁</p>
</blockquote>
<p>通过上面的加锁逻辑可以知道，虽然我们没有手动设置锁的过期时间，但是Redisson默认会设置一个30s的过期时间，为什么需要过期时间呢？</p>
<p>主要原因是为了防止死锁。当某个客户端获取到锁，还没来得及主动释放锁，那么此时假如客户端宕机了，又或者是释放锁失败了，那么如果没有设置过期时间，那么这个锁key会一直在，那么其它线程来加锁的时候会发现key已经被加锁了，那么其它线程一直会加锁失败，就会产生死锁的问题。</p>
<h2>4.（看门狗）<strong>如何自动延长加锁时间</strong></h2>
<blockquote>
<p>加锁成功后，没有指定过期时间、客户端起一个定时任务、来定时延长加锁时间，默认每10s执行一次。所以watchdog的本质其实就是一个定时任务。</p>
</blockquote>
<p>通过上面的分析我们都知道，在加锁的时候，就算没有指定锁的过期时间，Redisson默认也会给锁设置30s的过期时间，主要是用来防止死锁。</p>
<p>虽然设置了默认过期时间能够防止死锁，但是这也有一个问题，如果在30s内，任务没有结束，但是锁已经被释放了，失效了，一旦有其它线程加锁成功，那么就完全有可能出现线程安全数据错乱的问题。</p>
<p>所以Redisson对于这种未指定超时时间的加锁，就实现了一个叫watchdog机制，也就是看门狗机制来自动延长加锁的时间。</p>
<p>在客户端通过tryLockInnerAsync方法加锁成功之后，如果你没有指定锁过期的时间，那么客户端会起一个定时任务，来定时延长加锁时间，默认每10s执行一次。所以watchdog的本质其实就是一个定时任务。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301004073.png" alt="image-20221216160948252" tabindex="0" loading="lazy"><figcaption>image-20221216160948252</figcaption></figure>
<p>最后会定期执行如下的一段lua脚本来实现加锁时间的延长。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301004097.png" alt="image-20221216161003382" tabindex="0" loading="lazy"><figcaption>image-20221216161003382</figcaption></figure>
<p>解释一下这段lua脚本中参数的意思，其实是跟加锁的参数的意思是一样</p>
<ul>
<li>KEYS[1]：就是锁的名称，对于我们的demo来说，就是myLock</li>
<li>ARGV[1]：就是锁的过期时间</li>
<li>ARGV[2]：代表了加锁的唯一标识，b983c153-7421-469a-addb-44fb92259a1b:1。</li>
</ul>
<p>这段lua脚本的意思就是判断来续约的线程跟加锁的线程是同一个，如果是同一个，那么将锁的过期时间延长到30s，然后返回1，代表续约成功，不是的话就返回0，代表续约失败，下一次定时任务也就不会执行了。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301004123.png" alt="image-20221216161259355" tabindex="0" loading="lazy"><figcaption>image-20221216161259355</figcaption></figure>
<blockquote>
<p>注意：因为有了看门狗机制，所以说如果你没有设置过期时间（超时自动释放锁的逻辑后面会说）并且没有主动去释放锁，那么这个锁就永远不会被释放，因为定时任务会不断的去延长锁的过期时间，造成死锁的问题。但是如果发生宕机了，是不会造成死锁的，因为宕机了，服务都没了，那么看门狗的这个定时任务就没了，也自然不会去续约，等锁自动过期了也就自动释放锁了，跟上述说的为什么需要设置过期时间是一样的。</p>
</blockquote>
<h2>5. <strong>如何实现可重入加锁</strong></h2>
<p>可重入加锁的意思就是同一个客户端同一个线程也能多次对同一个锁进行加锁。</p>
<p>也就是同时可以执行多次 lock方法，流程都是一样的，最后也会调用到lua脚本，所以可重入加锁的逻辑最后也是通过加锁的lua脚本来实现的。</p>
<p>上面加锁逻辑的lua脚本的前段我上面已经说过，下半部分也就是可重入加锁的逻辑。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301004147.png" alt="image-20221216161540409" tabindex="0" loading="lazy"><figcaption>image-20221216161540409</figcaption></figure>
<p>下面这段if的意思就是，判断当前已经加锁的key对应的加锁线程跟要来加锁的线程是不是同一个，如果是的话，就将这个线程对应的加锁次数加1，也就实现了可重入加锁，同时返回nil回去。</p>
<p>可重入加锁成功之后，加锁key和对应的值可能是这样。</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>myLock:{</span></span>
<span class="line"><span></span></span>
<span class="line"><span>"b983c153-7421-469a-addb-44fb92259a1b:1":2</span></span>
<span class="line"><span></span></span>
<span class="line"><span>}</span></span></code></pre>
</div><p>所以加锁lua脚本的第二段if的逻辑其实是实现可重入加锁的逻辑。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301004173.png" alt="image-20221216161636532" tabindex="0" loading="lazy"><figcaption>image-20221216161636532</figcaption></figure>
<h2>6. （解锁）如何主动释放锁和避免其它线程释放了自己加的锁</h2>
<p>当业务执行完成之后，肯定需要主动释放锁，那么为什么需要主动释放锁呢？</p>
<ul>
<li>第一，假设你任务执行完，没有手动释放锁，如果没有指定锁的超时时间，那么因为有看门狗机制，势必会导致这个锁无法释放，那么就可能造成死锁的问题。</li>
<li>第二，如果你指定了锁超时时间（锁超时自动释放逻辑后面会说），虽然并不会造成死锁的问题，但是会造成资源浪费的问题。假设你设置的过期时间是30s，但是你的任务2s就完成了，那么这个锁还会白白被占有28s的时间，这28s内其它线程都无法成功加锁。</li>
</ul>
<p>所以任务完成之后，一定需要主动释放锁。</p>
<p>那么Redisson是如何主动释放锁和避免其它线程释放了自己加的锁？</p>
<p>主动释放锁是通过unlock方法来完成的，接下来就分析一下unlock方法的实现。unlock会调用unlockAsync，传入当然释放线程的id，代表了当前线程来释放锁，unlock其实也是将unlockAsync的异步操作转为同步操作。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301004196.png" alt="image-20221216162637083" tabindex="0" loading="lazy"><figcaption>image-20221216162637083</figcaption></figure>
<p>unlockAsync最后会调用RedissonLock的unlockInnerAsync来实现释放锁的逻辑。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301004221.png" alt="image-20221216162653470" tabindex="0" loading="lazy"><figcaption>image-20221216162653470</figcaption></figure>
<h3>6.1 解锁lua脚本</h3>
<ol>
<li>先判断来释放锁的线程是不是加锁的线程，如果不是，那么直接返回nil，所以从这里可以看出，主要是通过一个if条件来防止线程释放了其它线程加的锁。</li>
<li>如果来释放锁的线程是加锁的线程，那么就将加锁次数减1，然后拿到剩余的加锁次数 counter 变量。</li>
<li>如果counter大于0，说明有重入加锁，锁还没有彻底的释放完，那么就设置一下锁的过期时间，然后返回0</li>
<li>如果counter没大于0，说明当前这个锁已经彻底释放完了，于是就把锁对应的key给删除，然后发布一个锁已经释放的消息，然后返回1。</li>
</ol>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301004247.png" alt="image-20221216162808214" tabindex="0" loading="lazy"><figcaption>image-20221216162808214</figcaption></figure>
<h2>7. <strong>如何实现超时自动释放锁</strong></h2>
<blockquote>
<p>设置自动释放锁后，锁过期时间由我们自己指定。其他加锁逻辑不变。</p>
<p>但是不会开启watchdog后台线程，续约加锁时间，加锁key到了过期时间就会自动删除，也就达到了释放锁的目的。</p>
</blockquote>
<p>前面我们说了不指定锁超时时间的话，那么会有看门狗线程不断的延长加锁时间，不会导致锁超时释放，自动过期。那么指定超时时间的话，是如何实现到了指定时间超时释放锁的呢？</p>
<p>能够设置超时自动释放锁的方法。</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>void lock(long leaseTime, TimeUnit unit)</span></span></code></pre>
</div><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>boolean tryLock(long waitTime, long leaseTime, TimeUnit unit)</span></span></code></pre>
</div><p>通过传入leaseTime参数就可以指定锁超时的时间。</p>
<p>无论指不指定超时时间，最终其实都会调用tryAcquireAsync方法，只不过当不指定超时时间时，leaseTime传入的是-1，也就是代表不指定超时时间，但是Redisson默认还是会设置30s的过期时间；当指定超时时间，那么leaseTime就是我们自己指定的时间，最终也是通过同一个加锁的lua脚本逻辑。</p>
<p>指定和不指定超时时间的主要区别是，加锁成功之后的逻辑不一样，不指定超时时间时，会开启watchdog后台线程，不断的续约加锁时间，而指定超时时间，就不会去开启watchdog定时任务，这样就不会续约，加锁key到了过期时间就会自动删除，也就达到了释放锁的目的。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301004270.png" alt="image-20221216163218532" tabindex="0" loading="lazy"><figcaption>image-20221216163218532</figcaption></figure>
<p>所以指定超时时间达到超时释放锁的功能主要还是通过redis自动过期来实现，因为指定了超时时间，加锁成功之后就不会开启watchdog机制来延长加锁的时间。</p>
<blockquote>
<p>在实际项目中，指不指定锁的超时时间是根据具体的业务来的，如果你能够比较准确的预估出代码执行的时间，那么可以指定锁超时释放时间来防止业务执行错误导致无法释放锁的问题，如果不能预估出代码执行的时间，那么可以不指定超时时间。</p>
</blockquote>
<h2><strong>8. 如何实现不同线程加锁的互斥</strong></h2>
<blockquote>
<p>因为lua脚本加锁的逻辑同时只有一个线程能够执行（redis是单线程的原因）。而lua脚本本身是原子性的</p>
</blockquote>
<p>上面我们分析了第一次加锁逻辑和可重入加锁的逻辑，因为lua脚本加锁的逻辑同时只有一个线程能够执行（redis是单线程的原因），所以一旦有线程加锁成功，那么另一个线程来加锁，前面两个if条件都不成立，最后通过调用redis的pttl命令返回锁的剩余的过期时间回去。</p>
<p>这样，客户端就根据返回值来判断是否加锁成功，因为第一次加锁和可重入加锁的返回值都是nil，而加锁失败就返回了锁的剩余过期时间。</p>
<p>所以加锁的lua脚本通过条件判断就实现了加锁的互斥操作，保证其它线程无法加锁成功。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301004295.png" alt="image-20221216163816136" tabindex="0" loading="lazy"><figcaption>image-20221216163816136</figcaption></figure>
<blockquote>
<p>所以总的来说，加锁的lua脚本实现了第一次加锁、可重入加锁和加锁互斥的逻辑。</p>
</blockquote>
<h2><strong>9. 加锁失败之后如何实现阻塞等待加锁</strong></h2>
<blockquote>
<p>通过 死循环（自旋）地的方式实现阻塞</p>
</blockquote>
<p>从上面分析，加锁失败之后，会走如下的代码。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301004320.png" alt="image-20221216163902824" tabindex="0" loading="lazy"><figcaption>image-20221216163902824</figcaption></figure>
<p>从这里可以看出，最终会执行死循环（自旋）地的方式来不停地通过tryAcquire方法来尝试加锁，直到加锁成功之后才会跳出死循环，如果一直没有成功加锁，那么就会一直旋转下去，所谓的阻塞，实际上就是自旋加锁的方式。</p>
<p>但是这种阻塞可能会产生问题，因为如果其它线程释放锁失败，那么这个阻塞加锁的线程会一直阻塞加锁，这肯定会出问题的。所以有没有能够可以指定阻塞的时间，如果超过一定时间还未加锁成功的话，那么就放弃加锁的方法。答案肯定是有的，接着往下看。</p>
<h2><strong>10. 如何实现阻塞等待一定时间还未加锁成功就放弃加锁</strong></h2>
<p>超时放弃加锁的方法</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>boolean tryLock(long waitTime, long leaseTime, TimeUnit unit)</span></span></code></pre>
</div><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>boolean tryLock(long time, TimeUnit unit)</span></span></code></pre>
</div><p>通过waitTime参数或者time参数来指定超时时间。这两个方法的主要区别就是上面的方法支持指定锁超时时间，下面的方法不支持锁超时自动释放。</p>
<p>tryLock(long time, TimeUnit unit)这个方法最后也是调用tryLock(long waitTime, long leaseTime, TimeUnit unit)方法的实现。代码如下。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301004343.png" alt="image-20221216164448812" tabindex="0" loading="lazy"><figcaption>image-20221216164448812</figcaption></figure>
<p>其实通过源码就可以看出是怎么实现一定时间之内还未获取到锁就放弃加锁的逻辑，其实相比于一直获取锁，主要是加了超时的判断，如果超时了，那么就退出循环，放弃加锁，</p>
<h2><strong>11. 如何实现公平锁</strong></h2>
<h3>11.1 什么是公平锁</h3>
<p>所谓的公平锁就是指线程成功加锁的顺序跟线程来加锁的顺序是一样，实现了先来先成功加锁的特性，所以叫公平锁。就跟排队一样，不插队才叫公平。</p>
<p>前面几节讲的RedissonLock的实现是非公平锁，但是里面的一些机制，比如看门狗都是一样的。</p>
<h3><strong>11.2 公平锁和非公平锁的比较</strong></h3>
<p>公平锁的优点是按序平均分配锁资源，不会出现线程饿死的情况，它的缺点是按序唤醒线程的开销大，执行性能不高。非公平锁的优点是执行效率高，谁先获取到锁，锁就属于谁，不会“按资排辈”以及顺序唤醒，但缺点是资源分配随机性强，可能会出现线程饿死的情况。</p>
<h3>11.3 如何使用公平锁？</h3>
<p>通过RedissonClient的getFairLock就可以获取到公平锁。Redisson对于公平锁的实现是RedissonFairLock类，通过RedissonFairLock来加锁，就能实现公平锁的特性，使用代码如下。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301004369.png" alt="image-20221216164650827" tabindex="0" loading="lazy"><figcaption>image-20221216164650827</figcaption></figure>
<p>RedissonFairLock继承了RedissonLock，主要是重写了tryLockInnerAsync方法，也就是加锁逻辑的方法。</p>
<p>下面来分析一下RedissonFairLock的加锁逻辑。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301004399.png" alt="image-20221216164712751" tabindex="0" loading="lazy"><figcaption>image-20221216164712751</figcaption></figure>
<p>这段加锁的逻辑很长，我就简单说一下这段lua脚本干了啥。</p>
<p>当线程来加锁的时候，如果加锁失败了，那么会将线程扔到一个set集合中，这样就按照加锁的顺序给线程排队，set集合的头部的线程就代表了接下来能够加锁成功的线程。当有线程释放了锁之后，其它加锁失败的线程就会来继续加锁，加锁之前会先判断一下set集合的头部的线程跟当前要加锁的线程是不是同一个，如果是的话，那就加锁成功，如果不是的话，那么就加锁失败，这样就实现了加锁的顺序性。</p>
<p>当然这段lua脚本还做了一些其它细节的事，这里就不再赘述。</p>
<h2><strong>12. 如何实现读写锁</strong></h2>
<p>在实际的业务场景中，其实会有很多读多写少的场景，那么对于这种场景来说，使用独占锁来加锁，在高并发场景下会导致大量的线程加锁失败，阻塞，对系统的吞吐量有一定的影响，为了适配这种读多写少的场景，Redisson也实现了读写锁的功能。</p>
<p>读写锁的特点：</p>
<ul>
<li>读与读是共享的，不互斥</li>
<li>读与写互斥</li>
<li>写与写互斥</li>
</ul>
<p>Redisson使用读写锁的代码。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301004439.png" alt="image-20221216164831330" tabindex="0" loading="lazy"><figcaption>image-20221216164831330</figcaption></figure>
<p>Redisson通过RedissonReadWriteLock类来实现读写锁的功能，通过这个类可以获取到读锁或者写锁，所以真正的加锁的逻辑是由读锁和写锁实现的。</p>
<p>那么Redisson是如何具体实现读写锁的呢？</p>
<p>前面说过，加锁成功之后会在redis中维护一个hash的数据结构，存储加锁线程和加锁次数。在读写锁的实现中，会往hash数据结构中多维护一个mode的字段，来表示当前加锁的模式。</p>
<p>所以能够实现读写锁，最主要是因为维护了一个加锁模式的字段mode，这样有线程来加锁的时候，就能根据当前加锁的模式结合读写的特性来判断要不要让当前来加锁的线程加锁成功。</p>
<ul>
<li>如果没有加锁，那么不论是读锁还是写锁都能加成功，成功之后根据锁的类型维护mode字段。</li>
<li>如果模式是读锁，那么加锁线程是来加读锁的，就让它加锁成功。</li>
<li>如果模式是读锁，那么加锁线程是来加写锁的，就让它加锁失败。</li>
<li>如果模式是写锁，那么加锁线程是来加写锁的，就让它加锁失败（加锁线程自己除外）。</li>
<li>如果模式是写锁，那么加锁线程是来加读锁的，就让它加锁失败（加锁线程自己除外）。</li>
</ul>
<h2>13. 如何实现批量加锁(联锁)</h2>
<p>批量加锁的意思就是同时加几个锁，只有这些锁都算加成功了，才是真正的加锁成功。</p>
<p>比如说，在一个下单的业务场景中，同时需要锁定订单、库存、商品，基于这种需要锁多种资源的场景中，Redisson提供了批量加锁的实现，对应的实现类是RedissonMultiLock。</p>
<p>Redisson提供了批量加锁使用代码如下。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301004471.png" alt="image-20221216165005622" tabindex="0" loading="lazy"><figcaption>image-20221216165005622</figcaption></figure>
<p>Redisson对于批量加锁的实现其实很简单，源码如下</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301004492.png" alt="image-20221216165023566" tabindex="0" loading="lazy"><figcaption>image-20221216165023566</figcaption></figure>
<p>就是根据顺序去依次调用传入myLock1、myLock2、myLock3 加锁方法，然后如果都成功加锁了，那么multiLock就算加锁成功。</p>
<h2>14. Redis分布式锁存在的问题</h2>
<p>对于单Redis实例来说，如果Redis宕机了，那么整个系统就无法工作了。所以为了保证Redis的高可用性，一般会使用主从或者哨兵模式。但是如果使用了主从或者哨兵模式，此时Redis的分布式锁的功能可能就会出现问题。</p>
<p>举个例子来说，假如现在使用了哨兵模式，如图。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301004521.png" alt="image-20221216165112674" tabindex="0" loading="lazy"><figcaption>image-20221216165112674</figcaption></figure>
<p>基于这种模式，Redis客户端会在master节点上加锁，然后异步复制给slave节点。</p>
<p>但是突然有一天，因为一些原因，master节点宕机了，那么哨兵节点感知到了master节点宕机了，那么就会从slave节点选择一个节点作为主节点，实现主从切换，如图：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301004543.png" alt="image-20221216165143149" tabindex="0" loading="lazy"><figcaption>image-20221216165143149</figcaption></figure>
<p>这种情况看似没什么问题，但是不幸的事发生了，那就是客户端对原先的主节点加锁，加成之后还没有来得及同步给从节点，主节点宕机了，从节点变成了主节点，此时从节点是没有加锁信息的，如果有其它的客户端来加锁，是能够加锁成功的，这不是很坑爹么。。</p>
<p>那么如何解决这种问题呢？Redis官方提供了一种叫RedLock的算法，Redisson刚好实现了这种算法，接着往下看。</p>
<h2>15. 如何实现RedLock算法</h2>
<h3>15.1 RedLock算法</h3>
<p>在Redis的分布式环境中，我们假设有N个Redis master。这些节点完全互相独立，不存在主从复制或者其他集群协调机制。之前我们已经描述了在Redis单实例下怎么安全地获取和释放锁。我们确保将在每（N)个实例上使用此方法获取和释放锁。在这个样例中，我们假设有5个Redis master节点，这是一个比较合理的设置，所以我们需要在5台机器上面或者5台虚拟机上面运行这些实例，这样保证他们不会同时都宕掉。</p>
<p>为了取到锁，客户端应该执行以下操作:</p>
<ol>
<li>获取当前Unix时间，以毫秒为单位。</li>
<li>依次尝试从N个实例，使用相同的key和随机值获取锁。在步骤2，当向Redis设置锁时,客户端应该设置一个网络连接和响应超时时间，这个超时时间应该小于锁的失效时间。例如你的锁自动失效时间为10秒，则超时时间应该在5-50毫秒之间。这样可以避免服务器端Redis已经挂掉的情况下，客户端还在死死地等待响应结果。如果服务器端没有在规定时间内响应，客户端应该尽快尝试另外一个Redis实例。</li>
<li>客户端使用当前时间减去开始获取锁时间（步骤1记录的时间）就得到获取锁使用的时间。当且仅当从大多数（这里是3个节点）的Redis节点都取到锁，并且使用的时间小于锁失效时间时，锁才算获取成功。</li>
<li>如果取到了锁，key的真正有效时间等于有效时间减去获取锁所使用的时间（步骤3计算的结果）。</li>
<li>如果因为某些原因，获取锁失败（没有在至少N/2+1个Redis实例取到锁或者取锁时间已经超过了有效时间），客户端应该在所有的Redis实例上进行解锁（即便某些Redis实例根本就没有加锁成功）。</li>
</ol>
<h3>15.2 Redisson对RedLock算法的实现</h3>
<p>使用方法如下。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">RLock</span><span style="color:#E06C75;--shiki-dark:#E06C75"> lock1 </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> redissonInstance1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getLock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"lock1"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">RLock</span><span style="color:#E06C75;--shiki-dark:#E06C75"> lock2 </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> redissonInstance2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getLock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"lock2"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">RLock</span><span style="color:#E06C75;--shiki-dark:#E06C75"> lock3 </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> redissonInstance3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getLock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"lock3"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span><span style="color:#E06C75;--shiki-dark:#E06C75"> </span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">RedissonRedLock</span><span style="color:#E06C75;--shiki-dark:#E06C75"> lock </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> RedissonRedLock</span><span style="color:#E06C75;--shiki-dark:#E06C75">(lock1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> lock2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> lock3)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 同时加锁：lock1 lock2 lock3</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 红锁在大部分节点上加锁成功就算成功。</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">lock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">lock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">...</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">lock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">unlock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span></code></pre>
</div><p>RedissonRedLock加锁过程如下：</p>
<ul>
<li>获取所有的redisson node节点信息，循环向所有的redisson node节点加锁，假设节点数为N，例子中N等于5。一个redisson node代表一个主从节点。</li>
<li>如果在N个节点当中，有N/2 + 1个节点加锁成功了，那么整个RedissonRedLock加锁是成功的。</li>
<li>如果在N个节点当中，小于N/2 + 1个节点加锁成功，那么整个RedissonRedLock加锁是失败的。</li>
<li>如果中途发现各个节点加锁的总耗时，大于等于设置的最大等待时间，则直接返回失败。</li>
</ul>
<p>RedissonRedLock底层其实也就基于RedissonMultiLock实现的，RedissonMultiLock要求所有的加锁成功才算成功，RedissonRedLock要求只要有N/2 + 1个成功就算成功。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301004571.png" alt="image-20221216165936419" tabindex="0" loading="lazy"><figcaption>image-20221216165936419</figcaption></figure>
<h2>参考文章</h2>
<p><a href="https://mp.weixin.qq.com/s/ueCXJpHel0SoI6dnfvYqHA" target="_blank" rel="noopener noreferrer">Redisson夺命15连问</a></p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301004792.png" type="image/png"/>
    </item>
    <item>
      <title>分布式系统 - 分布式锁</title>
      <link>https://mrjackc.github.io/posts/Architect/distributed/arch-z-lock.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/distributed/arch-z-lock.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">分布式系统 - 分布式锁</source>
      <description>分布式系统 - 分布式锁 1. 什么是分布式锁 要介绍分布式锁，首先要提到与分布式锁相对应的是线程锁、进程锁。 线程锁：主要用来给方法、代码块加锁。当某个方法或代码使用锁，在同一时刻仅有一个线程执行该方法或该代码段。线程锁只在同一JVM中有效果，因为线程锁的实现在根本上是依靠线程之间共享内存实现的，比如synchronized是共享对象头，显示锁Loc...</description>
      <category>架构</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 什么是分布式锁</h2>
<blockquote>
<p>要介绍分布式锁，首先要提到与分布式锁相对应的是线程锁、进程锁。</p>
</blockquote>
<ul>
<li><strong>线程锁</strong>：主要用来给方法、代码块加锁。当某个方法或代码使用锁，在同一时刻仅有一个线程执行该方法或该代码段。线程锁只在同一JVM中有效果，因为线程锁的实现在根本上是依靠线程之间共享内存实现的，比如synchronized是共享对象头，显示锁Lock是共享某个变量（state）。</li>
<li><strong>进程锁</strong>：为了控制同一操作系统中多个进程访问某个共享资源，因为进程具有独立性，各个进程无法访问其他进程的资源，因此无法通过synchronized等线程锁实现进程锁。</li>
<li><strong>分布式锁</strong>：<strong>当多个进程不在同一个系统中(比如分布式系统中控制共享资源访问)，用分布式锁控制多个进程对资源的访问。</strong></li>
</ul>
<h2>2. 分布式锁的设计原则</h2>
<blockquote>
<p>分布式锁的最小设计原则：<strong>安全性</strong>和<strong>有效性</strong></p>
</blockquote>
<p><a href="https://redis.io/docs/reference/patterns/distributed-locks/" target="_blank" rel="noopener noreferrer">Redis的官网</a>上对使用分布式锁提出至少需要满足如下三个要求：</p>
<ol>
<li><strong>互斥</strong>（属于安全性）：在任何给定时刻，只有一个客户端可以持有锁。</li>
<li><strong>无死锁</strong>（属于有效性）：即使锁定资源的客户端崩溃或被分区，也总是可以获得锁；通常通过超时机制实现。</li>
<li><strong>容错性</strong>（属于有效性）：只要大多数 Redis 节点都启动，客户端就可以获取和释放锁。</li>
</ol>
<p>除此之外，分布式锁的设计中还可以/需要考虑：</p>
<ol>
<li>加锁解锁的<strong>同源性</strong>：A加的锁，不能被B解锁</li>
<li>获取锁是<strong>非阻塞</strong>的：如果获取不到锁，不能无限期等待；</li>
<li><strong>高性能</strong>：加锁解锁是高性能的</li>
</ol>
<h2>3. 基于数据库如何实现分布式锁？有什么缺陷？</h2>
<blockquote>
<p>基于数据库如何实现分布式锁？有什么缺陷？</p>
</blockquote>
<h3>3.1 基于数据库表（锁表，很少使用）</h3>
<p>最简单的方式可能就是直接创建一张锁表，然后通过操作该表中的数据来实现了。当我们想要获得锁的时候，就可以在该表中增加一条记录，想要释放锁的时候就删除这条记录。</p>
<p>为了更好的演示，我们先创建一张数据库表，参考如下：</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">CREATE</span><span style="color:#C678DD;--shiki-dark:#C678DD"> TABLE</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> database_lock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">	`id`</span><span style="color:#C678DD;--shiki-dark:#C678DD"> BIGINT</span><span style="color:#C678DD;--shiki-dark:#C678DD"> NOT NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> AUTO_INCREMENT,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">	`resource`</span><span style="color:#C678DD;--shiki-dark:#C678DD"> int</span><span style="color:#C678DD;--shiki-dark:#C678DD"> NOT NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379">'锁定的资源'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">	`description`</span><span style="color:#C678DD;--shiki-dark:#C678DD"> varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">1024</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">NOT NULL</span><span style="color:#C678DD;--shiki-dark:#C678DD"> DEFAULT</span><span style="color:#98C379;--shiki-dark:#98C379"> ""</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379">'描述'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">	PRIMARY KEY</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (id),</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">	UNIQUE</span><span style="color:#C678DD;--shiki-dark:#C678DD"> KEY</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> uiq_idx_resource (</span><span style="color:#C678DD;--shiki-dark:#C678DD">resource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) ENGINE</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">InnoDB </span><span style="color:#C678DD;--shiki-dark:#C678DD">DEFAULT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> CHARSET</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">utf8mb4 COMMENT</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">'数据库分布式锁表'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span></code></pre>
</div><p>当我们想要获得锁时，可以插入一条数据：</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">INSERT INTO</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> database_lock(</span><span style="color:#C678DD;--shiki-dark:#C678DD">resource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#C678DD;--shiki-dark:#C678DD">description</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">VALUES</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#98C379;--shiki-dark:#98C379">'lock'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span></code></pre>
</div><p>当需要释放锁的时，可以删除这条数据：</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">DELETE</span><span style="color:#C678DD;--shiki-dark:#C678DD"> FROM</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> database_lock </span><span style="color:#C678DD;--shiki-dark:#C678DD">WHERE</span><span style="color:#C678DD;--shiki-dark:#C678DD"> resource</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span></code></pre>
</div><h3>3.2 基于悲观锁</h3>
<h4>3.2.1 <strong>悲观锁实现思路</strong>？</h4>
<ol>
<li>在对任意记录进行修改前，先尝试为该记录加上排他锁（exclusive locking）。</li>
<li>如果加锁失败，说明该记录正在被修改，那么当前查询可能要等待或者抛出异常。 具体响应方式由开发者根据实际需要决定。</li>
<li>如果成功加锁，那么就可以对记录做修改，事务完成后就会解锁了。</li>
<li>其间如果有其他对该记录做修改或加排他锁的操作，都会等待我们解锁或直接抛出异常。</li>
</ol>
<h4>3.2.2 以MySQL InnoDB中使用悲观锁为例？</h4>
<p>要使用悲观锁，我们必须关闭mysql数据库的自动提交属性，因为MySQL默认使用autocommit模式，也就是说，当你执行一个更新操作后，MySQL会立刻将结果进行提交。set autocommit=0;</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">//</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.开始事务</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">begin</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;/</span><span style="color:#C678DD;--shiki-dark:#C678DD">begin work</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;/</span><span style="color:#C678DD;--shiki-dark:#C678DD">start transaction</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">; (三者选一就可以)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">//</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.查询出商品信息</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">select</span><span style="color:#C678DD;--shiki-dark:#C678DD"> status</span><span style="color:#C678DD;--shiki-dark:#C678DD"> from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> t_goods </span><span style="color:#C678DD;--shiki-dark:#C678DD">where</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> id</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#C678DD;--shiki-dark:#C678DD"> for</span><span style="color:#C678DD;--shiki-dark:#C678DD"> update</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">//</span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.根据商品信息生成订单</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">insert into</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> t_orders (id,goods_id) </span><span style="color:#C678DD;--shiki-dark:#C678DD">values</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD">null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">//</span><span style="color:#D19A66;--shiki-dark:#D19A66">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.修改商品status为2</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">update</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> t_goods </span><span style="color:#C678DD;--shiki-dark:#C678DD">set</span><span style="color:#C678DD;--shiki-dark:#C678DD"> status</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">//</span><span style="color:#D19A66;--shiki-dark:#D19A66">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.提交事务</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">commit</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;/</span><span style="color:#C678DD;--shiki-dark:#C678DD">commit work</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span></code></pre>
</div><p>上面的查询语句中，我们使用了<code>select…for update</code>的方式，这样就通过开启排他锁的方式实现了悲观锁。此时在t_goods表中，id为1的 那条数据就被我们锁定了，其它的事务必须等本次事务提交之后才能执行。这样我们可以保证当前的数据不会被其它事务修改。</p>
<p>上面我们提到，使用<code>select…for update</code>会把数据给锁住，不过我们需要注意一些锁的级别，<strong>MySQL InnoDB默认行级锁。行级锁都是基于索引的</strong>，如果一条SQL语句用不到索引是不会使用行级锁的，会使用表级锁把整张表锁住，这点需要注意。</p>
<h3>3.3 基于乐观锁</h3>
<p>乐观并发控制（又名“乐观锁”，Optimistic Concurrency Control，缩写“OCC”）是一种并发控制的方法。它假设多用户并发的事务在处理时不会彼此互相影响，各事务能够在不产生锁的情况下处理各自影响的那部分数据。在提交数据更新之前，每个事务会先检查在该事务读取数据后，有没有其他事务又修改了该数据。如果其他事务有更新的话，正在提交的事务会进行回滚。</p>
<h4>3.3.1 <strong>以使用版本号实现乐观锁为例？</strong></h4>
<p>使用版本号时，可以在数据初始化时指定一个版本号，每次对数据的更新操作都对版本号执行+1操作。并判断当前版本号是不是该数据的最新的版本号。</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.查询出商品信息</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD">status</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#C678DD;--shiki-dark:#C678DD">status</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#C678DD;--shiki-dark:#C678DD">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">from</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> t_goods </span><span style="color:#C678DD;--shiki-dark:#C678DD">where</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> id</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#{id}</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.根据商品信息生成订单</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.修改商品status为2</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">update</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> t_goods </span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">set</span><span style="color:#C678DD;--shiki-dark:#C678DD"> status</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#C678DD;--shiki-dark:#C678DD">version</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">+</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">where</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> id</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#{id} </span><span style="color:#C678DD;--shiki-dark:#C678DD">and</span><span style="color:#C678DD;--shiki-dark:#C678DD"> version</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#{</span><span style="color:#C678DD;--shiki-dark:#C678DD">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">};</span></span></code></pre>
</div><p>需要注意的是，乐观锁机制往往基于系统中数据存储逻辑，因此也具备一定的局限性。由于乐观锁机制是在我们的系统中实现的，对于来自外部系统的用户数据更新操作不受我们系统的控制，因此可能会造成脏数据被更新到数据库中。在系统设计阶段，我们应该充分考虑到这些情况，并进行相应的调整（如将乐观锁策略在数据库存储过程中实现，对外只开放基于此存储过程的数据更新途径，而不是将数据库表直接对外公开）。</p>
<h3>3.4 缺陷</h3>
<ul>
<li>对数据库依赖</li>
<li>开销问题</li>
<li>行锁变表锁问题</li>
<li>无法解决数据库单点和可重入的问题。</li>
</ul>
<h2>4. 基于redis如何实现分布式锁？有什么缺陷？</h2>
<blockquote>
<p>基于redis如何实现分布式锁？这里一定要看<a href="https://redis.io/docs/reference/patterns/distributed-locks/" target="_blank" rel="noopener noreferrer">Redis的官网  (opens new window)</a>的分布式锁的实现这篇文章。</p>
</blockquote>
<h3>4.1 set NX PX + Lua</h3>
<p><strong>加锁</strong>： set NX PX + 重试 + 重试间隔</p>
<p>向Redis发起如下命令: <code>SET productId:lock 0xx9p03001 NX PX 30000</code> 其中，"productId"由自己定义，可以是与本次业务有关的id，"0xx9p03001"是一串随机值，必须保证全局唯一(原因在后文中会提到)，“NX"指的是当且仅当key(也就是案例中的"productId:lock”)在Redis中不存在时，返回执行成功，否则执行失败。"PX 30000"指的是在30秒后，key将被自动删除。执行命令后返回成功，表明服务成功的获得了锁。</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> boolean</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> lock</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#C678DD;--shiki-dark:#C678DD"> long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> expire</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#C678DD;--shiki-dark:#C678DD"> int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> retryTimes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#C678DD;--shiki-dark:#C678DD"> long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> retryDuration) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // use JedisCommands instead of setIfAbsense</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    boolean</span><span style="color:#E06C75;--shiki-dark:#E06C75"> result </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> setRedis</span><span style="color:#E06C75;--shiki-dark:#E06C75">(key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> expire)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // retry if needed</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    while</span><span style="color:#E06C75;--shiki-dark:#E06C75"> ((</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!</span><span style="color:#E06C75;--shiki-dark:#E06C75">result) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&amp;&amp;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> retryTimes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">--</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> &gt;</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        try</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">debug</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"lock failed, retrying..."</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> retryTimes);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            Thread</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">sleep</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(retryDuration);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD">catch</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Exception</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            return</span><span style="color:#D19A66;--shiki-dark:#D19A66"> false</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // use JedisCommands instead of setIfAbsense</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        result </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> setRedis</span><span style="color:#E06C75;--shiki-dark:#E06C75">(key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> expire)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> result</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> boolean</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> setRedis</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#C678DD;--shiki-dark:#C678DD"> long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> expire) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    try</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        RedisCallback</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> redisCallback </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75"> connection </span><span style="color:#C678DD;--shiki-dark:#C678DD">-&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            JedisCommands</span><span style="color:#E06C75;--shiki-dark:#E06C75"> commands </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (JedisCommands) </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">connection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getNativeConnection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> uuid </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SnowIDUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">uniqueStr</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            lockFlag</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(uuid);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> commands</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key, uuid, NX, PX, expire);</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 看这里</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> result </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> redisTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">execute</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(redisCallback);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> !</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">StringUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isEmpty</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(result);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    } </span><span style="color:#C678DD;--shiki-dark:#C678DD">catch</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Exception</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">error</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"set redis occurred an exception"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, e);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    return</span><span style="color:#D19A66;--shiki-dark:#D19A66"> false</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>解锁</strong>：采用lua脚本</p>
<p>在删除key之前，一定要判断服务A持有的value与Redis内存储的value是否一致。如果贸然使用服务A持有的key来删除锁，则会误将服务B的锁释放掉。</p>
<div class="language-lua" data-ext="lua" data-title="lua"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> redis</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">call</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"get"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E06C75;--shiki-dark:#E06C75">KEYS</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">])==</span><span style="color:#E06C75;--shiki-dark:#E06C75">ARGV</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">] </span><span style="color:#C678DD;--shiki-dark:#C678DD">then</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">	return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> redis</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">call</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"del"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E06C75;--shiki-dark:#E06C75">KEYS</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">])</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">else</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">	return</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">end</span></span></code></pre>
</div><h3>4.2 基于RedLock实现分布式锁</h3>
<blockquote>
<p>这是Redis作者推荐的分布式集群情况下的方式，请看这篇文章<a href="http://antirez.com/news/101" target="_blank" rel="noopener noreferrer">Is Redlock safe?</a></p>
</blockquote>
<p>假设有两个服务A、B都希望获得锁，有一个包含了5个redis master的Redis Cluster，执行过程大致如下:</p>
<ol>
<li>客户端获取当前时间戳，单位: 毫秒</li>
<li>服务A轮寻每个master节点，尝试创建锁。(这里锁的过期时间比较短，一般就几十毫秒) RedLock算法会尝试在大多数节点上分别创建锁，假如节点总数为n，那么大多数节点指的是n/2+1。</li>
<li>客户端计算成功建立完锁的时间，如果建锁时间小于超时时间，就可以判定锁创建成功。如果锁创建失败，则依次(遍历master节点)删除锁。</li>
<li>只要有其它服务创建过分布式锁，那么当前服务就必须轮寻尝试获取锁。</li>
</ol>
<h3>4.3 基于Redis的客户端</h3>
<blockquote>
<p>这里Redis的客户端（Jedis, Redisson, Lettuce等）都是基于上述两类形式来实现分布式锁的，只是两类形式的封装以及一些优化（比如Redisson的watch dog)。</p>
</blockquote>
<p>以基于Redisson实现分布式锁为例（支持了 单实例、Redis哨兵、redis cluster、redis master-slave等各种部署架构）：</p>
<h4>4.3.1 <strong>特色</strong>？</h4>
<ol>
<li><strong>redisson所有指令都通过lua脚本执行，保证了操作的原子性</strong></li>
<li>redisson设置了watchdog看门狗，“看门狗”的逻辑保证了没有死锁发生</li>
<li>redisson支持Redlock的实现方式。</li>
</ol>
<h4>4.3.2 <strong>过程</strong>？</h4>
<ol>
<li>线程去获取锁，获取成功: 执行lua脚本，保存数据到redis数据库。</li>
<li>线程去获取锁，获取失败: 订阅了解锁消息，然后再尝试获取锁，获取成功后，执行lua脚本，保存数据到redis数据库。</li>
</ol>
<h4>4.3.3 <strong>互斥</strong>？</h4>
<p>如果这个时候客户端B来尝试加锁，执行了同样的一段lua脚本。第一个if判断会执行“exists myLock”，发现myLock这个锁key已经存在。接着第二个if判断，判断myLock锁key的hash数据结构中，是否包含客户端B的ID，但明显没有，那么客户端B会获取到pttl myLock返回的一个数字，代表myLock这个锁key的剩余生存时间。此时客户端B会进入一个while循环，不听的尝试加锁。</p>
<h4>4.3.4 <strong>watch dog自动延时机制</strong>？</h4>
<p>客户端A加锁的锁key默认生存时间只有30秒，如果超过了30秒，客户端A还想一直持有这把锁，怎么办？其实只要客户端A一旦加锁成功，就会启动一个watch dog看门狗，它是一个后台线程，会每隔10秒检查一下，如果客户端A还持有锁key，那么就会不断的延长锁key的生存时间。</p>
<h5>4.3.5 <strong>可重入</strong>？</h5>
<p>每次lock会调用incrby，每次unlock会减一。</p>
<h3>4.4 进一步理解</h3>
<ol>
<li>借助Redis实现分布式锁时，有一个共同的缺陷: 当获取锁被拒绝后，需要不断的循环，重新发送获取锁(创建key)的请求，直到请求成功。这就造成空转，浪费宝贵的CPU资源。</li>
<li>RedLock算法本身有争议，具体看这篇文章<a href="https://martin.kleppmann.com/2016/02/08/how-to-do-distributed-locking.html" target="_blank" rel="noopener noreferrer">How to do distributed locking  (opens new window)</a> 以及作者的回复<a href="http://antirez.com/news/101" target="_blank" rel="noopener noreferrer">Is Redlock safe?</a></li>
</ol>
<h2>5. 基于zookeeper如何实现分布式锁？</h2>
<p>说几个核心点：</p>
<ul>
<li><strong>顺序节点</strong></li>
</ul>
<p>创建一个用于发号的节点“/test/lock”，然后以它为父亲节点的前缀为“/test/lock/seq-”依次发号：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301003008.png" alt="image-20220611092208711" tabindex="0" loading="lazy"><figcaption>image-20220611092208711</figcaption></figure>
<ul>
<li>
<p><strong>获得最小号得锁</strong></p>
<p>由于序号的递增性，可以规定排号最小的那个获得锁。所以，每个线程在尝试占用锁之前，首先判断自己是排号是不是当前最小，如果是，则获取锁。</p>
</li>
<li>
<p><strong>节点监听机制</strong></p>
<p>每个线程抢占锁之前，先抢号创建自己的ZNode。同样，释放锁的时候，就需要删除抢号的Znode。抢号成功后，如果不是排号最小的节点，就处于等待通知的状态。等谁的通知呢？不需要其他人，只需要等前一个Znode 的通知就可以了。当前一个Znode 删除的时候，就是轮到了自己占有锁的时候。第一个通知第二个、第二个通知第三个，击鼓传花似的依次向后。</p>
</li>
</ul>
<h2>参考文章</h2>
<p><a href="https://pdai.tech/md/arch/arch-z-lock.html" target="_blank" rel="noopener noreferrer">分布式系统 - 分布式锁及实现方案</a></p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301003008.png" type="image/png"/>
    </item>
    <item>
      <title>分布式系统-分布式会话及实现方案</title>
      <link>https://mrjackc.github.io/posts/Architect/distributed/arch-z-session.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/distributed/arch-z-session.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">分布式系统-分布式会话及实现方案</source>
      <description>分布式系统-分布式会话及实现方案 无状态的token或者有状态的Session集中管理是目前最为常用的方案，本节主要讨论的有状态的分布式Session会话, 包括Session Stick, Session Replication, Session 数据集中存储, Cookie Based 以及Token方式等 1. 基础概念 Session + Co...</description>
      <category>架构</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<blockquote>
<p>无状态的token或者有状态的Session集中管理是目前最为常用的方案，本节主要讨论的有状态的分布式Session会话, 包括Session Stick, Session Replication, Session 数据集中存储, Cookie Based 以及Token方式等</p>
</blockquote>
<h2>1. 基础概念</h2>
<blockquote>
<p>Session + Cookie 会话方案比较简单，这里我在网上找了点资料，再回顾下基础吧。</p>
</blockquote>
<h3>1.1 为什么要产生Session</h3>
<p>http协议本身是无状态的，客户端只需要向服务器请求下载内容，客户端和服务器都不记录彼此的历史信息，每一次请求都是独立的。</p>
<p>为什么是无状态的呢？因为浏览器与服务器是使用socket套接字进行通信，服务器将请求结果返回给浏览器之后，会关闭当前的socket链接，而且服务器也会在处理页面完毕之后销毁页面对象。</p>
<p>然而在Web应用的很多场景下需要维护用户状态才能正常工作(是否登录等)，或者说提供便捷(记住密码，浏览历史等)，状态的保持就是一个很重要的功能。因此在web应用开发里就出现了保持http链接状态的技术：一个是cookie技术，另一种是session技术。</p>
<h3>1.2 Session有什么作用，如何产生并发挥作用</h3>
<p>要明白Session就必须要弄明白什么是Cookie，以及Cookie和Session的关系。</p>
<ul>
<li><strong>什么是Cookie</strong></li>
</ul>
<p>Cookie技术是http状态保持在客户端的解决方案，Cookie就是由服务器发给客户端的特殊信息，而这些信息以文本文件的方式存放在客户端，然后客户端每次向服务器发送请求的时候都会带上这些特殊的信息。</p>
<ul>
<li><strong>Cookie的产生</strong></li>
</ul>
<p>当用户首次使用浏览器访问一个支持Cookie的网站的时候，用户会提供包括用户名在内的个人信息并且提交至服务器；接着，服务器在向客户端回传相应的超文本的同时也会发回这些个人信息，当然这些信息并不是存放在HTTP响应体（Response Body）中的，而是存放于HTTP响应头（Response Header）；当客户端浏览器接收到来自服务器的响应之后，浏览器会将这些信息存放在一个统一的位置。</p>
<p>存储在硬盘上的cookie 不可以在不同的浏览器间共享，可以在同一浏览器的不同进程间共享，比如两个IE窗口。这是因为每中浏览器存储cookie的位置不一样，比如</p>
<ul>
<li>​
<ul>
<li>​	Chrome下的cookie放在：C:\Users\sharexie\AppData\Local\Google\Chrome\User Data\Default\Cache</li>
<li>Firefox下的cookie放在：C:\Users\sharexie\AppData\Roaming\Mozilla\Firefox\Profiles\tq2hit6m.default\cookies.sqlite （倒数第二个文件名是随机的文件名字）</li>
<li>Ie下的cookie放在：C:\Users\Administrator\AppData\Roaming\Microsoft\Windows\Cookies</li>
</ul>
</li>
<li><strong>Cookie的内容、作用域以及有效期</strong></li>
</ul>
<p>cookie的内容主要包括：名字，值，过期时间，路径和域。路径与域合在一起就构成了cookie的作用范围。</p>
<p>如果不设置过期时间，则表示这个cookie的生命期为浏览器会话期间，只要关闭浏览器窗口，cookie就消失了，这种生命期为浏览器会话期的 cookie被称为会话cookie。会话cookie一般不存储在硬盘上而是保存在内存里。如果设置了过期时间，浏览器就会把cookie保存到硬盘上，关闭后再次打开浏览器，这些cookie仍然有效直到超过设定的过期时间。</p>
<ul>
<li><strong>Cookie如何使用</strong></li>
</ul>
<p>cookie 的使用是由浏览器按照一定的原则在后台自动发送给服务器的。</p>
<p>当客户端二次向服务器发送请求的时候，浏览器检查所有存储的cookie，如果某个cookie所声明的作用范围大于等于将要请求的资源所在的位置，则把该cookie附在请求资源的HTTP请求头上发送给服务器。有了Cookie这样的技术实现，服务器在接收到来自客户端浏览器的请求之后，就能够通过分析存放于请求头的Cookie得到客户端特有的信息，从而动态生成与该客户端相对应的内容。通常，我们可以从很多网站的登录界面中看到“请记住我”这样的选项，如果你勾选了它之后再登录，那么在下一次访问该网站的时候就不需要进行重复而繁琐的登录动作了，而这个功能就是通过Cookie实现的。</p>
<ul>
<li><strong>什么是Session</strong></li>
</ul>
<p>Session一般叫做会话，Session技术是http状态保持在服务端的解决方案，它是通过服务器来保持状态的。我们可以把客户端浏览器与服务器之间一系列交互的动作称为一个 Session。是服务器端为客户端所开辟的存储空间，在其中保存的信息就是用于保持状态。因此，session是解决http协议无状态问题的服务端解决方案，它能让客户端和服务端一系列交互动作变成一个完整的事务。</p>
<ul>
<li><strong>Session的创建</strong></li>
</ul>
<p>那么Session在何时创建呢？当然还是在服务器端程序运行的过程中创建的，不同语言实现的应用程序有不同创建Session的方法。</p>
<p>当客户端第一次请求服务端，当server端程序调用 HttpServletRequest.getSession(true)这样的语句时的时候，服务器会为客户端创建一个session，并将通过特殊算法算出一个session的ID，用来标识该session对象。</p>
<p>Session存储在服务器的内存中(tomcat服务器通过StandardManager类将session存储在内存中)，也可以持久化到file，数据库，memcache，redis等。客户端只保存sessionid到cookie中，而不会保存session。</p>
<p>浏览器的关闭并不会导致Session的删除，只有当超时、程序调用HttpSession.invalidate()以及服务端程序关闭才会删除。</p>
<ul>
<li><strong>Tomcat中的Session创建</strong></li>
</ul>
<p><code>ManagerBase</code>是所有session管理工具类的基类，它是一个抽象类，所有具体实现session管理功能的类都要继承这个类，该类有一个受保护的方法，该方法就是创建sessionId值的方法：</p>
<p>(tomcat的session的id值生成的机制是一个随机数加时间加上jvm的id值，jvm的id值会根据服务器的硬件信息计算得来，因此不同jvm的id值都是唯一的)。</p>
<p><code>StandardManager</code>类是tomcat容器里默认的session管理实现类，它会将session的信息存储到web容器所在服务器的内存里。 <code>PersistentManagerBase</code>也是继承ManagerBase类，它是所有持久化存储session信息的基类，PersistentManager继承了PersistentManagerBase，但是这个类只是多了一个静态变量和一个getName方法，目前看来意义不大，对于持久化存储session，tomcat还提供了StoreBase的抽象类，它是所有持久化存储session的基类，另外tomcat还给出了文件存储FileStore和数据存储JDBCStore两个实现。</p>
<ul>
<li><strong>Cookie与Session的关系</strong></li>
</ul>
<p>cookie和session的方案虽然分别属于客户端和服务端，但是服务端的session的实现对客户端的cookie有依赖关系的，服务端执行session机制时候会生成session的id值，这个id值会发送给客户端，客户端每次请求都会把这个id值放到http请求的头部发送给服务端，而这个id值在客户端会保存下来，保存的容器就是cookie，因此当我们完全禁掉浏览器的cookie的时候，服务端的session也会不能正常使用。</p>
<h2>2. 会话技术的发展</h2>
<blockquote>
<p>会话技术的发展?</p>
</blockquote>
<ul>
<li>单机 - Session + Cookie</li>
<li>多机器
<ul>
<li>在负载均衡侧 - Session 粘滞</li>
<li>Session数据同步</li>
</ul>
</li>
<li>多机器，集群 - session集中管理，比如redis；目前方案上用的最多的是SpringSession，早前也有用tomcat集成方式的。</li>
<li>无状态token，比如JWT</li>
</ul>
<h2>3. 分布式会话的方案</h2>
<blockquote>
<p>无状态的token或者有状态的Session集中管理是目前最为常用的方案， 本节主要讨论的有状态的分布式Session会话。</p>
</blockquote>
<h3>3.1 Session Stick</h3>
<blockquote>
<p>为什么这种方案到目前还有很多项目使用呢？因为不需要在项目代码侧改动，而是只需要在负载均衡侧改动。</p>
</blockquote>
<p>方案即将客户端的每次请求都转发至同一台服务器，这就需要负载均衡器能够根据每次请求的会话标识（SessionId）来进行请求转发，如下图所示。</p>
<p><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301007076.png" alt="image-20220623225012021" loading="lazy"><br>
这种方案实现比较简单，对于Web服务器来说和单机的情况一样。但是可能会带来如下问题：</p>
<ul>
<li>如果有一台服务器宕机或者重启，那么这台机器上的会话数据会全部丢失。</li>
<li>会话标识是应用层信息，那么负载均衡要将同一个会话的请求都保存到同一个Web服务器上的话，就需要进行应用层（第7层）的解析，这个开销比第4层大。</li>
<li>负载均衡器将变成一个有状态的节点，要将会话保存到具体Web服务器的映射。和无状态节点相比，内存消耗更大，容灾方面也会更麻烦。</li>
</ul>
<h3>3.2 Session Replication</h3>
<p>Session Replication 的方案则不对负载均衡器做更改，而是在Web服务器之间增加了会话数据同步的功能，各个服务器之间通过同步保证不同Web服务器之间的Session数据的一致性，如下图所示。</p>
<p><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301007119.png" alt="image-20220623225319136" loading="lazy"><br>
Session Replication 方案对负载均衡器不再有要求，但是同样会带来以下问题：</p>
<ul>
<li>同步Session数据会造成额外的网络带宽的开销，只要Session数据有变化，就需要将新产生的Session数据同步到其他服务器上，服务器数量越多，同步带来的网络带宽开销也就越大。</li>
<li>每台Web服务器都需要保存全部的Session数据，如果整个集群的Session数量太多的话，则对于每台机器用于保存Session数据的占用会很严重。</li>
</ul>
<h3>3.3 Session 数据集中存储</h3>
<p>Session 数据集中存储方案则是将集群中的所有Session集中存储起来，Web服务器本身则并不存储Session数据，不同的Web服务器从同样的地方来获取Session，如下图所示。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301007144.png" alt="image-20220623225533405" tabindex="0" loading="lazy"><figcaption>image-20220623225533405</figcaption></figure>
<p>相对于Session Replication方案，此方案的Session数据将不保存在本机，并且Web服务器之间也没有了Session数据的复制，但是该方案存在的问题在于：</p>
<ul>
<li>读写Session数据引入了网络操作，这相对于本机的数据读取来说，问题就在于存在时延和不稳定性，但是通信发生在内网，则问题不大。</li>
<li>如果集中存储Session的机器或集群出现问题，则会影响应用。</li>
</ul>
<h3>3.4 Cookie Based</h3>
<p>Cookie Based 方案是将<strong>Session数据放在Cookie里</strong>，访问Web服务器的时候，再由Web服务器生成对应的Session数据，如下图所示。</p>
<p><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301007163.png" alt="image-20220623225744196" loading="lazy"><br>
但是Cookie Based 方案依然存在不足：</p>
<ul>
<li>Cookie长度的限制。这会导致Session长度的限制。</li>
<li>安全性。Seesion数据本来是服务端数据，却被保存在了客户端，即使可以加密，但是依然存在不安全性。</li>
<li>带宽消耗。这里不是指内部Web服务器之间的宽带消耗，而是数据中心的整体外部带宽的消耗。</li>
<li>性能影响。每次HTTP请求和响应都带有Seesion数据，对Web服务器来说，在同样的处理情况下，响应的结果输出越少，支持的并发就会越高。</li>
</ul>
<h2>4. Token</h2>
<p>JSON Web Token，一般用它来替换掉Session实现数据共享。</p>
<p>使用基于 Token 的身份验证方法，在服务端不需要存储用户的登录记录。大概的流程是这样的：</p>
<ul>
<li>1、客户端通过用户名和密码登录服务器；</li>
<li>2、服务端对客户端身份进行验证；</li>
<li>3、服务端对该用户生成Token，返回给客户端；</li>
<li>4、客户端将Token保存到本地浏览器，一般保存到cookie中；</li>
<li>5、客户端发起请求，需要携带该Token；</li>
<li>6、服务端收到请求后，首先验证Token，之后返回数据</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301007189.png" alt="image-20220623230215140" tabindex="0" loading="lazy"><figcaption>image-20220623230215140</figcaption></figure>
<p><strong>优点</strong>：</p>
<ul>
<li>无状态、可扩展 ：在客户端存储的Token是无状态的，并且能够被扩展。基于这种无状态和不存储Session信息，负载均衡器能够将用户信息从一个服务传到其他服务器上。</li>
<li>安全：请求中发送token而不再是发送cookie能够防止CSRF(跨站请求伪造)。</li>
<li>可提供接口给第三方服务：使用token时，可以提供可选的权限给第三方应用程序。</li>
<li>多平台跨域</li>
</ul>
<p>对应用程序和服务进行扩展的时候，需要介入各种各种的设备和应用程序。 假如我们的后端api服务器a.com只提供数据，而静态资源则存放在cdn 服务器b.com上。当我们从a.com请求b.com下面的资源时，由于触发浏览器的同源策略限制而被阻止。</p>
<p><strong>我们通过CORS（跨域资源共享）标准和token来解决资源共享和安全问题</strong>。</p>
<p>举个例子，我们可以设置b.com的响应首部字段为：</p>
<div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">//</span><span style="color:#98C379;--shiki-dark:#98C379"> 第一行指定了允许访问该资源的外域</span><span style="color:#98C379;--shiki-dark:#98C379"> URI。</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">Access-Control-Allow-Origin:</span><span style="color:#98C379;--shiki-dark:#98C379"> http://a.com</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">//</span><span style="color:#98C379;--shiki-dark:#98C379"> 第二行指明了实际请求中允许携带的首部字段，这里加入了Authorization，用来存放token。</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">Access-Control-Allow-Headers:</span><span style="color:#98C379;--shiki-dark:#98C379"> Authorization,</span><span style="color:#98C379;--shiki-dark:#98C379"> X-Requested-With,</span><span style="color:#98C379;--shiki-dark:#98C379"> Content-Type,</span><span style="color:#98C379;--shiki-dark:#98C379"> Accept</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">//</span><span style="color:#98C379;--shiki-dark:#98C379"> 第三行用于预检请求的响应。其指明了实际请求所允许使用的</span><span style="color:#98C379;--shiki-dark:#98C379"> HTTP</span><span style="color:#98C379;--shiki-dark:#98C379"> 方法。</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">Access-Control-Allow-Methods:</span><span style="color:#98C379;--shiki-dark:#98C379"> GET,</span><span style="color:#98C379;--shiki-dark:#98C379"> POST,</span><span style="color:#98C379;--shiki-dark:#98C379"> PUT,DELETE</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">//</span><span style="color:#98C379;--shiki-dark:#98C379"> 然后用户从a.com携带有一个通过了验证的token访问B域名，数据和资源就能够在任何域上被请求到。</span></span></code></pre>
</div><h2>参考文章</h2>
<p><a href="https://pdai.tech/md/arch/arch-z-session.html" target="_blank" rel="noopener noreferrer"><strong>分布式系统 - 分布式会话及实现方案</strong></a></p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301007076.png" type="image/png"/>
    </item>
    <item>
      <title>分布式系统-分布式事务及实现方案</title>
      <link>https://mrjackc.github.io/posts/Architect/distributed/arch-z-transection.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/distributed/arch-z-transection.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">分布式系统-分布式事务及实现方案</source>
      <description>分布式系统-分布式事务及实现方案 事务是一个程序执行单元，里面的所有操作要么全部执行成功，要么全部执行失败。而分布式事务是指事务的参与者、支持事务的服务器、资源服务器以及事务管理器分别位于不同的分布式系统的不同节点之上。 1. 什么是分布式事务 事务是一个程序执行单元，里面的所有操作要么全部执行成功，要么全部执行失败。在分布式系统中，这些操作可能是位于...</description>
      <category>架构</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<blockquote>
<p><strong>事务</strong>是一个程序执行单元，里面的所有操作要么全部执行成功，要么全部执行失败。而<strong>分布式事务</strong>是指事务的参与者、支持事务的服务器、资源服务器以及事务管理器分别位于不同的分布式系统的不同节点之上。</p>
</blockquote>
<h2>1. 什么是分布式事务</h2>
<blockquote>
<p><strong>事务</strong>是一个程序执行单元，里面的所有操作要么全部执行成功，要么全部执行失败。在分布式系统中，这些操作可能是位于不同的服务中，那么如果也能保证这些操作要么全部执行成功要么全部执行失败呢？这便是分布式事务要解决的问题。</p>
</blockquote>
<p><strong>以一个网上的经典下单减库存例子为例</strong>：</p>
<p>单体应用所有的业务都使用一个数据库，整个下单流程或许只用在一个方法里同一个事务下操作数据库即可。此时所有操作都在一个事务里，要么全部提交，要么全部回滚。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301009050.png" alt="image-20220620194336102" tabindex="0" loading="lazy"><figcaption>image-20220620194336102</figcaption></figure>
<p>但随着业务量不断增长，业务服务化拆分，就会分离出订单中心、库存中心等。而这样就造成业务间相互隔离，每个业务都维护着自己的数据库，数据的交换只能进行服务调用。</p>
<p>用户再下单时，创建订单和扣减库存，需要同时对订单DB和库存DB进行操作。两步操作必须同时成功，否则就会造成业务混乱，可此时我们只能保证自己服务的数据一致性，无法保证调用其他服务的操作是否成功，所以为了保证整个下单流程的数据一致性，就需要分布式事务介入。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301009102.png" alt="image-20220620194459985" tabindex="0" loading="lazy"><figcaption>image-20220620194459985</figcaption></figure>
<h2>2. 如何理解分布式事务</h2>
<blockquote>
<p>分布式的理论角度和分布式事务的知识体系角度理解分布式事务。</p>
</blockquote>
<h3>2.1 从分布式的理论的角度看</h3>
<blockquote>
<p>分布式的理论基础是CAP，由于P(分区容错）是必选项，所以只能在AP或者CP中选择。</p>
</blockquote>
<ul>
<li><strong>分布式理论的CP</strong> -&gt; 刚性事务</li>
</ul>
<p>遵循ACID，对数据要求强一致性</p>
<ul>
<li><strong>分布式理论的AP+BASE</strong> -&gt; 柔性事务</li>
</ul>
<p>遵循BASE，允许一定时间内不同节点的数据不一致，但要求最终一致。</p>
<h3>2.2 从分布式事务的体系看</h3>
<p>如下图，可以帮助你构筑分布式事务的知识体系，一目了然。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301009129.png" alt="image-20220620194648624" tabindex="0" loading="lazy"><figcaption>image-20220620194648624</figcaption></figure>
<h4>2.2.1 刚性事务</h4>
<p><strong>刚性事务</strong>：分布式理论的CP，遵循ACID，对数据要求强一致性。</p>
<ul>
<li><strong>XA协议</strong> 是一个基于数据库层面的分布式事务协议，其分为两部分：<strong>事务管理器（Transaction Manager）<strong>和</strong>本地资源管理器（Resource Manager）</strong>。事务管理器作为一个全局的调度者，负责对各个本地资源管理器统一号令提交或者回滚。主流的诸如Oracle、MySQL等数据库均已实现了XA接口。
<ul>
<li><strong>二阶提交协议（2PC）</strong>: 根据XA协议衍生出来而来; 引入一个作为协调者的组件来统一掌控所有参与者的操作结果并最终指示这些节点是否要把操作结果进行真正的提交; 参与者将操作成败通知协调者，再由协调者根据所有参与者的反馈情报决定各参与者是否要提交操作还是中止操作。所谓的两个阶段是指：第一阶段：准备阶段 (投票阶段) 和第二阶段：提交阶段（执行阶段）</li>
<li><strong>三阶提交协议（3PC）</strong>: 是对两段提交（2PC）的一种升级优化，<strong>3PC在2PC的第一阶段和第二阶段中插入一个准备阶段</strong>。保证了在最后提交阶段之前，各参与者节点的状态都一致。同时在协调者和参与者中都引入超时机制，当参与者各种原因未收到协调者的commit请求后，会对本地事务进行commit，不会一直阻塞等待，解决了2PC的单点故障问题，但3PC还是没能从根本上解决数据一致性的问题。</li>
</ul>
</li>
<li>Java事务规范
<ul>
<li><strong>JTA</strong>：Java事务API（Java Transaction API）是一个Java企业版的应用程序接口，在Java环境中，允许完成跨越多个XA资源的分布式事务。</li>
<li><strong>JTS</strong>：Java事务服务（Java Transaction Service）是J2EE平台提供了分布式事务服务的具体实现规范，j2ee服务器提供商根据JTS规范实现事务并提供JTA接口。</li>
</ul>
</li>
</ul>
<h4>2.2.2 柔性事务</h4>
<p><strong>柔性事务</strong>：分布式理论的AP，遵循BASE，允许一定时间内不同节点的数据不一致，但要求最终一致。</p>
<ul>
<li>基于业务层
<ul>
<li><strong>TCC</strong>: TCC（Try-Confirm-Cancel）又被称补偿事务，TCC与2PC的思想很相似，事务处理流程也很相似，但2PC是应用于在DB层面，TCC则可以理解为在应用层面的2PC，是需要我们编写业务逻辑来实现。</li>
<li><strong>SAGA</strong>：Saga是由一系列的本地事务构成。每一个本地事务在更新完数据库之后，会发布一条消息或者一个事件来触发Saga中的下一个本地事务的执行。如果一个本地事务因为某些业务规则无法满足而失败，Saga会执行在这个失败的事务之前成功提交的所有事务的补偿操作。Saga的实现有很多种方式，其中最流行的两种方式是：基于事件的方式和基于命令的方式。</li>
</ul>
</li>
<li>最终一致性
<ul>
<li><strong>消息表</strong>：本地消息表的方案最初是由 eBay 提出，核心思路是将分布式事务拆分成本地事务进行处理。</li>
<li><strong>消息队列</strong>：基于 MQ 的分布式事务方案其实是对本地消息表的封装，将本地消息表基于 MQ 内部，其他方面的协议基本与本地消息表一致。</li>
<li><strong>最大努力通知</strong>：最大努力通知也称为定期校对，是对MQ事务方案的进一步优化。它在事务主动方增加了消息校对的接口，如果事务被动方没有接收到消息，此时可以调用事务主动方提供的消息校对的接口主动获取。</li>
</ul>
</li>
</ul>
<h2>3. 分布式事务方案之刚性事务</h2>
<blockquote>
<p>说到刚性事务，首先要讲的是XA协议。XA协议是一个基于<strong>数据库</strong>的分布式事务协议，其分为两部分：<strong>事务管理器（Transaction Manager）**和**本地资源管理器（Resource Manager）</strong>。事务管理器作为一个全局的调度者，负责对各个本地资源管理器统一号令提交或者回滚。<code>二阶提交协议（2PC）</code>和<code>三阶提交协议（3PC）</code>就是根据此协议衍生出来而来。主流的诸如Oracle、MySQL等数据库均已实现了XA接口。</p>
</blockquote>
<p>XA接口是双向的系统接口，在事务管理器（Transaction Manager）以及一个或多个资源管理器（Resource Manager）之间形成通信桥梁。也就是说，在基于XA的一个事务中，我们可以针对多个资源进行事务管理，例如一个系统访问多个数据库，或即访问数据库、又访问像消息中间件这样的资源。这样我们就能够实现在多个数据库和消息中间件直接实现全部提交、或全部取消的事务。<strong>XA规范不是java的规范，而是一种通用的规范; Java 中的规范是JTA和JTS：Java事务API（Java Transaction API）是一个Java企业版的应用程序接口，在Java环境中，允许完成跨越多个XA资源的分布式事务；Java事务服务（Java Transaction Service）是J2EE平台提供了分布式事务服务的具体实现规范，j2ee服务器提供商根据JTS规范实现事务并提供JTA接口</strong>。</p>
<h3>3.1 两段提交（2PC）</h3>
<blockquote>
<p>引入一个作为协调者（coordinator）的组件来统一掌控所有参与者（participant）的操作结果，并最终指示这些节点是否要把操作结果进行真正的提交。</p>
</blockquote>
<p>简单而言：参与者（participant）用来管理资源，协调者（coordinator）用来协调事务状态</p>
<p>两段提交（2PC - Prepare &amp; Commit）是指两个阶段的提交：</p>
<ul>
<li>第一阶段: 准备阶段；
<ul>
<li>协调者向所有参与者发送 REQUEST-TO-PREPARE</li>
<li>当参与者收到REQUEST-TO-PREPARE 消息后, 它向协调者发送消息PREPARED或者NO，表示事务是否准备好；如果发送的是NO，那么事务要回滚；</li>
</ul>
</li>
<li>第二阶段: 提交阶段。
<ul>
<li>协调者收集所有参与者的返回消息, 如果所有的参与者都回复的是PREPARED， 那么协调者向所有参与者发送COMMIT 消息；否则，协调者向所有回复PREPARED的参与者发送ABORT消息；</li>
<li>参与者如果回复了PREPARED消息并且收到协调者发来的COMMIT消息，或者它收到ABORT消息，它将执行提交或回滚，并向协调者发送DONE消息以确认。</li>
</ul>
</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301009159.png" alt="image-20220620202716714" tabindex="0" loading="lazy"><figcaption>image-20220620202716714</figcaption></figure>
<p><strong>两段提交（2PC）的缺点</strong>：</p>
<p>二阶段提交看似能够提供原子性的操作，但它存在着严重的缺陷：</p>
<ul>
<li><strong>网络抖动导致的数据不一致</strong>：第二阶段中协调者向参与者发送commit命令之后，一旦此时发生网络抖动，导致一部分参与者接收到了commit请求并执行，可其他未接到commit请求的参与者无法执行事务提交。进而导致整个分布式系统出现了数据不一致。</li>
<li><strong>超时导致的同步阻塞问题</strong>：2PC中的所有的参与者节点都为事务阻塞型，当某一个参与者节点出现通信超时，其余参与者都会被动阻塞占用资源不能释放。</li>
<li><strong>单点故障的风险</strong>：由于严重的依赖协调者，一旦协调者发生故障，而此时参与者还都处于锁定资源的状态，无法完成事务commit操作。虽然协调者出现故障后，会重新选举一个协调者，可无法解决因前一个协调者宕机导致的参与者处于阻塞状态的问题。</li>
</ul>
<p><strong>2PC小结</strong></p>
<p>2PC除本身的算法局限外，还有一个使用上的限制，就是它主要用在两个数据库之间（数据库实现了XA协议）。两个系统之间是无法使用2PC的，因为不会直接在底层的两个业务数据库之间做一致性，而是在两个服务上面实现一致性。</p>
<blockquote>
<p><em>2PC只适用两个数据库（数据库实现了XA协议）之间；2PC有诸多问题和不便，在实践中一般很少使用</em>。</p>
</blockquote>
<h3>3.2 三段提交（3PC）</h3>
<blockquote>
<p>三段提交（3PC）是对两段提交（2PC）的一种升级优化，<strong>3PC在2PC的第一阶段和第二阶段中插入一个准备阶段</strong>。保证了在最后提交阶段之前，各参与者节点的状态都一致。同时在协调者和参与者中都引入超时机制，当参与者各种原因未收到协调者的commit请求后，会对本地事务进行commit，不会一直阻塞等待，解决了2PC的单点故障问题，但3PC还是没能从根本上解决数据一致性的问题。</p>
</blockquote>
<p><strong>3PC的三个阶段分别是CanCommit、PreCommit、DoCommit</strong>：</p>
<ul>
<li><strong>CanCommit</strong>：协调者向所有参与者发送CanCommit命令，询问是否可以执行事务提交操作。如果全部响应YES则进入下一个阶段。</li>
<li><strong>PreCommit</strong>：协调者向所有参与者发送PreCommit命令，询问是否可以进行事务的预提交操作，参与者接收到PreCommit请求后，如参与者成功的执行了事务操作，则返回Yes响应，进入最终commit阶段。一旦参与者中有向协调者发送了No响应，或因网络造成超时，协调者没有接到参与者的响应，协调者向所有参与者发送abort请求，参与者接受abort命令执行事务的中断。</li>
<li><strong>DoCommit</strong>：在前两个阶段中所有参与者的响应反馈均是YES后，协调者向参与者发送DoCommit命令正式提交事务，如协调者没有接收到参与者发送的ACK响应，会向所有参与者发送abort请求命令，执行事务的中断。</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301009182.png" alt="image-20220620203825150" tabindex="0" loading="lazy"><figcaption>image-20220620203825150</figcaption></figure>
<p><strong>3PC存在的问题</strong></p>
<p>3PC工作在同步网络模型上，它假设消息传输时间是有上界的，只存在机器失败而不存在消息失败。这个假设太强，现实的情形是，机器失败是无法完美地检测出来的，消息传输可能因为网络拥堵花费很多时间。同时, 说阻塞是相对, 存在协调者和参与者同时失败的情形下, 3PC事务依然会阻塞。实际上，很少会有系统实现3PC，多数现实的系统会通过复制状态机解决2PC阻塞的问题。比如，如果失败模型不是失败-停止, 而是消息失败（消息延迟或网络分区），那样3PC会产生不一致的情形。</p>
<p><strong>3PC小结</strong></p>
<blockquote>
<p><em>3PC并没有完美解决2PC的阻塞，也引入了新的问题（不一致问题），所以3PC很少会被真正的使用</em>。</p>
</blockquote>
<h2>4. 分布式事务方案之柔性事务</h2>
<blockquote>
<p>柔性事务：分布式理论的AP，遵循BASE，允许一定时间内不同节点的数据不一致，但要求最终一致。</p>
</blockquote>
<h3>4.1 补偿事务 (TCC)</h3>
<blockquote>
<p>TCC（Try-Confirm-Cancel）又被称补偿事务，TCC与2PC的思想很相似，事务处理流程也很相似，但<strong>2PC是应用于在DB层面，TCC则可以理解为在应用层面的2PC，是需要我们编写业务逻辑来实现</strong>。</p>
</blockquote>
<p>TCC它的核心思想是："针对每个操作都要注册一个与其对应的确认（Try）和补偿（Cancel）"。</p>
<p>还拿下单扣库存解释下它的三个操作：</p>
<ul>
<li><strong>Try阶段</strong>：下单时通过Try操作去扣除库存预留资源。</li>
<li><strong>Confirm阶段</strong>：确认执行业务操作，在只预留的资源基础上，发起购买请求。</li>
<li><strong>Cancel阶段</strong>：只要涉及到的相关业务中，有一个业务方预留资源未成功，则取消所有业务资源的预留请求。</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301009223.png" alt="image-20220620204222513" tabindex="0" loading="lazy"><figcaption>image-20220620204222513</figcaption></figure>
<p><strong>TCC的缺点</strong>：</p>
<ol>
<li>
<p>空回滚</p>
<p>当一个分支事务所在的服务发生宕机或者网络异常导致调用失败，并未执行try方法，当恢复后事务执行回滚操作就会调用此分支事务的cancel方法,如果cancel方法不能处理此种情况就会出现空回滚。</p>
<p>是否出现空回滚，我们需要需要判断是否执行了try方法，如果执行了就没有空回滚。解决方法就是当主业务发起事务时，生成一个全局事务记录，并生成一个全局唯一ID，贯穿整个事务，再创建一张分支事务记录表，用于记录分支事务，try执行时将全局事务ID和分支事务ID存入分支事务表中，表示执行了try阶段，当cancel执行时，先判断表中是否有该全局事务ID的数据，如果有则回滚，否则不做任何操作。比如seata的AT模式中就有分支事务表。</p>
</li>
<li>
<p>幂等问题</p>
<p>由于服务宕机或者网络问题，方法的调用可能出现超时，为了保证事务正常执行我们往往会加入重试的机制，因此就需要保证confirm和cancel阶段操作的幂等性。</p>
<p>我们可以在分支事务记录表中增加事务执行状态，每次执行confirm和cancel方法时都查询该事务的执行状态，以此判断事务的幂等性。</p>
</li>
<li>
<p>悬挂问题</p>
<p>TCC中，在调用try之前会先注册分支事务，注册分支事务之后，调用出现超时，此时try请求还未到达对应的服务，因为调用超时了，所以会执行cancel调用，此时cancel已经执行完了，然而这个时候try请求到达了，这个时候执行了try之后就没有后续的操作了，就会导致资源挂起，无法释放。</p>
<p>执行try方法时我们可以判断confirm或者cancel方法是否执行，如果执行了那么就不执行try阶段。同样借助分支事务表中事务的执行状态。如果已经执行了confirm或者cancel那么try就执行。</p>
</li>
</ol>
<h3>4.2 Saga事务</h3>
<blockquote>
<p>Saga是分布式事务领域最有名气的解决方案之一，最初出现在1987年Hector Garcaa-Molrna &amp; Kenneth Salem发表的论文SAGAS里。 如下内容主要来源于<a href="https://blog.couchbase.com/saga-pattern-implement-business-transactions-using-microservices-part/" target="_blank" rel="noopener noreferrer">这里</a>，然后由flyingww翻译整理在<a href="https://zhuanlan.zhihu.com/p/95852045" target="_blank" rel="noopener noreferrer">知乎</a>。</p>
</blockquote>
<p>Saga是由一系列的本地事务构成。每一个本地事务在更新完数据库之后，会发布一条消息或者一个事件来触发Saga中的下一个本地事务的执行。如果一个本地事务因为某些业务规则无法满足而失败，Saga会执行在这个失败的事务之前成功提交的所有事务的补偿操作。</p>
<p>Saga的实现有很多种方式，其中最流行的两种方式是：</p>
<ul>
<li><strong>基于事件的方式</strong>。这种方式没有协调中心，整个模式的工作方式就像舞蹈一样，各个舞蹈演员按照预先编排的动作和走位各自表演，最终形成一只舞蹈。处于当前Saga下的各个服务，会产生某类事件，或者监听其它服务产生的事件并决定是否需要针对监听到的事件做出响应。</li>
<li><strong>基于命令的方式</strong>。这种方式的工作形式就像一只乐队，由一个指挥家（协调中心）来协调大家的工作。协调中心来告诉Saga的参与方应该执行哪一个本地事务。</li>
</ul>
<p>我们继续以订单流程为例，说明一下该模式。</p>
<p>假设一个完整的订单流程包含了如下几个服务：</p>
<ol>
<li>Order Service：订单服务</li>
<li>Payment Service：支付服务</li>
<li>Stock Service：库存服务</li>
<li>Delivery Service：物流服务</li>
</ol>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301009250.png" alt="image-20220620204857819" tabindex="0" loading="lazy"><figcaption>image-20220620204857819</figcaption></figure>
<h4>4.2.1 基于事件的方式</h4>
<p>在基于事件的方式中，第一个服务执行完本地事务之后，会产生一个事件。其它服务会监听这个事件，触发该服务本地事务的执行，并产生新的事件。</p>
<p>采用基于事件的saga模式的订单处理流程如下：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301009276.png" alt="image-20220620204955668" tabindex="0" loading="lazy"><figcaption>image-20220620204955668</figcaption></figure>
<ol>
<li>订单服务创建一笔新订单，将订单状态设置为"待处理"，产生事件ORDER_CREATED_EVENT。</li>
<li>支付服务监听ORDER_CREATED_EVENT，完成扣款并产生事件BILLED_ORDER_EVENT。</li>
<li>库存服务监听BILLED_ORDER_EVENT，完成库存扣减和备货，产生事件ORDER_PREPARED_EVENT。</li>
<li>物流服务监听ORDER_PREPARED_EVENT，完成商品配送，产生事件ORDER_DELIVERED_EVENT。</li>
<li>订单服务监听ORDER_DELIVERED_EVENT，将订单状态更新为"完成"。</li>
</ol>
<p>在这个流程中，订单服务很可能还会监听BILLED_ORDER_EVENT，ORDER_PREPARED_EVENT来完成订单状态的实时更新。将订单状态分别更新为"已经支付"和"已经出库"等状态来及时反映订单的最新状态。</p>
<h5>4.2.1.1 <strong>该模式下分布式事务的回滚</strong></h5>
<p>为了在异常情况下回滚整个分布式事务，我们需要为相关服务提供补偿操作接口。</p>
<p>假设库存服务由于库存不足没能正确完成备货，我们可以按照下面的流程来回滚整个Saga事务：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301009300.png" alt="image-image-20220620205136726.png" tabindex="0" loading="lazy"><figcaption>image-image-20220620205136726.png</figcaption></figure>
<ol>
<li>库存服务产生事件PRODUCT_OUT_OF_STOCK_EVENT。</li>
<li>订单服务和支付服务都会监听该事件并做出响应：
<ol>
<li>支付服务完成退款。</li>
<li>订单服务将订单状态设置为"失败"。</li>
</ol>
</li>
</ol>
<h5>4.2.1.2 <strong>基于事件方式的优缺点</strong></h5>
<p><strong>优点</strong>：简单且容易理解。各参与方相互之间无直接沟通，完全解耦。这种方式比较适合整个分布式事务只有2-4个步骤的情形。</p>
<p><strong>缺点</strong>：这种方式如果涉及比较多的业务参与方，则比较容易失控。各业务参与方可随意监听对方的消息，以至于最后没人知道到底有哪些系统在监听哪些消息。更悲催的是，这个模式还可能产生环形监听，也就是两个业务方相互监听对方所产生的事件。</p>
<p>接下来，我们将介绍如何使用命令的方式来克服上面提到的缺点。</p>
<h4>4.2.2 基于命令的方式</h4>
<p>在基于命令的方式中，我们会定义一个新的服务，这个服务扮演的角色就和一支交响乐乐队的指挥一样，告诉各个业务参与方，在什么时候做什么事情。我们管这个新服务叫做协调中心。协调中心通过命令/回复的方式来和Saga中其它服务进行交互。</p>
<p>我们继续以之前的订单流程来举例。下图中的Order Saga Orchestrator就是新引入的协调中心。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301009327.png" alt="image-20220620205512563" tabindex="0" loading="lazy"><figcaption>image-20220620205512563</figcaption></figure>
<ol>
<li>订单服务创建一笔新订单，将订单状态设置为"待处理"，然后让Order Saga Orchestrator（OSO）开启创建订单事务。</li>
<li>OSO发送一个"支付命令"给支付服务，支付服务完成扣款并回复"支付完成"消息。</li>
<li>OSO发送一个"备货命令"给库存服务，库存服务完成库存扣减和备货，并回复"出库"消息。</li>
<li>OSO发送一个"配送命令"给物流服务，物流服务完成配送，并回复"配送完成"消息。</li>
<li>OSO向订单服务发送"订单结束命令"给订单服务，订单服务将订单状态设置为"完成"。</li>
<li>OSO清楚一个订单处理Saga的具体流程，并在出现异常时向相关服务发送补偿命令来回滚整个分布式事务。</li>
</ol>
<p>实现协调中心的一个比较好的方式是使用<strong>状态机(Sate Machine)</strong>。</p>
<h5>4.2.2.1 <strong>该模式下分布式事务的回滚</strong></h5>
<p>该模式下的回滚流程如下：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301009347.png" alt="image-20220620205704545" tabindex="0" loading="lazy"><figcaption>image-20220620205704545</figcaption></figure>
<ol>
<li>库存服务回复OSO一个"库存不足"消息。</li>
<li>OSO意识到该分布式事务失败了，触发回滚流程：</li>
<li>OSO发送"退款命令"给支付服务，支付服务完成退款并回复"退款成功"消息。</li>
<li>OSO向订单服务发送"将订单状态改为失败命令"，订单服务将订单状态更新为"失败"。</li>
</ol>
<h5>4.2.2.2 <strong>基于命令方式的优缺点</strong></h5>
<p>优点：</p>
<ol>
<li>避免了业务方之间的环形依赖。</li>
<li>将分布式事务的管理交由协调中心管理，协调中心对整个逻辑非常清楚。</li>
<li>减少了业务参与方的复杂度。这些业务参与方不再需要监听不同的消息，只是需要响应命令并回复消息。</li>
<li>测试更容易（分布式事务逻辑存在于协调中心，而不是分散在各业务方）。</li>
<li>回滚也更容易。</li>
</ol>
<p>缺点：</p>
<ol>
<li>一个可能的缺点就是需要维护协调中心，而这个协调中心并不属于任何业务方。</li>
</ol>
<h4>4.2.3 Saga模式建议</h4>
<ol>
<li>给每一个分布式事务创建一个唯一的Tx id。这个唯一的Tx id可以用来在各个业务参与方沟通时精确定位哪一笔分布式事务。</li>
<li>对于基于命令的方式，在命令中携带回复地址。这种方式可以让服务同时响应多个协调中心请求。</li>
<li>幂等性。幂等性能够增加系统的容错性，让各个业务参与方服务提供幂等性操作，能够在遇到异常情况下进行重试。</li>
<li>尽量在命令或者消息中携带下游处理需要的业务数据，避免下游处理时需要调用消息产生方接口获取更多数据。减少系统之间的相互依赖。</li>
</ol>
<h3>4.3 本地消息表</h3>
<blockquote>
<p>本地消息表的方案最初是由 eBay 提出，核心思路是将分布式事务拆分成本地事务进行处理。</p>
</blockquote>
<p>角色：</p>
<ul>
<li>事务主动方</li>
<li>事务被动方</li>
</ul>
<p>通过在事务主动发起方额外新建事务消息表，事务发起方处理业务和记录事务消息在本地事务中完成，轮询事务消息表的数据发送事务消息，事务被动方基于消息中间件消费事务消息表中的事务。</p>
<p>这样可以避免以下两种情况导致的数据不一致性：</p>
<ul>
<li>业务处理成功、事务消息发送失败</li>
<li>业务处理失败、事务消息发送成功</li>
</ul>
<p>整体的流程如下图：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301009367.png" alt="image-20220620210356716" tabindex="0" loading="lazy"><figcaption>image-20220620210356716</figcaption></figure>
<p>上图中整体的处理步骤如下：</p>
<ol>
<li>事务主动方在同一个本地事务中处理业务和写消息表操作</li>
<li>事务主动方通过消息中间件，通知事务被动方处理事务通知事务待消息。消息中间件可以基于 Kafka、RocketMQ 消息队列，事务主动方主动写消息到消息队列，事务消费方消费并处理消息队列中的消息。</li>
<li>事务被动方通过消息中间件，通知事务主动方事务已处理的消息。</li>
<li>事务主动方接收中间件的消息，更新消息表的状态为已处理。</li>
</ol>
<p>一些必要的容错处理如下：</p>
<ul>
<li>当1处理出错，由于还在事务主动方的本地事务中，直接回滚即可</li>
<li>当2,3处理出错，由于事务主动方本地保存了消息，只需要轮询消息重新通过消息中间件发送，事务被动方重新读取消息处理业务即可。</li>
<li>如果是业务上处理失败，事务被动方可以发消息给事务主动方回滚事务</li>
<li>如果事务被动方已经消费了消息，事务主动方需要回滚事务的话，需要发消息通知事务主动方进行回滚事务。</li>
</ul>
<p><strong>优点</strong></p>
<ul>
<li>从应用设计开发的角度实现了消息数据的可靠性，消息数据的可靠性不依赖于消息中间件，弱化了对 MQ 中间件特性的依赖。</li>
<li>方案轻量，容易实现。</li>
</ul>
<p><strong>缺点</strong></p>
<ul>
<li>与具体的业务场景绑定，耦合性强，不可公用。</li>
<li>消息数据与业务数据同库，占用业务系统资源。</li>
<li>业务系统在使用关系型数据库的情况下，消息服务性能会受到关系型数据库并发性能的局限。</li>
</ul>
<h3>4.4 MQ事务方案（可靠消息事务）</h3>
<blockquote>
<p>基于 MQ 的分布式事务方案其实是对本地消息表的封装，将本地消息表基于 MQ 内部，其他方面的协议基本与本地消息表一致。</p>
</blockquote>
<p>MQ事务方案整体流程和本地消息表的流程很相似，如下图：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301009392.png" alt="image-20220620210812437" tabindex="0" loading="lazy"><figcaption>image-20220620210812437</figcaption></figure>
<p>从上图可以看出和本地消息表方案唯一不同就是将本地消息表存在了MQ内部，而不是业务数据库中。</p>
<p>那么MQ内部的处理尤为重要，下面主要基于 RocketMQ 4.3 之后的版本介绍 MQ 的分布式事务方案。</p>
<p>在本地消息表方案中，保证事务主动方发写业务表数据和写消息表数据的一致性是基于数据库事务，RocketMQ 的事务消息相对于普通 MQ提供了 2PC 的提交接口，方案如下：</p>
<h4>4.4.1 <strong>正常情况：事务主动方发消息</strong></h4>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301009415.png" alt="image-20220620210923960" tabindex="0" loading="lazy"><figcaption>image-20220620210923960</figcaption></figure>
<p>这种情况下，事务主动方服务正常，没有发生故障，发消息流程如下：</p>
<ul>
<li>发送方向 MQ 服务端(MQ Server)发送 half 消息。</li>
<li>MQ Server 将消息持久化成功之后，向发送方 ack 确认消息已经发送成功。</li>
<li>发送方开始执行本地事务逻辑。</li>
<li>发送方根据本地事务执行结果向 MQ Server 提交二次确认（commit 或是 rollback）。</li>
<li>MQ Server 收到 commit 状态则将半消息标记为可投递，订阅方最终将收到该消息；MQ Server 收到 rollback 状态则删除半消息，订阅方将不会接受该消息。</li>
</ul>
<h4>4.4.2 <strong>异常情况：事务主动方消息恢复</strong></h4>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301009440.png" alt="image-20220620211120347" tabindex="0" loading="lazy"><figcaption>image-20220620211120347</figcaption></figure>
<p>在断网或者应用重启等异常情况下，图中 4 提交的二次确认超时未到达 MQ Server，此时处理逻辑如下：</p>
<ul>
<li>MQ Server 对该消息发起消息回查。</li>
<li>发送方收到消息回查后，需要检查对应消息的本地事务执行的最终结果。</li>
<li>发送方根据检查得到的本地事务的最终状态再次提交二次确认。</li>
<li>MQ Server基于 commit/rollback 对消息进行投递或者删除。</li>
</ul>
<h4>4.4.3 <strong>优点</strong></h4>
<p>相比本地消息表方案，MQ 事务方案优点是：</p>
<ul>
<li>消息数据独立存储 ，降低业务系统与消息系统之间的耦合。</li>
<li>吞吐量大于使用本地消息表方案。</li>
</ul>
<h4>4.4.4 <strong>缺点</strong></h4>
<ul>
<li>一次消息发送需要两次网络请求(half 消息 + commit/rollback 消息) 。</li>
<li>业务处理服务需要实现消息状态回查接口。</li>
</ul>
<h3>4.5 最大努力通知</h3>
<blockquote>
<p>最大努力通知也称为定期校对，是对MQ事务方案的进一步优化。它在事务主动方增加了消息校对的接口，如果事务被动方没有接收到消息，此时可以调用事务主动方提供的消息校对的接口主动获取。</p>
</blockquote>
<p>最大努力通知的整体流程如下图：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301009467.png" alt="image-20220620211354603" tabindex="0" loading="lazy"><figcaption>image-20220620211354603</figcaption></figure>
<p>在可靠消息事务中，事务主动方需要将消息发送出去，并且消息接收方成功接收，这种可靠性发送是由事务主动方保证的；</p>
<p>但是最大努力通知，事务主动方尽最大努力（重试，轮询....）将事务发送给事务接收方，但是仍然存在消息接收不到，此时需要事务被动方主动调用事务主动方的消息校对接口查询业务消息并消费，这种通知的可靠性是由事务被动方保证的。</p>
<p>最大努力通知适用于业务通知类型，<strong>例如微信交易的结果，就是通过最大努力通知方式通知各个商户，既有回调通知，也有交易查询接口</strong>。</p>
<h2>5. 分布式事务的中间件Seata</h2>
<blockquote>
<p>Seata 是一款开源的分布式事务解决方案，致力于提供高性能和简单易用的分布式事务服务。Seata 将为用户提供了 AT、TCC、SAGA 和 XA 事务模式，为用户打造一站式的分布式解决方案。如下内容来源于<a href="https://seata.io/zh-cn/docs/overview/what-is-seata.html" target="_blank" rel="noopener noreferrer">Seata官网</a></p>
</blockquote>
<ul>
<li><strong>TC (Transaction Coordinator) - 事务协调者</strong>: 维护全局和分支事务的状态，驱动全局事务提交或回滚。</li>
<li><strong>TM (Transaction Manager) - 事务管理器</strong>: 定义全局事务的范围：开始全局事务、提交或回滚全局事务。</li>
<li><strong>RM (Resource Manager) - 资源管理器</strong>: 管理分支事务处理的资源，与TC交谈以注册分支事务和报告分支事务的状态，并驱动分支事务提交或回滚。</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301009492.png" alt="image-20220620211847193" tabindex="0" loading="lazy"><figcaption>image-20220620211847193</figcaption></figure>
<h3>5.1 Seata AT 模式</h3>
<h4>5.1.1 <strong>前提</strong></h4>
<ul>
<li>基于支持本地 ACID 事务的关系型数据库。</li>
<li>Java 应用，通过 JDBC 访问数据库。</li>
</ul>
<h4>5.1.2 <strong>整体机制</strong></h4>
<p>两阶段提交协议的演变：</p>
<ul>
<li>一阶段：业务数据和回滚日志记录在同一个本地事务中提交，释放本地锁和连接资源。</li>
<li>二阶段：
<ul>
<li>提交异步化，非常快速地完成。</li>
<li>回滚通过一阶段的回滚日志进行反向补偿。</li>
</ul>
</li>
</ul>
<h4>5.1.3 <strong>写隔离</strong></h4>
<ul>
<li>一阶段本地事务提交前，需要确保先拿到 全局锁 。</li>
<li>拿不到 全局锁 ，不能提交本地事务。</li>
<li>拿 全局锁 的尝试被限制在一定范围内，超出范围将放弃，并回滚本地事务，释放本地锁。</li>
</ul>
<p>以一个示例来说明：</p>
<p>两个全局事务 tx1 和 tx2，分别对 a 表的 m 字段进行更新操作，m 的初始值 1000。</p>
<p>tx1 先开始，开启本地事务，拿到本地锁，更新操作 m = 1000 - 100 = 900。本地事务提交前，先拿到该记录的 全局锁 ，本地提交释放本地锁。 tx2 后开始，开启本地事务，拿到本地锁，更新操作 m = 900 - 100 = 800。本地事务提交前，尝试拿该记录的 全局锁 ，tx1 全局提交前，该记录的全局锁被 tx1 持有，tx2 需要重试等待 全局锁 。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301009523.png" alt="image-20220620212124418" tabindex="0" loading="lazy"><figcaption>image-20220620212124418</figcaption></figure>
<p>tx1 二阶段全局提交，释放 全局锁 。tx2 拿到 全局锁 提交本地事务。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301009543.png" alt="image-20220620212145672" tabindex="0" loading="lazy"><figcaption>image-20220620212145672</figcaption></figure>
<p>如果 tx1 的二阶段全局回滚，则 tx1 需要重新获取该数据的本地锁，进行反向补偿的更新操作，实现分支的回滚。</p>
<p>此时，如果 tx2 仍在等待该数据的 全局锁，同时持有本地锁，则 tx1 的分支回滚会失败。分支的回滚会一直重试，直到 tx2 的 全局锁 等锁超时，放弃 全局锁 并回滚本地事务释放本地锁，tx1 的分支回滚最终成功。</p>
<p>因为整个过程 全局锁 在 tx1 结束前一直是被 tx1 持有的，所以不会发生 脏写 的问题。</p>
<h4>5.1.4 <strong>读隔离</strong></h4>
<p>在数据库本地事务隔离级别 读已提交（Read Committed） 或以上的基础上，Seata（AT 模式）的默认全局隔离级别是 读未提交（Read Uncommitted） 。</p>
<p>如果应用在特定场景下，必需要求全局的 读已提交 ，目前 Seata 的方式是通过 SELECT FOR UPDATE 语句的代理。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301009572.png" alt="image-20220620212306075" tabindex="0" loading="lazy"><figcaption>image-20220620212306075</figcaption></figure>
<p>SELECT FOR UPDATE 语句的执行会申请 全局锁 ，如果 全局锁 被其他事务持有，则释放本地锁（回滚 SELECT FOR UPDATE 语句的本地执行）并重试。这个过程中，查询是被 block 住的，直到 全局锁 拿到，即读取的相关数据是 已提交 的，才返回。</p>
<p>出于总体性能上的考虑，Seata 目前的方案并没有对所有 SELECT 语句都进行代理，仅针对 FOR UPDATE 的 SELECT 语句。</p>
<h3>5.2 Seata XA 模式</h3>
<h4>5.2.1 前提</h4>
<ul>
<li>支持XA 事务的数据库。</li>
<li>Java 应用，通过 JDBC 访问数据库。</li>
</ul>
<h4>5.2.2 整体机制</h4>
<p>在 Seata 定义的分布式事务框架内，利用事务资源（数据库、消息服务等）对 XA 协议的支持，以 XA 协议的机制来管理分支事务的一种 事务模式。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301009594.png" alt="image-20220620212439618" tabindex="0" loading="lazy"><figcaption>image-20220620212439618</figcaption></figure>
<p><strong>执行阶段</strong>：</p>
<ol>
<li>可回滚：业务 SQL 操作放在 XA 分支中进行，由资源对 XA 协议的支持来保证 可回滚</li>
<li>持久化：XA 分支完成后，执行 XA prepare，同样，由资源对 XA 协议的支持来保证 持久化（即，之后任何意外都不会造成无法回滚的情况）</li>
</ol>
<p><strong>完成阶段</strong>：</p>
<ol>
<li>分支提交：执行 XA 分支的 commit</li>
<li>分支回滚：执行 XA 分支的 rollback</li>
</ol>
<h4>5.2.3 工作机制</h4>
<ol>
<li><strong>整体运行机制</strong></li>
</ol>
<p>XA 模式 运行在 Seata 定义的事务框架内：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301009615.png" alt="image-20220620212552183" tabindex="0" loading="lazy"><figcaption>image-20220620212552183</figcaption></figure>
<ul>
<li>执行阶段（E xecute）： XA start/XA end/XA prepare + SQL + 注册分支</li>
<li>完成阶段（F inish）：XA commit/XA rollback</li>
</ul>
<ol>
<li>数据源代理</li>
</ol>
<p>XA 模式需要 XAConnection。</p>
<p>获取 XAConnection 两种方式：</p>
<ul>
<li>方式一：要求开发者配置 XADataSource</li>
<li>方式二：根据开发者的普通 DataSource 来创建</li>
</ul>
<p>第一种方式，给开发者增加了认知负担，需要为 XA 模式专门去学习和使用 XA 数据源，与 透明化 XA 编程模型的设计目标相违背。</p>
<p>第二种方式，对开发者比较友好，和 AT 模式使用一样，开发者完全不必关心 XA 层面的任何问题，保持本地编程模型即可。</p>
<p>我们优先设计实现第二种方式：数据源代理根据普通数据源中获取的普通 JDBC 连接创建出相应的 XAConnection。</p>
<p>类比 AT 模式的数据源代理机制，如下：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301009642.png" alt="image-20220620212702983" tabindex="0" loading="lazy"><figcaption>image-20220620212702983</figcaption></figure>
<p>但是，第二种方法有局限：无法保证兼容的正确性。</p>
<p>实际上，这种方法是在做数据库驱动程序要做的事情。不同的厂商、不同版本的数据库驱动实现机制是厂商私有的，我们只能保证在充分测试过的驱动程序上是正确的，开发者使用的驱动程序版本差异很可能造成机制的失效。</p>
<p>这点在 Oracle 上体现非常明显。参见 Druid issue：<a href="https://github.com/alibaba/druid/issues/3707" target="_blank" rel="noopener noreferrer">https://github.com/alibaba/druid/issues/3707</a></p>
<p>综合考虑，XA 模式的数据源代理设计需要同时支持第一种方式：基于 XA 数据源进行代理。</p>
<p>类比 AT 模式的数据源代理机制，如下：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301009667.png" alt="image-20220620212758686" tabindex="0" loading="lazy"><figcaption>image-20220620212758686</figcaption></figure>
<ol>
<li><strong>分支注册</strong></li>
</ol>
<p>XA start 需要 Xid 参数。</p>
<p>这个 Xid 需要和 Seata 全局事务的 XID 和 BranchId 关联起来，以便由 TC 驱动 XA 分支的提交或回滚。</p>
<p>目前 Seata 的 BranchId 是在分支注册过程，由 TC 统一生成的，所以 XA 模式分支注册的时机需要在 XA start 之前。</p>
<p><em>将来一个可能的优化方向</em>：</p>
<p>把分支注册尽量延后。类似 AT 模式在本地事务提交之前才注册分支，避免分支执行失败情况下，没有意义的分支注册。</p>
<p>这个优化方向需要 BranchId 生成机制的变化来配合。BranchId 不通过分支注册过程生成，而是生成后再带着 BranchId 去注册分支。</p>
<h3>5.3 Seata TCC 模式</h3>
<p>回顾总览中的描述：一个分布式的全局事务，整体是 两阶段提交 的模型。全局事务是由若干分支事务组成的，分支事务要满足 两阶段提交 的模型要求，即需要每个分支事务都具备自己的：</p>
<ul>
<li>一阶段 prepare 行为</li>
<li>二阶段 commit 或 rollback 行为</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301009691.png" alt="image-20220620212921535" tabindex="0" loading="lazy"><figcaption>image-20220620212921535</figcaption></figure>
<p>根据两阶段行为模式的不同，我们将分支事务划分为 Automatic (Branch) Transaction Mode 和 TCC (Branch) Transaction Mode.</p>
<p>AT 模式基于 支持本地 ACID 事务 的 关系型数据库：</p>
<ol>
<li>一阶段 prepare 行为：在本地事务中，一并提交业务数据更新和相应回滚日志记录。</li>
<li>二阶段 commit 行为：马上成功结束，自动 异步批量清理回滚日志。</li>
<li>二阶段 rollback 行为：通过回滚日志，自动 生成补偿操作，完成数据回滚。</li>
</ol>
<p>相应的，TCC 模式，不依赖于底层数据资源的事务支持：</p>
<ol>
<li>一阶段 prepare 行为：调用 自定义 的 prepare 逻辑。</li>
<li>二阶段 commit 行为：调用 自定义 的 commit 逻辑。</li>
<li>二阶段 rollback 行为：调用 自定义 的 rollback 逻辑。</li>
</ol>
<p>所谓 TCC 模式，是指支持把 自定义 的分支事务纳入到全局事务的管理中。</p>
<h3>5.4 Seata Saga 模式</h3>
<blockquote>
<p>Saga模式是SEATA提供的长事务解决方案，在Saga模式中，业务流程中每个参与者都提交本地事务，当出现某一个参与者失败则补偿前面已经成功的参与者，一阶段正向服务和二阶段补偿服务都由业务开发实现。</p>
</blockquote>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301009717.png" alt="image-20220620213127266" tabindex="0" loading="lazy"><figcaption>image-20220620213127266</figcaption></figure>
<h4>5.4.1 概述</h4>
<p><strong>适用场景</strong>：</p>
<ol>
<li>业务流程长、业务流程多</li>
<li>参与者包含其它公司或遗留系统服务，无法提供 TCC 模式要求的三个接口</li>
</ol>
<p><strong>优势</strong>：</p>
<ol>
<li>一阶段提交本地事务，无锁，高性能</li>
<li>事件驱动架构，参与者可异步执行，高吞吐</li>
<li>补偿服务易于实现</li>
</ol>
<p><strong>缺点</strong>：</p>
<ol>
<li>不保证隔离性（应对方案见后面文档）</li>
</ol>
<h4>5.4.2 Saga的实现</h4>
<p>目前SEATA提供的Saga模式是基于状态机引擎来实现的，机制是：</p>
<ol>
<li>通过状态图来定义服务调用的流程并生成 json 状态语言定义文件</li>
<li>状态图中一个节点可以是调用一个服务，节点可以配置它的补偿节点</li>
<li>状态图 json 由状态机引擎驱动执行，当出现异常时状态引擎反向执行已成功节点对应的补偿节点将事务回滚
<ol>
<li>注意: 异常发生时是否进行补偿也可由用户自定义决定</li>
</ol>
</li>
<li>可以实现服务编排需求，支持单项选择、并发、子流程、参数转换、参数映射、服务执行状态判断、异常捕获等功能</li>
</ol>
<p>示例状态图:</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301009737.png" alt="image-20220620213300286" tabindex="0" loading="lazy"><figcaption>image-20220620213300286</figcaption></figure>
<h2>参考文章</h2>
<p><a href="https://pdai.tech/md/arch/arch-z-transection.html" target="_blank" rel="noopener noreferrer"><strong>分布式系统 - 分布式事务及实现方案</strong></a></p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301009050.png" type="image/png"/>
    </item>
    <item>
      <title>分布式系统-分布式事务(补充)</title>
      <link>https://mrjackc.github.io/posts/Architect/distributed/arch-z-transection02.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/distributed/arch-z-transection02.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">分布式系统-分布式事务(补充)</source>
      <description>分布式系统-分布式事务(补充) 1. 分布式事务 分布式事务顾名思义就是要在分布式系统中实现事务，它其实是由多个本地事务组合而成。 对于分布式事务而言几乎满足不了 ACID，其实对于单机事务而言大部分情况下也没有满足 ACID，不然怎么会有四种隔离级别呢？所以更别说分布在不同数据库或者不同应用上的分布式事务了。 我们先来看下 2PC。 2. 2PC 2...</description>
      <category>架构</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. <strong>分布式事务</strong></h2>
<p>分布式事务顾名思义就是要在分布式系统中实现事务，它其实是由多个本地事务组合而成。</p>
<p>对于分布式事务而言几乎满足不了 ACID，其实对于单机事务而言大部分情况下也没有满足 ACID，不然怎么会有四种隔离级别呢？所以更别说分布在不同数据库或者不同应用上的分布式事务了。</p>
<p>我们先来看下 2PC。</p>
<h2>2. <strong>2PC</strong></h2>
<h3>2.1 简介</h3>
<p>2PC（Two-phase commit protocol），中文叫二阶段提交。 <strong>二阶段提交是一种强一致性设计</strong>，2PC 引入一个事务协调者的角色来协调管理各参与者（也可称之为各本地资源）的提交和回滚，二阶段分别指的是准备（投票）和提交两个阶段。</p>
<p>注意这只是协议或者说是理论指导，只阐述了大方向，具体落地还是有会有差异的。</p>
<p>让我们来看下两个阶段的具体流程。</p>
<p><strong>准备阶段</strong>协调者会给各参与者发送准备命令，你可以把准备命令理解成除了提交事务之外啥事都做完了。</p>
<p>同步等待所有资源的响应之后就进入第二阶段即提交阶段（注意提交阶段不一定是提交事务，也可能是回滚事务）。</p>
<p>假如在第一阶段所有参与者都返回准备成功，那么协调者则向所有参与者发送提交事务命令，然后等待所有事务都提交成功之后，返回事务执行成功。</p>
<h3>2.2 流程图</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301010616.png" alt="image-20221017145021149" tabindex="0" loading="lazy"><figcaption>image-20221017145021149</figcaption></figure>
<p>假如在第一阶段有一个参与者返回失败，那么协调者就会向所有参与者发送回滚事务的请求，即分布式事务执行失败。<img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301010653.png" alt="image-20221017145054323" loading="lazy"></p>
<h3>2.3 第二阶段提交失败处理？</h3>
<p>那可能就有人问了，那第二阶段提交失败的话呢？</p>
<p>这里有两种情况。</p>
<p>第一种是<strong>第二阶段执行的是回滚事务操作</strong>，那么答案是不断重试，直到所有参与者都回滚了，不然那些在第一阶段准备成功的参与者会一直阻塞着。</p>
<p>第二种是<strong>第二阶段执行的是提交事务操作</strong>，那么答案也是不断重试，因为有可能一些参与者的事务已经提交成功了，这个时候只有一条路，就是头铁往前冲，不断的重试，直到提交成功，到最后真的不行只能人工介入处理。</p>
<p>大体上二阶段提交的流程就是这样，<strong>我们再来看看细节</strong>。</p>
<p>首先 2PC 是一个<strong>同步阻塞协议</strong>，像第一阶段协调者会等待所有参与者响应才会进行下一步操作，当然第一阶段的<strong>协调者有超时机制</strong>，假设因为网络原因没有收到某参与者的响应或某参与者挂了，那么超时后就会判断事务失败，向所有参与者发送回滚命令。</p>
<p>在第二阶段协调者的没法超时，因为按照我们上面分析只能不断重试！</p>
<h3>2.4 <strong>协调者故障分析</strong></h3>
<p><strong>协调者是一个单点，存在单点故障问题</strong>。</p>
<p>假设协调者在<strong>发送准备命令之前</strong>挂了，还行等于事务还没开始。</p>
<p>假设协调者在<strong>发送准备命令之后</strong>挂了，这就不太行了，有些参与者等于都执行了处于事务资源锁定的状态。不仅事务执行不下去，还会因为锁定了一些公共资源而阻塞系统其它操作。</p>
<p>假设协调者在<strong>发送回滚事务命令之前</strong>挂了，那么事务也是执行不下去，且在第一阶段那些准备成功参与者都阻塞着。</p>
<p>假设协调者在<strong>发送回滚事务命令之后</strong>挂了，这个还行，至少命令发出去了，很大的概率都会回滚成功，资源都会释放。但是如果出现网络分区问题，某些参与者将因为收不到命令而阻塞着。</p>
<p>假设协调者在<strong>发送提交事务命令之前</strong>挂了，这个不行，傻了！这下是所有资源都阻塞着。</p>
<p>假设协调者在<strong>发送提交事务命令之后</strong>挂了，这个还行，也是至少命令发出去了，很大概率都会提交成功，然后释放资源，但是如果出现网络分区问题某些参与者将因为收不到命令而阻塞着。</p>
<h3><strong>2.5 协调者故障，通过选举得到新协调者</strong></h3>
<p>因为协调者单点问题，因此我们可以通过选举等操作选出一个新协调者来顶替。</p>
<p>如果处于第一阶段，其实影响不大都回滚好了，在第一阶段事务肯定还没提交。</p>
<p>如果处于第二阶段，假设参与者都没挂，此时新协调者可以向所有参与者确认它们自身情况来推断下一步的操作。</p>
<p>假设有个别参与者挂了！这就有点僵硬了，比如协调者发送了回滚命令，此时第一个参与者收到了并执行，然后协调者和第一个参与者都挂了。</p>
<p>此时其他参与者都没收到请求，然后新协调者来了，它询问其他参与者都说OK，但它不知道挂了的那个参与者到底O不OK，所以它傻了。</p>
<p>问题其实就出在<strong>每个参与者自身的状态只有自己和协调者知道</strong>，因此新协调者无法通过在场的参与者的状态推断出挂了的参与者是什么情况。</p>
<p>虽然协议上没说，不过在实现的时候我们可以灵活的让协调者将自己发过的请求在哪个地方记一下，也就是日志记录，这样新协调者来的时候不就知道此时该不该发了？</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301010675.png" alt="image-20221017145424300" tabindex="0" loading="lazy"><figcaption>image-20221017145424300</figcaption></figure>
<p>但是就算协调者知道自己该发提交请求，那么在参与者也一起挂了的情况下没用，因为你不知道参与者在挂之前有没有提交事务。</p>
<p>如果参与者在挂之前事务提交成功，新协调者确定存活着的参与者都没问题，那肯定得向其他参与者发送提交事务命令才能保证数据一致。</p>
<p>如果参与者在挂之前事务还未提交成功，参与者恢复了之后数据是回滚的，此时协调者必须是向其他参与者发送回滚事务命令才能保持事务的一致。</p>
<p>所以说极端情况下还是无法避免数据不一致问题。</p>
<h3>2.6 伪代码</h3>
<p>talk is cheap 让我们再来看下代码，可能更加的清晰。以下代码取自 <code>&lt;&lt;Distributed System: Principles and Paradigms&gt;&gt;</code>。</p>
<p>这个代码就是实现了 2PC，但是相比于2PC增加了写日志的动作、参与者之间还会互相通知、参与者也实现了超时。这里要注意，一般所说的2PC，不含上述功能，这都是实现的时候添加的。</p>
<div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>协调者:</span></span>
<span class="line"><span>    write START_2PC to local log; //开始事务</span></span>
<span class="line"><span>    multicast VOTE_REQUEST to all participants; //广播通知参与者投票</span></span>
<span class="line"><span>    while not all votes have been collected {</span></span>
<span class="line"><span>        wait for any incoming vote;</span></span>
<span class="line"><span>        if timeout { //协调者超时</span></span>
<span class="line"><span>            write GLOBAL_ABORT to local log; //写日志</span></span>
<span class="line"><span>            multicast GLOBAL_ABORT to all participants; //通知事务中断</span></span>
<span class="line"><span>            exit;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>        record vote;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    //如果所有参与者都ok</span></span>
<span class="line"><span>    if all participants sent VOTE_COMMIT and coordinator votes COMMIT {</span></span>
<span class="line"><span>        write GLOBAL_COMMIT to local log;</span></span>
<span class="line"><span>        multicast GLOBAL_COMMIT to all participants;</span></span>
<span class="line"><span>    } else {</span></span>
<span class="line"><span>        write GLOBAL_ABORT to local log;</span></span>
<span class="line"><span>        multicast GLOBAL_ABORT to all participants;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>参与者:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    write INIT to local log; //写日志</span></span>
<span class="line"><span>    wait for VOTE_REQUEST from coordinator;</span></span>
<span class="line"><span>    if timeout { //等待超时</span></span>
<span class="line"><span>        write VOTE_ABORT to local log;</span></span>
<span class="line"><span>        exit;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    if participant votes COMMIT {</span></span>
<span class="line"><span>        write VOTE_COMMIT to local log; //记录自己的决策</span></span>
<span class="line"><span>        send VOTE_COMMIT to coordinator;</span></span>
<span class="line"><span>        wait for DECISION from coordinator;</span></span>
<span class="line"><span>        if timeout {</span></span>
<span class="line"><span>            multicast DECISION_REQUEST to other participants; //超时通知</span></span>
<span class="line"><span>            wait until DECISION is received;  /* remain blocked*/</span></span>
<span class="line"><span>            write DECISION to local log;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>        if DECISION == GLOBAL_COMMIT</span></span>
<span class="line"><span>            write GLOBAL_COMMIT to local log;</span></span>
<span class="line"><span>        else if DECISION == GLOBAL_ABORT</span></span>
<span class="line"><span>            write GLOBAL_ABORT to local log;</span></span>
<span class="line"><span>    } else {</span></span>
<span class="line"><span>        write VOTE_ABORT to local log;</span></span>
<span class="line"><span>        send VOTE_ABORT to coordinator;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>每个参与者维护一个线程处理其它参与者的DECISION_REQUEST请求：</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    while true {</span></span>
<span class="line"><span>        wait until any incoming DECISION_REQUEST is received;</span></span>
<span class="line"><span>        read most recently recorded STATE from the local log;</span></span>
<span class="line"><span>        if STATE == GLOBAL_COMMIT</span></span>
<span class="line"><span>            send GLOBAL_COMMIT to requesting participant;</span></span>
<span class="line"><span>        else if STATE == INIT or STATE == GLOBAL_ABORT;</span></span>
<span class="line"><span>            send GLOBAL_ABORT to requesting participant;</span></span>
<span class="line"><span>        else</span></span>
<span class="line"><span>            skip;  /* participant remains blocked */</span></span>
<span class="line"><span>    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>至此我们已经详细的分析的 2PC 的各种细节，我们来总结一下！</p>
<h3>2.7 总结</h3>
<p>2PC 是一种<strong>尽量保证强一致性</strong>的分布式事务，因此它是<strong>同步阻塞</strong>的，而同步阻塞就导致长久的资源锁定问题，<strong>总体而言效率低</strong>，并且存在<strong>单点故障</strong>问题，在极端条件下存在<strong>数据不一致</strong>的风险。</p>
<p>当然具体的实现可以变形，而且 2PC 也有变种，例如 Tree 2PC、Dynamic 2PC。</p>
<p>还有一点不知道你们看出来没，2PC 适用于<strong>数据库层面的分布式事务场景</strong>，而我们业务需求有时候不仅仅关乎数据库，也有可能是上传一张图片或者发送一条短信。</p>
<p>而且像 Java 中的 JTA 只能解决一个应用下多数据库的分布式事务问题，跨服务了就不能用了。</p>
<p>简单说下 Java 中 JTA，它是基于XA规范实现的事务接口，这里的 XA 你可以简单理解为基于数据库的 XA 规范来实现的 2PC。（至于XA规范到底是啥，篇幅有限，下次有机会再说）</p>
<p>接下来我们再来看看 3PC。</p>
<h2>3. <strong>3PC</strong></h2>
<h3>3.1 简介</h3>
<p>3PC 的出现是为了解决 2PC 的一些问题，相比于 2PC 它在<strong>参与者中也引入了超时机制</strong>，并且<strong>新增了一个阶段</strong>使得参与者可以利用这一个阶段统一各自的状态。</p>
<p>让我们来详细看一下。</p>
<p>3PC 包含了三个阶段，分别是<strong>准备阶段、预提交阶段和提交阶段</strong>，对应的英文就是：<code>CanCommit、PreCommit 和 DoCommit</code>。</p>
<p>看起来是<strong>把 2PC 的提交阶段变成了预提交阶段和提交阶段</strong>，但是 3PC 的准备阶段协调者只是询问参与者的自身状况，比如你现在还好吗？负载重不重？这类的。</p>
<p>而预提交阶段就是和 2PC 的准备阶段一样，除了事务的提交该做的都做了。</p>
<p>提交阶段和 2PC 的一样，让我们来看一下图。</p>
<h3>3.2 流程图</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301010702.png" alt="image-20221017150527845" tabindex="0" loading="lazy"><figcaption>image-20221017150527845</figcaption></figure>
<p>不管哪一个阶段有参与者返回失败都会宣布事务失败，这和 2PC 是一样的（当然到最后的提交阶段和 2PC 一样只要是提交请求就只能不断重试）。</p>
<h3>3.3 3PC 阶段变更有什么影响?</h3>
<p>我们先来看一下 3PC 的阶段变更有什么影响。</p>
<p>首先<strong>准备阶段的变更成不会直接执行事务</strong>，而是会先去询问此时的参与者是否有条件接这个事务，因此<strong>不会一来就干活直接锁资源</strong>，使得在某些资源不可用的情况下所有参与者都阻塞着。</p>
<p>而<strong>预提交阶段的引入起到了一个统一状态的作用</strong>，它像一道栅栏，表明在预提交阶段前所有参与者其实还未都回应，在预处理阶段表明所有参与者都已经回应了。</p>
<p>假如你是一位参与者，你知道自己进入了预提交状态那你就可以推断出来其他参与者也都进入了预提交状态。</p>
<p>但是多引入一个阶段也多一个交互，因此<strong>性能会差一些</strong>，而且<strong>绝大部分的情况下资源应该都是可用的</strong>，这样等于每次明知可用执行还得询问一次。</p>
<h3>3.4 3PC 超时能带来什么样的影响?</h3>
<p>我们再来看下参与者超时能带来什么样的影响。</p>
<p>我们知道 2PC 是同步阻塞的，上面我们已经分析了协调者挂在了提交请求还未发出去的时候是最伤的，所有参与者都已经锁定资源并且阻塞等待着。</p>
<p>那么引入了超时机制，参与者就不会傻等了，<strong>如果是等待提交命令超时，那么参与者就会提交事务了</strong>，因为都到了这一阶段了大概率是提交的，<strong>如果是等待预提交命令超时，那该干啥就干啥了，反正本来啥也没干</strong>。</p>
<p>然而超时机制也会带来数据不一致的问题，比如在等待提交命令时候超时了，参与者默认执行的是提交事务操作，但是<strong>有可能执行的是回滚操作，这样一来数据就不一致了</strong>。</p>
<p>当然 3PC 协调者超时还是在的，具体不分析了和 2PC 是一样的。</p>
<h3>3.5 3PC 的引入是为了解决什么问题？</h3>
<p>3PC 的引入是为了解决提交阶段 2PC 协调者和某参与者都挂了之后新选举的协调者不知道当前应该提交还是回滚的问题。</p>
<p>新协调者来的时候发现有一个参与者处于预提交或者提交阶段，那么表明已经经过了所有参与者的确认了，所以此时执行的就是提交命令。</p>
<p>所以说 3PC 就是通过引入预提交阶段来使得参与者之间的状态得到统一，也就是留了一个阶段让大家同步一下。</p>
<p>但是这也只能让协调者知道该如果做，但不能保证这样做一定对，这其实和上面 2PC 分析一致，因为挂了的参与者到底有没有执行事务无法断定。</p>
<p>所以说 3PC 通过预提交阶段可以减少故障恢复时候的复杂性，但是不能保证数据一致，除非挂了的那个参与者恢复。</p>
<h3>3.5 总结</h3>
<p>3PC 相对于 2PC 做了一定的改进：引入了参与者超时机制，并且增加了预提交阶段使得故障恢复之后协调者的决策复杂度降低，但整体的交互过程更长了，性能有所下降，并且还是会存在数据不一致问题。</p>
<p>所以 2PC 和 3PC 都不能保证数据100%一致，因此一般都需要有定时扫描补偿机制。</p>
<blockquote>
<p>3PC 我没有找到具体的实现，所以我认为 3PC 只是纯的理论上的东西，而且可以看到相比于 2PC 它是做了一些努力但是效果甚微，所以只做了解即可。</p>
</blockquote>
<h2>4. <strong>TCC</strong></h2>
<h3>4.1 简介</h3>
<p><strong>2PC 和 3PC 都是数据库层面的，而 TCC 是业务层面的分布式事务</strong>，就像我前面说的分布式事务不仅仅包括数据库的操作，还包括发送短信等，这时候 TCC 就派上用场了！</p>
<p>TCC 指的是<code>Try - Confirm - Cancel</code>。</p>
<ul>
<li>Try 指的是预留，即资源的预留和锁定，<strong>注意是预留</strong>。</li>
<li>Confirm 指的是确认操作，这一步其实就是真正的执行了。</li>
<li>Cancel 指的是撤销操作，可以理解为把预留阶段的动作撤销了。</li>
</ul>
<p>其实从思想上看和 2PC 差不多，都是先试探性的执行，如果都可以那就真正的执行，如果不行就回滚。</p>
<p>比如说一个事务要执行A、B、C三个操作，那么先对三个操作执行预留动作。如果都预留成功了那么就执行确认操作，如果有一个预留失败那就都执行撤销动作。</p>
<p>我们来看下流程，TCC模型还有个事务管理者的角色，用来记录TCC全局事务状态并提交或者回滚事务。</p>
<h3>4.2 流程图</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301010726.png" alt="image-20221017151334188" tabindex="0" loading="lazy"><figcaption>image-20221017151334188</figcaption></figure>
<p>可以看到流程还是很简单的，难点在于业务上的定义，对于每一个操作你都需要定义三个动作分别对应<code>Try - Confirm - Cancel</code>。</p>
<h3>4.3 总结</h3>
<p>因此 <strong>TCC 对业务的侵入较大和业务紧耦合</strong>，需要根据特定的场景和业务逻辑来设计相应的操作。</p>
<p>还有一点要注意，撤销和确认操作的执行可能需要重试，因此还需要保证<strong>操作的幂等</strong>。</p>
<p>相对于 2PC、3PC ，TCC 适用的范围更大，但是开发量也更大，毕竟都在业务上实现，而且有时候你会发现这三个方法还真不好写。不过也因为是在业务上实现的，所以<strong>TCC可以跨数据库、跨不同的业务系统来实现事务</strong>。</p>
<h2>5. <strong>本地消息表</strong></h2>
<p>本地消息表其实就是利用了 <strong>各系统本地的事务</strong>来实现分布式事务。</p>
<p>本地消息表顾名思义就是会有一张存放本地消息的表，一般都是放在数据库中，然后在执行业务的时候 <strong>将业务的执行和将消息放入消息表中的操作放在同一个事务中</strong>，这样就能保证消息放入本地表中业务肯定是执行成功的。</p>
<p>然后再去调用下一个操作，如果下一个操作调用成功了好说，消息表的消息状态可以直接改成已成功。</p>
<p>如果调用失败也没事，会有 <strong>后台任务定时去读取本地消息表</strong>，筛选出还未成功的消息再调用对应的服务，服务更新成功了再变更消息的状态。</p>
<p>这时候有可能消息对应的操作不成功，因此也需要重试，重试就得保证对应服务的方法是幂等的，而且一般重试会有最大次数，超过最大次数可以记录下报警让人工处理。</p>
<p>可以看到本地消息表其实实现的是<strong>最终一致性</strong>，容忍了数据暂时不一致的情况。</p>
<h2>6. <strong>消息事务</strong></h2>
<p>RocketMQ 就很好的支持了消息事务，让我们来看一下如何通过消息实现事务。</p>
<p>第一步先给 Broker 发送事务消息即半消息，<strong>半消息不是说一半消息，而是这个消息对消费者来说不可见</strong>，然后<strong>发送成功后发送方再执行本地事务</strong>。</p>
<p>再根据<strong>本地事务的结果向 Broker 发送 Commit 或者 RollBack 命令</strong>。</p>
<p>并且 RocketMQ 的发送方会提供一个<strong>反查事务状态接口</strong>，如果一段时间内半消息没有收到任何操作请求，那么 Broker 会通过反查接口得知发送方事务是否执行成功，然后执行 Commit 或者 RollBack 命令。</p>
<p>如果是 Commit 那么订阅方就能收到这条消息，然后再做对应的操作，做完了之后再消费这条消息即可。</p>
<p>如果是 RollBack 那么订阅方收不到这条消息，等于事务就没执行过。</p>
<p>可以看到通过 RocketMQ 还是比较容易实现的，RocketMQ 提供了事务消息的功能，我们只需要定义好事务反查接口即可。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301010749.png" alt="image-20221017151848307" tabindex="0" loading="lazy"><figcaption>image-20221017151848307</figcaption></figure>
<p>可以看到消息事务实现的也是最终一致性。</p>
<h2>7. <strong>最大努力通知</strong></h2>
<p>其实我觉得本地消息表也可以算最大努力，事务消息也可以算最大努力。</p>
<p>就本地消息表来说会有后台任务定时去查看未完成的消息，然后去调用对应的服务，当一个消息多次调用都失败的时候可以记录下然后引入人工，或者直接舍弃。这其实算是最大努力了。</p>
<p>事务消息也是一样，当半消息被commit了之后确实就是普通消息了，如果订阅者一直不消费或者消费不了则会一直重试，到最后进入死信队列。其实这也算最大努力。</p>
<p>所以<strong>最大努力通知其实只是表明了一种柔性事务的思想</strong>：我已经尽力我最大的努力想达成事务的最终一致了。</p>
<p>适用于对时间不敏感的业务，例如短信通知。</p>
<h2>8. Saga事务</h2>
<blockquote>
<p>详情可以查看上一篇文章<a href="https://java.isture.com/arch/distributed/arch-z-transection.html" target="_blank" rel="noopener noreferrer">分布式系统-分布式事务及实现方案</a></p>
</blockquote>
<p>Saga是由一系列的本地事务构成。每一个本地事务在更新完数据库之后，会发布一条消息或者一个事件来触发Saga中的下一个本地事务的执行。如果一个本地事务因为某些业务规则无法满足而失败，Saga会执行在这个失败的事务之前成功提交的所有事务的补偿操作。</p>
<p>Saga的实现有很多种方式，其中最流行的两种方式是：</p>
<ul>
<li><strong>基于事件的方式</strong>。这种方式没有协调中心，整个模式的工作方式就像舞蹈一样，各个舞蹈演员按照预先编排的动作和走位各自表演，最终形成一只舞蹈。处于当前Saga下的各个服务，会产生某类事件，或者监听其它服务产生的事件并决定是否需要针对监听到的事件做出响应。</li>
<li><strong>基于命令的方式</strong>。这种方式的工作形式就像一只乐队，由一个指挥家（协调中心）来协调大家的工作。协调中心来告诉Saga的参与方应该执行哪一个本地事务。</li>
</ul>
<h2>9. <strong>总结</strong></h2>
<p>可以看出 2PC 和 3PC 是一种强一致性事务，不过还是有数据不一致，阻塞等风险，而且只能用在数据库层面。</p>
<p>而 TCC 是一种补偿性事务思想，适用的范围更广，在业务层面实现，因此对业务的侵入性较大，每一个操作都需要实现对应的三个方法。</p>
<p>本地消息、事务消息和最大努力通知其实都是最终一致性事务，因此适用于一些对时间不敏感的业务。</p>
<h2>参考文章</h2>
<p><a href="https://zhuanlan.zhihu.com/p/183753774" target="_blank" rel="noopener noreferrer">面试必问：分布式事务六种解决方案</a></p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301010616.png" type="image/png"/>
    </item>
    <item>
      <title>分布式系统-分布式系统的8个谬误</title>
      <link>https://mrjackc.github.io/posts/Architect/distributed/arch-z-wrong.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/distributed/arch-z-wrong.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">分布式系统-分布式系统的8个谬误</source>
      <description>分布式系统-分布式系统的8个谬误 20多年前，Peter Deutsch和James Gosling定义了分布式计算的8个谬误。这些是许多开发人员对分布式系统做出的错误假设。从长远来看，这些通常被证明是错误的，导致难以修复错误。这篇文章从反面警示我们分布式系统需要注意的事项。 1. 网络可靠 1.1 问题 通过网络呼叫将失败。 问题： 网络不可靠，无响...</description>
      <category>架构</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<p>20多年前，Peter Deutsch和James Gosling定义了分布式计算的8个谬误。这些是许多开发人员对分布式系统做出的错误假设。从长远来看，这些通常被证明是错误的，导致难以修复错误。<strong>这篇文章从反面警示我们分布式系统需要注意的事项</strong>。</p>
<h2>1. 网络可靠</h2>
<h3>1.1 问题</h3>
<blockquote>
<p>通过网络呼叫将失败。</p>
</blockquote>
<blockquote>
<p>问题：</p>
<p>网络不可靠，无响应并不能确定是服务挂了还是超时。服务挂了，可以重试。但如果是超时就会面临重复请求问题。重复请求又不能确定是重试，万一是客户自己多次发起呢？</p>
<p>解决</p>
<p>不超时，改为消息队列的形式来进行排队处理。前端去查是否完成(改动巨大)</p>
<p>有时候直接报错也是一种选择，根据自己实际业务决定</p>
</blockquote>
<p>今天的大多数系统都会调用其他系统。您是否正在与第三方系统（支付网关，会计系统，CRM）集成？你在做网络服务电话吗？如果呼叫失败会发生什么？如果您要查询数据，则可以进行简单的重试。但是如果您发送命令会发生什么？我们举一个简单的例子：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 发起信息用支付</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">var</span><span style="color:#E06C75;--shiki-dark:#E06C75"> creditCardProcessor </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> CreditCardPaymentService</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 信息卡收费</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">creditCardProcessor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">Charge</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(chargeRequest);</span></span></code></pre>
</div><p>如果我们收到HTTP超时异常会怎么样？</p>
<ul>
<li>如果服务器没有处理请求，那么我们可以重试。但是，如果它确实处理了请求，我们需要确保我们不会对客户进行双重收费。您可以通过使服务器具有幂等性来实现此目的。</li>
<li>使用了幂等，这意味着如果您使用相同的收费请求拨打10次，则客户只需支付一次费用。如果您没有正确处理这些错误，那么您的系统是不确定的。处理所有这些情况可能会非常复杂</li>
</ul>
<h3>1.2 解决方案</h3>
<p>因此，如果网络上的呼叫失败，我们能做什么？好吧，我们可以自动重试。排队系统非常擅长这一点。它们通常使用称为存储和转发的模式。它们在将消息转发给收件人之前在本地存储消息。如果收件人处于脱机状态，则排队系统将重试发送邮件。MSMQ是这种排队系统的一个例子。</p>
<p>但是这种变化将对您的系统设计产生重大影响。您正在从请求/响应模型转移到触发并忘记。由于您不再等待响应，因此您需要更改系统中的用户行程。您不能只使用队列发送替换每个Web服务调用。</p>
<h3>1.3 结论</h3>
<p>你可能会说网络现在更可靠 - 而且它们是。但事情发生了。硬件和软件可能会出现故障 - 电源，路由器，更新或补丁失败，无线信号弱，网络拥塞，啮齿动物或鲨鱼。是的，鲨鱼：在一系列鲨鱼叮咬之后，谷歌正在加强与Kevlar的海底数据线。</p>
<p>还有人为因素。人们可以开始DDOS攻击，也可以破坏物理设备。</p>
<p>这是否意味着您需要删除当前的技术堆栈并使用消息传递系统？并不是的！您需要权衡失败的风险与您需要进行的投资。您可以通过投资基础架构和软件来最小化失败的可能性。在许多情况下，失败是一种选择。但在设计分布式系统时，您确实需要考虑失败的问题。</p>
<h2>2. 延迟是零</h2>
<h3>2.1 问题</h3>
<blockquote>
<p>通过网络拨打电话不是即时的。</p>
</blockquote>
<blockquote>
<p>还是不太明白</p>
</blockquote>
<p>内存呼叫和互联网呼叫之间存在七个数量级的差异。您的应用程序应该是网络感知。这意味着您应该清楚地将本地呼叫与远程呼叫分开。让我们看看我在代码库中看到的一个例子：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">var</span><span style="color:#E06C75;--shiki-dark:#E06C75"> viewModel </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> ViewModel</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 进行一次调用以获取文档摘要列表</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">var</span><span style="color:#E06C75;--shiki-dark:#E06C75"> documents </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> DocumentsCollection</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">foreach</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (var document in documents)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 它检索有关每个文档的更多信息</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    var</span><span style="color:#E06C75;--shiki-dark:#E06C75"> snapshot </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> document</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">GetSnapshot</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    viewModel</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">Add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(snapshot);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
</div><p>没有进一步检查，这看起来很好。但是，有两个远程呼叫。第2行进行一次调用以获取文档摘要列表。在第5行，还有另一个调用，它检索有关每个文档的更多信息。<strong>这是一个经典的Select n + 1问题</strong>。为了解决网络延迟问题，您应该在一次调用中返回所有必需的数据。一般的建议是本地调用可以细粒度，但远程调用应该更粗粒度。这就是为什么分布式对象和“网络透明度”的想法死了。但是，即使每个人都同意分布式对象是一个坏主意，有些人仍然认为延迟加载总是一个好主意：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">var</span><span style="color:#E06C75;--shiki-dark:#E06C75"> employee </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> EmployeeRepository</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">GetBy</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(someCriteria)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">var</span><span style="color:#E06C75;--shiki-dark:#E06C75"> department </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> employee</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Department</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">var</span><span style="color:#E06C75;--shiki-dark:#E06C75"> manager </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> department</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Manager</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">foreach</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (var peer in </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">manager</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Employees</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // do something</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
</div><p>您不希望财产获取者进行网络呼叫。但是，每个“。” 在上面的代码中调用实际上可以触发数据库之旅。</p>
<h3>2.2 解决方案</h3>
<ul>
<li><strong>带回您可能需要的所有数据</strong> 如果您进行远程呼叫，请确保恢复可能需要的所有数据。网络通信不应该是唠叨的。</li>
<li><strong>将Data Closer移动到客户端</strong> 另一种可能的解决方案是将数据移近客户端。如果您正在使用云，请根据客户的位置仔细选择可用区。缓存还可以帮助最小化网络呼叫的数量。对于静态内容，内容交付网络（CDN）是另一个不错的选择。</li>
<li><strong>反转数据流</strong> 删除远程调用的另一个选项是反转数据流。我们可以使用Pub / Sub并在本地存储数据，而不是查询其他服务。这样，我们就可以在需要时获取数据。当然，这会带来一些复杂性，但它可能是工具箱中的一个很好的工具。</li>
</ul>
<h3>2.3 结论</h3>
<p>虽然延迟可能不是LAN中的问题，但当您转移到WAN或Internet时，您会注意到延迟。这就是为什么将网络呼叫与内存中的呼叫明确分开是很重要的。在采用微服务架构模式时，您应该牢记这一点。您不应该只使用远程调用替换本地呼叫。这可能会使你的系统变成分布式的大泥球。</p>
<h2>3. 带宽是无限的</h2>
<h3>3.1 问题</h3>
<blockquote>
<p>带宽是有限的。</p>
</blockquote>
<p>带宽是网络在一段时间内发送数据的容量。到目前为止，我还没有发现它是一个问题，但我可以看到为什么它在某些条件下可能是一个问题。虽然带宽随着时间的推移而有所改善，但我们发送的数据量也有所增加。与通过网络传递简单DTO的应用相比，视频流或VoIP需要更多带宽。带宽对于移动应用程序来说更为重要，因此开发人员在设计后端API时需要考虑它。</p>
<p>错误地使用ORM也会造成伤害。我见过开发人员在查询中过早调用.ToList（）的示例，因此在内存中加载整个表。</p>
<h3>3.2 解决方案</h3>
<p><strong>领域驱动的设计模式</strong></p>
<p>那么我们怎样才能确保我们不会带来太多数据呢？域驱动设计模式可以帮助：</p>
<ul>
<li>首先，您不应该争取单一的企业级域模型。您应该将域划分为有界上下文。</li>
<li>要避免有界上下文中的大型复杂对象图，可以使用聚合模式。聚合确保一致性并定义事务边界。</li>
</ul>
<p><strong>命令和查询责任隔离</strong></p>
<p>我们有时会加载复杂的对象图，因为我们需要在屏幕上显示它的一部分。如果我们在很多地方这样做，我们最终会得到一个庞大而复杂的模型，对于写作和阅读来说都是次优的。另一种方法可以是使用命令和查询责任隔离 - CQRS。这意味着将域模型分为两部分：</p>
<ul>
<li>在写模式将确保不变保持真实的数据是一致的。由于写模型不关心视图问题，因此可以保持较小且集中。</li>
<li>该读取模型是视图的担忧进行了优化，所以我们可以获取所有所需的特定视图中的数据（例如，我们的应用程序的屏幕）。</li>
</ul>
<h3>3.3 结论</h3>
<p>在第二个谬误（延迟不是0）和第三个谬误（带宽是无限的）之间有延伸，您应该传输更多数据，以最大限度地减少网络往返次数。您应该传输较少的数据以最小化带宽使用。您需要平衡这两种力量，并找到通过线路发送的正确数据量。</p>
<p>虽然您可能不会经常遇到带宽限制，但考虑传输的数据非常重要。更少的数据更容易理解。<strong>数据越少意味着耦合越少。因此，只传输您可能需要的数据。</strong></p>
<h2>4. 网络是安全的</h2>
<h3>4.1 问题</h3>
<blockquote>
<p>网络并不安全。</p>
</blockquote>
<p>这是一个比其他人更多的媒体报道的假设。您的系统仅与最薄弱的链接一样安全。坏消息是分布式系统中有很多链接。您正在使用HTTPS，除非与不支持它的第三方遗留系统进行通信。您正在查看自己的代码，寻找安全问题，但正在使用可能存在风险的开源库。一个OpenSSL的漏洞允许人们通过盗取SSL / TLS保护的数据。Apache Struts中的一个错误允许攻击者在服务器上执行代码。即使你正在抵御所有这些，仍然存在人为因素。恶意DBA可能“错放”数据库备份。今天的攻击者掌握着大量的计算能力和耐心。所以问题不在于他们是否会攻击你的系统，而是什么时候。</p>
<h3>4.2 解决方案</h3>
<ul>
<li><strong>深度防御</strong></li>
</ul>
<p>您应该使用分层方法来保护您的系统。您需要在网络，基础架构和应用程序级别进行不同的安全检查。</p>
<ul>
<li><strong>安全心态</strong></li>
</ul>
<p>在设计系统时要牢记安全性。十大漏洞列表在过去5年中没有发生太大变化。您应遵循安全软件设计的最佳实践，并检查常见安全漏洞的代码。您应该定期搜索第三方库以查找新漏洞。常见漏洞和暴露列表可以提供帮助。</p>
<ul>
<li><strong>威胁建模</strong></li>
</ul>
<p>威胁建模是一种识别系统中可能存在的安全威胁的系统方法。首先确定系统中的所有资产（数据库中的用户数据，文件等）以及如何访问它们。之后，您可以识别可能的攻击并开始执行它们。我建议阅读高级API安全性的第2章，以便更好地概述威胁建模。</p>
<h3>4.3 结论</h3>
<p>唯一安全的系统是关闭电源的系统，不连接到任何网络（理想情况下是在一个有形模块中）。它是多么有用的系统！事实是，安全是艰难而昂贵的。分布式系统中有许多组件和链接，每个组件和链接都是恶意用户的可能目标。企业需要平衡攻击的风险和概率与实施预防机制的成本。</p>
<p>攻击者手上有很多耐心和计算能力。我们可以通过使用威胁建模来防止某些类型的攻击，但我们无法保证100％的安全性。因此，向业务部门明确表示这一点是个好主意，共同决定投资安全性的程度，并制定安全漏洞何时发生的计划。</p>
<h2>5. 拓扑不会改变</h2>
<h3>5.1 问题</h3>
<blockquote>
<p>网络拓扑不断变化。</p>
</blockquote>
<p>网络拓扑始终在变化。有时它会因意外原因而发生变化 - 当您的应用服务器出现故障并需要更换时。很多时候它是故意的 - 在新服务器上添加新进程。如今，随着云和容器的增加，这一点更加明显。弹性扩展 - 根据工作负载添加或删除服务器的能力 - 需要一定程度的网络灵活性。</p>
<h3>5.2 解决方案</h3>
<p><strong>摘要网络的物理结构</strong></p>
<p>您需要做的第一件事是抽象网络的物理结构。有几种方法可以做到这一点：</p>
<ul>
<li>停止硬编码IP - 您应该更喜欢使用主机名。通过使用URI，我们依靠DNS将主机名解析为IP。</li>
<li>当DNS不够时（例如，当您需要映射IP和端口时），则使用发现服务。</li>
<li>Service Bus框架还可以提供位置透明性。</li>
</ul>
<p><strong>无价值的，而非重要的</strong></p>
<p>通过将您的服务器视为没有价值的，而不是很重要的，您确保没有服务器是不可替代的。这一点智慧可以帮助您进入正确的思维模式：任何服务器都可能出现故障（从而改变拓扑结构），因此您应该尽可能地自动化。</p>
<p><strong>测试</strong></p>
<p>最后一条建议是测试你的假设。停止服务或关闭服务器，看看您的系统是否仍在运行。像Netflix的Chaos Monkey这样的工具可以通过随机关闭生产环境中的VM或容器来实现这一目标。通过带来痛苦，您更有动力构建一个可以处理拓扑更改的更具弹性的系统。</p>
<h3>5.3 结论</h3>
<p>十年前，大多数拓扑结构并没有经常改变。但是当它发生时，它可能发生在生产中并引入了一些停机时间。如今，随着云和容器的增加，很难忽视这种谬误。你需要为失败做好准备并进行测试。不要等到它在生产中发生！</p>
<h2>6. 有一位管理员</h2>
<h3>6.1 问题</h3>
<blockquote>
<p>这个知道一切的并不存在。</p>
</blockquote>
<p>嗯，这个看起来很明显。当然，没有一个人知道一切。这是一个问题吗？只要应用程序运行顺利，它就不是。但是，当出现问题时，您需要修复它。因为很多人触摸了应用程序，知道如何解决问题的人可能不在那里。</p>
<p>有很多事情可能会出错。一个例子是配置。今天的应用程序在多个商店中存储配置：配置文件，环境变量，数据库，命令行参数。没有人知道每个可能的配置值的影响是什么。</p>
<p>另一件可能出错的事情是系统升级。分布式应用程序有许多移动部件，您需要确保它们是同步的。例如，您需要确保当前版本的代码适用于当前版本的数据库。如今，人们关注DevOps和持续交付。但支持零停机部署并非易事。</p>
<p>但是，至少这些东西都在你的控制之下。许多应用程序与第三方系统交互。这意味着，如果它们失效，你可以做的事情就不多了。因此，即使您的系统有一名管理员，您仍然无法控制第三方系统。</p>
<h3>6.2 解决方案</h3>
<p><strong>每个人都应对释放过程负责</strong></p>
<p>这意味着从一开始就涉及Ops人员或系统管理员。理想情况下，他们将成为团队的一员。尽早让系统管理员了解您的进度可以帮助您发现限制因素。例如，生产环境可能具有与开发环境不同的配置，安全限制，防火墙规则或可用端口。</p>
<p><strong>记录和监控</strong></p>
<p>系统管理员应该拥有用于错误报告和管理问题的正确工具。你应该从一开始就考虑监控。分布式系统应具有集中式日志。访问十个不同服务器上的日志以调查问题是不可接受的方法。</p>
<p><strong>解耦</strong></p>
<p>您应该在系统升级期间争取最少的停机时间。这意味着您应该能够独立升级系统的不同部分。通过使组件向后兼容，您可以在不同时间更新服务器和客户端。</p>
<p>通过在组件之间放置队列，您可以暂时将它们分离。这意味着，例如，即使后端关闭，Web服务器仍然可以接受请求。</p>
<p><strong>隔离第三方依赖关系</strong></p>
<p>您应该以不同于您拥有的组件的方式处理控制之外的系统。这意味着使您的系统更能适应第三方故障。您可以通过引入抽象层来减少外部依赖的影响。这意味着当第三方系统出现故障时，您将找到更少的地方来查找错误。</p>
<h3>6.3 结论</h3>
<p>要解决这个谬论，您需要使系统易于管理。DevOps，日志记录和监控可以提供帮助。您还需要考虑系统的升级过程。如果升级需要数小时的停机时间，则无法部署每个sprint。没有一个管理员，所以每个人都应该对发布过程负责。</p>
<h2>7. 运输成本为零</h2>
<h3>7.1 问题</h3>
<blockquote>
<p>运输成本不是零。</p>
</blockquote>
<p>这种谬论与第二个谬误有关，即 延迟为零。通过网络传输内容在时间和资源上都有代价。如果第二个谬误讨论了时间方面，那么谬误＃7就会解决资源消耗问题。</p>
<p>这种谬论有两个不同的方面：</p>
<p><strong>网络基础设施的成本</strong></p>
<p>网络基础设施需要付出代价。服务器，SAN，网络交换机，负载平衡器以及负责此设备的人员 - 所有这些都需要花钱。如果您的系统是在内部部署的，那么您需要预先支付这个价格。如果您正在使用云，那么您只需为您使用的内容付费，但您仍然需要付费。</p>
<p><strong>序列化/反序列化的成本</strong></p>
<p>这种谬误的第二个方面是在传输级别和应用程序级别之间传输数据的成本。序列化和反序列化会消耗CPU时间，因此需要花钱。如果您的应用程序是内部部署的，那么如果您不主动监视资源消耗，则会隐藏此成本。但是，如果您的应用程序部署在云端，那么这笔费用就会非常明显，因为您需要为使用的内容付费。</p>
<h3>7.2 解决方案</h3>
<p>关于基础设施的成本，你无能为力。您只能确保尽可能高效地使用它。SOAP或XML比JSON更昂贵。JSON比像Google的Protocol Buffers这样的二进制协议更昂贵。根据系统的类型，这可能或多或少重要。例如，对于与视频流或VoIP有关的应用，传输成本更为重要。</p>
<h3>7.3 结论</h3>
<p>您应该注意运输成本以及应用程序正在执行的序列化和反序列化程度。这并不意味着您应该优化，除非需要它。您应该对资源消耗进行基准测试和监控，并确定运输成本是否对您有用。</p>
<h2>8. 网络是同质的</h2>
<h3>8.1 问题</h3>
<blockquote>
<p>网络不是同质的。</p>
</blockquote>
<p>同质网络是使用类似配置和相同通信协议的计算机网络。拥有类似配置的计算机是一项艰巨的任务。例如，您几乎无法控制哪些移动设备可以连接到您的应用。这就是为什么重点关注标准协议。</p>
<h3>8.2 解决方案</h3>
<p>您应该选择标准格式以避免供应商锁定。这可能意味着XML，JSON或协议缓冲区。有很多选择可供选择。</p>
<h3>8.3 结论</h3>
<p>您需要确保系统的组件可以相互通信。使用专有协议会损害应用程序的互操作性。</p>
<h2>9. 总结</h2>
<blockquote>
<p>设计分布式系统很难</p>
</blockquote>
<p>这些谬论发表于20多年前。但他们今天仍然坚持，其中一些比其他人更多。我认为今天许多开发人员都知道它们，但我们编写的代码并没有显示出来。</p>
<p>我们必须接受这些事实：<strong>网络不可靠，不安全并且需要花钱。带宽有限。网络的拓扑结构将发生变化。其组件的配置方式不同。意识到这些限制将有助于我们设计更好的分布式系统。</strong></p>
<h2>参考文章</h2>
<p><a href="https://pdai.tech/md/arch/arch-z-wrong.html" target="_blank" rel="noopener noreferrer"><strong>分布式系统 - 分布式系统的8个谬误</strong></a></p>
]]></content:encoded>
    </item>
    <item>
      <title>FastDFS安装</title>
      <link>https://mrjackc.github.io/posts/Architect/filesystem/filesystem-fastdfs.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/filesystem/filesystem-fastdfs.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">FastDFS安装</source>
      <description>FastDFS安装 1.什么是 FastDFS 1.1 简介 FastDFS 由淘宝的余庆大佬在 2008 年开源的一款轻量级分布式文件管理系统，FastDFS 用 C 语言实现，支持 Linux、FreeBSD、MacOS 等类 UNIX 系统。FastDFS 类似 google FS，属于应用级文件系统，不是通用的文件系统，只能通过专有 API 访...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1.什么是 FastDFS</h2>
<h3>1.1 简介</h3>
<p>FastDFS 由淘宝的余庆大佬在 2008 年开源的一款轻量级分布式文件管理系统，FastDFS 用 C 语言实现，支持 Linux、FreeBSD、MacOS 等类 UNIX 系统。FastDFS 类似 google FS，属于应用级文件系统，不是通用的文件系统，只能通过专有 API 访问，目前提供了 C 和 Java SDK ，以及 PHP 扩展 SDK。</p>
<p>FastDFS 专为互联网应用量身定做，解决大容量文件存储问题，追求高性能和高扩展性，它可以看做是基于文件的 key/value 存储系统，key 为文件 ID，value 为文件内容，因此称作分布式文件存储服务更为合适。</p>
<h3>1.2 为什么需要 FastDFS</h3>
<p>传统的企业级开发对于高并发要求不是很高，而且数据量可能也不大，在这样的环境下文件管理可能非常 Easy。</p>
<p>但是互联网应用访问量大、数据量大，在互联网应用中，我们必须考虑解决文件大容量存储和高性能访问的问题，而 FastDFS 就特别适合干这件事情，常见的图片存储、视频存储、文档存储等等我们都可以采用 FastDFS 来做。</p>
<h3>1.3 FastDFS 架构</h3>
<p>作为一款分布式文件管理系统，FastDFS 主要包括四个方面的功能：</p>
<ul>
<li>文件存储</li>
<li>文件同步</li>
<li>文件上传</li>
<li>文件下载</li>
</ul>
<p>这个方面的功能，基本上就能搞定我们常见的文件管理需求了。</p>
<p>下面这是一张来自 FastDFS 官网的系统架构图：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301012620.png" alt="image-20201211172156714" tabindex="0" loading="lazy"><figcaption>image-20201211172156714</figcaption></figure>
<p>从上面这张图中我们可以看到，<strong>FastDFS 架构包括 Tracker 和 Storage 两部分，看名字大概就能知道，Tracker 用来追踪文件，相当于是文件的一个索引，而 Storage 则用来保存文件。</strong></p>
<p>我们上传文件的文件最终保存在 Storage 上，文件的元数据信息保存在 Tracker 上，通过 Tracker 可以实现对 Storage 的负载均衡。</p>
<p>Storage 一般会搭建成集群，一个 Storage Cluster 可以由多个组构成，不同的组之间不进行通信，一个组又相当于一个小的集群，组由多个 Storage Server 组成，组内的 Storage Server 会通过连接进行文件同步来保证高可用。</p>
<h2>2. 安装</h2>
<p>为了测试方便，不开启多台虚拟机，Tracker 和 Storage 我将安装在同一台服务器上。</p>
<p>图片上传我们一般使用 FastDFS，图片上传成功之后，接下来的图片访问我们一般采用 Nginx。我们分别从以下三个方面介绍</p>
<ul>
<li>Tracker 安装</li>
<li>Storage 安装</li>
<li>Nginx 安装（只介绍关键配置）</li>
</ul>
<h3>2.1 Tracker 安装</h3>
<p>安装，我们首先需要准备一个环境两个库以及一个安装包。</p>
<ol>
<li>
<p>一个环境</p>
<p>FastDFS 采用 C 语言开发，所以在安装之前，如果没有 gcc 环境，需要先安装，安装命令如下：</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>yum install gcc-c++</span></span></code></pre>
</div></li>
<li>
<p>两个库</p>
<ul>
<li>
<p>libevent</p>
<p>FastDFS 依赖 libevent 库，安装命令如下：</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>yum -y install libevent</span></span></code></pre>
</div></li>
<li>
<p>libfastcommon</p>
<p>FastDFS 官方提供的，它包含了 FastDFS 运行所需要的一些基础库。</p>
<p><a href="https://github.com/happyfish100/libfastcommon/archive/V1.0.43.tar.gz" target="_blank" rel="noopener noreferrer">下载地址</a> : <a href="https://github.com/happyfish100/libfastcommon/archive/V1.0.43.tar.gz" target="_blank" rel="noopener noreferrer">https://github.com/happyfish100/libfastcommon/archive/V1.0.43.tar.gz</a></p>
<p>将下载好的 libfastcommon 拷贝至 /usr/local/ 目录下，然后依次执行如下命令：</p>
<div class="language-sh" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2"> cd</span><span style="color:#98C379;--shiki-dark:#98C379"> /usr/local</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF"> tar</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -zxvf</span><span style="color:#98C379;--shiki-dark:#98C379"> libfastcommon-1.0.43.tar.gz</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2"> cd</span><span style="color:#98C379;--shiki-dark:#98C379"> libfastcommon-1.0.43/</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF"> ./make.sh</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF"> ./make.sh</span><span style="color:#98C379;--shiki-dark:#98C379"> install</span></span></code></pre>
</div></li>
</ul>
</li>
<li>
<p>一个安装包</p>
<p>接下来我们下载 Tracker，注意，<strong>由于 Tracker 和 Storage 是相同的安装包</strong>，所以下载一次即可</p>
<p><a href="https://github.com/happyfish100/fastdfs/archive/V6.06.tar.gz" target="_blank" rel="noopener noreferrer">下载地址</a> : <a href="https://github.com/happyfish100/fastdfs/archive/V6.06.tar.gz" target="_blank" rel="noopener noreferrer">https://github.com/happyfish100/fastdfs/archive/V6.06.tar.gz</a></p>
<p>下载成功后，将下载文件拷贝到 /usr/local 目录下，然后依次执行如下命令安装：</p>
<div class="language-sh" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">cd</span><span style="color:#98C379;--shiki-dark:#98C379"> /usr/local</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">tar</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -zxvf</span><span style="color:#98C379;--shiki-dark:#98C379"> fastdfs-6.06.tar.gz</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">cd</span><span style="color:#98C379;--shiki-dark:#98C379"> fastdfs-6.06/</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">./make.sh</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">./make.sh</span><span style="color:#98C379;--shiki-dark:#98C379"> install</span></span></code></pre>
</div><p>安装成功后，执行如下命令，将安装目录内 conf 目录下的配置文件拷贝到 /etc/fdfs 目录下：</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>cd conf/</span></span>
<span class="line"><span>cp ./* /etc/fdfs/</span></span></code></pre>
</div></li>
<li>
<p>配置</p>
<p>进入 /etc/fdfs/ 目录下进行配置：</p>
<p>打开 tracker.conf 文件：</p>
<div class="language-sh" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">vi</span><span style="color:#98C379;--shiki-dark:#98C379"> tracker.conf</span></span></code></pre>
</div><p>修改如下配置：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301012661.png" alt="image-20201211094903515" tabindex="0" loading="lazy"><figcaption>image-20201211094903515</figcaption></figure>
</li>
</ol>
<ul>
<li>默认端口:22122 （无特殊需求暂不做修改）</li>
<li>元数据的保存目录：（注意目录要存在）</li>
</ul>
<ol>
<li>
<p>启动</p>
<p>接下来执行如下命令启动 Tracker：</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>/usr/bin/fdfs_trackerd /etc/fdfs/tracker.conf start</span></span></code></pre>
</div></li>
</ol>
<h3>2.2 Storage 安装</h3>
<p>这里我们搭建一个 Storage 实例即可。Storage 安装也需要 libevent 和 libfastcommon，这两个库的安装参考上文</p>
<p>Storage 本身的安装，也和 Tracker 一致，执行命令也都一样，因为我这里将 Tracker 和 Storage 安装在同一台服务器上，所以不用再执行安装命令了（相当于安装 Tracker 时已经安装了 Storage 了）。</p>
<p>唯一要做的，就是进入到 /etc/fdfs 目录下，配置 Storage：</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>vi storage.conf</span></span></code></pre>
</div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301012687.png" alt="image-20201211101021672" tabindex="0" loading="lazy"><figcaption>image-20201211101021672</figcaption></figure>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301012707.png" alt="image-20201211100945362" tabindex="0" loading="lazy"><figcaption>image-20201211100945362</figcaption></figure>
<p>这里一共配置三个地方，分别是 base_path、store_path0 以及 tracker_server ，tracker_server 模板有两个地址，我们这里只有一个，配置完成后，记得注释掉另外一个不用的。</p>
<p>配置完成后，执行如下命令启动 Storage：</p>
<div class="language-sh" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">/usr/bin/fdfs_storaged</span><span style="color:#98C379;--shiki-dark:#98C379"> /etc/fdfs/storage.conf</span><span style="color:#98C379;--shiki-dark:#98C379"> start</span></span></code></pre>
</div><p>这两个启动完成后，现在就可以做文件的上传了，但是一般如果是图片文件，我们还需要提供一个图片的访问功能，目前来说最佳方案当然是 Nginx 了，所以我们这里连同 Nginx 一起配置好，再来做测试。</p>
<h3>2.3 Nginx 安装</h3>
<p>Nginx 的安装分为两个步骤：</p>
<ul>
<li>安装 Nginx</li>
<li>首先在 Storage 下安装 fastdfs-nginx-module</li>
</ul>
<h4>2.3.1 安装Nginx</h4>
<p>参考：<a href="http://java.isture.com/linux/nginx/%E5%AE%89%E8%A3%85nginx.html" target="_blank" rel="noopener noreferrer">安装nginx</a></p>
<h4>2.3.2 Storage 下安装 fastdfs-nginx-module</h4>
<ol>
<li>
<p>下载fastdfs-nginx-module</p>
<p><a href="https://github.com/happyfish100/fastdfs-nginx-module/releases" target="_blank" rel="noopener noreferrer">下载地址</a></p>
</li>
<li>
<p>下载完成后，将下载的文件拷贝到 /usr/local 目录下。然后进入 /usr/local 目录，分别执行如下命令：</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>cd /usr/local/</span></span>
<span class="line"><span>tar -zxvf fastdfs-nginx-module-1.22.tar.gz</span></span></code></pre>
</div></li>
<li>
<p>然后将 <code>/usr/local/fastdfs-nginx-module-1.22/src/mod_fastdfs.conf</code> 文件拷贝到 <code>/etc/fdfs/</code> 目录下，并修改该文件的内容：</p>
<div class="language-sh" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">cp</span><span style="color:#98C379;--shiki-dark:#98C379"> /usr/local/fastdfs-nginx-module-1.22/src/mod_fastdfs.conf</span><span style="color:#98C379;--shiki-dark:#98C379"> /etc/fdfs/</span></span></code></pre>
</div></li>
<li>
<p>修改mod_fastdfs.conf的内容：</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>vi /etc/fdfs/mod_fastdfs.conf</span></span></code></pre>
</div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301012730.png" alt="image-20201211102958727" tabindex="0" loading="lazy"><figcaption>image-20201211102958727</figcaption></figure>
</li>
<li>
<p>接下来，回到第一步下载的 nginx 安装文件的解压目录中，执行如下命令，重新配置编译安装：</p>
<div class="language-sh" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">./configure</span><span style="color:#D19A66;--shiki-dark:#D19A66"> --add-module=/usr/local/fastdfs-nginx-module-1.22/src</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">make</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">make</span><span style="color:#98C379;--shiki-dark:#98C379"> install</span></span></code></pre>
</div></li>
<li>
<p>安装完成后，修改 nginx 的配置文件，如下：</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>vi /usr/local/nginx/conf/nginx.conf</span></span></code></pre>
</div><p>添加</p>
<div class="language-txt" data-ext="txt" data-title="txt"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>	server {</span></span>
<span class="line"><span>        listen          80;</span></span>
<span class="line"><span>        server_name     127.0.0.1;       </span></span>
<span class="line"><span>		location ~/group([0-9]) {</span></span>
<span class="line"><span>            ngx_fastdfs_module;</span></span>
<span class="line"><span>       	}</span></span>
<span class="line"><span>    }</span></span></code></pre>
</div><p>在这里配置 nginx 请求转发。</p>
<p>配置完成后，启动 nginx，看到如下日志，表示 nginx 启动成功：</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>ngx_http_fastdfs_set pid=19040</span></span></code></pre>
</div><p><strong>疑问：fastdfs-nginx-module 有啥用</strong></p>
<p>看了整个安装过程之后，很多小伙伴有疑问，到头来还是 nginx 本身直接找到了图片文件目录，fastdfs-nginx-module 到底有啥用？</p>
<p>前面我们说过，Storage 由很多组构成，每个组又是一个小的集群，在每一个组里边，数据会进行同步，但是如果数据还没同步，这个时候就有请求发来了，该怎么办？此时<strong>fastdfs-nginx-module 会帮助我们直接从源 Storage 上获取文件。</strong></p>
</li>
</ol>
<h2>3. 启动fastDFS</h2>
<p>重启tracker</p>
<div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">/usr/bin/fdfs_trackerd</span><span style="color:#98C379;--shiki-dark:#98C379"> /etc/fdfs/tracker.conf</span><span style="color:#98C379;--shiki-dark:#98C379"> start</span></span></code></pre>
</div><p>重启storage</p>
<div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">/usr/bin/fdfs_storaged</span><span style="color:#98C379;--shiki-dark:#98C379"> /etc/fdfs/storage.conf</span><span style="color:#98C379;--shiki-dark:#98C379"> start</span></span></code></pre>
</div><h2>4. Java客户端调用</h2>
<h3>4.1 相关配置</h3>
<p>安装成功后，接下来我们就用 Java 客户端来测试一下文件上传下载。</p>
<ol>
<li>
<p>添加maven 依赖</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;net.oschina.zcx7878&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;fastdfs-client-java&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;1.27.0.0&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
</div></li>
<li>
<p>在项目的 resources 目录下添加 FastDFS 的配置文件 fastdfs-client.properties，内容如下：</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>fastdfs.connect_timeout_in_seconds = 5</span></span>
<span class="line"><span>fastdfs.network_timeout_in_seconds = 30</span></span>
<span class="line"><span>fastdfs.charset = UTF-8</span></span>
<span class="line"><span>fastdfs.http_anti_steal_token = false</span></span>
<span class="line"><span>fastdfs.http_secret_key = FastDFS1234567890</span></span>
<span class="line"><span>fastdfs.http_tracker_http_port = 80</span></span>
<span class="line"><span>fastdfs.tracker_servers = 120.79.200.222:22122</span></span>
<span class="line"><span>fastdfs.connection_pool.enabled = true</span></span>
<span class="line"><span>fastdfs.connection_pool.max_count_per_entry = 500</span></span>
<span class="line"><span>fastdfs.connection_pool.max_idle_time = 3600</span></span>
<span class="line"><span>fastdfs.connection_pool.max_wait_time_in_ms = 1000</span></span></code></pre>
</div><p>fastdfs.tracker_servers: 这是 Tracker 的地址，根据实际情况配置即可。</p>
</li>
</ol>
<h3>4.2 文件上传</h3>
<p>配置完成后，先来看文件上传，代码如下：</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Test</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> testUpload</span><span style="color:#E06C75;--shiki-dark:#E06C75">() {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        try</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            ClientGlobal</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">initByProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"fastdfs-client.properties"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            TrackerClient</span><span style="color:#E06C75;--shiki-dark:#E06C75"> tracker </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> TrackerClient</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            TrackerServer</span><span style="color:#E06C75;--shiki-dark:#E06C75"> trackerServer </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> tracker</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getConnection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            StorageServer</span><span style="color:#E06C75;--shiki-dark:#E06C75"> storageServer </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            StorageClient1</span><span style="color:#E06C75;--shiki-dark:#E06C75"> client </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> StorageClient1</span><span style="color:#E06C75;--shiki-dark:#E06C75">(trackerServer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> storageServer)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            NameValuePair</span><span style="color:#E06C75;--shiki-dark:#E06C75"> nvp[] </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            //上传到文件系统</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> fileId </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> client</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">upload_file1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"img</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\t</span><span style="color:#98C379;--shiki-dark:#98C379">est.jpg"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#98C379;--shiki-dark:#98C379">"jpg"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                    nvp);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            logger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">info</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(fileId);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD">catch</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Exception</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            e</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">printStackTrace</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行步骤</p>
<ol>
<li>
<p>首先加载配置文件</p>
</li>
<li>
<p>然后构造一个 TrackerClient 对象</p>
</li>
<li>
<p>根据这个对象获取到一个 TrackerServer</p>
</li>
<li>
<p>然后创建一个 StorageClient1 实例</p>
</li>
<li>
<p>NameValuePair 中保存的是文件的元数据信息，如果有的话，就以 key/value 的方式来设置，如果没有的话，直接给一个 null 即可。</p>
</li>
<li>
<p>调用 client 的 upload_file1 方法上传文件，第一个参数是文件路径，第二个参数是文件的扩展名，第三个参数就是文件的元数据信息，这个方法的返回值，就是上传文件的访问路径。</p>
<p>执行该方法，打印日志如下：</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>group1/M00/00/00/eE_Ib1_S57OAa6pQAADzHWHkPwM335.jpg</span></span></code></pre>
</div><p>就是文件的路径，此时，在浏览器中输入<a href="http://120.79.200.xxx:8701/group1/M00/00/00/eE_Ib1_S57OAa6pQAADzHWHkPwM335.jpg" target="_blank" rel="noopener noreferrer">http://120.79.200.xxx:8701/group1/M00/00/00/eE_Ib1_S57OAa6pQAADzHWHkPwM335.jpg</a> 就可以看到上传的图片了。</p>
</li>
</ol>
<h4>4.2.1 图片显示不出</h4>
<p>FastDFS 配好了，Nginx也配好了，可是网页打开图片地址就是访问不了，查看Nginx的log文件看到</p>
<div class="language-sh" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">  ERROR</span><span style="color:#98C379;--shiki-dark:#98C379"> -</span><span style="color:#98C379;--shiki-dark:#98C379"> file:</span><span style="color:#98C379;--shiki-dark:#98C379"> /usr/local/src/fastdfs-nginx-module-1.20/src/common.c,</span><span style="color:#98C379;--shiki-dark:#98C379"> line:</span><span style="color:#98C379;--shiki-dark:#98C379"> 111,</span><span style="color:#98C379;--shiki-dark:#98C379"> section:</span><span style="color:#98C379;--shiki-dark:#98C379"> group1,</span><span style="color:#98C379;--shiki-dark:#98C379"> you</span><span style="color:#98C379;--shiki-dark:#98C379"> must</span><span style="color:#98C379;--shiki-dark:#98C379"> set</span><span style="color:#98C379;--shiki-dark:#98C379"> parameter:</span><span style="color:#98C379;--shiki-dark:#98C379"> group_name!</span></span></code></pre>
</div><p>找到 mod_fastdfs.conf ，发现groupname 没有写对(被注释了)</p>
<div class="language-sh" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># when support multi-group on this storage server, uncomment following section</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  [group1]</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  group_name</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">group1</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  storage_server_port</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">23000</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  store_path_count</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">1</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  store_path0</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">/home/fastdfsuser/fastdfs</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  #store_path1=/home/yuqing/fastdfs1</span></span></code></pre>
</div><p>重启fastdfs 和 nginx</p>
<h3>4.3 文件下载</h3>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Test</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> testDownload</span><span style="color:#E06C75;--shiki-dark:#E06C75">() {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        try</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            ClientGlobal</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">initByProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"fastdfs-client.properties"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            TrackerClient</span><span style="color:#E06C75;--shiki-dark:#E06C75"> tracker </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> TrackerClient</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            TrackerServer</span><span style="color:#E06C75;--shiki-dark:#E06C75"> trackerServer </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> tracker</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getConnection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            StorageServer</span><span style="color:#E06C75;--shiki-dark:#E06C75"> storageServer </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            StorageClient1</span><span style="color:#E06C75;--shiki-dark:#E06C75"> client </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> StorageClient1</span><span style="color:#E06C75;--shiki-dark:#E06C75">(trackerServer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> storageServer)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            byte</span><span style="color:#E06C75;--shiki-dark:#E06C75">[] bytes </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> client</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">download_file1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"group1/M00/00/00/eE_Ib1_S57OAa6pQAADzHWHkPwM335.jpg"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            FileOutputStream</span><span style="color:#E06C75;--shiki-dark:#E06C75"> fos </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> FileOutputStream</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> File</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"img</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\\</span><span style="color:#98C379;--shiki-dark:#98C379">out.png"</span><span style="color:#E06C75;--shiki-dark:#E06C75">))</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            fos</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">write</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bytes);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            fos</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">close</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD">catch</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Exception</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            e</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">printStackTrace</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>直接调用 download_file1 方法获取到一个 byte 数组，然后通过 IO 流写出到本地文件即可。</p>
<h2>5. 安全问题</h2>
<p>现在，任何人都可以访问我们服务器上传文件，这肯定是不行的，这个问题好解决，加一个上传时候的令牌即可。</p>
<ol>
<li>
<p>首先我们在服务端开启令牌校验：</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>vi /etc/fdfs/http.conf</span></span></code></pre>
</div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301012754.png" alt="image-20201211150330620" tabindex="0" loading="lazy"><figcaption>image-20201211150330620</figcaption></figure>
</li>
<li>
<p>重启服务端</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>./nginx -s stop</span></span>
<span class="line"><span>./nginx</span></span></code></pre>
</div></li>
<li>
<p>前端获取令牌</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Test</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getToken</span><span style="color:#E06C75;--shiki-dark:#E06C75">() throws Exception {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> ts </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#E06C75;--shiki-dark:#E06C75">) </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Instant</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">now</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getEpochSecond</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> token </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ProtoCommon</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getToken</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"M00/00/00/eE_Ib1_S57OAa6pQAADzHWHkPwM335.jpg"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, ts, </span><span style="color:#98C379;--shiki-dark:#98C379">"FastDFS1234567890"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        StringBuilder</span><span style="color:#E06C75;--shiki-dark:#E06C75"> sb </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> StringBuilder</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        sb</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">append</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"?token="</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">append</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(token);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        sb</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">append</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"&amp;ts="</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">append</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(ts);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">sb</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">toString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
</div><p>根据 ProtoCommon.getToken 方法来获取令牌</p>
<ul>
<li>第一个参数是你要访问的文件 id，<strong>注意，这个地址里边不包含 group，千万别搞错了；</strong></li>
<li>第二个参数是时间戳</li>
<li>第三个参数是密钥，密钥要和服务端的配置一致。</li>
</ul>
<p>将生成的字符串拼接，追加到访问路径后面，如：</p>
<p><a href="http://120.79.200.xxx:8701/group1/M00/00/00/eE_Ib1_S57OAa6pQAADzHWHkPwM335.jpg?token=94a8e7167e1583b0efa674d0dbf5fc63&amp;ts=1607670503%E3%80%82**%E6%AD%A4%E6%97%B6%E8%AE%BF%E9%97%AE%E8%B7%AF%E5%BE%84%E9%87%8C%E8%BE%B9%E5%A6%82%E6%9E%9C%E6%B2%A1%E6%9C%89%E4%BB%A4%E7%89%8C%EF%BC%8C%E4%BC%9A%E8%AE%BF%E9%97%AE%E5%A4%B1%E8%B4%A5%E3%80%82" target="_blank" rel="noopener noreferrer">http://120.79.200.xxx:8701/group1/M00/00/00/eE_Ib1_S57OAa6pQAADzHWHkPwM335.jpg?token=94a8e7167e1583b0efa674d0dbf5fc63&amp;ts=1607670503。**此时访问路径里边如果没有令牌，会访问失败。</a>**</p>
</li>
</ol>
<h2>6.异常处理</h2>
<h3>6.1 getStoreStorage fail, errno code: 28</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301012774.png" alt="image-20201211113209071" tabindex="0" loading="lazy"><figcaption>image-20201211113209071</figcaption></figure>
<p>引起错误的原因是，在我们配置tracker的时候，里面有一个配置项：</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span># reserved storage space for system or other applications.</span></span>
<span class="line"><span># if the free(available) space of any stoarge server in</span></span>
<span class="line"><span># a group &lt;= reserved_storage_space, no file can be uploaded to this group.</span></span>
<span class="line"><span># bytes unit can be one of follows:</span></span>
<span class="line"><span>### G or g for gigabyte(GB)</span></span>
<span class="line"><span>### M or m for megabyte(MB)</span></span>
<span class="line"><span>### K or k for kilobyte(KB)</span></span>
<span class="line"><span>### no unit for byte(B)</span></span>
<span class="line"><span>### XX.XX% as ratio such as: reserved_storage_space = 10%</span></span>
<span class="line"><span>reserved_storage_space = 10%</span></span></code></pre>
</div><p>该配置项是配置storage服务预留磁盘空间的大小的比值，默认是10%，即当磁盘空间不足10%时，则tracker拒绝上传文件。</p>
<p>解决方法：</p>
<ol>
<li>删除不用文件，最好调用DFS的删除API执行删除，因为DFS会维护一个索引文件，调用API删除时会连同索引文件都会删除。这种方式谨慎使用。</li>
<li>如果文件不允许删除，则需要扩展磁盘。</li>
<li>临时解决方案，调小该比例</li>
</ol>
<h3>6.2 客户端连接超时</h3>
<p>connect timed out</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301012794.png" alt="image-20210324234312735" tabindex="0" loading="lazy"><figcaption>image-20210324234312735</figcaption></figure>
<p>我们需要确认fdfs 端口是否打开，如果是阿里云服务器，则需要配置安全组</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301012823.png" alt="image-20210324234130717" tabindex="0" loading="lazy"><figcaption>image-20210324234130717</figcaption></figure>
<p>端口有两个：<strong>22122 和23000 都要开启</strong>！！！！</p>
<h2>参考文章</h2>
<p><a href="https://blog.csdn.net/u012702547/article/details/104589468" target="_blank" rel="noopener noreferrer">手把手教你用 FastDFS 构建分布式文件管理系统</a></p>
<p><a href="https://blog.csdn.net/weixin_42591789/article/details/87931282" target="_blank" rel="noopener noreferrer">FastDFS + Nginx 网页访问不了</a></p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301012620.png" type="image/png"/>
    </item>
    <item>
      <title>低代码开发平台初识</title>
      <link>https://mrjackc.github.io/posts/Architect/lowcode/lowcode-first-acquaintance.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/lowcode/lowcode-first-acquaintance.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">低代码开发平台初识</source>
      <description>低代码开发平台初识 记录一下从第一次接触低代码开发平台到放弃的过程 1. 第一次接触 低代码平台=表单生成器+仪表生成器+适配数据源+渲染表单操作 拖 + 配 =&amp;gt; 网站 2. 第二次接触 低代码是拉完就能生成产品 动态表单可能拉完就只能生成前端 image-20220901143946429image-20220901143946429</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<blockquote>
<p>记录一下从第一次接触低代码开发平台到放弃的过程</p>
</blockquote>
<h2>1. 第一次接触</h2>
<ol>
<li>低代码平台=表单生成器+仪表生成器+适配数据源+渲染表单操作</li>
<li>拖 + 配 =&gt; 网站</li>
</ol>
<h2>2. 第二次接触</h2>
<ul>
<li>低代码是拉完就能生成产品</li>
<li>动态表单可能拉完就只能生成前端</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301014420.png" alt="image-20220901143946429" tabindex="0" loading="lazy"><figcaption>image-20220901143946429</figcaption></figure>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301014420.png" type="image/png"/>
    </item>
    <item>
      <title>低代码开发平台-概念篇</title>
      <link>https://mrjackc.github.io/posts/Architect/lowcode/lowcode-started.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/lowcode/lowcode-started.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">低代码开发平台-概念篇</source>
      <description>低代码开发平台-概念篇 1. 企业为什么需要低代码开发平台？零代码开发还不够吗？ 答：如果大家都使用零代码开发平台（即不需要编码，通过表单拖拉拽完成系统研发），那程序员岂不是要失业了。程序员也要吃饭，所以不研发零代码开发平台，只专心做低代码开发平台。 以上纯属开个玩笑，下面说说我的看法 要想解答这个问题，首先得弄清楚他们的区别。零代码开发是一种完全不需...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 企业为什么需要低代码开发平台？零代码开发还不够吗？</h2>
<p>答：如果大家都使用零代码开发平台（即不需要编码，通过表单拖拉拽完成系统研发），那程序员岂不是要失业了。程序员也要吃饭，所以不研发零代码开发平台，只专心做低代码开发平台。</p>
<blockquote>
<p>以上纯属开个玩笑，下面说说我的看法</p>
</blockquote>
<p>要想解答这个问题，首先得弄清楚他们的区别。零代码开发是一种完全不需要任何代码的开发方式，主要是通过可视化模块方式设计数据结构，用户交互形式、设置访问权限和定义工作流程的平台；零代码开发平台非常适合构建针对特定场景的小型应用程序，如问卷调查等。</p>
<p>低代码开发是通过系统通过模板快速生成我们所需要的应用，允许使用代码来丰富系统功能。低代码开发平台不仅适用于特定的小型应用程序，对于大型企业的复杂的应用程序都是可以轻松驾驭的。</p>
<p>此外，面对一些复杂的场景零代码便难以胜任，用低代码开发平台则可以用代码轻松完成复杂场景的应用部署。并且低代码开发平台本身就比零代码更加灵活，在面对企业需要二次开发时可以轻松做到，没有什么顾虑。</p>
<p><strong>综上，低代码平台包含零代码平台的所有能力，从企业经营长远发展目标考虑，便捷的开发形式+卓越的拓展能力是核心，低代码平台能够帮助企业解决业务多重挑战。</strong></p>
]]></content:encoded>
    </item>
    <item>
      <title>mall中广告(轮播图)设计</title>
      <link>https://mrjackc.github.io/posts/Architect/mall/mall-ad.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/mall/mall-ad.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">mall中广告(轮播图)设计</source>
      <description>mall中广告(轮播图)设计 1. 简介 用于管理首页显示的轮播广告信息。 2. 数据库设计 3. 代码设计 3.1 分页查询广告 3.2 新增广告 初始化点击次数和订单次数是在代码层做的 4. 界面设计 4.1 管理端 4.1.1 广告列表 image-20220320185355632image-20220320185355632 4.1.2 编辑...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 简介</h2>
<p>用于管理首页显示的轮播广告信息。</p>
<h2>2. 数据库设计</h2>
<div class="language- line-numbers-mode" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>create table sms_home_advertise</span></span>
<span class="line"><span>(</span></span>
<span class="line"><span>   id                   bigint not null auto_increment,</span></span>
<span class="line"><span>   name                 varchar(100) comment '名称',</span></span>
<span class="line"><span>   type                 int(1) comment '轮播位置：0-&gt;PC首页轮播；1-&gt;app首页轮播',</span></span>
<span class="line"><span>   pic                  varchar(500) comment '图片地址',</span></span>
<span class="line"><span>   start_time           datetime comment '开始时间',</span></span>
<span class="line"><span>   end_time             datetime comment '结束时间',</span></span>
<span class="line"><span>   status               int(1) comment '上下线状态：0-&gt;下线；1-&gt;上线',</span></span>
<span class="line"><span>   click_count          int comment '点击数',</span></span>
<span class="line"><span>   order_count          int comment '下单数',</span></span>
<span class="line"><span>   url                  varchar(500) comment '链接地址',</span></span>
<span class="line"><span>   note                 varchar(500) comment '备注',</span></span>
<span class="line"><span>   sort                 int default 0 comment '排序',</span></span>
<span class="line"><span>   primary key (id)</span></span>
<span class="line"><span>);</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2>3. 代码设计</h2>
<h3>3.1 分页查询广告</h3>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> List</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">SmsHomeAdvertise</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> list</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Integer</span><span style="color:#E06C75;--shiki-dark:#E06C75"> type</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> endTime</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Integer</span><span style="color:#E06C75;--shiki-dark:#E06C75"> pageSize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Integer</span><span style="color:#E06C75;--shiki-dark:#E06C75"> pageNum) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    PageHelper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">startPage</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(pageNum, pageSize);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    SmsHomeAdvertiseExample</span><span style="color:#E06C75;--shiki-dark:#E06C75"> example </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> SmsHomeAdvertiseExample</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    SmsHomeAdvertiseExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Criteria</span><span style="color:#E06C75;--shiki-dark:#E06C75"> criteria </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> example</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">createCriteria</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">StringUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isEmpty</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(name)</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        criteria</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">andNameLike</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"%"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> name </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#98C379;--shiki-dark:#98C379"> "%"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (type </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        criteria</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">andTypeEqualTo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(type);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">StringUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isEmpty</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(endTime)</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> startStr </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75"> endTime </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#98C379;--shiki-dark:#98C379"> " 00:00:00"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> endStr </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75"> endTime </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#98C379;--shiki-dark:#98C379"> " 23:59:59"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        SimpleDateFormat</span><span style="color:#E06C75;--shiki-dark:#E06C75"> sdf </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> SimpleDateFormat</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"yyyy-MM-dd HH:mm:ss"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Date</span><span style="color:#E06C75;--shiki-dark:#E06C75"> start </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        try</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            start </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> sdf</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">parse</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(startStr);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD">catch</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ParseException</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            e</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">printStackTrace</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Date</span><span style="color:#E06C75;--shiki-dark:#E06C75"> end </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        try</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            end </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> sdf</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">parse</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(endStr);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD">catch</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ParseException</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            e</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">printStackTrace</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (start </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> end </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            criteria</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">andEndTimeBetween</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(start, end);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    example</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setOrderByClause</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"sort desc"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> advertiseMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">selectByExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(example);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>3.2 新增广告</h3>
<p>初始化点击次数和订单次数是在代码层做的</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> int</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> create</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SmsHomeAdvertise</span><span style="color:#E06C75;--shiki-dark:#E06C75"> advertise) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        advertise</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setClickCount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        advertise</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setOrderCount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> advertiseMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">insert</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(advertise);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
</div><h2>4. 界面设计</h2>
<h3>4.1 管理端</h3>
<h4>4.1.1 广告列表</h4>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301136150.png" alt="image-20220320185355632" tabindex="0" loading="lazy"><figcaption>image-20220320185355632</figcaption></figure>
<h4>4.1.2 编辑广告</h4>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301136205.png" alt="image-20220320185414101" tabindex="0" loading="lazy"><figcaption>image-20220320185414101</figcaption></figure>
<h3>4.2 移动端</h3>
<h4>4.2.1 首页轮播广告</h4>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301136232.png" alt="image-20220320185525867" tabindex="0" loading="lazy"><figcaption>image-20220320185525867</figcaption></figure>
<h2>5. 使用感受</h2>
<h3>5.1 扩展性不强</h3>
<p>现在只有，PC首页轮播，app首页轮播。如果我们其他地方需要轮播，我们需要改代码。</p>
<p>如果配上字典表的话，情况会好一点</p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301136150.png" type="image/png"/>
    </item>
    <item>
      <title>mall中购物车设计</title>
      <link>https://mrjackc.github.io/posts/Architect/mall/mall-cart.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/mall/mall-cart.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">mall中购物车设计</source>
      <description>mall中购物车设计 该篇文章主要参考mall官方文档，并结合自己的使用感受做的一些笔记 1. 简介 无论是直接购买还是从添加到购物车，都要先经过购物车 2. 购物车流程 2.1 添加到购物车 查询会员信息 根据会员id,商品id和规格获取购物车中商品 校验购物车中是否已存在该商品 不存在：直接新增 存在：在原有基础上新增数量 2.2 查询购物车列表 ...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<blockquote>
<p>该篇文章主要参考<a href="http://www.macrozheng.com/#/README" target="_blank" rel="noopener noreferrer">mall官方文档</a>，并结合自己的使用感受做的一些笔记</p>
</blockquote>
<h2>1. 简介</h2>
<p>无论是直接购买还是从添加到购物车，都要先经过购物车</p>
<h2>2. 购物车流程</h2>
<h3>2.1 添加到购物车</h3>
<ol>
<li>查询会员信息</li>
<li>根据会员id,商品id和规格获取购物车中商品</li>
<li>校验购物车中是否已存在该商品
<ol>
<li>不存在：直接新增</li>
<li>存在：在原有基础上新增数量</li>
</ol>
</li>
</ol>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> int</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> add</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OmsCartItem</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cartItem) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> count</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        UmsMember</span><span style="color:#E06C75;--shiki-dark:#E06C75"> currentMember </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">memberService</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getCurrentMember</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        cartItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setMemberId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">currentMember</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        cartItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setMemberNickname</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">currentMember</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getNickname</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        cartItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setDeleteStatus</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        OmsCartItem</span><span style="color:#E06C75;--shiki-dark:#E06C75"> existCartItem </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getCartItem</span><span style="color:#E06C75;--shiki-dark:#E06C75">(cartItem)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (existCartItem </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            cartItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setCreateDate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Date</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            count </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> cartItemMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">insert</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(cartItem);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            cartItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setModifyDate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Date</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            existCartItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setQuantity</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">existCartItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getQuantity</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> cartItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getQuantity</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            count </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> cartItemMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">updateByPrimaryKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(existCartItem);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> count</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 根据会员id,商品id和规格获取购物车中商品</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> OmsCartItem</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getCartItem</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OmsCartItem</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cartItem) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        OmsCartItemExample</span><span style="color:#E06C75;--shiki-dark:#E06C75"> example </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> OmsCartItemExample</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        OmsCartItemExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Criteria</span><span style="color:#E06C75;--shiki-dark:#E06C75"> criteria </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> example</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">createCriteria</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">andMemberIdEqualTo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">cartItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getMemberId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">())</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">andProductIdEqualTo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">cartItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProductId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">andDeleteStatusEqualTo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">StringUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isEmpty</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">cartItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProductSkuId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">())</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            criteria</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">andProductSkuIdEqualTo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">cartItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProductSkuId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OmsCartItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cartItemList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> cartItemMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">selectByExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(example);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">CollectionUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isEmpty</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(cartItemList)</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> cartItemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>2.2 查询购物车列表</h3>
<h4>2.2.1 普通购物车列表</h4>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> List</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">OmsCartItem</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> list</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> memberId) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    OmsCartItemExample</span><span style="color:#E06C75;--shiki-dark:#E06C75"> example </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> OmsCartItemExample</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    example</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">createCriteria</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">andDeleteStatusEqualTo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">andMemberIdEqualTo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(memberId);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> cartItemMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">selectByExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(example);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
</div><h4>2.2.2 包含促销的购物车列表</h4>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> List</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">CartPromotionItem</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> listPromotion</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> memberId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> List</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">Long</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cartIds) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OmsCartItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cartItemList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> list</span><span style="color:#E06C75;--shiki-dark:#E06C75">(memberId)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">CollUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isNotEmpty</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(cartIds)</span><span style="color:#E06C75;--shiki-dark:#E06C75">){</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            cartItemList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> cartItemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">stream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">filter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(item</span><span style="color:#C678DD;--shiki-dark:#C678DD">-&gt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">cartIds</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">contains</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">())).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">collect</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Collectors</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">toList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">CartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cartPromotionItemList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">CollectionUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isEmpty</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(cartItemList)</span><span style="color:#E06C75;--shiki-dark:#E06C75">){</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            cartPromotionItemList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> promotionService</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">calcCartPromotion</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(cartItemList);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cartPromotionItemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
</div><p>计算购物车促销活动</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> List</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">CartPromotionItem</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> calcCartPromotion</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">List</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">OmsCartItem</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cartItemList) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //1.先根据productId对CartItem进行分组，以spu为单位进行计算优惠</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OmsCartItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> productCartMap </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> groupCartItemBySpu</span><span style="color:#E06C75;--shiki-dark:#E06C75">(cartItemList)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //2.查询所有商品的优惠相关信息</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PromotionProduct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> promotionProductList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getPromotionProductList</span><span style="color:#E06C75;--shiki-dark:#E06C75">(cartItemList)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //3.根据商品促销类型计算商品促销优惠价格</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">CartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cartPromotionItemList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Entry</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OmsCartItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> entry </span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> productCartMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">entrySet</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            Long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> productId </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> entry</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            PromotionProduct</span><span style="color:#E06C75;--shiki-dark:#E06C75"> promotionProduct </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getPromotionProductById</span><span style="color:#E06C75;--shiki-dark:#E06C75">(productId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> promotionProductList)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OmsCartItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> itemList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> entry</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getValue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            Integer</span><span style="color:#E06C75;--shiki-dark:#E06C75"> promotionType </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> promotionProduct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getPromotionType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (promotionType </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                //单品促销</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OmsCartItem</span><span style="color:#E06C75;--shiki-dark:#E06C75"> item </span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> itemList) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    CartPromotionItem</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cartPromotionItem </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> CartPromotionItem</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    BeanUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">copyProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(item,cartPromotionItem);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setPromotionMessage</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"单品促销"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    //商品原价-促销价</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    PmsSkuStock</span><span style="color:#E06C75;--shiki-dark:#E06C75"> skuStock </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getOriginalPrice</span><span style="color:#E06C75;--shiki-dark:#E06C75">(promotionProduct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProductSkuId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    BigDecimal</span><span style="color:#E06C75;--shiki-dark:#E06C75"> originalPrice </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> skuStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getPrice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    //单品促销使用原价</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setPrice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(originalPrice);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setReduceAmount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">originalPrice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">subtract</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">skuStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getPromotionPrice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()));</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setRealStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">skuStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">skuStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getLockStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setIntegration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">promotionProduct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getGiftPoint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setGrowth</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">promotionProduct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getGiftGrowth</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    cartPromotionItemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(cartPromotionItem);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            } </span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#C678DD;--shiki-dark:#C678DD"> if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (promotionType </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 3</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                //打折优惠</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> count </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getCartItemCount</span><span style="color:#E06C75;--shiki-dark:#E06C75">(itemList)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                PmsProductLadder</span><span style="color:#E06C75;--shiki-dark:#E06C75"> ladder </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getProductLadder</span><span style="color:#E06C75;--shiki-dark:#E06C75">(count</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> promotionProduct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProductLadderList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                if</span><span style="color:#E06C75;--shiki-dark:#E06C75">(ladder</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!=</span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#E06C75;--shiki-dark:#E06C75">){</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                    for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OmsCartItem</span><span style="color:#E06C75;--shiki-dark:#E06C75"> item </span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> itemList) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        CartPromotionItem</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cartPromotionItem </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> CartPromotionItem</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        BeanUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">copyProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(item,cartPromotionItem);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> message </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getLadderPromotionMessage</span><span style="color:#E06C75;--shiki-dark:#E06C75">(ladder)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setPromotionMessage</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(message);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                        //商品原价-折扣*商品原价</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        PmsSkuStock</span><span style="color:#E06C75;--shiki-dark:#E06C75"> skuStock </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getOriginalPrice</span><span style="color:#E06C75;--shiki-dark:#E06C75">(promotionProduct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProductSkuId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        BigDecimal</span><span style="color:#E06C75;--shiki-dark:#E06C75"> originalPrice </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> skuStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getPrice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        BigDecimal</span><span style="color:#E06C75;--shiki-dark:#E06C75"> reduceAmount </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> originalPrice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">subtract</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ladder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getDiscount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">multiply</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(originalPrice));</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setReduceAmount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(reduceAmount);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setRealStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">skuStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">skuStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getLockStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setIntegration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">promotionProduct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getGiftPoint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setGrowth</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">promotionProduct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getGiftGrowth</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        cartPromotionItemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(cartPromotionItem);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                    }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                }</span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#E06C75;--shiki-dark:#E06C75">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">                    handleNoReduce</span><span style="color:#E06C75;--shiki-dark:#E06C75">(cartPromotionItemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75">itemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75">promotionProduct)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            } </span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#C678DD;--shiki-dark:#C678DD"> if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (promotionType </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 4</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                //满减</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                BigDecimal</span><span style="color:#E06C75;--shiki-dark:#E06C75"> totalAmount</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getCartItemAmount</span><span style="color:#E06C75;--shiki-dark:#E06C75">(itemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75">promotionProductList)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                PmsProductFullReduction</span><span style="color:#E06C75;--shiki-dark:#E06C75"> fullReduction </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getProductFullReduction</span><span style="color:#E06C75;--shiki-dark:#E06C75">(totalAmount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">promotionProduct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProductFullReductionList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                if</span><span style="color:#E06C75;--shiki-dark:#E06C75">(fullReduction</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!=</span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#E06C75;--shiki-dark:#E06C75">){</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                    for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OmsCartItem</span><span style="color:#E06C75;--shiki-dark:#E06C75"> item </span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> itemList) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        CartPromotionItem</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cartPromotionItem </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> CartPromotionItem</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        BeanUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">copyProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(item,cartPromotionItem);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> message </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getFullReductionPromotionMessage</span><span style="color:#E06C75;--shiki-dark:#E06C75">(fullReduction)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setPromotionMessage</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(message);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                        //(商品原价/总价)*满减金额</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        PmsSkuStock</span><span style="color:#E06C75;--shiki-dark:#E06C75"> skuStock</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getOriginalPrice</span><span style="color:#E06C75;--shiki-dark:#E06C75">(promotionProduct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProductSkuId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        BigDecimal</span><span style="color:#E06C75;--shiki-dark:#E06C75"> originalPrice </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> skuStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getPrice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        BigDecimal</span><span style="color:#E06C75;--shiki-dark:#E06C75"> reduceAmount </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> originalPrice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">divide</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(totalAmount,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">RoundingMode</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">HALF_EVEN</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">multiply</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">fullReduction</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getReducePrice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setReduceAmount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(reduceAmount);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setRealStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">skuStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">skuStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getLockStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setIntegration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">promotionProduct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getGiftPoint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setGrowth</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">promotionProduct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getGiftGrowth</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        cartPromotionItemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(cartPromotionItem);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                    }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                }</span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#E06C75;--shiki-dark:#E06C75">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">                    handleNoReduce</span><span style="color:#E06C75;--shiki-dark:#E06C75">(cartPromotionItemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75">itemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75">promotionProduct)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            } </span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                //无优惠</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">                handleNoReduce</span><span style="color:#E06C75;--shiki-dark:#E06C75">(cartPromotionItemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> itemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75">promotionProduct)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cartPromotionItemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>2.3 更新购物车中商品的数量</h3>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> int</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> updateQuantity</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> memberId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Integer</span><span style="color:#E06C75;--shiki-dark:#E06C75"> quantity) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        OmsCartItem</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cartItem </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> OmsCartItem</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        cartItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setQuantity</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(quantity);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        OmsCartItemExample</span><span style="color:#E06C75;--shiki-dark:#E06C75"> example </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> OmsCartItemExample</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        example</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">createCriteria</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">andDeleteStatusEqualTo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">andIdEqualTo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(id).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">andMemberIdEqualTo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(memberId);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> cartItemMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">updateByExampleSelective</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(cartItem, example);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
</div><h3>2.4 删除和清空购物车</h3>
<p>删除和清空都是逻辑删除，这些数据我们都是非常宝贵的</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> int</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> delete</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> memberId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> List</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">Long</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> ids) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        OmsCartItem</span><span style="color:#E06C75;--shiki-dark:#E06C75"> record </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> OmsCartItem</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        record</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setDeleteStatus</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        OmsCartItemExample</span><span style="color:#E06C75;--shiki-dark:#E06C75"> example </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> OmsCartItemExample</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        example</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">createCriteria</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">andIdIn</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(ids).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">andMemberIdEqualTo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(memberId);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> cartItemMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">updateByExampleSelective</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(record, example);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> int</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> clear</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> memberId) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        OmsCartItem</span><span style="color:#E06C75;--shiki-dark:#E06C75"> record </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> OmsCartItem</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        record</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setDeleteStatus</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        OmsCartItemExample</span><span style="color:#E06C75;--shiki-dark:#E06C75"> example </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> OmsCartItemExample</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        example</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">createCriteria</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">andMemberIdEqualTo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(memberId);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> cartItemMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">updateByExampleSelective</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(record,example);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>mall中优惠券设计（重点）</title>
      <link>https://mrjackc.github.io/posts/Architect/mall/mall-coupon.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/mall/mall-coupon.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">mall中优惠券设计（重点）</source>
      <description>mall中优惠券设计（重点） 该篇文章主要参考mall官方文档，并结合自己的使用感受做的一些笔记 1. 简介 优惠券是商城中的核心重点，电商通过各种各种促销玩法，增加用户购买欲望，拉动消费。但促销玩法还是挺复杂的 2. 相关表结构 2.1 优惠券表 用于存储优惠券信息，需要注意的是优惠券的使用类型：0-&amp;gt;全场通用；1-&amp;gt;指定分类；2-&amp;gt;指定商品，不同使...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<blockquote>
<p>该篇文章主要参考<a href="http://www.macrozheng.com/#/README" target="_blank" rel="noopener noreferrer">mall官方文档</a>，并结合自己的使用感受做的一些笔记</p>
</blockquote>
<h2>1. 简介</h2>
<p>优惠券是商城中的核心重点，电商通过各种各种促销玩法，增加用户购买欲望，拉动消费。但促销玩法还是挺复杂的</p>
<h2>2. 相关表结构</h2>
<h3>2.1 优惠券表</h3>
<p>用于存储优惠券信息，需要注意的是优惠券的使用类型：0-&gt;全场通用；1-&gt;指定分类；2-&gt;指定商品，不同使用类型的优惠券使用范围不一样。</p>
<div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">create</span><span style="color:#C678DD;--shiki-dark:#C678DD"> table</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> sms_coupon</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   id                   </span><span style="color:#C678DD;--shiki-dark:#C678DD">bigint</span><span style="color:#C678DD;--shiki-dark:#C678DD"> not null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> auto_increment,</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">   type</span><span style="color:#C678DD;--shiki-dark:#C678DD">                 int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) comment </span><span style="color:#98C379;--shiki-dark:#98C379">'优惠卷类型；0-&gt;全场赠券；1-&gt;会员赠券；2-&gt;购物赠券；3-&gt;注册赠券'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">   name</span><span style="color:#C678DD;--shiki-dark:#C678DD">                 varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">100</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) comment </span><span style="color:#98C379;--shiki-dark:#98C379">'名称'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   platform             </span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) comment </span><span style="color:#98C379;--shiki-dark:#98C379">'使用平台：0-&gt;全部；1-&gt;移动；2-&gt;PC'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   count                </span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> comment </span><span style="color:#98C379;--shiki-dark:#98C379">'数量'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   amount               </span><span style="color:#C678DD;--shiki-dark:#C678DD">decimal</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">10</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) comment </span><span style="color:#98C379;--shiki-dark:#98C379">'金额'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   per_limit            </span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> comment </span><span style="color:#98C379;--shiki-dark:#98C379">'每人限领张数'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   min_point            </span><span style="color:#C678DD;--shiki-dark:#C678DD">decimal</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">10</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) comment </span><span style="color:#98C379;--shiki-dark:#98C379">'使用门槛；0表示无门槛'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   start_time           </span><span style="color:#C678DD;--shiki-dark:#C678DD">datetime</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> comment </span><span style="color:#98C379;--shiki-dark:#98C379">'开始使用时间'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   end_time             </span><span style="color:#C678DD;--shiki-dark:#C678DD">datetime</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> comment </span><span style="color:#98C379;--shiki-dark:#98C379">'结束使用时间'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   use_type             </span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) comment </span><span style="color:#98C379;--shiki-dark:#98C379">'使用类型：0-&gt;全场通用；1-&gt;指定分类；2-&gt;指定商品'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   note                 </span><span style="color:#C678DD;--shiki-dark:#C678DD">varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">200</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) comment </span><span style="color:#98C379;--shiki-dark:#98C379">'备注'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   publish_count        </span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> comment </span><span style="color:#98C379;--shiki-dark:#98C379">'发行数量'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   use_count            </span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> comment </span><span style="color:#98C379;--shiki-dark:#98C379">'已使用数量'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   receive_count        </span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> comment </span><span style="color:#98C379;--shiki-dark:#98C379">'领取数量'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   enable_time          </span><span style="color:#C678DD;--shiki-dark:#C678DD">datetime</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> comment </span><span style="color:#98C379;--shiki-dark:#98C379">'可以领取的日期'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   code                 </span><span style="color:#C678DD;--shiki-dark:#C678DD">varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">64</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) comment </span><span style="color:#98C379;--shiki-dark:#98C379">'优惠码'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   member_level         </span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) comment </span><span style="color:#98C379;--shiki-dark:#98C379">'可领取的会员类型：0-&gt;无限制'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">   primary key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (id)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>2.2 优惠券历史记录表</h3>
<p>用于存储会员领取及使用优惠券的记录，<strong>当会员领取到优惠券时，会产生一条优惠券的记录</strong>，需要注意的是它的使用状态：0-&gt;未使用；1-&gt;已使用；2-&gt;已过期。</p>
<div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">create</span><span style="color:#C678DD;--shiki-dark:#C678DD"> table</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> sms_coupon_history</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   id                   </span><span style="color:#C678DD;--shiki-dark:#C678DD">bigint</span><span style="color:#C678DD;--shiki-dark:#C678DD"> not null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> auto_increment,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   coupon_id            </span><span style="color:#C678DD;--shiki-dark:#C678DD">bigint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> comment </span><span style="color:#98C379;--shiki-dark:#98C379">'优惠券id'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   member_id            </span><span style="color:#C678DD;--shiki-dark:#C678DD">bigint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> comment </span><span style="color:#98C379;--shiki-dark:#98C379">'会员id'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   order_id             </span><span style="color:#C678DD;--shiki-dark:#C678DD">bigint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> comment </span><span style="color:#98C379;--shiki-dark:#98C379">'订单id'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   coupon_code          </span><span style="color:#C678DD;--shiki-dark:#C678DD">varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">64</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) comment </span><span style="color:#98C379;--shiki-dark:#98C379">'优惠券码'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   member_nickname      </span><span style="color:#C678DD;--shiki-dark:#C678DD">varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">64</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) comment </span><span style="color:#98C379;--shiki-dark:#98C379">'领取人昵称'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   get_type             </span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) comment </span><span style="color:#98C379;--shiki-dark:#98C379">'获取类型：0-&gt;后台赠送；1-&gt;主动获取'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   create_time          </span><span style="color:#C678DD;--shiki-dark:#C678DD">datetime</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> comment </span><span style="color:#98C379;--shiki-dark:#98C379">'创建时间'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   use_status           </span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) comment </span><span style="color:#98C379;--shiki-dark:#98C379">'使用状态：0-&gt;未使用；1-&gt;已使用；2-&gt;已过期'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   use_time             </span><span style="color:#C678DD;--shiki-dark:#C678DD">datetime</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> comment </span><span style="color:#98C379;--shiki-dark:#98C379">'使用时间'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   order_sn             </span><span style="color:#C678DD;--shiki-dark:#C678DD">varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">100</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) comment </span><span style="color:#98C379;--shiki-dark:#98C379">'订单号码'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">   primary key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (id)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>2.3 优惠券和商品的关系表</h3>
<p>用于存储优惠券与商品的关系，当优惠券的使用类型为指定商品时，优惠券与商品需要建立关系。</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">create</span><span style="color:#C678DD;--shiki-dark:#C678DD"> table</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> sms_coupon_product_relation</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   id                   </span><span style="color:#C678DD;--shiki-dark:#C678DD">bigint</span><span style="color:#C678DD;--shiki-dark:#C678DD"> not null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> auto_increment,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   coupon_id            </span><span style="color:#C678DD;--shiki-dark:#C678DD">bigint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> comment </span><span style="color:#98C379;--shiki-dark:#98C379">'优惠券id'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   product_id           </span><span style="color:#C678DD;--shiki-dark:#C678DD">bigint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> comment </span><span style="color:#98C379;--shiki-dark:#98C379">'商品id'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   product_name         </span><span style="color:#C678DD;--shiki-dark:#C678DD">varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">500</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) comment </span><span style="color:#98C379;--shiki-dark:#98C379">'商品名称'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   product_sn           </span><span style="color:#C678DD;--shiki-dark:#C678DD">varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">200</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) comment </span><span style="color:#98C379;--shiki-dark:#98C379">'商品条码'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">   primary key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (id)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span></code></pre>
</div><h3>2.4 优惠券和商品分类关系表</h3>
<p>用于存储优惠券与商品分类的关系，当优惠券的使用类型为指定分类时，优惠券与商品分类需要建立关系。</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">create</span><span style="color:#C678DD;--shiki-dark:#C678DD"> table</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> sms_coupon_product_category_relation</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   id                   </span><span style="color:#C678DD;--shiki-dark:#C678DD">bigint</span><span style="color:#C678DD;--shiki-dark:#C678DD"> not null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> auto_increment,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   coupon_id            </span><span style="color:#C678DD;--shiki-dark:#C678DD">bigint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> comment </span><span style="color:#98C379;--shiki-dark:#98C379">'优惠券id'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   product_category_id  </span><span style="color:#C678DD;--shiki-dark:#C678DD">bigint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> comment </span><span style="color:#98C379;--shiki-dark:#98C379">'商品分类id'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   product_category_name </span><span style="color:#C678DD;--shiki-dark:#C678DD">varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">200</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) comment </span><span style="color:#98C379;--shiki-dark:#98C379">'商品分类名称'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   parent_category_name </span><span style="color:#C678DD;--shiki-dark:#C678DD">varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">200</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) comment </span><span style="color:#98C379;--shiki-dark:#98C379">'父分类名称'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">   primary key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (id)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span></code></pre>
</div><h2>3. 管理端展现</h2>
<h3>3.1 优惠券列表</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301136360.png" alt="image-20220313114448436" tabindex="0" loading="lazy"><figcaption>image-20220313114448436</figcaption></figure>
<h3>3.2 编辑优惠券</h3>
<h4>3.2.1 全场通用</h4>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301136403.png" alt="image-20220313114555987" tabindex="0" loading="lazy"><figcaption>image-20220313114555987</figcaption></figure>
<h4>3.2.2 指定商品</h4>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301136427.png" alt="image-20220313114639223" tabindex="0" loading="lazy"><figcaption>image-20220313114639223</figcaption></figure>
<h4>3.2.3 指定分类</h4>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301136451.png" alt="image-20220313114713294" tabindex="0" loading="lazy"><figcaption>image-20220313114713294</figcaption></figure>
<h3>3.3 查看优惠券</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301136479.png" alt="image-20220313114754254" tabindex="0" loading="lazy"><figcaption>image-20220313114754254</figcaption></figure>
<h2>4. 移动端展现</h2>
<h3>4.1 我的优惠券</h3>
<h4>4.1.1 未使用</h4>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301136508.png" alt="image-20220313114856115" tabindex="0" loading="lazy"><figcaption>image-20220313114856115</figcaption></figure>
<h4>4.1.2 已使用</h4>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301136541.png" alt="image-20220313114918514" tabindex="0" loading="lazy"><figcaption>image-20220313114918514</figcaption></figure>
<h4>4.1.3 已过期</h4>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301136563.png" alt="image-20220313114942582" tabindex="0" loading="lazy"><figcaption>image-20220313114942582</figcaption></figure>
<h3>4.2 优惠券详情</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301136582.png" alt="image-20220313115009711" tabindex="0" loading="lazy"><figcaption>image-20220313115009711</figcaption></figure>
<h2>5. 代码逻辑</h2>
<h3>5.1 获取历史优惠券和优惠券列表区别</h3>
<p>获取历史优惠券是无论是否失效，都查询</p>
<h4>5.1.1 获取会员优惠券历史列表</h4>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> List</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">SmsCouponHistory</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> listHistory</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Integer</span><span style="color:#E06C75;--shiki-dark:#E06C75"> useStatus) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        UmsMember</span><span style="color:#E06C75;--shiki-dark:#E06C75"> currentMember </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> memberService</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getCurrentMember</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        SmsCouponHistoryExample</span><span style="color:#E06C75;--shiki-dark:#E06C75"> couponHistoryExample</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> SmsCouponHistoryExample</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        SmsCouponHistoryExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Criteria</span><span style="color:#E06C75;--shiki-dark:#E06C75"> criteria </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> couponHistoryExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">createCriteria</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        criteria</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">andMemberIdEqualTo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">currentMember</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75">(useStatus</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!=</span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#E06C75;--shiki-dark:#E06C75">){</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            criteria</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">andUseStatusEqualTo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(useStatus);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> couponHistoryMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">selectByExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(couponHistoryExample);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
</div><h4>5.1.2 获取会员优惠券列表</h4>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD"> SELECT</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">          c.*</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        FROM</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            sms_coupon_history ch</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                LEFT JOIN</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> sms_coupon c </span><span style="color:#C678DD;--shiki-dark:#C678DD">ON</span><span style="color:#D19A66;--shiki-dark:#D19A66"> ch</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">coupon_id</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> c</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">id</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        WHERE</span><span style="color:#D19A66;--shiki-dark:#D19A66"> ch</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">member_id</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> #{memberId}</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">        &lt;</span><span style="color:#C678DD;--shiki-dark:#C678DD">if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> test</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">"useStatus!=null and useStatus!=2"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            AND</span><span style="color:#D19A66;--shiki-dark:#D19A66"> ch</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">use_status</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> #{useStatus}</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            AND</span><span style="color:#C678DD;--shiki-dark:#C678DD"> NOW</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#D19A66;--shiki-dark:#D19A66"> c</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">start_time</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            AND</span><span style="color:#D19A66;--shiki-dark:#D19A66"> c</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">end_time</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> &gt;</span><span style="color:#C678DD;--shiki-dark:#C678DD"> NOW</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">        &lt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/</span><span style="color:#C678DD;--shiki-dark:#C678DD">if</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">        &lt;</span><span style="color:#C678DD;--shiki-dark:#C678DD">if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> test</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">"useStatus!=null and useStatus==2"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            AND</span><span style="color:#C678DD;--shiki-dark:#C678DD"> NOW</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#D19A66;--shiki-dark:#D19A66"> c</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">end_time</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">        &lt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/</span><span style="color:#C678DD;--shiki-dark:#C678DD">if</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span></code></pre>
</div><h3>5.2 修改优惠券</h3>
<p>更新优惠券，同时需要删除关联的商品和分类</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> int</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> update</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SmsCouponParam</span><span style="color:#E06C75;--shiki-dark:#E06C75"> couponParam) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        couponParam</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(id);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> count </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">couponMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">updateByPrimaryKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(couponParam);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //删除后插入优惠券和商品关系表</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">couponParam</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getUseType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">equals</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#E06C75;--shiki-dark:#E06C75">){</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            for</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SmsCouponProductRelation</span><span style="color:#E06C75;--shiki-dark:#E06C75"> productRelation</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">couponParam</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProductRelationList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#E06C75;--shiki-dark:#E06C75">){</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                productRelation</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setCouponId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">couponParam</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            }</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">            deleteProductRelation</span><span style="color:#E06C75;--shiki-dark:#E06C75">(id)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            productRelationDao</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">insertList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">couponParam</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProductRelationList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //删除后插入优惠券和商品分类关系表</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">couponParam</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getUseType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">equals</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#E06C75;--shiki-dark:#E06C75">){</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SmsCouponProductCategoryRelation</span><span style="color:#E06C75;--shiki-dark:#E06C75"> couponProductCategoryRelation </span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> couponParam</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProductCategoryRelationList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                couponProductCategoryRelation</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setCouponId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">couponParam</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            }</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">            deleteProductCategoryRelation</span><span style="color:#E06C75;--shiki-dark:#E06C75">(id)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            productCategoryRelationDao</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">insertList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">couponParam</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProductCategoryRelationList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> count</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>5.3 获取当前商品相关优惠券</h3>
<ol>
<li>从<strong>优惠券和商品关联表</strong>中查出优惠券id</li>
<li>从<strong>优惠券和分类关联表</strong>中查出优惠券id</li>
<li>将优惠券id in 出来</li>
</ol>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> List</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">SmsCoupon</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> listByProduct</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> productId) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> allCouponIds </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //获取指定商品优惠券</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        SmsCouponProductRelationExample</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cprExample </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> SmsCouponProductRelationExample</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        cprExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">createCriteria</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">andProductIdEqualTo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(productId);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SmsCouponProductRelation</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cprList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> couponProductRelationMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">selectByExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(cprExample);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">CollUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isNotEmpty</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(cprList)</span><span style="color:#E06C75;--shiki-dark:#E06C75">){</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> couponIds </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> cprList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">stream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(SmsCouponProductRelation</span><span style="color:#C678DD;--shiki-dark:#C678DD">::</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">getCouponId).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">collect</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Collectors</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">toList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            allCouponIds</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">addAll</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(couponIds);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //获取指定分类优惠券</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        PmsProduct</span><span style="color:#E06C75;--shiki-dark:#E06C75"> product </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> productMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">selectByPrimaryKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(productId);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        SmsCouponProductCategoryRelationExample</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cpcrExample </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> SmsCouponProductCategoryRelationExample</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        cpcrExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">createCriteria</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">andProductCategoryIdEqualTo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">product</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProductCategoryId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SmsCouponProductCategoryRelation</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cpcrList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> couponProductCategoryRelationMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">selectByExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(cpcrExample);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">CollUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isNotEmpty</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(cpcrList)</span><span style="color:#E06C75;--shiki-dark:#E06C75">){</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> couponIds </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> cpcrList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">stream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(SmsCouponProductCategoryRelation</span><span style="color:#C678DD;--shiki-dark:#C678DD">::</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">getCouponId).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">collect</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Collectors</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">toList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            allCouponIds</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">addAll</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(couponIds);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">CollUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isEmpty</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(allCouponIds)</span><span style="color:#E06C75;--shiki-dark:#E06C75">){</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            return</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //所有优惠券</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        SmsCouponExample</span><span style="color:#E06C75;--shiki-dark:#E06C75"> couponExample </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> SmsCouponExample</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        couponExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">createCriteria</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">andEndTimeGreaterThan</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Date</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">())</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">andStartTimeLessThan</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Date</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">())</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">andUseTypeEqualTo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        couponExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">or</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">couponExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">createCriteria</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">andEndTimeGreaterThan</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Date</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">())</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">andStartTimeLessThan</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Date</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">())</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">andUseTypeNotEqualTo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">andIdIn</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(allCouponIds));</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> couponMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">selectByExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(couponExample);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>5.4 生成确认单时的优惠券处理逻辑</h3>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//获取用户可用优惠券列表</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SmsCouponHistoryDetail</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> couponHistoryDetailList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> memberCouponService</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">listCart</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(cartPromotionItemList, </span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">result</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setCouponHistoryDetailList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(couponHistoryDetailList);</span></span></code></pre>
</div><p>针对选中的购物车商品计算</p>
<ol>
<li>获取改用户的所有优惠券</li>
<li>根据优惠券使用类型来判断优惠券是否可用
<ol>
<li>全场通用
<ol>
<li>判断截止时间优惠起点</li>
</ol>
</li>
<li>指定分类
<ol>
<li>计算指定分类的总价</li>
<li>判断截止时间和优惠起点</li>
</ol>
</li>
<li>指定商品
<ol>
<li>计算指定商品的总价</li>
<li>判断截止时间和优惠起点</li>
</ol>
</li>
</ol>
</li>
</ol>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> List</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">SmsCouponHistoryDetail</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> listCart</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">List</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">CartPromotionItem</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cartItemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Integer</span><span style="color:#E06C75;--shiki-dark:#E06C75"> type) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    UmsMember</span><span style="color:#E06C75;--shiki-dark:#E06C75"> currentMember </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> memberService</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getCurrentMember</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Date</span><span style="color:#E06C75;--shiki-dark:#E06C75"> now </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Date</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    //获取该用户所有优惠券</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SmsCouponHistoryDetail</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> allList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> couponHistoryDao</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getDetailList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">currentMember</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    //根据优惠券使用类型来判断优惠券是否可用</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SmsCouponHistoryDetail</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> enableList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SmsCouponHistoryDetail</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> disableList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SmsCouponHistoryDetail</span><span style="color:#E06C75;--shiki-dark:#E06C75"> couponHistoryDetail </span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> allList) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Integer</span><span style="color:#E06C75;--shiki-dark:#E06C75"> useType </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> couponHistoryDetail</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getCoupon</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getUseType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        BigDecimal</span><span style="color:#E06C75;--shiki-dark:#E06C75"> minPoint </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> couponHistoryDetail</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getCoupon</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getMinPoint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Date</span><span style="color:#E06C75;--shiki-dark:#E06C75"> endTime </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> couponHistoryDetail</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getCoupon</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getEndTime</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">useType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">equals</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#E06C75;--shiki-dark:#E06C75">){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            //0-&gt;全场通用</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            //判断是否满足优惠起点</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            //计算购物车商品的总价</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            BigDecimal</span><span style="color:#E06C75;--shiki-dark:#E06C75"> totalAmount </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> calcTotalAmount</span><span style="color:#E06C75;--shiki-dark:#E06C75">(cartItemList)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            if</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">now</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">before</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(endTime)</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&amp;&amp;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">totalAmount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">subtract</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(minPoint).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">intValue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;=</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#E06C75;--shiki-dark:#E06C75">){</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                enableList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(couponHistoryDetail);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            }</span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#E06C75;--shiki-dark:#E06C75">{</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                disableList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(couponHistoryDetail);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#C678DD;--shiki-dark:#C678DD"> if</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">useType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">equals</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#E06C75;--shiki-dark:#E06C75">){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            //1-&gt;指定分类</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            //计算指定分类商品的总价</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> productCategoryIds </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SmsCouponProductCategoryRelation</span><span style="color:#E06C75;--shiki-dark:#E06C75"> categoryRelation </span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> couponHistoryDetail</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getCategoryRelationList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                productCategoryIds</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">categoryRelation</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProductCategoryId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            }</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            BigDecimal</span><span style="color:#E06C75;--shiki-dark:#E06C75"> totalAmount </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> calcTotalAmountByproductCategoryId</span><span style="color:#E06C75;--shiki-dark:#E06C75">(cartItemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75">productCategoryIds)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            if</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">now</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">before</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(endTime)</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&amp;&amp;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">totalAmount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">intValue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&amp;&amp;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">totalAmount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">subtract</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(minPoint).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">intValue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;=</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#E06C75;--shiki-dark:#E06C75">){</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                enableList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(couponHistoryDetail);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            }</span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#E06C75;--shiki-dark:#E06C75">{</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                disableList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(couponHistoryDetail);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#C678DD;--shiki-dark:#C678DD"> if</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">useType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">equals</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#E06C75;--shiki-dark:#E06C75">){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            //2-&gt;指定商品</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            //计算指定商品的总价</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> productIds </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SmsCouponProductRelation</span><span style="color:#E06C75;--shiki-dark:#E06C75"> productRelation </span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> couponHistoryDetail</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProductRelationList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                productIds</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">productRelation</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProductId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            }</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            BigDecimal</span><span style="color:#E06C75;--shiki-dark:#E06C75"> totalAmount </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> calcTotalAmountByProductId</span><span style="color:#E06C75;--shiki-dark:#E06C75">(cartItemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75">productIds)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            if</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">now</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">before</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(endTime)</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&amp;&amp;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">totalAmount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">intValue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&amp;&amp;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">totalAmount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">subtract</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(minPoint).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">intValue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;=</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#E06C75;--shiki-dark:#E06C75">){</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                enableList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(couponHistoryDetail);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            }</span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#E06C75;--shiki-dark:#E06C75">{</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                disableList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(couponHistoryDetail);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">type</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">equals</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#E06C75;--shiki-dark:#E06C75">){</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> enableList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#E06C75;--shiki-dark:#E06C75">{</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> disableList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>5.5 获取优惠券历史详情</h3>
<div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">resultMap</span><span style="color:#D19A66;--shiki-dark:#D19A66"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"couponHistoryDetailMap"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> type</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"com.macro.mall.portal.domain.SmsCouponHistoryDetail"</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">           extends</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"com.macro.mall.mapper.SmsCouponHistoryMapper.BaseResultMap"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">association</span><span style="color:#D19A66;--shiki-dark:#D19A66"> property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"coupon"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> resultMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"com.macro.mall.mapper.SmsCouponMapper.BaseResultMap"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> columnPrefix</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"c_"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">association</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">collection</span><span style="color:#D19A66;--shiki-dark:#D19A66"> property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"productRelationList"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> columnPrefix</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"cpr_"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> resultMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"com.macro.mall.mapper.SmsCouponProductRelationMapper.BaseResultMap"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">collection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">collection</span><span style="color:#D19A66;--shiki-dark:#D19A66"> property</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"categoryRelationList"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> columnPrefix</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"cpcr_"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> resultMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"com.macro.mall.mapper.SmsCouponProductCategoryRelationMapper.BaseResultMap"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">collection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">resultMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">select</span><span style="color:#D19A66;--shiki-dark:#D19A66"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"getDetailList"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> resultMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"couponHistoryDetailMap"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    SELECT</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        ch.*,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        c.id c_id,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        c.name c_name,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        c.amount c_amount,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        c.min_point c_min_point,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        c.platform c_platform,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        c.start_time c_start_time,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        c.end_time c_end_time,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        c.note c_note,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        c.use_type c_use_type,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        c.type c_type,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        cpr.id cpr_id,cpr.product_id cpr_product_id,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        cpcr.id cpcr_id,cpcr.product_category_id cpcr_product_category_id</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    FROM</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        sms_coupon_history ch</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        LEFT JOIN sms_coupon c ON ch.coupon_id = c.id</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        LEFT JOIN sms_coupon_product_relation cpr ON cpr.coupon_id = c.id</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        LEFT JOIN sms_coupon_product_category_relation cpcr ON cpcr.coupon_id = c.id</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    WHERE ch.member_id = #{memberId}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    AND ch.use_status = 0</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>5.6 下单时选择优惠券后逻辑</h3>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//判断使用使用了优惠券</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">orderParam</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getCouponId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> ==</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            //不用优惠券</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OmsOrderItem</span><span style="color:#E06C75;--shiki-dark:#E06C75"> orderItem </span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> orderItemList) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                orderItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setCouponAmount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> BigDecimal</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            //使用优惠券</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            SmsCouponHistoryDetail</span><span style="color:#E06C75;--shiki-dark:#E06C75"> couponHistoryDetail </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getUseCoupon</span><span style="color:#E06C75;--shiki-dark:#E06C75">(cartPromotionItemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> orderParam</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getCouponId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (couponHistoryDetail </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                Asserts</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">fail</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"该优惠券不可用"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            //对下单商品的优惠券进行处理</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">            handleCouponAmount</span><span style="color:#E06C75;--shiki-dark:#E06C75">(orderItemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> couponHistoryDetail)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对优惠券优惠进行处理</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 对优惠券优惠进行处理</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> orderItemList</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">       order_item列表</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> couponHistoryDetail</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 可用优惠券详情</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> handleCouponAmount</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">List</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">OmsOrderItem</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> orderItemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SmsCouponHistoryDetail</span><span style="color:#E06C75;--shiki-dark:#E06C75"> couponHistoryDetail) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        SmsCoupon</span><span style="color:#E06C75;--shiki-dark:#E06C75"> coupon </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> couponHistoryDetail</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getCoupon</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">coupon</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getUseType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">equals</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            //全场通用</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">            calcPerCouponAmount</span><span style="color:#E06C75;--shiki-dark:#E06C75">(orderItemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> coupon)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#C678DD;--shiki-dark:#C678DD"> if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">coupon</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getUseType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">equals</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            //指定分类</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OmsOrderItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> couponOrderItemList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getCouponOrderItemByRelation</span><span style="color:#E06C75;--shiki-dark:#E06C75">(couponHistoryDetail</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> orderItemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">            calcPerCouponAmount</span><span style="color:#E06C75;--shiki-dark:#E06C75">(couponOrderItemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> coupon)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#C678DD;--shiki-dark:#C678DD"> if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">coupon</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getUseType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">equals</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            //指定商品</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OmsOrderItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> couponOrderItemList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getCouponOrderItemByRelation</span><span style="color:#E06C75;--shiki-dark:#E06C75">(couponHistoryDetail</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> orderItemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">            calcPerCouponAmount</span><span style="color:#E06C75;--shiki-dark:#E06C75">(couponOrderItemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> coupon)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对每个下单商品进行<strong>优惠券金额分摊的计算</strong></p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 对每个下单商品进行优惠券金额分摊的计算</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> orderItemList</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 可用优惠券的下单商品商品</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> calcPerCouponAmount</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">List</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">OmsOrderItem</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> orderItemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SmsCoupon</span><span style="color:#E06C75;--shiki-dark:#E06C75"> coupon) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        BigDecimal</span><span style="color:#E06C75;--shiki-dark:#E06C75"> totalAmount </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> calcTotalAmount</span><span style="color:#E06C75;--shiki-dark:#E06C75">(orderItemList)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OmsOrderItem</span><span style="color:#E06C75;--shiki-dark:#E06C75"> orderItem </span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> orderItemList) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            //(商品价格/可用商品总价)*优惠券面额</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            BigDecimal</span><span style="color:#E06C75;--shiki-dark:#E06C75"> couponAmount </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> orderItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProductPrice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">divide</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(totalAmount, </span><span style="color:#D19A66;--shiki-dark:#D19A66">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">RoundingMode</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">HALF_EVEN</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">multiply</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">coupon</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getAmount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            orderItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setCouponAmount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(couponAmount);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">   /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 计算总金额</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> BigDecimal</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> calcTotalAmount</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">List</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">OmsOrderItem</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> orderItemList) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        BigDecimal</span><span style="color:#E06C75;--shiki-dark:#E06C75"> totalAmount </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> BigDecimal</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"0"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OmsOrderItem</span><span style="color:#E06C75;--shiki-dark:#E06C75"> item </span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> orderItemList) {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            totalAmount </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> totalAmount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProductPrice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">multiply</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> BigDecimal</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProductQuantity</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">())));</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> totalAmount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2>6. 相关问题</h2>
<h3>6.1 什么时候需要获取优惠券相关信息</h3>
<ol>
<li>商品详情页中的领取</li>
<li>购物车下单时选择优惠券
<ol>
<li>计算结束时间和最低使用金额</li>
</ol>
</li>
</ol>
<h2>参考文章</h2>
<p><a href="http://www.macrozheng.com/#/database/mall_sms_02?id=%E8%90%A5%E9%94%80%E6%A8%A1%E5%9D%97%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A1%A8%E8%A7%A3%E6%9E%90%EF%BC%88%E4%BA%8C%EF%BC%89" target="_blank" rel="noopener noreferrer">营销模块数据库表解析（二）</a></p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301136360.png" type="image/png"/>
    </item>
    <item>
      <title>商城设计要点-库存超卖</title>
      <link>https://mrjackc.github.io/posts/Architect/mall/mall-key-points-Inventory.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/mall/mall-key-points-Inventory.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">商城设计要点-库存超卖</source>
      <description>商城设计要点-库存超卖 1. 简介 2. 库存扣减方式 2.1 下单减库存 即当买家下单后，在商品的总库存中减去买家购买数量。下单减库存是最简单的减库存方式，也是控制最精确的一种，下单时直接通过数据库的事务机制控制商品库存，这样一定不会出现超卖的情况。但是你要知道，有些人下完单可能并不会付款。 2.2 付款减库存 即买家下单后，并不立即减库存，而是等到...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 简介</h2>
<h2>2. 库存扣减方式</h2>
<h3>2.1 下单减库存</h3>
<p>即当买家下单后，在商品的总库存中减去买家购买数量。下单减库存是最简单的减库存方式，也是控制最精确的一种，下单时直接通过数据库的事务机制控制商品库存，这样一定不会出现超卖的情况。<strong>但是你要知道，有些人下完单可能并不会付款。</strong></p>
<h3>2.2 付款减库存</h3>
<p>即买家下单后，并不立即减库存，而是等到有用户付款后才真正减库存，否则库存一直保留给其他买家。但因为付款时才减库存，如果并发比较高，有可能出现<strong>买家下单后付不了款的情况，因为可能商品已经被其他人买走了。</strong></p>
<h3>2.3 预扣库存</h3>
<p>这种方式相对复杂一些，</p>
<ol>
<li>买家下单后，<strong>库存为其保留一定的时间（如 30 分钟），超过这个时间，库存将会自动释放</strong></li>
<li>释放后其他买家就可以继续购买</li>
<li>在买家付款前，系统会校验该订单的库存是否还有保留：
<ol>
<li>如果没有保留，则再次尝试预扣；</li>
<li>如果库存不足（也就是预扣失败）则不允许继续付款</li>
<li>如果预扣成功，则完成付款并实际地减去库存。</li>
</ol>
</li>
</ol>
<blockquote>
<p>Mall 商城采用的方式类似于这种预扣库存的，</p>
<ol>
<li>下单锁定库存</li>
<li>付款才真正减库存</li>
<li>超时付款时加库存</li>
</ol>
</blockquote>
<h2>3. 解决方案</h2>
<p>采用哪一种减库存方式更多是业务层面的考虑，减库存最核心的是大并发请求时保证数据库中的库存字段值不能为负数。</p>
<h3>3.1 方案一：行级锁校验库存</h3>
<p>通常在扣减库存的场景下使用行级锁，通过数据库引擎本身对记录加锁的控制，保证数据库的更新的安全性，并且通过<code>where</code>语句的条件，保证库存不会被减到 <code>0</code> 以下，也就是能够有效的控制超卖的场景。</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>update ... set amount = amount - 1 where id = $id and amount - 1 &gt;=0</span></span></code></pre>
</div><blockquote>
<ol>
<li>mall 商城项目未采用该方案</li>
<li>Mall 商城并没有校验库存数量</li>
</ol>
</blockquote>
<h3>3.2 **方案二：**数据库无符号整数</h3>
<p>设置数据库的字段数据为无符号整数，这样减后库存字段值<strong>小于零时 SQL 语句会报错</strong>。</p>
<blockquote>
<ol>
<li>mall 商城项目未采用该方案</li>
<li>数据库存储字段是int</li>
</ol>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>stock           int default 0  null comment '库存',</span></span>
<span class="line"><span>lock_stock      int default 0  null comment '锁定库存',</span></span></code></pre>
</div></blockquote>
<h2>参考文章</h2>
<p><a href="https://mp.weixin.qq.com/s/BgVr0jEBJwQI5UW_ele08A" target="_blank" rel="noopener noreferrer">聊聊电商系统中常见的9大坑！库存超卖、重复下单、物流单ABA</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>商城设计要点(八)-历史订单，归档</title>
      <link>https://mrjackc.github.io/posts/Architect/mall/mall-key-points-archive.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/mall/mall-key-points-archive.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">商城设计要点(八)-历史订单，归档</source>
      <description>商城设计要点(八)-历史订单，归档 1. 简介 1.1 冷热数据 根据二八定律，系统绝大部分的性能开销花在20%的业务。数据也不例外，从数据的使用频率来看，经常被业务访问的数据称为热点数据；反之，称之为冷数据。 1.2 订单数据划分 在了解的数据的冷、热特性后，便可以指导我们做一些有针对性的性能优化。这里面有业务层面的优化，也有技术层面的优化。比如：电...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 简介</h2>
<h3>1.1 冷热数据</h3>
<p>根据<strong>二八定律</strong>，系统绝大部分的性能开销花在20%的业务。数据也不例外，从数据的使用频率来看，经常被业务访问的数据称为热点数据；反之，称之为冷数据。</p>
<h3>1.2 订单数据划分</h3>
<p>在了解的数据的冷、热特性后，便可以指导我们做一些有针对性的性能优化。这里面有业务层面的优化，也有技术层面的优化。比如：电商网站，一般只能查询3个月内的订单，如果你想看看3个月前的订单，需要访问历史订单页面。</p>
<h2>2. 实现思路</h2>
<h3>2.1 冷热数据区分的标准是什么？</h3>
<p>冷热数据区分的标准是什么？要结合业务思考，可能要找产品同学一块讨论才能做决策，切记不要拍脑袋。以电商订单为例：</p>
<ul>
<li>方案一：以“下单时间”为标准，将3 个月前的订单数据当作冷数据，3 个月内的当作热数据。</li>
<li>方案二：根据“订单状态”字段来区分，已完结的订单当作冷数据，未完结的订单当作热数据。</li>
<li>方案三：组合方式，把下单时间 &gt; 3 个月且状态为“已完结”的订单标识为冷数据，其他的当作热数据。</li>
</ul>
<h3>2.2 如何触发冷热数据的分离</h3>
<ul>
<li>方案一：直接修改业务代码，每次业务请求触发冷热数据判断，根据结果路由到对应的冷数据表或热数据表。缺点：如果判断标准是 <code>时间维度</code>，数据过期了无法主动感知。</li>
<li>方案二：如果觉得修改业务代码，耦合性高，不易于后期维护。可以通过监听数据库变更日志 binlog 方式来触发</li>
<li>方案三：<strong>常用的手段是跑定时任务，一般是选择凌晨系统压力小的时候，通过跑批任务，将满足条件的冷数据迁移到其他存储介质。在途业务表中只留下来少量的热点数据。</strong></li>
</ul>
<h2>3. 如何实现冷热数据分离</h2>
<p>过程大概分为三步：</p>
<ul>
<li>判断数据是冷、还是热</li>
<li>将冷数据插入冷数据表中</li>
<li>然后，从原来的热库中删除迁移的数据</li>
</ul>
<h2>4. 如何使用冷热数据</h2>
<ul>
<li>方案一：界面设计时会有选项区分，如上面举例的电商订单</li>
<li>方案二：直接在业务代码里区分。</li>
</ul>
<h2>参考文章</h2>
<p><a href="https://mp.weixin.qq.com/s/BgVr0jEBJwQI5UW_ele08A" target="_blank" rel="noopener noreferrer">聊聊电商系统中常见的9大坑！库存超卖、重复下单、物流单ABA</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>商城设计要点(六)-账户余额更新，保证事务</title>
      <link>https://mrjackc.github.io/posts/Architect/mall/mall-key-points-assurance-affairs.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/mall/mall-key-points-assurance-affairs.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">商城设计要点(六)-账户余额更新，保证事务</source>
      <description>商城设计要点(六)-账户余额更新，保证事务 1. 简介 用户支付，我们要从买家账户减掉一定金额，再往卖家增加一定金额，为了保证数据的完整性、可追溯性，变更余额时，我们通常会同时插入一条记录流水。 账户流水核心字段：流水ID、金额、交易双方账户、交易时间戳、订单号、 注意：账户流水只能新增，不能修改和删除。流水号必须是自增的。 后续，系统对账时，我们只需...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 简介</h2>
<p>用户支付，我们要从买家账户减掉一定金额，再往卖家增加一定金额，为了保证数据的<code>完整性</code>、<code>可追溯性</code>，变更余额时，我们通常会同时插入一条<code>记录流水</code>。</p>
<p><strong>账户流水核心字段</strong>：流水ID、金额、交易双方账户、交易时间戳、订单号、</p>
<blockquote>
<p>注意：账户流水只能新增，不能修改和删除。流水号必须是自增的。</p>
</blockquote>
<p>后续，系统对账时，我们只需要对交易流水明细数据做累计即可，如果出现和余额不一致情况，一般以交易流水为准来修复余额数据。</p>
<p><code>更新余额</code>、<code>记录流水</code> 虽属于两个操作，但是要保证要么都成功，要么都失败。要做到事务。</p>
<h2>2. 解决</h2>
<p>数据库的事务隔离级别有：<code>读未提交（RU）</code>、<code>读已提交（RC）</code>、<code>可重复读（RR）</code>、<code>串行化（Serializable）</code></p>
<p>常用的隔离级别是 RC 和 RR ，因为这两种隔离级别都可以避免脏读。</p>
<ul>
<li><strong><a href="https://mp.weixin.qq.com/s?__biz=Mzg2NzYyNjQzNg==&amp;mid=2247488721&amp;idx=1&amp;sn=28bbdd6818da9b6afeda46319e060fb3&amp;scene=21#wechat_redirect" target="_blank" rel="noopener noreferrer">跑了4个实验，实战讲解 MySQL的行锁、间隙锁...</a></strong></li>
<li><strong><a href="https://mp.weixin.qq.com/s?__biz=Mzg2NzYyNjQzNg==&amp;mid=2247486613&amp;idx=1&amp;sn=1ce63f19e077d8230799bc0e4c41b04f&amp;scene=21#wechat_redirect" target="_blank" rel="noopener noreferrer">InnoDB解决幻读的方案 -- LBCC&amp;MVCC</a></strong></li>
</ul>
<p>当然，如果涉及多个微服务调用，会用到<strong>分布式事务</strong></p>
<p>分布式事务，细想下也很容易理解，就是将<code>一个大事务</code>拆分为多个<code>本地事务</code>，本地事务依然借助于数据库自身事务来解决，难点在于解决这个分布式一致性问题，借助<strong>重试</strong>机制，保证最终一致是我们常用的方案</p>
<h2>参考文章</h2>
<p><a href="https://mp.weixin.qq.com/s/BgVr0jEBJwQI5UW_ele08A" target="_blank" rel="noopener noreferrer">聊聊电商系统中常见的9大坑！库存超卖、重复下单、物流单ABA</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>商城设计要点(三)-购物车，混合存储</title>
      <link>https://mrjackc.github.io/posts/Architect/mall/mall-key-points-cart-hybrid.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/mall/mall-key-points-cart-hybrid.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">商城设计要点(三)-购物车，混合存储</source>
      <description>商城设计要点(三)-购物车，混合存储 1. 简介 购物车是电商系统的标配功能，暂存用户想要购买的商品。分为添加商品、列表查看、结算下单三个动作。 技术设计并不是特别复杂，存储的信息也相对有限（用户id、商品id、sku_id、数量、添加时间）。这里特别拿出来单讲主要是用户体验层面要注意几个问题： 1.1 未登录时添加商品 添加购物车时，后端校验用户未登...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 简介</h2>
<p>购物车是电商系统的标配功能，暂存用户想要购买的商品。分为添加商品、列表查看、结算下单三个动作。</p>
<p>技术设计并不是特别复杂，存储的信息也相对有限（用户id、商品id、sku_id、数量、添加时间）。这里特别拿出来单讲主要是用户体验层面要注意几个问题：</p>
<h3>1.1 未登录时添加商品</h3>
<p>添加购物车时，后端校验用户未登录，常规思路，引导用户跳转登录页，待登录成功后，再添加购物车。多了一步操作，给用户一种强迫的感觉，体验会比较差。有没有更好的方式？</p>
<p>如果细心体验京东、淘宝等大平台，你会发现即使未登录态也可以添加购物车，这到底是怎么实现的？</p>
<h2>2. 解决</h2>
<p>细细琢磨其实原理并不复杂，服务端这边在用户登录态校验时，做了分支路由</p>
<ol>
<li>
<p>当用户未登录时，会创建一个临时<code>Token</code>，作为用户的唯一标识，购物车数据挂载在该<code>Token</code>下</p>
</li>
<li>
<p>为了避免购物车数据相互影响以及设计的复杂度，这里会有一个临时购物车表。</p>
<p>当然，临时购物车表的数据量并不会太大，why？用户不会一直闲着添加购物车玩</p>
</li>
<li>
<p>当用户登录后，查看自己的购物车，服务端会从请求的cookie里<strong>查找购物车<code>Token</code>标识</strong>，并<strong>查询临时购物车表是否有数据，然后合并到正式购物车表里</strong>。</p>
</li>
</ol>
<blockquote>
<ol>
<li>mall 商城项目未采用该方案</li>
<li>Mall 购物车一定要登录才能使用</li>
</ol>
</blockquote>
<h2>3. 特别说明</h2>
<p>临时购物车是不是一定要在服务端存储？未必。</p>
<p>有架构师倾向前置存储，将数据存储在浏览器或者<code>APP LocalStorage</code>，这部分数据毕竟不是共享的，但是不太好的增加了设计的复杂度。</p>
<ul>
<li>客户端需要借助本地数据索引，远程请求查完整信息</li>
<li>如果是登录态，还要增加数据合并逻辑</li>
</ul>
<p>考虑到这两部分数据只是用户标识的差异性，所以作者还是建议统一存到服务端，日后即使业务逻辑变更，只需要改一处就可以了，毕竟自运营系统，良好的可维护性也需要我们非常关注的。</p>
<h2>参考文章</h2>
<p><a href="https://mp.weixin.qq.com/s/BgVr0jEBJwQI5UW_ele08A" target="_blank" rel="noopener noreferrer">聊聊电商系统中常见的9大坑！库存超卖、重复下单、物流单ABA</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>商城设计要点(七)-MySQL读写分离带来的数据不一致问题</title>
      <link>https://mrjackc.github.io/posts/Architect/mall/mall-key-points-data-inconsistent.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/mall/mall-key-points-data-inconsistent.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">商城设计要点(七)-MySQL读写分离带来的数据不一致问题</source>
      <description>商城设计要点(七)-MySQL读写分离带来的数据不一致问题 1. 简介 互联网业务大部分都是 读多写少，为了提升数据库集群的吞吐性能，我们通常会采用 主从架构、读写分离 image-20220326211746699image-20220326211746699 部署一个主库实例，客户端请求所有写操作全部写到主库，然后借助 MySQL 自带的 主从同步...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 简介</h2>
<p>互联网业务大部分都是 <code>读多写少</code>，为了提升数据库集群的吞吐性能，我们通常会采用 <code>主从架构</code>、<code>读写分离</code></p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301141112.png" alt="image-20220326211746699" tabindex="0" loading="lazy"><figcaption>image-20220326211746699</figcaption></figure>
<p>部署一个主库实例，客户端请求<code>所有写操作</code>全部写到主库，然后借助 MySQL 自带的 <code>主从同步</code> 功能，做一些简单配置，可以近乎实时的将主库的数据同步给 <code>多个从库实例</code>，主从延迟非常小，一般<strong>不超过 1 毫秒</strong>。</p>
<p>客户端请求的<code>所有读操作</code>全部打到 <code>从库</code>，借助多实例集群提升<code>读请求</code>的整体处理能力。</p>
<p>这个方案看似天衣无缝，但实际有个 <strong>副作用</strong></p>
<p>主从同步虽然近乎实时，但还是有个 <code>时间差</code> ，主库数据刚更新完，但数据还没来得及同步到从库，后续<code>读请求</code>直接访问了从库，看到的还是旧数据，影响用户体验。</p>
<p>任何事情都不是完美的，从主同步也是一样，没有完美的解决方案，我们要找到其中的平衡取舍点。</p>
<p>我们以电商为例，看看如何从 <code>产品层面</code> 来化解这个问题</p>
<h2>2. 复现场景</h2>
<ol>
<li>在下单确认页面，点击购买按钮，进入了支付页面</li>
</ol>
<p>​	<img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301141155.png" alt="image-20220326212046726" loading="lazy"></p>
<ol start="2">
<li>输入支付宝支付密码，进入<strong>支付成功页面</strong>，页面有查看订单详情的入口。</li>
</ol>
<p>​	<img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301141180.png" alt="image-20220326212106205" loading="lazy"></p>
<ol start="3">
<li>
<p>点击 <code>查看交易详情</code> ，才跳到真正的 订单详情页，可以查看订单的支付状态（订单数据取自从库）</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301141202.png" alt="image-20220326212128598" tabindex="0" loading="lazy"><figcaption>image-20220326212128598</figcaption></figure>
</li>
</ol>
<h2>3. 方案解析</h2>
<p>我们在支付成功后，并没有立即跳到 <code>订单详情页</code>，而是增加了一个 无关紧要的 <code>中间页（支付成功页）</code>，一是告诉你支付的结果是成功的，钱没丢，不要担心；另外也可以增加一些推荐商品，引流提升网站的GMV。最重要的，增加了一个缓冲期，为 <code>订单的主从库数据同步</code> 争取了更多的时间。</p>
<p>可谓一举多得，其他互联网业务也是类似道理。</p>
<h2>参考文章</h2>
<p><a href="https://mp.weixin.qq.com/s/BgVr0jEBJwQI5UW_ele08A" target="_blank" rel="noopener noreferrer">聊聊电商系统中常见的9大坑！库存超卖、重复下单、物流单ABA</a></p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301141112.png" type="image/png"/>
    </item>
    <item>
      <title>商城设计要点(九)-订单分库分表，多维度查询</title>
      <link>https://mrjackc.github.io/posts/Architect/mall/mall-key-points-multi-query.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/mall/mall-key-points-multi-query.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">商城设计要点(九)-订单分库分表，多维度查询</source>
      <description>商城设计要点(九)-订单分库分表，多维度查询 1. 简介 如果电商网站的订单数过多，我们一般会想到 分库分表 解决策略。没问题，这个方向是对的。 但是查询维度很多 1、买家，查询 我的订单 列表，需要根据 buyer_id 来查询 2、查看订单详情，需要根据 order_id 来查询 3、卖家，查询 我的销售 列表，需要根据 seller_id 来查询...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 简介</h2>
<p>如果电商网站的订单数过多，我们一般会想到 <code>分库分表</code> 解决策略。没问题，这个方向是对的。</p>
<p><strong>但是查询维度很多</strong></p>
<p>1、买家，查询 <code>我的订单</code> 列表，需要根据 <code>buyer_id</code> 来查询</p>
<p>2、查看订单详情，需要根据 <code>order_id</code> 来查询</p>
<p>3、卖家，查询 <code>我的销售</code> 列表，需要根据 <code>seller_id</code> 来查询</p>
<p>而订单分表只有一个分表键，如何满足多维度 SQL 操作呢？</p>
<h2>2. 解决方案</h2>
<p>而订单分表只有一个分表键，如何满足多维度 SQL 操作呢？</p>
<p>我们一般是基于买家维度来设计，下图是 <code>淘宝</code> 的订单列表</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301141009.png" alt="image-20220326213429736" tabindex="0" loading="lazy"><figcaption>image-20220326213429736</figcaption></figure>
<p>一个订单号 19 位，我们会发现同一个用户不同订单的最后 6 位都是一样的，没错，那是用户id的后6位。</p>
<p>这样，上文中  <code>场景1</code>、<code>场景2</code> 的查询可以共性抽取， 采用 <code>buyer_id</code> 或 <code>order_id</code> 的 <code>后六位</code> 作为分表键，对 <code>1 000 000</code> 取模，得到买家维度的订单分表的编号。</p>
<p>至于 <code>场景3</code> 卖家维度的订单查询，我们可以采用数据异构方式，按 <code>seller_id</code> 维度另外存储一份数据，专门供卖家使用。</p>
<h2>参考文章</h2>
<p><a href="https://mp.weixin.qq.com/s/BgVr0jEBJwQI5UW_ele08A" target="_blank" rel="noopener noreferrer">聊聊电商系统中常见的9大坑！库存超卖、重复下单、物流单ABA</a></p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301141009.png" type="image/png"/>
    </item>
    <item>
      <title>商城设计要点(一)-避免重复下单</title>
      <link>https://mrjackc.github.io/posts/Architect/mall/mall-key-points-repeat-order.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/mall/mall-key-points-repeat-order.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">商城设计要点(一)-避免重复下单</source>
      <description>商城设计要点(一)-避免重复下单 1. 简介 用户快速点了两次 “提交订单” 按钮，浏览器会向后端发送两条创建订单的请求，最终会创建两条一模一样的订单。 2. 解决方案 解决方案就是采用幂等机制，多次请求和一次请求产生的效果是一样的。 2.1 方案一：创建订单页面，预生成订单ID 利用数据库自身特性 “主键唯一约束”，在插入订单记录时，带上主键值，如果...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 简介</h2>
<p>用户快速点了两次 “提交订单”  按钮，浏览器会向后端发送两条创建订单的请求，最终会创建两条一模一样的订单。</p>
<h2>2. 解决方案</h2>
<p>解决方案就是采用<strong>幂等机制</strong>，多次请求和一次请求产生的效果是一样的。</p>
<h3>2.1 方案一：创建订单页面，预生成订单ID</h3>
<p>利用数据库自身特性 “主键唯一约束”，在插入订单记录时，带上主键值，如果订单重复，记录插入会失败。</p>
<p>操作过程：</p>
<ul>
<li>引入一个服务，用于生成一个“全局唯一的订单号”</li>
<li>进入<strong>创建订单页面时</strong>，前端请求该服务，<strong>预生成订单ID</strong></li>
<li>提交订单时，请求参数除了业务参数外，还要带上这个预生成订单ID</li>
</ul>
<blockquote>
<ol>
<li>mall 商城项目未采用该方案</li>
<li>订单id是在提交订单时sql生成</li>
</ol>
</blockquote>
<h3>2.2 **方案二：**前端控制</h3>
<p>前端通过js脚本控制，无法<strong>解决用户刷新提交的请求</strong>。另外<strong>也无法解决恶意提交。</strong></p>
<p>不建议采用该方案，如果想用，也只是作为一个<strong>补充方案</strong>。</p>
<blockquote>
<p>mall商城本身也没有商城前端</p>
</blockquote>
<h3>2.3 **方案三：**创建订单页面，预生成token</h3>
<p>前后约定附加参数校验。</p>
<p>当用户点击购买按钮时，渲染下单页面，展示商品、收货地址、运费、价格等信息，<strong>同时页面会埋上<code>Token </code>信息</strong>，用户提交订单时，后端业务逻辑会校验token，有且匹配才认为是合理请求。</p>
<p>注意：同一个 <code>Token</code> 只能用一次，用完后立马失效掉。</p>
<p>注意：同一个 <code>Token</code> 只能用一次，用完后立马失效掉。</p>
<div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">form</span><span style="color:#D19A66;font-style:italic;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> action</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">"/add-name-v2"</span><span style="color:#D19A66;font-style:italic;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> method</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">"post"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    {</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">%</span><span style="color:#E06C75;--shiki-dark:#E06C75"> csrf_token</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> %</span><span style="color:#C678DD;--shiki-dark:#C678DD">}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">input</span><span style="color:#D19A66;font-style:italic;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">"text"</span><span style="color:#D19A66;font-style:italic;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> name</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">"name"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">input</span><span style="color:#D19A66;font-style:italic;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">"submit"</span><span style="color:#D19A66;font-style:italic;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">"提交"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">form</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
</div><blockquote>
<ol>
<li>
<p>mall 商城项目未采用该方案</p>
</li>
<li>
<p>此方案与方案一，异曲同工之妙，一个是数据库id，一个是临时token</p>
</li>
</ol>
</blockquote>
<h2>参考文章</h2>
<p><a href="https://mp.weixin.qq.com/s/BgVr0jEBJwQI5UW_ele08A" target="_blank" rel="noopener noreferrer">聊聊电商系统中常见的9大坑！库存超卖、重复下单、物流单ABA</a></p>
<p>关于幂等的处理，更多解决方案可以看这两篇文章</p>
<ul>
<li><strong><a href="https://mp.weixin.qq.com/s?__biz=Mzg2NzYyNjQzNg==&amp;mid=2247485064&amp;idx=1&amp;sn=0596c89178b7c67c92bfaaf4e44a3b1d&amp;scene=21#wechat_redirect" target="_blank" rel="noopener noreferrer">高并发下如何保证接口的幂等性？</a></strong></li>
<li><strong><a href="https://mp.weixin.qq.com/s?__biz=Mzg2NzYyNjQzNg==&amp;mid=2247489368&amp;idx=1&amp;sn=428dc07c9e788d217d2e357933cb8bc4&amp;scene=21#wechat_redirect" target="_blank" rel="noopener noreferrer">幂等设计，都有哪些技术方案？</a></strong></li>
</ul>
<h3></h3>
<h3></h3>
]]></content:encoded>
    </item>
    <item>
      <title>商城设计要点(二)-订单快照，减少存储成本</title>
      <link>https://mrjackc.github.io/posts/Architect/mall/mall-key-points-storage-cost.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/mall/mall-key-points-storage-cost.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">商城设计要点(二)-订单快照，减少存储成本</source>
      <description>商城设计要点(二)-订单快照，减少存储成本 1. 简介 1.1 什么是订单快照 商品信息是可以修改的，当用户下单后，为了更好解决后面可能存在的买卖纠纷，创建订单时会同步保存一份商品详情信息，称之为订单快照。 1.2 背景 同一件商品，会有很多用户会购买，如果热销商品，短时间就会有上万的订单。如果每个订单都创建一份快照，存储成本太高。另外商品信息虽然支持...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 简介</h2>
<h3>1.1 什么是订单快照</h3>
<p>商品信息是可以修改的，当用户下单后，<strong>为了更好解决后面可能存在的买卖纠纷</strong>，创建订单时会同步保存一份商品详情信息，称之为<strong>订单快照</strong>。</p>
<h3>1.2 背景</h3>
<p>同一件商品，会有很多用户会购买，如果热销商品，短时间就会有上万的订单。如果每个订单都创建一份快照，<strong>存储成本太高</strong>。另外商品信息虽然支持修改，但毕竟是一个<strong>低频动作</strong>。我们可以理解成，大部分订单的商品快照信息都是一样的，除非下单时用户修改过。</p>
<h2>2. 解决方案：摘要比对的方法‍</h2>
<p><strong>如何实时识别修改动作是解决快照成本的关键所在</strong>。我们采用<strong>摘要比对的方法‍</strong>。</p>
<ol>
<li>创建订单时，先检查商品信息摘要是否已经存在，</li>
<li>如果不存在，会创建快照记录。</li>
<li>订单<strong>明细会关联商品的快照主键</strong>。</li>
</ol>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> DigestTest</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> encodeStr</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> data</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> encodeS</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> DigestUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">md5Hex</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(data);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(encodeS);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[] </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> data</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "订单快照信息......"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">        encodeStr</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(data);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
</div><p>由于订单快照属于非核心操作，即使失败也不应该影响用户正常购买流程，所以通常采用异步流程执行。</p>
<blockquote>
<ol>
<li>mall 商城项目未采用该方案</li>
<li>mall 商城下单时直接存了商品名，下单时价格等基本信息，并没有存快照信息</li>
</ol>
</blockquote>
<h2>参考文章</h2>
<p><a href="https://mp.weixin.qq.com/s/BgVr0jEBJwQI5UW_ele08A" target="_blank" rel="noopener noreferrer">聊聊电商系统中常见的9大坑！库存超卖、重复下单、物流单ABA</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>mall商城下单流程</title>
      <link>https://mrjackc.github.io/posts/Architect/mall/mall-order-placing-process.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/mall/mall-order-placing-process.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">mall商城下单流程</source>
      <description>mall商城下单流程 该篇文章主要参考mall官方文档，并结合自己的使用感受做的一些笔记 1. 流程 1.1 将商品添加进购物车 点击直接购买的商品，也需要将商品加入购物车，然后从购物车结算（只是程序帮我们做了） 添加进购物车时，需要将商品加入购物车时价格、商品主图，名称等基本信息就记录下来，以免商品修改导致的前后不一致问题 1.2 根据购物车信息生成...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<blockquote>
<p>该篇文章主要参考<a href="http://www.macrozheng.com/#/README" target="_blank" rel="noopener noreferrer">mall官方文档</a>，并结合自己的使用感受做的一些笔记</p>
</blockquote>
<h2>1. 流程</h2>
<h3>1.1 将商品添加进购物车</h3>
<ol>
<li>点击<strong>直接购买的商品</strong>，<strong>也需要将商品加入购物车</strong>，然后从购物车结算（只是程序帮我们做了）</li>
<li>添加进购物车时，需要将商品加入购物车时价格、商品主图，名称等基本信息就记录下来，以免商品修改导致的前后不一致问题</li>
</ol>
<h3>1.2 根据购物车信息生成确认单</h3>
<ol>
<li>根据购物车id列表生确认单</li>
<li>确认单包含
<ol>
<li>促销信息</li>
<li>用户收货地址</li>
<li>可用的优惠券信息</li>
<li>积分和积分使用规则</li>
<li>计算金额
<ol>
<li>总金额</li>
<li>应付金额</li>
<li>优惠金额</li>
</ol>
</li>
</ol>
</li>
</ol>
<h3>1.3 生成订单</h3>
<p>选择确认单中的优惠券，收货地址</p>
<ol>
<li>需要的参数
<ol>
<li>选中的购物车商品id列表</li>
<li>收货地址</li>
<li>优惠券id</li>
<li>支付方式</li>
</ol>
</li>
<li>流程
<ol>
<li>获取购物车及优惠信息
<ol>
<li>根据商品id列表获取商品信息
<ol>
<li>获取用户id的获取购物车中的商品信息
<ol>
<li>**为什么不直接通过购物车id去查？**因为担心用户在其他客户端已删除商品</li>
</ol>
</li>
<li>判断是否包含购物车id，有则添加</li>
</ol>
</li>
<li><strong>计算优惠后的商品信息</strong>
<ol>
<li>先根据productId对CartItem进行分组，以spu为单位进行计算优惠</li>
<li>查询所有商品的优惠相关信息</li>
<li><strong>根据商品促销类型计算商品促销优惠价格（计算促销还比较麻烦）</strong>
<ol>
<li>促销类型：0-&gt;没有促销使用原价;1-&gt;使用促销价；2-&gt;使用会员价；3-&gt;使用阶梯价格；4-&gt;使用满减价格；5-&gt;限时购</li>
</ol>
</li>
<li>计算库存
<ol>
<li>获取sku的库存信息-锁定的库存信息</li>
</ol>
</li>
</ol>
</li>
</ol>
</li>
<li>生成下单商品信息</li>
<li>判断购物车中商品是否都有库存</li>
<li>判断使用使用了优惠券</li>
<li>判断是否使用积分</li>
<li>计算order_item的实付金额</li>
<li>进行库存锁定</li>
<li>根据商品合计、运费、活动优惠、优惠券、积分计算应付金额</li>
<li>收货人信息：姓名、电话、邮编、地址</li>
<li>计算赠送积分、成长值</li>
<li>设置自动收货天数</li>
<li><strong>插入order表和order_item表</strong></li>
<li>如使用优惠券更新优惠券使用状态</li>
<li>如使用积分需要扣除积分</li>
<li>删除购物车中的下单商品</li>
<li>发送延迟消息取消订单</li>
</ol>
</li>
</ol>
<h2>2. 疑问</h2>
<h3>2.1 什么时候锁的库存？</h3>
<p>​	在生成订单的时候，用户支付前。进行锁定</p>
]]></content:encoded>
    </item>
    <item>
      <title>mall中商品属性类型（类型=属性=规格+参数）设计</title>
      <link>https://mrjackc.github.io/posts/Architect/mall/mall-product-attribute.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/mall/mall-product-attribute.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">mall中商品属性类型（类型=属性=规格+参数）设计</source>
      <description>mall中商品属性类型（类型=属性=规格+参数）设计 1. 简介 商品类型即商品属性，主要是指商品的规格和参数， 规格：用于用户购买商品时选择 参数：用于标示商品属性及搜索时筛选。 2. 表设计 image-20220320091410960image-20220320091410960 2.1 商品属性分类表 2.2 商品属性表 type字段用于控制...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 简介</h2>
<p>商品类型即商品属性，主要是指商品的规格和参数，</p>
<ul>
<li>规格：用于用户购买商品时选择</li>
<li>参数：用于标示商品属性及搜索时筛选。</li>
</ul>
<h2>2. 表设计</h2>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301142392.png" alt="image-20220320091410960" tabindex="0" loading="lazy"><figcaption>image-20220320091410960</figcaption></figure>
<h3>2.1 商品属性分类表</h3>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">create</span><span style="color:#C678DD;--shiki-dark:#C678DD"> table</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> pms_product_attribute_category</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   id                   </span><span style="color:#C678DD;--shiki-dark:#C678DD">bigint</span><span style="color:#C678DD;--shiki-dark:#C678DD"> not null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> auto_increment,</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">   name</span><span style="color:#C678DD;--shiki-dark:#C678DD">                 varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">64</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) comment </span><span style="color:#98C379;--shiki-dark:#98C379">'名称'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   attribute_count      </span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> comment </span><span style="color:#98C379;--shiki-dark:#98C379">'属性数量'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   param_count          </span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> comment </span><span style="color:#98C379;--shiki-dark:#98C379">'参数数量'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">   primary key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (id)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span></code></pre>
</div><h3>2.2 商品属性表</h3>
<p>type字段用于控制其是规格还是参数</p>
<ul>
<li>type：属性的类型；0-&gt;规格；1-&gt;参数',</li>
</ul>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">create table pms_product_attribute</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">(</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">   id                   bigint not </span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#E06C75;--shiki-dark:#E06C75"> auto_increment</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">   product_attribute_category_id bigint comment </span><span style="color:#98C379;--shiki-dark:#98C379">'商品属性分类id'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">   name                 </span><span style="color:#61AFEF;--shiki-dark:#61AFEF">varchar</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">64</span><span style="color:#E06C75;--shiki-dark:#E06C75">) comment </span><span style="color:#98C379;--shiki-dark:#98C379">'名称'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">   select_type          </span><span style="color:#61AFEF;--shiki-dark:#61AFEF">int</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#E06C75;--shiki-dark:#E06C75">) comment </span><span style="color:#98C379;--shiki-dark:#98C379">'属性选择类型：0-&gt;唯一；1-&gt;单选；2-&gt;多选；对应属性和参数意义不同；'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">   input_type           </span><span style="color:#61AFEF;--shiki-dark:#61AFEF">int</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#E06C75;--shiki-dark:#E06C75">) comment </span><span style="color:#98C379;--shiki-dark:#98C379">'属性录入方式：0-&gt;手工录入；1-&gt;从列表中选取'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">   input_list           </span><span style="color:#61AFEF;--shiki-dark:#61AFEF">varchar</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">255</span><span style="color:#E06C75;--shiki-dark:#E06C75">) comment </span><span style="color:#98C379;--shiki-dark:#98C379">'可选值列表，以逗号隔开'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">   sort                 </span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> comment </span><span style="color:#98C379;--shiki-dark:#98C379">'排序字段：最高的可以单独上传图片'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">   filter_type          </span><span style="color:#61AFEF;--shiki-dark:#61AFEF">int</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#E06C75;--shiki-dark:#E06C75">) comment </span><span style="color:#98C379;--shiki-dark:#98C379">'分类筛选样式：1-&gt;普通；1-&gt;颜色'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">   search_type          </span><span style="color:#61AFEF;--shiki-dark:#61AFEF">int</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#E06C75;--shiki-dark:#E06C75">) comment </span><span style="color:#98C379;--shiki-dark:#98C379">'检索类型；0-&gt;不需要进行检索；1-&gt;关键字检索；2-&gt;范围检索'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">   related_status       </span><span style="color:#61AFEF;--shiki-dark:#61AFEF">int</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#E06C75;--shiki-dark:#E06C75">) comment </span><span style="color:#98C379;--shiki-dark:#98C379">'相同属性产品是否关联；0-&gt;不关联；1-&gt;关联'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">   hand_add_status      </span><span style="color:#61AFEF;--shiki-dark:#61AFEF">int</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#E06C75;--shiki-dark:#E06C75">) comment </span><span style="color:#98C379;--shiki-dark:#98C379">'是否支持手动新增；0-&gt;不支持；1-&gt;支持'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">   type                 </span><span style="color:#61AFEF;--shiki-dark:#61AFEF">int</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#E06C75;--shiki-dark:#E06C75">) comment </span><span style="color:#98C379;--shiki-dark:#98C379">'属性的类型；0-&gt;规格；1-&gt;参数'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">   primary </span><span style="color:#61AFEF;--shiki-dark:#61AFEF">key</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (id)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>2.3 商品属性值表</h3>
<p>如果对应的参数是规格且规格支持手动添加，那么该表用于存储手动新增的值；如果对应的商品属性是参数，那么该表用于存储参数的值。</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">create</span><span style="color:#C678DD;--shiki-dark:#C678DD"> table</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> pms_product_attribute_value</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   id                   </span><span style="color:#C678DD;--shiki-dark:#C678DD">bigint</span><span style="color:#C678DD;--shiki-dark:#C678DD"> not null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> auto_increment,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   product_id           </span><span style="color:#C678DD;--shiki-dark:#C678DD">bigint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> comment </span><span style="color:#98C379;--shiki-dark:#98C379">'商品id'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   product_attribute_id </span><span style="color:#C678DD;--shiki-dark:#C678DD">bigint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> comment </span><span style="color:#98C379;--shiki-dark:#98C379">'商品属性id'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">   value</span><span style="color:#C678DD;--shiki-dark:#C678DD">                varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">64</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) comment </span><span style="color:#98C379;--shiki-dark:#98C379">'手动添加规格或参数的值，参数单值，规格有多个时以逗号隔开'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">   primary key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (id)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span></code></pre>
</div><h3>2.4 商品分类和属性的关系表</h3>
<p>用于选中分类后搜索时生成筛选属性。</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">create</span><span style="color:#C678DD;--shiki-dark:#C678DD"> table</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> pms_product_category_attribute_relation</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   id                   </span><span style="color:#C678DD;--shiki-dark:#C678DD">bigint</span><span style="color:#C678DD;--shiki-dark:#C678DD"> not null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> auto_increment,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   product_category_id  </span><span style="color:#C678DD;--shiki-dark:#C678DD">bigint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> comment </span><span style="color:#98C379;--shiki-dark:#98C379">'商品分类id'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   product_attribute_id </span><span style="color:#C678DD;--shiki-dark:#C678DD">bigint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> comment </span><span style="color:#98C379;--shiki-dark:#98C379">'商品属性id'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">   primary key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (id)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span></code></pre>
</div><h2>3. 代码设计</h2>
<h3>3.1 新增商品属性</h3>
<p>新增商品属性以后需要更新商品属性分类数量</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> int</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> create</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PmsProductAttributeParam</span><span style="color:#E06C75;--shiki-dark:#E06C75"> pmsProductAttributeParam) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        PmsProductAttribute</span><span style="color:#E06C75;--shiki-dark:#E06C75"> pmsProductAttribute </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> PmsProductAttribute</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        BeanUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">copyProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(pmsProductAttributeParam, pmsProductAttribute);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> count </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> productAttributeMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">insertSelective</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(pmsProductAttribute);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //新增商品属性以后需要更新商品属性分类数量</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        PmsProductAttributeCategory</span><span style="color:#E06C75;--shiki-dark:#E06C75"> pmsProductAttributeCategory </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> productAttributeCategoryMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">selectByPrimaryKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">pmsProductAttribute</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProductAttributeCategoryId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">pmsProductAttribute</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#E06C75;--shiki-dark:#E06C75">){</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            pmsProductAttributeCategory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setAttributeCount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">pmsProductAttributeCategory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getAttributeCount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#C678DD;--shiki-dark:#C678DD"> if</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">pmsProductAttribute</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#E06C75;--shiki-dark:#E06C75">){</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            pmsProductAttributeCategory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setParamCount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">pmsProductAttributeCategory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getParamCount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        productAttributeCategoryMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">updateByPrimaryKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(pmsProductAttributeCategory);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> count</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2>4. 界面设计</h2>
<h3>4.1 管理端</h3>
<h4>4.1.1 商品属性分类列表</h4>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301142431.png" alt="image-20220320085212569" tabindex="0" loading="lazy"><figcaption>image-20220320085212569</figcaption></figure>
<h4>4.1.2 商品规格列表</h4>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301142453.png" alt="image-20220320085314213" tabindex="0" loading="lazy"><figcaption>image-20220320085314213</figcaption></figure>
<h4>4.1.3 商品参数列表</h4>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301142477.png" alt="image-20220320085349425" tabindex="0" loading="lazy"><figcaption>image-20220320085349425</figcaption></figure>
<h4>4.1.4 添加商品属性</h4>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301142504.png" alt="image-20220320085501748" tabindex="0" loading="lazy"><figcaption>image-20220320085501748</figcaption></figure>
<h4>4.1.5添加商品时，选中商品属性分类，就会显示该分类的属性，用于生成sku</h4>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301142534.png" alt="image-20220320085541469" tabindex="0" loading="lazy"><figcaption>image-20220320085541469</figcaption></figure>
<h4>4.1.6 添加商品时，选中商品属性分类，会显示该分类的参数用于录入</h4>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301142566.png" alt="image-20220320085637294" tabindex="0" loading="lazy"><figcaption>image-20220320085637294</figcaption></figure>
<h3>4.2 移动端</h3>
<h4>4.2.1 选择商品规格</h4>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301142594.png" alt="image-20220320085754333" tabindex="0" loading="lazy"><figcaption>image-20220320085754333</figcaption></figure>
<h4>4.2.2 查看商品参数</h4>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301142615.png" alt="image-20220320085836611" tabindex="0" loading="lazy"><figcaption>image-20220320085836611</figcaption></figure>
<h4>4.2.3 搜索商品时用于选择分类后的筛选</h4>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301142638.png" alt="image-20220320085906873" tabindex="0" loading="lazy"><figcaption>image-20220320085906873</figcaption></figure>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301142392.png" type="image/png"/>
    </item>
    <item>
      <title>mall中商品优惠方式(促销，会员价，阶梯价，满减)</title>
      <link>https://mrjackc.github.io/posts/Architect/mall/mall-product-offer.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/mall/mall-product-offer.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">mall中商品优惠方式(促销，会员价，阶梯价，满减)</source>
      <description>mall中商品优惠方式(促销，会员价，阶梯价，满减) 1. 简介 优惠方式包括(促销，会员价，阶梯价，满减)，优惠也是商城营销中重要的手段之一。 促销，会员价，阶梯价，满减 只能选一种作为促销方式 1.1 优惠和优惠券 优惠是在特定时间商品的属性，用户不需要选择优惠券即可享有优惠。而优惠券必须领取优惠券后使用 2. 数据库设计 2.1 商品阶梯价格表 ...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 简介</h2>
<p>优惠方式包括(促销，会员价，阶梯价，满减)，优惠也是商城营销中重要的手段之一。</p>
<p>促销，会员价，阶梯价，满减 只能选一种作为促销方式</p>
<h3>1.1 优惠和优惠券</h3>
<p>优惠是在特定时间商品的属性，用户不需要选择优惠券即可享有优惠。而优惠券必须领取优惠券后使用</p>
<h2>2. 数据库设计</h2>
<h3>2.1 商品阶梯价格表</h3>
<p>商品优惠相关表，购买同商品满足一定数量后，可以使用打折价格进行购买。如：买两件商品可以打八折。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">create table pms_product_ladder</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">(</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">   id                   bigint not </span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#E06C75;--shiki-dark:#E06C75"> auto_increment</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">   product_id           bigint comment </span><span style="color:#98C379;--shiki-dark:#98C379">'商品id'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">   count                </span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> comment </span><span style="color:#98C379;--shiki-dark:#98C379">'满足的商品数量'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">   discount             </span><span style="color:#61AFEF;--shiki-dark:#61AFEF">decimal</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">10</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#E06C75;--shiki-dark:#E06C75">) comment </span><span style="color:#98C379;--shiki-dark:#98C379">'折扣'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">   price                </span><span style="color:#61AFEF;--shiki-dark:#61AFEF">decimal</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">10</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#E06C75;--shiki-dark:#E06C75">) comment </span><span style="color:#98C379;--shiki-dark:#98C379">'折后价格'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">   primary </span><span style="color:#61AFEF;--shiki-dark:#61AFEF">key</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (id)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span></code></pre>
</div><h3>2.2 商品满减表</h3>
<p>商品优惠相关表，购买同商品满足一定金额后，可以减免一定金额。如：买满1000减100元。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">create table pms_product_full_reduction</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">(</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">   id                   bigint not </span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#E06C75;--shiki-dark:#E06C75"> auto_increment</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">   product_id           bigint comment </span><span style="color:#98C379;--shiki-dark:#98C379">'商品id'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">   full_price           </span><span style="color:#61AFEF;--shiki-dark:#61AFEF">decimal</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">10</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#E06C75;--shiki-dark:#E06C75">) comment </span><span style="color:#98C379;--shiki-dark:#98C379">'商品满足金额'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">   reduce_price         </span><span style="color:#61AFEF;--shiki-dark:#61AFEF">decimal</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">10</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#E06C75;--shiki-dark:#E06C75">) comment </span><span style="color:#98C379;--shiki-dark:#98C379">'商品减少金额'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">   primary </span><span style="color:#61AFEF;--shiki-dark:#61AFEF">key</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (id)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span></code></pre>
</div><h3>2.3 商品会员价格表</h3>
<p>根据不同会员等级，可以以不同的会员价格购买。此处设计有缺陷，可以做成不同会员等级可以减免多少元或者按多少折扣进行购买。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">create table pms_member_price</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">(</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">   id                   bigint not </span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#E06C75;--shiki-dark:#E06C75"> auto_increment</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">   product_id           bigint comment </span><span style="color:#98C379;--shiki-dark:#98C379">'商品id'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">   member_level_id      bigint comment </span><span style="color:#98C379;--shiki-dark:#98C379">'会员等级id'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">   member_price         </span><span style="color:#61AFEF;--shiki-dark:#61AFEF">decimal</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">10</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#E06C75;--shiki-dark:#E06C75">) comment </span><span style="color:#98C379;--shiki-dark:#98C379">'会员价格'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">   member_level_name    </span><span style="color:#61AFEF;--shiki-dark:#61AFEF">varchar</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">100</span><span style="color:#E06C75;--shiki-dark:#E06C75">) comment </span><span style="color:#98C379;--shiki-dark:#98C379">'会员等级名称'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">   primary </span><span style="color:#61AFEF;--shiki-dark:#61AFEF">key</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (id)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span></code></pre>
</div><h2>3. 代码设计</h2>
<h3>3.1 新增商品</h3>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> int</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> create</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PmsProductParam</span><span style="color:#E06C75;--shiki-dark:#E06C75"> productParam) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> count</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    //创建商品</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    PmsProduct</span><span style="color:#E06C75;--shiki-dark:#E06C75"> product </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75"> productParam</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    product</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    productMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">insertSelective</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(product);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    //根据促销类型设置价格：会员价格、阶梯价格、满减价格</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> productId </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> product</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    //会员价格</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">    relateAndInsertList</span><span style="color:#E06C75;--shiki-dark:#E06C75">(memberPriceDao</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> productParam</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getMemberPriceList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(),</span><span style="color:#E06C75;--shiki-dark:#E06C75"> productId)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    //阶梯价格</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">    relateAndInsertList</span><span style="color:#E06C75;--shiki-dark:#E06C75">(productLadderDao</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> productParam</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProductLadderList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(),</span><span style="color:#E06C75;--shiki-dark:#E06C75"> productId)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    //满减价格</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">    relateAndInsertList</span><span style="color:#E06C75;--shiki-dark:#E06C75">(productFullReductionDao</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> productParam</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProductFullReductionList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(),</span><span style="color:#E06C75;--shiki-dark:#E06C75"> productId)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> count</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>建立关联关系表（这个方法抽取得还不错）</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 建立和插入关系表操作</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> dao</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">       可以操作的dao</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> dataList</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  要插入的数据</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> productId</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 建立关系的id</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> relateAndInsertList</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#E06C75;--shiki-dark:#E06C75"> dao</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> List</span><span style="color:#E06C75;--shiki-dark:#E06C75"> dataList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> productId) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        try</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">CollectionUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isEmpty</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(dataList)</span><span style="color:#E06C75;--shiki-dark:#E06C75">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#E06C75;--shiki-dark:#E06C75"> item </span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> dataList) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                Method</span><span style="color:#E06C75;--shiki-dark:#E06C75"> setId </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getClass</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getMethod</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"setId"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                setId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">invoke</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(item, (Long) </span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                Method</span><span style="color:#E06C75;--shiki-dark:#E06C75"> setProductId </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getClass</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getMethod</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"setProductId"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                setProductId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">invoke</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(item, productId);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            }</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            Method</span><span style="color:#E06C75;--shiki-dark:#E06C75"> insertList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> dao</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getClass</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getMethod</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"insertList"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            insertList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">invoke</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(dao, dataList);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD">catch</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Exception</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            LOGGER</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">warn</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"创建产品出错:{}"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">e</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getMessage</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            throw</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> RuntimeException</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">e</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getMessage</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>3.2  更新促销价格</h3>
<ul>
<li>促销更新：直接更新商品信息</li>
<li>会员价格：先清除历史会员价格</li>
</ul>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> int</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> update</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> PmsProductParam</span><span style="color:#E06C75;--shiki-dark:#E06C75"> productParam) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> count</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    //更新商品信息</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    PmsProduct</span><span style="color:#E06C75;--shiki-dark:#E06C75"> product </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75"> productParam</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    product</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(id);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    productMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">updateByPrimaryKeySelective</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(product);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    //会员价格</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    PmsMemberPriceExample</span><span style="color:#E06C75;--shiki-dark:#E06C75"> pmsMemberPriceExample </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> PmsMemberPriceExample</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    pmsMemberPriceExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">createCriteria</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">andProductIdEqualTo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(id);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    memberPriceMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">deleteByExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(pmsMemberPriceExample);</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">    relateAndInsertList</span><span style="color:#E06C75;--shiki-dark:#E06C75">(memberPriceDao</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> productParam</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getMemberPriceList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(),</span><span style="color:#E06C75;--shiki-dark:#E06C75"> id)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    //阶梯价格</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    PmsProductLadderExample</span><span style="color:#E06C75;--shiki-dark:#E06C75"> ladderExample </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> PmsProductLadderExample</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    ladderExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">createCriteria</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">andProductIdEqualTo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(id);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    productLadderMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">deleteByExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(ladderExample);</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">    relateAndInsertList</span><span style="color:#E06C75;--shiki-dark:#E06C75">(productLadderDao</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> productParam</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProductLadderList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(),</span><span style="color:#E06C75;--shiki-dark:#E06C75"> id)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    //满减价格</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    PmsProductFullReductionExample</span><span style="color:#E06C75;--shiki-dark:#E06C75"> fullReductionExample </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> PmsProductFullReductionExample</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    fullReductionExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">createCriteria</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">andProductIdEqualTo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(id);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    productFullReductionMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">deleteByExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(fullReductionExample);</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">    relateAndInsertList</span><span style="color:#E06C75;--shiki-dark:#E06C75">(productFullReductionDao</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> productParam</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProductFullReductionList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(),</span><span style="color:#E06C75;--shiki-dark:#E06C75"> id)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>3.3 促销实现</h3>
<p>首先要介绍一下这个，<strong>购物车中促销信息的封装</strong>，继承自购物车item</p>
<ol>
<li>我们以spu为单位查询出所有的促销信息</li>
<li>并计算出每件商品的优惠金额
<ol>
<li>单品促销的优惠金额：商品原价-促销价</li>
<li>打折的优惠金额：商品原价-折扣*商品原价</li>
<li>满减的优惠金额：(商品原价/总价)*满减金额</li>
</ol>
</li>
<li>通过每件商品的优惠金额，计算出优惠总价</li>
<li>所需要支付的金额：总价-优惠总价</li>
</ol>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 购物车中促销信息的封装</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * Created by macro on 2018/8/27.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Getter</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Setter</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> CartPromotionItem</span><span style="color:#C678DD;--shiki-dark:#C678DD"> extends</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> OmsCartItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ApiModelProperty</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"促销活动信息"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> promotionMessage</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ApiModelProperty</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"促销活动减去的金额，针对每个商品"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> BigDecimal</span><span style="color:#E06C75;--shiki-dark:#E06C75"> reduceAmount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ApiModelProperty</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"剩余库存-锁定库存"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Integer</span><span style="color:#E06C75;--shiki-dark:#E06C75"> realStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ApiModelProperty</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"购买商品赠送积分"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Integer</span><span style="color:#E06C75;--shiki-dark:#E06C75"> integration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ApiModelProperty</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"购买商品赠送成长值"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Integer</span><span style="color:#E06C75;--shiki-dark:#E06C75"> growth</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4>3.3.1 单品促销</h4>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (promotionType </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    //单品促销</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OmsCartItem</span><span style="color:#E06C75;--shiki-dark:#E06C75"> item </span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> itemList) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        CartPromotionItem</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cartPromotionItem </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> CartPromotionItem</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        BeanUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">copyProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(item,cartPromotionItem);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setPromotionMessage</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"单品促销"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //优惠的金额=商品原价-促销价</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        PmsSkuStock</span><span style="color:#E06C75;--shiki-dark:#E06C75"> skuStock </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getOriginalPrice</span><span style="color:#E06C75;--shiki-dark:#E06C75">(promotionProduct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProductSkuId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        BigDecimal</span><span style="color:#E06C75;--shiki-dark:#E06C75"> originalPrice </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> skuStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getPrice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //单品促销使用原价</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setPrice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(originalPrice);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setReduceAmount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">originalPrice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">subtract</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">skuStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getPromotionPrice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()));</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setRealStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">skuStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">skuStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getLockStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setIntegration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">promotionProduct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getGiftPoint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setGrowth</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">promotionProduct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getGiftGrowth</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        cartPromotionItemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(cartPromotionItem);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4>3.3.2 打折优惠</h4>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD"> else</span><span style="color:#C678DD;--shiki-dark:#C678DD"> if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (promotionType </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 3</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    //打折优惠</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> count </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getCartItemCount</span><span style="color:#E06C75;--shiki-dark:#E06C75">(itemList)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    PmsProductLadder</span><span style="color:#E06C75;--shiki-dark:#E06C75"> ladder </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getProductLadder</span><span style="color:#E06C75;--shiki-dark:#E06C75">(count</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> promotionProduct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProductLadderList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75">(ladder</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!=</span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#E06C75;--shiki-dark:#E06C75">){</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OmsCartItem</span><span style="color:#E06C75;--shiki-dark:#E06C75"> item </span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> itemList) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            CartPromotionItem</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cartPromotionItem </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> CartPromotionItem</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            BeanUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">copyProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(item,cartPromotionItem);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> message </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getLadderPromotionMessage</span><span style="color:#E06C75;--shiki-dark:#E06C75">(ladder)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setPromotionMessage</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(message);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            //优惠的金额=商品原价-折扣*商品原价</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            PmsSkuStock</span><span style="color:#E06C75;--shiki-dark:#E06C75"> skuStock </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getOriginalPrice</span><span style="color:#E06C75;--shiki-dark:#E06C75">(promotionProduct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProductSkuId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            BigDecimal</span><span style="color:#E06C75;--shiki-dark:#E06C75"> originalPrice </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> skuStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getPrice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            BigDecimal</span><span style="color:#E06C75;--shiki-dark:#E06C75"> reduceAmount </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> originalPrice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">subtract</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ladder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getDiscount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">multiply</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(originalPrice));</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setReduceAmount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(reduceAmount);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setRealStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">skuStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">skuStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getLockStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setIntegration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">promotionProduct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getGiftPoint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setGrowth</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">promotionProduct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getGiftGrowth</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            cartPromotionItemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(cartPromotionItem);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#E06C75;--shiki-dark:#E06C75">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">        handleNoReduce</span><span style="color:#E06C75;--shiki-dark:#E06C75">(cartPromotionItemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75">itemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75">promotionProduct)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4>3.3.3 满减</h4>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#C678DD;--shiki-dark:#C678DD"> if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (promotionType </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 4</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    //满减</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    BigDecimal</span><span style="color:#E06C75;--shiki-dark:#E06C75"> totalAmount</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getCartItemAmount</span><span style="color:#E06C75;--shiki-dark:#E06C75">(itemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75">promotionProductList)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    PmsProductFullReduction</span><span style="color:#E06C75;--shiki-dark:#E06C75"> fullReduction </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getProductFullReduction</span><span style="color:#E06C75;--shiki-dark:#E06C75">(totalAmount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">promotionProduct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProductFullReductionList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75">(fullReduction</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!=</span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#E06C75;--shiki-dark:#E06C75">){</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OmsCartItem</span><span style="color:#E06C75;--shiki-dark:#E06C75"> item </span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> itemList) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            CartPromotionItem</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cartPromotionItem </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> CartPromotionItem</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            BeanUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">copyProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(item,cartPromotionItem);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> message </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getFullReductionPromotionMessage</span><span style="color:#E06C75;--shiki-dark:#E06C75">(fullReduction)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setPromotionMessage</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(message);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            //优惠的金额=(商品原价/总价)*满减金额</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            PmsSkuStock</span><span style="color:#E06C75;--shiki-dark:#E06C75"> skuStock</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getOriginalPrice</span><span style="color:#E06C75;--shiki-dark:#E06C75">(promotionProduct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProductSkuId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            BigDecimal</span><span style="color:#E06C75;--shiki-dark:#E06C75"> originalPrice </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> skuStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getPrice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            BigDecimal</span><span style="color:#E06C75;--shiki-dark:#E06C75"> reduceAmount </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> originalPrice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">divide</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(totalAmount,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">RoundingMode</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">HALF_EVEN</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">multiply</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">fullReduction</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getReducePrice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setReduceAmount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(reduceAmount);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setRealStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">skuStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">skuStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getLockStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setIntegration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">promotionProduct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getGiftPoint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setGrowth</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">promotionProduct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getGiftGrowth</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            cartPromotionItemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(cartPromotionItem);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#E06C75;--shiki-dark:#E06C75">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">        handleNoReduce</span><span style="color:#E06C75;--shiki-dark:#E06C75">(cartPromotionItemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75">itemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75">promotionProduct)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>3.4 计算促销优惠价格（完整流程）</h3>
<h4>3.4.1 根据购物车id 生成确认单时，计算促销信息</h4>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">CartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cartPromotionItemList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> cartItemService</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">listPromotion</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">currentMember</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), cartIds);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">result</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setCartPromotionItemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(cartPromotionItemList);</span></span></code></pre>
</div><h4>3.4.2 计算购物车中的促销信息</h4>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> List</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">CartPromotionItem</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> listPromotion</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> memberId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> List</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">Long</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cartIds) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OmsCartItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cartItemList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> list</span><span style="color:#E06C75;--shiki-dark:#E06C75">(memberId)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">CollUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isNotEmpty</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(cartIds)</span><span style="color:#E06C75;--shiki-dark:#E06C75">){</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            cartItemList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> cartItemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">stream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">filter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(item</span><span style="color:#C678DD;--shiki-dark:#C678DD">-&gt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">cartIds</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">contains</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">())).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">collect</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Collectors</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">toList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">CartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cartPromotionItemList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">CollectionUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isEmpty</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(cartItemList)</span><span style="color:#E06C75;--shiki-dark:#E06C75">){</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            cartPromotionItemList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> promotionService</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">calcCartPromotion</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(cartItemList);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cartPromotionItemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
</div><h4>3.4.3 先根据productId对CartItem进行分组，以spu为单位进行计算优惠</h4>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 以spu为单位对购物车中商品进行分组</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Map</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">Long</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> List</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">OmsCartItem</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> groupCartItemBySpu</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">List</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">OmsCartItem</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cartItemList) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OmsCartItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> productCartMap </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> TreeMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OmsCartItem</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cartItem </span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cartItemList) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OmsCartItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> productCartItemList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> productCartMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">cartItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProductId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (productCartItemList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                productCartItemList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                productCartItemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(cartItem);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                productCartMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">cartItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProductId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), productCartItemList);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            } </span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                productCartItemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(cartItem);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> productCartMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4>3.4.4 查询所有商品的优惠相关信息（sql关联表）</h4>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">select id</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">"getPromotionProductList"</span><span style="color:#E06C75;--shiki-dark:#E06C75"> resultMap</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">"promotionProductMap"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    SELECT</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        p</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        p</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">`name`</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        p</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">promotion_type</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        p</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">gift_growth</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        p</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">gift_point</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        sku</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">id</span><span style="color:#E06C75;--shiki-dark:#E06C75"> sku_id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        sku</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">price</span><span style="color:#E06C75;--shiki-dark:#E06C75"> sku_price</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        sku</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">sku_code</span><span style="color:#E06C75;--shiki-dark:#E06C75"> sku_sku_code</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        sku</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">promotion_price</span><span style="color:#E06C75;--shiki-dark:#E06C75"> sku_promotion_price</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        sku</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">stock</span><span style="color:#E06C75;--shiki-dark:#E06C75"> sku_stock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        sku</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">lock_stock</span><span style="color:#E06C75;--shiki-dark:#E06C75"> sku_lock_stock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        ladder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">id</span><span style="color:#E06C75;--shiki-dark:#E06C75"> ladder_id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        ladder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">count</span><span style="color:#E06C75;--shiki-dark:#E06C75"> ladder_count</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        ladder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">discount</span><span style="color:#E06C75;--shiki-dark:#E06C75"> ladder_discount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        full_re</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">id</span><span style="color:#E06C75;--shiki-dark:#E06C75"> full_id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        full_re</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">full_price</span><span style="color:#E06C75;--shiki-dark:#E06C75"> full_full_price</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        full_re</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">reduce_price</span><span style="color:#E06C75;--shiki-dark:#E06C75"> full_reduce_price</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    FROM</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        pms_product p</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        LEFT</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> JOIN</span><span style="color:#E06C75;--shiki-dark:#E06C75"> pms_sku_stock sku </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ON</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> p</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">id</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> sku</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">product_id</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        LEFT</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> JOIN</span><span style="color:#E06C75;--shiki-dark:#E06C75"> pms_product_ladder ladder </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ON</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> p</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">id</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ladder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">product_id</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        LEFT</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> JOIN</span><span style="color:#E06C75;--shiki-dark:#E06C75"> pms_product_full_reduction full_re </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ON</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> p</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">id</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> full_re</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">product_id</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    WHERE</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        p</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">id</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> IN</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">foreach collection</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">"ids"</span><span style="color:#E06C75;--shiki-dark:#E06C75"> open</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">"("</span><span style="color:#E06C75;--shiki-dark:#E06C75"> close</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">")"</span><span style="color:#E06C75;--shiki-dark:#E06C75"> item</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">"id"</span><span style="color:#E06C75;--shiki-dark:#E06C75"> separator</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">","</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        #{id}</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">    &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">foreach</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">select</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4>3.4.5 计算商品促销优惠价格</h4>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B"> List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">CartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cartPromotionItemList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Entry</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OmsCartItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> entry </span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> productCartMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">entrySet</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            Long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> productId </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> entry</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            PromotionProduct</span><span style="color:#E06C75;--shiki-dark:#E06C75"> promotionProduct </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getPromotionProductById</span><span style="color:#E06C75;--shiki-dark:#E06C75">(productId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> promotionProductList)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OmsCartItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> itemList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> entry</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getValue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            Integer</span><span style="color:#E06C75;--shiki-dark:#E06C75"> promotionType </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> promotionProduct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getPromotionType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (promotionType </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                //单品促销</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OmsCartItem</span><span style="color:#E06C75;--shiki-dark:#E06C75"> item </span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> itemList) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    CartPromotionItem</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cartPromotionItem </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> CartPromotionItem</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    BeanUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">copyProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(item,cartPromotionItem);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setPromotionMessage</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"单品促销"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    //商品原价-促销价</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    PmsSkuStock</span><span style="color:#E06C75;--shiki-dark:#E06C75"> skuStock </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getOriginalPrice</span><span style="color:#E06C75;--shiki-dark:#E06C75">(promotionProduct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProductSkuId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    BigDecimal</span><span style="color:#E06C75;--shiki-dark:#E06C75"> originalPrice </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> skuStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getPrice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    //单品促销使用原价</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setPrice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(originalPrice);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setReduceAmount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">originalPrice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">subtract</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">skuStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getPromotionPrice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()));</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setRealStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">skuStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">skuStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getLockStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setIntegration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">promotionProduct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getGiftPoint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setGrowth</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">promotionProduct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getGiftGrowth</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    cartPromotionItemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(cartPromotionItem);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            } </span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#C678DD;--shiki-dark:#C678DD"> if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (promotionType </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 3</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                //打折优惠</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> count </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getCartItemCount</span><span style="color:#E06C75;--shiki-dark:#E06C75">(itemList)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                PmsProductLadder</span><span style="color:#E06C75;--shiki-dark:#E06C75"> ladder </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getProductLadder</span><span style="color:#E06C75;--shiki-dark:#E06C75">(count</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> promotionProduct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProductLadderList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                if</span><span style="color:#E06C75;--shiki-dark:#E06C75">(ladder</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!=</span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#E06C75;--shiki-dark:#E06C75">){</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                    for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OmsCartItem</span><span style="color:#E06C75;--shiki-dark:#E06C75"> item </span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> itemList) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        CartPromotionItem</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cartPromotionItem </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> CartPromotionItem</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        BeanUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">copyProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(item,cartPromotionItem);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> message </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getLadderPromotionMessage</span><span style="color:#E06C75;--shiki-dark:#E06C75">(ladder)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setPromotionMessage</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(message);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                        //商品原价-折扣*商品原价</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        PmsSkuStock</span><span style="color:#E06C75;--shiki-dark:#E06C75"> skuStock </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getOriginalPrice</span><span style="color:#E06C75;--shiki-dark:#E06C75">(promotionProduct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProductSkuId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        BigDecimal</span><span style="color:#E06C75;--shiki-dark:#E06C75"> originalPrice </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> skuStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getPrice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        BigDecimal</span><span style="color:#E06C75;--shiki-dark:#E06C75"> reduceAmount </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> originalPrice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">subtract</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ladder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getDiscount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">multiply</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(originalPrice));</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setReduceAmount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(reduceAmount);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setRealStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">skuStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">skuStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getLockStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setIntegration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">promotionProduct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getGiftPoint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setGrowth</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">promotionProduct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getGiftGrowth</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        cartPromotionItemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(cartPromotionItem);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                    }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                }</span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#E06C75;--shiki-dark:#E06C75">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">                    handleNoReduce</span><span style="color:#E06C75;--shiki-dark:#E06C75">(cartPromotionItemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75">itemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75">promotionProduct)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            } </span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#C678DD;--shiki-dark:#C678DD"> if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (promotionType </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 4</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                //满减</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                BigDecimal</span><span style="color:#E06C75;--shiki-dark:#E06C75"> totalAmount</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getCartItemAmount</span><span style="color:#E06C75;--shiki-dark:#E06C75">(itemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75">promotionProductList)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                PmsProductFullReduction</span><span style="color:#E06C75;--shiki-dark:#E06C75"> fullReduction </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getProductFullReduction</span><span style="color:#E06C75;--shiki-dark:#E06C75">(totalAmount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">promotionProduct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProductFullReductionList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                if</span><span style="color:#E06C75;--shiki-dark:#E06C75">(fullReduction</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!=</span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#E06C75;--shiki-dark:#E06C75">){</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                    for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OmsCartItem</span><span style="color:#E06C75;--shiki-dark:#E06C75"> item </span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> itemList) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        CartPromotionItem</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cartPromotionItem </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> CartPromotionItem</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        BeanUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">copyProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(item,cartPromotionItem);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> message </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getFullReductionPromotionMessage</span><span style="color:#E06C75;--shiki-dark:#E06C75">(fullReduction)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setPromotionMessage</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(message);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                        //(商品原价/总价)*满减金额</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        PmsSkuStock</span><span style="color:#E06C75;--shiki-dark:#E06C75"> skuStock</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getOriginalPrice</span><span style="color:#E06C75;--shiki-dark:#E06C75">(promotionProduct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProductSkuId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        BigDecimal</span><span style="color:#E06C75;--shiki-dark:#E06C75"> originalPrice </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> skuStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getPrice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        BigDecimal</span><span style="color:#E06C75;--shiki-dark:#E06C75"> reduceAmount </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> originalPrice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">divide</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(totalAmount,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">RoundingMode</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">HALF_EVEN</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">multiply</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">fullReduction</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getReducePrice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setReduceAmount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(reduceAmount);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setRealStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">skuStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">skuStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getLockStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setIntegration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">promotionProduct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getGiftPoint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        cartPromotionItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setGrowth</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">promotionProduct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getGiftGrowth</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        cartPromotionItemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(cartPromotionItem);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                    }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                }</span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#E06C75;--shiki-dark:#E06C75">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">                    handleNoReduce</span><span style="color:#E06C75;--shiki-dark:#E06C75">(cartPromotionItemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75">itemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75">promotionProduct)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            } </span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                //无优惠</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">                handleNoReduce</span><span style="color:#E06C75;--shiki-dark:#E06C75">(cartPromotionItemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> itemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75">promotionProduct)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cartPromotionItemList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>3.5 需支付的总金额</h3>
<p>此时的计算就是商品的价格-促销价格</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> BigDecimal</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> calcTotalAmount</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">List</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">CartPromotionItem</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cartItemList) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    BigDecimal</span><span style="color:#E06C75;--shiki-dark:#E06C75"> total </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> BigDecimal</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"0"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">CartPromotionItem</span><span style="color:#E06C75;--shiki-dark:#E06C75"> item </span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cartItemList) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        BigDecimal</span><span style="color:#E06C75;--shiki-dark:#E06C75"> realPrice </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getPrice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">subtract</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getReduceAmount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        total</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">total</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">realPrice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">multiply</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> BigDecimal</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getQuantity</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">())));</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> total</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
</div><h2>4. 界面设计</h2>
<h3>4.1 管理端</h3>
<h4>4.1.1 填写促销</h4>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301158644.png" alt="image-20220323200719031" tabindex="0" loading="lazy"><figcaption>image-20220323200719031</figcaption></figure>
<h4>4.1.2 特惠促销</h4>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301158689.png" alt="image-20220323200820529" tabindex="0" loading="lazy"><figcaption>image-20220323200820529</figcaption></figure>
<h4>4.1.3 会员价格</h4>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301158713.png" alt="image-20220323200838867" tabindex="0" loading="lazy"><figcaption>image-20220323200838867</figcaption></figure>
<h2>5. 相关问题</h2>
<h3>5.1 什么时候需要计算促销金额</h3>
<ol>
<li>生成确认单的时候
<ol>
<li>优惠券是否符合满减需求，就已经使用了促销完成后的金额</li>
</ol>
</li>
<li>下单时</li>
</ol>
<h3>5.2  优惠方式表设计</h3>
<ul>
<li>
<p>特惠促销：一件商品只有一个优惠价。是一对一的关系，所以设计在商品表中</p>
</li>
<li>
<p>会员价，阶梯价、满减：都是一对多的关系，所以采用外表方式</p>
</li>
</ul>
<h2>参考文章</h2>
<p><a href="http://www.macrozheng.com/#/database/mall_pms_02" target="_blank" rel="noopener noreferrer">mall官网</a></p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301158644.png" type="image/png"/>
    </item>
    <item>
      <title>mall中商品设计</title>
      <link>https://mrjackc.github.io/posts/Architect/mall/mall-product.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/mall/mall-product.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">mall中商品设计</source>
      <description>mall中商品设计 该篇文章主要参考mall官方文档，并结合自己的使用感受做的一些笔记 1. 简介 2. 接口设计 2.1 获取商品详情 获取商品的基础信息 获取品牌信息 获取商品属性信息 获取商品SKU库存信息 商品阶梯价格设置 商品满减价格设置 商品可用优惠券 2.1.1 获取可用优惠券列表 获取具体商品的可用优惠券，</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<blockquote>
<p>该篇文章主要参考<a href="http://www.macrozheng.com/#/README" target="_blank" rel="noopener noreferrer">mall官方文档</a>，并结合自己的使用感受做的一些笔记</p>
</blockquote>
<h2>1. 简介</h2>
<h2>2. 接口设计</h2>
<h3>2.1 获取商品详情</h3>
<ol>
<li>获取商品的基础信息</li>
<li>获取品牌信息</li>
<li>获取商品属性信息</li>
<li>获取商品SKU库存信息</li>
<li>商品阶梯价格设置</li>
<li>商品满减价格设置</li>
<li>商品可用优惠券</li>
</ol>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> PmsPortalProductDetail</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> detail</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> id) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    PmsPortalProductDetail</span><span style="color:#E06C75;--shiki-dark:#E06C75"> result </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> PmsPortalProductDetail</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    //获取商品信息</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    PmsProduct</span><span style="color:#E06C75;--shiki-dark:#E06C75"> product </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> productMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">selectByPrimaryKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(id);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    result</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setProduct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(product);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    //获取品牌信息</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    PmsBrand</span><span style="color:#E06C75;--shiki-dark:#E06C75"> brand </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> brandMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">selectByPrimaryKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">product</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getBrandId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    result</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setBrand</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(brand);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    //获取商品属性信息</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> productAttributeCategoryId </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> product</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProductAttributeCategoryId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75">(productAttributeCategoryId </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#E06C75;--shiki-dark:#E06C75">){</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        PmsProductAttributeExample</span><span style="color:#E06C75;--shiki-dark:#E06C75"> attributeExample </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> PmsProductAttributeExample</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        attributeExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">createCriteria</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">andProductAttributeCategoryIdEqualTo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(productAttributeCategoryId);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PmsProductAttribute</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> productAttributeList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> productAttributeMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">selectByExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(attributeExample);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        result</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setProductAttributeList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(productAttributeList);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //获取商品属性值信息</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">CollUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isNotEmpty</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(productAttributeList)</span><span style="color:#E06C75;--shiki-dark:#E06C75">){</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> attributeIds </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> productAttributeList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">stream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(PmsProductAttribute</span><span style="color:#C678DD;--shiki-dark:#C678DD">::</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">getId).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">collect</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Collectors</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">toList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            PmsProductAttributeValueExample</span><span style="color:#E06C75;--shiki-dark:#E06C75"> attributeValueExample </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> PmsProductAttributeValueExample</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            attributeValueExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">createCriteria</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">andProductIdEqualTo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">product</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">())</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                    .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">andProductAttributeIdIn</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(attributeIds);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PmsProductAttributeValue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> productAttributeValueList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> productAttributeValueMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">selectByExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(attributeValueExample);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            result</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setProductAttributeValueList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(productAttributeValueList);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  </span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //获取商品SKU库存信息</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        PmsSkuStockExample</span><span style="color:#E06C75;--shiki-dark:#E06C75"> skuExample </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> PmsSkuStockExample</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        skuExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">createCriteria</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">andProductIdEqualTo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">product</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PmsSkuStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> skuStockList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> skuStockMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">selectByExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(skuExample);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        result</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setSkuStockList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(skuStockList);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //商品阶梯价格设置</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">product</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getPromotionType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#D19A66;--shiki-dark:#D19A66">3</span><span style="color:#E06C75;--shiki-dark:#E06C75">){</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            PmsProductLadderExample</span><span style="color:#E06C75;--shiki-dark:#E06C75"> ladderExample </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> PmsProductLadderExample</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            ladderExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">createCriteria</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">andProductIdEqualTo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">product</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PmsProductLadder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> productLadderList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> productLadderMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">selectByExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(ladderExample);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            result</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setProductLadderList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(productLadderList);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //商品满减价格设置</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">product</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getPromotionType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#D19A66;--shiki-dark:#D19A66">4</span><span style="color:#E06C75;--shiki-dark:#E06C75">){</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            PmsProductFullReductionExample</span><span style="color:#E06C75;--shiki-dark:#E06C75"> fullReductionExample </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> PmsProductFullReductionExample</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            fullReductionExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">createCriteria</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">andProductIdEqualTo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">product</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PmsProductFullReduction</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> productFullReductionList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> productFullReductionMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">selectByExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(fullReductionExample);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            result</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setProductFullReductionList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(productFullReductionList);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //商品可用优惠券</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        result</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setCouponList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">portalProductDao</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getAvailableCouponList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">product</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(),</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">product</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getProductCategoryId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()));</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> result</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4>2.1.1 获取可用优惠券列表</h4>
<p>获取具体商品的可用优惠券，</p>
<div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#C678DD;--shiki-dark:#C678DD">select</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> id</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">"getAvailableCouponList"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> resultMap</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">"com.macro.mall.mapper.SmsCouponMapper.BaseResultMap"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    SELECT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> *</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    FROM</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> sms_coupon</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    WHERE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> use_type </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">      AND</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> start_time &amp;lt; </span><span style="color:#C678DD;--shiki-dark:#C678DD">NOW</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">      AND</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> end_time &amp;gt; </span><span style="color:#C678DD;--shiki-dark:#C678DD">NOW</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    UNION</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    (</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        SELECT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c.*</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        FROM</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> sms_coupon_product_category_relation cpc</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                 LEFT JOIN</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> sms_coupon c </span><span style="color:#C678DD;--shiki-dark:#C678DD">ON</span><span style="color:#D19A66;--shiki-dark:#D19A66"> cpc</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">coupon_id</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> c</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">id</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        WHERE</span><span style="color:#D19A66;--shiki-dark:#D19A66"> c</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">use_type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">          AND</span><span style="color:#D19A66;--shiki-dark:#D19A66"> c</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">start_time</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> &amp;lt; </span><span style="color:#C678DD;--shiki-dark:#C678DD">NOW</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">          AND</span><span style="color:#D19A66;--shiki-dark:#D19A66"> c</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">end_time</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> &amp;gt; </span><span style="color:#C678DD;--shiki-dark:#C678DD">NOW</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">          AND</span><span style="color:#D19A66;--shiki-dark:#D19A66"> cpc</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">product_category_id</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> #{productCategoryId}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    )</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    UNION</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    (</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        SELECT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c.*</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        FROM</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> sms_coupon_product_relation cp</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                 LEFT JOIN</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> sms_coupon c </span><span style="color:#C678DD;--shiki-dark:#C678DD">ON</span><span style="color:#D19A66;--shiki-dark:#D19A66"> cp</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">coupon_id</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> c</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">id</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        WHERE</span><span style="color:#D19A66;--shiki-dark:#D19A66"> c</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">use_type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 2</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">          AND</span><span style="color:#D19A66;--shiki-dark:#D19A66"> c</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">start_time</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> &amp;lt; </span><span style="color:#C678DD;--shiki-dark:#C678DD">NOW</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">          AND</span><span style="color:#D19A66;--shiki-dark:#D19A66"> c</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">end_time</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> &amp;gt; </span><span style="color:#C678DD;--shiki-dark:#C678DD">NOW</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">          AND</span><span style="color:#D19A66;--shiki-dark:#D19A66"> cp</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">product_id</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> #{productId}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    )</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/</span><span style="color:#C678DD;--shiki-dark:#C678DD">select</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>mall中退货设计</title>
      <link>https://mrjackc.github.io/posts/Architect/mall/mall-return.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/mall/mall-return.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">mall中退货设计</source>
      <description>mall中退货设计 1. 简介 退货也是在商城系统中的一部分， 2. 流程 2.1 客户端发起退货申请 退货是针对每一件商品的、（每一件商品在下单时，要计算单件商品实际支付的金额，在退货时才知道每件商品应该退多少金额） 退货申请的参数 发起退货代码 并没有检验是否已申请</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 简介</h2>
<p>退货也是在商城系统中的一部分，</p>
<h2>2. 流程</h2>
<h3>2.1 客户端发起退货申请</h3>
<p>退货是针对每一件商品的、（每一件商品在下单时，要计算单件商品实际支付的金额，在退货时才知道每件商品应该退多少金额）</p>
<p>退货申请的参数</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> OmsOrderReturnApply</span><span style="color:#C678DD;--shiki-dark:#C678DD"> implements</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Serializable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ApiModelProperty</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "订单id"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> orderId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ApiModelProperty</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "收货地址表id"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> companyAddressId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ApiModelProperty</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "退货商品id"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> productId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ApiModelProperty</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "订单编号"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> orderSn</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ApiModelProperty</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "申请时间"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Date</span><span style="color:#E06C75;--shiki-dark:#E06C75"> createTime</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ApiModelProperty</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "会员用户名"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> memberUsername</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ApiModelProperty</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "退款金额"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> BigDecimal</span><span style="color:#E06C75;--shiki-dark:#E06C75"> returnAmount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ApiModelProperty</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "退货人姓名"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> returnName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ApiModelProperty</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "退货人电话"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> returnPhone</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ApiModelProperty</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "申请状态：0-&gt;待处理；1-&gt;退货中；2-&gt;已完成；3-&gt;已拒绝"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Integer</span><span style="color:#E06C75;--shiki-dark:#E06C75"> status</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ApiModelProperty</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "处理时间"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Date</span><span style="color:#E06C75;--shiki-dark:#E06C75"> handleTime</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ApiModelProperty</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "商品图片"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> productPic</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ApiModelProperty</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "商品名称"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> productName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ApiModelProperty</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "商品品牌"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> productBrand</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ApiModelProperty</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "商品销售属性：颜色：红色；尺码：xl;"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> productAttr</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ApiModelProperty</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "退货数量"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Integer</span><span style="color:#E06C75;--shiki-dark:#E06C75"> productCount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ApiModelProperty</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "商品单价"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> BigDecimal</span><span style="color:#E06C75;--shiki-dark:#E06C75"> productPrice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ApiModelProperty</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "商品实际支付单价"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> BigDecimal</span><span style="color:#E06C75;--shiki-dark:#E06C75"> productRealPrice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ApiModelProperty</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "原因"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> reason</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ApiModelProperty</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "描述"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> description</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ApiModelProperty</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "凭证图片，以逗号隔开"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> proofPics</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ApiModelProperty</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "处理备注"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> handleNote</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ApiModelProperty</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "处理人员"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> handleMan</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ApiModelProperty</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "收货人"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> receiveMan</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ApiModelProperty</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "收货时间"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Date</span><span style="color:#E06C75;--shiki-dark:#E06C75"> receiveTime</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ApiModelProperty</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "收货备注"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> receiveNote</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>发起退货代码</p>
<p>并没有检验是否已申请</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> int</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> create</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OmsOrderReturnApplyParam</span><span style="color:#E06C75;--shiki-dark:#E06C75"> returnApply) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        OmsOrderReturnApply</span><span style="color:#E06C75;--shiki-dark:#E06C75"> realApply </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> OmsOrderReturnApply</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        BeanUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">copyProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(returnApply,realApply);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        realApply</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setCreateTime</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Date</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        realApply</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setStatus</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> returnApplyMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">insert</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(realApply);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
</div>]]></content:encoded>
    </item>
    <item>
      <title>商城设计 - 秒杀系统设计？</title>
      <link>https://mrjackc.github.io/posts/Architect/mall/mall-second-kill.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/mall/mall-second-kill.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">商城设计 - 秒杀系统设计？</source>
      <description>商城设计 - 秒杀系统设计？ image-20221012225218315image-20221012225218315 0. 前言 高并发下如何设计秒杀系统？这是一个高频面试题。这个问题看似简单，但是里面的水很深，它考查的是高并发场景下，从前端到后端多方面的知识。 秒杀一般出现在商城的促销活动中，指定了一定数量（比如：10个）的商品（比如：手机），...</description>
      <category>mall</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301159826.png" alt="image-20221012225218315" tabindex="0" loading="lazy"><figcaption>image-20221012225218315</figcaption></figure>
<h2>0. 前言</h2>
<p>高并发下如何设计秒杀系统？这是一个高频面试题。这个问题看似简单，但是里面的水很深，它考查的是高并发场景下，从前端到后端多方面的知识。</p>
<p>秒杀一般出现在商城的<code>促销活动</code>中，指定了一定数量（比如：10个）的商品（比如：手机），以极低的价格（比如：0.1元），让大量用户参与活动，但只有极少数用户能够购买成功。这类活动商家绝大部分是不赚钱的，说白了是找个噱头宣传自己。</p>
<p>虽说秒杀只是一个促销活动，但对技术要求不低。下面给大家总结一下设计秒杀系统需要注意的9个细节。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301159871.png" alt="image-20221012225356461" tabindex="0" loading="lazy"><figcaption>image-20221012225356461</figcaption></figure>
<h2>1. 瞬时高并发</h2>
<p>一般在<code>秒杀时间点</code>（比如：12点）前几分钟，用户并发量才真正突增，达到秒杀时间点时，并发量会达到顶峰。</p>
<p>但由于这类活动是大量用户抢少量商品的场景，必定会出现<code>狼多肉少</code>的情况，所以其实绝大部分用户秒杀会失败，只有极少部分用户能够成功。</p>
<p>正常情况下，大部分用户会收到商品已经抢完的提醒，收到该提醒后，他们大概率不会在那个活动页面停留了，如此一来，用户并发量又会急剧下降。所以这个峰值持续的时间其实是非常短的，这样就会出现瞬时高并发的情况，下面用一张图直观的感受一下流量的变化：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301159894.png" alt="image-20221012225506588" tabindex="0" loading="lazy"><figcaption>image-20221012225506588</figcaption></figure>
<p>像这种瞬时高并发的场景，传统的系统很难应对，我们需要设计一套全新的系统。可以从以下几个方面入手：</p>
<ol>
<li>页面静态化</li>
<li>CDN加速</li>
<li>缓存</li>
<li>mq异步处理</li>
<li>限流</li>
<li>分布式锁</li>
</ol>
<h2>2. 页面静态化与CDN</h2>
<p>活动页面是用户流量的第一入口，所以是并发量最大的地方。</p>
<p>如果这些流量都能直接访问服务端，恐怕服务端会因为承受不住这么大的压力，而直接挂掉。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301159915.png" alt="image-20221012225625240" tabindex="0" loading="lazy"><figcaption>image-20221012225625240</figcaption></figure>
<p>活动页面绝大多数内容是固定的，比如：商品名称、商品描述、图片等。为了减少不必要的服务端请求，通常情况下，会对活动页面做<code>静态化</code>处理。用户浏览商品等常规操作，并不会请求到服务端。只有到了秒杀时间点，并且用户主动点了秒杀按钮才允许访问服务端。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301159939.png" alt="image-20221012225738044" tabindex="0" loading="lazy"><figcaption>image-20221012225738044</figcaption></figure>
<p>这样能过滤大部分无效请求。</p>
<p>但只做页面静态化还不够，因为用户分布在全国各地，有些人在北京，有些人在成都，有些人在深圳，地域相差很远，网速各不相同。</p>
<p>如何才能让用户最快访问到活动页面呢？</p>
<p>这就需要使用CDN，它的全称是Content Delivery Network，即内容分发网络。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301159972.png" alt="image-20221012225814094" tabindex="0" loading="lazy"><figcaption>image-20221012225814094</figcaption></figure>
<p>使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。</p>
<h2>3. 秒杀按钮</h2>
<p>大部分用户怕错过<code>秒杀时间点</code>，一般会提前进入活动页面。此时看到的<code>秒杀按钮</code>是置灰，不可点击的。只有到了秒杀时间点那一时刻，秒杀按钮才会自动点亮，变成可点击的。</p>
<p>但此时很多用户已经迫不及待了，通过不停刷新页面，争取在第一时间看到秒杀按钮的点亮。</p>
<p>从前面得知，该活动页面是静态的。那么我们在静态页面中如何控制秒杀按钮，只在秒杀时间点时才点亮呢？</p>
<p>没错，使用js文件控制。</p>
<p>为了性能考虑，一般会将css、js和图片等静态资源文件提前缓存到CDN上，让用户能够就近访问秒杀页面。</p>
<p>看到这里，有些聪明的小伙伴，可能会问：CDN上的js文件是如何更新的？</p>
<p>秒杀开始之前，js标志为false，还有另外一个随机参数。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301159999.png" alt="image-20221012230038760" tabindex="0" loading="lazy"><figcaption>image-20221012230038760</figcaption></figure>
<p>当秒杀开始的时候系统会生成一个新的js文件，此时标志为true，并且随机参数生成一个新值，然后同步给CDN。由于有了这个随机参数，CDN不会缓存数据，每次都能从CDN中获取最新的js代码。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301159024.png" alt="image-20221012230143372" tabindex="0" loading="lazy"><figcaption>image-20221012230143372</figcaption></figure>
<p>此外，前端还可以加一个定时器，控制比如：10秒之内，只允许发起一次请求。如果用户点击了一次秒杀按钮，则在10秒之内置灰，不允许再次点击，等到过了时间限制，又允许重新点击该按钮。</p>
<h2>4. 读多写少</h2>
<p>在秒杀的过程中，系统一般会先查一下库存是否足够，如果足够才允许下单，写数据库。如果不够，则直接返回该商品已经抢完。</p>
<p>由于大量用户抢少量商品，只有极少部分用户能够抢成功，所以绝大部分用户在秒杀时，库存其实是不足的，系统会直接返回该商品已经抢完。</p>
<p>这是非常典型的：<code>读多写少</code> 的场景。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301159043.png" alt="image-20221012230258718" tabindex="0" loading="lazy"><figcaption>image-20221012230258718</figcaption></figure>
<p>如果有数十万的请求过来，同时通过数据库查缓存是否足够，此时数据库可能会挂掉。因为数据库的连接资源非常有限，比如：mysql，无法同时支持这么多的连接。</p>
<p>而应该改用缓存，比如：redis。</p>
<p>即便用了redis，也需要部署多个节点。</p>
<h2>5. 缓存问题</h2>
<p>通常情况下，我们需要在redis中保存商品信息，里面包含：商品id、商品名称、规格属性、库存等信息，同时数据库中也要有相关信息，毕竟缓存并不完全可靠。</p>
<p>用户在点击秒杀按钮，请求秒杀接口的过程中，需要传入的商品id参数，然后服务端需要校验该商品是否合法。</p>
<p>大致流程如下图所示：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301159064.png" alt="image-20221012230423178" tabindex="0" loading="lazy"><figcaption>image-20221012230423178</figcaption></figure>
<p>根据商品id，先从缓存中查询商品，如果商品存在，则参与秒杀。如果不存在，则需要从数据库中查询商品，如果存在，则将商品信息放入缓存，然后参与秒杀。如果商品不存在，则直接提示失败。</p>
<p>这个过程表面上看起来是OK的，但是如果深入分析一下会发现一些问题。</p>
<h3>5.1 缓存击穿</h3>
<p>比如商品A第一次秒杀时，缓存中是没有数据的，但数据库中有。虽说上面有如果从数据库中查到数据，则放入缓存的逻辑。</p>
<p>然而，在高并发下，同一时刻会有大量的请求，都在秒杀同一件商品，这些请求同时去查缓存中没有数据，然后又同时访问数据库。结果悲剧了，数据库可能扛不住压力，直接挂掉。</p>
<p>如何解决这个问题呢？</p>
<p>这就需要加锁，最好使用分布式锁。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301159084.png" alt="image-20221012230520478" tabindex="0" loading="lazy"><figcaption>image-20221012230520478</figcaption></figure>
<p>当然，针对这种情况，最好在项目启动之前，先把缓存进行<code>预热</code>。即事先把所有的商品，同步到缓存中，这样商品基本都能直接从缓存中获取到，就不会出现缓存击穿的问题了。</p>
<p>是不是上面加锁这一步可以不需要了？</p>
<p>表面上看起来，确实可以不需要。但如果缓存中设置的过期时间不对，缓存提前过期了，或者缓存被不小心删除了，如果不加速同样可能出现缓存击穿。</p>
<p>其实这里加锁，相当于买了一份保险。</p>
<h3>5.2 缓存穿透</h3>
<p>如果有大量的请求传入的商品id，在缓存中和数据库中都不存在，这些请求不就每次都会穿透过缓存，而直接访问数据库了。</p>
<p>由于前面已经加了锁，所以即使这里的并发量很大，也不会导致数据库直接挂掉。</p>
<p>但很显然这些请求的处理性能并不好，有没有更好的解决方案？</p>
<p>这时可以想到<code>布隆过滤器</code>。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301159105.png" alt="image-20221012231033089" tabindex="0" loading="lazy"><figcaption>image-20221012231033089</figcaption></figure>
<p>先从布隆过滤器中查询该id是否存在，如果存在则允许从缓存中查询数据，如果不存在，则直接返回失败。</p>
<p>虽说该方案可以解决缓存穿透问题，但是又会引出另外一个问题：布隆过滤器中的数据如何更缓存中的数据保持一致？</p>
<p>这就要求，如果缓存中数据有更新，则要及时同步到布隆过滤器中。如果数据同步失败了，还需要增加重试机制，而且跨数据源，能保证数据的实时一致性吗？</p>
<p>显然是不行的。</p>
<p>所以布隆过滤器绝大部分使用在缓存数据更新很少的场景中。</p>
<p>如果缓存数据更新非常频繁，又该如何处理呢？</p>
<p>这时，就需要把不存在的商品id也缓存起来。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301159127.png" alt="image-20221012231121809" tabindex="0" loading="lazy"><figcaption>image-20221012231121809</figcaption></figure>
<p>id的请求过来，则也能从缓存中查到数据，只不过该数据比较特殊，表示商品不存在。需要特别注意的是，这种特殊缓存设置的超时时间应该尽量短一点。</p>
<h2>6. 库存问题</h2>
<p>对于库存问题看似简单，实则里面还是有些东西。</p>
<p>真正的秒杀商品的场景，不是说扣完库存，就完事了，如果用户在一段时间内，还没完成支付，扣减的库存是要加回去的。</p>
<p>所以，在这里引出了一个<code>预扣库存</code>的概念，预扣库存的主要流程如下：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301159149.png" alt="image-20221012231220053" tabindex="0" loading="lazy"><figcaption>image-20221012231220053</figcaption></figure>
<p>扣减库存中除了上面说到的<code>预扣库存</code>和<code>回退库存</code>之外，还需要特别注意的是库存不足和库存超卖问题。</p>
<h3>6.1 数据库扣减库存</h3>
<p>使用数据库扣减库存，是最简单的实现方案了，假设扣减库存的sql如下：</p>
<div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">update</span><span style="color:#98C379;--shiki-dark:#98C379"> product</span><span style="color:#98C379;--shiki-dark:#98C379"> set</span><span style="color:#98C379;--shiki-dark:#98C379"> stock=stock-1</span><span style="color:#98C379;--shiki-dark:#98C379"> where</span><span style="color:#98C379;--shiki-dark:#98C379"> id=</span><span style="color:#D19A66;--shiki-dark:#D19A66">123</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span></code></pre>
</div><p>这种写法对于扣减库存是没有问题的，但如何控制库存不足的情况下，不让用户操作呢？</p>
<p>这就需要在update之前，先查一下库存是否足够了。</p>
<p>伪代码如下：</p>
<div class="language-scss" data-ext="scss" data-title="scss"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">int stock = mapper.getStockById(123);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">if(stock &gt; 0) {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  int count = mapper.updateStock(123);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  if(count &gt; 0) {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    addOrder(123);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
</div><p>大家有没有发现这段代码的问题？</p>
<p>没错，查询操作和更新操作不是原子性的，会导致在并发的场景下，出现库存超卖的情况。</p>
<p>有人可能会说，这样好办，加把锁，不就搞定了，比如使用synchronized关键字。</p>
<p>确实，可以，但是性能不够好。</p>
<p>还有更优雅的处理方案，即基于数据库的乐观锁，这样会少一次数据库查询，而且能够天然的保证数据操作的原子性。</p>
<p>只需将上面的sql稍微调整一下：</p>
<div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">update</span><span style="color:#98C379;--shiki-dark:#98C379"> product</span><span style="color:#98C379;--shiki-dark:#98C379"> set</span><span style="color:#98C379;--shiki-dark:#98C379"> stock=stock-1</span><span style="color:#98C379;--shiki-dark:#98C379"> where</span><span style="color:#98C379;--shiki-dark:#98C379"> id=product</span><span style="color:#98C379;--shiki-dark:#98C379"> and</span><span style="color:#98C379;--shiki-dark:#98C379"> stock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> &gt; </span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span></code></pre>
</div><p>在sql最后加上：<code>stock &gt; 0</code>，就能保证不会出现超卖的情况。</p>
<p>但需要频繁访问数据库，我们都知道数据库连接是非常昂贵的资源。在高并发的场景下，可能会造成系统雪崩。而且，容易出现多个请求，同时竞争行锁的情况，造成相互等待，从而出现死锁的问题。</p>
<h3>6.2 redis扣减库存</h3>
<p>redis的<code>incr</code>方法是原子性的，可以用该方法扣减库存。伪代码如下：</p>
<div class="language-ini" data-ext="ini" data-title="ini"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#98C379;--shiki-dark:#98C379"> boolean </span><span style="color:#C678DD;--shiki-dark:#C678DD">exist</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> redisClient.query(productId,userId)</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">;</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  if(exist) {</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">    return -1</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">;</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  }</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  int </span><span style="color:#C678DD;--shiki-dark:#C678DD">stock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> redisClient.queryStock(productId)</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">;</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  if(stock &lt;=0) {</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">    return 0</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">;</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  }</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  redisClient.incrby(productId, -1)</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">;</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  redisClient.add(productId,userId)</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">;</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">return 1</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">;</span></span></code></pre>
</div><p>代码流程如下：</p>
<ol>
<li>先判断该用户有没有秒杀过该商品，如果已经秒杀过，则直接返回-1。</li>
<li>查询库存，如果库存小于等于0，则直接返回0，表示库存不足。</li>
<li>如果库存充足，则扣减库存，然后将本次秒杀记录保存起来。然后返回1，表示成功。</li>
</ol>
<p>估计很多小伙伴，一开始都会按这样的思路写代码。但如果仔细想想会发现，这段代码有问题。</p>
<p>有什么问题呢？</p>
<p>如果在高并发下，有多个请求同时查询库存，当时都大于0。由于查询库存和更新库存非原则操作，则会出现库存为负数的情况，即<code>库存超卖</code>。</p>
<p>当然有人可能会说，加个<code>synchronized</code>不就解决问题？</p>
<p>调整后代码如下：</p>
<div class="language-ini" data-ext="ini" data-title="ini"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#98C379;--shiki-dark:#98C379">   boolean </span><span style="color:#C678DD;--shiki-dark:#C678DD">exist</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> redisClient.query(productId,userId)</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">;</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">   if(exist) {</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">    return -1</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">;</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">   }</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">   synchronized(this) {</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">       int </span><span style="color:#C678DD;--shiki-dark:#C678DD">stock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> redisClient.queryStock(productId)</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">;</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">       if(stock &lt;=0) {</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">         return 0</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">;</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">       }</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">       redisClient.incrby(productId, -1)</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">;</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">       redisClient.add(productId,userId)</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">;</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">   }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">return 1</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">;</span></span></code></pre>
</div><p>加<code>synchronized</code>确实能解决库存为负数问题，但是这样会导致接口性能急剧下降，每次查询都需要竞争同一把锁，显然不太合理。</p>
<p>为了解决上面的问题，代码优化如下：</p>
<div class="language-ini" data-ext="ini" data-title="ini"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#98C379;--shiki-dark:#98C379">boolean </span><span style="color:#C678DD;--shiki-dark:#C678DD">exist</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> redisClient.query(productId,userId)</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">;</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">if(exist) {</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  return -1</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">;</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">}</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">if(redisClient.incrby(productId, -1)&lt;0) {</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  return 0</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">;</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">}</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">redisClient.add(productId,userId)</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">;</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">return 1</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">;</span></span></code></pre>
</div><p>该代码主要流程如下：</p>
<ol>
<li>先判断该用户有没有秒杀过该商品，如果已经秒杀过，则直接返回-1。</li>
<li>扣减库存，判断返回值是否小于0，如果小于0，则直接返回0，表示库存不足。</li>
<li>如果扣减库存后，返回值大于或等于0，则将本次秒杀记录保存起来。然后返回1，表示成功。</li>
</ol>
<p>该方案咋一看，好像没问题。</p>
<p>但如果在高并发场景中，有多个请求同时扣减库存，大多数请求的incrby操作之后，结果都会小于0。</p>
<p>虽说，库存出现负数，不会出现<code>超卖的问题</code>。但由于这里是预减库存，如果负数值负的太多的话，后面万一要回退库存时，就会导致库存不准。</p>
<p>那么，有没有更好的方案呢？</p>
<h3>6.3 lua脚本扣减库存</h3>
<p>我们都知道lua脚本，是能够保证原子性的，它跟redis一起配合使用，能够完美解决上面的问题。</p>
<p>lua脚本有段非常经典的代码：</p>
<div class="language-ini" data-ext="ini" data-title="ini"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  StringBuilder </span><span style="color:#C678DD;--shiki-dark:#C678DD">lua</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> new StringBuilder()</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">;</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  lua.append(</span><span style="color:#98C379;--shiki-dark:#98C379">"if (redis.call('exists', KEYS[1]) == 1) then"</span><span style="color:#98C379;--shiki-dark:#98C379">)</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">;</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  lua.append(</span><span style="color:#98C379;--shiki-dark:#98C379">"    local stock = tonumber(redis.call('get', KEYS[1]));"</span><span style="color:#98C379;--shiki-dark:#98C379">)</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">;</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  lua.append(</span><span style="color:#98C379;--shiki-dark:#98C379">"    if (stock == -1) then"</span><span style="color:#98C379;--shiki-dark:#98C379">)</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">;</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  lua.append(</span><span style="color:#98C379;--shiki-dark:#98C379">"        return 1;"</span><span style="color:#98C379;--shiki-dark:#98C379">)</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">;</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  lua.append(</span><span style="color:#98C379;--shiki-dark:#98C379">"    end;"</span><span style="color:#98C379;--shiki-dark:#98C379">)</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">;</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  lua.append(</span><span style="color:#98C379;--shiki-dark:#98C379">"    if (stock &gt; 0) then"</span><span style="color:#98C379;--shiki-dark:#98C379">)</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">;</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  lua.append(</span><span style="color:#98C379;--shiki-dark:#98C379">"        redis.call('incrby', KEYS[1], -1);"</span><span style="color:#98C379;--shiki-dark:#98C379">)</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">;</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  lua.append(</span><span style="color:#98C379;--shiki-dark:#98C379">"        return stock;"</span><span style="color:#98C379;--shiki-dark:#98C379">)</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">;</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  lua.append(</span><span style="color:#98C379;--shiki-dark:#98C379">"    end;"</span><span style="color:#98C379;--shiki-dark:#98C379">)</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">;</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  lua.append(</span><span style="color:#98C379;--shiki-dark:#98C379">"    return 0;"</span><span style="color:#98C379;--shiki-dark:#98C379">)</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">;</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  lua.append(</span><span style="color:#98C379;--shiki-dark:#98C379">"end;"</span><span style="color:#98C379;--shiki-dark:#98C379">)</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">;</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">  lua.append(</span><span style="color:#98C379;--shiki-dark:#98C379">"return -1;"</span><span style="color:#98C379;--shiki-dark:#98C379">)</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">;</span></span></code></pre>
</div><p>该代码的主要流程如下：</p>
<ol>
<li>先判断商品id是否存在，如果不存在则直接返回。</li>
<li>获取该商品id的库存，判断库存如果是-1，则直接返回，表示不限制库存。</li>
<li>如果库存大于0，则扣减库存。</li>
<li>如果库存等于0，是直接返回，表示库存不足。</li>
</ol>
<h2>7. 分布式锁</h2>
<p>之前我提到过，在秒杀的时候，需要先从缓存中查商品是否存在，如果不存在，则会从数据库中查商品。如果数据库中，则将该商品放入缓存中，然后返回。如果数据库中没有，则直接返回失败。</p>
<p>大家试想一下，如果在高并发下，有大量的请求都去查一个缓存中不存在的商品，这些请求都会直接打到数据库。数据库由于承受不住压力，而直接挂掉。</p>
<p>那么如何解决这个问题呢？</p>
<p>这就需要用redis分布式锁了。</p>
<h3>7.1 setNx加锁</h3>
<p>使用redis的分布式锁，首先想到的是<code>setNx</code>命令。</p>
<div class="language-scss" data-ext="scss" data-title="scss"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">if (jedis.setnx(lockKey, val) == 1) {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   jedis.expire(lockKey, timeout);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
</div><p>用该命令其实可以加锁，但和后面的设置超时时间是分开的，并非原子操作。</p>
<p>假如加锁成功了，但是设置超时时间失败了，该lockKey就变成永不失效的了。在高并发场景中，该问题会导致非常严重的后果。</p>
<p>那么，有没有保证原子性的加锁命令呢？</p>
<h3>7.2 set加锁</h3>
<p>使用redis的set命令，它可以指定多个参数。</p>
<div class="language-kotlin" data-ext="kotlin" data-title="kotlin"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">String result </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> jedis.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(lockKey, requestId, </span><span style="color:#98C379;--shiki-dark:#98C379">"NX"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#98C379;--shiki-dark:#98C379">"PX"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, expireTime);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#98C379;--shiki-dark:#98C379">"OK"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">equals</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(result)) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    return</span><span style="color:#D19A66;--shiki-dark:#D19A66"> true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">return</span><span style="color:#D19A66;--shiki-dark:#D19A66"> false</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span></code></pre>
</div><p>其中：</p>
<ul>
<li>lockKey：锁的标识</li>
<li>requestId：请求id</li>
<li>NX：只在键不存在时，才对键进行设置操作。</li>
<li>PX：设置键的过期时间为 millisecond 毫秒。</li>
<li>expireTime：过期时间</li>
</ul>
<p>由于该命令只有一步，所以它是原子操作。</p>
<h3>7.3 释放锁</h3>
<p>接下来，有些朋友可能会问：在加锁时，既然已经有了lockKey锁标识，为什么要需要记录requestId呢？</p>
<p>答：requestId是在释放锁的时候用的。</p>
<div class="language-kotlin" data-ext="kotlin" data-title="kotlin"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (jedis.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(lockKey).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">equals</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(requestId)) {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    jedis.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">del</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(lockKey);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    return</span><span style="color:#D19A66;--shiki-dark:#D19A66"> true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">return</span><span style="color:#D19A66;--shiki-dark:#D19A66"> false</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span></code></pre>
</div><p>在释放锁的时候，只能释放自己加的锁，不允许释放别人加的锁。</p>
<p>这里为什么要用requestId，用userId不行吗？</p>
<p>答：如果用userId的话，假设本次请求流程走完了，准备删除锁。此时，巧合锁到了过期时间失效了。而另外一个请求，巧合使用的相同userId加锁，会成功。而本次请求删除锁的时候，删除的其实是别人的锁了。</p>
<p>当然使用lua脚本也能避免该问题：</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>if redis.call('get', KEYS[1]) == ARGV[1] then </span></span>
<span class="line"><span> return redis.call('del', KEYS[1]) </span></span>
<span class="line"><span>else </span></span>
<span class="line"><span>  return 0 </span></span>
<span class="line"><span>end</span></span></code></pre>
</div><p>它能保证查询锁是否存在和删除锁是原子操作。</p>
<h3>7.4 自旋锁</h3>
<p>上面的加锁方法看起来好像没有问题，但如果你仔细想想，如果有1万的请求同时去竞争那把锁，可能只有一个请求是成功的，其余的9999个请求都会失败。</p>
<p>在秒杀场景下，会有什么问题？</p>
<p>答：每1万个请求，有1个成功。再1万个请求，有1个成功。如此下去，直到库存不足。这就变成均匀分布的秒杀了，跟我们想象中的不一样。</p>
<p>如何解决这个问题呢？</p>
<p>答：使用自旋锁。</p>
<div class="language-kotlin line-numbers-mode" data-ext="kotlin" data-title="kotlin"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">try</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  Long start </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> System.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">currentTimeMillis</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">  while</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      String result </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> jedis.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(lockKey, requestId, </span><span style="color:#98C379;--shiki-dark:#98C379">"NX"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#98C379;--shiki-dark:#98C379">"PX"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, expireTime);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">     if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#98C379;--shiki-dark:#98C379">"OK"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">equals</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(result)) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#D19A66;--shiki-dark:#D19A66"> true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">     }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">     </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">     long time </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> System.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">currentTimeMillis</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> start;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">      if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (time</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">timeout) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">          return</span><span style="color:#D19A66;--shiki-dark:#D19A66"> false</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">      try</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">          Thread.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">sleep</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">50</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      } </span><span style="color:#C678DD;--shiki-dark:#C678DD">catch</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (InterruptedException e) {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">          e.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">printStackTrace</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">} </span><span style="color:#C678DD;--shiki-dark:#C678DD">finally</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">    unlock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(lockKey,requestId);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}  </span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">return</span><span style="color:#D19A66;--shiki-dark:#D19A66"> false</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在规定的时间，比如500毫秒内，自旋不断尝试加锁，如果成功则直接返回。如果失败，则休眠50毫秒，再发起新一轮的尝试。如果到了超时时间，还未加锁成功，则直接返回失败。</p>
<h3>7.5 redisson</h3>
<p>除了上面的问题之外，使用redis分布式锁，还有锁竞争问题、续期问题、锁重入问题、多个redis实例加锁问题等。</p>
<p>这些问题使用redisson可以解决，由于篇幅的原因，在这里先保留一点悬念，有疑问的私聊给我。后面会出一个专题介绍分布式锁，敬请期待。</p>
<h2>8 mq异步处理</h2>
<p>我们都知道在真实的秒杀场景中，有三个核心流程：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301159170.png" alt="image-20221012232118189" tabindex="0" loading="lazy"><figcaption>image-20221012232118189</figcaption></figure>
<p>而这三个核心流程中，真正并发量大的是秒杀功能，下单和支付功能实际并发量很小。所以，我们在设计秒杀系统时，有必要把下单和支付功能从秒杀的主流程中拆分出来，特别是下单功能要做成mq异步处理的。而支付功能，比如支付宝支付，是业务场景本身保证的异步。</p>
<p>于是，秒杀后下单的流程变成如下：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301159193.png" alt="image-20221012232217797" tabindex="0" loading="lazy"><figcaption>image-20221012232217797</figcaption></figure>
<p>如果使用mq，需要关注以下几个问题：</p>
<h3>8.1 消息丢失问题</h3>
<p>秒杀成功了，往mq发送下单消息的时候，有可能会失败。原因有很多，比如：网络问题、broker挂了、mq服务端磁盘问题等。这些情况，都可能会造成消息丢失。</p>
<p>那么，如何防止消息丢失呢？</p>
<p>答：加一张消息发送表。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301159215.png" alt="image-20221012232255237" tabindex="0" loading="lazy"><figcaption>image-20221012232255237</figcaption></figure>
<p>在生产者发送mq消息之前，先把该条消息写入消息发送表，初始状态是待处理，然后再发送mq消息。消费者消费消息时，处理完业务逻辑之后，再回调生产者的一个接口，修改消息状态为已处理。</p>
<p>如果生产者把消息写入消息发送表之后，再发送mq消息到mq服务端的过程中失败了，造成了消息丢失。</p>
<p>这时候，要如何处理呢？</p>
<p>答：使用job，增加重试机制。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301159236.png" alt="image-20221012232409013" tabindex="0" loading="lazy"><figcaption>image-20221012232409013</figcaption></figure>
<p>用job每隔一段时间去查询消息发送表中状态为待处理的数据，然后重新发送mq消息。</p>
<h3>8.2 重复消费问题</h3>
<p>本来消费者消费消息时，在ack应答的时候，如果网络超时，本身就可能会消费重复的消息。但由于消息发送者增加了重试机制，会导致消费者重复消息的概率增大。</p>
<p>那么，如何解决重复消息问题呢？</p>
<p>答：加一张消息处理表。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301159260.png" alt="image-20221012232510895" tabindex="0" loading="lazy"><figcaption>image-20221012232510895</figcaption></figure>
<p>消费者读到消息之后，先判断一下消息处理表，是否存在该消息，如果存在，表示是重复消费，则直接返回。如果不存在，则进行下单操作，接着将该消息写入消息处理表中，再返回。</p>
<p>有个比较关键的点是：下单和写消息处理表，要放在同一个事务中，保证原子操作。</p>
<h3>8.3 垃圾消息问题</h3>
<p>这套方案表面上看起来没有问题，但如果出现了消息消费失败的情况。比如：由于某些原因，消息消费者下单一直失败，一直不能回调状态变更接口，这样job会不停的重试发消息。最后，会产生大量的垃圾消息。</p>
<p>那么，如何解决这个问题呢？</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301159280.png" alt="image-20221012232629156" tabindex="0" loading="lazy"><figcaption>image-20221012232629156</figcaption></figure>
<p>每次在job重试时，需要先判断一下消息发送表中该消息的发送次数是否达到最大限制，如果达到了，则直接返回。如果没有达到，则将次数加1，然后发送消息。</p>
<p>这样如果出现异常，只会产生少量的垃圾消息，不会影响到正常的业务。</p>
<h3>8.4 延迟消费问题</h3>
<p>通常情况下，如果用户秒杀成功了，下单之后，在15分钟之内还未完成支付的话，该订单会被自动取消，回退库存。</p>
<p>那么，在15分钟内未完成支付，订单被自动取消的功能，要如何实现呢？</p>
<p>我们首先想到的可能是job，因为它比较简单。</p>
<p>但job有个问题，需要每隔一段时间处理一次，实时性不太好。</p>
<p>还有更好的方案？</p>
<p>答：使用延迟队列。</p>
<p>我们都知道rocketmq，自带了延迟队列的功能。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301159307.png" alt="image-20221012232742299" tabindex="0" loading="lazy"><figcaption>image-20221012232742299</figcaption></figure>
<p>下单时消息生产者会先生成订单，此时状态为待支付，然后会向延迟队列中发一条消息。达到了延迟时间，消息消费者读取消息之后，会查询该订单的状态是否为待支付。如果是待支付状态，则会更新订单状态为取消状态。如果不是待支付状态，说明该订单已经支付过了，则直接返回。</p>
<p>还有个关键点，用户完成支付之后，会修改订单状态为已支付。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301159331.png" alt="image-20221012232811544" tabindex="0" loading="lazy"><figcaption>image-20221012232811544</figcaption></figure>
<h2>9. 如何限流？</h2>
<p>通过秒杀活动，如果我们运气爆棚，可能会用非常低的价格买到不错的商品（这种概率堪比买福利彩票中大奖）。</p>
<p>但有些高手，并不会像我们一样老老实实，通过秒杀页面点击秒杀按钮，抢购商品。他们可能在自己的服务器上，模拟正常用户登录系统，跳过秒杀页面，直接调用秒杀接口。</p>
<p>如果是我们手动操作，一般情况下，一秒钟只能点击一次秒杀按钮。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301159352.png" alt="image-20221012232857313" tabindex="0" loading="lazy"><figcaption>image-20221012232857313</figcaption></figure>
<p>但是如果是服务器，一秒钟可以请求成上千接口。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301159376.png" alt="image-20221012232913511" tabindex="0" loading="lazy"><figcaption>image-20221012232913511</figcaption></figure>
<p>这种差距实在太明显了，如果不做任何限制，绝大部分商品可能是被机器抢到，而非正常的用户，有点不太公平。</p>
<p>所以，我们有必要识别这些非法请求，做一些限制。那么，我们该如何现在这些非法请求呢？</p>
<p>目前有两种常用的限流方式：</p>
<ol>
<li>基于nginx限流</li>
<li>基于redis限流</li>
</ol>
<h3>9.1 对同一用户限流</h3>
<p>为了防止某个用户，请求接口次数过于频繁，可以只针对该用户做限制。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301159400.png" alt="image-20221012232952088" tabindex="0" loading="lazy"><figcaption>image-20221012232952088</figcaption></figure>
<p>个用户id，比如每分钟只能请求5次接口。</p>
<h3>9.2 对同一ip限流</h3>
<p>有时候只对某个用户限流是不够的，有些高手可以模拟多个用户请求，这种nginx就没法识别了。</p>
<p>这时需要加同一ip限流功能。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301159426.png" alt="image-20221012233034189" tabindex="0" loading="lazy"><figcaption>image-20221012233034189</figcaption></figure>
<p>ip，比如每分钟只能请求5次接口。</p>
<p>但这种限流方式可能会有误杀的情况，比如同一个公司或网吧的出口ip是相同的，如果里面有多个正常用户同时发起请求，有些用户可能会被限制住。</p>
<h3>9.3 对接口限流</h3>
<p>别以为限制了用户和ip就万事大吉，有些高手甚至可以使用代理，每次都请求都换一个ip。</p>
<p>这时可以限制请求的接口总次数。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301159446.png" alt="image-20221012233124788" tabindex="0" loading="lazy"><figcaption>image-20221012233124788</figcaption></figure>
<p>在高并发场景下，这种限制对于系统的稳定性是非常有必要的。但可能由于有些非法请求次数太多，达到了该接口的请求上限，而影响其他的正常用户访问该接口。看起来有点得不偿失。</p>
<h3>9.4 加验证码</h3>
<p>相对于上面三种方式，加验证码的方式可能更精准一些，同样能限制用户的访问频次，但好处是不会存在误杀的情况。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301159472.png" alt="image-20221012233211809" tabindex="0" loading="lazy"><figcaption>image-20221012233211809</figcaption></figure>
<p>通常情况下，用户在请求之前，需要先输入验证码。用户发起请求之后，服务端会去校验该验证码是否正确。只有正确才允许进行下一步操作，否则直接返回，并且提示验证码错误。</p>
<p>此外，验证码一般是一次性的，同一个验证码只允许使用一次，不允许重复使用。</p>
<p>普通验证码，由于生成的数字或者图案比较简单，可能会被破解。优点是生成速度比较快，缺点是有安全隐患。</p>
<p>还有一个验证码叫做：<code>移动滑块</code>，它生成速度比较慢，但比较安全，是目前各大互联网公司的首选。</p>
<h3>9.5 提高业务门槛</h3>
<p>上面说的加验证码虽然可以限制非法用户请求，但是有些影响用户体验。用户点击秒杀按钮前，还要先输入验证码，流程显得有点繁琐，秒杀功能的流程不是应该越简单越好吗？</p>
<p>其实，有时候达到某个目的，不一定非要通过技术手段，通过业务手段也一样。</p>
<p>12306刚开始的时候，全国人民都在同一时刻抢火车票，由于并发量太大，系统经常挂。后来，重构优化之后，将购买周期放长了，可以提前20天购买火车票，并且可以在9点、10、11点、12点等整点购买火车票。调整业务之后（当然技术也有很多调整），将之前集中的请求，分散开了，一下子降低了用户并发量。</p>
<p>回到这里，我们通过提高业务门槛，比如只有会员才能参与秒杀活动，普通注册用户没有权限。或者，只有等级到达3级以上的普通用户，才有资格参加该活动。</p>
<p>这样简单的提高一点门槛，即使是黄牛党也束手无策，他们总不可能为了参加一次秒杀活动，还另外花钱充值会员吧？</p>
<h2>参考文章</h2>
<p><a href="https://juejin.cn/post/6990307911117307934" target="_blank" rel="noopener noreferrer">面试必考：秒杀系统要如何设计？</a></p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301159826.png" type="image/png"/>
    </item>
    <item>
      <title>mall中SKU的设计</title>
      <link>https://mrjackc.github.io/posts/Architect/mall/mall-sku.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/mall/mall-sku.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">mall中SKU的设计</source>
      <description>mall中SKU的设计 该篇文章主要参考mall官方文档，并结合自己的使用感受做的一些笔记 1. 简介 1.1 商品的SPU和SKU SPU（Standard Product Unit ）:指的是标准商品单位，商品信息聚合的最小单位，是一组可复用、易检索的标准化信息的集合，该集合描述了一个商品的特性； SKU（Stock Keeping Unit）:库...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<blockquote>
<p>该篇文章主要参考<a href="http://www.macrozheng.com/#/technology/product_sku" target="_blank" rel="noopener noreferrer">mall官方文档</a>，并结合自己的使用感受做的一些笔记</p>
</blockquote>
<h2>1. 简介</h2>
<h3>1.1 商品的SPU和SKU</h3>
<ul>
<li>SPU（Standard Product Unit ）:指的是标准商品单位，商品信息聚合的最小单位，是一组可复用、易检索的标准化信息的集合，该集合描述了一个商品的特性；</li>
<li>SKU（Stock Keeping Unit）:库存量单位，是物理上不可分割的最小存货单元。</li>
</ul>
<p>举个例子：比如说现在有个手机商品叫小米8，小米8有不同的属性，比如有它有黑色和蓝色的，有32G和64G版本的。<strong>此时<code>小米8</code>就是一个SPU，而<code>小米8黑色64G</code>就是一个SKU</strong>。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301216244.png" alt="image-20220319204336926" tabindex="0" loading="lazy"><figcaption>image-20220319204336926</figcaption></figure>
<h2>2. SKU 的数据库设计</h2>
<p>由于商品的销售属性是动态的，没法确定到底有多少个，此时我们可以改用JSON格式来存储，在<code>pms_sku_stock</code>表中添加了<code>sp_data</code>字段。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301216289.png" alt="image-20220319204927694" tabindex="0" loading="lazy"><figcaption>image-20220319204927694</figcaption></figure>
<p><code>sp_data</code>存储的就是一个JSON数组，比如颜色为黑色，容量为32G的手机存储信息如下。</p>
<div class="language-json" data-ext="json" data-title="json"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        "key"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">"颜色"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        "value"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">"黑色"</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        "key"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">"容量"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        "value"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">"32G"</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">]Copy to clipboardErrorCopied</span></span></code></pre>
</div><p>这样修改以后，在原来的购物车表<code>oms_cart_item</code>和订单商品表<code>oms_order_item</code>中就都可以用JSON格式来存储销售属性了，使用的是<code>product_attr</code>字段。</p>
<h2>3. Sku 的代码层设计</h2>
<h3>3.1 商品关联SKU的修改</h3>
<p>首先我们需要和前端约定下，新增的商品SKU信息不传ID，要修改的商品SKU信息传ID，删除的直接不传SKU信息。然后我们可以根据传入的SKU信息来确定需要新增、修改、删除的SKU信息，这样就可以做到在更新商品SKU信息时，不改变原来商品SKU的ID了，具体流程如下。</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 商品管理Service实现类</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * Created by macro on 2018/4/26.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Service</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> PmsProductServiceImpl</span><span style="color:#C678DD;--shiki-dark:#C678DD"> implements</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> PmsProductService</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> handleUpdateSkuStockList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PmsProductParam</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> productParam</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //当前的sku信息</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PmsSkuStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75">currSkuList</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> productParam</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getSkuStockList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //当前没有sku直接删除</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">CollUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isEmpty</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(currSkuList)){</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            PmsSkuStockExample</span><span style="color:#E06C75;--shiki-dark:#E06C75"> skuStockExample</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> PmsSkuStockExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            skuStockExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">createCriteria</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">andProductIdEqualTo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(id);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            skuStockMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">deleteByExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(skuStockExample);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //获取初始sku信息</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        PmsSkuStockExample</span><span style="color:#E06C75;--shiki-dark:#E06C75"> skuStockExample</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> PmsSkuStockExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        skuStockExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">createCriteria</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">andProductIdEqualTo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(id);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PmsSkuStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75">oriStuList</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> skuStockMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">selectByExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(skuStockExample);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //获取新增sku信息</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PmsSkuStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75">insertSkuList</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> currSkuList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">stream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">filter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(item</span><span style="color:#C678DD;--shiki-dark:#C678DD">-&gt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">collect</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Collectors</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">toList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //获取需要更新的sku信息</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PmsSkuStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75">updateSkuList</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> currSkuList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">stream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">filter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(item</span><span style="color:#C678DD;--shiki-dark:#C678DD">-&gt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!=</span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">collect</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Collectors</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">toList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75">updateSkuIds</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> updateSkuList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">stream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(PmsSkuStock</span><span style="color:#C678DD;--shiki-dark:#C678DD">::</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">getId).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">collect</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Collectors</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">toList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //获取需要删除的sku信息</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PmsSkuStock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75">removeSkuList</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> oriStuList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">stream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">filter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(item</span><span style="color:#C678DD;--shiki-dark:#C678DD">-&gt;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> !</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">updateSkuIds</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">contains</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">())).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">collect</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Collectors</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">toList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">        handleSkuStockCode</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(insertSkuList,id);</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">        handleSkuStockCode</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(updateSkuList,id);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //新增sku</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">CollUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isNotEmpty</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(insertSkuList)){</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">            relateAndInsertList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(skuStockDao, insertSkuList, id);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //删除sku</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">CollUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isNotEmpty</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(removeSkuList)){</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75">removeSkuIds</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> removeSkuList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">stream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(PmsSkuStock</span><span style="color:#C678DD;--shiki-dark:#C678DD">::</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">getId).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">collect</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Collectors</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">toList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            PmsSkuStockExample</span><span style="color:#E06C75;--shiki-dark:#E06C75"> removeExample</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> PmsSkuStockExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            removeExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">createCriteria</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">andIdIn</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(removeSkuIds);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            skuStockMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">deleteByExample</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(removeExample);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //修改sku</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">CollUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isNotEmpty</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(updateSkuList)){</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PmsSkuStock</span><span style="color:#E06C75;--shiki-dark:#E06C75"> pmsSkuStock</span><span style="color:#C678DD;--shiki-dark:#C678DD"> :</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> updateSkuList) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                skuStockMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">updateByPrimaryKeySelective</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(pmsSkuStock);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2>4. 相关问题</h2>
<h3>4.1 前端解析sku</h3>
<h4>4.1.1 Sku 设计背景</h4>
<p>后端返回的数据结构是针对每条sku 的笛卡尔积，</p>
<p>例如颜色有3种，尺寸有5个。那么后端返回的就是15条数据。</p>
<p>数据类似如下</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301216315.png" alt="image-20220309231416451" tabindex="0" loading="lazy"><figcaption>image-20220309231416451</figcaption></figure>
<p>但我们前端不可能直接显示30条数据，我们希望按类别来选择。</p>
<p>例如：先选颜色，再选尺寸。确定唯一的sku。那么上面的数据结构就不符合我们的要求了</p>
<h4>4.1.2 初始化SKU流程</h4>
<h5>4.1.2.1 将spData规格数据，按属性归类</h5>
<p>将sp的数据，封装成Set。达到去重目的</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>原始数据：</span></span>
<span class="line"><span>spData: "[{"key":"颜色","value":"绿色"},{"key":"尺寸","value":"X"}]"</span></span>
<span class="line"><span></span></span>
<span class="line"><span>按属性归类：</span></span>
<span class="line"><span>尺寸: Set(3) {"XL", "2XL", "X"} </span></span>
<span class="line"><span>颜色: Set(2) {"红色", "绿色"}</span></span></code></pre>
</div><p>我们需要前端做处理</p>
<div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">			// 将sp的数据，封装成对象.如{颜色：['红色','绿色'],尺寸：['X','XL']}</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">				let</span><span style="color:#E06C75;--shiki-dark:#E06C75"> specInfo</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {};</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">				for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD">let</span><span style="color:#E06C75;--shiki-dark:#E06C75"> i</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">; </span><span style="color:#E06C75;--shiki-dark:#E06C75">i</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> &lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> skuStockList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">length</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">; </span><span style="color:#E06C75;--shiki-dark:#E06C75">i</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">++</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">					let</span><span style="color:#E06C75;--shiki-dark:#E06C75"> item</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E06C75;--shiki-dark:#E06C75"> skuStockList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[</span><span style="color:#E06C75;--shiki-dark:#E06C75">i</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">];</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">					let</span><span style="color:#E06C75;--shiki-dark:#E06C75"> sp</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> JSON</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">parse</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">spData</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">					for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD">let</span><span style="color:#E06C75;--shiki-dark:#E06C75"> j</span><span style="color:#C678DD;--shiki-dark:#C678DD"> in</span><span style="color:#E06C75;--shiki-dark:#E06C75"> sp</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">						let</span><span style="color:#E06C75;--shiki-dark:#E06C75"> skuKey</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E06C75;--shiki-dark:#E06C75"> sp</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[</span><span style="color:#E06C75;--shiki-dark:#E06C75">j</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">].</span><span style="color:#E06C75;--shiki-dark:#E06C75">key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">						if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E06C75;--shiki-dark:#E06C75">specInfo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[</span><span style="color:#E06C75;--shiki-dark:#E06C75">skuKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">] </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">							specInfo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[</span><span style="color:#E06C75;--shiki-dark:#E06C75">skuKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">] </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">([]);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">						}</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">						specInfo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[</span><span style="color:#E06C75;--shiki-dark:#E06C75">skuKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">].</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E06C75;--shiki-dark:#E06C75">sp</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[</span><span style="color:#E06C75;--shiki-dark:#E06C75">j</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">].</span><span style="color:#E06C75;--shiki-dark:#E06C75">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">						item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[</span><span style="color:#E06C75;--shiki-dark:#E06C75">skuKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">] </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75"> sp</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[</span><span style="color:#E06C75;--shiki-dark:#E06C75">j</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">].</span><span style="color:#E06C75;--shiki-dark:#E06C75">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">					}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">				}</span></span></code></pre>
</div><h5>4.1.2.2 将归类数据封装成JSON 对象</h5>
<p>因为我们选中状态，还需要设置属性。所以我们需要一个对象来封装、我们将将set 转为list</p>
<p>原始数据按属性归类：</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>尺寸: Set(3) {"XL", "2XL", "X"} </span></span>
<span class="line"><span>颜色: Set(2) {"红色", "绿色"}</span></span></code></pre>
</div><p>转为list</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>尺寸: Array(3)</span></span>
<span class="line"><span>0: {value: "XL", selected: true}</span></span>
<span class="line"><span>1: {value: "2XL"}</span></span>
<span class="line"><span>2: {value: "X"}</span></span>
<span class="line"><span>颜色: Array(2)</span></span>
<span class="line"><span>0: {value: "红色", selected: true}</span></span>
<span class="line"><span>1: {value: "绿色"}</span></span></code></pre>
</div><p>由原来的xl变成了{value: "XL", selected: true}。selected 是为了方便设置选中情况</p>
<div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">				for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD">let</span><span style="color:#E06C75;--shiki-dark:#E06C75"> key</span><span style="color:#C678DD;--shiki-dark:#C678DD"> in</span><span style="color:#E06C75;--shiki-dark:#E06C75"> specInfo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">					let</span><span style="color:#E06C75;--shiki-dark:#E06C75"> dataSet</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E06C75;--shiki-dark:#E06C75"> specInfo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[</span><span style="color:#E06C75;--shiki-dark:#E06C75">key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">];</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">					var</span><span style="color:#E06C75;--shiki-dark:#E06C75"> list</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> [];</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">					for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD">var</span><span style="color:#E06C75;--shiki-dark:#E06C75"> k</span><span style="color:#C678DD;--shiki-dark:#C678DD"> of</span><span style="color:#E06C75;--shiki-dark:#E06C75"> dataSet</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">						list</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">push</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">({</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">							value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#E06C75;--shiki-dark:#E06C75">k</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">						});</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">					}</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">					specInfo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[</span><span style="color:#E06C75;--shiki-dark:#E06C75">key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">] </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75"> list</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">				}</span></span></code></pre>
</div><h5>4.1.2.3 设置默认选中</h5>
<p>循环还是上一步的循环，只是为每条规格，设置了默认值</p>
<div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">list</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">].</span><span style="color:#E06C75;--shiki-dark:#E06C75">selected</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">checkSku</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[</span><span style="color:#E06C75;--shiki-dark:#E06C75">key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">]</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75">list</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">].</span><span style="color:#E06C75;--shiki-dark:#E06C75">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span></code></pre>
</div><div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 选中的规格Spec: {颜色：'红色',尺码：'x'}</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">				let</span><span style="color:#E06C75;--shiki-dark:#E06C75"> checkSpec</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {};</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">				for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD">let</span><span style="color:#E06C75;--shiki-dark:#E06C75"> key</span><span style="color:#C678DD;--shiki-dark:#C678DD"> in</span><span style="color:#E06C75;--shiki-dark:#E06C75"> specInfo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">					let</span><span style="color:#E06C75;--shiki-dark:#E06C75"> dataSet</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E06C75;--shiki-dark:#E06C75"> specInfo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[</span><span style="color:#E06C75;--shiki-dark:#E06C75">key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">];</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">					var</span><span style="color:#E06C75;--shiki-dark:#E06C75"> list</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> [];</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">					for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD">var</span><span style="color:#E06C75;--shiki-dark:#E06C75"> k</span><span style="color:#C678DD;--shiki-dark:#C678DD"> of</span><span style="color:#E06C75;--shiki-dark:#E06C75"> dataSet</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">						list</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">push</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">({</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">							value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#E06C75;--shiki-dark:#E06C75">k</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">						});</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">					}</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">					specInfo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[</span><span style="color:#E06C75;--shiki-dark:#E06C75">key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">] </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75"> list</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">					list</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">].</span><span style="color:#E06C75;--shiki-dark:#E06C75">selected</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">					checkSpec</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[</span><span style="color:#E06C75;--shiki-dark:#E06C75">key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">]</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75">list</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">].</span><span style="color:#E06C75;--shiki-dark:#E06C75">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">				}</span></span></code></pre>
</div><h5>4.1.2.4 设置选中的库存信息</h5>
<p>我们刚一直在处理spData的数据，但我们spdata 要最终关联上库存信息</p>
<div class="language-json" data-ext="json" data-title="json"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">{</span><span style="color:#FFFFFF;--shiki-dark:#FFFFFF">id</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#D19A66;--shiki-dark:#D19A66">179</span></span>
<span class="line"><span style="color:#FFFFFF;--shiki-dark:#FFFFFF">lockStock:</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span></span>
<span class="line"><span style="color:#FFFFFF;--shiki-dark:#FFFFFF">lowStock:</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span></span>
<span class="line"><span style="color:#FFFFFF;--shiki-dark:#FFFFFF">price:</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 11</span></span>
<span class="line"><span style="color:#FFFFFF;--shiki-dark:#FFFFFF">productId:</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 37</span></span>
<span class="line"><span style="color:#FFFFFF;--shiki-dark:#FFFFFF">skuCode:</span><span style="color:#98C379;--shiki-dark:#98C379"> "sku1"</span></span>
<span class="line"><span style="color:#FFFFFF;--shiki-dark:#FFFFFF">spData:</span><span style="color:#98C379;--shiki-dark:#98C379"> "[{"</span><span style="color:#FFFFFF;--shiki-dark:#FFFFFF">key</span><span style="color:#98C379;--shiki-dark:#98C379">":"</span><span style="color:#FFFFFF;--shiki-dark:#FFFFFF">颜色</span><span style="color:#98C379;--shiki-dark:#98C379">","</span><span style="color:#FFFFFF;--shiki-dark:#FFFFFF">value</span><span style="color:#98C379;--shiki-dark:#98C379">":"</span><span style="color:#FFFFFF;--shiki-dark:#FFFFFF">红色</span><span style="color:#98C379;--shiki-dark:#98C379">"},{"</span><span style="color:#FFFFFF;--shiki-dark:#FFFFFF">key</span><span style="color:#98C379;--shiki-dark:#98C379">":"</span><span style="color:#FFFFFF;--shiki-dark:#FFFFFF">尺寸</span><span style="color:#98C379;--shiki-dark:#98C379">","</span><span style="color:#FFFFFF;--shiki-dark:#FFFFFF">value</span><span style="color:#98C379;--shiki-dark:#98C379">":"</span><span style="color:#FFFFFF;--shiki-dark:#FFFFFF">XL</span><span style="color:#98C379;--shiki-dark:#98C379">"}]"</span></span>
<span class="line"><span style="color:#FFFFFF;--shiki-dark:#FFFFFF">stock:</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
</div><p>我们将sku库存列表遍历对比选中的库存信息</p>
<div class="language-js line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 选择的sku item</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">			getCheckSukItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E06C75;--shiki-dark:#E06C75">checkSpec</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">){</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">				for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">let</span><span style="color:#E06C75;--shiki-dark:#E06C75"> i</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#E06C75;--shiki-dark:#E06C75">i</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">skuStockList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">length</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#E06C75;--shiki-dark:#E06C75">i</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">++</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">){</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">					let</span><span style="color:#E06C75;--shiki-dark:#E06C75"> item</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">skuStockList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[</span><span style="color:#E06C75;--shiki-dark:#E06C75">i</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">];</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">					let</span><span style="color:#E06C75;--shiki-dark:#E06C75"> isCheckItem</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">					for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">let</span><span style="color:#E06C75;--shiki-dark:#E06C75"> key</span><span style="color:#C678DD;--shiki-dark:#C678DD"> in</span><span style="color:#E06C75;--shiki-dark:#E06C75"> checkSpec</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">){</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">						let</span><span style="color:#E06C75;--shiki-dark:#E06C75"> v1</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E06C75;--shiki-dark:#E06C75">checkSpec</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[</span><span style="color:#E06C75;--shiki-dark:#E06C75">key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">];</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">						let</span><span style="color:#E06C75;--shiki-dark:#E06C75"> v2</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E06C75;--shiki-dark:#E06C75"> item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[</span><span style="color:#E06C75;--shiki-dark:#E06C75">key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">];</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">						if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E06C75;--shiki-dark:#E06C75">v1</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> !=</span><span style="color:#E06C75;--shiki-dark:#E06C75"> v2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">){</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">							isCheckItem</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> false</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">							break</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">						}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">					}</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">					if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E06C75;--shiki-dark:#E06C75">isCheckItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">){</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">						return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">					}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">					</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">				}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">			},</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301216337.png" alt="image-20220311222612306" tabindex="0" loading="lazy"><figcaption>image-20220311222612306</figcaption></figure>
<h4>4.1.3. 选中SKU 流程</h4>
<h5>4.1.3.1 选中状态设置</h5>
<p>针对选中的那个规则项列表做初始化选中状态，然后再设置选中项</p>
<p>例如：只初始化了颜色，设置成红色，而尺寸是不会改变的</p>
<div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">list</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">forEach</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">item</span><span style="color:#C678DD;--shiki-dark:#C678DD"> =&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">					this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">$set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E06C75;--shiki-dark:#E06C75">item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#98C379;--shiki-dark:#98C379">'selected'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;--shiki-dark:#D19A66">false</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">				})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">				this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">$set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E06C75;--shiki-dark:#E06C75">list</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[</span><span style="color:#E06C75;--shiki-dark:#E06C75">index</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">], </span><span style="color:#98C379;--shiki-dark:#98C379">'selected'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;--shiki-dark:#D19A66">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span></code></pre>
</div><h5>4.1.3.2 遍历出所有选中规格</h5>
<p>因为规格可能存在多个，上面我们只能得到一个。我们希望遍历出所有选中的规格</p>
<div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">let</span><span style="color:#E06C75;--shiki-dark:#E06C75"> checkSpec</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {}</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">				for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">let</span><span style="color:#E06C75;--shiki-dark:#E06C75"> key</span><span style="color:#C678DD;--shiki-dark:#C678DD"> in</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">specInfo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">){</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">					let</span><span style="color:#E06C75;--shiki-dark:#E06C75"> specList</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">specInfo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[</span><span style="color:#E06C75;--shiki-dark:#E06C75">key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">];</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">					for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">let</span><span style="color:#E06C75;--shiki-dark:#E06C75"> i</span><span style="color:#C678DD;--shiki-dark:#C678DD"> in</span><span style="color:#E06C75;--shiki-dark:#E06C75"> specList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">){</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">						let</span><span style="color:#E06C75;--shiki-dark:#E06C75"> spec</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E06C75;--shiki-dark:#E06C75"> specList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[</span><span style="color:#E06C75;--shiki-dark:#E06C75">i</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">];</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">						if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">spec</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">selected</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> ==</span><span style="color:#D19A66;--shiki-dark:#D19A66"> true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">){</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">							checkSpec</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[</span><span style="color:#E06C75;--shiki-dark:#E06C75">key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">] </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> spec</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">value</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">						}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">					}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">				}</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">				this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">checkSpec</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E06C75;--shiki-dark:#E06C75"> checkSpec</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span></code></pre>
</div><h5>4.1.3.3 获取选中的库存信息</h5>
<div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">let</span><span style="color:#E06C75;--shiki-dark:#E06C75"> specLength</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">keys</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">specInfo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#E06C75;--shiki-dark:#E06C75">length</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">let</span><span style="color:#E06C75;--shiki-dark:#E06C75"> checkSpecLength</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">keys</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E06C75;--shiki-dark:#E06C75">checkSpec</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#E06C75;--shiki-dark:#E06C75">length</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E06C75;--shiki-dark:#E06C75">specLength</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> ==</span><span style="color:#E06C75;--shiki-dark:#E06C75"> checkSpecLength</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">){</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">		this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">checkSukItem</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getCheckSukItem</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E06C75;--shiki-dark:#E06C75">checkSpec</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
</div><h3>4.2 商品信息中的价格和sku价格</h3>
<p>我们计算商品价格时，基本上都是以sku价格为准，那么商品基本信息中的价格，我们可以理解为商品的最低价格，也就是多少多少元起。具体多少钱，看你选择的sku了</p>
<h2>参考文章</h2>
<p><a href="http://www.macrozheng.com/#/technology/product_sku" target="_blank" rel="noopener noreferrer">mall官方文档</a></p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301216244.png" type="image/png"/>
    </item>
    <item>
      <title>mall框架使用感受</title>
      <link>https://mrjackc.github.io/posts/Architect/mall/mall-use-feeling.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/mall/mall-use-feeling.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">mall框架使用感受</source>
      <description>mall框架使用感受 1. 为什么选择mall 1.1 优点 功能丰富，代码 商品（商品，商品分类，sku） 订单完整流程（购物车下单，发货，确认收货，取消订单，退货） 当时的业务需求， 优惠券，促销等玩法 积分 商品推荐 秒杀 ​ mall 是完全能支持的，减少了二开的工作量。加快开发进度 1.2 缺点 代码生成模块不实用 sku 设计不够合理 选择...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 为什么选择mall</h2>
<h3>1.1 优点</h3>
<ul>
<li>
<p>功能丰富，代码</p>
<ul>
<li>商品（商品，商品分类，sku）</li>
<li>订单完整流程（购物车下单，发货，确认收货，取消订单，退货）</li>
</ul>
</li>
<li>
<p>当时的业务需求，</p>
<ul>
<li>
<p>优惠券，促销等玩法</p>
</li>
<li>
<p>积分</p>
</li>
<li>
<p>商品推荐</p>
</li>
<li>
<p>秒杀</p>
</li>
</ul>
</li>
</ul>
<p>​		mall 是完全能支持的，减少了二开的工作量。加快开发进度</p>
<h3>1.2 缺点</h3>
<ul>
<li>代码生成模块不实用</li>
<li>sku 设计不够合理
<ul>
<li>选择商品属性分类，后出现属性分类，然后刷新类表，要自己输入每件价格，很麻烦</li>
<li>刷新列表，刷新库存，刷新价格很混乱，用户压根不懂用</li>
</ul>
</li>
<li>缺少字典管理，非常多的魔法值，少了扩展性</li>
<li>代码活跃度不高，跟两三年前的版本基本没差别。
<ul>
<li>github 活跃度倒是挺高的，不过基本都是刷活跃度的，没有实质改动</li>
</ul>
</li>
</ul>
<h3>1.3 待完善的功能</h3>
<ul>
<li>
<p>缺少价格变更相关逻辑</p>
<ul>
<li>商品在加入购物车时就已经记录了价格，但是修改商品价格后并没有方式通知购物车</li>
</ul>
</li>
<li>
<p>返回购物车列表的时候没有返回库存量</p>
<ul>
<li>用户选购商品时，数量可以一直加。只能在结算的时候才发现</li>
<li>且在修改购物车商品数量的时候，也没有校验库存数量</li>
</ul>
</li>
<li>
<p>sku图片设置只能针对第一个属性设置单张图片</p>
<ul>
<li>希望针对每个规则能设置多张图片</li>
</ul>
</li>
<li>
<p>缺少商品评价功能</p>
<ul>
<li>不过国内服务的 UGC 都需要接入公安审计，这就很麻烦了。可能就不容易上架了</li>
</ul>
</li>
<li>
<p>余额功能</p>
</li>
<li>
<p>排序</p>
<ul>
<li>很多接口没有排序，或者只有sort 排序，但很多情况默认不设置的时候，应该按创建时间倒序</li>
</ul>
</li>
<li>
<p>运费模板</p>
<ul>
<li>设计了表，但还没有实现</li>
</ul>
</li>
<li>
<p>首页为假数据</p>
</li>
<li>
<p>导出功能</p>
</li>
<li></li>
</ul>
<h3>1.4 无关紧要的规范问题</h3>
<ul>
<li>代码中很多魔法值
<ul>
<li>例如订单状态，只有实体类备注，没有定义成常量或枚举，导致在代码中判断需要判断状态时都是魔法值</li>
</ul>
</li>
<li>有全局异常，且一直抛runtime</li>
</ul>
<h2>2. bug</h2>
<ul>
<li>订单计算优惠的时候，将总优惠平摊到各个商品（四舍五入了）。再加起来计算总优惠，这就导致金额错误</li>
<li></li>
</ul>
<h2>3.  吐槽点</h2>
<ol>
<li>
<p>多模块设计问题，项目分为admin后端服务和portal前端服务。service都写在各自的服务上，导致服务无法复用。</p>
<p>且已经抽离不懂了，当前阶段移动到基础库，关联的东西又太多</p>
</li>
</ol>
<h2>4. 适应自身项目的改造点</h2>
<ol>
<li>项目原本只有分类树，但我们商品数量比较小。只有一个公司的商品。类似于外卖平台，希望展示商品分类同时显示商品</li>
<li>日志模块，采用logback可以更灵活的配置</li>
<li>微信相关功能</li>
</ol>
<h2>5. 难点</h2>
<ol>
<li>生成订单时的逻辑。需要考虑的关联因素太多</li>
<li>各种促销规则玩法，关联性强。非常容易影响到其他商品与总价</li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>后台管理 - 用户认证SaToken</title>
      <link>https://mrjackc.github.io/posts/Architect/manage-system/manage-system-auth.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/manage-system/manage-system-auth.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">后台管理 - 用户认证SaToken</source>
      <description>后台管理 - 用户认证SaToken 1. 具体实现 1.1 用户登录 项目采用前后端分离架构（无 Cookie 模式） 所谓 Cookie ，本质上就是一个特殊的header参数而已， 而既然它只是一个 header 参数，我们就能手动模拟实现它，从而完成鉴权操作。 后端将 token 返回到前端 首先调用 StpUtil.login(id) 进行登...</description>
      <category>后台管理</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 具体实现</h2>
<h3>1.1 用户登录</h3>
<p>项目采用前后端分离架构（无 Cookie 模式）</p>
<blockquote>
<p>所谓 Cookie ，本质上就是一个特殊的<code>header</code>参数而已， 而既然它只是一个 header 参数，我们就能手动模拟实现它，从而完成鉴权操作。</p>
</blockquote>
<ul>
<li>
<p>后端将 token 返回到前端</p>
<ol>
<li>首先调用 <code>StpUtil.login(id)</code> 进行登录。</li>
<li>调用 <code>StpUtil.getTokenInfo()</code> 返回当前会话的 token 详细参数。</li>
</ol>
</li>
<li>
<p>前端将 token 提交到后端</p>
<ol start="3">
<li>将 token 塞到请求<code>header</code>里 ，格式为：<code>{tokenName: tokenValue}</code>。</li>
</ol>
</li>
</ul>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 登录</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> login</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> username</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> password) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        LoginUser</span><span style="color:#E06C75;--shiki-dark:#E06C75"> userInfo </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> remoteUserService</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getUserInfo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(username);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">        checkLogin</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">LoginType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PASSWORD</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> username</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> () </span><span style="color:#C678DD;--shiki-dark:#C678DD">-&gt;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> !</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">BCrypt</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">checkpw</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(password, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">userInfo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getPassword</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">())</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 获取登录token</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        LoginHelper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">loginByDevice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(userInfo, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DeviceType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PC</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">        recordLogininfor</span><span style="color:#E06C75;--shiki-dark:#E06C75">(username</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Constants</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">LOGIN_SUCCESS</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> MessageUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">message</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"user.login.success"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> StpUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getTokenValue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
</div><ul>
<li>
<p>SaHolder：Sa-Token上下文持有类，通过此类快速获取当前环境的相关对象</p>
<ul>
<li>SaHolder.getStorage(); // 获取当前请求的 [Storage] 对象</li>
</ul>
</li>
<li>
<p>StpUtil.login()</p>
<ul>
<li>检查此账号是否之前已有登录</li>
<li>为账号生成 <code>Token</code> 凭证与 <code>Session</code> 会话</li>
<li>通知全局侦听器，xx 账号登录成功</li>
<li>将 <code>Token</code> 注入到请求上下文</li>
<li>注：<strong>保存数据到SaTokenDao()</strong>，可以自己将数据改到redis 中保存</li>
<li>等等其它工作……</li>
</ul>
</li>
<li>
<p>存到本地ConcurrentHashMap： StpUtil.getTokenSession().set(LOGIN_USER_KEY, loginUser)</p>
</li>
</ul>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 登录系统 基于 设备类型</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 针对相同用户体系不同设备</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> loginUser</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 登录用户信息</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> loginByDevice</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">LoginUser</span><span style="color:#E06C75;--shiki-dark:#E06C75"> loginUser</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> DeviceType</span><span style="color:#E06C75;--shiki-dark:#E06C75"> deviceType) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        SaHolder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getStorage</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(LOGIN_USER_KEY, loginUser);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        StpUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">login</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">loginUser</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getLoginId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">deviceType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getDevice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">        setLoginUser</span><span style="color:#E06C75;--shiki-dark:#E06C75">(loginUser)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 设置用户数据(多级缓存)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> setLoginUser</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">LoginUser</span><span style="color:#E06C75;--shiki-dark:#E06C75"> loginUser) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        StpUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getTokenSession</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(LOGIN_USER_KEY, loginUser);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>1.2 权限认证</h3>
<p>权限认证问题的核心就是：</p>
<ol>
<li>如何获取一个账号所拥有的的权限码集合？</li>
<li>本次操作需要验证的权限码是哪个？</li>
</ol>
<blockquote>
<p>因为每个项目的需求不同，其权限设计也千变万化，因此 [ 获取当前账号权限码集合 ] 这一操作不可能内置到框架中， 所以 Sa-Token 将此操作以接口的方式暴露给你，以方便你根据自己的业务逻辑进行重写。</p>
</blockquote>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * sa-token 权限管理实现类</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SaPermissionImpl</span><span style="color:#C678DD;--shiki-dark:#C678DD"> implements</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> StpInterface</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 获取菜单权限列表</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getPermissionList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> loginId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> loginType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        LoginUser</span><span style="color:#E06C75;--shiki-dark:#E06C75"> loginUser</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> LoginHelper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getLoginUser</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        UserType</span><span style="color:#E06C75;--shiki-dark:#E06C75"> userType</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> UserType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getUserType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">loginUser</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getUserType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (userType </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> UserType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SYS_USER</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            return</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">loginUser</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getMenuPermission</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#C678DD;--shiki-dark:#C678DD"> if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (userType </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> UserType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">APP_USER</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 其他端 自行根据业务编写</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 获取角色权限列表</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getRoleList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> loginId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> loginType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        LoginUser</span><span style="color:#E06C75;--shiki-dark:#E06C75"> loginUser</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> LoginHelper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getLoginUser</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        UserType</span><span style="color:#E06C75;--shiki-dark:#E06C75"> userType</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> UserType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getUserType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">loginUser</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getUserType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (userType </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> UserType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SYS_USER</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            return</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">loginUser</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getRolePermission</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#C678DD;--shiki-dark:#C678DD"> if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (userType </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> UserType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">APP_USER</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 其他端 自行根据业务编写</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>1.3 微服务 - 网关统一鉴权</h3>
<ol>
<li>引入redis</li>
<li>实现鉴权接口</li>
</ol>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * sa-token 权限管理实现类</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@author</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> Lion Li</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SaPermissionImpl</span><span style="color:#C678DD;--shiki-dark:#C678DD"> implements</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> StpInterface</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 获取菜单权限列表</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getPermissionList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> loginId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> loginType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        LoginUser</span><span style="color:#E06C75;--shiki-dark:#E06C75"> loginUser</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> LoginHelper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getLoginUser</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        UserType</span><span style="color:#E06C75;--shiki-dark:#E06C75"> userType</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> UserType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getUserType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">loginUser</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getUserType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (userType </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> UserType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SYS_USER</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            return</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">loginUser</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getMenuPermission</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#C678DD;--shiki-dark:#C678DD"> if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (userType </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> UserType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">APP_USER</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 其他端 自行根据业务编写</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 获取角色权限列表</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getRoleList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> loginId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> loginType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        LoginUser</span><span style="color:#E06C75;--shiki-dark:#E06C75"> loginUser</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> LoginHelper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getLoginUser</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        UserType</span><span style="color:#E06C75;--shiki-dark:#E06C75"> userType</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> UserType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getUserType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">loginUser</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getUserType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (userType </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> UserType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SYS_USER</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            return</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">loginUser</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getRolePermission</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#C678DD;--shiki-dark:#C678DD"> if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (userType </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> UserType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">APP_USER</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 其他端 自行根据业务编写</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 获取用户(多级缓存)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> LoginUser</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getLoginUser</span><span style="color:#E06C75;--shiki-dark:#E06C75">() {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    LoginUser</span><span style="color:#E06C75;--shiki-dark:#E06C75"> loginUser </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (LoginUser) </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SaHolder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getStorage</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(LOGIN_USER_KEY);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (loginUser </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> loginUser</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    loginUser </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (LoginUser) </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">StpUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getTokenSession</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(LOGIN_USER_KEY);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    SaHolder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getStorage</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(LOGIN_USER_KEY, loginUser);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> loginUser</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
</div><p>3.注册全局过滤器</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * [Sa-Token 权限认证] 拦截器</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@author</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> Lion Li</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Configuration</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> AuthFilter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 注册 Sa-Token 全局过滤器</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Bean</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SaReactorFilter</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getSaReactorFilter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">IgnoreWhiteProperties</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> ignoreWhite</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> SaReactorFilter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 拦截地址</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">addInclude</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"/**"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setExcludeList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ignoreWhite</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getWhites</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">())</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">addExclude</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"/favicon.ico"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#98C379;--shiki-dark:#98C379">"/actuator/**"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 鉴权方法：每次访问进入</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setAuth</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(obj </span><span style="color:#C678DD;--shiki-dark:#C678DD">-&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // 登录校验 -- 拦截所有路由</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                SaRouter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">match</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"/**"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                    .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">check</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(r </span><span style="color:#C678DD;--shiki-dark:#C678DD">-&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                        // 检查是否登录 是否有token</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        StpUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">checkLogin</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                        // 有效率影响 用于临时测试</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                        // if (log.isDebugEnabled()) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                        //     log.debug("剩余有效时间: {}", StpUtil.getTokenTimeout());</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                        //     log.debug("临时有效时间: {}", StpUtil.getTokenActivityTimeout());</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                        // }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                    });</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            }).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setError</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(e </span><span style="color:#C678DD;--shiki-dark:#C678DD">-&gt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SaResult</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">error</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"认证失败，无法访问系统资源"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setCode</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">HttpStatus</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">UNAUTHORIZED</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>1.4 微服务 - 内部服务外网隔离（网关转发鉴权)</h3>
<h4>1.4.1 需求场景</h4>
<p>我们的子服务一般不能通过外网直接访问，必须通过网关转发才是一个合法的请求，这种子服务与外网的隔离一般分为两种：</p>
<ol>
<li>物理隔离：子服务部署在指定的内网环境中，只有网关对外网开放</li>
<li>逻辑隔离：子服务与网关同时暴露在外网，但是子服务会有一个权限拦截层保证只接受网关发送来的请求，绕过网关直接访问子服务会被提示：无效请求</li>
</ol>
<p>这种鉴权需求牵扯到两个环节：<strong><code>网关转发鉴权</code></strong>、<strong><code>服务内部调用鉴权</code></strong></p>
<p>Sa-Token提供两种解决方案：</p>
<ol>
<li>使用 OAuth2.0 模式的凭证式，将 Client-Token 用作各个服务的身份凭证进行权限校验</li>
<li>使用 Same-Token 模块提供的身份校验能力，完成服务间的权限认证</li>
</ol>
<h4>1.4.2 具体实现</h4>
<ol>
<li>
<p>引入依赖</p>
</li>
<li>
<h5>网关处添加Same-Token</h5>
<p>为网关添加全局过滤器：</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 全局过滤器，为请求添加 Same-Token </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Component</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ForwardAuthFilter</span><span style="color:#C678DD;--shiki-dark:#C678DD"> implements</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> GlobalFilter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Mono</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Void</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> filter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ServerWebExchange</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> exchange</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">GatewayFilterChain</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> chain</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        ServerHttpRequest</span><span style="color:#E06C75;--shiki-dark:#E06C75"> newRequest</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> exchange</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getRequest</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">mutate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // 为请求追加 Same-Token 参数 </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">header</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SaSameUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SAME_TOKEN</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SaSameUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getToken</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">())</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        ServerWebExchange</span><span style="color:#E06C75;--shiki-dark:#E06C75"> newExchange</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> exchange</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">mutate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">request</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(newRequest).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> chain</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">filter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(newExchange);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此过滤器会为 Request 请求头追加 <code>Same-Token</code> 参数，这个参数会被转发到子服务</p>
</li>
<li>
<p>在子服务里校验参数</p>
</li>
</ol>
<p>在子服务添加过滤器校验参数</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * Sa-Token 权限认证 配置类 </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Configuration</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SaTokenConfigure</span><span style="color:#C678DD;--shiki-dark:#C678DD"> implements</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> WebMvcConfigurer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 注册 Sa-Token 全局过滤器 </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Bean</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SaServletFilter</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getSaServletFilter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> SaServletFilter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">addInclude</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"/**"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">addExclude</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"/favicon.ico"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setAuth</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(obj </span><span style="color:#C678DD;--shiki-dark:#C678DD">-&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    // 校验 Same-Token 身份凭证     —— 以下两句代码可简化为：SaSameUtil.checkCurrentRequestToken(); </span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> token</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SaHolder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getRequest</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getHeader</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SaSameUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SAME_TOKEN</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    SaSameUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">checkToken</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(token);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                })</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setError</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(e </span><span style="color:#C678DD;--shiki-dark:#C678DD">-&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                    return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SaResult</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">error</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">e</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getMessage</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                })</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                ;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol>
<li>Same-Token 模块详解</li>
</ol>
<p>Same-Token —— 专门解决同源系统互相调用时的身份认证校验，它的作用不仅局限于微服务调用场景</p>
<p>基本使用流程为：服务调用方获取Token，提交到请求中，被调用方取出Token进行校验：Token一致则校验通过，否则拒绝服务</p>
<h3>1.5 单点登录模块</h3>
<p>凡是稍微上点规模的系统，统一认证中心都是绕不过去的槛。而单点登录——便是我们搭建统一认证中心的关键。</p>
<h4>1.5.1 什么是单点登录</h4>
<p><strong><code>在多个互相信任的系统中，用户只需登录一次，就可以访问所有系统。</code></strong></p>
<h4>1.5.2 架构选型</h4>
<p>Sa-Token-SSO 由简入难划分为三种模式，解决不同架构下的 SSO 接入问题：</p>
<p>| 系统架构               | 采用模式 | 简介             | 文档链接                                                                                                                                                 |<br>
|</p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301218486.png" type="image/png"/>
    </item>
    <item>
      <title>代码生成功能&amp;实现思路</title>
      <link>https://mrjackc.github.io/posts/Architect/manage-system/manage-system-code-gen.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/manage-system/manage-system-code-gen.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">代码生成功能&amp;实现思路</source>
      <description>代码生成功能&amp;实现思路 1. 简介 大部分项目里其实有很多代码都是重复的，几乎每个基础模块的代码都有增删改查的功能，而这些功能都是大同小异，如果这些功能都要自己去写，将会大大浪费我们的精力和降低。所以这种重复性的代码可以使用代码生成。 2. 代码生成设计思路 2.1 项目组成部分 我们java 项目的构成主要如下 后端代码 controller ser...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 简介</h2>
<p>大部分项目里其实有很多代码都是重复的，几乎每个基础模块的代码<strong>都有增删改查的功能</strong>，而这些功能都是大同小异，如果这些功能都要自己去写，将会大大浪费我们的精力和降低。所以这种重复性的代码可以使用代码生成。</p>
<h2>2. 代码生成设计思路</h2>
<h3>2.1 项目组成部分</h3>
<p>我们java 项目的构成主要如下</p>
<ul>
<li>
<p>后端代码</p>
<ul>
<li>controller</li>
<li>service
<ul>
<li>serviceImpl</li>
</ul>
</li>
<li>mapper</li>
<li>Mapper.xml(mybatis)</li>
<li>domain</li>
</ul>
</li>
<li>
<p>前端</p>
<ul>
<li>对应的vue增删改查</li>
<li>vue 接口的api</li>
</ul>
</li>
<li>
<p>sql代码</p>
<p>如果项目中设计到后台配置菜单，那么也需要将菜单sql生成出来</p>
</li>
</ul>
<h3>2.2 生成的目标</h3>
<ul>
<li>希望生成项目模块中所有代码。
<ul>
<li>如果只引入 <code>mybatis generator</code> 这类工具，只能解决mapper 层的问题。而且sql 非常不清晰，完全无法复用</li>
</ul>
</li>
<li>生成的代码可以自定义配置，而不是一成不变的</li>
<li>生成的代码扩展性要强，新增模板方便
<ul>
<li>增加批量删除功能</li>
<li>增加批量新增和修改mapper</li>
</ul>
</li>
</ul>
<h3>2.3 实现思路</h3>
<ul>
<li>使用模板引擎根据我们的项目结构生成前后端模板代码</li>
</ul>
<h2>3. 数据库设计</h2>
<h3>3.1 代码生成业务表</h3>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">--</span></span></code></pre>
</div>]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301219149.png" type="image/png"/>
    </item>
    <item>
      <title>系统参数配置功能&amp;实现思路</title>
      <link>https://mrjackc.github.io/posts/Architect/manage-system/manage-system-config-manage.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/manage-system/manage-system-config-manage.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">系统参数配置功能&amp;实现思路</source>
      <description>系统参数配置功能&amp;实现思路 1. 简介 我们在项目部署后很多配置需要根据现场情况配置。如第三方对接的api接口地址等等。如果我们每次改动都要改动代码或重启项目，那么效率也太低了。所以我们一般会设计一个参数管理功能，来实现后台配置 2. 数据库设计 注：系统内置参数是不能删除的 3. 代码实现注意事项 3.1 项目启动时就需要加载进缓存 3.2 查找参数...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 简介</h2>
<p>我们在项目部署后很多配置需要根据现场情况配置。如第三方对接的api接口地址等等。如果我们每次改动都要改动代码或重启项目，那么效率也太低了。所以我们一般会设计一个参数管理功能，来实现后台配置</p>
<h2>2. 数据库设计</h2>
<div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">create</span><span style="color:#C678DD;--shiki-dark:#C678DD"> table</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> sys_config</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    config_id    </span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) auto_increment comment </span><span style="color:#98C379;--shiki-dark:#98C379">'参数主键'</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        primary key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    config_name  </span><span style="color:#C678DD;--shiki-dark:#C678DD">varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">100</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">default</span><span style="color:#98C379;--shiki-dark:#98C379"> ''</span><span style="color:#C678DD;--shiki-dark:#C678DD">  null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> comment </span><span style="color:#98C379;--shiki-dark:#98C379">'参数名称'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    config_key   </span><span style="color:#C678DD;--shiki-dark:#C678DD">varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">100</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">default</span><span style="color:#98C379;--shiki-dark:#98C379"> ''</span><span style="color:#C678DD;--shiki-dark:#C678DD">  null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> comment </span><span style="color:#98C379;--shiki-dark:#98C379">'参数键名'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    config_value </span><span style="color:#C678DD;--shiki-dark:#C678DD">varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">500</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">default</span><span style="color:#98C379;--shiki-dark:#98C379"> ''</span><span style="color:#C678DD;--shiki-dark:#C678DD">  null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> comment </span><span style="color:#98C379;--shiki-dark:#98C379">'参数键值'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    config_type  </span><span style="color:#C678DD;--shiki-dark:#C678DD">char</span><span style="color:#C678DD;--shiki-dark:#C678DD">         default</span><span style="color:#98C379;--shiki-dark:#98C379"> 'N'</span><span style="color:#C678DD;--shiki-dark:#C678DD"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> comment </span><span style="color:#98C379;--shiki-dark:#98C379">'系统内置（Y是 N否）'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    create_by    </span><span style="color:#C678DD;--shiki-dark:#C678DD">varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">64</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)  </span><span style="color:#C678DD;--shiki-dark:#C678DD">default</span><span style="color:#98C379;--shiki-dark:#98C379"> ''</span><span style="color:#C678DD;--shiki-dark:#C678DD">  null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> comment </span><span style="color:#98C379;--shiki-dark:#98C379">'创建者'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    create_time  </span><span style="color:#C678DD;--shiki-dark:#C678DD">datetime</span><span style="color:#C678DD;--shiki-dark:#C678DD">                 null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> comment </span><span style="color:#98C379;--shiki-dark:#98C379">'创建时间'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    update_by    </span><span style="color:#C678DD;--shiki-dark:#C678DD">varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">64</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)  </span><span style="color:#C678DD;--shiki-dark:#C678DD">default</span><span style="color:#98C379;--shiki-dark:#98C379"> ''</span><span style="color:#C678DD;--shiki-dark:#C678DD">  null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> comment </span><span style="color:#98C379;--shiki-dark:#98C379">'更新者'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    update_time  </span><span style="color:#C678DD;--shiki-dark:#C678DD">datetime</span><span style="color:#C678DD;--shiki-dark:#C678DD">                 null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> comment </span><span style="color:#98C379;--shiki-dark:#98C379">'更新时间'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    remark       </span><span style="color:#C678DD;--shiki-dark:#C678DD">varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">500</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)             </span><span style="color:#C678DD;--shiki-dark:#C678DD">null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> comment </span><span style="color:#98C379;--shiki-dark:#98C379">'备注'</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    comment </span><span style="color:#98C379;--shiki-dark:#98C379">'参数配置表'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注：系统内置参数是不能删除的</p>
<h2>3. 代码实现注意事项</h2>
<h3>3.1 项目启动时就需要加载进缓存</h3>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Service</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SysConfigServiceImpl</span><span style="color:#C678DD;--shiki-dark:#C678DD"> implements</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SysConfigService</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">{</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 项目启动时，初始化参数到缓存</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PostConstruct</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> init</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">        loadingConfigCache</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  	/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 加载参数缓存数据</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> loadingConfigCache</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SysConfig</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75">configsList</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> configMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">selectConfigList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> SysConfig</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SysConfig</span><span style="color:#E06C75;--shiki-dark:#E06C75"> config</span><span style="color:#C678DD;--shiki-dark:#C678DD"> :</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> configsList)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            redisCache</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setCacheObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getCacheKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">config</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getConfigKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">config</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getConfigValue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>3.2 查找参数时，先查缓存，再查数据库，数据库查到要插入缓存</h3>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 根据键名查询参数配置信息</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> configKey</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 参数key</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@return</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 参数键值</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> selectConfigByKey</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> configKey)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> configValue </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Convert</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">toStr</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">redisCache</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getCacheObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getCacheKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(configKey)));</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">StringUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isNotEmpty</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(configValue)</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> configValue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        SysConfig</span><span style="color:#E06C75;--shiki-dark:#E06C75"> config </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> SysConfig</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        config</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setConfigKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(configKey);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        SysConfig</span><span style="color:#E06C75;--shiki-dark:#E06C75"> retConfig </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> configMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">selectConfig</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(config);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">StringUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isNotNull</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(retConfig)</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            redisCache</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setCacheObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getCacheKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(configKey), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">retConfig</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getConfigValue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> retConfig</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getConfigValue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> StringUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">EMPTY</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>3.3 插入和更新成功时需要更新单项缓存</h3>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 新增参数配置</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> config</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 参数配置信息</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@return</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 结果</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> int</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> insertConfig</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SysConfig</span><span style="color:#E06C75;--shiki-dark:#E06C75"> config)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> row </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> configMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">insertConfig</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(config);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (row </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            redisCache</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setCacheObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getCacheKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">config</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getConfigKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">config</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getConfigValue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> row</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 修改参数配置</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> config</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 参数配置信息</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@return</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 结果</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> int</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> updateConfig</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SysConfig</span><span style="color:#E06C75;--shiki-dark:#E06C75"> config)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> row </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> configMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">updateConfig</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(config);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (row </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            redisCache</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setCacheObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getCacheKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">config</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getConfigKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">config</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getConfigValue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> row</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>3.4 删除时记得清除缓存</h3>
<p>如果是内置参数，则不能清除</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 批量删除参数信息</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> configIds</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 需要删除的参数ID</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@return</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 结果</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> deleteConfigByIds</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#E06C75;--shiki-dark:#E06C75">[] configIds)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> configId </span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> configIds)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            SysConfig</span><span style="color:#E06C75;--shiki-dark:#E06C75"> config </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> selectConfigById</span><span style="color:#E06C75;--shiki-dark:#E06C75">(configId)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">StringUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">equals</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">UserConstants</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">YES</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">config</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getConfigType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">())</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                throw</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> CustomException</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">format</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"内置参数【%1$s】不能删除 "</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">config</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getConfigKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">())</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            }</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            configMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">deleteConfigById</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(configId);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            redisCache</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">deleteObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getCacheKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">config</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getConfigKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()));</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>3.5 需要有刷新重置缓存功能</h3>
<p>方便用户在前端操作，快速生效</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 重置参数缓存数据</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> resetConfigCache</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">        clearConfigCache</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">        loadingConfigCache</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 清空参数缓存数据</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> clearConfigCache</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Collection</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> keys </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> redisCache</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">keys</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Constants</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SYS_CONFIG_KEY</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#98C379;--shiki-dark:#98C379"> "*"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        redisCache</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">deleteObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(keys);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 加载参数缓存数据</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> loadingConfigCache</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SysConfig</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> configsList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> configMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">selectConfigList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> SysConfig</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SysConfig</span><span style="color:#E06C75;--shiki-dark:#E06C75"> config </span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> configsList)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            redisCache</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setCacheObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getCacheKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">config</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getConfigKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">config</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getConfigValue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2>4. 最终实现效果</h2>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301220890.png" alt="image-20211009222956436" tabindex="0" loading="lazy"><figcaption>image-20211009222956436</figcaption></figure>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301220890.png" type="image/png"/>
    </item>
    <item>
      <title>数据权限功能&amp;实现思路</title>
      <link>https://mrjackc.github.io/posts/Architect/manage-system/manage-system-data-scope.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/manage-system/manage-system-data-scope.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">数据权限功能&amp;实现思路</source>
      <description>数据权限功能&amp;实现思路 1. 背景 在实际开发中，需要设置用户只能查看哪些部门的数据，这种情况一般称为数据权限。例如 销售，财务的数据，它们是非常敏感的，因此要求对数据权限进行控制 基于集团性的应用系统而言，就更多需要控制好各自公司数据了， 如设置只能查看本公司、或者本部门的数据 对于特殊领导，可能需要跨部门的数据 因此程序不能硬编码哪个领导该访问那些...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 背景</h2>
<p>在实际开发中，需要设置用户只能查看哪些部门的数据，这种情况一般称为数据权限。例如</p>
<ul>
<li>销售，财务的数据，它们是非常敏感的，因此要求对数据权限进行控制</li>
<li>基于集团性的应用系统而言，就更多需要控制好各自公司数据了，
<ul>
<li>如设置只能查看本公司、或者本部门的数据</li>
<li>对于特殊领导，可能需要跨部门的数据</li>
</ul>
</li>
</ul>
<p>因此程序不能硬编码哪个领导该访问那些数据，需要进行后台的权限和数据权限的控制。</p>
<blockquote>
<p>提示</p>
<p>默认系统管理员<code>admin</code>拥有所有数据权限<code>（userId=1）</code>，默认角色拥有所有数据权限（如不需要数据权限不用设置数据权限操作）</p>
</blockquote>
<h2>2.注解参数说明</h2>
<p>| 参数      | 类型   | 默认值 | 描述         |<br>
|</p>
]]></content:encoded>
    </item>
    <item>
      <title>分页插件的二次封装</title>
      <link>https://mrjackc.github.io/posts/Architect/manage-system/manage-system-db-page.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/manage-system/manage-system-db-page.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">分页插件的二次封装</source>
      <description>分页插件的二次封装 1. 简介 分页是在项目中非常常见的需求。如果每次都要在业务代码中嵌入分页代码，将会 非常繁琐 影响业务代码的阅读 不同数据库分页写法不一，数据库迁移困难 还需要额外写计算总数count sql 2. 设计思路 与前端约定分页参数 约定好的参数，我们就不需要每次写。通过Servlet 的request 就可以获取到参数 如果有传递分...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h3>1. 简介</h3>
<p>分页是在项目中非常常见的需求。如果每次都要在业务代码中嵌入分页代码，将会</p>
<ul>
<li>非常繁琐</li>
<li>影响业务代码的阅读</li>
<li>不同数据库分页写法不一，数据库迁移困难</li>
<li>还需要额外写计算总数count sql</li>
</ul>
<h2>2. 设计思路</h2>
<ol>
<li>
<p>与前端约定分页参数</p>
<p>约定好的参数，我们就不需要每次写。通过<code>Servlet</code> 的request 就可以获取到参数</p>
</li>
<li>
<p>如果有传递分页参数就进行分页</p>
</li>
<li>
<p>针对返回值也进行封装，计算分页前的总条数</p>
</li>
</ol>
<h2>3. 源码阅读</h2>
<h3>3.1 分页请求参数</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301220088.png" alt="image-20211022213635796" tabindex="0" loading="lazy"><figcaption>image-20211022213635796</figcaption></figure>
<p>我们在 BaseController中定义startPage 方法，调用此方法则代表要做分页操作。</p>
<h3>3.2 参数获取</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301220136.png" alt="image-20211022213809675" tabindex="0" loading="lazy"><figcaption>image-20211022213809675</figcaption></figure>
<p>Servlet 中的实现</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301220165.png" alt="image-20211022213930030" tabindex="0" loading="lazy"><figcaption>image-20211022213930030</figcaption></figure>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301220194.png" alt="image-20211022214008185" tabindex="0" loading="lazy"><figcaption>image-20211022214008185</figcaption></figure>
<h3>3.3 返回封装</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301220227.png" alt="image-20211022214059348" tabindex="0" loading="lazy"><figcaption>image-20211022214059348</figcaption></figure>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301220088.png" type="image/png"/>
    </item>
    <item>
      <title>若依支持分布式场景需要考虑的地方</title>
      <link>https://mrjackc.github.io/posts/Architect/manage-system/manage-system-distributed-problem.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/manage-system/manage-system-distributed-problem.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">若依支持分布式场景需要考虑的地方</source>
      <description>若依支持分布式场景需要考虑的地方 主要考虑以下几个方向 主键问题 分布式锁 1. 主键问题 当前是数据库主键自增，需要权衡项目是否需要采用分布式id。 主要考虑点 数据量是否非常大（想想推特每秒上万条消息的请求，自己的数据量能比吗） 数据库主从读写分离，是否就已经能满足了？ 2. 分布式锁 其实这个哪怕是单体应用某些场景也是需要分布式锁的，这个必须加上</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<p>主要考虑以下几个方向</p>
<ul>
<li>主键问题</li>
<li>分布式锁</li>
</ul>
<h3>1. 主键问题</h3>
<p>当前是数据库主键自增，需要权衡项目是否需要采用分布式id。</p>
<p>主要考虑点</p>
<ul>
<li>数据量是否非常大（想想推特每秒上万条消息的请求，自己的数据量能比吗）</li>
<li>数据库主从读写分离，是否就已经能满足了？</li>
</ul>
<h3>2. 分布式锁</h3>
<p>其实这个哪怕是单体应用某些场景也是需要分布式锁的，这个必须加上</p>
]]></content:encoded>
    </item>
    <item>
      <title>多数据源的支持</title>
      <link>https://mrjackc.github.io/posts/Architect/manage-system/manage-system-dynamic-ds.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/manage-system/manage-system-dynamic-ds.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">多数据源的支持</source>
      <description>多数据源的支持 1. 简介 在实际开发中，经常可能遇到在一个应用中可能需要访问多个数据库的情况，那么我们如何实现访问不同接口时，指向不同的数据库呢。 2. 实现思路 2.1 如何侵入性最小实现？ 我们需要根据不同的接口访问不同的数据源。对代码侵入最小的肯定是定义注解 2.2 支持优先级 希望能同时直接类和方法上使用该注解，先方法，后类，如果方法覆盖了类...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 简介</h2>
<p>在实际开发中，经常可能遇到在一个应用中可能需要访问多个数据库的情况，那么我们如何实现访问不同接口时，指向不同的数据库呢。</p>
<h2>2. 实现思路</h2>
<h3>2.1 如何侵入性最小实现？</h3>
<p>我们需要根据不同的接口访问不同的数据源。对代码侵入最小的肯定是定义注解</p>
<h3>2.2 支持优先级</h3>
<p>希望能同时直接类和方法上使用该注解，先方法，后类，如果方法覆盖了类上的数据源类型，以方法的为准，否则以类上的为准。</p>
<p>实现思路先查方法，再查类就可以了</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 获取需要切换的数据源</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> DataSource</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getDataSource</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ProceedingJoinPoint</span><span style="color:#E06C75;--shiki-dark:#E06C75"> point)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">{</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    MethodSignature</span><span style="color:#E06C75;--shiki-dark:#E06C75"> signature </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (MethodSignature) </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">point</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getSignature</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    DataSource</span><span style="color:#E06C75;--shiki-dark:#E06C75"> dataSource </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> AnnotationUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">findAnnotation</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">signature</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getMethod</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DataSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Objects</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">nonNull</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(dataSource)</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> dataSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> AnnotationUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">findAnnotation</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">signature</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getDeclaringType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DataSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
</div><h3>2.3 切换数据源后，要再切回默认的</h3>
<p>如果切换了数据源，那么下一次的数据源应该还要是默认的</p>
<ul>
<li>执行前设置动态数据源</li>
<li>执行后清除</li>
</ul>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">StringUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isNotNull</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(dataSource)</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">{</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    DynamicDataSourceContextHolder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setDataSourceType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">dataSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">try</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">{</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> point</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">proceed</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">finally</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 销毁数据源 在执行方法之后</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    DynamicDataSourceContextHolder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">clearDataSourceType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
</div><h3>2.4 如何切换数据源</h3>
<p>Spring boot提供了AbstractRoutingDataSource 根据用户定义的规则选择当前的数据源。我们可以借助他实现</p>
<h3>2.5 切换后如何不影响其他程序</h3>
<p>使用ThreadLocal维护变量，ThreadLocal为每个使用该变量的线程提供独立的变量副本，所以每一个线程都可以独立地改变自己的副本，而不会影响其它线程所对应的副本。</p>
<h2>3. 多数据源使用</h2>
<ol>
<li>
<p>在<code>application-druid.yml</code>配置从库数据源</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75"># 从库数据源</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">slave</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  # 从数据源开关</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">/</span><span style="color:#E06C75;--shiki-dark:#E06C75">默认关闭</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  enabled</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#D19A66;--shiki-dark:#D19A66"> true</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  url</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> jdbc</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75">mysql</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//localhost:3306/test?useUnicode=true&amp;characterEncoding=utf8&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=true&amp;serverTimezone=GMT%2B8</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  username</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> root</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  password</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> password</span></span></code></pre>
</div></li>
<li>
<p>在<code>DataSourceType</code>类添加数据源枚举</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 从库</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">SLAVE</span></span></code></pre>
</div></li>
<li>
<p>在<code>DruidConfig</code>配置读取数据源</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Bean</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ConfigurationProperties</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"spring.datasource.druid.slave"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ConditionalOnProperty</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">prefix</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "spring.datasource.druid.slave"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66"> name</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "enabled"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66"> havingValue</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "true"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> DataSource</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> slaveDataSource</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DruidProperties</span><span style="color:#E06C75;--shiki-dark:#E06C75"> druidProperties)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">{</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">	DruidDataSource</span><span style="color:#E06C75;--shiki-dark:#E06C75"> dataSource </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> DruidDataSourceBuilder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">create</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">	return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> druidProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">dataSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(dataSource);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
</div></li>
<li>
<p>在<code>DruidConfig</code>类<code>dataSource</code>方法添加数据源</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">setDataSource</span><span style="color:#E06C75;--shiki-dark:#E06C75">(targetDataSources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> DataSourceType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SLAVE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(),</span><span style="color:#98C379;--shiki-dark:#98C379"> "slaveDataSource"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span></code></pre>
</div></li>
<li>
<p>在需要使用多数据源方法或类上添加<code>@DataSource</code>注解，其中<code>value</code>用来表示数据源</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DataSource</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> DataSourceType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SLAVE</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> List</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">SysUser</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> selectUserList</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SysUser</span><span style="color:#E06C75;--shiki-dark:#E06C75"> user)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">{</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">	return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> userMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">selectUserList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(user);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
</div><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Service</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DataSource</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> DataSourceType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SLAVE</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SysUserServiceImpl</span></span></code></pre>
</div></li>
</ol>
<h2>4. 手动切换数据源</h2>
<p>在需要切换数据源的方法中使用<code>DynamicDataSourceContextHolder</code>类实现手动切换，使用方法如下：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> List</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">SysUser</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> selectUserList</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SysUser</span><span style="color:#E06C75;--shiki-dark:#E06C75"> user)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">{</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">	DynamicDataSourceContextHolder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setDataSourceType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DataSourceType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SLAVE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">	List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SysUser</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> userList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> userMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">selectUserList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(user);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">	DynamicDataSourceContextHolder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">clearDataSourceType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">	return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> userList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
</div><h2>5. 具体实现</h2>
<h3>5.1 定义注解@DataSource</h3>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 自定义多数据源切换注解</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 优先级：先方法，后类，如果方法覆盖了类上的数据源类型，以方法的为准，否则以类上的为准</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@author</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> ygn</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Target</span><span style="color:#E06C75;--shiki-dark:#E06C75">({ </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ElementType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">METHOD</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ElementType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">TYPE</span><span style="color:#E06C75;--shiki-dark:#E06C75"> })</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Retention</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">RetentionPolicy</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">RUNTIME</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Documented</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Inherited</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> @</span><span style="color:#C678DD;--shiki-dark:#C678DD">interface</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> DataSource</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 切换数据源名称</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> DataSourceType</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> value</span><span style="color:#E06C75;--shiki-dark:#E06C75">() </span><span style="color:#C678DD;--shiki-dark:#C678DD">default</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> DataSourceType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">MASTER</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>5.2 数据源类型</h3>
<p>根据我们实际需求，定义不同数据源。可以根据多种情况划分，如</p>
<ul>
<li>
<p>主从划分</p>
</li>
<li>
<p>业务划分</p>
<p>A业务数据库,B业务数据库。</p>
</li>
</ul>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 数据源</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@author</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> ygn</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> enum</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> DataSourceType</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 主库</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">    MASTER</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 从库</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">    SLAVE</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>5.3 数据源配置</h3>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * druid 配置多数据源</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@author</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> ygn</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Configuration</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> DruidConfig</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Bean</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ConfigurationProperties</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"spring.datasource.druid.master"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> DataSource</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> masterDataSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DruidProperties</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> druidProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        DruidDataSource</span><span style="color:#E06C75;--shiki-dark:#E06C75"> dataSource</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> DruidDataSourceBuilder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">create</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> druidProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">dataSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(dataSource);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Bean</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ConfigurationProperties</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"spring.datasource.druid.slave"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ConditionalOnProperty</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">prefix</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "spring.datasource.druid.slave"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66"> name</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "enabled"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66"> havingValue</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "true"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> DataSource</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> slaveDataSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DruidProperties</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> druidProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        DruidDataSource</span><span style="color:#E06C75;--shiki-dark:#E06C75"> dataSource</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> DruidDataSourceBuilder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">create</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> druidProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">dataSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(dataSource);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Bean</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">name</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "dynamicDataSource"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Primary</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> DynamicDataSource</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> dataSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DataSource</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> masterDataSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75">targetDataSources</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> HashMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        targetDataSources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DataSourceType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">MASTER</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), masterDataSource);</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">        setDataSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(targetDataSources, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DataSourceType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SLAVE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#98C379;--shiki-dark:#98C379">"slaveDataSource"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> DynamicDataSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(masterDataSource, targetDataSources);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 设置数据源</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> targetDataSources</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 备选数据源集合</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> sourceName</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 数据源名称</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> beanName</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> bean名称</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> setDataSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">targetDataSources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> sourceName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> beanName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        try</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            DataSource</span><span style="color:#E06C75;--shiki-dark:#E06C75"> dataSource</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SpringUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getBean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(beanName);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            targetDataSources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(sourceName, dataSource);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        catch</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Exception</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 去除监控页面底部的广告</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SuppressWarnings</span><span style="color:#E06C75;--shiki-dark:#E06C75">({ </span><span style="color:#98C379;--shiki-dark:#98C379">"rawtypes"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379"> "unchecked"</span><span style="color:#E06C75;--shiki-dark:#E06C75"> })</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Bean</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ConditionalOnProperty</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">name</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "spring.datasource.druid.statViewServlet.enabled"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66"> havingValue</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "true"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> FilterRegistrationBean</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> removeDruidFilterRegistrationBean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DruidStatProperties</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> properties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 获取web监控页面的参数</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        DruidStatProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">StatViewServlet</span><span style="color:#E06C75;--shiki-dark:#E06C75"> config</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> properties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getStatViewServlet</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 提取common.js的配置路径</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> pattern</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> config</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getUrlPattern</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#C678DD;--shiki-dark:#C678DD"> ?</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> config</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getUrlPattern</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() </span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#98C379;--shiki-dark:#98C379"> "/druid/*"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> commonJsPattern</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> pattern</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">replaceAll</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\\</span><span style="color:#98C379;--shiki-dark:#98C379">*"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#98C379;--shiki-dark:#98C379">"js/common.js"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        final</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> filePath</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "support/http/resources/js/common.js"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 创建filter进行过滤</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Filter</span><span style="color:#E06C75;--shiki-dark:#E06C75"> filter</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Filter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> init</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">javax</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">servlet</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">FilterConfig</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> filterConfig</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#C678DD;--shiki-dark:#C678DD"> throws</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ServletException</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> doFilter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ServletRequest</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> request</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ServletResponse</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> response</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">FilterChain</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> chain</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                    throws</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> IOException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ServletException</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                chain</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">doFilter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(request, response);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // 重置缓冲区，响应头不会被重置</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                response</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">resetBuffer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // 获取common.js</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> text</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Utils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">readFromResource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(filePath);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // 正则替换banner, 除去底部的广告信息</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                text </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> text</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">replaceAll</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"&lt;a.*?banner</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">&gt;&lt;/a&gt;&lt;br/&gt;"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#98C379;--shiki-dark:#98C379">""</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                text </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> text</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">replaceAll</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"powered.*?shrek.wang&lt;/a&gt;"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#98C379;--shiki-dark:#98C379">""</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                response</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getWriter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">write</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(text);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> destroy</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        };</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        FilterRegistrationBean</span><span style="color:#E06C75;--shiki-dark:#E06C75"> registrationBean</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> FilterRegistrationBean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        registrationBean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setFilter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(filter);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        registrationBean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">addUrlPatterns</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(commonJsPattern);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> registrationBean;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>5.4 DataSourceAspect 拦截器</h3>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 多数据源处理</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@author</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> ygn</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Aspect</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Order</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Component</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> DataSourceAspect</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    protected</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Logger</span><span style="color:#E06C75;--shiki-dark:#E06C75"> logger </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> LoggerFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getLogger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getClass</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Pointcut</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"@annotation(com.ygn.common.annotation.DataSource)"</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">            +</span><span style="color:#98C379;--shiki-dark:#98C379"> "|| @within(com.ygn.common.annotation.DataSource)"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> dsPointCut</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Around</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"dsPointCut()"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Object</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> around</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ProceedingJoinPoint</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> point</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#C678DD;--shiki-dark:#C678DD"> throws</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Throwable</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        DataSource</span><span style="color:#E06C75;--shiki-dark:#E06C75"> dataSource</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getDataSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(point);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">StringUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isNotNull</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(dataSource))</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            DynamicDataSourceContextHolder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setDataSourceType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">dataSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">value</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        try</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> point</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">proceed</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        finally</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 销毁数据源 在执行方法之后</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            DynamicDataSourceContextHolder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">clearDataSourceType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 获取需要切换的数据源</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> DataSource</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getDataSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ProceedingJoinPoint</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> point</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        MethodSignature</span><span style="color:#E06C75;--shiki-dark:#E06C75"> signature</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (MethodSignature) </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">point</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getSignature</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        DataSource</span><span style="color:#E06C75;--shiki-dark:#E06C75"> dataSource</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> AnnotationUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">findAnnotation</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">signature</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getMethod</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DataSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Objects</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">nonNull</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(dataSource))</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> dataSource;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> AnnotationUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">findAnnotation</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">signature</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getDeclaringType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DataSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>5.5 数据源切换处理</h3>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 数据源切换处理</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@author</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> ygn</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> DynamicDataSourceContextHolder</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> final</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Logger</span><span style="color:#E06C75;--shiki-dark:#E06C75"> log </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> LoggerFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getLogger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DynamicDataSourceContextHolder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 使用ThreadLocal维护变量，ThreadLocal为每个使用该变量的线程提供独立的变量副本，</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *  所以每一个线程都可以独立地改变自己的副本，而不会影响其它线程所对应的副本。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> final</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ThreadLocal</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> CONTEXT_HOLDER </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ThreadLocal</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 设置数据源的变量</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> setDataSourceType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> dsType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">info</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"切换到{}数据源"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, dsType);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        CONTEXT_HOLDER</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(dsType);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 获得数据源的变量</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getDataSourceType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> CONTEXT_HOLDER</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 清空数据源变量</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> clearDataSourceType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        CONTEXT_HOLDER</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">remove</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>5.6 动态数据源</h3>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 动态数据源</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@author</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> ygn</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> DynamicDataSource</span><span style="color:#C678DD;--shiki-dark:#C678DD"> extends</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> AbstractRoutingDataSource</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> DynamicDataSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DataSource</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> defaultTargetDataSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">targetDataSources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        super</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setDefaultTargetDataSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(defaultTargetDataSource);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        super</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setTargetDataSources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(targetDataSources);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        super</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">afterPropertiesSet</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    protected</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Object</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> determineCurrentLookupKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> DynamicDataSourceContextHolder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getDataSourceType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4>5.6.1 AbstractRoutingDataSource实现动态数据源切换</h4>
<p>Spring boot提供了AbstractRoutingDataSource 根据用户定义的规则选择当前的数据源，这样我们可以在执行查询之前，设置使用的数据源。实现可动态路由的数据源，在每次数据库查询操作前执行。<strong>它的抽象方法 determineCurrentLookupKey() 决定使用哪个数据源</strong>。</p>
<h2>参考文章</h2>
<p><a href="https://doc.ruoyi.vip/ruoyi-vue/document/htsc.html#%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90" target="_blank" rel="noopener noreferrer">若依官方文档</a></p>
<p><a href="https://blog.csdn.net/qq_37502106/article/details/91044952" target="_blank" rel="noopener noreferrer">spring boot使用AbstractRoutingDataSource实现动态数据源切换</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>进程优雅退出功能&amp;实现思路</title>
      <link>https://mrjackc.github.io/posts/Architect/manage-system/manage-system-exit.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/manage-system/manage-system-exit.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">进程优雅退出功能&amp;实现思路</source>
      <description>进程优雅退出功能&amp;实现思路 1. 背景 我们在linux 环境经常使用 kill -9 PID 来关闭进程。但是kill -9 pid 的方式是强制将某个进程杀掉。但是这种方式非常暴力，相当于突然断电，可能会导致 缓存中的数据尚未持久化到磁盘中，导致数据丢失 正在进行文件的write操作，没有更新完成，突然退出，导致文件损坏； 线程的消息队列中尚有接收...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 背景</h2>
<p>我们在linux 环境经常使用 kill -9 PID 来关闭进程。但是kill -9 pid 的方式是强制将某个进程杀掉。但是这种方式非常暴力，相当于突然断电，可能会导致</p>
<ul>
<li>缓存中的数据尚未持久化到磁盘中，导致数据丢失</li>
<li>正在进行文件的write操作，没有更新完成，突然退出，导致文件损坏；</li>
<li>线程的消息队列中尚有接收到的请求消息还没来得及处理，导致请求消息丢失；</li>
</ul>
<h2>2. JAVA优雅退出（理论）</h2>
<p>Java的优雅停机通常通过注册JDK的ShutdownHook来实现，当系统接收到退出指令后，首先标记系统处于退出状态，不再接收新的消息，然后将积压的消息处理完，最后调用资源回收接口将资源销毁，最后各线程退出执行。</p>
<p>通常优雅退出需要有超时控制机制，例如30S，如果到达超时时间仍然没有完成退出前的资源回收等操作，则由停机脚本直接调用kill-9 pid，强制退出。</p>
<h2>3. 项目优雅退出实战</h2>
<h3>3.1 使用kill PID 关闭进程</h3>
<p>项目关闭时使用kill PID 关闭进程，而不是kill -9 pid</p>
<blockquote>
<ul>
<li><code>kill pid</code>的作用是向进程号为pid的进程发送<code>SIGTERM</code>（这是kill默认发送的信号），该信号是一个结束进程的信号且<strong>可以被应用程序捕获</strong></li>
<li><code>kill -9 pid</code>则是向进程号为pid的进程发送<code>SIGKILL</code>（该信号的编号为9），从本文上面的说明可知，SIGKILL既不能被应用程序捕获，也不能被阻塞或忽略，其动作是立即结束指定进程。通俗地说，应用程序根本无法“感知”SIGKILL信号，它在完全无准备的情况下，就被收到SIGKILL信号的操作系统给干掉了，显然，在这种“暴力”情况下，应用程序完全没有释放当前占用资源的机会。事实上，SIGKILL信号是直接发给init进程的，它收到该信号后，负责终止pid指定的进程。在某些情况下（如进程已经hang死，无法响应正常信号），就可以使用kill -9来结束进程。</li>
</ul>
</blockquote>
<h3>3.2 监听退出</h3>
<p>我们spring项目，可以采用spring 的 @PreDestroy 注解来监听退出。</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 确保应用退出时能关闭后台线程</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@author</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> fardu</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Component</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ShutdownManager</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> final</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Logger</span><span style="color:#E06C75;--shiki-dark:#E06C75"> logger </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> LoggerFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getLogger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"sys-user"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PreDestroy</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> destroy</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">        shutdownAsyncManager</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 停止异步执行任务</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> shutdownAsyncManager</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        try</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            logger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">info</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"====关闭后台任务任务线程池===="</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            AsyncManager</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">me</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">shutdown</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        catch</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Exception</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            logger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">error</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">e</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getMessage</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), e);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>3.3 停止线程池</h3>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 停止线程池</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 先使用shutdown, 停止接收新任务并尝试完成所有已存在任务.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 如果超时, 则调用shutdownNow, 取消在workQueue中Pending的任务,并中断所有阻塞函数.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 如果仍人超時，則強制退出.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 另对在shutdown时线程本身被调用中断做了处理.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> shutdownAndAwaitTermination</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ExecutorService</span><span style="color:#E06C75;--shiki-dark:#E06C75"> pool)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (pool </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> !</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">pool</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isShutdown</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            pool</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">shutdown</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            try</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">pool</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">awaitTermination</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">120</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">TimeUnit</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SECONDS</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    pool</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">shutdownNow</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                    if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">pool</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">awaitTermination</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">120</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">TimeUnit</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SECONDS</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                    {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        logger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">info</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Pool did not terminate"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                    }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            catch</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">InterruptedException</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> ie</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                logger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">info</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"停止线程池异常,{}"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ie</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getMessage</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(),ie);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                pool</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">shutdownNow</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                Thread</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">currentThread</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">interrupt</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2>参考文章</h2>
<p>(java 优雅退出_Netty优雅退出机制和原理)[<a href="https://blog.csdn.net/weixin_33196106/article/details/114217150" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/weixin_33196106/article/details/114217150</a>]</p>
<p><a href="https://juejin.cn/post/6844904121057673223" target="_blank" rel="noopener noreferrer">进程如何优雅退出？</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>定时任务quartz-动态管理任务&amp;实现思路</title>
      <link>https://mrjackc.github.io/posts/Architect/manage-system/manage-system-job.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/manage-system/manage-system-job.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">定时任务quartz-动态管理任务&amp;实现思路</source>
      <description>定时任务quartz-动态管理任务&amp;实现思路 1. 背景 1.1 回顾quartz 执行步骤 回顾我们定时器任务发起步骤 实现Job接口 创建Schedule 创建JobDetail实例，绑定job 构建Trigger定时任务 调度器Scheduler 绑定 JobDetail 和 Trigger 1.2 面临的问题 一切看似挺好的，但是所有的定时任务...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 背景</h2>
<h3>1.1 回顾quartz 执行步骤</h3>
<p><a href="/dependencies/timer/quartz/quartz%E5%AE%9A%E6%97%B6%E5%99%A8%E5%85%A5%E9%97%A8.html#quartz%E5%AE%9A%E6%97%B6%E5%99%A8%E5%85%A5%E9%97%A8" target="_blank">quartz定时器入门</a></p>
<p>回顾我们定时器任务发起步骤</p>
<ol>
<li>实现Job接口</li>
<li>创建Schedule
<ol>
<li>创建JobDetail实例，绑定job</li>
<li>构建Trigger定时任务</li>
<li>调度器Scheduler 绑定 JobDetail 和 Trigger</li>
</ol>
</li>
</ol>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 1、创建调度器Scheduler</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        SchedulerFactory</span><span style="color:#E06C75;--shiki-dark:#E06C75"> schedulerFactory </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> StdSchedulerFactory</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Scheduler</span><span style="color:#E06C75;--shiki-dark:#E06C75"> scheduler </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> schedulerFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getScheduler</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 2、创建JobDetail实例，并与PrintWordsJob类绑定(Job执行内容)</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        JobDetail</span><span style="color:#E06C75;--shiki-dark:#E06C75"> jobDetail </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> JobBuilder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">newJob</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">MyJob</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">withIdentity</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"job1"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#98C379;--shiki-dark:#98C379">"group1"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 3、构建Trigger实例,每隔1s执行一次</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Trigger</span><span style="color:#E06C75;--shiki-dark:#E06C75"> trigger </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> TriggerBuilder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">newTrigger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">withIdentity</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"trigger1"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#98C379;--shiki-dark:#98C379">"triggerGroup1"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">startNow</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//立即生效</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">withSchedule</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SimpleScheduleBuilder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">simpleSchedule</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">withIntervalInSeconds</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//每隔1s执行一次</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">repeatForever</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//一直执行</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //4、执行</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        scheduler</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">scheduleJob</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(jobDetail, trigger);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        scheduler</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">start</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>1.2 面临的问题</h3>
<p>一切看似挺好的，但是所有的定时任务都是写死在代码中。</p>
<ol>
<li>我们无法动态更改定时任务的执行时间</li>
<li>无法查看定时任务的执行情况</li>
<li>无法动态新增定时任务</li>
</ol>
<h2>2. 动态管理设计思路</h2>
<ol>
<li>
<p>新建一张<code>sys_job</code>表，专门记录定时任务信息。</p>
<ol>
<li>在新增和修改表记录时，设置定时任务</li>
<li>在删除表记录时，移除定时任务</li>
</ol>
</li>
<li>
<p>定时任务调度表 sys_job 表,需要记录</p>
<ol>
<li>任务的基本信息</li>
<li>定时任务具体的执行方法
<ol>
<li>我们通过反射来实现，所以只需要记录字符串。</li>
</ol>
</li>
<li>cron执行的表达式</li>
</ol>
</li>
<li>
<p>为了避免项目迁移或者手动修改数据库造成的问题。项目已启动就初始化所有定时任务</p>
</li>
<li>
<p>新建一张<code>sys_job_log</code>表，用来记录日志的执行情况</p>
</li>
</ol>
<h2>3. 表结构设计</h2>
<h3>3.1 定时任务调度表 sys_job 表设计</h3>
<div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">create</span><span style="color:#C678DD;--shiki-dark:#C678DD"> table</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> sys_job</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  job_id              </span><span style="color:#C678DD;--shiki-dark:#C678DD">bigint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">20</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)    </span><span style="color:#C678DD;--shiki-dark:#C678DD">not null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> auto_increment    comment </span><span style="color:#98C379;--shiki-dark:#98C379">'任务ID'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  job_name            </span><span style="color:#C678DD;--shiki-dark:#C678DD">varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">64</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)   </span><span style="color:#C678DD;--shiki-dark:#C678DD">default</span><span style="color:#98C379;--shiki-dark:#98C379"> ''</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                 comment </span><span style="color:#98C379;--shiki-dark:#98C379">'任务名称'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  job_group           </span><span style="color:#C678DD;--shiki-dark:#C678DD">varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">64</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)   </span><span style="color:#C678DD;--shiki-dark:#C678DD">default</span><span style="color:#98C379;--shiki-dark:#98C379"> 'DEFAULT'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">          comment </span><span style="color:#98C379;--shiki-dark:#98C379">'任务组名'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  invoke_target       </span><span style="color:#C678DD;--shiki-dark:#C678DD">varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">500</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)  </span><span style="color:#C678DD;--shiki-dark:#C678DD">not null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                   comment </span><span style="color:#98C379;--shiki-dark:#98C379">'调用目标字符串'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  cron_expression     </span><span style="color:#C678DD;--shiki-dark:#C678DD">varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">255</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)  </span><span style="color:#C678DD;--shiki-dark:#C678DD">default</span><span style="color:#98C379;--shiki-dark:#98C379"> ''</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                 comment </span><span style="color:#98C379;--shiki-dark:#98C379">'cron执行表达式'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  misfire_policy      </span><span style="color:#C678DD;--shiki-dark:#C678DD">varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">20</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)   </span><span style="color:#C678DD;--shiki-dark:#C678DD">default</span><span style="color:#98C379;--shiki-dark:#98C379"> '3'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                comment </span><span style="color:#98C379;--shiki-dark:#98C379">'计划执行错误策略（1立即执行 2执行一次 3放弃执行）'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  concurrent          </span><span style="color:#C678DD;--shiki-dark:#C678DD">char</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)       </span><span style="color:#C678DD;--shiki-dark:#C678DD">default</span><span style="color:#98C379;--shiki-dark:#98C379"> '1'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                comment </span><span style="color:#98C379;--shiki-dark:#98C379">'是否并发执行（0允许 1禁止）'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">  status</span><span style="color:#C678DD;--shiki-dark:#C678DD">              char</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)       </span><span style="color:#C678DD;--shiki-dark:#C678DD">default</span><span style="color:#98C379;--shiki-dark:#98C379"> '0'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                comment </span><span style="color:#98C379;--shiki-dark:#98C379">'状态（0正常 1暂停）'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  create_by           </span><span style="color:#C678DD;--shiki-dark:#C678DD">varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">64</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)   </span><span style="color:#C678DD;--shiki-dark:#C678DD">default</span><span style="color:#98C379;--shiki-dark:#98C379"> ''</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                 comment </span><span style="color:#98C379;--shiki-dark:#98C379">'创建者'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  create_time         </span><span style="color:#C678DD;--shiki-dark:#C678DD">datetime</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                                 comment </span><span style="color:#98C379;--shiki-dark:#98C379">'创建时间'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  update_by           </span><span style="color:#C678DD;--shiki-dark:#C678DD">varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">64</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)   </span><span style="color:#C678DD;--shiki-dark:#C678DD">default</span><span style="color:#98C379;--shiki-dark:#98C379"> ''</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                 comment </span><span style="color:#98C379;--shiki-dark:#98C379">'更新者'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  update_time         </span><span style="color:#C678DD;--shiki-dark:#C678DD">datetime</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                                 comment </span><span style="color:#98C379;--shiki-dark:#98C379">'更新时间'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  remark              </span><span style="color:#C678DD;--shiki-dark:#C678DD">varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">500</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)  </span><span style="color:#C678DD;--shiki-dark:#C678DD">default</span><span style="color:#98C379;--shiki-dark:#98C379"> ''</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                 comment </span><span style="color:#98C379;--shiki-dark:#98C379">'备注信息'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">  primary key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (job_id, job_name, job_group)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) engine</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">innodb auto_increment</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66">100</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> comment </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379"> '定时任务调度表'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>3.2 定时任务调度日志表 sys_job_log 表设计</h3>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">create</span><span style="color:#C678DD;--shiki-dark:#C678DD"> table</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> sys_job_log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  job_log_id          </span><span style="color:#C678DD;--shiki-dark:#C678DD">bigint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">20</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)     </span><span style="color:#C678DD;--shiki-dark:#C678DD">not null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> auto_increment    comment </span><span style="color:#98C379;--shiki-dark:#98C379">'任务日志ID'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  job_name            </span><span style="color:#C678DD;--shiki-dark:#C678DD">varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">64</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)    </span><span style="color:#C678DD;--shiki-dark:#C678DD">not null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                   comment </span><span style="color:#98C379;--shiki-dark:#98C379">'任务名称'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  job_group           </span><span style="color:#C678DD;--shiki-dark:#C678DD">varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">64</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)    </span><span style="color:#C678DD;--shiki-dark:#C678DD">not null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                   comment </span><span style="color:#98C379;--shiki-dark:#98C379">'任务组名'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  invoke_target       </span><span style="color:#C678DD;--shiki-dark:#C678DD">varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">500</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)   </span><span style="color:#C678DD;--shiki-dark:#C678DD">not null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                   comment </span><span style="color:#98C379;--shiki-dark:#98C379">'调用目标字符串'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  job_message         </span><span style="color:#C678DD;--shiki-dark:#C678DD">varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">500</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)                              comment </span><span style="color:#98C379;--shiki-dark:#98C379">'日志信息'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">  status</span><span style="color:#C678DD;--shiki-dark:#C678DD">              char</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)        </span><span style="color:#C678DD;--shiki-dark:#C678DD">default</span><span style="color:#98C379;--shiki-dark:#98C379"> '0'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                comment </span><span style="color:#98C379;--shiki-dark:#98C379">'执行状态（0正常 1失败）'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  exception_info      </span><span style="color:#C678DD;--shiki-dark:#C678DD">varchar</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">2000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)  </span><span style="color:#C678DD;--shiki-dark:#C678DD">default</span><span style="color:#98C379;--shiki-dark:#98C379"> ''</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                 comment </span><span style="color:#98C379;--shiki-dark:#98C379">'异常信息'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  create_time         </span><span style="color:#C678DD;--shiki-dark:#C678DD">datetime</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                                  comment </span><span style="color:#98C379;--shiki-dark:#98C379">'创建时间'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">  primary key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (job_log_id)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) engine</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">innodb comment </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379"> '定时任务调度日志表'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span></code></pre>
</div><h2>4. 代码实现</h2>
<h3>4.1 新增定时任务</h3>
<h4>4.1.1 service层方法</h4>
<div class="language- line-numbers-mode" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span> /**</span></span>
<span class="line"><span>     * 新增任务</span></span>
<span class="line"><span>     * </span></span>
<span class="line"><span>     * @param job 调度信息 调度信息</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>    @Override</span></span>
<span class="line"><span>    @Transactional</span></span>
<span class="line"><span>    public int insertJob(SysJob job) throws SchedulerException, TaskException</span></span>
<span class="line"><span>    {</span></span>
<span class="line"><span>        job.setStatus(ScheduleConstants.Status.PAUSE.getValue());</span></span>
<span class="line"><span>        int rows = jobMapper.insertJob(job);</span></span>
<span class="line"><span>        if (rows &gt; 0)</span></span>
<span class="line"><span>        {</span></span>
<span class="line"><span>            ScheduleUtils.createScheduleJob(scheduler, job);</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>        return rows;</span></span>
<span class="line"><span>    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol>
<li>定时任务初始时设置为暂停状态</li>
<li>插入数据库</li>
<li>调用ScheduleUtils 工具类，创建定时任务</li>
</ol>
<h4>4.1.2 ScheduleUtils 工具类，创建定时任务</h4>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 创建定时任务</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> createScheduleJob</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Scheduler</span><span style="color:#E06C75;--shiki-dark:#E06C75"> scheduler</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SysJob</span><span style="color:#E06C75;--shiki-dark:#E06C75"> job) throws SchedulerException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> TaskException</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#C678DD;--shiki-dark:#C678DD">?</span><span style="color:#C678DD;--shiki-dark:#C678DD"> extends</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Job</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> jobClass </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getQuartzJobClass</span><span style="color:#E06C75;--shiki-dark:#E06C75">(job)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 构建job信息</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> jobId </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> job</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getJobId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> jobGroup </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> job</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getJobGroup</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        JobDetail</span><span style="color:#E06C75;--shiki-dark:#E06C75"> jobDetail </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> JobBuilder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">newJob</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(jobClass).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">withIdentity</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getJobKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(jobId, jobGroup)).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 表达式调度构建器</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        CronScheduleBuilder</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cronScheduleBuilder </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> CronScheduleBuilder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">cronSchedule</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">job</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getCronExpression</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        cronScheduleBuilder </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> handleCronScheduleMisfirePolicy</span><span style="color:#E06C75;--shiki-dark:#E06C75">(job</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> cronScheduleBuilder)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 按新的cronExpression表达式构建一个新的trigger</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        CronTrigger</span><span style="color:#E06C75;--shiki-dark:#E06C75"> trigger </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> TriggerBuilder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">newTrigger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">withIdentity</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getTriggerKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(jobId, jobGroup))</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">withSchedule</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(cronScheduleBuilder).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 放入参数，运行时的方法可以获取</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        jobDetail</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getJobDataMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ScheduleConstants</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">TASK_PROPERTIES</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, job);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 判断是否存在</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">scheduler</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">checkExists</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getJobKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(jobId, jobGroup))</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 防止创建时存在数据问题 先移除，然后在执行创建操作</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            scheduler</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">deleteJob</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getJobKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(jobId, jobGroup));</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        scheduler</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">scheduleJob</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(jobDetail, trigger);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 暂停任务</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">job</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getStatus</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">equals</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ScheduleConstants</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Status</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PAUSE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getValue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">())</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            scheduler</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">pauseJob</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ScheduleUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getJobKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(jobId, jobGroup));</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 得到quartz任务类</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> sysJob</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 执行计划</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@return</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 具体执行任务类</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Class</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#C678DD;--shiki-dark:#C678DD">?</span><span style="color:#E06C75;--shiki-dark:#E06C75"> extends Job</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getQuartzJobClass</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SysJob</span><span style="color:#E06C75;--shiki-dark:#E06C75"> sysJob)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        boolean</span><span style="color:#E06C75;--shiki-dark:#E06C75"> isConcurrent </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379"> "0"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">equals</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">sysJob</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getConcurrent</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> isConcurrent </span><span style="color:#C678DD;--shiki-dark:#C678DD">?</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> QuartzJobExecution</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#C678DD;--shiki-dark:#C678DD"> :</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> QuartzDisallowConcurrentExecution</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol>
<li>根据是否需要并发，返回定时任务<code>Job</code> 的实现类<code>Execution.class</code></li>
<li>构建 <code>jobDetail</code></li>
<li>根据<code>cron</code>表达式，创建调度器<code>trigger</code></li>
<li><strong>将整个<code>job</code> 当做参数传递</strong>，我们再运行时就可以获取了</li>
<li>判断是否存在，存在则移除</li>
<li>调度器 <code>scheduler</code>，绑定<code>jobDetail</code> 和  <code>trigger</code></li>
</ol>
<h4>4.1.3 抽象Job 实现类 AbstractQuartzJob</h4>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 抽象quartz调用</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@author</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> ygn</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> abstract</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> AbstractQuartzJob</span><span style="color:#C678DD;--shiki-dark:#C678DD"> implements</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Job</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> final</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Logger</span><span style="color:#E06C75;--shiki-dark:#E06C75"> log </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> LoggerFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getLogger</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">AbstractQuartzJob</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 线程本地变量</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ThreadLocal</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Date</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> threadLocal </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ThreadLocal</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> execute</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">JobExecutionContext</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> context</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#C678DD;--shiki-dark:#C678DD"> throws</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> JobExecutionException</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        SysJob</span><span style="color:#E06C75;--shiki-dark:#E06C75"> sysJob</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> SysJob</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        BeanUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">copyBeanProp</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(sysJob, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">context</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getMergedJobDataMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ScheduleConstants</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">TASK_PROPERTIES</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        try</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">            before</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(context, sysJob);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (sysJob </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">                doExecute</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(context, sysJob);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">            after</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(context, sysJob, </span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        catch</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Exception</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">error</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"任务执行异常  - ："</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, e);</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">            after</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(context, sysJob, e);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 执行前</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> context</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 工作执行上下文对象</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> sysJob</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 系统计划任务</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    protected</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> before</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">JobExecutionContext</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> context</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SysJob</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> sysJob</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        threadLocal</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Date</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 执行后</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> context</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 工作执行上下文对象</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> sysJob</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 系统计划任务</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    protected</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> after</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">JobExecutionContext</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> context</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SysJob</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> sysJob</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Exception</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Date</span><span style="color:#E06C75;--shiki-dark:#E06C75"> startTime</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> threadLocal</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        threadLocal</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">remove</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        final</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SysJobLog</span><span style="color:#E06C75;--shiki-dark:#E06C75"> sysJobLog</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> SysJobLog</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        sysJobLog</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setJobName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">sysJob</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getJobName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        sysJobLog</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setJobGroup</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">sysJob</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getJobGroup</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        sysJobLog</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setInvokeTarget</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">sysJob</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getInvokeTarget</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        sysJobLog</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setStartTime</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(startTime);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        sysJobLog</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setStopTime</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Date</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> runMs</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> sysJobLog</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getStopTime</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getTime</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> sysJobLog</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getStartTime</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getTime</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        sysJobLog</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setJobMessage</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">sysJobLog</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getJobName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#98C379;--shiki-dark:#98C379"> " 总共耗时："</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> runMs </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#98C379;--shiki-dark:#98C379"> "毫秒"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (e </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            sysJobLog</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setStatus</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Constants</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">FAIL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> errorMsg</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> StringUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">substring</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ExceptionUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getExceptionMessage</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(e), </span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;--shiki-dark:#D19A66">2000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            sysJobLog</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setExceptionInfo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(errorMsg);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        else</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            sysJobLog</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setStatus</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Constants</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SUCCESS</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 写入数据库当中</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        SpringUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getBean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ISysJobLogService</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">addJobLog</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(sysJobLog);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 执行方法，由子类重载</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> context</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 工作执行上下文对象</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> sysJob</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 系统计划任务</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@throws</span><span style="color:#E5C07B;font-style:italic;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic"> Exception</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 执行过程中的异常</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    protected</span><span style="color:#C678DD;--shiki-dark:#C678DD"> abstract</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> doExecute</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">JobExecutionContext</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> context</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SysJob</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> sysJob</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#C678DD;--shiki-dark:#C678DD"> throws</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Exception</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>既然是job 实现类，那么必须会有execute 方法。我们可以在执行前后，分别加上执行逻辑</p>
<ol>
<li>获取 jobDetail.getJobDataMap() 中存放的job 参数</li>
<li>在执行前后，分别加上函数
<ol>
<li>执行前：将时间保存在<code>ThreadLocal</code></li>
<li>执行后：获取存放在 ThreadLocal 中的时间，计算执行耗时</li>
<li>记录操作日志</li>
</ol>
</li>
<li>执行的具体操作，通过抽象类交给实现类去做</li>
</ol>
<h4>4.1.4 Job 实现类</h4>
<p>可并发定时任务处理</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 定时任务处理（允许并发执行）</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@author</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> ygn</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> QuartzJobExecution</span><span style="color:#C678DD;--shiki-dark:#C678DD"> extends</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> AbstractQuartzJob</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    protected</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> doExecute</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">JobExecutionContext</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> context</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SysJob</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> sysJob</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#C678DD;--shiki-dark:#C678DD"> throws</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Exception</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        JobInvokeUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">invokeMethod</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(sysJob);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
</div><p>不可并发定时任务处理</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 定时任务处理（禁止并发执行）</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@author</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> ygn</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DisallowConcurrentExecution</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> QuartzDisallowConcurrentExecution</span><span style="color:#C678DD;--shiki-dark:#C678DD"> extends</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> AbstractQuartzJob</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    protected</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> doExecute</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">JobExecutionContext</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> context</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SysJob</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> sysJob</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#C678DD;--shiki-dark:#C678DD"> throws</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Exception</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        JobInvokeUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">invokeMethod</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(sysJob);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>不可并发，直接使用<code>quartz</code>的注解<code>@DisallowConcurrentExecution</code></p>
<h4>4.1.5 通过反射执行任务</h4>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 任务执行工具</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@author</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> ygn</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> JobInvokeUtil</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 执行方法</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> sysJob</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 系统任务</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> invokeMethod</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SysJob</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> sysJob</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#C678DD;--shiki-dark:#C678DD"> throws</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Exception</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> invokeTarget</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> sysJob</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getInvokeTarget</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> beanName</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getBeanName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(invokeTarget);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> methodName</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getMethodName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(invokeTarget);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[]&gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75">methodParams</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getMethodParams</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(invokeTarget);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isValidClassName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(beanName))</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            Object</span><span style="color:#E06C75;--shiki-dark:#E06C75"> bean</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SpringUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getBean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(beanName);</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">            invokeMethod</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bean, methodName, methodParams);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        else</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            Object</span><span style="color:#E06C75;--shiki-dark:#E06C75"> bean</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">forName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(beanName).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">newInstance</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">            invokeMethod</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bean, methodName, methodParams);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 调用任务方法</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bean</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 目标对象</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> methodName</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 方法名称</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> methodParams</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 方法参数</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> invokeMethod</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> methodName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[]&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">methodParams</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            throws</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> NoSuchMethodException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SecurityException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> IllegalAccessException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> IllegalArgumentException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            InvocationTargetException</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">StringUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isNotNull</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(methodParams) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&amp;&amp;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> methodParams</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">size</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            Method</span><span style="color:#E06C75;--shiki-dark:#E06C75"> method</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> bean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getClass</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getDeclaredMethod</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(methodName, </span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getMethodParamsType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(methodParams));</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            method</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">invoke</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bean, </span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getMethodParamsValue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(methodParams));</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        else</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            Method</span><span style="color:#E06C75;--shiki-dark:#E06C75"> method</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> bean</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getClass</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getDeclaredMethod</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(methodName);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            method</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">invoke</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bean);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>4.2 更新定时任务</h3>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 更新任务的时间表达式</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> job</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 调度信息</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Transactional</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> int</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> updateJob</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SysJob</span><span style="color:#E06C75;--shiki-dark:#E06C75"> job) throws SchedulerException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> TaskException</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        SysJob</span><span style="color:#E06C75;--shiki-dark:#E06C75"> properties </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> selectJobById</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">job</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getJobId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> rows </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> jobMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">updateJob</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(job);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (rows </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">            updateSchedulerJob</span><span style="color:#E06C75;--shiki-dark:#E06C75">(job</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> properties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getJobGroup</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> rows</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 更新任务</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> job</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 任务对象</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> jobGroup</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 任务组名</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> updateSchedulerJob</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SysJob</span><span style="color:#E06C75;--shiki-dark:#E06C75"> job</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> jobGroup) throws SchedulerException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> TaskException</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> jobId </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> job</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getJobId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 判断是否存在</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        JobKey</span><span style="color:#E06C75;--shiki-dark:#E06C75"> jobKey </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ScheduleUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getJobKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(jobId, jobGroup);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">scheduler</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">checkExists</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(jobKey)</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 防止创建时存在数据问题 先移除，然后在执行创建操作</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            scheduler</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">deleteJob</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(jobKey);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        ScheduleUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">createScheduleJob</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(scheduler, job);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>更新定时任务与新增其实本质上是一样的</p>
<ol>
<li>先判断是否存在，存在则删除</li>
<li>直接调用 <code>ScheduleUtils</code> 创建定时任务</li>
</ol>
<h3>4.3 项目启动 初始化定时器</h3>
<p>项目启动时，初始化定时器 主要是防止手动修改数据库导致未同步到定时任务处理（注：不能手动修改数据库ID和任务组名，否则会导致脏数据）</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PostConstruct</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> init</span><span style="color:#E06C75;--shiki-dark:#E06C75">() throws SchedulerException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> TaskException</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        scheduler</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">clear</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SysJob</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> jobList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> jobMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">selectJobAll</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SysJob</span><span style="color:#E06C75;--shiki-dark:#E06C75"> job </span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> jobList)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            ScheduleUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">createScheduleJob</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(scheduler, job);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
</div><h3>4.4  删除定时任务</h3>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 批量删除调度信息</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> jobIds</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 需要删除的任务ID</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@return</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 结果</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Transactional</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> deleteJobByIds</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#E06C75;--shiki-dark:#E06C75">[] jobIds) throws </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SchedulerException</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> jobId </span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> jobIds)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            SysJob</span><span style="color:#E06C75;--shiki-dark:#E06C75"> job </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> jobMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">selectJobById</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(jobId);</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">            deleteJob</span><span style="color:#E06C75;--shiki-dark:#E06C75">(job)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 删除任务后，所对应的trigger也将被删除</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> job</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 调度信息</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Transactional</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> int</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> deleteJob</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SysJob</span><span style="color:#E06C75;--shiki-dark:#E06C75"> job) throws </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SchedulerException</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> jobId </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> job</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getJobId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> jobGroup </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> job</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getJobGroup</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> rows </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> jobMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">deleteJobById</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(jobId);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (rows </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            scheduler</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">deleteJob</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ScheduleUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getJobKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(jobId, jobGroup));</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> rows</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol>
<li>调用<code>scheduler.deleteJob（）</code> 的方法直接删除就可以了</li>
</ol>
<h3>4.5 定时任务的暂停与恢复</h3>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 任务调度状态修改</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> job</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 调度信息</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Transactional</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> int</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> changeStatus</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SysJob</span><span style="color:#E06C75;--shiki-dark:#E06C75"> job) throws </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SchedulerException</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> rows </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> status </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> job</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getStatus</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ScheduleConstants</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Status</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">NORMAL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getValue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">equals</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(status)</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            rows </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> resumeJob</span><span style="color:#E06C75;--shiki-dark:#E06C75">(job)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        else</span><span style="color:#C678DD;--shiki-dark:#C678DD"> if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ScheduleConstants</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Status</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PAUSE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getValue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">equals</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(status)</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            rows </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> pauseJob</span><span style="color:#E06C75;--shiki-dark:#E06C75">(job)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> rows</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 恢复任务</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> job</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 调度信息</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Transactional</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> int</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> resumeJob</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SysJob</span><span style="color:#E06C75;--shiki-dark:#E06C75"> job) throws </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SchedulerException</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> jobId </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> job</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getJobId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> jobGroup </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> job</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getJobGroup</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        job</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setStatus</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ScheduleConstants</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Status</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">NORMAL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getValue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> rows </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> jobMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">updateJob</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(job);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (rows </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            scheduler</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">resumeJob</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ScheduleUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getJobKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(jobId, jobGroup));</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> rows</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 暂停任务</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> job</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 调度信息</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Transactional</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> int</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> pauseJob</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SysJob</span><span style="color:#E06C75;--shiki-dark:#E06C75"> job) throws </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SchedulerException</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> jobId </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> job</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getJobId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> jobGroup </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> job</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getJobGroup</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        job</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setStatus</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ScheduleConstants</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Status</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PAUSE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getValue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> rows </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> jobMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">updateJob</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(job);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (rows </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            scheduler</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">pauseJob</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ScheduleUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getJobKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(jobId, jobGroup));</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> rows</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>系统操作日志功能</title>
      <link>https://mrjackc.github.io/posts/Architect/manage-system/manage-system-log.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/manage-system/manage-system-log.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">系统操作日志功能</source>
      <description>系统操作日志功能 1. 简介 在实际开发中，对于某些关键业务，我们通常需要记录该操作的内容，一个操作调一次记录方法，每次还得去收集参数等等。会造成大量代码重复。 我们希望代码中只有业务相关操作，在项目中使用AOP注解来完成此项功能 2. 需求 我们在之前的学习中，也使用 ，那么我们现在设计的系统日志与之前的有什么区别呢？ 无论是新老版本日志都是通过AO...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 简介</h2>
<p>在实际开发中，对于某些关键业务，我们通常需要记录该操作的内容，一个操作调一次记录方法，每次还得去收集参数等等。会造成大量代码重复。</p>
<p><strong>我们希望代码中只有业务相关操作</strong>，在项目中使用<code>AOP</code>注解来完成此项功能</p>
<h2>2. 需求</h2>
<p>我们在之前的学习中，也使用 <a href="/posts/Architect/manage-system/spring-y-aop-log.html" target="_blank">spring-y-aop-log</a> ，那么我们现在设计的系统日志与之前的有什么区别呢？</p>
<p>无论是新老版本日志都是通过AOP 来实现拦截与处理。</p>
<h3>2.1 老版本功能的基本需求</h3>
<p>统计的内容</p>
<ul>
<li>
<p>执行时间</p>
</li>
<li>
<p>ip</p>
</li>
<li>
<p>执行者</p>
</li>
</ul>
<p>最终落库到数据库</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301222351.png" alt="image-20211103203608087" tabindex="0" loading="lazy"><figcaption>image-20211103203608087</figcaption></figure>
<h3>2.1 新版本需求</h3>
<p>我们希望这版的日志系统能强大一些，满足更多扩展需求。更容易定位我们的问题</p>
<ol>
<li>
<p>能快速定位日志</p>
<ol>
<li>按系统模块划分，具体是什么功能做的操作</li>
<li>细化操作类型，能按增删改查等操作进行划分</li>
</ol>
</li>
<li>
<p>记录请求的基本信息</p>
<ol>
<li>请求地址</li>
<li>请求方法</li>
<li>请求参数</li>
<li>返回的结果</li>
</ol>
</li>
<li>
<p>操作执行结果（执行成功与否）</p>
</li>
<li>
<p>保存操作入库应该是异步保存</p>
</li>
</ol>
<h2>3. 实现思路</h2>
<h3>3.1 日志细化</h3>
<p>我们将日志注解拆分成多个属性</p>
<ul>
<li>具体哪个模块（如用户管理，部门管理）</li>
<li>对应什么操作类型（新增，修改，导入、导出等）</li>
<li>是否保存请求参数</li>
</ul>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Target</span><span style="color:#E06C75;--shiki-dark:#E06C75">({ </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ElementType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PARAMETER</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ElementType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">METHOD</span><span style="color:#E06C75;--shiki-dark:#E06C75"> })</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Retention</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">RetentionPolicy</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">RUNTIME</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Documented</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> @</span><span style="color:#C678DD;--shiki-dark:#C678DD">interface</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Log</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 模块 </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> title</span><span style="color:#E06C75;--shiki-dark:#E06C75">() </span><span style="color:#C678DD;--shiki-dark:#C678DD">default</span><span style="color:#98C379;--shiki-dark:#98C379"> ""</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 操作类型</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> BusinessType</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> businessType</span><span style="color:#E06C75;--shiki-dark:#E06C75">() </span><span style="color:#C678DD;--shiki-dark:#C678DD">default</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> BusinessType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OTHER</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 操作人类别</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> OperatorType</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> operatorType</span><span style="color:#E06C75;--shiki-dark:#E06C75">() </span><span style="color:#C678DD;--shiki-dark:#C678DD">default</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> OperatorType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">MANAGE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 是否保存请求的参数</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> boolean</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> isSaveRequestData</span><span style="color:#E06C75;--shiki-dark:#E06C75">() </span><span style="color:#C678DD;--shiki-dark:#C678DD">default</span><span style="color:#D19A66;--shiki-dark:#D19A66"> true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注解参数说明</p>
<p>| 参数               | 类型         | 默认值 | 描述                                                         |<br>
|</p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301222351.png" type="image/png"/>
    </item>
    <item>
      <title>后台管理 - OSS对象存储适配</title>
      <link>https://mrjackc.github.io/posts/Architect/manage-system/manage-system-oos.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/manage-system/manage-system-oos.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">后台管理 - OSS对象存储适配</source>
      <description>后台管理 - OSS对象存储适配 1. 流程 1.1 通过ApplicationRunner 在项目启动的时候、初始化 从数据库中取出中存储状态正常的oos配置、并设置到redis中 通过redis 的发布订阅、通知其他服务器刷新配置 初始化OSS工厂、实例化OssClient 创建OssClient,创建桶与响应的协议 1.2 上传文件 上传oss ...</description>
      <category>后台管理</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 流程</h2>
<h3>1.1 通过ApplicationRunner 在项目启动的时候、初始化</h3>
<ol>
<li>从数据库中取出中存储状态正常的oos配置、并设置到redis中</li>
<li>通过redis 的发布订阅、通知其他服务器刷新配置</li>
<li>初始化OSS工厂、实例化OssClient</li>
</ol>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Slf4j</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">RequiredArgsConstructor</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Component</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ResourceApplicationRunner</span><span style="color:#C678DD;--shiki-dark:#C678DD"> implements</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ApplicationRunner</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> final</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ISysOssConfigService</span><span style="color:#E06C75;--shiki-dark:#E06C75"> ossConfigService</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> run</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ApplicationArguments</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#C678DD;--shiki-dark:#C678DD"> throws</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Exception</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        ossConfigService</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">init</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">info</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"初始化OSS配置成功"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
</div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 项目启动时，初始化参数到缓存，加载配置类</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> init</span><span style="color:#E06C75;--shiki-dark:#E06C75">() {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SysOssConfig</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> list </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> baseMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">selectList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 加载OSS初始化配置</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SysOssConfig</span><span style="color:#E06C75;--shiki-dark:#E06C75"> config </span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> list) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> configKey </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> config</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getConfigKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#98C379;--shiki-dark:#98C379">"0"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">equals</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">config</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getStatus</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">())</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                RedisUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setCacheObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OssConstant</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DEFAULT_CONFIG_KEY</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, configKey);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            }</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">            setConfigCache</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> config)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 初始化OSS工厂</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        OssFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">init</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 如果操作成功 则更新缓存</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> flag</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">   操作状态</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> config</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 配置</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@return</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 返回操作状态</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> boolean</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> setConfigCache</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">boolean</span><span style="color:#E06C75;--shiki-dark:#E06C75"> flag</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SysOssConfig</span><span style="color:#E06C75;--shiki-dark:#E06C75"> config) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (flag) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            CacheUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">CacheNames</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SYS_OSS_CONFIG</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">config</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getConfigKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">JsonUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">toJsonString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(config));</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            RedisUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">publish</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OssConstant</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DEFAULT_CONFIG_KEY</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">config</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getConfigKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), msg </span><span style="color:#C678DD;--shiki-dark:#C678DD">-&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">info</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"发布刷新OSS配置 =&gt; "</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> msg);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            });</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> flag</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Slf4j</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> OssFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> final</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> OssClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> CLIENT_CACHE </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ConcurrentHashMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 初始化工厂</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> init</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">info</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"初始化OSS工厂"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        RedisUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">subscribe</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OssConstant</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DEFAULT_CONFIG_KEY</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, configKey </span><span style="color:#C678DD;--shiki-dark:#C678DD">-&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            OssClient</span><span style="color:#E06C75;--shiki-dark:#E06C75"> client</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(configKey);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 未初始化不处理</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (client </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">                refresh</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(configKey);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">info</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"订阅刷新OSS配置 =&gt; "</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> configKey);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        });</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  </span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> refresh</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> configKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> json</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> CacheUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">CacheNames</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SYS_OSS_CONFIG</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, configKey);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (json </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            throw</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> OssException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"系统异常, '"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> configKey </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#98C379;--shiki-dark:#98C379"> "'配置信息不存在!"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        OssProperties</span><span style="color:#E06C75;--shiki-dark:#E06C75"> properties</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> JsonUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">parseObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(json, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OssProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        CLIENT_CACHE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(configKey, </span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> OssClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(configKey, properties));</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建OssClient,创建桶与响应的协议</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> OssClient</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> configKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> OssProperties</span><span style="color:#E06C75;--shiki-dark:#E06C75"> ossProperties) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">configKey</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E06C75;--shiki-dark:#E06C75"> configKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">properties</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E06C75;--shiki-dark:#E06C75"> ossProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    try</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        AwsClientBuilder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">EndpointConfiguration</span><span style="color:#E06C75;--shiki-dark:#E06C75"> endpointConfig </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            new</span><span style="color:#E06C75;--shiki-dark:#E06C75"> AwsClientBuilder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">EndpointConfiguration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">properties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getEndpoint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">properties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getRegion</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        AWSCredentials</span><span style="color:#E06C75;--shiki-dark:#E06C75"> credentials </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> BasicAWSCredentials</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">properties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getAccessKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(),</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> properties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getSecretKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        AWSCredentialsProvider</span><span style="color:#E06C75;--shiki-dark:#E06C75"> credentialsProvider </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> AWSStaticCredentialsProvider</span><span style="color:#E06C75;--shiki-dark:#E06C75">(credentials)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        ClientConfiguration</span><span style="color:#E06C75;--shiki-dark:#E06C75"> clientConfig </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> ClientConfiguration</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OssConstant</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">IS_HTTPS</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">equals</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">properties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getIsHttps</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">())</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            clientConfig</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setProtocol</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Protocol</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">HTTPS</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            clientConfig</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setProtocol</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Protocol</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">HTTP</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        AmazonS3ClientBuilder</span><span style="color:#E06C75;--shiki-dark:#E06C75"> build </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> AmazonS3Client</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">withEndpointConfiguration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(endpointConfig)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">withClientConfiguration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(clientConfig)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">withCredentials</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(credentialsProvider)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">disableChunkedEncoding</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">StringUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">containsAny</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">properties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getEndpoint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OssConstant</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">CLOUD_SERVICE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#E06C75;--shiki-dark:#E06C75">){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // minio 使用https限制使用域名访问 需要此配置 站点填域名</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">enablePathStyleAccess</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">client</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">        createBucket</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    } </span><span style="color:#C678DD;--shiki-dark:#C678DD">catch</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Exception</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (e </span><span style="color:#C678DD;--shiki-dark:#C678DD">instanceof</span><span style="color:#E06C75;--shiki-dark:#E06C75"> OssException) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            throw</span><span style="color:#E06C75;--shiki-dark:#E06C75"> e</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        throw</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> OssException</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"配置错误! 请检查系统配置:["</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> e</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getMessage</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#98C379;--shiki-dark:#98C379"> "]"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> createBucket</span><span style="color:#E06C75;--shiki-dark:#E06C75">() {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    try</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> bucketName </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> properties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getBucketName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">client</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">doesBucketExistV2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bucketName)</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        CreateBucketRequest</span><span style="color:#E06C75;--shiki-dark:#E06C75"> createBucketRequest </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> CreateBucketRequest</span><span style="color:#E06C75;--shiki-dark:#E06C75">(bucketName)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        AccessPolicyType</span><span style="color:#E06C75;--shiki-dark:#E06C75"> accessPolicy </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getAccessPolicy</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        createBucketRequest</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setCannedAcl</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">accessPolicy</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getAcl</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        client</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">createBucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(createBucketRequest);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        client</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setBucketPolicy</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bucketName, </span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getPolicy</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bucketName, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">accessPolicy</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getPolicyType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()));</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    } </span><span style="color:#C678DD;--shiki-dark:#C678DD">catch</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Exception</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        throw</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> OssException</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"创建Bucket失败, 请核对配置信息:["</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> e</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getMessage</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#98C379;--shiki-dark:#98C379"> "]"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 获取当前桶权限类型</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@return</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 当前桶权限类型code</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> AccessPolicyType</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getAccessPolicy</span><span style="color:#E06C75;--shiki-dark:#E06C75">() {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> AccessPolicyType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getByType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">properties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getAccessPolicy</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> static</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getPolicy</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> bucketName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> PolicyType</span><span style="color:#E06C75;--shiki-dark:#E06C75"> policyType) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        StringBuilder</span><span style="color:#E06C75;--shiki-dark:#E06C75"> builder </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> StringBuilder</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">append</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"{</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n\"</span><span style="color:#98C379;--shiki-dark:#98C379">Statement</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">: [</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n</span><span style="color:#98C379;--shiki-dark:#98C379">{</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n\"</span><span style="color:#98C379;--shiki-dark:#98C379">Action</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">: [</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n</span><span style="color:#98C379;--shiki-dark:#98C379">"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (policyType </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> PolicyType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">WRITE</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">append</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">s3:GetBucketLocation</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n\"</span><span style="color:#98C379;--shiki-dark:#98C379">s3:ListBucketMultipartUploads</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"\n</span><span style="color:#98C379;--shiki-dark:#98C379">"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#C678DD;--shiki-dark:#C678DD"> if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (policyType </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> PolicyType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">READ_WRITE</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">append</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">s3:GetBucketLocation</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n\"</span><span style="color:#98C379;--shiki-dark:#98C379">s3:ListBucket</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n\"</span><span style="color:#98C379;--shiki-dark:#98C379">s3:ListBucketMultipartUploads</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"\n</span><span style="color:#98C379;--shiki-dark:#98C379">"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">append</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">s3:GetBucketLocation</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"\n</span><span style="color:#98C379;--shiki-dark:#98C379">"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">append</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"],</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n\"</span><span style="color:#98C379;--shiki-dark:#98C379">Effect</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">: </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">Allow</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n\"</span><span style="color:#98C379;--shiki-dark:#98C379">Principal</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">: </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">*</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n\"</span><span style="color:#98C379;--shiki-dark:#98C379">Resource</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">: </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">arn:aws:s3:::"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">append</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bucketName);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">append</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"\n</span><span style="color:#98C379;--shiki-dark:#98C379">},</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n</span><span style="color:#98C379;--shiki-dark:#98C379">"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (policyType </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> PolicyType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">READ</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">append</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"{</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n\"</span><span style="color:#98C379;--shiki-dark:#98C379">Action</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">: [</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n\"</span><span style="color:#98C379;--shiki-dark:#98C379">s3:ListBucket</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"\n</span><span style="color:#98C379;--shiki-dark:#98C379">],</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n\"</span><span style="color:#98C379;--shiki-dark:#98C379">Effect</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">: </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">Deny</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n\"</span><span style="color:#98C379;--shiki-dark:#98C379">Principal</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">: </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">*</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n\"</span><span style="color:#98C379;--shiki-dark:#98C379">Resource</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">: </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">arn:aws:s3:::"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">append</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bucketName);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">append</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"\n</span><span style="color:#98C379;--shiki-dark:#98C379">},</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n</span><span style="color:#98C379;--shiki-dark:#98C379">"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">append</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"{</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n\"</span><span style="color:#98C379;--shiki-dark:#98C379">Action</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">: "</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        switch</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (policyType) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            case</span><span style="color:#E06C75;--shiki-dark:#E06C75"> WRITE</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">append</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"[</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n\"</span><span style="color:#98C379;--shiki-dark:#98C379">s3:AbortMultipartUpload</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n\"</span><span style="color:#98C379;--shiki-dark:#98C379">s3:DeleteObject</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n\"</span><span style="color:#98C379;--shiki-dark:#98C379">s3:ListMultipartUploadParts</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n\"</span><span style="color:#98C379;--shiki-dark:#98C379">s3:PutObject</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"\n</span><span style="color:#98C379;--shiki-dark:#98C379">],</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n</span><span style="color:#98C379;--shiki-dark:#98C379">"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                break</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            case</span><span style="color:#E06C75;--shiki-dark:#E06C75"> READ_WRITE</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">append</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"[</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n\"</span><span style="color:#98C379;--shiki-dark:#98C379">s3:AbortMultipartUpload</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n\"</span><span style="color:#98C379;--shiki-dark:#98C379">s3:DeleteObject</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n\"</span><span style="color:#98C379;--shiki-dark:#98C379">s3:GetObject</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n\"</span><span style="color:#98C379;--shiki-dark:#98C379">s3:ListMultipartUploadParts</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n\"</span><span style="color:#98C379;--shiki-dark:#98C379">s3:PutObject</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"\n</span><span style="color:#98C379;--shiki-dark:#98C379">],</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n</span><span style="color:#98C379;--shiki-dark:#98C379">"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                break</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            default:</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">append</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">s3:GetObject</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n</span><span style="color:#98C379;--shiki-dark:#98C379">"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                break</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">append</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">Effect</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">: </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">Allow</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n\"</span><span style="color:#98C379;--shiki-dark:#98C379">Principal</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">: </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">*</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n\"</span><span style="color:#98C379;--shiki-dark:#98C379">Resource</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">: </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">arn:aws:s3:::"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">append</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bucketName);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">append</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"/*</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"\n</span><span style="color:#98C379;--shiki-dark:#98C379">}</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n</span><span style="color:#98C379;--shiki-dark:#98C379">],</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n\"</span><span style="color:#98C379;--shiki-dark:#98C379">Version</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">: </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">2012-10-17</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"\n</span><span style="color:#98C379;--shiki-dark:#98C379">}</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n</span><span style="color:#98C379;--shiki-dark:#98C379">"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">toString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>1.2 上传文件</h3>
<ol>
<li>上传oss</li>
<li>保存文件信息到数据库</li>
<li>返回文件简单VO</li>
</ol>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 文件服务</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> interface</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> RemoteFileService</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 上传文件</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> file</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 文件信息</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@return</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 结果</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    SysFile</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> upload</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> originalFilename</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> contentType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#C678DD;--shiki-dark:#C678DD">byte</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[] </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#C678DD;--shiki-dark:#C678DD"> throws</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ServiceException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
</div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Slf4j</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Service</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DubboService</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> RemoteFileServiceImpl</span><span style="color:#C678DD;--shiki-dark:#C678DD"> implements</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> RemoteFileService</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Autowired</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SysOssMapper</span><span style="color:#E06C75;--shiki-dark:#E06C75"> sysOssMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 文件上传请求</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Transactional</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">rollbackFor</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Exception</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SysFile</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> upload</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> originalFilename</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> contentType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#C678DD;--shiki-dark:#C678DD">byte</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[] </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#C678DD;--shiki-dark:#C678DD"> throws</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ServiceException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        try</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> suffix</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> StringUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">substring</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(originalFilename, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">originalFilename</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">lastIndexOf</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"."</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">originalFilename</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">length</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            OssClient</span><span style="color:#E06C75;--shiki-dark:#E06C75"> storage</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> OssFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">instance</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            UploadResult</span><span style="color:#E06C75;--shiki-dark:#E06C75"> uploadResult</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> storage</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">uploadSuffix</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(file, suffix, contentType);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 保存文件信息</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            SysOss</span><span style="color:#E06C75;--shiki-dark:#E06C75"> oss</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> SysOss</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            oss</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setUrl</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">uploadResult</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getUrl</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            oss</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setFileSuffix</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(suffix);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            oss</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setFileName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">uploadResult</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getFilename</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            oss</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setOriginalName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(originalFilename);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            oss</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setService</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">storage</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getConfigKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            sysOssMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">insert</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(oss);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            SysFile</span><span style="color:#E06C75;--shiki-dark:#E06C75"> sysFile</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> SysFile</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            sysFile</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setOssId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">oss</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getOssId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            sysFile</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">uploadResult</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getFilename</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            sysFile</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setUrl</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">uploadResult</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getUrl</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> sysFile;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD">catch</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Exception</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">error</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"上传文件失败"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, e);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            throw</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> ServiceException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"上传文件失败"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>1.3 查询资源</h3>
<p>如果是私有资源、需要对资源设置临时访问权限</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> TableDataInfo</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">SysOssVo</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> queryPageList</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SysOssBo</span><span style="color:#E06C75;--shiki-dark:#E06C75"> bo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> PageQuery</span><span style="color:#E06C75;--shiki-dark:#E06C75"> pageQuery) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    LambdaQueryWrapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SysOss</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> lqw </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> buildQueryWrapper</span><span style="color:#E06C75;--shiki-dark:#E06C75">(bo)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Page</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SysOssVo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> result </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> baseMapper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">selectVoPage</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">pageQuery</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), lqw);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SysOssVo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> filterResult </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> result</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getRecords</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">stream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">this</span><span style="color:#C678DD;--shiki-dark:#C678DD">::</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">matchingUrl).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">collect</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Collectors</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">toList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    result</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setRecords</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(filterResult);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> TableDataInfo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(result);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
</div><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 匹配Url</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> oss</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> OSS对象</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@return</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> oss 匹配Url的OSS对象</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SysOssVo</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> matchingUrl</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SysOssVo</span><span style="color:#E06C75;--shiki-dark:#E06C75"> oss) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    OssClient</span><span style="color:#E06C75;--shiki-dark:#E06C75"> storage </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> OssFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">instance</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">oss</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getService</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 仅修改桶类型为 private 的URL，临时URL时长为120s</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">AccessPolicyType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PRIVATE</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> ==</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> storage</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getAccessPolicy</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        oss</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setUrl</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">storage</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getPrivateUrl</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">oss</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getFileName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#D19A66;--shiki-dark:#D19A66">120</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> oss</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
</div><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getPrivateUrl</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> objectKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Integer</span><span style="color:#E06C75;--shiki-dark:#E06C75"> second) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    GeneratePresignedUrlRequest</span><span style="color:#E06C75;--shiki-dark:#E06C75"> generatePresignedUrlRequest </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> GeneratePresignedUrlRequest</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">properties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getBucketName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(),</span><span style="color:#E06C75;--shiki-dark:#E06C75"> objectKey)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">withMethod</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">HttpMethod</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">GET</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">withExpiration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Date</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">currentTimeMillis</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1000L</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> *</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> second));</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    URL</span><span style="color:#E06C75;--shiki-dark:#E06C75"> url </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> client</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">generatePresignedUrl</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(generatePresignedUrlRequest);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> url</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">toString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
</div>]]></content:encoded>
    </item>
    <item>
      <title>若依优化与问题记录</title>
      <link>https://mrjackc.github.io/posts/Architect/manage-system/manage-system-ruoyi-problem.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/manage-system/manage-system-ruoyi-problem.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">若依优化与问题记录</source>
      <description>若依优化与问题记录 1. 背景 记录使用过程中bug或优化建议 2. 若依BUG 2.1 后端 树结构采用递归方式，导致系统超时 2.2 前端 修复打包后字体图标偶现的乱码问题（提交RP时，发现最新版3.8一星期前已提交） 3. 若依优化 3.1 后端 数据库主键自增，在分布式场景下的局限非常大，且迁移的时候非常麻烦 适配多数据源 现在从mysql变更...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 背景</h2>
<p>记录使用过程中bug或优化建议</p>
<h2>2. 若依BUG</h2>
<h3>2.1 后端</h3>
<ol>
<li>树结构采用递归方式，导致系统超时</li>
</ol>
<h3>2.2 前端</h3>
<ol>
<li>修复打包后字体图标偶现的乱码问题（提交RP时，发现最新版3.8一星期前已提交）</li>
</ol>
<h2>3. 若依优化</h2>
<h3>3.1 后端</h3>
<ol>
<li>
<p>数据库主键自增，在分布式场景下的局限非常大，且迁移的时候非常麻烦</p>
</li>
<li>
<p>适配多数据源</p>
<ol>
<li>现在从mysql变更到oracle 不单单sql 语句不支持</li>
</ol>
</li>
<li>
<p>多数据库支持</p>
<ol>
<li>代码层与代码生成器都适配</li>
<li>方案
<ol>
<li>我的方案：根据数据库类型，针对有方言问题的sql写兼容sql</li>
<li>若依大佬：疯狂的狮子和芋道源码的做法，都是将此部门功能移到mybatis plus</li>
</ol>
</li>
</ol>
</li>
<li>
<p>主键采用自增方案，不适合分布式架构</p>
<blockquote>
<p>若依作者：我只能说你想多了，你说的方式对大部分人来说用不到，且不友好。<br>
如果有分布式需求或安全要求可以自己根据实际情况去修改。</p>
</blockquote>
</li>
<li>
<p>代码生成swagger模板（已提交PR）</p>
</li>
<li>
<p>日志输出格式优化，控制台彩色日志，info与error 同一文件输出，方便实施导出日志</p>
</li>
<li>
<p>下载的方式很麻烦。先生成文件，返回文件名给前端。再拿文件名 windows.open</p>
</li>
<li>
<p>分页控制在controller，只能第一个查询才能分页（PageHelper 方案问题）</p>
</li>
<li>
<p>excel 操作太难用</p>
</li>
<li>
<p>文件下载方式太奇葩，还先获取文件名，再去下载</p>
</li>
<li>
<p>树结构采用递归方式性能损耗极大</p>
</li>
<li>
<p>Redis 并发，高可用问题</p>
</li>
<li>
<p>日志分散在各个系统，最好能记录下日志链路</p>
</li>
<li>
<p>系统监控是单点的，集群环境下只能监控到请求的那台服务器。且获取系统信息超级慢</p>
</li>
<li>
<p>返回结果不支持泛型，在接口文档处不能很好的体现返回值</p>
</li>
<li>
<p>部分场景 用户ip 获取不准确，hutool 的工具类可以</p>
</li>
</ol>
<h3>3.2 前端</h3>
<ol>
<li>前端下载文件指定文件名</li>
<li>自动生成的前端弹框，容易误触消失（准备提交PR）</li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>后台管理 - 短信服务适配</title>
      <link>https://mrjackc.github.io/posts/Architect/manage-system/manage-system-sms.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/manage-system/manage-system-sms.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">后台管理 - 短信服务适配</source>
      <description>后台管理 - 短信服务适配 1. 具体实现 1.1 初始化 通过springboot @AutoConfiguration 自动注入 通过@ConditionalOnClass() 判断具体导入谁（是阿里还是用腾讯云） 1.2 短信模板 抽象出模板类、针对平台特殊的参数通过map传入 发送由具体模板实现 针对返回结果组装成自己的result 阿里模板 ...</description>
      <category>后台管理</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 具体实现</h2>
<h3>1.1 初始化</h3>
<ol>
<li>通过springboot @AutoConfiguration 自动注入</li>
<li>通过@ConditionalOnClass() 判断具体导入谁（是阿里还是用腾讯云）</li>
</ol>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 短信配置类</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@author</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> Lion Li</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@version</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 4.2.0</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">AutoConfiguration</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">EnableConfigurationProperties</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SmsProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SmsAutoConfiguration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Configuration</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ConditionalOnProperty</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "sms.enabled"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66"> havingValue</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "true"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ConditionalOnClass</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">com</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">aliyun</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">dysmsapi20170525</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Client</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> AliyunSmsConfiguration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Bean</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SmsTemplate</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> aliyunSmsTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SmsProperties</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> smsProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            return</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> AliyunSmsTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(smsProperties);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Configuration</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ConditionalOnProperty</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "sms.enabled"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66"> havingValue</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "true"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ConditionalOnClass</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">com</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">tencentcloudapi</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">sms</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">v20190711</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SmsClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    static</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> TencentSmsConfiguration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Bean</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SmsTemplate</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> tencentSmsTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SmsProperties</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> smsProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            return</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> TencentSmsTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(smsProperties);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>1.2 短信模板</h3>
<ol>
<li>抽象出模板类、针对平台特殊的参数通过map传入</li>
<li>发送由具体模板实现</li>
<li>针对返回结果组装成自己的result</li>
</ol>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 短信模板</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@version</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 4.2.0</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> interface</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SmsTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 发送短信</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> phones</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     电话号(多个逗号分割)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> templateId</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 模板id</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> param</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      模板对应参数</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *                   阿里 需使用 模板变量名称对应内容 例如: code=1234</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *                   腾讯 需使用 模板变量顺序对应内容 例如: 1=1234, 1为模板内第一个参数</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    SmsResult</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> send</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> phones</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> templateId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">param</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>阿里模板</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * Aliyun 短信模板</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@author</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> Lion Li</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@version</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 4.2.0</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> AliyunSmsTemplate</span><span style="color:#C678DD;--shiki-dark:#C678DD"> implements</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SmsTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SmsProperties</span><span style="color:#E06C75;--shiki-dark:#E06C75"> properties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Client</span><span style="color:#E06C75;--shiki-dark:#E06C75"> client</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SneakyThrows</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Exception</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> AliyunSmsTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SmsProperties</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> smsProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">properties</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> smsProperties;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Config</span><span style="color:#E06C75;--shiki-dark:#E06C75"> config</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Config</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 您的AccessKey ID</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setAccessKeyId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">smsProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getAccessKeyId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">())</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 您的AccessKey Secret</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setAccessKeySecret</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">smsProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getAccessKeySecret</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">())</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 访问的域名</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setEndpoint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">smsProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getEndpoint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">client</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Client</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(config);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SmsResult</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> send</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> phones</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> templateId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">param</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">StringUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isBlank</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(phones)) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            throw</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> SmsException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"手机号不能为空"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">StringUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isBlank</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(templateId)) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            throw</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> SmsException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"模板ID不能为空"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        SendSmsRequest</span><span style="color:#E06C75;--shiki-dark:#E06C75"> req</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> SendSmsRequest</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setPhoneNumbers</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(phones)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setSignName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">properties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getSignName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">())</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setTemplateCode</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(templateId)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setTemplateParam</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">JsonUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">toJsonString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(param));</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        try</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            SendSmsResponse</span><span style="color:#E06C75;--shiki-dark:#E06C75"> resp</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> client</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">sendSms</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(req);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SmsResult</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isSuccess</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"OK"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">equals</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">resp</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getBody</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getCode</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()))</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">message</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">resp</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getBody</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getMessage</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">())</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">response</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">JsonUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">toJsonString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(resp))</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD">catch</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Exception</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            throw</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> SmsException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">e</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getMessage</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>腾讯模板</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * Tencent 短信模板</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@author</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> Lion Li</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@version</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 4.2.0</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> TencentSmsTemplate</span><span style="color:#C678DD;--shiki-dark:#C678DD"> implements</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SmsTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SmsProperties</span><span style="color:#E06C75;--shiki-dark:#E06C75"> properties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SmsClient</span><span style="color:#E06C75;--shiki-dark:#E06C75"> client</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SneakyThrows</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Exception</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> TencentSmsTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SmsProperties</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> smsProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">properties</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> smsProperties;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Credential</span><span style="color:#E06C75;--shiki-dark:#E06C75"> credential</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Credential</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">smsProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getAccessKeyId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">smsProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getAccessKeySecret</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        HttpProfile</span><span style="color:#E06C75;--shiki-dark:#E06C75"> httpProfile</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> HttpProfile</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        httpProfile</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setEndpoint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">smsProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getEndpoint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        ClientProfile</span><span style="color:#E06C75;--shiki-dark:#E06C75"> clientProfile</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> ClientProfile</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        clientProfile</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setHttpProfile</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(httpProfile);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">client</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> SmsClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(credential, </span><span style="color:#98C379;--shiki-dark:#98C379">""</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, clientProfile);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SmsResult</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> send</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> phones</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> templateId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">param</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">StringUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isBlank</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(phones)) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            throw</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> SmsException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"手机号不能为空"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">StringUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isBlank</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(templateId)) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            throw</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> SmsException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"模板ID不能为空"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        SendSmsRequest</span><span style="color:#E06C75;--shiki-dark:#E06C75"> req</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> SendSmsRequest</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75">set</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Arrays</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">stream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">phones</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">split</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">","</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(p </span><span style="color:#C678DD;--shiki-dark:#C678DD">-&gt;</span><span style="color:#98C379;--shiki-dark:#98C379"> "+86"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> p).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">collect</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Collectors</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">toSet</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        req</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setPhoneNumberSet</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ArrayUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">toArray</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(set, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">CollUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isNotEmpty</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(param)) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            req</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setTemplateParamSet</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ArrayUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">toArray</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">param</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">values</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        req</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setTemplateID</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(templateId);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        req</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setSign</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">properties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getSignName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        req</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setSmsSdkAppid</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">properties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getSdkAppId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        try</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            SendSmsResponse</span><span style="color:#E06C75;--shiki-dark:#E06C75"> resp</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> client</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">SendSms</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(req);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            SmsResult</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SmsResultBuilder</span><span style="color:#E06C75;--shiki-dark:#E06C75"> builder</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SmsResult</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isSuccess</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">message</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"send success"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">response</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">JsonUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">toJsonString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(resp));</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SendStatus</span><span style="color:#E06C75;--shiki-dark:#E06C75"> sendStatus</span><span style="color:#C678DD;--shiki-dark:#C678DD"> :</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> resp</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getSendStatusSet</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!</span><span style="color:#98C379;--shiki-dark:#98C379">"Ok"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">equals</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">sendStatus</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getCode</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">())) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isSuccess</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">false</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">message</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">sendStatus</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getMessage</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                    break</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD">catch</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Exception</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            throw</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> SmsException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">e</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getMessage</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>SpringSecurity权限控制&amp;实现思路</title>
      <link>https://mrjackc.github.io/posts/Architect/manage-system/manage-system-springsecurity-rbac.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/manage-system/manage-system-springsecurity-rbac.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">SpringSecurity权限控制&amp;实现思路</source>
      <description>SpringSecurity权限控制&amp;实现思路 1. 简介 权限控制是项目中必不可少的部分 2. 表结构 5 个表的关系比较简单： 一个 SysUser ，可以拥有多个 SysRole ，通过 SysUserRole 存储关联。 一个 SysRole ，可以拥有多个 SysMenu ，通过 SysRoleMenu 存储关联。 2.1 SysUser S...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 简介</h2>
<p>权限控制是项目中必不可少的部分</p>
<h2>2. 表结构</h2>
<p>| 实体        | 表              | 说明           |<br>
| :</p>
]]></content:encoded>
    </item>
    <item>
      <title>后台管理系统技术选型</title>
      <link>https://mrjackc.github.io/posts/Architect/manage-system/manage-system-technical-selection.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/manage-system/manage-system-technical-selection.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">后台管理系统技术选型</source>
      <description>后台管理系统技术选型 1. 背景简介 1.1 原有框架问题 原有公司内部框架已经很老了，最早的架构师已经离职了，维护更新不及时。且原有框架也有不少槽点 UI 样式丑陋，原有框架是前后端不分离的，早期都是由java后端人员开发。现在的前端人员接手困难，后端人员维护起来效率低 数据持久层框架采用beetlsql，学习成本高，且后期遇到问题难排查 在改造成前...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 背景简介</h2>
<h3>1.1 原有框架问题</h3>
<p>原有公司内部框架已经很老了，最早的架构师已经离职了，维护更新不及时。且原有框架也有不少槽点</p>
<ul>
<li>UI 样式丑陋，原有框架是前后端不分离的，早期都是由java后端人员开发。现在的前端人员接手困难，后端人员维护起来效率低</li>
<li>数据持久层框架采用beetlsql，学习成本高，且后期遇到问题难排查</li>
<li>在改造成前后端分离时，登录与权限控制改造成本高</li>
<li>缺少数据监控功能</li>
</ul>
<h3>1.2 新框架选型目标</h3>
<p>现年底公司业务比较平稳，明年新项目启动，这段时间正好有时间可以做一个技术选型。以下是选型目标</p>
<ul>
<li>技术特性
<ul>
<li>易用性：使用常用技术框架（减少大家学习成本）</li>
<li>可维护性</li>
<li>可扩展性：</li>
<li>性能</li>
</ul>
</li>
<li>技术成熟度：
<ul>
<li>不追求新技术，成熟稳定即可</li>
</ul>
</li>
<li>社区活跃度：
<ul>
<li>尽量使用开源技术</li>
<li>社区活跃后期有问题方便咨询等</li>
</ul>
</li>
<li>架构匹配和演化：
<ul>
<li>目前项目只需要前后端分离，未来可能有微服务改造需求，需提前有预案</li>
<li>数据库mysql、oralce、国产数据库-达梦（可自己改造，但不希望花太多时间）</li>
</ul>
</li>
<li>团队成员因素:
<ul>
<li>前端同事技术栈：Vue、element、vue-element-admin</li>
</ul>
</li>
</ul>
<h2>2. 考量点</h2>
<p>| 考量点       | 公司内部框架                                        | 若依管理系统                                                 | jeecg管理系统                                                | FEBS权限管理系统                                             |<br>
|</p>
]]></content:encoded>
    </item>
    <item>
      <title>消息中心数据库设计</title>
      <link>https://mrjackc.github.io/posts/Architect/messagesystem/message-system-db-design.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/messagesystem/message-system-db-design.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">消息中心数据库设计</source>
      <description>消息中心数据库设计 1. 背景 消息中心是大部分系统都有的功能，如何设计一个合理的消息系统呢？ 需求： 每个用户收到消息都应该知道，该消息的已读未读状态 2. 数据库设计 2.1 消息表 基础的消息表如上 2.1.1 消息表补充 如果需要记录 该条提醒所关联的对象 该条提醒所关联的动作 例如 小明喜欢了文章， 喜欢是：action 那篇文章：targe...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 背景</h2>
<p>消息中心是大部分系统都有的功能，如何设计一个合理的消息系统呢？</p>
<p>需求：</p>
<ul>
<li>每个用户收到消息都应该知道，该消息的已读未读状态</li>
</ul>
<h2>2. 数据库设计</h2>
<h3>2.1 消息表</h3>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">CREATE</span><span style="color:#C678DD;--shiki-dark:#C678DD"> TABLE</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> T_SYS_NOTIFY</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    ID </span><span style="color:#C678DD;--shiki-dark:#C678DD">BIGINT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">19</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">NOT NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> AUTO_INCREMENT  COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379">'主键'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ,</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    TYPE</span><span style="color:#C678DD;--shiki-dark:#C678DD"> INT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">10</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)    COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379">'操作类型，1 系统通知，2，用户消息'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    TITLE </span><span style="color:#C678DD;--shiki-dark:#C678DD">VARCHAR</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">64</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)    COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379">'标题'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    CONTENT </span><span style="color:#C678DD;--shiki-dark:#C678DD">VARCHAR</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">512</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)    COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379">'通知内容'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    CREATE_BY </span><span style="color:#C678DD;--shiki-dark:#C678DD">BIGINT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">19</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)    COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379">'创建人'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    CREATE_TIME </span><span style="color:#C678DD;--shiki-dark:#C678DD">DATETIME</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379">'创建时间'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    REMARK </span><span style="color:#C678DD;--shiki-dark:#C678DD">VARCHAR</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">64</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)    COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379">'备注'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ,</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    PRIMARY KEY</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (ID)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) COMMENT </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379"> '系统消息表 '</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span></code></pre>
</div><p>基础的消息表如上</p>
<h4>2.1.1  消息表补充</h4>
<p>如果需要记录</p>
<ul>
<li>
<p>该条提醒<strong>所关联的对象</strong></p>
</li>
<li>
<p>该条提醒<strong>所关联的动作</strong></p>
</li>
</ul>
<p>例如</p>
<ul>
<li>小明喜欢了文章，
<ul>
<li>喜欢是：action</li>
<li>那篇文章：target，targetType</li>
</ul>
</li>
</ul>
<p>则需要新增<code>target</code>、<code>targetType</code>、<code>action</code>字段。</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">ALTER</span><span style="color:#C678DD;--shiki-dark:#C678DD"> TABLE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> T_SYS_NOTIFY </span><span style="color:#C678DD;--shiki-dark:#C678DD">ADD</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> COLUMN </span><span style="color:#C678DD;--shiki-dark:#C678DD">target</span><span style="color:#C678DD;--shiki-dark:#C678DD"> VARCHAR</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">32</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)     COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379">'目标的ID'</span><span style="color:#C678DD;--shiki-dark:#C678DD"> AFTER</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> CONTENT;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">ALTER</span><span style="color:#C678DD;--shiki-dark:#C678DD"> TABLE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> T_SYS_NOTIFY </span><span style="color:#C678DD;--shiki-dark:#C678DD">ADD</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> COLUMN targetType </span><span style="color:#C678DD;--shiki-dark:#C678DD">VARCHAR</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">32</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)     COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379">'目标的类型'</span><span style="color:#C678DD;--shiki-dark:#C678DD"> AFTER</span><span style="color:#C678DD;--shiki-dark:#C678DD"> target</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">ALTER</span><span style="color:#C678DD;--shiki-dark:#C678DD"> TABLE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> T_SYS_NOTIFY </span><span style="color:#C678DD;--shiki-dark:#C678DD">ADD</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> COLUMN </span><span style="color:#C678DD;--shiki-dark:#C678DD">action</span><span style="color:#C678DD;--shiki-dark:#C678DD"> VARCHAR</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">32</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)     COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379">'提醒信息的动作类型'</span><span style="color:#C678DD;--shiki-dark:#C678DD"> AFTER</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> targetType;</span></span></code></pre>
</div><h3>2.2 用户消息表</h3>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">CREATE</span><span style="color:#C678DD;--shiki-dark:#C678DD"> TABLE</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> T_SYS_USER_NOTIFY</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    ID </span><span style="color:#C678DD;--shiki-dark:#C678DD">BIGINT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">19</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">NOT NULL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> AUTO_INCREMENT  COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379">'主键'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    NOTIFY_ID </span><span style="color:#C678DD;--shiki-dark:#C678DD">BIGINT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">19</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)    COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379">'通知id'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    USER_ID </span><span style="color:#C678DD;--shiki-dark:#C678DD">BIGINT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">19</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)    COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379">'用户id'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    IS_READ </span><span style="color:#C678DD;--shiki-dark:#C678DD">INT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">10</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)    COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379">'是否已读'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    CREATE_TIME </span><span style="color:#C678DD;--shiki-dark:#C678DD">DATETIME</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    COMMENT </span><span style="color:#98C379;--shiki-dark:#98C379">'创建时间'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ,</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    PRIMARY KEY</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (ID)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) COMMENT </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379"> '用户消息表 '</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span></code></pre>
</div><h2>参考文章</h2>
<p><a href="https://www.jianshu.com/p/6bf8166b291c" target="_blank" rel="noopener noreferrer">消息系统设计与实现「下篇」</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>消息中心各场景消息发送逻辑</title>
      <link>https://mrjackc.github.io/posts/Architect/messagesystem/message-system-process.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/messagesystem/message-system-process.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">消息中心各场景消息发送逻辑</source>
      <description>消息中心各场景消息发送逻辑 1. 简介 消息中心在各场景下的发送逻辑是不一致的，例如 发送给单人的业务消息。我们希望发送完消息后，用户立即收到消息 而像类似通知公告这类消息，面向的是所有用户，那么我们不可能一次性发给所有用户。所以我们采用登录或进入首页后，重新拉取新消息的模式 2. 接口设计 NotifyService拥有以下方法: createAnn...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 简介</h2>
<p>消息中心在各场景下的发送逻辑是不一致的，例如</p>
<ul>
<li>发送给单人的业务消息。我们希望发送完消息后，用户立即收到消息</li>
<li>而像类似通知公告这类消息，面向的是所有用户，那么我们不可能一次性发给所有用户。所以我们采用登录或进入首页后，重新拉取新消息的模式</li>
</ul>
<h2>2. 接口设计</h2>
<p>NotifyService拥有以下方法:</p>
<ul>
<li>createAnnounce(content, sender)
<ol>
<li>往Notify表中插入一条公告记录</li>
</ol>
</li>
<li>createRemind(target, targetType, action, sender, content)
<ol>
<li>往Notify表中插入一条提醒记录</li>
</ol>
</li>
<li>createMessage(content, sender, receiver)
<ol>
<li>往Notify表中插入一条信息记录</li>
<li>往UserNotify表中插入一条记录，并关联新建的Notify</li>
</ol>
</li>
<li>pullAnnounce(user)
<ol>
<li>从UserNotify中获取最近的一条公告信息的创建时间: <code>lastTime</code></li>
<li>用<code>lastTime</code>作为过滤条件，查询Notify的公告信息</li>
<li>新建UserNotify并关联查询出来的公告信息</li>
</ol>
</li>
<li>pullRemind(user)
<ol>
<li>查询用户的订阅表，得到用户的一系列订阅记录</li>
<li>通过每一条的订阅记录的<code>target</code>、<code>targetType</code>、<code>action</code>、<code>createdAt</code>去查询Notify表，获取订阅的Notify记录。（注意订阅时间必须早于提醒创建时间）</li>
<li>查询用户的配置文件SubscriptionConfig，如果没有则使用默认的配置DefaultSubscriptionConfig</li>
<li>使用订阅配置，过滤查询出来的Notify</li>
<li>使用过滤好的Notify作为关联新建UserNotify</li>
</ol>
</li>
<li>subscribe(user, target, targetType, reason)
<ol>
<li>通过reason，查询NotifyConfig，获取对应的动作组:<code>actions</code></li>
<li>遍历动作组，每一个动作新建一则Subscription记录</li>
</ol>
</li>
<li>cancelSubscription(user, target ,targetType)
<ol>
<li>删除<code>user</code>、<code>target</code>、<code>targetType</code>对应的一则或多则记录</li>
</ol>
</li>
<li>getSubscriptionConfig(userID)
<ol>
<li>查询SubscriptionConfig表，获取用户的订阅配置</li>
</ol>
</li>
<li>updateSubscriptionConfig(userID)
<ol>
<li>更新用户的SubscriptionConfig记录</li>
</ol>
</li>
<li>getUserNotify(userID)
<ol>
<li>获取用户的消息列表</li>
</ol>
</li>
<li>read(user, notifyIDs)
<ol>
<li>更新指定的notify，把isRead属性设置为true</li>
</ol>
</li>
</ul>
<h2>3. 各场景发送逻辑</h2>
<h3>3.1 提醒的订阅、创建、拉取</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301224446.png" alt="image-20211103151303897" tabindex="0" loading="lazy"><figcaption>image-20211103151303897</figcaption></figure>
<ol>
<li>我们可以在产品创建之后，调用<code>NotifyService.subscribe</code>方法，</li>
<li>然后在产品被评论之后调用<code>NotifyService.createRemind</code>方法，</li>
<li>再就是用户登录系统或者其他的某一个时刻调</li>
<li>用<code>NotifyService.pullRemind</code>方法，<br>
最后在用户查询消息队列的时候调用<code>NotifyService.getUserNotify</code>方法。</li>
</ol>
<h3>3.2 公告的创建、拉取</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301224488.png" alt="image-20211103151351090" tabindex="0" loading="lazy"><figcaption>image-20211103151351090</figcaption></figure>
<ol>
<li>在管理员发送了一则公告的时候，调用<code>NotifyService.createAnnounce</code>方法，</li>
<li>然后在用户登录系统或者其他的某一个时刻调用<code>NotifyService.pullAnnounce</code>方法，</li>
<li>最后在用户查询消息队列的时候调用<code>NotifyService.getUserNotify</code>方法。</li>
</ol>
<h3>3.3 信息的创建</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301224515.png" alt="image-20211103151524274" tabindex="0" loading="lazy"><figcaption>image-20211103151524274</figcaption></figure>
<p>信息的创建，只需要直接调用<code>NotifyService.createMessage</code>方法就可以了，<br>
在下一次用户查询消息队列的时候，就会查询这条信息。</p>
<h2>参考文章</h2>
<p><a href="https://www.jianshu.com/p/6bf8166b291c" target="_blank" rel="noopener noreferrer">消息系统设计与实现「下篇」</a></p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301224446.png" type="image/png"/>
    </item>
    <item>
      <title>微服务 - 概述</title>
      <link>https://mrjackc.github.io/posts/Architect/microservices/ms-overview.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/microservices/ms-overview.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">微服务 - 概述</source>
      <description>微服务 - 概述 nacos（服务发现和配置中心、元数据中心） 官方文档：https://nacos.io/zh-cn/docs/what-is-nacos.html 好文：Nacos注册中心的部署与用法详细介绍 好文：Nacos配置中心用法详细介绍 spring-cloud-loadbalancer（负载均衡） Dubbo: RPC通信 与 微服务治...</description>
      <category>架构</category>
      <category>微服务</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<ul>
<li>
<p>nacos（服务发现和配置中心、元数据中心）</p>
<ul>
<li><a href="https://nacos.io/zh-cn/docs/what-is-nacos.html" target="_blank" rel="noopener noreferrer">官方文档：https://nacos.io/zh-cn/docs/what-is-nacos.html</a></li>
<li><a href="https://blog.csdn.net/a745233700/article/details/122915663" target="_blank" rel="noopener noreferrer">好文：Nacos注册中心的部署与用法详细介绍</a></li>
<li><a href="https://blog.csdn.net/a745233700/article/details/122916208" target="_blank" rel="noopener noreferrer">好文：Nacos配置中心用法详细介绍</a></li>
</ul>
</li>
<li>
<p>spring-cloud-loadbalancer（负载均衡）</p>
</li>
<li>
<p>Dubbo: RPC通信 与 微服务治理</p>
<ul>
<li><a href="https://dubbo.apache.org/zh/overview/what/overview/" target="_blank" rel="noopener noreferrer">官方文档：https://dubbo.apache.org/zh/overview/what/overview/</a></li>
</ul>
</li>
<li>
<p>sentinel 服务容错（流控、降级、服务负载）</p>
<ul>
<li><a href="https://sentinelguard.io/zh-cn/docs/introduction.html" target="_blank" rel="noopener noreferrer">官方文档：https://sentinelguard.io/zh-cn/docs/introduction.html</a></li>
<li><a href="https://sentinelguard.io/zh-cn/blog/sentinel-vs-hystrix.html" target="_blank" rel="noopener noreferrer">官方文档：Sentinel 与 Hystrix 的对比</a></li>
</ul>
</li>
<li>
<p>spring-cloud-stream（mq封装）</p>
<ul>
<li><a href="https://spring.io/projects/spring-cloud-stream" target="_blank" rel="noopener noreferrer">官方文档：https://spring.io/projects/spring-cloud-stream</a></li>
<li><a href="https://fangjian0423.github.io/2019/04/03/spring-cloud-stream-intro/" target="_blank" rel="noopener noreferrer">好文：干货｜Spring Cloud Stream 体系及原理介绍</a></li>
</ul>
</li>
<li>
<p>SpringCloud Gateway (服务网关)</p>
<ul>
<li><a href="https://spring.io/projects/spring-cloud-gateway" target="_blank" rel="noopener noreferrer">官方文档：https://spring.io/projects/spring-cloud-gateway</a></li>
<li><a href="https://blog.csdn.net/a745233700/article/details/122917167" target="_blank" rel="noopener noreferrer">好文：Spring Cloud Gateway 服务网关的部署与使用详细介绍</a></li>
</ul>
</li>
<li>
<p>认证中心</p>
<ul>
<li><a href="https://sa-token.dev33.cn/doc.html#/micro/dcs-session" target="_blank" rel="noopener noreferrer">Sa-Token官网：微服务 - 分布式Session会话</a></li>
</ul>
</li>
<li>
<p>Skywalking （链路追踪）</p>
<ul>
<li><a href="https://skyapm.github.io/document-cn-translation-of-skywalking/zh/8.0.0/concepts-and-designs/" target="_blank" rel="noopener noreferrer">中文官网</a></li>
<li><a href="https://blog.csdn.net/a745233700/article/details/124456810" target="_blank" rel="noopener noreferrer">好文：Skywalking全链路追踪使用说明</a></li>
</ul>
</li>
<li>
<p>seata（分布式事务）</p>
<blockquote>
<p>核心原理：Seata把一个分布式事务理解成一个包含了若干分支事务的全局事务，而一个分支事务是一个满足 ACID 的本地事务，因此我们可以操作分布式事务像操作本地事务一样。</p>
<p>Seata 内部定义了 3个模块来处理全局事务和分支事务的关系和处理过程，这三个组件分别是：</p>
<ul>
<li>Transaction Coordinator (TC)： 事务协调器，维护全局事务的运行状态，负责协调并驱动全局事务的提交或回滚。</li>
<li>Transaction Manager (TM)： 控制全局事务的边界，负责开启一个全局事务，并最终发起全局提交或全局回滚的决议。</li>
<li>Resource Manager (RM)： 控制分支事务，负责分支注册、状态汇报，并接收事务协调器的指令，驱动分支（本地）事务的提交和回滚。</li>
</ul>
<p>简要说说整个全局事务的执行步骤：</p>
<ol>
<li>TM 向 TC 申请开启一个全局事务，TC 创建全局事务后返回全局唯一的 XID，XID 会在全局事务的上下文中传播；</li>
<li>RM 向 TC 注册分支事务，该分支事务归属于拥有相同 XID 的全局事务；</li>
<li>TM 向 TC 发起全局提交或回滚；</li>
<li>TC 调度 XID 下的分支事务完成提交或者回滚。</li>
</ol>
<h3>分支事务如何提交和回滚？</h3>
<p>下面详细说说分支事务是如何提交和回滚的：</p>
<ul>
<li>第一阶段：</li>
</ul>
<p>分支事务利用 RM 模块中对 JDBC 数据源代理，加入了若干流程，对业务 SQL 进行解释，把业务数据在更新前后的数据镜像组织成回滚日志，并生成 undo log 日志，对全局事务锁的检查以及分支事务的注册等，利用本地事务 ACID 特性，将业务 SQL 和 undo log 写入同一个事物中一同提交到数据库中，保证业务 SQL 必定存在相应的回滚日志，最后对分支事务状态向 TC 进行上报。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301225350.png" alt="image-20221215234622450" tabindex="0" loading="lazy"><figcaption>image-20221215234622450</figcaption></figure>
<ul>
<li>第二阶段：</li>
</ul>
<p>TM决议全局提交：</p>
<p>当 TM 决议提交时，就不需要同步协调处理了，TC 会异步调度各个 RM 分支事务删除对应的 undo log 日志即可，这个步骤非常快速地可以完成。这个机制对于性能提升非常关键，我们知道正常的业务运行过程中，事务执行的成功率是非常高的，因此可以直接在本地事务中提交，这步对于提升性能非常显著。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301225395.png" alt="image-20221215234611409" tabindex="0" loading="lazy"><figcaption>image-20221215234611409</figcaption></figure>
<p>TM决议全局回滚：</p>
<p>当 TM 决议回滚时，RM 收到 TC 发送的回滚请求，RM 通过 XID 找到对应的 undo log 回滚日志，然后利用本地事务 ACID 特性，执行回滚日志完成回滚操作并删除 undo log 日志，最后向 TC 进行回滚结果上报。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301225418.png" alt="image-20221215234558952" tabindex="0" loading="lazy"><figcaption>image-20221215234558952</figcaption></figure>
<p>业务对以上所有的流程都无感知，业务完全不关心全局事务的具体提交和回滚，而且最重要的一点是 Seata 将两段式提交的同步协调分解到各个分支事务中了，分支事务与普通的本地事务无任何差异，这意味着我们使用 Seata 后，分布式事务就像使用本地事务一样，完全将数据库层的事务协调机制交给了中间件层 Seata 去做了，这样虽然事务协调搬到应用层了，但是依然可以做到对业务的零侵入，从而剥离了分布式事务方案对数据库在协议支持上的要求，且 Seata 在分支事务完成之后直接释放资源，极大减少了分支事务对资源的锁定时间，完美避免了 XA 协议需要同步协调导致资源锁定时间过长的问题。</p>
<p>Q:<code>Seata</code>作为分布式事务时，有些时候我们的分布式时候并不是每次都可以成功的，而对于这些失败的分布式事务就需要进行通知</p>
<p>A：实现FailureHandler，来监听失败处理</p>
</blockquote>
<ul>
<li><a href="http://seata.io/zh-cn/" target="_blank" rel="noopener noreferrer">官网</a></li>
<li><a href="https://seata.io/zh-cn/blog/seata-at-mode-design.html" target="_blank" rel="noopener noreferrer">官网：分布式事务中间件Seata 的设计原理</a></li>
<li><a href="https://juejin.cn/post/7116023320989925389#heading-1" target="_blank" rel="noopener noreferrer">好文：分布式事务(Seata) 四大模式详解</a></li>
<li><a href="https://blog.csdn.net/fu_huo_1993/article/details/120655233" target="_blank" rel="noopener noreferrer">好文：Seata分布式事务失败后的处理</a></li>
</ul>
</li>
<li>
<p>elk</p>
<ul>
<li><a href="https://blog.csdn.net/u012562943/article/details/101060053" target="_blank" rel="noopener noreferrer">好文：ELK学习总结（2）——ELK 原理介绍及实践详解</a></li>
<li><a href="https://developer.aliyun.com/article/801870" target="_blank" rel="noopener noreferrer">好文：干货 | Logstash Grok数据结构化ETL实战</a></li>
</ul>
</li>
<li>
<p>Prometheus/grafana(服务监控)（补充、可不看）</p>
<ul>
<li><a href="https://www.hellopz.com/2020/09/18/Prometheus-%E7%9B%91%E6%8E%A7%E6%96%B9%E6%A1%88%E7%AE%80%E8%BF%B0/" target="_blank" rel="noopener noreferrer">Prometheus 监控方案简述</a></li>
</ul>
</li>
</ul>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301225350.png" type="image/png"/>
    </item>
    <item>
      <title>微服务 - 软件架构</title>
      <link>https://mrjackc.github.io/posts/Architect/microservices/ms-x-arch.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/microservices/ms-x-arch.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">微服务 - 软件架构</source>
      <description>微服务 - 软件架构 image-20221124221146555image-20221124221146555 前端通过api 请求 到服务端经过F5硬件负载均衡和nginx 软件负载均衡、走到我们服务网关集群 网关针对请求做路由转发到各个的服务集群、各服务之间通过dubbo进行通信 其中各服务通过nacos 做服务注册中心与配置中心、sentin...</description>
      <category>架构</category>
      <category>微服务</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301227385.png" alt="image-20221124221146555" tabindex="0" loading="lazy"><figcaption>image-20221124221146555</figcaption></figure>
<ul>
<li>前端通过api 请求 到服务端经过F5硬件负载均衡和nginx 软件负载均衡、走到我们服务网关集群</li>
<li>网关针对请求做路由转发到各个的服务集群、各服务之间通过dubbo进行通信</li>
<li>其中各服务通过nacos 做服务注册中心与配置中心、sentinel 做流控降级</li>
<li>底层采用redis、mysql、minio、es 、rabbitmq 做数据支持</li>
<li>通过skywalking 和 springboot admin、elk 做系统监控</li>
</ul>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301227385.png" type="image/png"/>
    </item>
    <item>
      <title>微服务 - 看法与思考</title>
      <link>https://mrjackc.github.io/posts/Architect/microservices/ms-x-view.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/microservices/ms-x-view.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">微服务 - 看法与思考</source>
      <description>微服务 - 看法与思考 1. 微服务 1.1 为什么使用微服务 大型服务 单例服务如果流量大了就抗不住，微服务可以加机器搞流量 加机器的地方，最理想的就是：弹性伸缩，流量下去就缩容，流量上来就扩容，能最恰好的使用资源 传统的巨大单体应用程序在部署和运行时，需要单台服务器具有大量内存和其他资源 规范化 规范化，大家用同一套框架规范，可以沉淀和深入技术，还...</description>
      <category>架构</category>
      <category>微服务</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 微服务</h2>
<h3>1.1 为什么使用微服务</h3>
<ul>
<li>大型服务
<ul>
<li>单例服务如果流量大了就抗不住，微服务可以加机器搞流量</li>
<li>加机器的地方，最理想的就是：弹性伸缩，流量下去就缩容，流量上来就扩容，能最恰好的使用资源</li>
<li>传统的巨大单体应用程序在部署和运行时，需要单台服务器具有大量内存和其他资源</li>
</ul>
</li>
<li>规范化
<ul>
<li>规范化，大家用同一套框架规范，可以沉淀和深入技术，还可以培养技术氛围</li>
</ul>
</li>
<li>业务拆分
<ul>
<li>业务拆分，解耦业务，各司其职</li>
</ul>
</li>
</ul>
<blockquote>
<p>不过如果你是搞个小服务，内部服务，微服务还是太重，甚至 java 都重，可以用其它语言 python node 写几行代码就行</p>
</blockquote>
<h2>参考文章</h2>
<p><a href="https://segmentfault.com/a/1190000041223236" target="_blank" rel="noopener noreferrer">为什么要使用微服务</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>Minio基础 - Minio之权限控制策略</title>
      <link>https://mrjackc.github.io/posts/Architect/minio/minio-access-control.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/minio/minio-access-control.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">Minio基础 - Minio之权限控制策略</source>
      <description>Minio基础 - Minio之权限控制策略 1. 前言 华为云OBS 和其他产商的OSS 都是一个东西，对象存储 ACL(Access Control List ): 访问控制列表（ACL） 本段文章来源于华为云OBS，因为都是S3标准的对象存储，所以很多概念和Minio是相通的。 1.1 为什么要进行访问权限控制（华为OBS） 为保证存储在SSO中...</description>
      <category>Minio</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 前言</h2>
<blockquote>
<p>华为云OBS 和其他产商的OSS 都是一个东西，对象存储</p>
</blockquote>
<blockquote>
<p>ACL(Access Control List ): 访问控制列表（ACL）</p>
</blockquote>
<p>本段文章来源于华为云OBS，因为都是S3标准的对象存储，所以很多概念和Minio是相通的。</p>
<h3>1.1 为什么要进行访问权限控制（华为OBS）</h3>
<p>为保证存储在SSO中数据的安全性，SSO资源（桶和对象）默认为私有，只有资源拥有者可以访问。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301229938.png" alt="image-20220723215329125" tabindex="0" loading="lazy"><figcaption>image-20220723215329125</figcaption></figure>
<p>如果要允许他人访问和使用自己的SSO资源，可以设置访问权限控制策略，向他人授予指定资源的特定权限。</p>
<h3>1.2 访问权限控制的典型场景（华为OBS）</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301229977.png" alt="image-20220723215427075" tabindex="0" loading="lazy"><figcaption>image-20220723215427075</figcaption></figure>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301229006.png" alt="image-20220723215435149" tabindex="0" loading="lazy"><figcaption>image-20220723215435149</figcaption></figure>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301229031.png" alt="image-20220723215448794" tabindex="0" loading="lazy"><figcaption>image-20220723215448794</figcaption></figure>
<h3>1.3 OBS如何进行访问权限控制（华为OBS）</h3>
<p>OBS提供丰富灵活的访问权限控制手段，满足不同场景下的授权需求。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301229057.png" alt="image-20220723215518369" tabindex="0" loading="lazy"><figcaption>image-20220723215518369</figcaption></figure>
<h2>2. IAM用户权限控制</h2>
<blockquote>
<p>IAM是 Identity and Access Management 的缩写，即身份与访问管理，或称为身份管理与访问控制。</p>
</blockquote>
<p>相对比阿里云SSO、华为云OBS，Minio权限及安全管理，没有提供特别多的功能，毕竟是开源的，但是对于一般应用程序，也够用了。</p>
<h3>2.1 用户管理</h3>
<h4>2.1.1 添加用户及权限</h4>
<p>用户是权限最直接的体现，Minio提供了用户管理功能，可以在控制台直接添加用户密码（密码最少八位），及相关权限。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301229090.png" alt="image-20220723215838647" tabindex="0" loading="lazy"><figcaption>image-20220723215838647</figcaption></figure>
<h4>2.1.2 用户分组管理</h4>
<p>如果每个用户都去绑定一个权限比较麻烦，minio提供了分组管理，也可以理解为角色，分组添加多个权限，然后用户添加到分组中，都可以具有多个权限了。</p>
<p>直接在下面菜单创建分组：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301229119.png" alt="image-20220723215919268" tabindex="0" loading="lazy"><figcaption>image-20220723215919268</figcaption></figure>
<p>添加分组时，可以绑定用户：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301229144.png" alt="image-20220723215939690" tabindex="0" loading="lazy"><figcaption>image-20220723215939690</figcaption></figure>
<p>点击操作，可以对当前分组添加多个角色：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301229170.png" alt="image-20220723220008424" tabindex="0" loading="lazy"><figcaption>image-20220723220008424</figcaption></figure>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301229189.png" alt="image-20220723220020227" tabindex="0" loading="lazy"><figcaption>image-20220723220020227</figcaption></figure>
<h3>2.2 IAM权限</h3>
<p>默认情况下，管理员创建的IAM用户没有任何权限，需要将其加入用户组，并给用户组授予策略和角色，才能使得用户组中的用户获得策略定义的权限，这一过程称为授权。授权后，用户就可以基于被授予的权限对服务进行操作。</p>
<p>IAM权限作用于SSO所有的桶和对象。如果要授予IAM用户操作SSO资源的权限，则需要向IAM用户所属的用户组授予一个或多个SSO权限。</p>
<p>一般SSO根据授权精细程度分为角色和策略。</p>
<ul>
<li>角色（Minio中貌似没有角色）：IAM最初提供的一种根据用户的工作职能定义权限的粗粒度授权机制。该机制以服务为粒度，提供有限的服务相关角色用于授权。由于华为云各服务之间存在业务依赖关系，因此给用户授予角色时，可能需要一并授予依赖的其他角色，才能正确完成业务。角色并不能满足用户对精细化授权的要求，无法完全达到企业对权限最小化的安全管控要求。</li>
<li>策略（minio中有）：IAM最新提供的一种细粒度授权的能力，可以精确到具体服务的操作、资源以及请求条件等。基于策略的授权是一种更加灵活的授权方式，能够满足企业对权限最小化的安全管控要求。例如：针对SSO服务，管理员能够控制IAM用户仅能对某一个桶资源进行指定的管理操作。多数细粒度策略以API接口为粒度进行权限拆分。</li>
</ul>
<h4>2.2.1 策略结构&amp;语法</h4>
<p>策略结构包括：Version（策略版本号）和Statement（策略权限语句），其中Statement可以有多个，表示不同的授权项。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301229215.png" alt="image-20220723220938897" tabindex="0" loading="lazy"><figcaption>image-20220723220938897</figcaption></figure>
<p>S3标准策略语法（阿里华为SSO有点小改动，结构类似），示例：</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">{</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">    "Sid"</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#98C379;--shiki-dark:#98C379"> "DenyPublicReadACL"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">    "Effect"</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#98C379;--shiki-dark:#98C379"> "Deny"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">    "Principal"</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">        "AWS"</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#98C379;--shiki-dark:#98C379"> "*"</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">    "Action"</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> [</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">        "s3:PutObject"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">        "s3:PutObjectAcl"</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    ]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">    "Resource"</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#98C379;--shiki-dark:#98C379"> "arn:aws:s3:::examplebucket/*"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">    "Condition"</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">        "StringEquals"</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">            "s3:x-amz-acl"</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> [</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">                "public-read"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">                "public-read-write"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">                "authenticated-read"</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            ]</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上表示，当所述请求包括以下访问控制列表（ACL）中的一个：public-read，public-read-write或authenticated-read，拒绝任何亚马逊S3在桶examplebucket中PutObject或PutObjectAcl请求。</p>
<p>策略语法参数：</p>
<p>| 参数      | 说明                                                         |<br>
|</p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301229938.png" type="image/png"/>
    </item>
    <item>
      <title>AWS S3兼容性</title>
      <link>https://mrjackc.github.io/posts/Architect/minio/minio-aws.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/minio/minio-aws.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">AWS S3兼容性</source>
      <description>AWS S3兼容性 参考阿里云官方文档，两个都差不多 之前一直疑惑什么是AWS S3,还是个Restful API. 但我从始至终压根没有感知。其实是因为我们都使用的是minio 客户端。他的minio 服务端提供的是S3 接口，minio client 封装了s3 的http 请求 1. OSS兼容的S3 API OSS对S3 Bucket、Obje...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<blockquote>
<p>参考阿里云官方文档，两个都差不多</p>
</blockquote>
<blockquote>
<p>之前一直疑惑什么是AWS S3,还是个Restful API. 但我从始至终压根没有感知。其实是因为我们都使用的是minio 客户端。他的minio 服务端提供的是S3 接口，minio client 封装了s3 的http 请求</p>
</blockquote>
<h2>1. OSS兼容的S3 API</h2>
<p>OSS对S3 Bucket、Object以及Multipart操作兼容的API如下：</p>
<p>| 操作类型      | API                                                          |<br>
| :</p>
]]></content:encoded>
    </item>
    <item>
      <title>Minio进阶 - Minio断点续传和断点下载实现方案</title>
      <link>https://mrjackc.github.io/posts/Architect/minio/minio-breakpoint-downloading.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/minio/minio-breakpoint-downloading.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">Minio进阶 - Minio断点续传和断点下载实现方案</source>
      <description>Minio进阶 - Minio断点续传和断点下载实现方案 1. 前言 在之前，我们实现了常用的上传下载、分片上传、秒传等功能，实际一个文件存储管理系统，这些远远还是不够的，比如断点续传。 可以参考阿里的文档，是怎么实现这些功能的。 阿里OSS开发文档 2. 断点续传 2.1 概念 通过断点续传上传的方式将文件上传到OSS前，您可以指定断点记录点。上传过...</description>
      <category>Minio</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 前言</h2>
<p>在之前，我们实现了常用的上传下载、分片上传、秒传等功能，实际一个文件存储管理系统，这些远远还是不够的，比如断点续传。</p>
<p>可以参考阿里的文档，是怎么实现这些功能的。</p>
<p><a href="https://help.aliyun.com/document_detail/84785.html" target="_blank" rel="noopener noreferrer">阿里OSS开发文档</a></p>
<h2>2. 断点续传</h2>
<h3>2.1 概念</h3>
<p>通过断点续传上传的方式将文件上传到OSS前，您可以指定断点记录点。上传过程中，如果出现网络异常或程序崩溃导致文件上传失败时，将从断点记录处继续上传未上传完成的部分。</p>
<h3>2.2 方案</h3>
<p>要实现断点续传，需要依赖于MD5秒传和分片上传。之前我们分片上传的简单流程如下图所示，我们可以在这个流程中加入断点续传。<br>
<img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301231363.png" alt="image-20220724210700258" loading="lazy"></p>
<h4>2.2.1 文件状态查询</h4>
<p>首先上传文件之前，除了创建分片请求之外、获取uploadId之外，还需要在根据文件的MD5去查询该数据的状态，比如是已上传过、上传了一部分、上传完成、上传失败等。</p>
<p>如果该文件已上传过则直接返回访问链接。</p>
<h4>2.2.2 查询已上传分片信息</h4>
<p>如果是上传失败，则查询根据该文件uploadId 查询已上传的分片信息，Minio 是支持这种查询的，比如下图中就可查到分片的相关信息：<br>
<img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301231403.png" alt="image-20220724210757660" loading="lazy"></p>
<h4>2.2.3. 继续上传</h4>
<p>对于已上传的分片，获取链接时，直接返回该分片已上传，前端根据状态去判断跳过该分片上传，执行未上传分片的请求，这样就能做到断点续传了。</p>
<h2>3. 断点下载</h2>
<p>当下载大文件时，如果网络不稳定或者程序异常退出，会导致下载失败，甚至重试多次仍无法完成下载。</p>
<p>为此，OSS需要提供了断点续传下载功能。断点续传下载将需要下载的文件分成若干个分片分别下载，所有分片都下载完成后，将所有分片合并成完整的文件。</p>
<p>在Minio中的java SDK 中是提供了对象数据查询的API，可以查看到对象的数据大小信息。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301231423.png" alt="image-20220724210915900" tabindex="0" loading="lazy"><figcaption>image-20220724210915900</figcaption></figure>
<p>知道文件大小之后，我们就可以进行切片，比如100M的大小，按照5M进行切分为20片，计算出每一片的起始位置和长度，Minio 获取文件的API 是支持分段获取流的。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301231454.png" alt="image-20220724210943891" tabindex="0" loading="lazy"><figcaption>image-20220724210943891</figcaption></figure>
<p>在实现了上述的分片下载后，就可以实现断点下载了，原理和上传一样，如下图所示：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301231478.png" alt="image-20220724211002451" tabindex="0" loading="lazy"><figcaption>image-20220724211002451</figcaption></figure>
<h2>参考文章</h2>
<p><a href="https://yunyanchengyu.blog.csdn.net/article/details/123522111" target="_blank" rel="noopener noreferrer">Minio入门系列【19】断点续传和断点下载实现方案</a></p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301231363.png" type="image/png"/>
    </item>
    <item>
      <title>Minio基础 - Java集成Minio之存储桶操作API使用详解</title>
      <link>https://mrjackc.github.io/posts/Architect/minio/minio-bucket-api.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/minio/minio-bucket-api.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">Minio基础 - Java集成Minio之存储桶操作API使用详解</source>
      <description>Minio基础 - Java集成Minio之存储桶操作API使用详解 1. 前言 1.1 多种SDK 官方文档 minio-java Minio提供了多种语言的SDK，比如java、go、python等。JAVA开发平台可以选择JS和java SDK，也就是前端和后端都可以直接集成minio。 image-20220723133217901.pngim...</description>
      <category>Minio</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 前言</h2>
<h3>1.1 多种SDK</h3>
<p><a href="https://docs.min.io/" target="_blank" rel="noopener noreferrer">官方文档</a><br>
<a href="https://github.com/minio/minio-java" target="_blank" rel="noopener noreferrer">minio-java</a><br>
Minio提供了多种语言的SDK，比如java、go、python等。JAVA开发平台可以选择JS和java SDK，也就是<strong>前端和后端都可以直接集成minio</strong>。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301232842.png" alt="image-20220723133217901.png" tabindex="0" loading="lazy"><figcaption>image-20220723133217901.png</figcaption></figure>
<h3>1.2 技术方案</h3>
<p>每个OSS的用户都会用到上传服务。Web端常见的上传方法是用户在浏览器或App端上传文件到<strong>应用服务器</strong>，<strong>应用服务器</strong>再把文件上传到OSS。具体流程如下图所示。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301232888.png" alt="image-20220723133304095" tabindex="0" loading="lazy"><figcaption>image-20220723133304095</figcaption></figure>
<p>和数据直传到OSS相比，以上方法有三个缺点：</p>
<ul>
<li>上传慢：用户数据需先上传到应用服务器，之后再上传到OSS。网络传输时间比直传到OSS多一倍。如果用户数据不通过应用服务器中转，而是直传到OSS，速度将大大提升。而且OSS采用BGP带宽，能保证各地各运营商之间的传输速度。</li>
<li>扩展性差：如果后续用户多了，应用服务器会成为瓶颈。</li>
<li>费用高：需要准备多台应用服务器。由于OSS上传流量是免费的，如果数据直传到OSS，不通过应用服务器，那么将能省下几台应用服务器。</li>
</ul>
<p>目前通过Web前端技术上传文件到OSS，有三种技术方案：</p>
<ul>
<li>利用OSS js SDK将文件上传到OSS，也就是前端直连OSS，但是容易暴露认证信息，安全性不太高。</li>
<li>使用表单上传方式，将文件上传到OSS。利用OSS提供的接口临时接口，使用表单上传方式将文件上传到OSS。然后请求后端，告知上传完成，进行后续处理。</li>
<li>先上传到应用服务器，再请求OSS上传，这种安全性较高，可以对数据和认证进行管控，但是性能最差。</li>
</ul>
<h2>2. 集成 JAVA SDK</h2>
<p>因为一般的非互联网项目，对性能要求不高，所以采用JAVA SDK集成MInio，然后提供接口给Web端调用就行了。</p>
<h3>2.1 环境搭建</h3>
<p>首先搭建一个Maven基础工程，引入相关依赖，这里引入的是最新的8.3.1版本。还引入了okhttp的最新包，不然某些API会提示版本太低。</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  			&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;io.minio&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  			&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;minio&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  			&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;8.3.1&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">		&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;com.squareup.okhttp3&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;okhttp&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;4.9.2&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
</div><h3>2.2 初始化客户端</h3>
<p>可以看到现在minio都是采用Builder构建者模式来构造对象，和之前有很大的区别，所以需要注意。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 初始化客户端</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        MinioClient</span><span style="color:#E06C75;--shiki-dark:#E06C75"> minioClient </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                MinioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                        // minio服务端地址URL</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">endpoint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"http://localhost:9000"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                        // 用户名及密码（访问密钥/密钥）</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">credentials</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"admin"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#98C379;--shiki-dark:#98C379">"admin123"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span></code></pre>
</div><h3>2.3 存储桶基础操作</h3>
<h4>2.3.1 存储桶是否存在</h4>
<p>检查存储桶是否存在。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> boolean</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> bucketExists</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">BucketExistsArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><p>示例代码：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">	// 1.存储桶是否存在</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    boolean</span><span style="color:#E06C75;--shiki-dark:#E06C75"> found </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucketExists</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">BucketExistsArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (found) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname exists"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    } </span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname does not exist"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
</div><h4>2.3.2 创建存储桶</h4>
<p>创建一个启用给定区域和对象锁定功能的存储桶。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> makeBucket</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">MakeBucketArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><p>示例代码：</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 2.1 my-bucketname 存储桶不存在则创建</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!</span><span style="color:#E06C75;--shiki-dark:#E06C75">found) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">makeBucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">MakeBucketArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname is created successfully"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 2.2 创建存储桶my-bucketname-in-eu 并指定区域为eu-west-1</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucketExists</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            BucketExistsArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname-in-eu"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">())</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">makeBucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                MakeBucketArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname-in-eu"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">region</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"eu-west-1"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname-in-eu is created successfully"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 2.3 创建存储桶 'my-bucketname-in-eu-with-object-lock' 区域为 'eu-west-1' ，</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 并且锁定对象，功能不可用</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucketExists</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            BucketExistsArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname-in-eu-with-object-lock"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">())</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">makeBucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                MakeBucketArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname-in-eu-with-object-lock"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">region</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"eu-west-1"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">objectLock</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname-in-eu-with-object-lock is created successfully"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建后，就可以在控制台看到这些存储桶了，最后那个被锁定的存储桶，上传文件及删除后，发现还是会显示存在这些对象，实际磁盘上的文件并没有删除</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301232915.png" alt="image-20220723134100336" tabindex="0" loading="lazy"><figcaption>image-20220723134100336</figcaption></figure>
<h4>2.3.3 查询存储桶信息列表</h4>
<p>列出所有桶的桶信息。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> List</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">Bucket</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> listBuckets</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span></span></code></pre>
</div><p>示例代码：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 3.  存储桶信息列表。</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> bucketList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">listBuckets</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Bucket</span><span style="color:#E06C75;--shiki-dark:#E06C75"> bucket </span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> bucketList) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">creationDate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#98C379;--shiki-dark:#98C379"> ", "</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span></code></pre>
</div><p>打印信息如下，返回的创建时间是美国时间，需要注意。<br>
<img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301232937.png" alt="image-20220723134451441" loading="lazy"></p>
<h4>2.3.4 删除存储桶</h4>
<p>删除一个空桶。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> removeBucket</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">RemoveBucketArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><p>示例代码：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 4. 删除存储桶</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (found) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">removeBucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">RemoveBucketArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname is removed successfully"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    } </span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname does not exist"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
</div><p>如果存储桶存在对象不为空时，删除会报错。<br>
<img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301232958.png" alt="image-20220723134556833" loading="lazy"></p>
<h3>2.4 设置存储桶操作</h3>
<h4>2.4.1 加密配置</h4>
<p>设置桶的加密配置，以允许在该桶中上传对象时，采用对应加密配置对数据进行加密。当前支持配置的服务端加密方式为KMS托管密钥的服务端加密(SSE-KMS)，及AES256加密。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> enum</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SseAlgorithm</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">    AES256</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"AES256"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">    AWS_KMS</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"aws:kms"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
</div><p>设置桶的加密配置：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> setBucketEncryption</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SetBucketEncryptionArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><p>获取桶的加密配置:</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SseConfiguration</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getBucketEncryption</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">GetBucketEncryptionArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><p>案例需要配置KMS，后续后出详细文档。</p>
<h4>2.4.2 生命周期</h4>
<p>生命周期管理可适用于以下典型场景：</p>
<ul>
<li>周期性上传的日志文件，可能只需要保留一个星期或一个月。到期后要删除它们。</li>
<li>某些文档在一段时间内经常访问，但是超过一定时间后便可能不再访问了。这些文档需要在一定时间后转化为低频访问存储，归档存储或者删除。</li>
</ul>
<p>存储桶生命周期配置：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> setBucketLifecycle</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SetBucketLifecycleArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><p>获取桶的生命周期配置：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> LifecycleConfiguration</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getBucketLifecycle</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">GetBucketLifecycleArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><p>示例代码：</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 5. 生命周期</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">LifecycleRule</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> rules </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> LinkedList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 配置生命周期规则</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    rules</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> LifecycleRule</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    Status</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ENABLED</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 开启状态</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">                    null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                    new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Expiration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">((ZonedDateTime) </span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;--shiki-dark:#D19A66">365</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">), </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 保存365天</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                    new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> RuleFilter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"logs/"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">), </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 目录配置</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">                    "rule2"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">                    null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">                    null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">                    null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    LifecycleConfiguration</span><span style="color:#E06C75;--shiki-dark:#E06C75"> lifecycleConfiguration </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> LifecycleConfiguration</span><span style="color:#E06C75;--shiki-dark:#E06C75">(rules)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 添加生命周期配置</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setBucketLifecycle</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            SetBucketLifecycleArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">config</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(lifecycleConfiguration).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 获取配置</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    LifecycleConfiguration</span><span style="color:#E06C75;--shiki-dark:#E06C75"> lifecycleConfiguration1111 </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getBucketLifecycle</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    GetBucketLifecycleArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">LifecycleRule</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> rules1 </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> lifecycleConfiguration1111</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">rules</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> rules1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">size</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span><span style="color:#E06C75;--shiki-dark:#E06C75"> i</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">++</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Lifecycle status is "</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> rules1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(i).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">status</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Lifecycle prefix is "</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> rules1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(i).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">filter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">prefix</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Lifecycle expiration days is "</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> rules1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(i).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">expiration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">days</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打印结果如下：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301232979.png" alt="image-20220723135014971" tabindex="0" loading="lazy"><figcaption>image-20220723135014971</figcaption></figure>
<h4>2.4.3 通知配置</h4>
<p>可以使用存储桶事件通知来监控存储桶中对象上发生的事件。</p>
<p>MinIO 服务器支持的各种事件类型有：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301232003.png" alt="image-20220723135138733" tabindex="0" loading="lazy"><figcaption>image-20220723135138733</figcaption></figure>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301232023.png" alt="image-20220723135150879" tabindex="0" loading="lazy"><figcaption>image-20220723135150879</figcaption></figure>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301232044.png" alt="image-20220723135214401" tabindex="0" loading="lazy"><figcaption>image-20220723135214401</figcaption></figure>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301232068.png" alt="image-20220723135233435" tabindex="0" loading="lazy"><figcaption>image-20220723135233435</figcaption></figure>
<p>存储桶配置通知：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> setBucketPolicy</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SetBucketPolicyArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><p>获取桶的通知配置：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> NotificationConfiguration</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getBucketNotification</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">GetBucketNotificationArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><p>代码示例：</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 6. 通知配置 </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Add a new SQS configuration.</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        NotificationConfiguration</span><span style="color:#E06C75;--shiki-dark:#E06C75"> notificationConfiguration </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> NotificationConfiguration</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">QueueConfiguration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> queueConfigurationList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> notificationConfiguration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">queueConfigurationList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        QueueConfiguration</span><span style="color:#E06C75;--shiki-dark:#E06C75"> queueConfiguration </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> QueueConfiguration</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        queueConfiguration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setQueue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"arn:minio:sqs::1:webhook"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">EventType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> eventList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> LinkedList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        eventList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">EventType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OBJECT_CREATED_PUT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        eventList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">EventType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OBJECT_CREATED_COPY</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        queueConfiguration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setEvents</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(eventList);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        queueConfiguration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setPrefixRule</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"images"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        queueConfiguration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setSuffixRule</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"pg"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        queueConfigurationList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(queueConfiguration);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        notificationConfiguration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setQueueConfigurationList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(queueConfigurationList);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Set updated notification configuration.</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setBucketNotification</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                SetBucketNotificationArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">config</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(notificationConfiguration).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Bucket notification is set successfully"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        NotificationConfiguration</span><span style="color:#E06C75;--shiki-dark:#E06C75"> minioClientBucketNotification </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getBucketNotification</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        GetBucketNotificationArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(minioClientBucketNotification);</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4>2.4.4 策略配置</h4>
<p>添加存储桶策略配置。</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>public void setBucketPolicy(SetBucketPolicyArgs args)</span></span></code></pre>
</div><p>获取桶的桶策略配置。</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>public String getBucketPolicy(GetBucketPolicyArgs args)</span></span></code></pre>
</div><p>内容较多，后续后出详细文档。</p>
<h4>2.4.5 复制配置</h4>
<p>存储桶复制旨在将存储桶中的选定对象复制到目标存储桶，内容较多，后续补上</p>
<p>添加存储桶的复制配置</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> setBucketReplication</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SetBucketReplicationArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><p>获取桶的桶复制配置：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ReplicationConfiguration</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getBucketReplication</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">GetBucketReplicationArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><h4>2.4.6 存储桶标签</h4>
<p>当为桶添加标签时，该桶上所有请求产生的计费话单里都会带上这些标签，从而可以针对话单报表做分类筛选，进行更详细的成本分析。例如：某个应用程序在运行过程会往桶里上传数据，我们可以用应用名称作为标签，设置到被使用的桶上。在分析话单时，就可以通过应用名称的标签来分析此应用的成本。</p>
<p>setBucketTags可以为存储桶设置标签。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> setBucketTags</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SetBucketTagsArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><p>getBucketTags获取桶的标签。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Tags</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getBucketTags</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">GetBucketTagsArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><p>示例代码：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 1. 存储桶标签</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> map </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> HashMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Project"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#98C379;--shiki-dark:#98C379">"Project One"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"User"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#98C379;--shiki-dark:#98C379">"jsmith"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 设置标签</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setBucketTags</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SetBucketTagsArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">tags</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(map).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 查询标签</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Tags</span><span style="color:#E06C75;--shiki-dark:#E06C75"> bucketTags </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getBucketTags</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">GetBucketTagsArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">bucketTags</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">toString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span></code></pre>
</div><p>返回结果：<br>
<img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301232092.png" alt="image-20220723135753042" loading="lazy"></p>
<h4>2.4.7 多版本设置</h4>
<p>若开启了多版本控制，上传对象时，OBS自动为每个对象创建唯一的版本号。上传同名的对象将以不同的版本号同时保存在OBS中。</p>
<p>若未开启多版本控制，向同一个文件夹中上传同名的对象时，新上传的对象将覆盖原有的对象。</p>
<p>某些功能（例如版本控制、对象锁定和存储桶复制）需要使用擦除编码分布式部署 MinIO。开启了版本控制后，允许在同一密钥下保留同一对象的多个版本。</p>
<p>设置存储桶的版本控制配置。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> setBucketVersioning</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SetBucketVersioningArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><p>获取存储桶的版本控制配置。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> VersioningConfiguration</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getBucketVersioning</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">GetBucketVersioningArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><p>示例代码：</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 2. 版本配置</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 'my-bucketname'启用版本控制</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setBucketVersioning</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            SetBucketVersioningArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                    .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                    .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">config</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> VersioningConfiguration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">VersioningConfiguration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Status</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ENABLED</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                    .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Bucket versioning is enabled successfully"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    //  'my-bucketname'暂停版本控制</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setBucketVersioning</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            SetBucketVersioningArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                    .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                    .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">config</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> VersioningConfiguration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">VersioningConfiguration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Status</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SUSPENDED</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                    .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Bucket versioning is suspended successfully"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在控制台可以查看是否开启版本控制。<br>
<img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301232112.png" alt="image-20220723140041004" loading="lazy"></p>
<h4>2.4.8 对象锁定配置</h4>
<p>对象锁定设置后，删除对象后，会仍然存在磁盘中。</p>
<p>在存储桶中设置对象锁定配置。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> setObjectLockConfiguration</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SetObjectLockConfigurationArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><p>获取存储桶中的对象锁配置。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ObjectLockConfiguration</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getObjectLockConfiguration</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">GetObjectLockConfigurationArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><p>需要先设置存储桶为对象锁定模式，示例代码：</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 3. 将保留模式设置为Compliance，且持续时间为100天</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 设置锁定对象的保留模式及时限</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    ObjectLockConfiguration</span><span style="color:#E06C75;--shiki-dark:#E06C75"> config </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> ObjectLockConfiguration</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">RetentionMode</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">COMPLIANCE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> RetentionDurationDays</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">100</span><span style="color:#E06C75;--shiki-dark:#E06C75">))</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setObjectLockConfiguration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            SetObjectLockConfigurationArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                    .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname-in-eu-with-object-lock"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                    .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">config</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(config)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                    .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"object-lock configuration is set successfully"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 获取锁定配置</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    ObjectLockConfiguration</span><span style="color:#E06C75;--shiki-dark:#E06C75"> objectLockConfiguration </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getObjectLockConfiguration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    GetObjectLockConfigurationArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-lock-enabled-bucketname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Object-lock configuration of bucket"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Mode: "</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> objectLockConfiguration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">mode</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Duration: "</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> objectLockConfiguration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">duration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以在控制台查看是否开启对象锁定，及保留模式设置的策略及保留天数。<br>
<img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301232134.png" alt="image-20220723140224863" loading="lazy"></p>
<h4>2.4.9 删除配置</h4>
<p>minio提供了一些列的delete方法用于删除配置，比较简单，就不距离说明了。</p>
<ol>
<li>删除桶的加密配置</li>
</ol>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> deleteBucketEncryption</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DeleteBucketEncryptionArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><ol>
<li>删除存储桶的生命周期配置</li>
</ol>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> deleteBucketLifecycle</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DeleteBucketLifecycleArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><ol>
<li>删除桶的标签</li>
</ol>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> deleteBucketTags</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DeleteBucketTagsArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><ol>
<li>删除桶的桶策略配置</li>
</ol>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> deleteBucketPolicy</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DeleteBucketPolicyArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><ol>
<li>删除存储桶的存储桶复制配置</li>
</ol>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> deleteBucketReplication</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DeleteBucketReplicationArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><ol>
<li>删除桶的通知配置</li>
</ol>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> deleteBucketNotification</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DeleteBucketNotificationArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><ol>
<li>删除存储桶中的对象锁定配置</li>
</ol>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> deleteObjectLockConfiguration</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DeleteObjectLockConfigurationArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><h2>参考文章</h2>
<p><a href="https://yunyanchengyu.blog.csdn.net/article/details/120841843" target="_blank" rel="noopener noreferrer">JAVA集成Minio之存储桶操作API使用详解</a></p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301232842.png" type="image/png"/>
    </item>
    <item>
      <title>Minio部署 - MinIO集群扩容方法</title>
      <link>https://mrjackc.github.io/posts/Architect/minio/minio-cluster-capacity.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/minio/minio-cluster-capacity.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">Minio部署 - MinIO集群扩容方法</source>
      <description>Minio部署 - MinIO集群扩容方法 1. 简介 MinIO是采用Golang实现的高性能对象存储系统，基于Apache License V2.0进行开源，适用于海量非结构化数据存储，如图片、视频、镜像等。MinIO以极简主义为指导进行设计，追求极致的维护精简性和卓越的读写性能表现。据MinIO官方数据，在标准硬件上，MinIO的读写速率可分别高...</description>
      <category>Minio</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 简介</h2>
<p>MinIO是采用Golang实现的高性能对象存储系统，基于Apache License V2.0进行开源，适用于海量非结构化数据存储，如图片、视频、镜像等。MinIO以极简主义为指导进行设计，追求极致的维护精简性和卓越的读写性能表现。据MinIO官方数据，在标准硬件上，MinIO的读写速率可分别高达183GB/s和171GB/s。</p>
<p>MinIO支持以单点、分布式集群等方式进行部署。其中，MinIO分布式集群是指在多个服务器节点均部署MinIO服务，并将其组建为分布式存储集群，对外提供标准S3接口以进行统一访问，其架构如图2-1所示。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301234380.png" alt="image-20220722211312080" tabindex="0" loading="lazy"><figcaption>image-20220722211312080</figcaption></figure>
<p>MinIO集群采用去中心化无共享架构，各节点间为对等关系，连接至任一节点均可实现对集群的访问，并通过DNS轮询等方式实现节点间的负载均衡。这种节点间保持对等关系的设计并非最常见的分布式集群架构。当前大多数的分布式存储集群，其节点往往可划分为多类角色，例如负责连接并处理外部应用请求的访问节点、负责存储元数据的管理节点、实际的数据存储节点等。MinIO则与之不同，MinIO集群中的所有节点都同时承担了多种角色，集元数据存储、数据存储、应用访问等功能于一体，真正实现了去中心化和所有节点的完全对等。其优势在于有效地减少了集群内的复杂调度过程以及因中心节点带来的故障风险和性能瓶颈。</p>
<p>数据对象在MinIO集群中进行存储时，先进行纠删分片，后打散存储在各硬盘上。具体为：</p>
<ol>
<li>MinIO自动在集群内生成若干纠删组，每个纠删组包含一组硬盘，其数量通常为4至16块；</li>
<li>对数据对象进行分片，默认策略是得到相同数量的数据分片和校验分片；</li>
<li>而后通过哈希算法计算出该数据对象对应的纠删组，并将数据和校验分片存储至纠删组内的硬盘上。</li>
</ol>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301234416.png" alt="image-20220722211726136" tabindex="0" loading="lazy"><figcaption>image-20220722211726136</figcaption></figure>
<p>如图2-2所示，假设某MinIO集群内纠删组包含4块硬盘，某数据对象名为MyObject，其隶属存储桶名为MyBucket，哈希计算得到对应的纠删组为Disk 1~4。那么在Disk 1~4的数据路径下，都会生成MyBucket/MyObject子路径，子路径中包含2个文件，分别为存储元数据信息的xl.json和MyObject对象在该盘上的第一个分片part.1。其中，xl表示MinIO中数据对象的默认存储格式。</p>
<h2>2. 集群扩容方法</h2>
<p>常见的集群扩容方法可分为两类：水平扩容和垂直扩容。<strong>水平扩容，一般指通过增加节点数扩展系统性能；而垂直扩容则指提升各节点自身的性能，例如增加节点的磁盘存储空间</strong>。直接采用垂直扩容方式扩容MinIO集群的节点磁盘空间，会为集群运行带来若干问题，官方也并不推荐。因此本文主要介绍MinIO的两种水平扩容方式：对等扩容和联邦扩容。</p>
<h3>2.1 对等扩容</h3>
<p>首先，MinIO的极简设计理念使得MinIO分布式集群<strong>并不支持向集群中添加单个节点并进行自动调节的扩容方式</strong>，这是<strong>因为加入单个节点后所引发的数据均衡以及纠删组划分等问题会为整个集群带来复杂的调度和处理过程</strong>，并不利于维护。因此，MinIO提供了一种对等扩容的方式，即要求增加的节点数和磁盘数均需与原集群保持对等。</p>
<h4>2.1.1 示例</h4>
<p>例如原集群包含4个节点4块磁盘，则在扩容时必须同样增加4个节点4块磁盘（或为其倍数），以便系统维持相同的数据冗余SLA，从而极大地降低扩容的复杂性。如上例，在扩容后，MinIO集群并不会对全部的8个节点进行完全的数据均衡，而是将原本的4个节点视作一个区域，新加入的4节点视作另一区域，当有新对象上传时，集群将依据各区域的可用空间比例确定存放区域，在各区域内仍旧通过哈希算法确定对应的纠删组进行最终的存放。此外，集群进行一次对等扩容后，还可依据扩容规则继续进行对等扩容，但出于安全性考虑，集群的最大节点数一般不得超过32个。</p>
<h4>2.1.2 优缺点</h4>
<p>对等扩容的优点在于配置操作简单易行，通过一条命令即可完成扩容（注意：推荐使用连续的节点IP，并参照MinIO官网在扩容命令中使用{}）。而对等扩容的局限性在于：①扩容需重启；②扩容存在限制，集群节点数一般不超过32个，这是由于MinIO集群通过分布式锁保证强一致性，若集群节点数过大，维护强一致性将带来性能问题。</p>
<h3><strong>2.2 联邦扩容</strong></h3>
<p>MinIO官方提供了另一种扩容机制——联邦扩容，即通过引入etcd，将多个MinIO分布式集群在逻辑上组成一个联邦，对外以一个整体提供服务，并提供统一的命名空间。MinIO联邦集群的架构如图3-1所示。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301234435.png" alt="image-20220722212622430" tabindex="0" loading="lazy"><figcaption>image-20220722212622430</figcaption></figure>
<p>其中，etcd是一个开源的分布式键值存储数据库，在联邦中用于记录存储桶IP地址。联邦内的各个集群其数据存储以及一致性维护仍由各集群自行管理，联邦只是对外提供一个整体逻辑视图。通过连接到联邦中任一集群的任一节点，可以查询并访问联邦内所有集群的全部数据，由此获得了逻辑上的空间扩大感。但实际上，对于一个外部应用访问，联邦需依赖etcd定位到存储桶的实际存储节点，再进行数据访问，联邦则对外屏蔽了桶IP查找和定位过程，从而在逻辑上对外形成了一个统一整体。因此，etcd实际上起到了类似路由寻址的效果。</p>
<h4>2.2.1 MinIO联邦集群的数据访问机制</h4>
<p>MinIO联邦集群的数据访问机制具体如下：</p>
<p>①客户端应用向联邦集群发送创建存储桶请求，桶名为bucket1；</p>
<p>②联邦会将bucket1实际所在的集群节点IP地址写入etcd中，例如bucket1实际将存储于联邦中的集群1上，而集群1包含2个节点，其节点IP地址分别为192.168.1.103和192.168.1.104，则etcd中将写入如下两条记录：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301234462.png" alt="image-20220722212921098" tabindex="0" loading="lazy"><figcaption>image-20220722212921098</figcaption></figure>
<p>③客户端应用向联邦请求上传1个对象至bucket1；</p>
<p>④联邦会先查询etcd，定位到bucket1的实际存储节点103和104，再进行相应的上传操作。</p>
<h4>2.2.2 优缺点</h4>
<p>相较于对等扩容，联邦扩容的优点在于：①联邦中的各集群不要求节点数和磁盘数的对等；②联邦可以无限扩展，不断加入新集群；③若联邦中某个集群出现故障，该故障将不影响联邦中的其他集群提供服务。其缺点为需要额外引入etcd，且配置过程较为复杂。</p>
<p>因此，本文将简要介绍MinIO联邦扩容配置方法。</p>
<h2>3. <strong>联邦扩容部署操作</strong></h2>
<p>本文针对联邦扩容，提供参考配置操作如下：</p>
<p>假定将两个MinIO集群组成联邦，每个集群包含2个节点4块磁盘。etcd建议配置为3节点集群，以避免单点故障。具体部署信息如表4-1所示。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301234485.png" alt="image-20220722213126008" tabindex="0" loading="lazy"><figcaption>image-20220722213126008</figcaption></figure>
<p>**第一步：搭建etcd集群。**在<a href="http://github.com/etcd-io/etcd/releases%E4%B8%AD%E4%B8%8B%E8%BD%BD%E5%90%88%E9%80%82%E7%89%88%E6%9C%AC%E8%BF%9B%E8%A1%8C%E8%A7%A3%E5%8E%8B%E5%AE%89%E8%A3%85%EF%BC%8C%E5%88%9B%E5%BB%BA%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6etcd.conf%EF%BC%8C%E4%BB%A5192.168.1.107%E4%B8%BA%E4%BE%8B%EF%BC%8C%E9%85%8D%E7%BD%AE%E5%86%85%E5%AE%B9%E5%A6%82%E4%B8%8B%EF%BC%9A" target="_blank" rel="noopener noreferrer">http://github.com/etcd-io/etcd/releases中下载合适版本进行解压安装，创建配置文件etcd.conf，以192.168.1.107为例，配置内容如下：</a></p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301234508.png" alt="image-20220722213157388" tabindex="0" loading="lazy"><figcaption>image-20220722213157388</figcaption></figure>
<p>在192.168.1.108和192.168.1.109上同样进行上述配置。需注意：配置文件为YAML格式，参数initial-cluster必须与各节点上配置的name参数以及initial-advertise-peer-urls参数进行对应。</p>
<p>然后，在各节点分别执行命令./etcd --config-file /home/user/etcd/etcd.conf进行启动，集群开始运行。在任一节点执行命令etcdctl member list，若能显示三个节点信息，则etcd集群部署成功。</p>
<p>**第二步：逐一搭建各MinIO集群。**建议在搭建新集群时就直接加入到联邦，以便后续的扩容操作。以集群1为例，其上192.168.1.103和192.168.1.104节点的配置和启动命令如下：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301234526.png" alt="image-20220722213310216" tabindex="0" loading="lazy"><figcaption>image-20220722213310216</figcaption></figure>
<p>注意：MinIO_ETCD_ENDPOINTS参数需与搭建的ETCD集群所有节点IP相对应；MINIO_PUBLIC_IPS参数则为该集群的所有节点IP，如上述示例中对应集群1的2个节点IP；MINIO_DOMAIN参数必须进行配置，即使你并不通过域名访问存储桶，否则联邦无法生效。</p>
<p>对集群2的各节点同样添加上述配置项。启动后，进行联邦测试</p>
<p>首先，连接至集群1中的192.168.1.103节点，创建存储桶bucket1，并上传1个对象；然后连接至任一etcd节点，通过命令 ETCDCTL_API=3 etcdctl get --from-key '' 查看etcd中是否已写入bucket1的相关记录；最后连接至集群2中的192.168.1.105节点，测试是否能访问到bucket1及桶内对象。若能访问，则联邦模式组建成功。</p>
<p>后续若需进行扩容，可参照上述配置方式分别部署集群3、集群4、集群n，由于配置了相同的etcd地址，这些集群将自动加入联邦，从而实现集群的无限扩展。</p>
<h2>4. 总结</h2>
<p>本文基于MinIO开源对象存储系统的分布式集群模式，简要介绍了其常见的集群扩容方法，旨在为满足实际需求，在进行扩容操作时提供一定参考。<strong>建议优先考虑联邦扩容</strong>，但在原集群节点数和磁盘数较少、系统数据量增长较慢、后续扩容操作不频繁、服务可中断的情况下，可考虑对等扩容。此外，可考虑在首次进行单个集群部署时就引入etcd联邦模式，这样后续进行联邦扩容时能简化很多流程。</p>
<h2>参考文章</h2>
<p><a href="https://mp.weixin.qq.com/s/0W7_UaqeSUfSnG9wr2nywA" target="_blank" rel="noopener noreferrer">漫谈 MinIO 集群扩容方法</a></p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301234380.png" type="image/png"/>
    </item>
    <item>
      <title>Minio部署   Minio分布式集群搭建部署</title>
      <link>https://mrjackc.github.io/posts/Architect/minio/minio-cluster-deploy.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/minio/minio-cluster-deploy.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">Minio部署   Minio分布式集群搭建部署</source>
      <description>Minio部署 Minio分布式集群搭建部署 1. 简介 分布式 Minio 可以让你将多块硬盘或者多台服务器组成一个对象存储服务。由于硬盘分布在不同的节点上，分布式 Minio 避免了单点故障。MinioMinio分布式模式可以帮助你搭建一个高可用的对象存储服务，你可以使用这些存储设备，而不用考虑其真实物理位置。 2. Minio分布式部署的优势 2...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 简介</h2>
<p>分布式 Minio 可以让你将多块硬盘或者多台服务器组成一个对象存储服务。由于硬盘分布在不同的节点上，分布式 Minio 避免了单点故障。MinioMinio分布式模式可以帮助你搭建一个高可用的对象存储服务，你可以使用这些存储设备，而不用考虑其真实物理位置。</p>
<h2>2. Minio分布式部署的优势</h2>
<h3>2.1 数据保护</h3>
<ul>
<li>分布式 Minio 采用纠删码来防范多个节点宕机和位衰减。</li>
<li>分布式 Minio 至少需要 4 个节点（4台服务器），使用分布式 Minio 就 自动引入了纠删码功能。</li>
<li>纠删码是一种恢复丢失和损坏数据的数学算法， Minio 采用 Reed-Solomon code 将对象拆分成 N/2 数据和 N/2 奇偶校验块。 这就意味着如果是 12 块盘，一个对象会被分成 6 个数据块、6 个奇偶校验块，你可以丢失任意 6 块盘（不管其是存放的数据块还是奇偶校验块），你仍可以从剩下的盘中的数据进行恢复。</li>
<li>纠删码的工作原理和 RAID 或者复制不同，像 RAID6 可以在损失两块盘的情况下不丢数据，而 Minio 纠删码可以在丢失一半的盘的情况下，仍可以保证数据安全。 而且 Minio 纠删码是作用在对象级别，可以一次恢复一个对象，而RAID 是作用在卷级别，数据恢复时间很长。 Minio 对每个对象单独编码，存储服务一经部署，通常情况下是不需要更换硬盘或者修复。Minio 纠删码的设计目标是为了性能和尽可能的使用硬件加速。</li>
<li>位衰减又被称为数据腐化 Data Rot、无声数据损坏 Silent Data Corruption ，是目前硬盘数据的一种严重数据丢失问题。硬盘上的数据可能会神不知鬼不觉就损坏了，也没有什么错误日志。正所谓明枪易躲，暗箭难防，这种背地里犯的错比硬盘直接故障还危险。 所以 Minio 纠删码采用了高速 HighwayHash 基于哈希的校验和来防范位衰减。</li>
</ul>
<h3>2.2 高可用</h3>
<ul>
<li>单机 Minio 服务存在单点故障，相反，如果是一个 N 节点的分布式 Minio ,只要有 N/2 节点在线，你的数据就是安全的。不过你需要至少有 N/2+1 个节点来创建新的对象。</li>
<li>例如，一个 8 节点的 Minio 集群，每个节点一块盘，就算 4 个节点宕机，这个集群仍然是可读的，不过你需要 5 个节点才能写数据。</li>
</ul>
<h3>2.3 限制</h3>
<ul>
<li>分布式 Minio 单租户存在最少 4 个盘最多 16 个盘的限制（受限于纠删码）。这种限制确保了 Minio 的简洁，同时仍拥有伸缩性。如果你需要搭建一个多租户环境，你可以轻松的使用编排工具（Kubernetes）来管理多个Minio实例。</li>
<li>注意，只要遵守分布式 Minio 的限制，你可以组合不同的节点和每个节点几块盘。比如，你可以使用 2 个节点，每个节点 4 块盘，也可以使用 4 个节点，每个节点两块盘，诸如此类。</li>
</ul>
<h3>2.4 一致性</h3>
<ul>
<li>Minio 在分布式和单机模式下，所有读写操作都严格遵守 read-after-write 一致性模型。</li>
</ul>
<h2>Minio分布式集群搭建</h2>
<h3>3.1 环境准备</h3>
<p>| 节点        | 目录             |<br>
|</p>
]]></content:encoded>
    </item>
    <item>
      <title>Minio基础 - Minio基础概念</title>
      <link>https://mrjackc.github.io/posts/Architect/minio/minio-concept.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/minio/minio-concept.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">Minio基础 - Minio基础概念</source>
      <description>Minio基础 - Minio基础概念 文件、块和对象是三种以不同的方式来保存、整理和呈现数据的存储格式。这些格式各有各的功能和限制。 文件存储会以文件和文件夹的层次结构来整理和呈现数据； 块存储会将数据拆分到任意划分且大小相同的卷中； 对象存储会管理数据并将其链接至关联的元数据。 元数据包括 account（用户）， bucket， bucket i...</description>
      <category>Minio</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<blockquote>
<p><strong>文件、块和对象是三种以不同的方式来保存、整理和呈现数据的存储格式</strong>。这些格式各有各的功能和限制。</p>
<ul>
<li>
<p>文件存储会以<strong>文件和文件夹</strong>的层次结构来整理和呈现数据；</p>
</li>
<li>
<p>块存储会<strong>将数据拆分到任意划分且大小相同</strong>的卷中；</p>
</li>
<li>
<p>对象存储会管理数据并将其链接至<strong>关联的元数据</strong>。</p>
</li>
</ul>
<p>元数据包括 account（用户）， bucket， bucket index等信息</p>
</blockquote>
<h2>1. 简介</h2>
<p>Minio 是个基于 Golang 编写的开源对象存储套件，虽然轻量，却拥有着不错的性能。</p>
<p>官网地址：<a href="https://min.io/" target="_blank" rel="noopener noreferrer">MinIO | High Performance, Kubernetes Native Object Storage</a></p>
<h3>1.1 何为对象存储？</h3>
<p>对象存储服务（Object Storage Service，OSS）是一种海量、安全、低成本、高可靠的云存储服务，适合存放任意类型的文件。容量和处理能力弹性扩展，多种存储类型供选择，全面优化存储成本。</p>
<h3>1.2 特点</h3>
<ul>
<li>MinIO 是一个基于Apache License v2.0开源协议的对象存储服务。</li>
<li>它兼容亚马逊S3云存储服务接口，非常适合于存储大容量非结构化的数据，例如图片、视频、日志文件、备份数据和容器/虚拟机镜像等，而一个对象文件可以是任意大小，从几kb到最大5T不等。</li>
<li>MinIO是一个非常轻量的服务,可以很简单的和其他应用的结合，类似 NodeJS, Redis 或者 MySQL。</li>
<li>对于中小型企业，如果不选择存储上云，那么 Minio 是个不错的选择，麻雀虽小，五脏俱全。</li>
<li>当然 Minio 除了直接作为对象存储使用，还可以作为云上对象存储服务的网关层，无缝对接到 Amazon S3、MicroSoft Azure。</li>
</ul>
<blockquote>
<p>亚马逊云的 S3 API（接口协议） 是在全球范围内达到共识的对象存储的协议，是全世界内大家都认可的标准。MinIO 在很早的时候就采用了 S3 兼容协议，并且MinIO 是第一个支持 S3 Select 的产品.</p>
</blockquote>
<h2>2. MINIO 基础概念</h2>
<p>MINIO 有几个概念比较重要:</p>
<ul>
<li>
<p>Object：存储到 Minio 的基本对象，如文件、字节流，Anything…</p>
</li>
<li>
<p>Bucket：用来存储 Object 的逻辑空间。每个 Bucket 之间的数据是相互隔离的。对于客户端而言，就相当于一个存放文件的顶层文件夹。</p>
</li>
<li>
<p>Drive：即存储数据的磁盘，在 MinIO 启动时，以参数的方式传入。Minio 中所有的对象数据都会存储在 Drive 里。</p>
</li>
<li>
<p>Set</p>
<p>即一组 Drive 的集合，分布式部署根据集群规模自动划分一个或多个 Set ，每个 Set 中的 Drive 分布在不同位置。一个对象存储在一个 Set 上。（For example: {1…64} is divided into 4 sets each of size 16.）</p>
<ul>
<li>一个对象存储在一个Set上</li>
<li>一个集群划分为多个Set</li>
<li>一个Set包含的Drive数量是固定的，默认由系统根据集群规模自动计算得出</li>
<li>一个SET中的Drive尽可能分布在不同的节点上</li>
</ul>
<blockquote>
<p>一个对象存储在一个 Set 上。</p>
<p><strong>如果有3个set，那么我们存入一个对象。可能在某些drive 磁盘上没有存</strong></p>
</blockquote>
</li>
</ul>
<h3>2.1 Set /Drive 的关系</h3>
<p>Set /Drive 这两个概念是 MINIO 里面最重要的两个概念，一个对象最终是存储在 Set 上面的。</p>
<p>我们来看下边 MINIO 集群存储示意图，每一行是一个节点机器，这有 32 个节点，每个节点里有一个小方块我们称之 Drive，Drive 可以简单地理解为一个硬盘。</p>
<p>图中，一个节点有 32 个 Drive，相当于 32 块硬盘。</p>
<p>Set 是另外一个概念，Set 是一组 Drive 的集合，图中，所有蓝色、橙色背景的Drive（硬盘）的就组成了一个 Set.</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301236208.png" alt="image-20220721211109769" tabindex="0" loading="lazy"><figcaption>image-20220721211109769</figcaption></figure>
<h3>2.2 MIINO如何写入对象？</h3>
<p>MINIO 是通过数据编码，将原来的数据编码成 N 份，N 就是一个 Set 上面 Drive 的数量，后面多次提到的 N 都是指这个意思。</p>
<blockquote>
<p>上图中，一个 Set 上面 Drive 的数量，是3.</p>
</blockquote>
<p>对象被编码成N份之后，把每一份，写到对应的 Drive 上面，这就是把一个对象存储在整个 Set 上。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301236253.png" alt="image-20220721211712213" tabindex="0" loading="lazy"><figcaption>image-20220721211712213</figcaption></figure>
<p>一个集群包含多个 Set，每个对象最终存储在哪个 Set 上是根据对象的名称进行哈希，然后影射到唯一的 Set 上面，这个方式从理论上保证数据可以均匀的分布到所有的 Set 上。</p>
<p>根据的观测，数据分布的也非常均匀，一个 Set 上包含多少个 Drive 是由系统自动根据集群规模算出来的，当然，也可以自己去配置。</p>
<p>一个 Set 的 Drive 系统会考虑尽可能把它放在多的节点上面，保证它的可靠性。</p>
<h2>3. Minio存储架构</h2>
<p>Minio针对不同应用场景也设置了对应的存储架构：</p>
<h3>3.1 单主机，单硬盘模式</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301236282.png" alt="image-20220721212134078" tabindex="0" loading="lazy"><figcaption>image-20220721212134078</figcaption></figure>
<p>该模式下，Minio只在一台服务器上搭建服务，且数据都存在单块磁盘上，该模式存在单点风险，主要用作开发、测试等使用</p>
<h4>3.1.1 启动的命令为：</h4>
<div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">minio</span><span style="color:#D19A66;--shiki-dark:#D19A66"> --config-dir</span><span style="color:#98C379;--shiki-dark:#98C379"> ~/tenant1</span><span style="color:#98C379;--shiki-dark:#98C379"> server</span><span style="color:#D19A66;--shiki-dark:#D19A66"> --address</span><span style="color:#98C379;--shiki-dark:#98C379"> :9001</span><span style="color:#98C379;--shiki-dark:#98C379"> /disk1/data/tenant1</span></span></code></pre>
</div><h3>3.2 单主机，多硬盘模式</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301236312.png" alt="image-20220721212316800" tabindex="0" loading="lazy"><figcaption>image-20220721212316800</figcaption></figure>
<p>该模式下，Minio在一台服务器上搭建服务，但数据分散在多块（大于4块）磁盘上，提供了数据上的安全保障</p>
<div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">minio</span><span style="color:#D19A66;--shiki-dark:#D19A66"> --config-dir</span><span style="color:#98C379;--shiki-dark:#98C379"> ~/tenant1</span><span style="color:#98C379;--shiki-dark:#98C379"> server</span><span style="color:#D19A66;--shiki-dark:#D19A66"> --address</span><span style="color:#98C379;--shiki-dark:#98C379"> :9001</span><span style="color:#98C379;--shiki-dark:#98C379"> /disk1/data/tenant1</span><span style="color:#98C379;--shiki-dark:#98C379"> /disk2/data/tenant1</span><span style="color:#98C379;--shiki-dark:#98C379"> /disk3/data/tenant1</span><span style="color:#98C379;--shiki-dark:#98C379"> /disk4/data/enant1</span></span></code></pre>
</div><h3>3.3 多主机、多硬盘模式（分布式）</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301236342.png" alt="image-20220721212406208" tabindex="0" loading="lazy"><figcaption>image-20220721212406208</figcaption></figure>
<p>该模式是Minio服务最常用的架构，通过共享一个access_key和secret_key,在多台（2-32）服务器上搭建服务，且数据分散在多块（大于4块，无上限）磁盘上，提供了较为强大的数据冗余机制（Reed-Solomon纠删码）。</p>
<div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">export</span><span style="color:#E06C75;--shiki-dark:#E06C75"> MINIO_ACCESS_KEY</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">TENANT1_ACCESS_KEY</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">export</span><span style="color:#E06C75;--shiki-dark:#E06C75"> MINIO_SECRET_KEY</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">TENANT1_SECRET_KEY</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">minio</span><span style="color:#D19A66;--shiki-dark:#D19A66"> --config-dir</span><span style="color:#98C379;--shiki-dark:#98C379"> ~/tenant1</span><span style="color:#98C379;--shiki-dark:#98C379"> server</span><span style="color:#D19A66;--shiki-dark:#D19A66"> --address</span><span style="color:#98C379;--shiki-dark:#98C379"> :9001</span><span style="color:#98C379;--shiki-dark:#98C379"> http://192.168.10.11/data/tenant1</span><span style="color:#98C379;--shiki-dark:#98C379"> http://192.168.10.12/data/tenant1</span><span style="color:#98C379;--shiki-dark:#98C379"> http://192.168.10.13/data/tenant1</span><span style="color:#98C379;--shiki-dark:#98C379"> http://192.168.10.14/data/tenant1</span></span></code></pre>
</div><h2>4. 分布式Minio有什么好处?</h2>
<p>在大数据领域，通常的设计理念都是无中心和分布式。Minio分布式模式可以帮助你搭建一个高可用的对象存储服务，你可以使用这些存储设备，而不用考虑其真实物理位置。</p>
<h3>4.1 数据保护</h3>
<p>分布式Minio采用 纠删码来防范多个节点宕机和位衰减bit rot。</p>
<p>分布式Minio至少需要4个硬盘，使用分布式Minio自动引入了纠删码功能。</p>
<h3>4.2 高可用</h3>
<p>单机Minio服务存在单点故障，相反，如果是一个有N块硬盘的分布式Minio, 只要有N/2硬盘在线，你的数据就是安全的。</p>
<p>不过你需要至少有N/2+1个硬盘来创建新的对象。</p>
<p>例如，一个16节点的Minio集群，每个节点16块硬盘，就算8台服務器宕机，这个集群仍然是可读的，不过你需要9台服務器才能写数据。</p>
<p>注意，只要遵守分布式Minio的限制，你可以组合不同的节点和每个节点几块硬盘。</p>
<p>比如，你可以使用2个节点，每个节点4块硬盘，也可以使用4个节点，每个节点两块硬盘，诸如此类。</p>
<h3>4.3 一致性</h3>
<p>Minio在分布式和单机模式下，所有读写操作都严格遵守<strong>read-after-write</strong>一致性模型。</p>
<h2>5. MinIO的数据高可靠</h2>
<p>Minio使用了<strong>Erasure Code 纠删码</strong>和 <strong>Bit Rot Protection 数据腐化保护</strong>这两个特性，所以MinIO的数据可靠性做的高。</p>
<h3>5.1 Erasure Code纠删码</h3>
<p><strong>纠删码（Erasure Code）简称EC，是一种数据保护方法，它将数据分割成片段，把冗余数据块扩展、编码，并将其存储在不同的位置，比如磁盘、存储节点或者其它地理位置</strong>。</p>
<p>从数据函数角度来说，纠删码提供的保护可以用下面这个简单的公式来表示：n = k + m。</p>
<ul>
<li>变量“k”代表原始数据或符号的值</li>
<li>变量“m”代表故障后添加的提供保护的额外或冗余符号的值。</li>
<li>变量“n”代表纠删码过程后创建的符号的总值。</li>
</ul>
<p>举个例子，假设n=16，代表有16块磁盘，另外，有10份原始文件一模一样，称为k，16 = 10 +m，这个m就是可以恢复的校验块个数，所以m是6，任意6个不可用，原始文件都可以恢复，极端情况，10个原始文件坏掉6个，靠4个原始的加上6个校验块，可以把坏掉的6个原始文件恢复，这个用到数学行列式矩阵知识，不做展开。</p>
<blockquote>
<p>MinIO的编码方式，将一个对象编码成若干个数据块和校验块，我们简称为Erasure Code码，这个是编码的类型，这种编码的类型，还需要算法来实现，minio 采用的是 Reed-Solomon算法。</p>
</blockquote>
<p>MinIO使用Reed-Solomon算法，该算法把对象编码成若干个数据块和校验块。</p>
<p>Reed-Solomon算法的特点：</p>
<ul>
<li>低冗余</li>
<li>高可靠</li>
</ul>
<p>为了表述方便，把数据块和校验块统称为编码块，之后我们可以通过编码块的一部分就能还原出整个对象。</p>
<h3>5.2 Reed-Solomon code</h3>
<p>Reed-Solomon 是纠删码的实现算法的一种，当然，也是一种恢复丢失和损坏数据的数学算法，</p>
<p><strong>Minio默认采用Reed-Solomon code将数据拆分成N/2个数据块和N/2个奇偶校验块。</strong></p>
<p>这就意味着如果是16块盘，一个对象会被分成8个数据块、8个奇偶校验块，你可以丢失任意8块盘（不管其是存放的数据块还是校验块），你仍可以从剩下的盘中的数据进行恢复。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301236374.png" alt="image-20220721213946979" tabindex="0" loading="lazy"><figcaption>image-20220721213946979</figcaption></figure>
<p>如上图，如我们所知，一个对象存储在一个Set上面，这个Set包含16个Drive，其中灰色的一半是数据块，橙色的一半是校验块，这种方式最多能忍受一半的编码丢失或损坏。</p>
<p><strong>所有编码块的大小是原对象的2倍，跟传统多副本存储方案相比，他只冗余存了一份，但可靠性更高。</strong></p>
<h4>5.2.1 可靠性体现</h4>
<ul>
<li>纠删码的工作原理和RAID或者副本不同，像RAID6只能在损失两块盘，或者以下的情况下不丢数据，而<strong>Minio纠删码可以在丢失一半的盘的情况下，仍可以保证数据安全</strong>。</li>
<li>而且<strong>Minio纠删码是作用在对象级别，可以一次恢复一个对象</strong>，而RAID是作用在卷级别，数据恢复时间很长。</li>
<li>Minio对每个对象单独编码，存储服务一经部署，通常情况下是不需要更换硬盘或者修复。</li>
<li>此外，针对不同应用所需的数据安全级别不同，Minio还提供了存储级别（Storage Class）的配置，调整数据块和校验块的比例，做到对空间的最佳使用。</li>
</ul>
<h4>5.2.2 存储空间计算</h4>
<blockquote>
<p>校验块的数量决定可损坏的磁盘数，可以损坏更多的磁盘，那么意味着要更多的存储空间。</p>
<p>最多一半的校验码，用2倍存储</p>
</blockquote>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301236393.png" alt="image-20220721214657092" tabindex="0" loading="lazy"><figcaption>image-20220721214657092</figcaption></figure>
<p>比如在将比例调整为14:2后，存储100M的数据占用的空间仅为114M。</p>
<h3>5.3 Bit Rot Protection：</h3>
<p>接下来讲Bit Rot Protection，直译就是腐烂。</p>
<p>它只是物理设备上的一些文件细微的损坏，还没有被操作系统所硬件所察觉，但是他已经损坏了。</p>
<p>Bit Rot 位衰减又被称为<strong>数据腐化Data Rot</strong>、<strong>无声数据损坏Silent Data Corruption</strong>,</p>
<blockquote>
<p>位衰减可以理解为无形中的数据丢失——或者称为“Bit rot”, 是指物理存储介质的衰减所带来的隐患将凸显出来。</p>
</blockquote>
<p>位衰减是目前硬盘数据的一种严重数据丢失问题。</p>
<p>硬盘上的数据可能会神不知鬼不觉就损坏了，也没有什么错误日志。</p>
<p>一项对150万块硬盘的研究表明，每90块硬盘就有1块有这种“软错误”，这个错误不但会导致数据丢失，还会导致RAID错误。</p>
<p>针对这一问题，最新的Minio采用了HighwayHash算法计算校验和来防范位衰减，根据测试结果，其可以实现10GB/s的处理速度。</p>
<p><strong>大致的做法是：</strong></p>
<blockquote>
<p>MinIO把之前的编码块进行 HighwayHash 编码，最后要校验这个编码，以确保每个编码是正确的。</p>
</blockquote>
<h3>5.4 文件的修复</h3>
<p>另外，MinIO提供了一个管理工具，可以对所有编码块进行校验，如果发现编码块有问题，再去修复它。</p>
<p>得益于Reed-Solomon纠删码，Minio可以更加灵活的对文件进行修复。</p>
<p>目前，Minio提供了全量、bucket、文件夹、文件等各个粒度的修复操作：</p>
<p>递归修复</p>
<div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">$</span><span style="color:#98C379;--shiki-dark:#98C379"> mc</span><span style="color:#98C379;--shiki-dark:#98C379"> admin</span><span style="color:#98C379;--shiki-dark:#98C379"> heal</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -r</span><span style="color:#98C379;--shiki-dark:#98C379"> myminio</span></span></code></pre>
</div><p>指定桶修复</p>
<div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">$</span><span style="color:#98C379;--shiki-dark:#98C379"> mc</span><span style="color:#98C379;--shiki-dark:#98C379"> admin</span><span style="color:#98C379;--shiki-dark:#98C379"> heal</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -r</span><span style="color:#98C379;--shiki-dark:#98C379"> myminio/dev</span></span></code></pre>
</div><p>下面是几个例子：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301236419.png" alt="image-20220721215704818" tabindex="0" loading="lazy"><figcaption>image-20220721215704818</figcaption></figure>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301236445.png" alt="image-20220721215724700" tabindex="0" loading="lazy"><figcaption>image-20220721215724700</figcaption></figure>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301236466.png" alt="image-20220721215753800" tabindex="0" loading="lazy"><figcaption>image-20220721215753800</figcaption></figure>
<p>相比一般的RAID方式，Minio可以在非常小的粒度下对文件进行修复操作，灵活性有了很大提高。</p>
<p>修复后，可以JSON格式列出指定路径（文件、大小）</p>
<div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">$</span><span style="color:#98C379;--shiki-dark:#98C379"> mc</span><span style="color:#98C379;--shiki-dark:#98C379"> ls</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -r</span><span style="color:#D19A66;--shiki-dark:#D19A66"> --json</span><span style="color:#98C379;--shiki-dark:#98C379"> myminio/dev</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF"> "status"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">:</span><span style="color:#98C379;--shiki-dark:#98C379"> "success",</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF"> "type"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">:</span><span style="color:#98C379;--shiki-dark:#98C379"> "file",</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF"> "lastModified"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">:</span><span style="color:#98C379;--shiki-dark:#98C379"> "2019-05-30T09:43:07.763-04:00",</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF"> "size"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">:</span><span style="color:#98C379;--shiki-dark:#98C379"> 44996289,</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF"> "key"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">:</span><span style="color:#98C379;--shiki-dark:#98C379"> "myFile",</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF"> "etag"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">:</span><span style="color:#98C379;--shiki-dark:#98C379"> "bae58dc18zzzzz54c14e233b520e0a"</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
</div><h2>参考文章</h2>
<p><a href="https://blog.csdn.net/crazymakercircle/article/details/120855464" target="_blank" rel="noopener noreferrer">minio 高可用 （原理+秒懂+史上最全）</a></p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301236208.png" type="image/png"/>
    </item>
    <item>
      <title>Minio基础 - Minio纠删码</title>
      <link>https://mrjackc.github.io/posts/Architect/minio/minio-erasure-code.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/minio/minio-erasure-code.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">Minio基础 - Minio纠删码</source>
      <description>Minio基础 - Minio纠删码 Minio使用纠删码erasure code和校验和checksum来保护数据免受硬件故障和无声数据损坏。 即便您丢失一半数量（N/2）的硬盘，您仍然可以恢复数据。 1. 什么是纠删码erasure code？ 纠删码是一种恢复丢失和损坏数据的数学算法， Minio采用Reed-Solomon code将对象拆分成...</description>
      <category>Minio</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<blockquote>
<p>Minio使用纠删码<code>erasure code</code>和校验和<code>checksum</code>来保护数据免受硬件故障和无声数据损坏。 即便您丢失一半数量（N/2）的硬盘，您仍然可以恢复数据。</p>
</blockquote>
<h2>1. 什么是纠删码<code>erasure code</code>？</h2>
<p><strong>纠删码是一种恢复丢失和损坏数据的数学算法， Minio采用Reed-Solomon code将对象拆分成N/2数据和N/2 奇偶校验块</strong>。 这就意味着如果是12块盘，一个对象会被分成6个数据块、6个奇偶校验块，你可以丢失任意6块盘（不管其是存放的数据块还是奇偶校验块），你仍可以从剩下的盘中的数据进行恢复</p>
<h2>2. 为什么纠删码有用?</h2>
<p>纠删码的工作原理和RAID或者复制不同，像RAID6可以在损失两块盘的情况下不丢数据</p>
<ul>
<li>
<p>而Minio纠删码可以在丢失一半的盘的情况下，仍可以保证数据安全。</p>
</li>
<li>
<p>而且Minio纠删码是作用在对象级别，可以一次恢复一个对象，而RAID是作用在卷级别，数据恢复时间很长。</p>
<p>Minio对每个对象单独编码，存储服务一经部署，通常情况下是不需要更换硬盘或者修复。Minio纠删码的设计目标是为了性能和尽可能的使用硬件加速。</p>
</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301237385.png" alt="image-20220715111328603" tabindex="0" loading="lazy"><figcaption>image-20220715111328603</figcaption></figure>
<h2>3. 什么是位衰减<code>bit rot</code>保护?</h2>
<p>位衰减又被称为数据腐化<code>Data Rot</code>、无声数据损坏<code>Silent Data Corruption</code>,是目前硬盘数据的一种严重数据丢失问题。硬盘上的数据可能会神不知鬼不觉就损坏了，也没有什么错误日志。正所谓明枪易躲，暗箭难防，这种背地里犯的错比硬盘直接咔咔宕了还危险。 不过不用怕，Minio纠删码采用了高速 <a href="https://github.com/minio/highwayhash" target="_blank" rel="noopener noreferrer">HighwayHash</a> 基于哈希的校验和来防范位衰减。</p>
<h2>4. 更深入的理解</h2>
<h3>4.1 数据冗余技术</h3>
<p><strong>副本策略</strong>和<strong>纠删码</strong>是存储领域常见的两种数据冗余技术。相比于副本策略，纠删码具有更高的磁盘利用率。 Reed-Solomon码是一种常见的纠删码。</p>
<h4>4.1.1 纠删码 Erasure Code</h4>
<p>Erasure Code是一种编码技术，它可以将n份原始数据，增加m份数据，并能通过n+m份中的任意n份数据，还原为原始数据。即如果有任意小于等于m份的数据失效，仍然能通过剩下的数据还原出来。</p>
<p>纠删码技术在分布式存储 系统中的应用主要有三类，</p>
<ul>
<li>阵列纠删码（Array Code: RAID5、RAID6等）</li>
<li><strong>RS(Reed-Solomon)里德-所罗门类纠删码</strong></li>
<li>LDPC(LowDensity Parity Check Code)低密度奇偶校验纠删码。 LDPC码目前主要用于通信、视频和音频编码等领域。</li>
</ul>
<p>纠删码技术主要是通过纠删码算法将原始的数据进行编码得到冗余，并将数据和冗余一并存储起来，以达到容错的目的。<strong>其基本思想是将n块原始的数据元素通过一定的计算，得到m块冗余元素（校验块）。对于这n+m块的元素，当其中任意的m块元素出错（包括原始数据和冗余数据）时，均可以通过对应的重构算法恢复出原来的n块数据</strong>。</p>
<ul>
<li>生成校验的过程被成为编码（encoding）</li>
<li>恢复丢失数据块的过程被称为解码（decoding）。磁盘利用率为n/(n+m)。</li>
</ul>
<p>基于纠删码的方法与多副本方法相比具有冗余度低、磁盘利用率高等优点。</p>
<h4>4.1.2 多副本策略</h4>
<p>多副本策略即将数据存储多个副本（一般是三副本，比如HDFS），当某个副本丢失时，可以通过其他副本复制回来。三副本的磁盘利用率为1/3。</p>
<h4>4.1.3 两种冗余技术对比</h4>
<p>| 两种技术      | 磁盘利用率 | 计算开销 | 网络消耗 | 恢复效率 |<br>
|</p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301237385.png" type="image/png"/>
    </item>
    <item>
      <title>Minio部署 - minio配置HTTPS</title>
      <link>https://mrjackc.github.io/posts/Architect/minio/minio-https.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/minio/minio-https.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">Minio部署 - minio配置HTTPS</source>
      <description>Minio部署 - minio配置HTTPS 1. 简介 MinIO部署默认以HTTP方式对外提供服务，如果我们需要支持https 应该怎么做呢？ 主要思路就是 万能大法，通过nginx反向代理，将https配置在nginx侧，内部的MinIO还是使用HTTP； MinIO服务端直接配置成HTTPS； 如何生成https证书：使用acme.sh生成免费...</description>
      <category>Minio</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 简介</h2>
<p>MinIO部署默认以HTTP方式对外提供服务，如果我们需要支持https 应该怎么做呢？</p>
<p>主要思路就是</p>
<ul>
<li>万能大法，通过nginx反向代理，将https配置在nginx侧，内部的MinIO还是使用HTTP；</li>
<li>MinIO服务端直接配置成HTTPS；</li>
</ul>
<blockquote>
<p>如何生成https证书：<a href="https://java.isture.com/problem&amp;solve/https/%E4%BD%BF%E7%94%A8acme.sh%E7%94%9F%E6%88%90%E5%85%8D%E8%B4%B9%E7%9A%84SSL%E8%AF%81%E4%B9%A6.html" target="_blank" rel="noopener noreferrer">使用acme.sh生成免费的SSL证书</a></p>
</blockquote>
<h2>2. nginx 方案</h2>
<ol>
<li>修改nginx配置文件</li>
</ol>
<div class="language-nginx line-numbers-mode" data-ext="nginx" data-title="nginx"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD"> server</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        listen </span><span style="color:#D19A66;--shiki-dark:#D19A66">         80</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        server_name </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    minio.aaa.com;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        listen </span><span style="color:#D19A66;--shiki-dark:#D19A66"> 443</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ssl;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        ssl_certificate </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/home/wwwroot/minio.aaa.com/cret/cert.pem;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        ssl_certificate_key </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/home/wwwroot/minio.aaa.com/cret/key.pem;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        location</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> / {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            proxy_set_header </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">X-Real-IP $</span><span style="color:#E06C75;--shiki-dark:#E06C75">remote_addr</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">           proxy_set_header </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">X-Forwarded-For $</span><span style="color:#E06C75;--shiki-dark:#E06C75">proxy_add_x_forwarded_for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">           proxy_set_header </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">X-Forwarded-Proto $</span><span style="color:#E06C75;--shiki-dark:#E06C75">scheme</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">           proxy_set_header </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">Host $</span><span style="color:#E06C75;--shiki-dark:#E06C75">http_host</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">           proxy_connect_timeout </span><span style="color:#D19A66;--shiki-dark:#D19A66"> 300</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">           # Default is HTTP/1, keepalive is only enabled in HTTP/1.1</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">           proxy_http_version </span><span style="color:#D19A66;--shiki-dark:#D19A66">1.1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">           proxy_set_header </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">Connection </span><span style="color:#98C379;--shiki-dark:#98C379">""</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            proxy_pass </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">http://47.119.1.1:9000;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2">
<li>java 连接也改成https</li>
</ol>
<h3>3.1 遇到的问题</h3>
<h4>3.1.1 提示签名不对</h4>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>io.minio.errors.ErrorResponseException: The request signature we calculated does not match the signature you provided. Check your key and signing method.</span></span>
<span class="line"><span>	at io.minio.S3Base.execute(S3Base.java:670)</span></span>
<span class="line"><span>	at io.minio.S3Base.getRegion(S3Base.java:694)</span></span>
<span class="line"><span>	at io.minio.S3Base.execute(S3Base.java:470)</span></span>
<span class="line"><span>	at io.minio.S3Base.executeHead(S3Base.java:728)</span></span>
<span class="line"><span>	at io.minio.S3Base.statObject(S3Base.java:1447)</span></span>
<span class="line"><span>	at io.minio.MinioClient.statObject(MinioClient.java:217)</span></span>
<span class="line"><span>	at com.fardu.file.service.impl.MinioFileServiceImpl.getStatInfo(MinioFileServiceImpl.java:283)</span></span>
<span class="line"><span>	at com.fardu.file.service.impl.MinioFileServiceImpl.exists(MinioFileServiceImpl.java:201)</span></span></code></pre>
</div><p>解决</p>
<p>nginx 添加如下配置</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span> proxy_set_header X-Real-IP $remote_addr;</span></span>
<span class="line"><span>           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span></span>
<span class="line"><span>           proxy_set_header X-Forwarded-Proto $scheme;</span></span>
<span class="line"><span>           proxy_set_header Host $http_host;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>           proxy_connect_timeout  300;</span></span>
<span class="line"><span>           # Default is HTTP/1, keepalive is only enabled in HTTP/1.1</span></span>
<span class="line"><span>           proxy_http_version 1.1;</span></span>
<span class="line"><span>           proxy_set_header Connection "";</span></span></code></pre>
</div><h2>3. MinIO服务端配置成HTTPS</h2>
<h3>3.1 证书存放</h3>
<p>首先，根据官网描述（<a href="https://link.juejin.cn/?target=https%3A%2F%2Fdocs.min.io%2Fdocs%2Fhow-to-secure-access-to-minio-server-with-tls.html" target="_blank" rel="noopener noreferrer">How to secure access to MinIO server with TLS</a>），将TLS的公私钥放到：<code>{{HOME}}/.minio/certs</code> 里</p>
<p><strong>注意：</strong></p>
<ul>
<li>私钥需要命名为：private.key</li>
<li>公钥需要命名为：public.crt (如果公钥是以pem格式结尾，可直接改为crt格式)</li>
</ul>
<blockquote>
<p>如果是下面的docker-compose 则放在对应的映射目录下</p>
</blockquote>
<h3>3.2  docker-compose 配置</h3>
<div class="language-yml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">'3'</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">services</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  minio</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    image</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">minio/minio:RELEASE.2021-10-27T16-29-42Z</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    container_name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">minio</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    ports</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # api 端口</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      - </span><span style="color:#98C379;--shiki-dark:#98C379">"9000:9000"</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 控制台端口</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      - </span><span style="color:#98C379;--shiki-dark:#98C379">"9001:9001"</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    environment</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 时区上海</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      TZ</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">Asia/Shanghai</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 管理后台用户名</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      MINIO_ACCESS_KEY</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">admin</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 管理后台密码，最小8个字符</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      MINIO_SECRET_KEY</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">zsz123456</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # https需要指定域名</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      MINIO_SERVER_URL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">"https://minio.xxx.com:9000"</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      MINIO_BROWSER_REDIRECT_URL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">"https://minio.xxx.com:9001"</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 开启压缩 on 开启 off 关闭</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      MINIO_COMPRESS</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">"off"</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 扩展名 .pdf,.doc 为空 所有类型均压缩</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      MINIO_COMPRESS_EXTENSIONS</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">""</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # mime 类型 application/pdf 为空 所有类型均压缩</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      MINIO_COMPRESS_MIME_TYPES</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">""</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    volumes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 映射当前目录下的data目录至容器内/data目录</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      - </span><span style="color:#98C379;--shiki-dark:#98C379">./data:/data</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 映射配置目录</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      - </span><span style="color:#98C379;--shiki-dark:#98C379">./config:/root/.minio</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    command</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">server --address ':9000' --console-address ':9001' /data</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 指定容器中的目录 /data</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    privileged</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#D19A66;--shiki-dark:#D19A66">true</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    # restart: always</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>3.3 docker启动</h3>
<div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF"> docker-compose</span><span style="color:#98C379;--shiki-dark:#98C379"> up</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -d</span></span></code></pre>
</div><p>查看日志</p>
<div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">docker-compose</span><span style="color:#98C379;--shiki-dark:#98C379"> logs</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -f</span></span></code></pre>
</div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301407477.png" alt="image-20220725233426822" tabindex="0" loading="lazy"><figcaption>image-20220725233426822</figcaption></figure>
<h2>4. 总结</h2>
<p>相对来说nginx 会更灵活一点，以后集群啥的都可以通过nginx来做，而minio服务改造成https 就只能是minio服务单台实例https了</p>
<h2>参考文章</h2>
<p><a href="https://juejin.cn/post/7021057486404714532" target="_blank" rel="noopener noreferrer">踩坑记录之MinIO添加HTTPS访问</a></p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301407477.png" type="image/png"/>
    </item>
    <item>
      <title>Minio部署 - MinIO安装</title>
      <link>https://mrjackc.github.io/posts/Architect/minio/minio-install.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/minio/minio-install.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">Minio部署 - MinIO安装</source>
      <description>Minio部署 - MinIO安装 1. 简介 MinIO 是一个基于Apache License v2.0开源协议的对象存储服务。它兼容亚马逊S3云存储服务接口，非 常适合于存储大容量非结构化的数据，例如图片、视频、日志文件、备份数据和容器/虚拟机镜像等，而 一个对象文件可以是任意大小，从几kb到最大5T不等。 MinIO是一个非常轻量的服务,可以很...</description>
      <category>Minio</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 简介</h2>
<blockquote>
<p>MinIO 是一个基于Apache License v2.0开源协议的对象存储服务。它兼容亚马逊S3云存储服务接口，非 常适合于存储大容量非结构化的数据，例如图片、视频、日志文件、备份数据和容器/虚拟机镜像等，而 一个对象文件可以是任意大小，从几kb到最大5T不等。 MinIO是一个非常轻量的服务,可以很简单的和其他应用的结合，类似 NodeJS, Redis 或者 MySQL。</p>
</blockquote>
<p>一个对象存储服务，适合存储非结构化数据。如图片、视频、日志文件等</p>
<h3>1.1 优点</h3>
<ul>
<li>部署简单: 一个single二进制文件即是一切，还可支持各种平台。</li>
<li>minio支持海量存储，可按zone扩展(原zone不受任何影响)，支持单个对象最大5TB;</li>
<li>兼容Amazon S3接口，充分考虑开发人员的需求和体验;</li>
<li>低冗余且磁盘损坏高容忍，标准且最高的数据冗余系数为2(即存储一个1M的数据对象，实际占用 磁盘空间为2M)。但在任意n/2块disk损坏的情况下依然可以读出数据(n为一个纠删码集合(Erasure Coding Set)中的disk数量)。并且这种损坏恢复是基于单个对象的，而不是基于整个存储卷的。</li>
<li>读写性能优异</li>
</ul>
<h2>2. 安装</h2>
<h3>2.1 Centos7 单机部署</h3>
<div class="language-sh" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">wget</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -q</span><span style="color:#98C379;--shiki-dark:#98C379"> http://dl.minio.org.cn/server/minio/release/linux-amd64/minio</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">chmod</span><span style="color:#98C379;--shiki-dark:#98C379"> +x</span><span style="color:#98C379;--shiki-dark:#98C379"> minio</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">#启动minio server服务，指定数据存储目录/mnt/data</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">./minio</span><span style="color:#98C379;--shiki-dark:#98C379"> server</span><span style="color:#98C379;--shiki-dark:#98C379"> /mnt/data</span></span></code></pre>
</div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301408426.png" alt="image-20210925212033260" tabindex="0" loading="lazy"><figcaption>image-20210925212033260</figcaption></figure>
<p>默认用户名密码minioadmin:minioadmin，修改默认用户名密码可以使用：</p>
<div class="language-sh" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">export</span><span style="color:#E06C75;--shiki-dark:#E06C75"> MINIO_ROOT_USER</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75">admin</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">export</span><span style="color:#E06C75;--shiki-dark:#E06C75"> MINIO_ROOT_PASSWORD</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66">12345678</span></span></code></pre>
</div><p>默认的配置目录是${HOME}/.minio，可以通过--config-dir命令自定义配置目录：</p>
<div class="language-sh" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">./minio</span><span style="color:#98C379;--shiki-dark:#98C379"> server</span><span style="color:#D19A66;--shiki-dark:#D19A66"> --config-dir</span><span style="color:#98C379;--shiki-dark:#98C379"> /mnt/config</span><span style="color:#98C379;--shiki-dark:#98C379"> /mnt/data</span></span></code></pre>
</div><p>控制台监听端口是动态生成的，可以通过--console-address ":port"指定静态端口</p>
<div class="language-sh" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">./minio</span><span style="color:#98C379;--shiki-dark:#98C379"> server</span><span style="color:#D19A66;--shiki-dark:#D19A66"> --console-address</span><span style="color:#98C379;--shiki-dark:#98C379"> ":9001"</span><span style="color:#98C379;--shiki-dark:#98C379"> /mnt/data</span></span></code></pre>
</div><figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301408472.png" alt="image-20210925212415270" tabindex="0" loading="lazy"><figcaption>image-20210925212415270</figcaption></figure>
<h3>2.2 docker安装</h3>
<p>注：跟中文官网有巨大不同。中文官网没有指定console端口</p>
<div class="language-sh" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">docker</span><span style="color:#98C379;--shiki-dark:#98C379"> run</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -p</span><span style="color:#98C379;--shiki-dark:#98C379"> 9000:9000</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -p</span><span style="color:#98C379;--shiki-dark:#98C379"> 9001:50000</span><span style="color:#D19A66;--shiki-dark:#D19A66"> --name</span><span style="color:#98C379;--shiki-dark:#98C379"> minio</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> \</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">-v </span><span style="color:#98C379;--shiki-dark:#98C379">/mnt/data:/data</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> \</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">-v </span><span style="color:#98C379;--shiki-dark:#98C379">/mnt/config:/root/.minio</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> \</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">minio/minio </span><span style="color:#98C379;--shiki-dark:#98C379">server</span><span style="color:#D19A66;--shiki-dark:#D19A66"> --console-address</span><span style="color:#98C379;--shiki-dark:#98C379"> ":9001"</span><span style="color:#98C379;--shiki-dark:#98C379"> /data</span></span></code></pre>
</div><p>MinIO自定义用户名密码</p>
<div class="language-sh" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">docker</span><span style="color:#98C379;--shiki-dark:#98C379"> run</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -d</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -p</span><span style="color:#98C379;--shiki-dark:#98C379"> 9000:9000</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -p</span><span style="color:#98C379;--shiki-dark:#98C379"> 9001:50000</span><span style="color:#D19A66;--shiki-dark:#D19A66"> --name</span><span style="color:#98C379;--shiki-dark:#98C379"> minio</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> \</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">-e </span><span style="color:#98C379;--shiki-dark:#98C379">"MINIO_ROOT_USER=admin"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> \</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">-e </span><span style="color:#98C379;--shiki-dark:#98C379">"MINIO_ROOT_PASSWORD=12345678"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> \</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">-v </span><span style="color:#98C379;--shiki-dark:#98C379">/mnt/data:/data</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> \</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">-v </span><span style="color:#98C379;--shiki-dark:#98C379">/mnt/config:/root/.minio</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> \</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">minio/minio </span><span style="color:#98C379;--shiki-dark:#98C379">server</span><span style="color:#D19A66;--shiki-dark:#D19A66"> --console-address</span><span style="color:#98C379;--shiki-dark:#98C379"> ":9001"</span><span style="color:#98C379;--shiki-dark:#98C379"> /data</span></span></code></pre>
</div><h3>2.3 docker-compose 单实例安装</h3>
<div class="language-yml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">'3'</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">services</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  minio</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    image</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">minio/minio:RELEASE.2021-10-27T16-29-42Z</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    container_name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">minio</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    ports</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # api 端口</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      - </span><span style="color:#98C379;--shiki-dark:#98C379">"9000:9000"</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 控制台端口</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      - </span><span style="color:#98C379;--shiki-dark:#98C379">"9001:9001"</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    environment</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 时区上海</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      TZ</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">Asia/Shanghai</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 管理后台用户名</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      MINIO_ACCESS_KEY</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">admin</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 管理后台密码，最小8个字符</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      MINIO_SECRET_KEY</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">zsz123456</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # https需要指定域名</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      MINIO_SERVER_URL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">""</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 开启压缩 on 开启 off 关闭</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      MINIO_COMPRESS</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">"off"</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 扩展名 .pdf,.doc 为空 所有类型均压缩</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      MINIO_COMPRESS_EXTENSIONS</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">""</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # mime 类型 application/pdf 为空 所有类型均压缩</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      MINIO_COMPRESS_MIME_TYPES</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">""</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    volumes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 映射当前目录下的data目录至容器内/data目录</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      - </span><span style="color:#98C379;--shiki-dark:#98C379">./data:/data</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 映射配置目录</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      - </span><span style="color:#98C379;--shiki-dark:#98C379">./config:/root/.minio/</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    command</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">server --address ':9000' --console-address ':9001' /data</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 指定容器中的目录 /data</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    privileged</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#D19A66;--shiki-dark:#D19A66">true</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    # restart: always</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>2.4 docker-compose 单实例支持https</h3>
<div class="language-yml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">'3'</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">services</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  minio</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    image</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">minio/minio:RELEASE.2021-10-27T16-29-42Z</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    container_name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">minio</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    ports</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # api 端口</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      - </span><span style="color:#98C379;--shiki-dark:#98C379">"9000:9000"</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 控制台端口</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      - </span><span style="color:#98C379;--shiki-dark:#98C379">"9001:9001"</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    environment</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 时区上海</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      TZ</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">Asia/Shanghai</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 管理后台用户名</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      MINIO_ROOT_USER</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">admin</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 管理后台密码，最小8个字符</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      MINIO_ROOT_PASSWORD</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">zsz123456</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # https需要指定域名</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      MINIO_SERVER_URL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">"https://minio.xxx.com:9000"</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      MINIO_BROWSER_REDIRECT_URL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">"https://minio.xxx.com:9001"</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 开启压缩 on 开启 off 关闭</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      MINIO_COMPRESS</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">"off"</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 扩展名 .pdf,.doc 为空 所有类型均压缩</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      MINIO_COMPRESS_EXTENSIONS</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">""</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # mime 类型 application/pdf 为空 所有类型均压缩</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      MINIO_COMPRESS_MIME_TYPES</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">""</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    volumes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 映射当前目录下的data目录至容器内/data目录</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      - </span><span style="color:#98C379;--shiki-dark:#98C379">./data:/data</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 映射配置目录</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      - </span><span style="color:#98C379;--shiki-dark:#98C379">./config:/root/.minio</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    command</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">server --address ':9000' --console-address ':9001' /data</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 指定容器中的目录 /data</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    privileged</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#D19A66;--shiki-dark:#D19A66">true</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    # restart: always</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>2.5 docker-compose 集群安装</h3>
<p>主要有两文件，docker-compose.yaml 和 nginx.conf</p>
<h4>2.5.1 docker-compose.yaml</h4>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#98C379;--shiki-dark:#98C379"> '3.7'</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75"># </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Settings</span><span style="color:#E06C75;--shiki-dark:#E06C75"> and configurations that are common </span><span style="color:#C678DD;--shiki-dark:#C678DD">for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> all containers</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">x</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E06C75;--shiki-dark:#E06C75">minio</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E06C75;--shiki-dark:#E06C75">common</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> &amp;</span><span style="color:#E06C75;--shiki-dark:#E06C75">minio</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E06C75;--shiki-dark:#E06C75">common</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  image</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> quay</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">io</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">/</span><span style="color:#E06C75;--shiki-dark:#E06C75">minio</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">/</span><span style="color:#E06C75;--shiki-dark:#E06C75">minio</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">RELEASE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#FFFFFF;--shiki-dark:#FFFFFF">2022</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#D19A66;--shiki-dark:#D19A66">07</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E06C75;--shiki-dark:#E06C75">17T15</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#D19A66;--shiki-dark:#D19A66">43</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E06C75;--shiki-dark:#E06C75">14Z</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  command</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> server </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">--</span><span style="color:#E06C75;--shiki-dark:#E06C75">console</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E06C75;--shiki-dark:#E06C75">address </span><span style="color:#98C379;--shiki-dark:#98C379">":9001"</span><span style="color:#E06C75;--shiki-dark:#E06C75"> http</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//minio{1...4}/data{1...2}</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  expose</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">    -</span><span style="color:#98C379;--shiki-dark:#98C379"> "9000"</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">    -</span><span style="color:#98C379;--shiki-dark:#98C379"> "9001"</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  environment</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    MINIO_ROOT_USER</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> minioadmin</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    MINIO_ROOT_PASSWORD</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> minioadmin</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  healthcheck</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    test</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> [</span><span style="color:#98C379;--shiki-dark:#98C379">"CMD"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379"> "curl"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379"> "-f"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#98C379;--shiki-dark:#98C379"> "http://localhost:9000/minio/health/live"</span><span style="color:#E06C75;--shiki-dark:#E06C75">]</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    interval</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> 30s</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    timeout</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> 20s</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    retries</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 3</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75"># starts </span><span style="color:#D19A66;--shiki-dark:#D19A66">4</span><span style="color:#E06C75;--shiki-dark:#E06C75"> docker containers running minio server instances</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75"># using nginx reverse proxy</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> load balancing</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> you can access</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75"># it through port </span><span style="color:#D19A66;--shiki-dark:#D19A66">9000.</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">services</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  minio1</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">    &lt;&lt;</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> *</span><span style="color:#E06C75;--shiki-dark:#E06C75">minio</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E06C75;--shiki-dark:#E06C75">common</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    hostname</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> minio1</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    volumes</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">      -</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> .</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">/</span><span style="color:#E06C75;--shiki-dark:#E06C75">data</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">/</span><span style="color:#E06C75;--shiki-dark:#E06C75">data1</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">/</span><span style="color:#E06C75;--shiki-dark:#E06C75">data1</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">      -</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> .</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">/</span><span style="color:#E06C75;--shiki-dark:#E06C75">data</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">/</span><span style="color:#E06C75;--shiki-dark:#E06C75">data1</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">/</span><span style="color:#E06C75;--shiki-dark:#E06C75">data2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  minio2</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">    &lt;&lt;</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> *</span><span style="color:#E06C75;--shiki-dark:#E06C75">minio</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E06C75;--shiki-dark:#E06C75">common</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    hostname</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> minio2</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    volumes</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">      -</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> .</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">/</span><span style="color:#E06C75;--shiki-dark:#E06C75">data</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">/</span><span style="color:#E06C75;--shiki-dark:#E06C75">data2</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">/</span><span style="color:#E06C75;--shiki-dark:#E06C75">data1</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">      -</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> .</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">/</span><span style="color:#E06C75;--shiki-dark:#E06C75">data</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">/</span><span style="color:#E06C75;--shiki-dark:#E06C75">data2</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">/</span><span style="color:#E06C75;--shiki-dark:#E06C75">data2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  minio3</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">    &lt;&lt;</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> *</span><span style="color:#E06C75;--shiki-dark:#E06C75">minio</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E06C75;--shiki-dark:#E06C75">common</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    hostname</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> minio3</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    volumes</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">      -</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> .</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">/</span><span style="color:#E06C75;--shiki-dark:#E06C75">data</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">/</span><span style="color:#E06C75;--shiki-dark:#E06C75">data3</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">/</span><span style="color:#E06C75;--shiki-dark:#E06C75">data1</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">      -</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> .</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">/</span><span style="color:#E06C75;--shiki-dark:#E06C75">data</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">/</span><span style="color:#E06C75;--shiki-dark:#E06C75">data3</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">/</span><span style="color:#E06C75;--shiki-dark:#E06C75">data2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  minio4</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">    &lt;&lt;</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> *</span><span style="color:#E06C75;--shiki-dark:#E06C75">minio</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E06C75;--shiki-dark:#E06C75">common</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    hostname</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> minio4</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    volumes</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">      -</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> .</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">/</span><span style="color:#E06C75;--shiki-dark:#E06C75">data</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">/</span><span style="color:#E06C75;--shiki-dark:#E06C75">data4</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">/</span><span style="color:#E06C75;--shiki-dark:#E06C75">data1</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">      -</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> .</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">/</span><span style="color:#E06C75;--shiki-dark:#E06C75">data</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">/</span><span style="color:#E06C75;--shiki-dark:#E06C75">data4</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">/</span><span style="color:#E06C75;--shiki-dark:#E06C75">data2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  nginx</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    image</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> nginx</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#D19A66;--shiki-dark:#D19A66">1.19</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#FFFFFF;--shiki-dark:#FFFFFF">2</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E06C75;--shiki-dark:#E06C75">alpine</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    hostname</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> nginx</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    volumes</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">      -</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> .</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">/</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">nginx</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">conf</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">/</span><span style="color:#E06C75;--shiki-dark:#E06C75">etc</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">/</span><span style="color:#E06C75;--shiki-dark:#E06C75">nginx</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">/</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">nginx</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">conf</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    ports</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">      -</span><span style="color:#98C379;--shiki-dark:#98C379"> "9000:9000"</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">      -</span><span style="color:#98C379;--shiki-dark:#98C379"> "9001:9001"</span><span style="color:#E06C75;--shiki-dark:#E06C75">  </span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    depends_on</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">      -</span><span style="color:#E06C75;--shiki-dark:#E06C75"> minio1</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">      -</span><span style="color:#E06C75;--shiki-dark:#E06C75"> minio2</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">      -</span><span style="color:#E06C75;--shiki-dark:#E06C75"> minio3</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">      -</span><span style="color:#E06C75;--shiki-dark:#E06C75"> minio4</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">## </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">By</span><span style="color:#C678DD;--shiki-dark:#C678DD"> default</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#E06C75;--shiki-dark:#E06C75"> config uses </span><span style="color:#C678DD;--shiki-dark:#C678DD">default</span><span style="color:#E06C75;--shiki-dark:#E06C75"> local driver</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">## </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">For</span><span style="color:#E06C75;--shiki-dark:#E06C75"> custom volumes replace with volume driver configuration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">volumes</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  data1</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  data1</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  data2</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  data2</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  data3</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  data3</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  data4</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  data4</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4>2.5.2 nginx.conf</h4>
<div class="language-nginx line-numbers-mode" data-ext="nginx" data-title="nginx"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">user </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> nginx;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">worker_processes </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> auto;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">error_log </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> /var/log/nginx/error.log </span><span style="color:#D19A66;--shiki-dark:#D19A66">warn</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">pid </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">       /var/run/nginx.pid;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">events</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    worker_connections </span><span style="color:#D19A66;--shiki-dark:#D19A66"> 4096</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">http</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    include </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      /etc/nginx/mime.types;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    default_type </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> application/octet-stream;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    log_format </span><span style="color:#D19A66;--shiki-dark:#D19A66"> main</span><span style="color:#98C379;--shiki-dark:#98C379">  '$</span><span style="color:#E06C75;--shiki-dark:#E06C75">remote_addr</span><span style="color:#98C379;--shiki-dark:#98C379"> - $</span><span style="color:#E06C75;--shiki-dark:#E06C75">remote_user</span><span style="color:#98C379;--shiki-dark:#98C379"> [$</span><span style="color:#E06C75;--shiki-dark:#E06C75">time_local</span><span style="color:#98C379;--shiki-dark:#98C379">] "$</span><span style="color:#E06C75;--shiki-dark:#E06C75">request</span><span style="color:#98C379;--shiki-dark:#98C379">" '</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">                      '$</span><span style="color:#E06C75;--shiki-dark:#E06C75">status</span><span style="color:#98C379;--shiki-dark:#98C379"> $</span><span style="color:#E06C75;--shiki-dark:#E06C75">body_bytes_sent</span><span style="color:#98C379;--shiki-dark:#98C379"> "$</span><span style="color:#E06C75;--shiki-dark:#E06C75">http_referer</span><span style="color:#98C379;--shiki-dark:#98C379">" '</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">                      '"$</span><span style="color:#E06C75;--shiki-dark:#E06C75">http_user_agent</span><span style="color:#98C379;--shiki-dark:#98C379">" "$</span><span style="color:#E06C75;--shiki-dark:#E06C75">http_x_forwarded_for</span><span style="color:#98C379;--shiki-dark:#98C379">"'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    access_log </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> /var/log/nginx/access.log  </span><span style="color:#D19A66;--shiki-dark:#D19A66">main</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    sendfile </span><span style="color:#D19A66;--shiki-dark:#D19A66">       on</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    keepalive_timeout </span><span style="color:#D19A66;--shiki-dark:#D19A66"> 65</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    # include /etc/nginx/conf.d/*.conf;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    upstream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> minio {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        server</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> minio1:9000;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        server</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> minio2:9000;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        server</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> minio3:9000;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        server</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> minio4:9000;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    upstream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> console {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        ip_hash</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        server</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> minio1:9001;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        server</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> minio2:9001;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        server</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> minio3:9001;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        server</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> minio4:9001;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    server</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        listen </span><span style="color:#D19A66;--shiki-dark:#D19A66">      9000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        listen </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> [::]:9000;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        server_name </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> localhost;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # To allow special characters in headers</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        ignore_invalid_headers </span><span style="color:#D19A66;--shiki-dark:#D19A66">off</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # Allow any size file to be uploaded.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # Set to a value such as 1000m; to restrict file size to a specific value</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        client_max_body_size </span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # To disable buffering</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        proxy_buffering </span><span style="color:#D19A66;--shiki-dark:#D19A66">off</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        proxy_request_buffering </span><span style="color:#D19A66;--shiki-dark:#D19A66">off</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        location</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> / {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            proxy_set_header </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">Host $</span><span style="color:#E06C75;--shiki-dark:#E06C75">http_host</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            proxy_set_header </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">X-Real-IP $</span><span style="color:#E06C75;--shiki-dark:#E06C75">remote_addr</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            proxy_set_header </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">X-Forwarded-For $</span><span style="color:#E06C75;--shiki-dark:#E06C75">proxy_add_x_forwarded_for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            proxy_set_header </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">X-Forwarded-Proto $</span><span style="color:#E06C75;--shiki-dark:#E06C75">scheme</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            proxy_connect_timeout </span><span style="color:#D19A66;--shiki-dark:#D19A66">300</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            # Default is HTTP/1, keepalive is only enabled in HTTP/1.1</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            proxy_http_version </span><span style="color:#D19A66;--shiki-dark:#D19A66">1.1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            proxy_set_header </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">Connection </span><span style="color:#98C379;--shiki-dark:#98C379">""</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            chunked_transfer_encoding </span><span style="color:#D19A66;--shiki-dark:#D19A66">off</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            proxy_pass </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">http://minio;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    server</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        listen </span><span style="color:#D19A66;--shiki-dark:#D19A66">      9001</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        listen </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> [::]:9001;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        server_name </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> localhost;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # To allow special characters in headers</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        ignore_invalid_headers </span><span style="color:#D19A66;--shiki-dark:#D19A66">off</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # Allow any size file to be uploaded.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # Set to a value such as 1000m; to restrict file size to a specific value</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        client_max_body_size </span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # To disable buffering</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        proxy_buffering </span><span style="color:#D19A66;--shiki-dark:#D19A66">off</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        proxy_request_buffering </span><span style="color:#D19A66;--shiki-dark:#D19A66">off</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        location</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> / {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            proxy_set_header </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">Host $</span><span style="color:#E06C75;--shiki-dark:#E06C75">http_host</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            proxy_set_header </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">X-Real-IP $</span><span style="color:#E06C75;--shiki-dark:#E06C75">remote_addr</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            proxy_set_header </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">X-Forwarded-For $</span><span style="color:#E06C75;--shiki-dark:#E06C75">proxy_add_x_forwarded_for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            proxy_set_header </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">X-Forwarded-Proto $</span><span style="color:#E06C75;--shiki-dark:#E06C75">scheme</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            proxy_set_header </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">X-NginX-Proxy </span><span style="color:#D19A66;--shiki-dark:#D19A66">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            # This is necessary to pass the correct IP to be hashed</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            real_ip_header </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">X-Real-IP;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            proxy_connect_timeout </span><span style="color:#D19A66;--shiki-dark:#D19A66">300</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            # To support websocket</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            proxy_http_version </span><span style="color:#D19A66;--shiki-dark:#D19A66">1.1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            proxy_set_header </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">Upgrade $</span><span style="color:#E06C75;--shiki-dark:#E06C75">http_upgrade</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            proxy_set_header </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">Connection </span><span style="color:#98C379;--shiki-dark:#98C379">"upgrade"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            </span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            chunked_transfer_encoding </span><span style="color:#D19A66;--shiki-dark:#D19A66">off</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            proxy_pass </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">http://console;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2>参考文章</h2>
<p><a href="https://www.bilibili.com/s/video/BV1Pq4y1U7ha" target="_blank" rel="noopener noreferrer"><strong>【2021最新版】分布式文件系统MinIO教学视频，通俗易懂！</strong></a></p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301408426.png" type="image/png"/>
    </item>
    <item>
      <title>Minio客户端mc使用</title>
      <link>https://mrjackc.github.io/posts/Architect/minio/minio-mc-use.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/minio/minio-mc-use.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">Minio客户端mc使用</source>
      <description>Minio客户端mc使用 1. 简介 MinIO Client (mc)为ls，cat，cp，mirror，diff，find等UNIX命令提供了一种替代方案。它支持文件系统和兼容Amazon S3的云存储服务（AWS Signature v2和v4）。 2. 客户端下载 2.1 Mac安装 2.2 window下载 下载地址 3. 配置mc mc 将...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 简介</h2>
<p>MinIO Client (mc)为ls，cat，cp，mirror，diff，find等UNIX命令提供了一种替代方案。它支持文件系统和兼容Amazon S3的云存储服务（AWS Signature v2和v4）。</p>
<div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">ls</span><span style="color:#98C379;--shiki-dark:#98C379"> 列出文件和文件夹。</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">mb</span><span style="color:#98C379;--shiki-dark:#98C379"> 创建一个存储桶或一个文件夹。</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">cat</span><span style="color:#98C379;--shiki-dark:#98C379"> 显示文件和对象内容。</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">pipe</span><span style="color:#98C379;--shiki-dark:#98C379"> 将一个STDIN重定向到一个对象或者文件或者STDOUT。</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">share</span><span style="color:#98C379;--shiki-dark:#98C379"> 生成用于共享的URL。</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">cp</span><span style="color:#98C379;--shiki-dark:#98C379"> 拷贝文件和对象。</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">mirror</span><span style="color:#98C379;--shiki-dark:#98C379"> 给存储桶和文件夹做镜像。</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">find</span><span style="color:#98C379;--shiki-dark:#98C379"> 基于参数查找文件。</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">diff</span><span style="color:#98C379;--shiki-dark:#98C379"> 对两个文件夹或者存储桶比较差异。</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">rm</span><span style="color:#98C379;--shiki-dark:#98C379"> 删除文件和对象。</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">events</span><span style="color:#98C379;--shiki-dark:#98C379"> 管理对象通知。</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">watch</span><span style="color:#98C379;--shiki-dark:#98C379"> 监视文件和对象的事件。</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">policy</span><span style="color:#98C379;--shiki-dark:#98C379"> 管理访问策略。</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">config</span><span style="color:#98C379;--shiki-dark:#98C379"> 管理mc配置文件。</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">update</span><span style="color:#98C379;--shiki-dark:#98C379"> 检查软件更新。</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">version</span><span style="color:#98C379;--shiki-dark:#98C379"> 输出版本信息。</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2>2. 客户端下载</h2>
<h3>2.1 Mac安装</h3>
<div class="language-sh" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">brew</span><span style="color:#98C379;--shiki-dark:#98C379"> install</span><span style="color:#98C379;--shiki-dark:#98C379"> minio/stable/mc</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">mc</span><span style="color:#D19A66;--shiki-dark:#D19A66"> --help</span></span></code></pre>
</div><h3>2.2 window下载</h3>
<p><a href="http://dl.minio.org.cn/client/mc/release/windows-amd64/mc.exe%5B" target="_blank" rel="noopener noreferrer">下载地址</a></p>
<h2>3. 配置mc</h2>
<p>mc 将所有的配置信息都存储在~/.mc/config.json 文件中</p>
<div class="language-sh" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 查询mc host配置</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">mc</span><span style="color:#98C379;--shiki-dark:#98C379"> config</span><span style="color:#98C379;--shiki-dark:#98C379"> host</span><span style="color:#98C379;--shiki-dark:#98C379"> ls</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 添加minio服务</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">mc</span><span style="color:#98C379;--shiki-dark:#98C379"> config</span><span style="color:#98C379;--shiki-dark:#98C379"> host</span><span style="color:#98C379;--shiki-dark:#98C379"> add</span><span style="color:#98C379;--shiki-dark:#98C379"> minio-server</span><span style="color:#98C379;--shiki-dark:#98C379"> http://192.168.0.1:9000</span><span style="color:#98C379;--shiki-dark:#98C379"> admin</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 12345678</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 删除host</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">mc</span><span style="color:#98C379;--shiki-dark:#98C379"> config</span><span style="color:#98C379;--shiki-dark:#98C379"> host</span><span style="color:#98C379;--shiki-dark:#98C379"> remove</span><span style="color:#98C379;--shiki-dark:#98C379"> minio-server</span></span></code></pre>
</div><h2>4. mc命令使用</h2>
<p>| ls - 列出存储桶和 对象 | mb - 创建存储桶                     | cat - 合并对象          |<br>
|</p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301408517.png" type="image/png"/>
    </item>
    <item>
      <title>Minio基础 - 对象存储的元数据</title>
      <link>https://mrjackc.github.io/posts/Architect/minio/minio-metadata.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/minio/minio-metadata.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">Minio基础 - 对象存储的元数据</source>
      <description>Minio基础 - 对象存储的元数据 1. 文件存储VS块存储VS对象存储 文件、块和对象是三种以不同的方式来保存、整理和呈现数据的存储格式。这些格式各有各的功能和限制。 文件存储： 会以文件和文件夹的层次结构来整理和呈现数据； 块存储会： 将数据拆分到任意划分且大小相同的卷中； 对象存储： 会管理数据并将其链接至关联的元数据。 元数据包括 accou...</description>
      <category>Minio</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 文件存储VS块存储VS对象存储</h2>
<p><strong>文件、块和对象是三种以不同的方式来保存、整理和呈现数据的存储格式</strong>。这些格式各有各的功能和限制。</p>
<ul>
<li>
<p>文件存储：</p>
<p>会以<strong>文件和文件夹</strong>的层次结构来整理和呈现数据；</p>
</li>
<li>
<p>块存储会：</p>
<p><strong>将数据拆分到任意划分且大小相同</strong>的卷中；</p>
</li>
<li>
<p>对象存储：</p>
<p>会管理数据并将其链接至<strong>关联的元数据</strong>。</p>
<p>元数据包括 account（用户）， bucket， bucket index， Object 的 tag等信息</p>
</li>
</ul>
<h2>2. 对象存储的元数据</h2>
<p>在对象存储里，元数据包括 account（用户）， bucket， bucket index等信息。Minio没有独立的元数据服务器，这个和GlusterFs的架构设计很类似，在minio里都保存在底层的本地文件系统里。</p>
<p>在本地文件系统里，一个bucket对应本地文件系统中的一个目录。一个对象对应bucket目录下的一个目录（在EC的情况下对应多个part文件）。目录下保存者对象相关的数据和元数据。</p>
<p><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301410147.png" alt="image-20220721225001273.png" loading="lazy"><br>
如上图所示：在Erasure Set中有4个磁盘：Disk1，Disk2，Disk3，Disk4，四个磁盘组成一个Erasure Set。每个bucket对应一个相应桶名称的目录，每个对象对应bucket的一个目录：目录里保存着对应的数据和元数据文件。</p>
<p>创建bucket的元数据操作：对于Erasure Set(2+2)为例：创建一个bucket，对应底层文件系统的4次目录创建。创建一个文件，需要对应底层4次目录创建，8次文件创建操作。对于小文件，数据和元数据都保存在meta文件中，也需要4次文件创建操作。<strong>由此可知，minio对应大量小文件的性能非常差。</strong></p>
<h2>3. 实例</h2>
<p>对于小文件，<strong>数据和元数据都同时保存在对应的xl.meta的文件中</strong>。对应大文件的写入，会创建相应的目录，该目录下是对应的part的数据文件和元数据。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301410192.png" alt="image-20220721225520501" tabindex="0" loading="lazy"><figcaption>image-20220721225520501</figcaption></figure>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301410219.png" alt="image-20220721225531228" tabindex="0" loading="lazy"><figcaption>image-20220721225531228</figcaption></figure>
<p>由图3可知：当前集群中有2个bucket：test1和test2。 test1中有3个对象：分别是x，y，wget-log三个对象。x是30M的大文件，通过multipart上传到集群中，有2个part，分别为part.1和part.2文件。wget-log文件是一个小文件，大小为357.9KB.</p>
<p>通过图4：可以清晰的看到，每个bucket对应一个同名本地目录，每个对象也对应一个同名的目录，下面存数据和元数据。对应小文件，数据和元数据都保存在 xl.meta的元数据文件中。</p>
<h2>参考文章</h2>
<p><a href="https://zhuanlan.zhihu.com/p/374939519" target="_blank" rel="noopener noreferrer">MinIO对象存储介绍</a></p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301410147.png" type="image/png"/>
    </item>
    <item>
      <title>Minio基础 - 多版本功能使用详解</title>
      <link>https://mrjackc.github.io/posts/Architect/minio/minio-multi-version.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/minio/minio-multi-version.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">Minio基础 - 多版本功能使用详解</source>
      <description>Minio基础 - 多版本功能使用详解 1. 前言 1.1 使用场景 利用多版本控制，您可以在一个桶中保留多个版本的对象，使您更方便地检索和还原各个版本，在意外操作或应用程序故障时快速恢复数据。 默认情况下，新创建的桶不会开启多版本功能，向同一个桶上传同名的对象时，新上传的对象将覆盖原有的对象。 1.2 多版本控制 版本说明： 只有 MinIO 本身才...</description>
      <category>Minio</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 前言</h2>
<h3>1.1 使用场景</h3>
<p>利用多版本控制，您可以在一个桶中保留多个版本的对象，使您更方便地检索和还原各个版本，在意外操作或应用程序故障时快速恢复数据。</p>
<p>默认情况下，新创建的桶不会开启多版本功能，向同一个桶上传同名的对象时，新上传的对象将覆盖原有的对象。</p>
<h3>1.2 多版本控制</h3>
<p>版本说明：</p>
<p>| 版本     | 描述                                                         |<br>
|</p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301411422.png" type="image/png"/>
    </item>
    <item>
      <title>Minio进阶 - Minio分片上传文件putObject接口流程源码分析</title>
      <link>https://mrjackc.github.io/posts/Architect/minio/minio-multipart-upload.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/minio/minio-multipart-upload.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">Minio进阶 - Minio分片上传文件putObject接口流程源码分析</source>
      <description>Minio进阶 - Minio分片上传文件putObject接口流程源码分析 1. 前言 为了更好的理解和优化Minio文件上传，本篇文档对MInio中上传文件putObject接口源码分析以下。 基于Java 客户端 API Controller层上传文件接口： MinioTemplate接口： 2. 源码分析 2.1 进入Controller层接口...</description>
      <category>Minio</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 前言</h2>
<p>为了更好的理解和优化Minio文件上传，本篇文档对MInio中上传文件putObject接口源码分析以下。</p>
<p>基于Java 客户端 API</p>
<p>Controller层上传文件接口：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PostMapping</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"/upload"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ResponseBody</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Object</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> upload</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">MultipartFile</span><span style="color:#E06C75;--shiki-dark:#E06C75"> file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> bucketName) throws IOException {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> minioTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">putObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getInputStream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), bucketName, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getOriginalFilename</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
</div><p>MinioTemplate接口：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">putObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                PutObjectArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bucketName).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(uuidFileName).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">stream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        inputStream, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">inputStream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">available</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span></code></pre>
</div><h2>2. 源码分析</h2>
<h3>2.1 进入Controller层接口</h3>
<p>首先我在页面上上传了一个9M左右的文件：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301412679.png" alt="image-20220724200722531" tabindex="0" loading="lazy"><figcaption>image-20220724200722531</figcaption></figure>
<p>文件上传，经过Tomcat服务器进行处理，然后到达我们的Controller层上传文件接口，我们使用的是MultipartFile 对象来接受文件，可以看到当前MultipartFile 对象存放了文件相关信息，而此时实际的文件是由Tomcat存放在硬盘临时目录的。</p>
<p>MultipartFile实际的对象是StandardMultipartHttpServletRequest的实例，他包含了ApplicationPart对象，ApplicationPart包含了图片中的文件信息。<br>
<img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301412723.png" alt="image-20220724200830484" loading="lazy"></p>
<p>接收到对象后，调用的就是MinioTemplate，这里传入了各种参数：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">minioTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">putObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getInputStream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), bucketName, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getOriginalFilename</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span></code></pre>
</div><p>最重要的是传入了一个InputStream，调用的是MultipartFile 对象的getInputStream()方法。</p>
<p>getInputStream获取输入流，是调用ApplicationPart中的DiskFileItem对象的getInputStream()方法。这个方法会将临时文件，直接转为FileInputStream并返回。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD"> public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> InputStream</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getInputStream</span><span style="color:#E06C75;--shiki-dark:#E06C75">() throws IOException {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isInMemory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        	// 直接将临时文件转为输入流</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            return</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> FileInputStream</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">dfos</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getFile</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">cachedContent</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> ==</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">cachedContent</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">dfos</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getData</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            return</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> ByteArrayInputStream</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">cachedContent</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
</div><h3>2.2 构建参数对象PutObjectArgs（参数校验，分片）</h3>
<p>InputStream获取到了以后，接着就是调用MinioTemplate中的putObject方法了。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">     minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">putObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">             PutObjectArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bucketName).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(uuidFileName).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">stream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                     inputStream, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">inputStream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">available</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                     .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span></code></pre>
</div><p>putObject方法实际调用的就是 MinioClient的putObject，调用之前会创建PutObjectArgs参数对象，使用的是建造者模式。</p>
<p>PutObjectArgs首先会对存储桶名称进行校验，所以创建存储桶名称时，要格外注意。</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    protected</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> validateBucketName</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> name) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    	// 非空校验</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">validateNotNull</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(name, </span><span style="color:#98C379;--shiki-dark:#98C379">"bucket name"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 1. 校验长度，3-63之间</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">length</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> &gt;=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 3</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">length</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> &lt;=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 63</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> msg</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 2. 不能包含“..”</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">contains</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">".."</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                msg </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379"> "bucket name cannot contain successive periods. For more information refer http://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                throw</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> IllegalArgumentException</span><span style="color:#E06C75;--shiki-dark:#E06C75">(name </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#98C379;--shiki-dark:#98C379"> " : "</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E06C75;--shiki-dark:#E06C75"> msg)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // 3. 正则校验</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            } </span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#C678DD;--shiki-dark:#C678DD"> if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">matches</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"^[a-z0-9][a-z0-9</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\\</span><span style="color:#98C379;--shiki-dark:#98C379">.</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\\</span><span style="color:#98C379;--shiki-dark:#98C379">-]+[a-z0-9]$"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                msg </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379"> "bucket name does not follow Amazon S3 standards. For more information refer http://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                throw</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> IllegalArgumentException</span><span style="color:#E06C75;--shiki-dark:#E06C75">(name </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#98C379;--shiki-dark:#98C379"> " : "</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E06C75;--shiki-dark:#E06C75"> msg)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            throw</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> IllegalArgumentException</span><span style="color:#E06C75;--shiki-dark:#E06C75">(name </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#98C379;--shiki-dark:#98C379"> " : bucket name must be at least 3 and no more than 63 characters long"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后对对象名称进行校验：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    protected</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> validateObjectName</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> name) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    	// 1. 非空和Null校验</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">validateNotEmptyString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(name, </span><span style="color:#98C379;--shiki-dark:#98C379">"object name"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        String</span><span style="color:#E06C75;--shiki-dark:#E06C75">[] var2 </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">split</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"/"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 按照反斜杠分割为字符串数组</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> var3 </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> var2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">length</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">		//  2. 循环字符串数组，校验每个斜杠分割的字段不能是“.”或者“..”</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        for</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> var4 </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> var4 </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> var3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ++</span><span style="color:#E06C75;--shiki-dark:#E06C75">var4) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> token </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75"> var2[var4]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">token</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">equals</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"."</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> ||</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> token</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">equals</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">".."</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                throw</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> IllegalArgumentException</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"object name with '.' or '..' path segment is not supported"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
</div><p>最后对InputStream进行构建。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> PutObjectArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Builder</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> stream</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">InputStream</span><span style="color:#E06C75;--shiki-dark:#E06C75"> stream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#C678DD;--shiki-dark:#C678DD"> long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> objectSize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#C678DD;--shiki-dark:#C678DD"> long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> partSize) {			</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 1. 非空</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">validateNotNull</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(stream, </span><span style="color:#98C379;--shiki-dark:#98C379">"stream"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 2. 获取分片数，5M分割</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        long</span><span style="color:#E06C75;--shiki-dark:#E06C75">[] partinfo </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getPartInfo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(objectSize, partSize);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> pSize </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75"> partinfo[</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#E06C75;--shiki-dark:#E06C75">]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 分片大小 5M=5242880字节</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> pCount </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#E06C75;--shiki-dark:#E06C75">)partinfo[</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#E06C75;--shiki-dark:#E06C75">]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 分片数，这里上传的9m文件，所以有两片</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 3. 将FileInputStream=》BufferedInputStream</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        BufferedInputStream</span><span style="color:#E06C75;--shiki-dark:#E06C75"> bis </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75"> stream </span><span style="color:#C678DD;--shiki-dark:#C678DD">instanceof</span><span style="color:#E06C75;--shiki-dark:#E06C75"> BufferedInputStream </span><span style="color:#C678DD;--shiki-dark:#C678DD">?</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (BufferedInputStream)stream </span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> BufferedInputStream</span><span style="color:#E06C75;--shiki-dark:#E06C75">(stream)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 4. 将这些参数添加到PutObjectArgs对象中</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setStream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bis, objectSize, pSize, pCount);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
</div><p>在构建InputStream时，会进行分片操作，我们可以了解到上传文件大小的一些限制：</p>
<ul>
<li>分片大小不能小于5MB，大于5GB</li>
<li>对象大小不能超过5TiB</li>
<li>partSize传入-1，默认按照5MB进行分割</li>
<li>分片数量不能超过10000</li>
</ul>
<p>分片规则如下：</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">	// 参数为 文件大小objectSize、分片大小partSize，分片数我们传入的是-1，表示使用默认配置</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    protected</span><span style="color:#C678DD;--shiki-dark:#C678DD"> long</span><span style="color:#E06C75;--shiki-dark:#E06C75">[] </span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getPartInfo</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> objectSize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#C678DD;--shiki-dark:#C678DD"> long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> partSize) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    	// 1. 校验大小，如果设置的分片大小 小于5M或者大于5GB，报错不支持</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    	//  对象大小超过5TiB，报错不支持</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">validateSizes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(objectSize, partSize);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (objectSize </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0L</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            return</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#C678DD;--shiki-dark:#C678DD"> long</span><span style="color:#E06C75;--shiki-dark:#E06C75">[]{partSize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> -</span><span style="color:#D19A66;--shiki-dark:#D19A66">1L</span><span style="color:#E06C75;--shiki-dark:#E06C75">}</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        	// 2. 没有设置分片数据大小，怎按照默认的5M进行分割</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (partSize </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0L</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                double</span><span style="color:#E06C75;--shiki-dark:#E06C75"> dPartSize </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Math</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">ceil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">((</span><span style="color:#C678DD;--shiki-dark:#C678DD">double</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)objectSize </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">/</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 10000.0D</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                dPartSize </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Math</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">ceil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(dPartSize </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">/</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 5242880.0D</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> *</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 5242880.0D</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                partSize </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD">long</span><span style="color:#E06C75;--shiki-dark:#E06C75">)dPartSize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (partSize </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> objectSize) {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                partSize </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75"> objectSize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> partCount </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75"> partSize </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0L</span><span style="color:#C678DD;--shiki-dark:#C678DD"> ?</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD">long</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Math</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">ceil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">((</span><span style="color:#C678DD;--shiki-dark:#C678DD">double</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)objectSize </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">/</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD">double</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)partSize)</span><span style="color:#C678DD;--shiki-dark:#C678DD"> :</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1L</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 3. 分片数量不能超过10000</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (partCount </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 10000L</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                throw</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> IllegalArgumentException</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"object size "</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E06C75;--shiki-dark:#E06C75"> objectSize </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#98C379;--shiki-dark:#98C379"> " and part size "</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E06C75;--shiki-dark:#E06C75"> partSize </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#98C379;--shiki-dark:#98C379"> " make more than "</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 10000</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#98C379;--shiki-dark:#98C379"> "parts for upload"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            } </span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            	// 4. 返回一个数组，第一个值为分片数据大小，第二个为分片数量</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                return</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#C678DD;--shiki-dark:#C678DD"> long</span><span style="color:#E06C75;--shiki-dark:#E06C75">[]{partSize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> partCount}</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最终构建的PutObjectArgs对象如下：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301412749.png" alt="image-20220724201355357" tabindex="0" loading="lazy"><figcaption>image-20220724201355357</figcaption></figure>
<p>该对象包含了文件流、对象名、分片信息等重要数据。</p>
<h3>2.3 进入MinioClient（上传分片、合并）</h3>
<p>接着进入到MinioClient的putObject方法：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD"> public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ObjectWriteResponse</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> putObject</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PutObjectArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args) throws ErrorResponseException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> InsufficientDataException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> InternalException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> InvalidKeyException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> InvalidResponseException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> IOException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> NoSuchAlgorithmException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> ServerException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> XmlParserException {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 	// 1. 检查参数是否为Null</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">     this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">checkArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(args);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     // 2. 校验是否开启了SSE加密，如果开启了SSE，而不是Https请求则报错</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">     args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">validateSse</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">baseUrl</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     // 3. 执行上传文件</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">     return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">putObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(args, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">stream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">objectSize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">partSize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">partCount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">contentType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75"> }</span></span></code></pre>
</div><p>接着调用重载的putObject方法，会进行分块创建=》分块上传=》合并文件流程操作。</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">protected</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ObjectWriteResponse</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> putObject</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PutObjectBaseArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Object</span><span style="color:#E06C75;--shiki-dark:#E06C75"> data</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#C678DD;--shiki-dark:#C678DD"> long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> objectSize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#C678DD;--shiki-dark:#C678DD"> long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> partSize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#C678DD;--shiki-dark:#C678DD"> int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> partCount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> contentType) throws ErrorResponseException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> InsufficientDataException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> InternalException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> InvalidKeyException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> InvalidResponseException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> IOException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> NoSuchAlgorithmException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> ServerException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> XmlParserException {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">	// 1.设置消息头</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Multimap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> headers </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">newMultimap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">extraHeaders</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    headers</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">putAll</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">genHeaders</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 2. 设置 Content-Type</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">headers</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">containsKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Content-Type"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        headers</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Content-Type"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, contentType);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> uploadId </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Part</span><span style="color:#E06C75;--shiki-dark:#E06C75">[] parts </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 3. 创建块读取对象</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    PartReader</span><span style="color:#E06C75;--shiki-dark:#E06C75"> partReader </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">newPartReader</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(data, objectSize, partSize, partCount);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (partReader </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        throw</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> IllegalArgumentException</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"data must be RandomAccessFile or InputStream"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    } </span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        try</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            while</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">true</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            	// 4. 分块操作，并返回块对象</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                PartSource</span><span style="color:#E06C75;--shiki-dark:#E06C75"> partSource </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> partReader</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getPart</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">baseUrl</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isHttps</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (partSource </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                	// 没有分片时，表示分片全部上传成功，执行合并文件操作。</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                    return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">completeMultipartUpload</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">region</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), uploadId, parts, (Multimap)</span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, (Multimap)</span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">				// 5. 如果对象只有一块，也就是5MB之内，执行上传</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">partReader</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">partCount</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> ==</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                    return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">putObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">region</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), partSource, headers, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">extraQueryParams</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">				</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (uploadId </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                	// 6. 执行分块上传请求，返回uploadId</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    CreateMultipartUploadResponse</span><span style="color:#E06C75;--shiki-dark:#E06C75"> response </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">createMultipartUpload</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">region</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), headers, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">extraQueryParams</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                    uploadId </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> response</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">result</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">uploadId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                    parts </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Part</span><span style="color:#E06C75;--shiki-dark:#E06C75">[</span><span style="color:#D19A66;--shiki-dark:#D19A66">10000</span><span style="color:#E06C75;--shiki-dark:#E06C75">]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> ssecHeaders </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">sse</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> !=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">sse</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#C678DD;--shiki-dark:#C678DD"> instanceof</span><span style="color:#E06C75;--shiki-dark:#E06C75"> ServerSideEncryptionCustomerKey) {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                    ssecHeaders </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">sse</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">headers</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">				// 7. 根据创建的请求，正式执行上传分片的操作</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> partNumber </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> partSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">partNumber</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                UploadPartResponse</span><span style="color:#E06C75;--shiki-dark:#E06C75"> response </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">uploadPart</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">region</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), partSource, partNumber, uploadId, ssecHeaders </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#C678DD;--shiki-dark:#C678DD"> ?</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Multimaps</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">forMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(ssecHeaders) </span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, (Multimap)</span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> etag </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> response</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">etag</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                parts[partNumber </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span><span style="color:#E06C75;--shiki-dark:#E06C75">] </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Part</span><span style="color:#E06C75;--shiki-dark:#E06C75">(partNumber</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> etag)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD">catch</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">RuntimeException</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> var18</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (uploadId </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">abortMultipartUpload</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">region</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), uploadId, (Multimap)</span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, (Multimap)</span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            throw</span><span style="color:#E06C75;--shiki-dark:#E06C75"> var18</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD">catch</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Exception</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> var19</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (uploadId </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">abortMultipartUpload</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">region</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), uploadId, (Multimap)</span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, (Multimap)</span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            throw</span><span style="color:#E06C75;--shiki-dark:#E06C75"> var19</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>2.4 创建分片</h3>
<p>putObject方法首先会创建PartReader 块读取对象：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD"> private</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> PartReader</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> newPartReader</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#E06C75;--shiki-dark:#E06C75"> data</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#C678DD;--shiki-dark:#C678DD"> long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> objectSize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#C678DD;--shiki-dark:#C678DD"> long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> partSize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#C678DD;--shiki-dark:#C678DD"> int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> partCount) {		</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 	// 1. 如果是RandomAccessFile（RandomAccessFile允许自由定义文件记录指针，</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 	// RandomAccessFile可以不从开始的地方开始输出，因此RandomAccessFile可以向已存在的文件后追加内容。）</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 	// 创建RandomAccessFile类型的PartReader </span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">     if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (data </span><span style="color:#C678DD;--shiki-dark:#C678DD">instanceof</span><span style="color:#E06C75;--shiki-dark:#E06C75"> RandomAccessFile) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">         return</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> PartReader</span><span style="color:#E06C75;--shiki-dark:#E06C75">((RandomAccessFile)data</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> objectSize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> partSize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> partCount)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">     } </span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     	// 2. 创建不同输入流的PartReader 对象</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">         return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> data </span><span style="color:#C678DD;--shiki-dark:#C678DD">instanceof</span><span style="color:#E06C75;--shiki-dark:#E06C75"> InputStream </span><span style="color:#C678DD;--shiki-dark:#C678DD">?</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> PartReader</span><span style="color:#E06C75;--shiki-dark:#E06C75">((InputStream)data</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> objectSize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> partSize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> partCount) </span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">     }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75"> }</span></span></code></pre>
</div><p>PartReader 包含了文件数据流及分片信息。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301412771.png" alt="image-20220724201815010" tabindex="0" loading="lazy"><figcaption>image-20220724201815010</figcaption></figure>
<p>接着进入一个死循环，PartReader 会获取PartSource块对象：</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> PartSource</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getPart</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">boolean</span><span style="color:#E06C75;--shiki-dark:#E06C75"> computeSha256) throws NoSuchAlgorithmException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> IOException {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">partNumber</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> ==</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">partCount</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            return</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        	// 1. 获取分片，从第一个开始获取</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            ++</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">partNumber</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            MessageDigest</span><span style="color:#E06C75;--shiki-dark:#E06C75"> md5 </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> MessageDigest</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getInstance</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"MD5"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // MD5 加密对象</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            MessageDigest</span><span style="color:#E06C75;--shiki-dark:#E06C75"> sha256 </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75"> computeSha256 </span><span style="color:#C678DD;--shiki-dark:#C678DD">?</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> MessageDigest</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getInstance</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"SHA-256"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#C678DD;--shiki-dark:#C678DD"> :</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // SHA-256加密对象</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> partSize </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">partSize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 分片大小 5MB</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">partNumber</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> ==</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">partCount</span><span style="color:#E06C75;--shiki-dark:#E06C75">) { </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 判断当前分片是不是最后一个分片</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                partSize </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">objectSize</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> -</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">totalDataRead</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">			// 2. 使用算法读取分块数据</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> bytesRead </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">read</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(partSize, md5, sha256);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">totalDataRead</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +=</span><span style="color:#E06C75;--shiki-dark:#E06C75"> bytesRead</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">objectSize</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> &lt;</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0L</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">eof</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">partCount</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">partNumber</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">			// 3. 加密</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> md5Hash </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Base64</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getEncoder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">encodeToString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">md5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">digest</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> sha256Hash </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (computeSha256) {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                sha256Hash </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> BaseEncoding</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">base16</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">encode</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">sha256</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">digest</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">toLowerCase</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Locale</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">US</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">			// 4. 返回PartSource对象</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">file</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> !=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#C678DD;--shiki-dark:#C678DD"> ?</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> PartSource</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">partNumber</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> bytesRead</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> md5Hash</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> sha256Hash) </span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> PartSource</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">partNumber</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">buffers</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> bytesRead</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> md5Hash</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> sha256Hash)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>每个PartSource对象，就对应一个块对象，其中包含了块数据和加密返回的签名。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301412797.png" alt="image-20220724201918590" tabindex="0" loading="lazy"><figcaption>image-20220724201918590</figcaption></figure>
<h3>2.5. 创建分片请求（获取uploadId）</h3>
<p>createMultipartUpload方法会创建分块请求，根据对象名和存储桶名去Minio获取上传当前对象的uploadId。</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    protected</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> CreateMultipartUploadResponse</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> createMultipartUpload</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> bucketName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> region</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> objectName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Multimap</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> String</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> headers</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Multimap</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> String</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> extraQueryParams) throws NoSuchAlgorithmException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> InsufficientDataException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> IOException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> InvalidKeyException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> ServerException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> XmlParserException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> ErrorResponseException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> InternalException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> InvalidResponseException {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    	// 构建请求参数</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Multimap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> queryParams </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">newMultimap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(extraQueryParams);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        queryParams</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"uploads"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#98C379;--shiki-dark:#98C379">""</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Multimap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> headersCopy </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">newMultimap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(headers);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">headersCopy</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">containsKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Content-Type"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            headersCopy</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Content-Type"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#98C379;--shiki-dark:#98C379">"application/octet-stream"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">		// 执行HTTP请求</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Response</span><span style="color:#E06C75;--shiki-dark:#E06C75"> response </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">execute</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Method</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">POST</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, bucketName, objectName, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getRegion</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bucketName, region), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">httpHeaders</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(headersCopy), queryParams, (Object)</span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Throwable</span><span style="color:#E06C75;--shiki-dark:#E06C75"> var9 </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        CreateMultipartUploadResponse</span><span style="color:#E06C75;--shiki-dark:#E06C75"> var11</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        try</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        	// 解析返回结果</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            InitiateMultipartUploadResult</span><span style="color:#E06C75;--shiki-dark:#E06C75"> result </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (InitiateMultipartUploadResult)</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Xml</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">unmarshal</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">InitiateMultipartUploadResult</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">response</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">body</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">charStream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            var11 </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> CreateMultipartUploadResponse</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">response</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">headers</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(),</span><span style="color:#E06C75;--shiki-dark:#E06C75"> bucketName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> region</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> objectName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> result)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>uploadId在循环中使用的都是同一个，说明分片上传的时候都会使用同一个uploadId，最后合并同一个uploadId的文件。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301412824.png" alt="image-20220724202032288" tabindex="0" loading="lazy"><figcaption>image-20220724202032288</figcaption></figure>
<h3>2.6 上传分片</h3>
<p>获取到了uploadId以后，就会执行上传操作，调用uploadPart方法，uploadPart最终也是调用execute，可以看到该方法，是调用的OkHttpClient 去执行的。</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    protected</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Response</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> execute</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Method</span><span style="color:#E06C75;--shiki-dark:#E06C75"> method</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> bucketName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> objectName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> region</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Headers</span><span style="color:#E06C75;--shiki-dark:#E06C75"> headers</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Multimap</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> String</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> queryParamMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Object</span><span style="color:#E06C75;--shiki-dark:#E06C75"> body</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#C678DD;--shiki-dark:#C678DD"> int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> length) throws XmlParserException {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    	//......</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 构建URL ：http://127.0.0.1:9000/pearl-buckent/files/2021-10-26/d9e9d6fc-73fc-4323-b317-b8b26b6b6fe0_apache-maven-3.6.2-bin.zip?uploadId=70174335-85ec-47c6-acaf-afa12c8add48&amp;partNumber=2</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        HttpUrl</span><span style="color:#E06C75;--shiki-dark:#E06C75"> url </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">buildUrl</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(method, bucketName, objectName, region, queryParamMap);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 省略构建其他对象</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 调用 httpClient执行上传文件</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Response</span><span style="color:#E06C75;--shiki-dark:#E06C75"> response </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> httpClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">newCall</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(request).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">execute</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 处理响应，异常处理等。</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        ResponseBody</span><span style="color:#E06C75;--shiki-dark:#E06C75"> responseBody</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">response</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isSuccessful</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">           </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 					// 省略大量代码.....</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>2.7 合并文件</h3>
<p>分片的数据都上传后，进入到completeMultipartUpload方法，在这个方法执行之前，在Minio控制台是看不到上传对象的。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301412849.png" alt="image-20220724202212381" tabindex="0" loading="lazy"><figcaption>image-20220724202212381</figcaption></figure>
<p>这个方法传入了文件对象名，uploadID等，</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301412870.png" alt="image-20220724202251788" tabindex="0" loading="lazy"><figcaption>image-20220724202251788</figcaption></figure>
<p>该方法最终也是执行的execute，使用httpclient去调用的Minio服务器合并分片，最后完成了分片上传操作。之后Tomcat回调，完成清理临时文件等操作，最后返回信息给前端，也对应了整个Servlet请求响应的整个流程。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301412889.png" alt="image-20220724202351886" tabindex="0" loading="lazy"><figcaption>image-20220724202351886</figcaption></figure>
<h2>3. 简单流程图</h2>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301412913.png" alt="image-20220724202421408" tabindex="0" loading="lazy"><figcaption>image-20220724202421408</figcaption></figure>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301412679.png" type="image/png"/>
    </item>
    <item>
      <title>Minio基础 - JAVA集成Minio之对象操作API使用详解</title>
      <link>https://mrjackc.github.io/posts/Architect/minio/minio-oos-api.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/minio/minio-oos-api.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">Minio基础 - JAVA集成Minio之对象操作API使用详解</source>
      <description>Minio基础 - JAVA集成Minio之对象操作API使用详解 1. 上传对象 1.1 PutObject 调用PutObject接口上传文件（Object）。 注意事项： 添加的Object大小不能超过5 GB。 默认情况下，如果已存在同名Object且对该Object有访问权限，则新添加的Object将覆盖原有的Object，并返回200 OK...</description>
      <category>Minio</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 上传对象</h2>
<h3>1.1 PutObject</h3>
<p>调用PutObject接口上传文件（Object）。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ObjectWriteResponse</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> putObject</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PutObjectArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><p>注意事项：</p>
<ul>
<li>
<p>添加的Object大小不能超过5 GB。</p>
</li>
<li>
<p>默认情况下，如果已存在同名Object且对该Object有访问权限，则新添加的Object将覆盖原有的Object，并返回200 OK。</p>
</li>
<li>
<p>OSS没有文件夹的概念，所有资源都是以文件来存储，但您可以通过创建一个以正斜线（/）结尾，大小为0的Object来创建模拟文件夹。</p>
</li>
<li>
<p>单个对象的最大大小限制在5TB。<strong>putObject在对象大于5MiB时，自动使用multiple parts方式上传</strong>。这样，当上传失败时，客户端只需要上传未成功的部分即可（类似断点上传）。上传的对象使用MD5SUM签名进行完整性验证。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301413274.png" alt="image-20220724170305247" tabindex="0" loading="lazy"><figcaption>image-20220724170305247</figcaption></figure>
</li>
</ul>
<h4>1.1.1 示例1，InputStream上传：</h4>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 1. 创建InputStream上传</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        File</span><span style="color:#E06C75;--shiki-dark:#E06C75"> file </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> File</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"D:</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\\</span><span style="color:#98C379;--shiki-dark:#98C379">deploy</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\\</span><span style="color:#98C379;--shiki-dark:#98C379">nacos-server-2.0.3.tar.gz"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        InputStream</span><span style="color:#E06C75;--shiki-dark:#E06C75"> bais </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> FileInputStream</span><span style="color:#E06C75;--shiki-dark:#E06C75">(file)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        long</span><span style="color:#E06C75;--shiki-dark:#E06C75"> start </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">currentTimeMillis</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">putObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                PutObjectArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">stream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        bais, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">bais</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">available</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        bais</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">close</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-objectname is uploaded successfully 耗时："</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">currentTimeMillis</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> start));</span></span></code></pre>
</div><h4>1.1.2 示例2，InputStream使用SSE-C加密上传（在使用KMS时再介绍）：</h4>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">putObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                PutObjectArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">stream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        bais, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">bais</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">available</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">sse</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(ssec)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        bais</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">close</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span></code></pre>
</div><h4>1.1.3 示例3，InputStream上传文件，添加自定义元数据及消息头：</h4>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        File</span><span style="color:#E06C75;--shiki-dark:#E06C75"> file </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> File</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"D:</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\\</span><span style="color:#98C379;--shiki-dark:#98C379">deploy</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\\</span><span style="color:#98C379;--shiki-dark:#98C379">nacos-server-2.0.3.tar.gz"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        InputStream</span><span style="color:#E06C75;--shiki-dark:#E06C75"> bais </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> FileInputStream</span><span style="color:#E06C75;--shiki-dark:#E06C75">(file)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> headers </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> HashMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        headers</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Content-Type"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#98C379;--shiki-dark:#98C379">"application/octet-stream"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        headers</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"X-Amz-Storage-Class"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#98C379;--shiki-dark:#98C379">"REDUCED_REDUNDANCY"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> userMetadata </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> HashMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">putObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                PutObjectArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">stream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        bais, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">bais</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">available</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">headers</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(headers)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">userMetadata</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(userMetadata)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        bais</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">close</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-objectname is uploaded successfully"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span></code></pre>
</div><h3>1.2 uploadObject</h3>
<p>将文件中的内容作为存储桶中的对象上传。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> uploadObject</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">UploadObjectArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><p>示例：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 3. 将本地文件上传到minio </span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">uploadObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    UploadObjectArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"start.sh"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">filename</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"D:</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\\</span><span style="color:#98C379;--shiki-dark:#98C379">deploy</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\\</span><span style="color:#98C379;--shiki-dark:#98C379">service</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\\</span><span style="color:#98C379;--shiki-dark:#98C379">general-task</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\\</span><span style="color:#98C379;--shiki-dark:#98C379">start.sh"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-filename is uploaded to my-objectname successfully"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span></code></pre>
</div><h2>2. 获取对象</h2>
<h3>2.1 getObject</h3>
<p>GetObject接口用于获取某个文件（Object）。此操作需要对此Object具有读权限。</p>
<p>获取对象的数据。InputStream使用后返回必须关闭以释放网络资源。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> InputStream</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getObject</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">GetObjectArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 2. 获取对象的InputStream,并保存为文件</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            InputStream</span><span style="color:#E06C75;--shiki-dark:#E06C75"> stream </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                            GetObjectArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-objectname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 读流</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            File</span><span style="color:#E06C75;--shiki-dark:#E06C75"> targetFile </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> File</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"D:</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\\</span><span style="color:#98C379;--shiki-dark:#98C379">deploy</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\\</span><span style="color:#98C379;--shiki-dark:#98C379">targetFile.tmp"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            FileUtils</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">copyInputStreamToFile</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(stream, targetFile);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            stream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">close</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span></code></pre>
</div><h3>2.2 downloadObject</h3>
<p>将对象的数据下载到文件。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> downloadObject</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DownloadObjectArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><p>示例：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 4. 下载对象到本地文件</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">downloadObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    DownloadObjectArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-objectname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">filename</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"D:</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\\</span><span style="color:#98C379;--shiki-dark:#98C379">deploy</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\\</span><span style="color:#98C379;--shiki-dark:#98C379">service</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\\</span><span style="color:#98C379;--shiki-dark:#98C379">general-task</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\\</span><span style="color:#98C379;--shiki-dark:#98C379">aaa.tmp"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-objectname is successfully downloaded to my-filename"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span></code></pre>
</div><h3>2.3 getPresignedObjectUrl</h3>
<p>获取一个指定了 HTTP 方法、到期时间和自定义请求参数的对象URL地址，也就是返回带签名的URL，这个地址可以提供给没有登录的第三方共享访问或者上传对象。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getPresignedObjectUrl</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">GetPresignedObjectUrlArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><p>示例：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 指定一个GET请求，返回获取文件对象的URL，此URL过期时间为一天</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> url </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getPresignedObjectUrl</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                            GetPresignedObjectUrlArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                                    .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">method</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Method</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">GET</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                                    .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                                    .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"start.sh"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                                    .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">expiry</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">60</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> *</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 60</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> *</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 24</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                                    .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(url);</span></span></code></pre>
</div><h3>2.4 selectObjectContent</h3>
<p>通过 SQL 表达式选择对象的内容。</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>public SelectResponseStream selectObjectContent(SelectObjectContentArgs args)</span></span></code></pre>
</div><p>示例：</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 1. 上传一个文件</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        byte</span><span style="color:#E06C75;--shiki-dark:#E06C75">[] data </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                (</span><span style="color:#98C379;--shiki-dark:#98C379">"Year,Make,Model,Description,Price</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n</span><span style="color:#98C379;--shiki-dark:#98C379">"</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">                        +</span><span style="color:#98C379;--shiki-dark:#98C379"> "1997,Ford,E350,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">ac, abs, moon</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">,3000.00</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n</span><span style="color:#98C379;--shiki-dark:#98C379">"</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">                        +</span><span style="color:#98C379;--shiki-dark:#98C379"> "1999,Chevy,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">Venture </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"\"</span><span style="color:#98C379;--shiki-dark:#98C379">Extended Edition</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"\"\"</span><span style="color:#98C379;--shiki-dark:#98C379">,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"\"</span><span style="color:#98C379;--shiki-dark:#98C379">,4900.00</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n</span><span style="color:#98C379;--shiki-dark:#98C379">"</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">                        +</span><span style="color:#98C379;--shiki-dark:#98C379"> "1999,Chevy,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">Venture </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"\"</span><span style="color:#98C379;--shiki-dark:#98C379">Extended Edition, Very Large</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"\"\"</span><span style="color:#98C379;--shiki-dark:#98C379">,,5000.00</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n</span><span style="color:#98C379;--shiki-dark:#98C379">"</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">                        +</span><span style="color:#98C379;--shiki-dark:#98C379"> "1996,Jeep,Grand Cherokee,</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">MUST SELL!</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n</span><span style="color:#98C379;--shiki-dark:#98C379">"</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">                        +</span><span style="color:#98C379;--shiki-dark:#98C379"> "air, moon roof, loaded</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\"</span><span style="color:#98C379;--shiki-dark:#98C379">,4799.00</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\n</span><span style="color:#98C379;--shiki-dark:#98C379">"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getBytes</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">StandardCharsets</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">UTF_8</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        ByteArrayInputStream</span><span style="color:#E06C75;--shiki-dark:#E06C75"> bais </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> ByteArrayInputStream</span><span style="color:#E06C75;--shiki-dark:#E06C75">(data)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">putObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                PutObjectArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-objectname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">stream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        bais, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">data</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">length</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 调用SQL表达式获取对象</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> sqlExpression </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379"> "select * from S3Object"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        InputSerialization</span><span style="color:#E06C75;--shiki-dark:#E06C75"> is </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> InputSerialization</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66"> false</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> FileHeaderInfo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">USE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        OutputSerialization</span><span style="color:#E06C75;--shiki-dark:#E06C75"> os </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> OutputSerialization</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> QuoteFields</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ASNEEDED</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        SelectResponseStream</span><span style="color:#E06C75;--shiki-dark:#E06C75"> stream </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">selectObjectContent</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        SelectObjectContentArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-objectName"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">sqlExpression</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(sqlExpression)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">inputSerialization</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(is)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">outputSerialization</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(os)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">requestProgress</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        byte</span><span style="color:#E06C75;--shiki-dark:#E06C75">[] buf </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#C678DD;--shiki-dark:#C678DD"> byte</span><span style="color:#E06C75;--shiki-dark:#E06C75">[</span><span style="color:#D19A66;--shiki-dark:#D19A66">512</span><span style="color:#E06C75;--shiki-dark:#E06C75">]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> bytesRead </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> stream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">read</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(buf, </span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">buf</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">length</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(buf, </span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, bytesRead, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">StandardCharsets</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">UTF_8</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Stats</span><span style="color:#E06C75;--shiki-dark:#E06C75"> stats </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> stream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">stats</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"bytes scanned: "</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> stats</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bytesScanned</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"bytes processed: "</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> stats</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bytesProcessed</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"bytes returned: "</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> stats</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bytesReturned</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        stream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">close</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>2.5 getPresignedPostFormData</h3>
<p>使用此方法，获取对象的上传策略（包含签名、文件信息、路径等），然后使用这些信息采用POST 方法的表单数据上传数据。也就是可以生成一个临时上传的信息对象，第三方可以使用这些信息，就可以上传文件。</p>
<p>一般可用于，前端请求一个上传策略，后端返回给前端，前端使用Post请求+访问策略去上传文件，这可以用于JS+SDK的混合方式集成Minio。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301413311.png" alt="image-20220723204551259" tabindex="0" loading="lazy"><figcaption>image-20220723204551259</figcaption></figure>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Map</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75">String</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getPresignedPostFormData</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PostPolicy</span><span style="color:#E06C75;--shiki-dark:#E06C75"> policy)</span></span></code></pre>
</div><p>示例，首先我们创建一个Post 策略：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 为存储桶创建一个上传策略，过期时间为7天</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        PostPolicy</span><span style="color:#E06C75;--shiki-dark:#E06C75"> policy </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> PostPolicy</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ZonedDateTime</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">now</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">plusDays</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">7</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 设置一个参数key，值为上传对象的名称</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        policy</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">addEqualsCondition</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"key"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#98C379;--shiki-dark:#98C379">"my-objectname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 添加Content-Type以"image/"开头，表示只能上传照片</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        policy</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">addStartsWithCondition</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Content-Type"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#98C379;--shiki-dark:#98C379">"image/"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 设置上传文件的大小 64kiB to 10MiB.</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        policy</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">addContentLengthRangeCondition</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">64</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> *</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1024</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;--shiki-dark:#D19A66">10</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> *</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1024</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> *</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1024</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> formData </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getPresignedPostFormData</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(policy);</span></span></code></pre>
</div><p>可以看到返回了认证令牌、签名等信息。<br>
<img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301413334.png" alt="image-20220723204729442" loading="lazy"></p>
<p>然后，第三方就可以使用这些策略，直接使用POST上传对象。</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 创建MultipartBody对象</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        MultipartBody</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Builder</span><span style="color:#E06C75;--shiki-dark:#E06C75"> multipartBuilder </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E06C75;--shiki-dark:#E06C75"> MultipartBody</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">Builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        multipartBuilder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">MultipartBody</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">FORM</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Entry</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> entry </span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> formData</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">entrySet</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            multipartBuilder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">addFormDataPart</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">entry</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">entry</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getValue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        multipartBuilder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">addFormDataPart</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"key"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#98C379;--shiki-dark:#98C379">"my-objectname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        multipartBuilder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">addFormDataPart</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Content-Type"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#98C379;--shiki-dark:#98C379">"image/png"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        multipartBuilder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">addFormDataPart</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">                "file"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#98C379;--shiki-dark:#98C379">"my-objectname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">RequestBody</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">create</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> File</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"D:</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\\</span><span style="color:#98C379;--shiki-dark:#98C379">deploy</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\\</span><span style="color:#98C379;--shiki-dark:#98C379">service</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\\</span><span style="color:#98C379;--shiki-dark:#98C379">general-task</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\\</span><span style="color:#98C379;--shiki-dark:#98C379">logs</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\\</span><span style="color:#98C379;--shiki-dark:#98C379">aa.png"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">), </span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 模拟第三方，使用OkHttp调用Post上传对象</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Request</span><span style="color:#E06C75;--shiki-dark:#E06C75"> request </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                new</span><span style="color:#E06C75;--shiki-dark:#E06C75"> Request</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">Builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">url</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"http://localhost:9000/my-bucketname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">post</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">multipartBuilder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">())</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        OkHttpClient</span><span style="color:#E06C75;--shiki-dark:#E06C75"> httpClient </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> OkHttpClient</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">newBuilder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Response</span><span style="color:#E06C75;--shiki-dark:#E06C75"> response </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> httpClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">newCall</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(request).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">execute</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">response</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isSuccessful</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Pictures/avatar.png is uploaded successfully using POST object"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Failed to upload Pictures/avatar.png"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2>3. 复制对象</h2>
<h3>3.1 copyObject</h3>
<p>通过服务器端从另一个对象复制数据来创建一个对象。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ObjectWriteResponse</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> copyObject</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">CopyObjectArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><p>示例：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 5. 将my-bucketname中的aa.tmp文件，复制到aaaaa桶下的bb.tmp对象</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">copyObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                CopyObjectArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"aaaaa"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"bb.tmp"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">source</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                                CopySource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"aa.tmp"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">())</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"successfully"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span></code></pre>
</div><h2>4 删除对象</h2>
<h3>4.1 removeObject</h3>
<p>移除一个对象。</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>public void removeObject(RemoveObjectArgs args)</span></span></code></pre>
</div><p>示例：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">		// 6. 删除单个对象</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">removeObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                RemoveObjectArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-objectname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 删除指定版本号的对象</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">removeObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                RemoveObjectArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-versioned-objectname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">versionId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-versionid"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span></code></pre>
</div><h3>4.2 removeObjects</h3>
<p>懒惰地删除多个对象。它需要迭代返回的 Iterable 以执行删除。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Iterable</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Result</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">DeleteError</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> removeObjects</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">RemoveObjectsArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><p>示例：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 7. 删除多个文件</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DeleteObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> objects </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> LinkedList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            objects</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> DeleteObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"aa.tmp"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            objects</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> DeleteObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-objectname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            objects</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> DeleteObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"nacos-server-2.0.3.tar.gz"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            Iterable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Result</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DeleteError</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> results </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">removeObjects</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                            RemoveObjectsArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">objects</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(objects).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Result</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DeleteError</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> result </span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> results) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                DeleteError</span><span style="color:#E06C75;--shiki-dark:#E06C75"> error </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> result</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">                        "Error in deleting object "</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> error</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">objectName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#98C379;--shiki-dark:#98C379"> "; "</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> error</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">message</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            }</span></span></code></pre>
</div><h2>5. 对象信息查询及设置</h2>
<h3>5.1 桶的对象信息列表</h3>
<p>listObjects列出桶的对象信息。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Iterable</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Result</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">Item</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> listObjects</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ListObjectsArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><p>示例1，查询存储桶下文件信息：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 8. 查询存储桶下文件信息</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Iterable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Result</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> results </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">listObjects</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ListObjectsArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Result</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> result </span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> results) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            Item</span><span style="color:#E06C75;--shiki-dark:#E06C75"> item </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> result</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">lastModified</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#98C379;--shiki-dark:#98C379"> "</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\t</span><span style="color:#98C379;--shiki-dark:#98C379">"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">size</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#98C379;--shiki-dark:#98C379"> "</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\t</span><span style="color:#98C379;--shiki-dark:#98C379">"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">objectName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span></code></pre>
</div><p>示例2，递归查询存储桶下文件信息：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 条件查询，指定前缀、后缀、最大数量</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            Iterable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Result</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> results </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">listObjects</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                            ListObjectsArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                                    .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                                    .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">startAfter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"ExampleGuide.pdf"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                                    .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">prefix</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"E"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                                    .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">maxKeys</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">100</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                                    .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Result</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> result </span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75"> results) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                Item</span><span style="color:#E06C75;--shiki-dark:#E06C75"> item </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> result</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">lastModified</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#98C379;--shiki-dark:#98C379"> "</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\t</span><span style="color:#98C379;--shiki-dark:#98C379">"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">size</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#98C379;--shiki-dark:#98C379"> "</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\t</span><span style="color:#98C379;--shiki-dark:#98C379">"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">objectName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            }</span></span></code></pre>
</div><h3>5.2 保留配置</h3>
<p>获取对象的保留配置。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Retention</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getObjectRetention</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">GetObjectRetentionArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><p>示例：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 获取对象保留配置</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Retention</span><span style="color:#E06C75;--shiki-dark:#E06C75"> retention </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getObjectRetention</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        GetObjectRetentionArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname-in-eu-with-object-lock"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"k3s-arm64"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Mode: "</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> retention</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">mode</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Retainuntil Date: "</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> retention</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">retainUntilDate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span></code></pre>
</div><p>添加对象的保留配置，存储桶需要设置为对象锁定模式，并且没有开启版本控制，否则会报错收蠕虫保护。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> setObjectLockRetention</span><span style="color:#E06C75;--shiki-dark:#E06C75">(SetObjectRetentionArgs)</span></span></code></pre>
</div><div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 对象保留配置，保留至当前日期后3天。</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            ZonedDateTime</span><span style="color:#E06C75;--shiki-dark:#E06C75"> retentionUntil </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ZonedDateTime</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">now</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Time</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">UTC</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">plusDays</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">withNano</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            Retention</span><span style="color:#E06C75;--shiki-dark:#E06C75"> retention1 </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Retention</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">RetentionMode</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">COMPLIANCE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> retentionUntil)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setObjectRetention</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    SetObjectRetentionArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname-in-eu-with-object-lock"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"k3s-arm64"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">config</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(retention1)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bypassGovernanceMode</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span></code></pre>
</div><h3>5.3 标签</h3>
<p>为对象设置标签。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> setObjectTags</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SetObjectTagsArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><p>示例：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> map </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> HashMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Project"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#98C379;--shiki-dark:#98C379">"Project One"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"User"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#98C379;--shiki-dark:#98C379">"jsmith"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">setObjectTags</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    SetObjectTagsArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-objectname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">tags</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(map)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span></code></pre>
</div><p>获取对象的标签。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Tags</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getObjectTags</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">GetObjectTagsArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><p>示例：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">Tags</span><span style="color:#E06C75;--shiki-dark:#E06C75"> tags </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getObjectTags</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                            GetObjectTagsArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-objectname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Object tags: "</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> tags</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span></code></pre>
</div><p>删除对象的标签。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">private</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> deleteObjectTags</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DeleteObjectTagsArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><p>示例：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B"> minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">deleteObjectTags</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">          DeleteObjectTagsArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-objectname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Object tags deleted successfully"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span></code></pre>
</div><h3>5.4 合法保留对象</h3>
<p>启用对对象的合法保留。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> enableObjectLegalHold</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">EnableObjectLegalHoldArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><p>案例：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">enableObjectLegalHold</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">          EnableObjectLegalHoldArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">              .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">              .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-objectname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">              .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">versionId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"object-versionId"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">              .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Legal hold enabled on object successfully "</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span></code></pre>
</div><p>禁用对对象的合法保留</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> disableObjectLegalHold</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DisableObjectLegalHoldArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><p>示例：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">disableObjectLegalHold</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">          DisableObjectLegalHoldArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">              .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">              .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-objectname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">              .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Legal hold disabled on object successfully "</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span></code></pre>
</div><h3>5.5 组合对象</h3>
<p>通过使用服务器端副本组合来自不同源对象的数据来创建对象，比如可以将文件分片上传，然后将他们合并为一个文件。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ObjectWriteResponse</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> composeObject</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ComposeObjectArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><p>示例：</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ComposeSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> sources </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ComposeSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            ComposeSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname-one"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-objectname-one"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            ComposeSource</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname-two"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-objectname-two"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">composeObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            ComposeObjectArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-destination-bucket"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-destination-object"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(sources)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Object Composed successfully"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>5.6 元数据</h3>
<p>获取对象的对象信息和元数据。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ObjectStat</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> statObject</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">StatObjectArgs</span><span style="color:#E06C75;--shiki-dark:#E06C75"> args)</span></span></code></pre>
</div><p>示例：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        StatObjectResponse</span><span style="color:#E06C75;--shiki-dark:#E06C75"> stat </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">statObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                        StatObjectArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"start.sh"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">stat</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">toString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span></code></pre>
</div><p>返回信息：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">ObjectStat{bucket</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75">my</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E06C75;--shiki-dark:#E06C75">bucketname</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> object</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">start</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">sh</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> last</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E06C75;--shiki-dark:#E06C75">modified</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66">2021</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#D19A66;--shiki-dark:#D19A66">10</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E06C75;--shiki-dark:#E06C75">19T09</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#D19A66;--shiki-dark:#D19A66">20</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E06C75;--shiki-dark:#E06C75">19Z</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> size</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66">1030</span><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
</div><h2>参考文章</h2>
<p><a href="https://yunyanchengyu.blog.csdn.net/article/details/120849494" target="_blank" rel="noopener noreferrer">Minio入门系列【9】JAVA集成Minio之对象操作API使用详解</a></p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301413274.png" type="image/png"/>
    </item>
    <item>
      <title>Minio基础 - 对象存储OSS概述</title>
      <link>https://mrjackc.github.io/posts/Architect/minio/minio-oos-overview.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/minio/minio-oos-overview.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">Minio基础 - 对象存储OSS概述</source>
      <description>Minio基础 - 对象存储OSS概述 文档来源于阿里云对象存储 OSS，Minio也是对象存储 OSS，很多概念都是相通的，所以了解下。实际企业应用使用阿里OSS是一个很不错的选择。 1. 对象存储OSS 对象存储服务（Object Storage Service，OSS）是一种海量、安全、低成本、高可靠的云存储服务，适合存放任意类型的文件。容量和处...</description>
      <category>Minio</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<blockquote>
<p>文档来源于<a href="https://help.aliyun.com/product/31815.html" target="_blank" rel="noopener noreferrer">阿里云对象存储 OSS</a>，<a href="https://so.csdn.net/so/search?q=Minio&amp;spm=1001.2101.3001.7020" target="_blank" rel="noopener noreferrer">Minio</a>也是对象存储 OSS，很多概念都是相通的，所以了解下。实际企业应用使用阿里OSS是一个很不错的选择。</p>
</blockquote>
<h2>1. 对象存储OSS</h2>
<p>对象存储服务（Object Storage Service，OSS）是一种海量、安全、低成本、高可靠的云存储服务，适合存放任意类型的文件。容量和处理能力弹性扩展，多种存储类型供选择，全面优化存储成本。</p>
<p>阿里云对象存储OSS（Object Storage Service）是阿里云提供的海量、安全、低成本、高持久的云存储服务。其数据设计持久性不低于99.9999999999%（12个9），服务可用性（或业务连续性）不低于99.995%。</p>
<h2>2. 基本概念</h2>
<h3>2.1 存储空间（Bucket）</h3>
<p>存储空间是用户用于存储对象（Object）的容器，所有的对象都必须隶属于某个存储空间。存储空间具有各种配置属性，包括地域、访问权限、存储类型等。用户可以根据实际需求，创建不同类型的存储空间来存储不同的数据。</p>
<ul>
<li><strong>同一个存储空间的内部是扁平的，没有文件系统的目录等概念，所有的对象都直接隶属于其对应的存储空间</strong>。</li>
<li>每个用户可以拥有多个存储空间。</li>
<li>存储空间的名称在OSS范围内必须是全局唯一的，一旦创建之后无法修改名称。</li>
<li>存储空间内部的对象数目没有限制。</li>
</ul>
<p>存储空间的命名规范如下：</p>
<ul>
<li>只能包括小写字母、数字和短划线（-）。</li>
<li>必须以小写字母或者数字开头和结尾。</li>
<li>长度必须在3~63字符之间。</li>
</ul>
<h3>2.2 对象（Object）</h3>
<p>对象是OSS存储数据的基本单元，也被称为OSS的文件。<strong>和传统的文件系统不同，对象没有文件目录层级结构的关系</strong>。<strong>对象由元信息（Object Meta），用户数据（Data）和文件名（Key）组成</strong>，并且由存储空间内部唯一的Key来标识。对象元信息是一组键值对，表示了对象的一些属性，比如最后修改时间、大小等信息，同时用户也可以在元信息中存储一些自定义的信息。</p>
<p>对象的生命周期是从上传成功到被删除为止。在整个生命周期内，除通过追加方式上传的Object可以通过继续追加上传写入数据外，其他方式上传的Object内容无法编辑，您可以通过重复上传同名的对象来覆盖之前的对象。</p>
<p>对象的命名规范如下：</p>
<ul>
<li>使用UTF-8编码。</li>
<li>长度必须在1~1023字符之间。</li>
<li>不能以正斜线（/）或者反斜线（\）开头。</li>
<li>对象名称需要区分大小写。如无特殊说明，本文档中的对象、文件称谓等同于Object。</li>
</ul>
<h3>2.3 ObjectKey</h3>
<p>在各语言SDK中，ObjectKey、Key以及ObjectName是同一概念，均表示对Object执行相关操作时需要填写的Object名称。例如向某一存储空间上传Object时，ObjectKey表示上传的Object所在存储空间的完整名称，即包含文件后缀在内的完整路径，如填写为abc/efg/123.jpg。</p>
<h3>2.4 Region（地域）</h3>
<p>Region表示OSS的数据中心所在物理位置。用户可以根据费用、请求来源等选择合适的地域创建Bucket。一般来说，距离用户更近的Region访问速度更快。详情请参见OSS已经开通的Region。</p>
<p>Region是在创建Bucket的时候指定的，一旦指定之后就不允许更改。该Bucket下所有的Object都存储在对应的数据中心，目前不支持Object级别的Region设置。</p>
<h3>2.5 Endpoint（访问域名）</h3>
<p>Endpoint表示OSS对外服务的访问域名。OSS以HTTP RESTful API的形式对外提供服务，当访问不同的Region的时候，需要不同的域名。通过内网和外网访问同一个Region所需要的Endpoint也是不同的。<a href="http://xn--RegionEndpointoss-cn-hangzhou-kt90c896mt2ci65cvd3dscju30l1b0c.aliyuncs.com" target="_blank" rel="noopener noreferrer">例如杭州Region的外网Endpoint是oss-cn-hangzhou.aliyuncs.com</a>，<a href="http://xn--Endpointoss-cn-hangzhou-internal-2z27cdy55a02wh.aliyuncs.com" target="_blank" rel="noopener noreferrer">内网Endpoint是oss-cn-hangzhou-internal.aliyuncs.com</a>。具体的内容请参见各个Region对应的Endpoint。</p>
<h3>2.6 AccessKey（访问密钥）</h3>
<p>AccessKey简称AK，指的是访问身份验证中用到的AccessKeyId和AccessKeySecret。OSS通过使用AccessKeyId和AccessKeySecret对称加密的方法来验证某个请求的发送者身份。AccessKeyId用于标识用户；AccessKeySecret是用户用于加密签名字符串和OSS用来验证签名字符串的密钥，必须保密。对于OSS来说，AccessKey的来源有：</p>
<ul>
<li>Bucket的拥有者申请的AccessKey。</li>
<li>被Bucket的拥有者通过RAM授权给第三方请求者的AccessKey。</li>
<li>被Bucket的拥有者通过STS授权给第三方请求者的AccessKey。</li>
</ul>
<h3>2.7 强一致性</h3>
<p>Object操作在OSS上具有原子性，操作要么成功要么失败，不会存在有中间状态的Object。OSS保证用户一旦上传完成之后读到的Object是完整的，OSS不会返回给用户一个部分上传成功的Object。</p>
<p>Object操作在OSS同样具有强一致性，用户一旦收到了一个上传（PUT）成功的响应，该上传的Object就已经立即可读，并且Object的冗余数据已经写成功。不存在一种上传的中间状态，即read-after-write却无法读取到数据。对于删除操作也是一样的，用户删除指定的Object成功之后，该Object立即变为不存在。</p>
<h3>2.8 数据冗余机制</h3>
<p>OSS使用基于纠删码、多副本的数据冗余存储机制，将每个对象的不同冗余存储在同一个区域内多个设施的多个设备上，确保硬件失效时的数据持久性和可用性。</p>
<p>OSS Object操作具有强一致性，用户一旦收到了上传或复制成功的响应，则该上传的Object就已经立即可读，且数据已经冗余写入到多个设备中。</p>
<p>OSS会通过计算网络流量包的校验和，验证数据包在客户端和服务端之间传输中是否出错，保证数据完整传输。</p>
<p>OSS的冗余存储机制，可支持两个存储设施并发损坏时，仍维持数据不丢失。</p>
<p>当数据存入OSS后，OSS会检测和修复丢失的冗余，确保数据持久性和可用性。</p>
<p>OSS会周期性地通过校验等方式验证数据的完整性，及时发现因硬件失效等原因造成的数据损坏。当检测到数据有部分损坏或丢失时，OSS会利用冗余的数据，进行重建并修复损坏数据。</p>
<h2>3. OSS与文件系统的对比</h2>
<h3>3.1 OSS与文件系统的对比</h3>
<p>| 对比项   | OSS                                                          | 文件系统                                                     |<br>
|</p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301414419.png" type="image/png"/>
    </item>
    <item>
      <title>Minio进阶 - Minio秒传</title>
      <link>https://mrjackc.github.io/posts/Architect/minio/minio-seconds-upload.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/minio/minio-seconds-upload.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">Minio进阶 - Minio秒传</source>
      <description>Minio进阶 - Minio秒传 1. MD5秒传 1.1 摘要算法 摘要算法是一种能产生特殊输出格式的算法，这种算法的特点是：无论用户输入什么长度的原始数据，经过计算后输出的密文都是固定长度的，这种算法的原理是根据一定的运算规则对原数据进行某种形式的提取，这种提取就是摘要，被摘要的数据内容与原数据有密切联系，只要原数据稍有改变，输出的“摘要”便完全...</description>
      <category>Minio</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. MD5秒传</h2>
<h3>1.1 摘要算法</h3>
<p>摘要算法是一种能产生特殊输出格式的算法，这种算法的特点是：无论用户输入什么长度的原始数据，经过计算后输出的密文都是固定长度的，这种算法的原理是根据一定的运算规则对原数据进行某种形式的提取，这种提取就是摘要，被摘要的数据内容与原数据有密切联系，只要原数据稍有改变，输出的“摘要”便完全不同，因此，基于这种原理的算法便能对数据完整性提供较为健全的保障。</p>
<p>但是，由于输出的密文是提取原数据经过处理的定长值，所以它已经不能还原为原数据，即消息摘要算法是不可逆的，理论上无法通过反向运算取得原数据内容，因此它通常只能被用来做数据完整性验证。</p>
<p>摘要算法:</p>
<ul>
<li>MD2</li>
<li>MD5</li>
<li>SHA-1</li>
<li>SHA-256</li>
<li>SHA-384</li>
<li>SHA-512</li>
</ul>
<h3>1.2 MD5加密</h3>
<p>MD5即Message-Digest Algorithm 5（信息-摘要算法 5），用于确保信息传输完整一致。是计算机广泛使用的杂凑算法之一（又译摘要算法、哈希算法），主流编程语言普遍已有MD5实现。</p>
<p>任意长度的数据经过MD5加密后得到的值的长度都是固定的，并且对原数据修改一个字符对于加密后的值都有很大的变动。</p>
<p>比如使用hutool工具类对字符串进行加密：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Digester</span><span style="color:#E06C75;--shiki-dark:#E06C75"> md5 </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Digester</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DigestAlgorithm</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">MD5</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> digestHex </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> md5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">digestHex</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"testStr"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(digestHex);</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 32e3f38e0012b78faf9b7d1adb34cb48</span></span></code></pre>
</div><p>也可以对文件进行加密：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Digester</span><span style="color:#E06C75;--shiki-dark:#E06C75"> md5 </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Digester</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DigestAlgorithm</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">MD5</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    File</span><span style="color:#E06C75;--shiki-dark:#E06C75"> file</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> File</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"F:</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">\\</span><span style="color:#98C379;--shiki-dark:#98C379">AuthUser.java"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> digestHex </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> md5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">digestHex</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(file);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">out</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(digestHex);</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 835bb25fab66d6fc70ea497f49363194</span></span></code></pre>
</div><p>总结：MD5是一种摘要加密算法，可以对文件、字符串等进行加密规则运算，然后得到一个固定长度的字符串，如果数据有一点修改，加密后的密文就不一样。</p>
<h3>1.3 MD5秒传</h3>
<p><strong>MD5秒传的基本原理</strong>：在实际文件上传应用场景中，当文件体积大、量比较多时，可以对上传前做文件md5值验证，查看该文件是否已上传过，如果已上传，则直接显示上传成功，返回之前文件的访问链接，如果未上传过，则再执行上传。</p>
<h2>2. 入门案例</h2>
<h3>2.1 搭建前端项目</h3>
<p>前端上传组件使用的是<a href="https://github.com/simple-uploader/vue-uploader" target="_blank" rel="noopener noreferrer">vue-uploader</a>。</p>
<p>创建一个VUE 项目，将官网中的测试案例复制进来：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301415336.png" alt="image-20221001232458133" tabindex="0" loading="lazy"><figcaption>image-20221001232458133</figcaption></figure>
<p>修改<code>main.js</code>中的一段代码：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> uploader from 'vue</span><span style="color:#FFFFFF;--shiki-dark:#FFFFFF">-</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">simple</span><span style="color:#FFFFFF;--shiki-dark:#FFFFFF">-</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">uploader'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span></code></pre>
</div><p>修改App.vue 中上传地址为之前我们写的<a href="https://so.csdn.net/so/search?q=Minio&amp;spm=1001.2101.3001.7020" target="_blank" rel="noopener noreferrer">Minio</a> 上传地址：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301415384.png" alt="image-20221001232532357" tabindex="0" loading="lazy"><figcaption>image-20221001232532357</figcaption></figure>
<p>关闭自动上传：</p>
<div class="language-html" data-ext="html" data-title="html"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">uploader</span><span style="color:#D19A66;--shiki-dark:#D19A66"> ref</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"uploader"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> :auto-start</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"false"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> :options</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"options"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> :file-status-text</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"statusText"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> class</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"uploader-example"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> @file-complete</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"fileComplete"</span><span style="color:#D19A66;--shiki-dark:#D19A66"> @complete</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=</span><span style="color:#98C379;--shiki-dark:#98C379">"complete"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> /&gt;</span></span></code></pre>
</div><p>然后启动项目：</p>
<div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">npm</span><span style="color:#98C379;--shiki-dark:#98C379"> install</span><span style="color:#98C379;--shiki-dark:#98C379"> vue-simple-uploader</span><span style="color:#D19A66;--shiki-dark:#D19A66"> --save</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">cnpm</span><span style="color:#98C379;--shiki-dark:#98C379"> install</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">npm</span><span style="color:#98C379;--shiki-dark:#98C379"> run</span><span style="color:#98C379;--shiki-dark:#98C379"> start</span></span></code></pre>
</div><p>访问主页地址，测试上传文件：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301415410.png" alt="image-20221001232628653" tabindex="0" loading="lazy"><figcaption>image-20221001232628653</figcaption></figure>
<h3>2.2 集成SparkMD5</h3>
<p><a href="https://www.npmjs.com/package/spark-md5" target="_blank" rel="noopener noreferrer">文档地址</a></p>
<p>SparkMD5 是 MD5 算法的快速 md5 实现。该脚本基于 JKM md5 库，这是最快的算法。</p>
<p>安装：</p>
<div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">npm</span><span style="color:#98C379;--shiki-dark:#98C379"> install</span><span style="color:#98C379;--shiki-dark:#98C379"> spark-md5</span><span style="color:#D19A66;--shiki-dark:#D19A66"> --save</span></span></code></pre>
</div><p>在App.vue中引入SparkMD5 ，onFileAdded 添加文件事件中，调用计算MD5方法computeMD5：</p>
<div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">script</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E06C75;--shiki-dark:#E06C75"> SparkMD5</span><span style="color:#C678DD;--shiki-dark:#C678DD"> from</span><span style="color:#98C379;--shiki-dark:#98C379"> 'spark-md5'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">export</span><span style="color:#C678DD;--shiki-dark:#C678DD"> default</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">  data</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> () {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      options</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 目标上传 URL，可以是字符串也可以是函数，如果是函数的话，则会传入 Uploader.File 实例、当前块 Uploader.Chunk 以及是否是测试模式，默认值为 '/'</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        target</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">'//localhost:8081/file/upload'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// '//jsonplaceholder.typicode.com/posts/',</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 是否测试每个块是否在服务端已经上传了，主要用来实现秒传、跨浏览器上传等，默认 true。</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        testChunks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#D19A66;--shiki-dark:#D19A66">false</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 分块时按照该值来分。最后一个上传块的大小是可能是大于等于1倍的这个值但是小于两倍的这个值大小，</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 可见这个 Issue #51，默认 1*1024*1024。</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        chunkSize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#D19A66;--shiki-dark:#D19A66">100</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> *</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1024</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> *</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1024</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      },</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      attrs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        accept</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">'image/*'</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      },</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      statusText</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        success</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">'成功了'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        error</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">'出错了'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        uploading</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">'上传中'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        paused</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">'暂停中'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        waiting</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">'等待中'</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    };</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">  mounted</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> () {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">$nextTick</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(() </span><span style="color:#C678DD;--shiki-dark:#C678DD">=&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      window</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">uploader</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">$refs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">uploader</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">uploader</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    });</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">  methods</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">    onFileAdded</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">'文件被添加：'</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">panelShow</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      // 计算MD5</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">computeMD5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E06C75;--shiki-dark:#E06C75">file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">options</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">chunkSize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 计算文件的MD5 值</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">    computeMD5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">chunkSize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">'开始计算MD5'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E06C75;--shiki-dark:#E06C75">file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">      const</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> fileReader</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> FileReader</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">      const</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> time</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Date</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getTime</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">      const</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> blobSlice</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> File</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">prototype</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">slice</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> ||</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> File</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">prototype</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">mozSlice</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> ||</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> File</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">prototype</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">webkitSlice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">      let</span><span style="color:#E06C75;--shiki-dark:#E06C75"> currentChunk</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">      const</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> chunks</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Math</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">ceil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">size</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> /</span><span style="color:#E06C75;--shiki-dark:#E06C75"> chunkSize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">      const</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> spark</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> SparkMD5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">ArrayBuffer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">pause</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">      loadNext</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      fileReader</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">onload</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="color:#C678DD;--shiki-dark:#C678DD"> =&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        spark</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">append</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">e</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">target</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">result</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E06C75;--shiki-dark:#E06C75">currentChunk</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> chunks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">          currentChunk</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">++</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">          loadNext</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">          const</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> md5</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> spark</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">end</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">          file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">uniqueIdentifier</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E06C75;--shiki-dark:#E06C75"> md5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">          file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">resume</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">          console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">`MD5计算完毕：</span><span style="color:#C678DD;--shiki-dark:#C678DD">${</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">name</span><span style="color:#C678DD;--shiki-dark:#C678DD">}</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> \n</span><span style="color:#98C379;--shiki-dark:#98C379">MD5：</span><span style="color:#C678DD;--shiki-dark:#C678DD">${</span><span style="color:#E06C75;--shiki-dark:#E06C75">md5</span><span style="color:#C678DD;--shiki-dark:#C678DD">}</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> \n</span><span style="color:#98C379;--shiki-dark:#98C379">分片：</span><span style="color:#C678DD;--shiki-dark:#C678DD">${</span><span style="color:#E06C75;--shiki-dark:#E06C75">chunks</span><span style="color:#C678DD;--shiki-dark:#C678DD">}</span><span style="color:#98C379;--shiki-dark:#98C379"> 大小:</span><span style="color:#C678DD;--shiki-dark:#C678DD">${</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">size</span><span style="color:#C678DD;--shiki-dark:#C678DD">}</span><span style="color:#98C379;--shiki-dark:#98C379"> 用时：</span><span style="color:#C678DD;--shiki-dark:#C678DD">${</span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Date</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getTime</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#E06C75;--shiki-dark:#E06C75"> time</span><span style="color:#C678DD;--shiki-dark:#C678DD">}</span><span style="color:#98C379;--shiki-dark:#98C379"> ms`</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      };</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      fileReader</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">onerror</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> function</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> () {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">error</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">`文件</span><span style="color:#C678DD;--shiki-dark:#C678DD">${</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">name</span><span style="color:#C678DD;--shiki-dark:#C678DD">}</span><span style="color:#98C379;--shiki-dark:#98C379">读取出错，请检查该文件`</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">cancel</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      };</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">      function</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> loadNext</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        const</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> start</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E06C75;--shiki-dark:#E06C75"> currentChunk</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> *</span><span style="color:#E06C75;--shiki-dark:#E06C75"> chunkSize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        const</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> end</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ((</span><span style="color:#E06C75;--shiki-dark:#E06C75">start</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E06C75;--shiki-dark:#E06C75"> chunkSize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">size</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#C678DD;--shiki-dark:#C678DD">?</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">size</span><span style="color:#C678DD;--shiki-dark:#C678DD"> :</span><span style="color:#E06C75;--shiki-dark:#E06C75"> start</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E06C75;--shiki-dark:#E06C75"> chunkSize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        fileReader</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">readAsArrayBuffer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">blobSlice</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">call</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E06C75;--shiki-dark:#E06C75">start</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E06C75;--shiki-dark:#E06C75">end</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">    complete</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> () {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">'complete'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">arguments</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">    fileComplete</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> () {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">'file complete'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">arguments</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">};</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">script</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>添加几个文件，可以在控制台中看到打印的文件MD5信息：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301415429.png" alt="image-20221001232850838" tabindex="0" loading="lazy"><figcaption>image-20221001232850838</figcaption></figure>
<p>查看上传文件接口，可以看到，将MD5 传给了后台。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301415459.png" alt="image-20221001232907340" tabindex="0" loading="lazy"><figcaption>image-20221001232907340</figcaption></figure>
<h3>2.3 后台代码</h3>
<p>既然前端计算出MD5已经穿了过来，就比较简单了，只需要在保存文件之前判断，该文件的MD5 是否已存在，若存在直接返回之前的访问路径，不存在则再执行上传操作。</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">RequestMapping</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"/upload"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ResponseBody</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Object</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> upload</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">MultipartFile</span><span style="color:#E06C75;--shiki-dark:#E06C75"> file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> bucketName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> HttpServletRequest</span><span style="color:#E06C75;--shiki-dark:#E06C75"> request) throws IOException {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // MD5 秒传</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 1. 获取到该文件的MD5</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> md5 </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> request</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getParameter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"uniqueIdentifier"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 2. 判断该MD5 是否已存在</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        boolean</span><span style="color:#E06C75;--shiki-dark:#E06C75"> contains </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> md5Set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">contains</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(md5);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 3. 已存在直接返回访问路径</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (contains) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            return</span><span style="color:#98C379;--shiki-dark:#98C379"> "该文件已上传，链接为："</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#98C379;--shiki-dark:#98C379"> "http:xxxxxxxxxxxx"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 4. 不存在则执行上传并保存MD5 记录到数据库</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            OssFile</span><span style="color:#E06C75;--shiki-dark:#E06C75"> ossFile </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> minioTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">putObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getInputStream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), bucketName, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getOriginalFilename</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            md5Set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(md5);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> ossFile</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2>3. 案例存在的问题</h2>
<p>入门案例中，存在不少问题，实际开发时自行解决：</p>
<ul>
<li>应该在上传之前进行MD5校验，单独写一个校验接口，而不是上传的过程中校验</li>
</ul>
<h2>参考文章</h2>
<p><a href="https://yunyanchengyu.blog.csdn.net/article/details/123393489" target="_blank" rel="noopener noreferrer">Minio入门系列【17】MD5秒传原理及入门案例</a></p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301415336.png" type="image/png"/>
    </item>
    <item>
      <title>Minio基础 - SpringBoot集成Minio</title>
      <link>https://mrjackc.github.io/posts/Architect/minio/minio-springboot-integrate.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/minio/minio-springboot-integrate.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">Minio基础 - SpringBoot集成Minio</source>
      <description>Minio基础 - SpringBoot集成Minio 1. 前言 之前介绍了如何使用Minio提供的JAVA SDK进行上传和下载文件，在此基础上，我们可以使用spring boot集成Minio JAVA SDK，添加自动配置、装配、客户端管理等功能，简化开发。 2. Spring Boot集成Minio 2.1 环境搭建 首先我们搭建一个spri...</description>
      <category>Minio</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 前言</h2>
<p>之前介绍了如何使用Minio提供的JAVA SDK进行上传和下载文件，在此基础上，我们可以使用spring boot集成Minio JAVA SDK，添加自动配置、装配、客户端管理等功能，简化开发。</p>
<h2>2. Spring Boot集成Minio</h2>
<h3>2.1 环境搭建</h3>
<p>首先我们搭建一个spring boot基础工程，引入以下依赖</p>
<div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependencies</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;org.springframework.boot&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;spring-boot-starter-web&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;org.springframework.boot&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;spring-boot-starter-test&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">scope</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;test&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">scope</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;org.projectlombok&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;lombok&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">optional</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;true&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">optional</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- https://mvnrepository.com/artifact/io.minio/minio --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;io.minio&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;minio&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;8.3.1&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;me.tongfei&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;progressbar&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;0.9.2&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;com.squareup.okhttp3&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;okhttp&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;4.9.2&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;cn.hutool&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;hutool-all&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;5.7.13&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;org.springframework.boot&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;spring-boot-configuration-processor&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;commons-fileupload&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">groupId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;commons-fileupload&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">artifactId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;1.4&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">version</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75">dependency</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>2.2 操作模板类</h3>
<p>在spring中，提供了很多集成第三方的操作模板类，比如RedisTemplate、RestTemplate等等，我们可以参照这些，提供一个minio SDK的集成模板类，这样在使用API时就比较方便了。</p>
<p>首先需要创建一个OSS文件对象，上传文件成功后，我们需要将文件信息返回给前端</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Data</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">AllArgsConstructor</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> OssFile</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * OSS 存储时文件路径</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> ossFilePath</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 原始文件名</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> originalFileName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
</div><p>接着创建了一个MinioTemplate，提供了系列对Minio API的集成。</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Slf4j</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">AllArgsConstructor</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> MinioTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * MinIO 客户端</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    MinioClient</span><span style="color:#E06C75;--shiki-dark:#E06C75"> minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * MinIO 配置类</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    OssProperties</span><span style="color:#E06C75;--shiki-dark:#E06C75"> ossProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 查询所有存储桶</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@return</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> Bucket 集合</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SneakyThrows</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> listBuckets</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">listBuckets</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 桶是否存在</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 桶名</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@return</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 是否存在</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SneakyThrows</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> boolean</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> bucketExists</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucketExists</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">BucketExistsArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bucketName).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 创建存储桶</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 桶名</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SneakyThrows</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> makeBucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucketExists</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bucketName)) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">makeBucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">MakeBucketArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bucketName).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 删除一个空桶 如果存储桶存在对象不为空时，删除会报错。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 桶名</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SneakyThrows</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> removeBucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">removeBucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">RemoveBucketArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bucketName).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 上传文件</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> inputStream</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      流</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> originalFileName</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 原始文件名</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">       桶名</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@return</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> OssFile</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SneakyThrows</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> OssFile</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> putObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">InputStream</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> inputStream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> originalFileName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> uuidFileName</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> generateOssUuidFileName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(originalFileName);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        try</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">StrUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isEmpty</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bucketName)) {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                bucketName </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ossProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getDefaultBucketName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">putObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    PutObjectArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bucketName).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(uuidFileName).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">stream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                            inputStream, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">inputStream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">available</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            return</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> OssFile</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(uuidFileName, originalFileName);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD">finally</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (inputStream </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                inputStream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">close</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 返回临时带签名、过期时间一天、Get请求方式的访问URL</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  桶名</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> ossFilePath</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> Oss文件路径</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@return</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SneakyThrows</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getPresignedObjectUrl</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> ossFilePath</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getPresignedObjectUrl</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                GetPresignedObjectUrlArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">method</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Method</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">GET</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bucketName)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(ossFilePath)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">expiry</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">60</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> *</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 60</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> *</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 24</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * GetObject接口用于获取某个文件（Object）。此操作需要对此Object具有读权限。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  桶名</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> ossFilePath</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> Oss文件路径</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SneakyThrows</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> InputStream</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> ossFilePath</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                GetObjectArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bucketName).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(ossFilePath).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 查询桶的对象信息</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 桶名</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> recursive</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  是否递归查询</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@return</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SneakyThrows</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Iterable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Result</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> listObjects</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#C678DD;--shiki-dark:#C678DD">boolean</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> recursive</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">listObjects</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                ListObjectsArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bucketName).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">recursive</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(recursive).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">	/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 生成随机文件名，防止重复</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> originalFilename</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 原始文件名</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@return</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> generateOssUuidFileName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> originalFilename</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#98C379;--shiki-dark:#98C379"> "files"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> StrUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SLASH</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> DateUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">format</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Date</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#98C379;--shiki-dark:#98C379">"yyyy-MM-dd"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> StrUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SLASH</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> UUID</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">randomUUID</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> StrUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SLASH</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> originalFilename;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 获取带签名的临时上传元数据对象，前端可获取后，直接上传到Minio</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> fileName</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@return</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SneakyThrows</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getPresignedPostFormData</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> fileName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 为存储桶创建一个上传策略，过期时间为7天</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        PostPolicy</span><span style="color:#E06C75;--shiki-dark:#E06C75"> policy</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> PostPolicy</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bucketName, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ZonedDateTime</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">now</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">plusDays</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">7</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 设置一个参数key，值为上传对象的名称</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        policy</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">addEqualsCondition</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"key"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, fileName);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 添加Content-Type以"image/"开头，表示只能上传照片</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        policy</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">addStartsWithCondition</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Content-Type"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#98C379;--shiki-dark:#98C379">"image/"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 设置上传文件的大小 64kiB to 10MiB.</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        policy</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">addContentLengthRangeCondition</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">64</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> *</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1024</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;--shiki-dark:#D19A66">10</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> *</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1024</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> *</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1024</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getPresignedPostFormData</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(policy);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 初始化默认存储桶</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PostConstruct</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> initDefaultBucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> defaultBucketName</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ossProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getDefaultBucketName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucketExists</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(defaultBucketName)) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">info</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"默认存储桶已存在"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">info</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"创建默认存储桶"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">            makeBucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ossProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getDefaultBucketName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        ;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>2.3 自动配置</h3>
<p>在了解了BAT公司提供的对象存储OSS后，发现其API接口标准都是差不多的，从扩展性的角度出发，我们当前服务应当支持各种类型的OSS，比如阿里、华为、腾讯等。所以这里先定义一个枚举类，提供除了Minio还适配其他厂商的支持。</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Getter</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">AllArgsConstructor</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> enum</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> OssType</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * Minio 对象存储</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">    MINIO</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"minio"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 华为 OBS</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">    OBS</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"obs"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 2</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 腾讯 COS</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">    COS</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"tencent"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 3</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 阿里巴巴 SSO</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">    ALIBABA</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"alibaba"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 4</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    ;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 名称</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    final</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 类型</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    final</span><span style="color:#C678DD;--shiki-dark:#C678DD"> int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> type</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建OSS配置类，可以选择不同类型的OSS集成，以及集成需要的访问地址、用户密码等信息配置。</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Data</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ConfigurationProperties</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">prefix</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "oss"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> OssProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 是否开启</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    Boolean</span><span style="color:#E06C75;--shiki-dark:#E06C75"> enabled</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 存储对象服务器类型</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    OssType</span><span style="color:#E06C75;--shiki-dark:#E06C75"> type</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * OSS 访问端点，集群时需提供统一入口</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> endpoint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 用户名</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> accessKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 密码</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> secretKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 默认存储桶名，没有指定时，会放在默认的存储桶</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> defaultBucketName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后编译一下项目，将配置类转为spring-configuration-metadata.json文件，这样这些配置在yml中就有提示功能了。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301416577.png" alt="image-20220723232931077" tabindex="0" loading="lazy"><figcaption>image-20220723232931077</figcaption></figure>
<p>最后在根据我们配置的OSS类型，创建不同的自动配置类，这里创建的MinioConfiguration，主要是根据配置注入MinioClient及MinioTemplate模板类，将其交给Spring容器管理。</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Configuration</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">proxyBeanMethods</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> false</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ConditionalOnClass</span><span style="color:#E06C75;--shiki-dark:#E06C75">({</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">MinioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#E06C75;--shiki-dark:#E06C75">})</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">EnableConfigurationProperties</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OssProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ConditionalOnExpression</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"${oss.enabled}"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ConditionalOnProperty</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "oss.type"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#D19A66;--shiki-dark:#D19A66"> havingValue</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> "minio"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> MinioConfiguration</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Bean</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SneakyThrows</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ConditionalOnMissingBean</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">MinioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> MinioClient</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OssProperties</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> ossProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> MinioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">endpoint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ossProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getEndpoint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">())</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">credentials</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ossProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getAccessKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ossProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getSecretKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">())</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Bean</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ConditionalOnBean</span><span style="color:#E06C75;--shiki-dark:#E06C75">({</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">MinioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#E06C75;--shiki-dark:#E06C75">})</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ConditionalOnMissingBean</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">MinioTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> MinioTemplate</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> minioTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">MinioClient</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> minioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OssProperties</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> ossProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> MinioTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(minioClient, ossProperties);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>2.4 测试</h3>
<p>首先，在yml中添加Minio的配置：</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>oss:</span></span>
<span class="line"><span>  enabled: true</span></span>
<span class="line"><span>  type: MINIO</span></span>
<span class="line"><span>  endpoint: http://127.0.0.1:9000</span></span>
<span class="line"><span>  access-key: admin</span></span>
<span class="line"><span>  secret-key: admin123</span></span>
<span class="line"><span>  default-bucket-name: pearl-buckent</span></span></code></pre>
</div><p>然后创建一个访问接口，直接调用minioTemplate进行文件操作，这样就十分便利，达到了简化开发的目的。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Autowired</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">MinioTemplate</span><span style="color:#E06C75;--shiki-dark:#E06C75"> minioTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PostMapping</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"/upload"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ResponseBody</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Object</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> upload</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">MultipartFile</span><span style="color:#E06C75;--shiki-dark:#E06C75"> file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> bucketName) throws IOException {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> minioTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">putObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getInputStream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), bucketName, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getOriginalFilename</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
</div><h2>参考文章</h2>
<p><a href="https://yunyanchengyu.blog.csdn.net/article/details/120920171" target="_blank" rel="noopener noreferrer">Minio入门系列【12】Spring Boot集成Minio</a></p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301416577.png" type="image/png"/>
    </item>
    <item>
      <title>MinioServer启动模式</title>
      <link>https://mrjackc.github.io/posts/Architect/minio/minio-start-model.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/minio/minio-start-model.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">MinioServer启动模式</source>
      <description>MinioServer启动模式 1. 简介 minio支持多种server启动模式： image-20220715171521129.pngimage-20220715171521129.png standalone模式 即要管理的磁盘都在host本地。该启动模式一般仅用于实验环境、测试环境的验证和学习使用。在standalone模式下，还可以分为 n...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 简介</h2>
<p>minio支持多种server启动模式：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301417996.png" alt="image-20220715171521129.png" tabindex="0" loading="lazy"><figcaption>image-20220715171521129.png</figcaption></figure>
<ul>
<li>
<p>standalone模式</p>
<p>即要管理的磁盘都在host本地。该启动模式一般仅用于实验环境、测试环境的验证和学习使用。在standalone模式下，还可以分为</p>
<ul>
<li><strong>non-erasure code mode</strong></li>
<li><strong>erasure code mode</strong>。</li>
</ul>
</li>
</ul>
<h3>1.1 standalone 之 non-erasure code 模式</h3>
<p>所谓<strong>non-erasure code mode</strong>，即minio server启动时仅传入一个本地磁盘目录参数：比如：</p>
<div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">$minio</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> server data</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">Endpoint:</span><span style="color:#98C379;--shiki-dark:#98C379">  http://10.10.126.88:9000</span><span style="color:#98C379;--shiki-dark:#98C379">  http://127.0.0.1:9000</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">AccessKey:</span><span style="color:#98C379;--shiki-dark:#98C379"> minioadmin</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">SecretKey:</span><span style="color:#98C379;--shiki-dark:#98C379"> minioadmin</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">Browser</span><span style="color:#98C379;--shiki-dark:#98C379"> Access:</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">   http://10.10.126.88:9000</span><span style="color:#98C379;--shiki-dark:#98C379">  http://127.0.0.1:9000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">           </span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">Command-line</span><span style="color:#98C379;--shiki-dark:#98C379"> Access:</span><span style="color:#98C379;--shiki-dark:#98C379"> https://docs.min.io/docs/minio-client-quickstart-guide</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">   $</span><span style="color:#98C379;--shiki-dark:#98C379"> mc</span><span style="color:#98C379;--shiki-dark:#98C379"> config</span><span style="color:#98C379;--shiki-dark:#98C379"> host</span><span style="color:#98C379;--shiki-dark:#98C379"> add</span><span style="color:#98C379;--shiki-dark:#98C379"> myminio</span><span style="color:#98C379;--shiki-dark:#98C379"> http://10.10.126.88:9000</span><span style="color:#98C379;--shiki-dark:#98C379"> minioadmin</span><span style="color:#98C379;--shiki-dark:#98C379"> minioadmin</span></span>
<span class="line"></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">...</span><span style="color:#98C379;--shiki-dark:#98C379"> ...</span></span></code></pre>
</div><p>在这样的启动模式下，对于每一份对象数据，minio直接在data下面存储这份数据，不会建立副本，也不会启用纠删码机制。因此，<strong>这种模式无论是服务实例还是磁盘都是“单点”，无任何高可用保障，磁盘损坏就表示数据丢失。</strong></p>
<h3>1.2 standalone 之 non-erasure code 模式</h3>
<p>erasure code mode即为minio server<strong>实例传入多个本地磁盘参数</strong>。一旦遇到多于一个磁盘参数，minio server会自动启用<strong>erasure code mode</strong>。<strong>erasure code</strong>对磁盘的个数是有要求的（最少4个），如不满足要求，实例启动将失败：</p>
<div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">$minio</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> server data1 data2</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">ERROR</span><span style="color:#98C379;--shiki-dark:#98C379"> Invalid</span><span style="color:#98C379;--shiki-dark:#98C379"> command</span><span style="color:#98C379;--shiki-dark:#98C379"> line</span><span style="color:#98C379;--shiki-dark:#98C379"> arguments:</span><span style="color:#98C379;--shiki-dark:#98C379"> Incorrect</span><span style="color:#98C379;--shiki-dark:#98C379"> number</span><span style="color:#98C379;--shiki-dark:#98C379"> of</span><span style="color:#98C379;--shiki-dark:#98C379"> endpoints</span><span style="color:#98C379;--shiki-dark:#98C379"> provided</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> [data1 </span><span style="color:#98C379;--shiki-dark:#98C379">data2]</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      &gt; </span><span style="color:#61AFEF;--shiki-dark:#61AFEF">Please</span><span style="color:#98C379;--shiki-dark:#98C379"> provide</span><span style="color:#98C379;--shiki-dark:#98C379"> an</span><span style="color:#98C379;--shiki-dark:#98C379"> even</span><span style="color:#98C379;--shiki-dark:#98C379"> number</span><span style="color:#98C379;--shiki-dark:#98C379"> of</span><span style="color:#98C379;--shiki-dark:#98C379"> endpoints</span><span style="color:#98C379;--shiki-dark:#98C379"> greater</span><span style="color:#98C379;--shiki-dark:#98C379"> or</span><span style="color:#98C379;--shiki-dark:#98C379"> equal</span><span style="color:#98C379;--shiki-dark:#98C379"> to</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 4</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">      HINT:</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">        For</span><span style="color:#98C379;--shiki-dark:#98C379"> more</span><span style="color:#98C379;--shiki-dark:#98C379"> information,</span><span style="color:#98C379;--shiki-dark:#98C379"> please</span><span style="color:#98C379;--shiki-dark:#98C379"> refer</span><span style="color:#98C379;--shiki-dark:#98C379"> to</span><span style="color:#98C379;--shiki-dark:#98C379"> https://docs.min.io/docs/minio-erasure-code-quickstart-guide</span></span></code></pre>
</div><p><strong>erasure code</strong>启用后，要求传给minio server的endpoint(standalone模式下，即本地磁盘上的目录)<a href="https://docs.minio.io/docs/minio-erasure-code-quickstart-guide.html" target="_blank" rel="noopener noreferrer">至少为4个</a>。minio server启用纠删码机制后，会自动将传入的disk drive划分为多个<strong>erasure coding set</strong>，每个<strong>erasure coding set</strong>中的disk drive的数量可以是：4, 6, 8, 10, 12, 14 和16。minio server会根据传入disk drive的数量自动计算set个数和每个set中的disk drive数量。比如下面例子中，我们传入四个endpoint(disk drive)给minio server：</p>
<div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">$minio</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> server data1 data2 data3 data4</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">Formatting</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span><span style="color:#98C379;--shiki-dark:#98C379"> zone,</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span><span style="color:#98C379;--shiki-dark:#98C379"> set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">s</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#98C379;--shiki-dark:#98C379">,</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 4</span><span style="color:#98C379;--shiki-dark:#98C379"> drives</span><span style="color:#98C379;--shiki-dark:#98C379"> per</span><span style="color:#98C379;--shiki-dark:#98C379"> set.</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">WARNING:</span><span style="color:#98C379;--shiki-dark:#98C379"> Host</span><span style="color:#98C379;--shiki-dark:#98C379"> local</span><span style="color:#98C379;--shiki-dark:#98C379"> has</span><span style="color:#98C379;--shiki-dark:#98C379"> more</span><span style="color:#98C379;--shiki-dark:#98C379"> than</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 2</span><span style="color:#98C379;--shiki-dark:#98C379"> drives</span><span style="color:#98C379;--shiki-dark:#98C379"> of</span><span style="color:#98C379;--shiki-dark:#98C379"> set.</span><span style="color:#98C379;--shiki-dark:#98C379"> A</span><span style="color:#98C379;--shiki-dark:#98C379"> host</span><span style="color:#98C379;--shiki-dark:#98C379"> failure</span><span style="color:#98C379;--shiki-dark:#98C379"> will</span><span style="color:#98C379;--shiki-dark:#98C379"> result</span><span style="color:#98C379;--shiki-dark:#98C379"> in</span><span style="color:#98C379;--shiki-dark:#98C379"> data</span><span style="color:#98C379;--shiki-dark:#98C379"> becoming</span><span style="color:#98C379;--shiki-dark:#98C379"> unavailable.</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">Status:</span><span style="color:#D19A66;--shiki-dark:#D19A66">         4</span><span style="color:#98C379;--shiki-dark:#98C379"> Online,</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#98C379;--shiki-dark:#98C379"> Offline.</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">Endpoint:</span><span style="color:#98C379;--shiki-dark:#98C379">  http://10.10.126.88:9000</span><span style="color:#98C379;--shiki-dark:#98C379">  http://127.0.0.1:9000</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">AccessKey:</span><span style="color:#98C379;--shiki-dark:#98C379"> minioadmin</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">SecretKey:</span><span style="color:#98C379;--shiki-dark:#98C379"> minioadmin</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">Browser</span><span style="color:#98C379;--shiki-dark:#98C379"> Access:</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">   http://10.10.126.88:9000</span><span style="color:#98C379;--shiki-dark:#98C379">  http://127.0.0.1:9000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">           </span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">Command-line</span><span style="color:#98C379;--shiki-dark:#98C379"> Access:</span><span style="color:#98C379;--shiki-dark:#98C379"> https://docs.min.io/docs/minio-client-quickstart-guide</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">   $</span><span style="color:#98C379;--shiki-dark:#98C379"> mc</span><span style="color:#98C379;--shiki-dark:#98C379"> config</span><span style="color:#98C379;--shiki-dark:#98C379"> host</span><span style="color:#98C379;--shiki-dark:#98C379"> add</span><span style="color:#98C379;--shiki-dark:#98C379"> myminio</span><span style="color:#98C379;--shiki-dark:#98C379"> http://10.10.126.88:9000</span><span style="color:#98C379;--shiki-dark:#98C379"> minioadmin</span><span style="color:#98C379;--shiki-dark:#98C379"> minioadmin</span></span>
<span class="line"></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">...</span><span style="color:#98C379;--shiki-dark:#98C379"> ...</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从minio server的输出日志来看，minio server将这些drive放入了一个<strong>erasure coding set</strong>了。在输出日志中，我们还看到一行WARNING: <strong>Host local has more than 2 drives of set. A host failure will result in data becoming unavailable.</strong>，即minio server警告我们：这个<strong>erasure coding set</strong>中有多于两个的drive都在local host上，这样一旦host宕机，那么数据将无法获取。(每个set 有4个drive，根据纠删码的机制，这个set的最大允许失效的disk数量为4/2=2)。</p>
<h4>1.2.1 语法糖-省略号</h4>
<div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">$minio</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> server data{</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">1...18}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">Formatting</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span><span style="color:#98C379;--shiki-dark:#98C379"> zone,</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 3</span><span style="color:#98C379;--shiki-dark:#98C379"> set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">s</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#98C379;--shiki-dark:#98C379">,</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 6</span><span style="color:#98C379;--shiki-dark:#98C379"> drives</span><span style="color:#98C379;--shiki-dark:#98C379"> per</span><span style="color:#98C379;--shiki-dark:#98C379"> set.</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">WARNING:</span><span style="color:#98C379;--shiki-dark:#98C379"> Host</span><span style="color:#98C379;--shiki-dark:#98C379"> local</span><span style="color:#98C379;--shiki-dark:#98C379"> has</span><span style="color:#98C379;--shiki-dark:#98C379"> more</span><span style="color:#98C379;--shiki-dark:#98C379"> than</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 3</span><span style="color:#98C379;--shiki-dark:#98C379"> drives</span><span style="color:#98C379;--shiki-dark:#98C379"> of</span><span style="color:#98C379;--shiki-dark:#98C379"> set.</span><span style="color:#98C379;--shiki-dark:#98C379"> A</span><span style="color:#98C379;--shiki-dark:#98C379"> host</span><span style="color:#98C379;--shiki-dark:#98C379"> failure</span><span style="color:#98C379;--shiki-dark:#98C379"> will</span><span style="color:#98C379;--shiki-dark:#98C379"> result</span><span style="color:#98C379;--shiki-dark:#98C379"> in</span><span style="color:#98C379;--shiki-dark:#98C379"> data</span><span style="color:#98C379;--shiki-dark:#98C379"> becoming</span><span style="color:#98C379;--shiki-dark:#98C379"> unavailable.</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">WARNING:</span><span style="color:#98C379;--shiki-dark:#98C379"> Host</span><span style="color:#98C379;--shiki-dark:#98C379"> local</span><span style="color:#98C379;--shiki-dark:#98C379"> has</span><span style="color:#98C379;--shiki-dark:#98C379"> more</span><span style="color:#98C379;--shiki-dark:#98C379"> than</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 3</span><span style="color:#98C379;--shiki-dark:#98C379"> drives</span><span style="color:#98C379;--shiki-dark:#98C379"> of</span><span style="color:#98C379;--shiki-dark:#98C379"> set.</span><span style="color:#98C379;--shiki-dark:#98C379"> A</span><span style="color:#98C379;--shiki-dark:#98C379"> host</span><span style="color:#98C379;--shiki-dark:#98C379"> failure</span><span style="color:#98C379;--shiki-dark:#98C379"> will</span><span style="color:#98C379;--shiki-dark:#98C379"> result</span><span style="color:#98C379;--shiki-dark:#98C379"> in</span><span style="color:#98C379;--shiki-dark:#98C379"> data</span><span style="color:#98C379;--shiki-dark:#98C379"> becoming</span><span style="color:#98C379;--shiki-dark:#98C379"> unavailable.</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">WARNING:</span><span style="color:#98C379;--shiki-dark:#98C379"> Host</span><span style="color:#98C379;--shiki-dark:#98C379"> local</span><span style="color:#98C379;--shiki-dark:#98C379"> has</span><span style="color:#98C379;--shiki-dark:#98C379"> more</span><span style="color:#98C379;--shiki-dark:#98C379"> than</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 3</span><span style="color:#98C379;--shiki-dark:#98C379"> drives</span><span style="color:#98C379;--shiki-dark:#98C379"> of</span><span style="color:#98C379;--shiki-dark:#98C379"> set.</span><span style="color:#98C379;--shiki-dark:#98C379"> A</span><span style="color:#98C379;--shiki-dark:#98C379"> host</span><span style="color:#98C379;--shiki-dark:#98C379"> failure</span><span style="color:#98C379;--shiki-dark:#98C379"> will</span><span style="color:#98C379;--shiki-dark:#98C379"> result</span><span style="color:#98C379;--shiki-dark:#98C379"> in</span><span style="color:#98C379;--shiki-dark:#98C379"> data</span><span style="color:#98C379;--shiki-dark:#98C379"> becoming</span><span style="color:#98C379;--shiki-dark:#98C379"> unavailable.</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">Status:</span><span style="color:#D19A66;--shiki-dark:#D19A66">         18</span><span style="color:#98C379;--shiki-dark:#98C379"> Online,</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#98C379;--shiki-dark:#98C379"> Offline.</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">Endpoint:</span><span style="color:#98C379;--shiki-dark:#98C379">  http://10.10.126.88:9000</span><span style="color:#98C379;--shiki-dark:#98C379">  http://127.0.0.1:9000</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">AccessKey:</span><span style="color:#98C379;--shiki-dark:#98C379"> minioadmin</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">SecretKey:</span><span style="color:#98C379;--shiki-dark:#98C379"> minioadmin</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">Browser</span><span style="color:#98C379;--shiki-dark:#98C379"> Access:</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">   http://10.10.126.88:9000</span><span style="color:#98C379;--shiki-dark:#98C379">  http://127.0.0.1:9000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">           </span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">Command-line</span><span style="color:#98C379;--shiki-dark:#98C379"> Access:</span><span style="color:#98C379;--shiki-dark:#98C379"> https://docs.min.io/docs/minio-client-quickstart-guide</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">   $</span><span style="color:#98C379;--shiki-dark:#98C379"> mc</span><span style="color:#98C379;--shiki-dark:#98C379"> config</span><span style="color:#98C379;--shiki-dark:#98C379"> host</span><span style="color:#98C379;--shiki-dark:#98C379"> add</span><span style="color:#98C379;--shiki-dark:#98C379"> myminio</span><span style="color:#98C379;--shiki-dark:#98C379"> http://10.10.126.88:9000</span><span style="color:#98C379;--shiki-dark:#98C379"> minioadmin</span><span style="color:#98C379;--shiki-dark:#98C379"> minioadmin</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">...</span><span style="color:#98C379;--shiki-dark:#98C379"> ...</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>minio server data{1...18}</span></span></code></pre>
</div><p>等价于</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>minio server data1 data2 data3 data4 data5 data6 data7 data8 data9 data10 data11 data 12 data13 data14 data15 data16 data17 data18</span></span></code></pre>
</div><p>minio server会自行扩展省略号代表的内容。我们看到：当我们传入18个disk drive后，minio server创建了3个<strong>erasure coding set</strong>，每个set中有6个disk drive。同样，minio server还针对每个set输出了一行WARNING：每个Set中有三个以上的disk drive都位于同一台host上。</p>
<p>这些WARNING我们可以通过distributed mode来解决。顾名思义，distributed mode下，minio server实例和其管理的disk drive分布在多台host上，这种模式可以避免minio server实例单点，数据也将分布在不同host上的不同disk中，实现了高可用，提升了整体的容灾能力。由于处理多个host上的disk，distribute mode默认就会启动<strong>erasure coding set</strong>机制。</p>
<h3>1.3 distributed mode</h3>
<p>在distributed mode下，minio server后面的远程的endpoint采用http url编码格式：</p>
<div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">export</span><span style="color:#E06C75;--shiki-dark:#E06C75"> MINIO_ACCESS_KEY</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">ACCESS_KEY</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">export</span><span style="color:#E06C75;--shiki-dark:#E06C75"> MINIO_SECRET_KEY</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">SECRET_KEY</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">$minio</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> server http://host{</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">1...4}:9000/minio/data</span><span style="color:#98C379;--shiki-dark:#98C379">{1.</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">.</span><span style="color:#98C379;--shiki-dark:#98C379">.4}</span></span></code></pre>
</div><p>上面例子中的minio server命令相当于4个host，每个host上启动一个minio server实例，每个实例都管理16的disk drive(包括本地和远程的)。上述命令等价于：</p>
<div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">$minio</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> server http://host1:9000/minio/data1 http://host1:9000/minio/data2 http://host1:9000/minio/data3 http://host1:9000/minio/data4 http://host2:9000/minio/data1 http://host2:9000/minio/data2 http://host2:9000/minio/data3 http://host2:9000/minio/data4 http://host3:9000/minio/data1 http://host3:9000/minio/data2 http://host3:9000/minio/data3 http://host3:9000/minio/data4 http://host4:9000/minio/data1 http://host4:9000/minio/data2 http://host4:9000/minio/data3 http://host4:9000/minio/data4</span></span></code></pre>
</div><p>minio同样会自动将这些disk drive划分为若干个<strong>erasure coding set</strong>。每个endpoint用<code>http://address/disk-drive-path</code>的形式编码。注意：<code>这条命令在host1、host2、host3和host4上都要执行</code></p>
<h2>2. <code>zone</code>的概念</h2>
<p>比如下面这个例子：</p>
<div class="language- line-numbers-mode" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>$minio server data{1...8} data{9...16}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Formatting 1 zone, 1 set(s), 8 drives per set.</span></span>
<span class="line"><span>WARNING: Host local has more than 4 drives of set. A host failure will result in data becoming unavailable.</span></span>
<span class="line"><span>Formatting 2 zone, 1 set(s), 8 drives per set.</span></span>
<span class="line"><span>WARNING: Host local has more than 4 drives of set. A host failure will result in data becoming unavailable.</span></span>
<span class="line"><span>Status:         16 Online, 0 Offline.</span></span>
<span class="line"><span>Endpoint:  http://10.10.126.88:9000  http://127.0.0.1:9000</span></span>
<span class="line"><span>AccessKey: minioadmin</span></span>
<span class="line"><span>SecretKey: minioadmin</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Browser Access:</span></span>
<span class="line"><span>   http://10.10.126.88:9000  http://127.0.0.1:9000           </span></span>
<span class="line"><span></span></span>
<span class="line"><span>Command-line Access: https://docs.min.io/docs/minio-client-quickstart-guide</span></span>
<span class="line"><span>   $ mc config host add myminio http://10.10.126.88:9000 minioadmin minioadmin</span></span>
<span class="line"><span></span></span>
<span class="line"><span>... ...</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们在命令行中给minio server传入两组采用“省略号”语法的参数，minio认为<strong>每组</strong>就是一个**“zone”<strong>，这里有两组，因此minio创建了两个</strong>zone**。在每个zone内，minio创建了一个<strong>erasure coding set</strong>，每个set中有8个disk drive。对于外部的写数据请求，minio server会首先查找可用空间多的zone，然后再在zone内选择set和disk drive。</p>
<p>如果不用“省略号”语法，那么minio server会将后面传入的所有disk drive放入一个zone中</p>
<h2>3. 部署distributed minio集群</h2>
<h3>3. 1. 单机上部署distributed minio集群</h3>
<p>我们的验证环境采用最小的distributed minio模式：单机、one zone, one erasure coding set, 4 disk drive。下面是部署的示意图：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301417038.png" alt="image-20220715200417201" tabindex="0" loading="lazy"><figcaption>image-20220715200417201</figcaption></figure>
<p>我们没有使用“省略号”语法，在单机上不是很好模拟。我们通过下面脚本来启动该minio集群：</p>
<div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># cat startup_minio.sh</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">export</span><span style="color:#E06C75;--shiki-dark:#E06C75"> MINIO_ACCESS_KEY</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">"minio"</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">export</span><span style="color:#E06C75;--shiki-dark:#E06C75"> MINIO_SECRET_KEY</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#98C379;--shiki-dark:#98C379">"minio123"</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> i</span><span style="color:#C678DD;--shiki-dark:#C678DD"> in</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">01..04}</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">; </span><span style="color:#C678DD;--shiki-dark:#C678DD">do</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">    nohup</span><span style="color:#98C379;--shiki-dark:#98C379"> minio</span><span style="color:#98C379;--shiki-dark:#98C379"> server</span><span style="color:#D19A66;--shiki-dark:#D19A66"> --address</span><span style="color:#98C379;--shiki-dark:#98C379"> ":90${</span><span style="color:#E06C75;--shiki-dark:#E06C75">i</span><span style="color:#98C379;--shiki-dark:#98C379">}"</span><span style="color:#98C379;--shiki-dark:#98C379"> http://127.0.0.1:9001/root/minio-install/data1</span><span style="color:#98C379;--shiki-dark:#98C379"> http://127.0.0.1:9002/root/minio-install/data2</span><span style="color:#98C379;--shiki-dark:#98C379">  http://127.0.0.1:9003/root/minio-install/data3</span><span style="color:#98C379;--shiki-dark:#98C379"> http://127.0.0.1:9004/root/minio-install/data4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> &gt; </span><span style="color:#98C379;--shiki-dark:#98C379">"/root/minio-install/90${</span><span style="color:#E06C75;--shiki-dark:#E06C75">i</span><span style="color:#98C379;--shiki-dark:#98C379">}.log"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&amp; </span><span style="color:#61AFEF;--shiki-dark:#61AFEF">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;&amp;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">1</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">done</span></span></code></pre>
</div><p>启动该minio集群，并查看启动状态：</p>
<div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># bash startup_minio.sh</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># ps -ef|grep minio</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">root</span><span style="color:#D19A66;--shiki-dark:#D19A66">      1218</span><span style="color:#D19A66;--shiki-dark:#D19A66">     1</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 11</span><span style="color:#98C379;--shiki-dark:#98C379"> 21:58</span><span style="color:#98C379;--shiki-dark:#98C379"> pts/5</span><span style="color:#98C379;--shiki-dark:#98C379">    00:00:01</span><span style="color:#98C379;--shiki-dark:#98C379"> minio</span><span style="color:#98C379;--shiki-dark:#98C379"> server</span><span style="color:#D19A66;--shiki-dark:#D19A66"> --address</span><span style="color:#98C379;--shiki-dark:#98C379"> :9001</span><span style="color:#98C379;--shiki-dark:#98C379"> http://127.0.0.1:9001/root/minio-install/data1</span><span style="color:#98C379;--shiki-dark:#98C379"> http://127.0.0.1:9002/root/minio-install/data2</span><span style="color:#98C379;--shiki-dark:#98C379"> http://127.0.0.1:9003/root/minio-install/data3</span><span style="color:#98C379;--shiki-dark:#98C379"> http://127.0.0.1:9004/root/minio-install/data4</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">root</span><span style="color:#D19A66;--shiki-dark:#D19A66">      1219</span><span style="color:#D19A66;--shiki-dark:#D19A66">     1</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 11</span><span style="color:#98C379;--shiki-dark:#98C379"> 21:58</span><span style="color:#98C379;--shiki-dark:#98C379"> pts/5</span><span style="color:#98C379;--shiki-dark:#98C379">    00:00:01</span><span style="color:#98C379;--shiki-dark:#98C379"> minio</span><span style="color:#98C379;--shiki-dark:#98C379"> server</span><span style="color:#D19A66;--shiki-dark:#D19A66"> --address</span><span style="color:#98C379;--shiki-dark:#98C379"> :9002</span><span style="color:#98C379;--shiki-dark:#98C379"> http://127.0.0.1:9001/root/minio-install/data1</span><span style="color:#98C379;--shiki-dark:#98C379"> http://127.0.0.1:9002/root/minio-install/data2</span><span style="color:#98C379;--shiki-dark:#98C379"> http://127.0.0.1:9003/root/minio-install/data3</span><span style="color:#98C379;--shiki-dark:#98C379"> http://127.0.0.1:9004/root/minio-install/data4</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">root</span><span style="color:#D19A66;--shiki-dark:#D19A66">      1220</span><span style="color:#D19A66;--shiki-dark:#D19A66">     1</span><span style="color:#D19A66;--shiki-dark:#D19A66">  3</span><span style="color:#98C379;--shiki-dark:#98C379"> 21:58</span><span style="color:#98C379;--shiki-dark:#98C379"> pts/5</span><span style="color:#98C379;--shiki-dark:#98C379">    00:00:00</span><span style="color:#98C379;--shiki-dark:#98C379"> minio</span><span style="color:#98C379;--shiki-dark:#98C379"> server</span><span style="color:#D19A66;--shiki-dark:#D19A66"> --address</span><span style="color:#98C379;--shiki-dark:#98C379"> :9003</span><span style="color:#98C379;--shiki-dark:#98C379"> http://127.0.0.1:9001/root/minio-install/data1</span><span style="color:#98C379;--shiki-dark:#98C379"> http://127.0.0.1:9002/root/minio-install/data2</span><span style="color:#98C379;--shiki-dark:#98C379"> http://127.0.0.1:9003/root/minio-install/data3</span><span style="color:#98C379;--shiki-dark:#98C379"> http://127.0.0.1:9004/root/minio-install/data4</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">root</span><span style="color:#D19A66;--shiki-dark:#D19A66">      1221</span><span style="color:#D19A66;--shiki-dark:#D19A66">     1</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 11</span><span style="color:#98C379;--shiki-dark:#98C379"> 21:58</span><span style="color:#98C379;--shiki-dark:#98C379"> pts/5</span><span style="color:#98C379;--shiki-dark:#98C379">    00:00:01</span><span style="color:#98C379;--shiki-dark:#98C379"> minio</span><span style="color:#98C379;--shiki-dark:#98C379"> server</span><span style="color:#D19A66;--shiki-dark:#D19A66"> --address</span><span style="color:#98C379;--shiki-dark:#98C379"> :9004</span><span style="color:#98C379;--shiki-dark:#98C379"> http://127.0.0.1:9001/root/minio-install/data1</span><span style="color:#98C379;--shiki-dark:#98C379"> http://127.0.0.1:9002/root/minio-install/data2</span><span style="color:#98C379;--shiki-dark:#98C379"> http://127.0.0.1:9003/root/minio-install/data3</span><span style="color:#98C379;--shiki-dark:#98C379"> http://127.0.0.1:9004/root/minio-install/data4</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">root@instance-cspzrq3u:~/minio-install#</span><span style="color:#98C379;--shiki-dark:#98C379"> ls</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">9001.log</span><span style="color:#98C379;--shiki-dark:#98C379">  9002.log</span><span style="color:#98C379;--shiki-dark:#98C379">  9003.log</span><span style="color:#98C379;--shiki-dark:#98C379">  9004.log</span><span style="color:#98C379;--shiki-dark:#98C379">  data1</span><span style="color:#98C379;--shiki-dark:#98C379">  data2</span><span style="color:#98C379;--shiki-dark:#98C379">  data3</span><span style="color:#98C379;--shiki-dark:#98C379">  data4</span><span style="color:#98C379;--shiki-dark:#98C379">  startup_minio.sh</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">root@instance-cspzrq3u:~/minio-install#</span><span style="color:#98C379;--shiki-dark:#98C379"> tail</span><span style="color:#D19A66;--shiki-dark:#D19A66"> -100f</span><span style="color:#98C379;--shiki-dark:#98C379"> 9001.log</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">Formatting</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span><span style="color:#98C379;--shiki-dark:#98C379"> zone,</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span><span style="color:#98C379;--shiki-dark:#98C379"> set</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">s</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#98C379;--shiki-dark:#98C379">,</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 4</span><span style="color:#98C379;--shiki-dark:#98C379"> drives</span><span style="color:#98C379;--shiki-dark:#98C379"> per</span><span style="color:#98C379;--shiki-dark:#98C379"> set.</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">Attempting</span><span style="color:#98C379;--shiki-dark:#98C379"> encryption</span><span style="color:#98C379;--shiki-dark:#98C379"> of</span><span style="color:#98C379;--shiki-dark:#98C379"> all</span><span style="color:#98C379;--shiki-dark:#98C379"> config,</span><span style="color:#98C379;--shiki-dark:#98C379"> IAM</span><span style="color:#98C379;--shiki-dark:#98C379"> users</span><span style="color:#98C379;--shiki-dark:#98C379"> and</span><span style="color:#98C379;--shiki-dark:#98C379"> policies</span><span style="color:#98C379;--shiki-dark:#98C379"> on</span><span style="color:#98C379;--shiki-dark:#98C379"> MinIO</span><span style="color:#98C379;--shiki-dark:#98C379"> backend</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">Status:</span><span style="color:#D19A66;--shiki-dark:#D19A66">         4</span><span style="color:#98C379;--shiki-dark:#98C379"> Online,</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#98C379;--shiki-dark:#98C379"> Offline.</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">Endpoint:</span><span style="color:#98C379;--shiki-dark:#98C379">  http://192.168.16.4:9001</span><span style="color:#98C379;--shiki-dark:#98C379">  http://172.17.0.1:9001</span><span style="color:#98C379;--shiki-dark:#98C379">  http://172.18.0.1:9001</span><span style="color:#98C379;--shiki-dark:#98C379">  http://127.0.0.1:9001</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">       </span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">Browser</span><span style="color:#98C379;--shiki-dark:#98C379"> Access:</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">   http://192.168.16.4:9001</span><span style="color:#98C379;--shiki-dark:#98C379">  http://172.17.0.1:9001</span><span style="color:#98C379;--shiki-dark:#98C379">  http://172.18.0.1:9001</span><span style="color:#98C379;--shiki-dark:#98C379">  http://127.0.0.1:9001</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">       </span></span>
<span class="line"></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">....</span><span style="color:#98C379;--shiki-dark:#98C379"> ...</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>3.2 mc配置与管理</h3>
<p>minio官方提供了mc命令行工具，用于对minio server进行管理。我们首先要为mc创建一个管理本地minio server(:9001)的配置：</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span># mc config host add myminio</span></span></code></pre>
</div><p>这里我们使用mc添加了一个所谓”host”，指向上面创建的minio server(:9001)。上面的命令实质上是在~/.mc/config.json中写入了如下配置：</p>
<div class="language-json" data-ext="json" data-title="json"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># cat ~/.mc/config.json</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    "version"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">"9"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    "hosts"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        "myminio"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            "url"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">"http://localhost:9001"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            "accessKey"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">"minio"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            "secretKey"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">"minio123"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            "api"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">"s3v4"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            "lookup"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">"auto"</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
</div><p>接下来，我们通过mc命令在minio集群中添加三个bucket：</p>
<div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">root@instance-cspzrq3u:~#</span><span style="color:#98C379;--shiki-dark:#98C379"> mc</span><span style="color:#98C379;--shiki-dark:#98C379"> mb</span><span style="color:#98C379;--shiki-dark:#98C379"> myminio/image</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">Bucket</span><span style="color:#98C379;--shiki-dark:#98C379"> created</span><span style="color:#98C379;--shiki-dark:#98C379"> successfully</span><span style="color:#98C379;--shiki-dark:#98C379"> `</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">myminio/image</span><span style="color:#98C379;--shiki-dark:#98C379">`</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">.</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">root@instance-cspzrq3u:~#</span><span style="color:#98C379;--shiki-dark:#98C379"> mc</span><span style="color:#98C379;--shiki-dark:#98C379"> mb</span><span style="color:#98C379;--shiki-dark:#98C379"> myminio/video</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">Bucket</span><span style="color:#98C379;--shiki-dark:#98C379"> created</span><span style="color:#98C379;--shiki-dark:#98C379"> successfully</span><span style="color:#98C379;--shiki-dark:#98C379"> `</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">myminio/video</span><span style="color:#98C379;--shiki-dark:#98C379">`</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">.</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">root@instance-cspzrq3u:~#</span><span style="color:#98C379;--shiki-dark:#98C379"> mc</span><span style="color:#98C379;--shiki-dark:#98C379"> mb</span><span style="color:#98C379;--shiki-dark:#98C379"> myminio/audio</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">Bucket</span><span style="color:#98C379;--shiki-dark:#98C379"> created</span><span style="color:#98C379;--shiki-dark:#98C379"> successfully</span><span style="color:#98C379;--shiki-dark:#98C379"> `</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">myminio/audio</span><span style="color:#98C379;--shiki-dark:#98C379">`</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">.</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">root@instance-cspzrq3u:~#</span><span style="color:#98C379;--shiki-dark:#98C379"> mc</span><span style="color:#98C379;--shiki-dark:#98C379"> ls</span><span style="color:#98C379;--shiki-dark:#98C379"> myminio</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[2020-03-16 15:19:55 CST]      0B audio/</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[2020-03-16 15:19:48 CST]      0B image/</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[2020-03-16 15:19:52 CST]      0B video/</span></span></code></pre>
</div><p>新创建的bucket默认的访问policy是none，即外部无访问权限：</p>
<div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">root@instance-cspzrq3u:~#</span><span style="color:#98C379;--shiki-dark:#98C379"> mc</span><span style="color:#98C379;--shiki-dark:#98C379"> policy</span><span style="color:#98C379;--shiki-dark:#98C379"> get</span><span style="color:#98C379;--shiki-dark:#98C379"> myminio/image</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">Access</span><span style="color:#98C379;--shiki-dark:#98C379"> permission</span><span style="color:#98C379;--shiki-dark:#98C379"> for</span><span style="color:#98C379;--shiki-dark:#98C379"> `</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">myminio/image</span><span style="color:#98C379;--shiki-dark:#98C379">`</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> is</span><span style="color:#98C379;--shiki-dark:#98C379"> `</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">none</span><span style="color:#98C379;--shiki-dark:#98C379">`</span></span></code></pre>
</div><p>根据我们的设计，我们需要给这三个bucket添加外部可读取权限，以image这个bucket为例：</p>
<div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">root@instance-cspzrq3u:~#</span><span style="color:#98C379;--shiki-dark:#98C379"> mc</span><span style="color:#98C379;--shiki-dark:#98C379"> policy</span><span style="color:#98C379;--shiki-dark:#98C379"> set</span><span style="color:#98C379;--shiki-dark:#98C379"> download</span><span style="color:#98C379;--shiki-dark:#98C379"> myminio/image</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">Access</span><span style="color:#98C379;--shiki-dark:#98C379"> permission</span><span style="color:#98C379;--shiki-dark:#98C379"> for</span><span style="color:#98C379;--shiki-dark:#98C379"> `</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">myminio/image</span><span style="color:#98C379;--shiki-dark:#98C379">`</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> is</span><span style="color:#98C379;--shiki-dark:#98C379"> set</span><span style="color:#98C379;--shiki-dark:#98C379"> to</span><span style="color:#98C379;--shiki-dark:#98C379"> `</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">download</span><span style="color:#98C379;--shiki-dark:#98C379">`</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">root@instance-cspzrq3u:~#</span><span style="color:#98C379;--shiki-dark:#98C379"> mc</span><span style="color:#98C379;--shiki-dark:#98C379"> policy</span><span style="color:#98C379;--shiki-dark:#98C379"> get</span><span style="color:#98C379;--shiki-dark:#98C379"> myminio/image</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">Access</span><span style="color:#98C379;--shiki-dark:#98C379"> permission</span><span style="color:#98C379;--shiki-dark:#98C379"> for</span><span style="color:#98C379;--shiki-dark:#98C379"> `</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">myminio/image</span><span style="color:#98C379;--shiki-dark:#98C379">`</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> is</span><span style="color:#98C379;--shiki-dark:#98C379"> `</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">download</span><span style="color:#98C379;--shiki-dark:#98C379">`</span></span></code></pre>
</div><h3>3.3. load balancer设置</h3>
<p>这里我们使用一个nginx前置在minio集群外部，下面是为minio创建的nginx配置文件(/etc/nginx/conf.d/minio.conf)：</p>
<div class="language-nginx line-numbers-mode" data-ext="nginx" data-title="nginx"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">// /</span><span style="color:#D19A66;--shiki-dark:#D19A66">etc/nginx</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/conf.d/minio.conf</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> upstream minio_cluster {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    server localhost:9001;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    server</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> localhost:9002;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    server</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> localhost:9003;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    server</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> localhost:9004;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">server</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD"> listen </span><span style="color:#D19A66;--shiki-dark:#D19A66">9000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD"> server_name </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">myminio.tonybai.com;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # To allow special characters in headers</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD"> ignore_invalid_headers </span><span style="color:#D19A66;--shiki-dark:#D19A66">off</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # Allow any size file to be uploaded.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # Set to a value such as 1000m; to restrict file size to a specific value</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD"> client_max_body_size </span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # To disable buffering</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD"> proxy_buffering </span><span style="color:#D19A66;--shiki-dark:#D19A66">off</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">location</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> / {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">   proxy_set_header </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">X-Real-IP $</span><span style="color:#E06C75;--shiki-dark:#E06C75">remote_addr</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">   proxy_set_header </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">X-Forwarded-For $</span><span style="color:#E06C75;--shiki-dark:#E06C75">proxy_add_x_forwarded_for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">   proxy_set_header </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">X-Forwarded-Proto $</span><span style="color:#E06C75;--shiki-dark:#E06C75">scheme</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">   proxy_set_header </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">Host $</span><span style="color:#E06C75;--shiki-dark:#E06C75">http_host</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">   proxy_connect_timeout </span><span style="color:#D19A66;--shiki-dark:#D19A66">300</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">   # Default is HTTP/1, keepalive is only enabled in HTTP/1.1</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">   proxy_http_version </span><span style="color:#D19A66;--shiki-dark:#D19A66">1.1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">   proxy_set_header </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">Connection </span><span style="color:#98C379;--shiki-dark:#98C379">""</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">   chunked_transfer_encoding </span><span style="color:#D19A66;--shiki-dark:#D19A66">off</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">   proxy_pass </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">http://minio_cluster;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">location</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> /image/ {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">   proxy_set_header </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">X-Real-IP $</span><span style="color:#E06C75;--shiki-dark:#E06C75">remote_addr</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">   proxy_set_header </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">X-Forwarded-For $</span><span style="color:#E06C75;--shiki-dark:#E06C75">proxy_add_x_forwarded_for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">   proxy_set_header </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">X-Forwarded-Proto $</span><span style="color:#E06C75;--shiki-dark:#E06C75">scheme</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">   proxy_set_header </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">Host $</span><span style="color:#E06C75;--shiki-dark:#E06C75">http_host</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">   proxy_connect_timeout </span><span style="color:#D19A66;--shiki-dark:#D19A66">300</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">   # Default is HTTP/1, keepalive is only enabled in HTTP/1.1</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">   proxy_http_version </span><span style="color:#D19A66;--shiki-dark:#D19A66">1.1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">   proxy_set_header </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">Connection </span><span style="color:#98C379;--shiki-dark:#98C379">""</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">   chunked_transfer_encoding </span><span style="color:#D19A66;--shiki-dark:#D19A66">off</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">   client_max_body_size </span><span style="color:#D19A66;--shiki-dark:#D19A66">1000m</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">   proxy_buffering </span><span style="color:#D19A66;--shiki-dark:#D19A66">off</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">   proxy_pass </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">http://minio_cluster;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重启nginx（nginx -s reload)。</p>
<p>我们使用浏览器访问一下<code>http://myminio.tonybai.com:9000/</code>，登录后，你将看到如下页面：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301417059.png" alt="image-20220715200904574" tabindex="0" loading="lazy"><figcaption>image-20220715200904574</figcaption></figure>
<p>选择左侧的”image” bucket，点击右下角的”+”号，我们可以上传一张图片：gopher-daily-logo.png，上传后，我们退出登录。然后通过地址<code>http://myminio.tonybai.com:9000/image/gopher-daily-logo.png</code>访问该图片。你也可以通过wget命令下载该图片：</p>
<div class="language-bash" data-ext="bash" data-title="bash"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">$wget</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> -c http://myminio.tonybai.com:9000/image/gopher-daily-logo.png</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">--2020-03-16</span><span style="color:#98C379;--shiki-dark:#98C379"> 15:40:20--</span><span style="color:#98C379;--shiki-dark:#98C379">  http://myminio.tonybai.com:9000/image/gopher-daily-logo.png</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">正在解析主机</span><span style="color:#98C379;--shiki-dark:#98C379"> myminio.tonybai.com</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (myminio.tonybai.com)... 106.12.69.83</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">正在连接</span><span style="color:#98C379;--shiki-dark:#98C379"> myminio.tonybai.com</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (myminio.tonybai.com)|</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">106.12.69.83</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">|</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">:9000...</span><span style="color:#98C379;--shiki-dark:#98C379"> 已连接。</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">已发出</span><span style="color:#98C379;--shiki-dark:#98C379"> HTTP</span><span style="color:#98C379;--shiki-dark:#98C379"> 请求，正在等待回应...</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 200</span><span style="color:#98C379;--shiki-dark:#98C379"> OK</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">长度：59736</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (58K) [image/png]</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">正在保存至:</span><span style="color:#98C379;--shiki-dark:#98C379"> “gopher-daily-logo.png”</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">gopher-daily-logo.png</span><span style="color:#98C379;--shiki-dark:#98C379">        100%[===========================================</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">=&gt;</span><span style="color:#98C379;--shiki-dark:#98C379">]</span><span style="color:#98C379;--shiki-dark:#98C379">  58.34K</span><span style="color:#98C379;--shiki-dark:#98C379">   253KB/s</span><span style="color:#98C379;--shiki-dark:#98C379">  用时</span><span style="color:#98C379;--shiki-dark:#98C379"> 0.2s</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   </span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">2020-03-16</span><span style="color:#98C379;--shiki-dark:#98C379"> 15:40:20</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (253 </span><span style="color:#98C379;--shiki-dark:#98C379">KB/s</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) - 已保存 “gopher-daily-logo.png” [59736/59736])</span></span></code></pre>
</div><h2>4 开启多版本控制</h2>
<p>要开启多版本控制，必须开启纠删码模式</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301417082.png" alt="image-20220715165955626" tabindex="0" loading="lazy"><figcaption>image-20220715165955626</figcaption></figure>
<p>开启纠删码模式后，我们上传的文件可以看到历史版本</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301417110.png" alt="image-20220715170326538" tabindex="0" loading="lazy"><figcaption>image-20220715170326538</figcaption></figure>
<p>我们再存储可以看到他的多版本文件</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301417140.png" alt="image-20220715170931323" tabindex="0" loading="lazy"><figcaption>image-20220715170931323</figcaption></figure>
<h2>参考文章</h2>
<p><a href="https://tonybai.com/2020/03/16/build-high-performance-object-storage-with-minio-part1-prototype/" target="_blank" rel="noopener noreferrer">使用minio搭建高性能对象存储-第一部分：原型</a></p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301417996.png" type="image/png"/>
    </item>
    <item>
      <title>Minio进阶 - Minio+vue-uploader 分片上传方案及案例详解</title>
      <link>https://mrjackc.github.io/posts/Architect/minio/minio-uploader.html</link>
      <guid>https://mrjackc.github.io/posts/Architect/minio/minio-uploader.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">Minio进阶 - Minio+vue-uploader 分片上传方案及案例详解</source>
      <description>Minio进阶 - Minio+vue-uploader 分片上传方案及案例详解 1. 前言 我们之前分析过Minio 的上传接口源码，其是进行了分块，再上传分块到Minio 服务器，最后再对块进行合并。 针对大文件的上传，如果采用上传到文件服务，再上传到Minio，其效率是非常低的，首先上传到文件服务（会存放在Tomcat 临时目录）就已经比较慢了。...</description>
      <category>Minio</category>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>1. 前言</h2>
<p>我们之前分析过Minio 的上传接口源码，其是进行了分块，再上传分块到Minio 服务器，最后再对块进行合并。</p>
<p>针对大文件的上传，如果采用上传到文件服务，再上传到Minio，其效率是非常低的，首先上传到文件服务（会存放在Tomcat 临时目录）就已经比较慢了。</p>
<p>针对大文件的上传，我们需要一个优化方案。</p>
<h3>1.1 优化方案</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301417264.png" alt="image-20220724203557314" tabindex="0" loading="lazy"><figcaption>image-20220724203557314</figcaption></figure>
<ol>
<li>前端服务进行大文件分片处理，将分片信息传递给文件服务，文件服务返回所有分片的上传链接及uploadId。</li>
<li>前端服务直接请求Minio 服务器，并发上传分片</li>
<li>所有分片上传完成后，使用uploadId 调用文件服务进行文件合并</li>
</ol>
<h2>2. 案例</h2>
<p>本案例基于<a href="https://blog.csdn.net/qq_43437874/article/details/120920171" target="_blank" rel="noopener noreferrer">Spring Boot集成Minio</a></p>
<h3>2.1 后端获取分片上传URL</h3>
<p>在Minio 的上传接口源码中，创建分片请求的方法是<code>protected</code> 关键字修饰的，无法通过创建<code>MinioClient</code>对象来访问，那么只能通过子类继承来访问了。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301417314.png" alt="image-20220724203729888" tabindex="0" loading="lazy"><figcaption>image-20220724203729888</figcaption></figure>
<p>首先自定义一个Minio 客户端类，继承MinioClient类，其作用主要是将以下几个方法暴露出来，以便调用：</p>
<ul>
<li>createMultipartUpload：创建分片请求，返回uploadId</li>
<li>listMultipart：查询分片信息</li>
<li>completeMultipartUpload：根据uploadId 合并已上传的分片</li>
</ul>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> PearlMinioClient</span><span style="color:#C678DD;--shiki-dark:#C678DD"> extends</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> MinioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    protected</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> PearlMinioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">MinioClient</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> client</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        super</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(client);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 创建分片上传请求</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">       存储桶</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> region</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">           区域</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> objectName</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">       对象名</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> headers</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">          消息头</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> extraQueryParams</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 额外查询参数</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> CreateMultipartUploadResponse</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> createMultipartUpload</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> region</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> objectName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Multimap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">headers</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Multimap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">extraQueryParams</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#C678DD;--shiki-dark:#C678DD"> throws</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> NoSuchAlgorithmException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> InsufficientDataException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> IOException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> InvalidKeyException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ServerException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> XmlParserException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ErrorResponseException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> InternalException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> InvalidResponseException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> super</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">createMultipartUpload</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bucketName, region, objectName, headers, extraQueryParams);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 完成分片上传，执行合并文件</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">       存储桶</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> region</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">           区域</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> objectName</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">       对象名</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> uploadId</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         上传ID</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> parts</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            分片</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> extraHeaders</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     额外消息头</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> extraQueryParams</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 额外查询参数</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ObjectWriteResponse</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> completeMultipartUpload</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> region</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> objectName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> uploadId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Part</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[] </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">parts</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Multimap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">extraHeaders</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Multimap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">extraQueryParams</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#C678DD;--shiki-dark:#C678DD"> throws</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> NoSuchAlgorithmException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> InsufficientDataException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> IOException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> InvalidKeyException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ServerException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> XmlParserException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ErrorResponseException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> InternalException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> InvalidResponseException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> super</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">completeMultipartUpload</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bucketName, region, objectName, uploadId, parts, extraHeaders, extraQueryParams);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 查询分片数据</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">       存储桶</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> region</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">           区域</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> objectName</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">       对象名</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> uploadId</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         上传ID</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> extraHeaders</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     额外消息头</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> extraQueryParams</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 额外查询参数</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ListPartsResponse</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> listMultipart</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> region</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> objectName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Integer</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> maxParts</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Integer</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> partNumberMarker</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> uploadId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Multimap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">extraHeaders</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Multimap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">extraQueryParams</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#C678DD;--shiki-dark:#C678DD"> throws</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> NoSuchAlgorithmException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> InsufficientDataException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> IOException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> InvalidKeyException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ServerException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> XmlParserException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ErrorResponseException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> InternalException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> InvalidResponseException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> super</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">listParts</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bucketName, region, objectName, maxParts, partNumberMarker, uploadId, extraHeaders, extraQueryParams);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在配置类中注入我们的自定义客户端：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Bean</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SneakyThrows</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ConditionalOnMissingBean</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PearlMinioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">class</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> PearlMinioClient</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> minioClient</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">OssProperties</span><span style="color:#E06C75;--shiki-dark:#E06C75"> ossProperties) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    MinioClient</span><span style="color:#E06C75;--shiki-dark:#E06C75"> minioClient </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> MinioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">endpoint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ossProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getEndpoint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">())</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">credentials</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ossProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getAccessKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ossProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getSecretKey</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">())</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    return</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> PearlMinioClient</span><span style="color:#E06C75;--shiki-dark:#E06C75">(minioClient)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">}</span></span></code></pre>
</div><p>在模板类MinioTemplate中，将之前的MinIO 客户端换成PearlMinioClient。并将上面关于分片的几个操作方法集成进来。</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Slf4j</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">@</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">AllArgsConstructor</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> MinioTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * MinIO 客户端</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    PearlMinioClient</span><span style="color:#E06C75;--shiki-dark:#E06C75"> pearlMinioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * MinIO 配置类</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">    OssProperties</span><span style="color:#E06C75;--shiki-dark:#E06C75"> ossProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 查询所有存储桶</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@return</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> Bucket 集合</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SneakyThrows</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> listBuckets</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> pearlMinioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">listBuckets</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 桶是否存在</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 桶名</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@return</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 是否存在</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SneakyThrows</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> boolean</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> bucketExists</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> pearlMinioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucketExists</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">BucketExistsArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bucketName).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 创建存储桶</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 桶名</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SneakyThrows</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> makeBucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucketExists</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bucketName)) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            pearlMinioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">makeBucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">MakeBucketArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bucketName).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 删除一个空桶 如果存储桶存在对象不为空时，删除会报错。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 桶名</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SneakyThrows</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> removeBucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        pearlMinioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">removeBucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">RemoveBucketArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bucketName).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 上传文件</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> inputStream</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      流</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> originalFileName</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 原始文件名</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">       桶名</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@return</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> OssFile</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SneakyThrows</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> OssFile</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> putObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">InputStream</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> inputStream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> originalFileName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> uuidFileName</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> generateOssUuidFileName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(originalFileName);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        try</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">StrUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">isEmpty</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bucketName)) {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                bucketName </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ossProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getDefaultBucketName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            pearlMinioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">putObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    PutObjectArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bucketName).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(uuidFileName).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">stream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                            inputStream, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">inputStream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">available</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                            .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            return</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> OssFile</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(uuidFileName, originalFileName);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD">finally</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (inputStream </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                inputStream</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">close</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 返回临时带签名、过期时间一天、Get请求方式的访问URL</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  桶名</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> ossFilePath</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> Oss文件路径</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@return</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SneakyThrows</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getPresignedObjectUrl</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> ossFilePath</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">queryParams</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> pearlMinioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getPresignedObjectUrl</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                GetPresignedObjectUrlArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">method</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Method</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PUT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bucketName)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(ossFilePath)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">expiry</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">60</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> *</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 60</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> *</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 24</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">extraQueryParams</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(queryParams)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * GetObject接口用于获取某个文件（Object）。此操作需要对此Object具有读权限。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  桶名</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> ossFilePath</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> Oss文件路径</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SneakyThrows</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> InputStream</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> ossFilePath</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> pearlMinioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                GetObjectArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bucketName).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(ossFilePath).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 查询桶的对象信息</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 桶名</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> recursive</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  是否递归查询</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@return</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SneakyThrows</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Iterable</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Result</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> listObjects</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#C678DD;--shiki-dark:#C678DD">boolean</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> recursive</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> pearlMinioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">listObjects</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                ListObjectsArgs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">builder</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"my-bucketname"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">recursive</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(recursive).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">build</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 获取带签名的临时上传元数据对象，前端可获取后，直接上传到Minio</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> fileName</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@return</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SneakyThrows</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getPresignedPostFormData</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> fileName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 为存储桶创建一个上传策略，过期时间为7天</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        PostPolicy</span><span style="color:#E06C75;--shiki-dark:#E06C75"> policy</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> PostPolicy</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bucketName, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ZonedDateTime</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">now</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">plusDays</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 设置一个参数key，值为上传对象的名称</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        policy</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">addEqualsCondition</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"key"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, fileName);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 添加Content-Type，例如以"image/"开头，表示只能上传照片，这里吃吃所有</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        policy</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">addStartsWithCondition</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"Content-Type"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">MediaType</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ALL_VALUE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 设置上传文件的大小 64kiB to 10MiB.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //policy.addContentLengthRangeCondition(64 * 1024, 10 * 1024 * 1024);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> pearlMinioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getPresignedPostFormData</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(policy);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *  上传分片上传请求，返回uploadId</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> CreateMultipartUploadResponse</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> uploadId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> region</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> objectName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Multimap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">headers</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Multimap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">extraQueryParams</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#C678DD;--shiki-dark:#C678DD"> throws</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> NoSuchAlgorithmException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> InsufficientDataException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> IOException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> InvalidKeyException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ServerException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> XmlParserException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ErrorResponseException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> InternalException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> InvalidResponseException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> pearlMinioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">createMultipartUpload</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bucketName, region, objectName, headers, extraQueryParams);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 完成分片上传，执行合并文件</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">       存储桶</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> region</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">           区域</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> objectName</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">       对象名</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> uploadId</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         上传ID</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> parts</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            分片</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> extraHeaders</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     额外消息头</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> extraQueryParams</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 额外查询参数</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ObjectWriteResponse</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> completeMultipartUpload</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> region</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> objectName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> uploadId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Part</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[] </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">parts</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Multimap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">extraHeaders</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Multimap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">extraQueryParams</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#C678DD;--shiki-dark:#C678DD"> throws</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> NoSuchAlgorithmException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> InsufficientDataException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> IOException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> InvalidKeyException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ServerException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> XmlParserException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ErrorResponseException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> InternalException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> InvalidResponseException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> pearlMinioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">completeMultipartUpload</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bucketName, region, objectName, uploadId, parts, extraHeaders, extraQueryParams);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> generateOssUuidFileName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> originalFilename</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#98C379;--shiki-dark:#98C379"> "files"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> StrUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SLASH</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> DateUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">format</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Date</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(), </span><span style="color:#98C379;--shiki-dark:#98C379">"yyyy-MM-dd"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> StrUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SLASH</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> UUID</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">randomUUID</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> StrUtil</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">UNDERLINE</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> originalFilename;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 初始化默认存储桶</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PostConstruct</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> initDefaultBucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> defaultBucketName</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ossProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getDefaultBucketName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">bucketExists</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(defaultBucketName)) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">info</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"默认存储桶：defaultBucketName已存在"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">info</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"创建默认存储桶：defaultBucketName"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">            makeBucket</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ossProperties</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getDefaultBucketName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        ;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 查询分片数据</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">       存储桶</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> region</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">           区域</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> objectName</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">       对象名</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> uploadId</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         上传ID</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> extraHeaders</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     额外消息头</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> extraQueryParams</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 额外查询参数</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ListPartsResponse</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> listMultipart</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> region</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> objectName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Integer</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> maxParts</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Integer</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> partNumberMarker</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> uploadId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Multimap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">extraHeaders</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Multimap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">extraQueryParams</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#C678DD;--shiki-dark:#C678DD"> throws</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> NoSuchAlgorithmException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> InsufficientDataException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> IOException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> InvalidKeyException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ServerException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> XmlParserException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ErrorResponseException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> InternalException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> InvalidResponseException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> pearlMinioClient</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">listMultipart</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bucketName, region, objectName, maxParts, partNumberMarker, uploadId, extraHeaders, extraQueryParams);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来就是创建请求了，返回一个Map 集合，实际开发应该封装为响应对象。这里主要是接受分片数量，然后为每一个分块，创建一个带签名的上传URL。</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 返回分片上传需要的签名数据URL及 uploadId</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> bucketName</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> fileName</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@return</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">GetMapping</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"/createMultipartUpload"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SneakyThrows</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ResponseBody</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Map</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E06C75;--shiki-dark:#E06C75"> Object</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> createMultipartUpload</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> bucketName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> fileName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Integer</span><span style="color:#E06C75;--shiki-dark:#E06C75"> chunkSize) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 1. 根据文件名创建签名</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> result </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> HashMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 2. 获取uploadId</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        CreateMultipartUploadResponse</span><span style="color:#E06C75;--shiki-dark:#E06C75"> response </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> minioTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">uploadId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bucketName, </span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, fileName, </span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> uploadId </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> response</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">result</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">uploadId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        result</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"uploadId"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, uploadId);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 3. 请求Minio 服务，获取每个分块带签名的上传URL</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        Map</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> reqParams </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> HashMap</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        reqParams</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"uploadId"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, uploadId);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> partList </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75">()</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 4. 循环分块数 从1开始</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;=</span><span style="color:#E06C75;--shiki-dark:#E06C75"> chunkSize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#E06C75;--shiki-dark:#E06C75"> i</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">++</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            reqParams</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"partNumber"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">valueOf</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(i));</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> uploadUrl </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> minioTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getPresignedObjectUrl</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(bucketName, fileName, reqParams);</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 获取URL</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            result</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">put</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"chunk_"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">), uploadUrl);</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 添加到集合</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> result</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>2.2. 前端执行分片上传</h3>
<p>前端依然是采用<code>vue-uploader</code>，首先在文件添加的事件中，后台请求创建分片URL 上传接口，并将<code>uploadId</code>、每个分块的上传链接设置到<code>file.chunkUrlData</code>属性中：</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">    onFileAdded</span><span style="color:#E06C75;--shiki-dark:#E06C75">(file) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">'文件被添加：'</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">panelShow</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      // 计算MD5</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      // this.computeMD5(file, this.options.chunkSize);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      // 获取分块上传链接</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      // eslint-disable-next-line no-unused-vars</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">      var</span><span style="color:#E06C75;--shiki-dark:#E06C75"> res </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getChunkUploadUrl</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(file);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">'文件被添加查看是否获取到分块URL'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">chunkUrlData</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    async </span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getChunkUploadUrl</span><span style="color:#E06C75;--shiki-dark:#E06C75">(file) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      // 向具有指定ID的用户发出请求</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(file);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">'获取分块上传链接'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">      const</span><span style="color:#E06C75;--shiki-dark:#E06C75"> fileName </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 文件名</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">      const</span><span style="color:#E06C75;--shiki-dark:#E06C75"> chunkSize </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">chunks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">length</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 分片数</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      // 请求后台返回每个分块的上传链接</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      // eslint-disable-next-line no-unused-vars</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">      const</span><span style="color:#E06C75;--shiki-dark:#E06C75"> res </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E06C75;--shiki-dark:#E06C75"> await </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">$http</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">'/file/createMultipartUpload'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        params</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">          fileName</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> fileName,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">          chunkSize</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> chunkSize,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">          bucketName</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#98C379;--shiki-dark:#98C379"> 'pearl-buckent'</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      })</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">then</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">function</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (response) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">          console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">'获取到的uploadId:'</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> response</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">data</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">uploadId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">          console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">'获取到的分片上传集合URL:'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">          console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">response</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">data</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">          file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">chunkUrlData</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> response</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">data</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        })</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">catch</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">function</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (error) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">          console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(error);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        });</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在options中，我们首先要设置以下几个重要选项：</p>
<p>动态的target，因为每个分块的上传路径都是不一样的，所以要从file.chunkUrlData取出当前分块的URL<br>
分块大小chunkSize，Minio 默认是5MB，我们这里也是用这个大小<br>
查询参数query，因为每个分块上传时都需要一个partNumber参数，可以通过这个query函数来进行传递<br>
其他兼容Minio分片上传配置，详情见注释</p>
<div class="language-js line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      options</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 目标上传 URL，可以是字符串也可以是函数，如果是函数的话，则会传入 Uploader.File 实例、</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 当前块 Uploader.Chunk 以及是否是测试模式，默认值为 '/'</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        target</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#C678DD;--shiki-dark:#C678DD">function</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">chunkFile</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">mode</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">          // 分块上传前每次都会进入到该方法</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">          console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">'进入到target'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">          console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">'文件名：'</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">          console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">'当前分块序号'</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> chunkFile</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">offset</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">          console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">'获取到分块上传URL：'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">          console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">chunkUrlData</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">          const</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> key</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#98C379;--shiki-dark:#98C379"> 'chunk_'</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> chunkFile</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">offset</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 键值 用于获取分块链接URL</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">          return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">chunkUrlData</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[</span><span style="color:#E06C75;--shiki-dark:#E06C75">key</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">];</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        },</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 为每个块向服务器发出 GET 请求，以查看它是否已经存在。如果在服务器端实现，</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 这将允许在浏览器崩溃甚至计算机重新启动后继续上传。(默认: true)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        testChunks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#D19A66;--shiki-dark:#D19A66">false</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 分块时按照该值来分。最后一个上传块的大小是可能是大于等于1倍的这个值但是小于两倍的这个值大小，</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 可见这个 Issue #51，默认 1*1024*1024。</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        chunkSize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#D19A66;--shiki-dark:#D19A66">5</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> *</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1024</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> *</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1024</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 强制所有块小于或等于 chunkSize。否则，最后一个块将大于或等于chunkSize。(默认: false)</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        forceChunkSize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#D19A66;--shiki-dark:#D19A66">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 包含在带有数据的多部分 POST 中的额外参数。这可以是一个对象或一个函数。如果是一个函数，</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 它将被传递一个 Uploader.File、一个 Uploader.Chunk 对象和一个 isTest 布尔值（默认值{}：）</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        query</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#C678DD;--shiki-dark:#C678DD">function</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">chunkFile</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">mode</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">          const</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> data</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span><span style="color:#98C379;--shiki-dark:#98C379">'partNumber'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">chunkFile</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">offset</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">};</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">          return</span><span style="color:#E06C75;--shiki-dark:#E06C75"> data</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        },</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        uploadMethod</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">'PUT'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //  当上传的时候所使用的是方式，可选 multipart、octet，默认 multipart，参考 multipart vs octet。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // MiniO 的分片不能使用表单</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        method</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">'octet'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //  处理请求参数，默认 function (params) {return params}，一般用于修改参数名字或者删除参数。0.5.2版本后，</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Minio的连接后面不能拼接参数，所以设置为空</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        processParams</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#C678DD;--shiki-dark:#C678DD">function</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">params</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) { </span><span style="color:#C678DD;--shiki-dark:#C678DD">return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {}; }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // headers: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //  'Content-Type': 'binary/octet-stream'</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">      },</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>2.3. 合并文件</h3>
<p>后台提供一个文件合并的接口，根据<code>uploadId</code>去查询分块信息，然后进行合并操作：</p>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 分片上传完后合并</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> objectName</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 文件全路径名称</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> uploadId</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">   返回的uploadId</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@return</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> /</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">GetMapping</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#98C379;--shiki-dark:#98C379">"/completeMultipartUpload"</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">SneakyThrows</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ResponseBody</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> boolean</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> completeMultipartUpload</span><span style="color:#E06C75;--shiki-dark:#E06C75">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> bucketName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> objectName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> uploadId) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        try</span><span style="color:#E06C75;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            Part</span><span style="color:#E06C75;--shiki-dark:#E06C75">[] parts </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Part</span><span style="color:#E06C75;--shiki-dark:#E06C75">[</span><span style="color:#D19A66;--shiki-dark:#D19A66">10000</span><span style="color:#E06C75;--shiki-dark:#E06C75">]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            ListPartsResponse</span><span style="color:#E06C75;--shiki-dark:#E06C75"> partResult </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> minioTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">listMultipart</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"pearl-buckent"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, objectName, </span><span style="color:#D19A66;--shiki-dark:#D19A66">1000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, uploadId, </span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> partNumber </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            System</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">err</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">println</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">partResult</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">result</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">partList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">size</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#98C379;--shiki-dark:#98C379"> "========================"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            for</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Part</span><span style="color:#E06C75;--shiki-dark:#E06C75"> part </span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> partResult</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">result</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">partList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                parts[partNumber </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">-</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span><span style="color:#E06C75;--shiki-dark:#E06C75">] </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> Part</span><span style="color:#E06C75;--shiki-dark:#E06C75">(partNumber</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> part</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">etag</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#E06C75;--shiki-dark:#E06C75">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">                partNumber</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">++;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">            }</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            minioTemplate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">completeMultipartUpload</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"pearl-buckent"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, objectName, uploadId, parts, </span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        } </span><span style="color:#C678DD;--shiki-dark:#C678DD">catch</span><span style="color:#E06C75;--shiki-dark:#E06C75"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Exception</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="color:#E06C75;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            e</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">printStackTrace</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            return</span><span style="color:#D19A66;--shiki-dark:#D19A66"> false</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#D19A66;--shiki-dark:#D19A66"> true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>前端代码中，我们在文件上传成功事件中调用后台合并接口：</p>
<div class="language-js line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 单个文件上传成功</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">onFileSuccess</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E06C75;--shiki-dark:#E06C75">rootFile</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E06C75;--shiki-dark:#E06C75">file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E06C75;--shiki-dark:#E06C75">message</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">  console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">'单个文件上传成功'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, </span><span style="color:#E5C07B;--shiki-dark:#E5C07B">arguments</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 调用后台合并文件</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">  const</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> fileName</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">; </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 文件名</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">  const</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> uploadId</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">chunkUrlData</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E06C75;--shiki-dark:#E06C75">uploadId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">; </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 分片数</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">  console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">  this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">$http</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">'/file/completeMultipartUpload'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">    params</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      objectName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#E06C75;--shiki-dark:#E06C75">fileName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      uploadId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#E06C75;--shiki-dark:#E06C75">uploadId</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75">      bucketName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: </span><span style="color:#98C379;--shiki-dark:#98C379">'pearl-buckent'</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  })</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">then</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">function</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">response</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E06C75;--shiki-dark:#E06C75">response</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    })</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">catch</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">function</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">error</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">      console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E06C75;--shiki-dark:#E06C75">error</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    });</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">  console</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">'合并完成'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>2.4. 测试</h3>
<p>首先添加一个文件，可以看到打印了<code>uploadId</code>和每个分块上传的URL：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301417343.png" alt="image-20220724204550517" tabindex="0" loading="lazy"><figcaption>image-20220724204550517</figcaption></figure>
<p>点击开始按钮，可以看到多个分片的<a href="https://so.csdn.net/so/search?q=%E5%B9%B6%E5%8F%91&amp;spm=1001.2101.3001.7020" target="_blank" rel="noopener noreferrer">并发</a>请求，最后调用了合并文件接口，并返回了true。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301417368.png" alt="image-20220724204612100" tabindex="0" loading="lazy"><figcaption>image-20220724204612100</figcaption></figure>
<p>查看Minio 控制台，可以看到文件大小都一致。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301417390.png" alt="image-20220724204641755" tabindex="0" loading="lazy"><figcaption>image-20220724204641755</figcaption></figure>
<p>下载上传的文件，进行播放，发现一切正常，说明基本上就实现该功能了，可能还会有其他小问题，就需要开发时进行严格的测试并修改了。</p>
<h2>参考文章</h2>
<p><a href="https://yunyanchengyu.blog.csdn.net/article/details/123429986" target="_blank" rel="noopener noreferrer">Minio入门系列【18】Minio+vue-uploader 分片上传方案及案例详解（源码文尾附上）</a></p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MrJackC/PicGoImages/other/202404301417264.png" type="image/png"/>
    </item>
    <item>
      <title>Hive 总结</title>
      <link>https://mrjackc.github.io/posts/BigData/02_Hive%E6%80%BB%E7%BB%93/Hive%20%E6%80%BB%E7%BB%93.html</link>
      <guid>https://mrjackc.github.io/posts/BigData/02_Hive%E6%80%BB%E7%BB%93/Hive%20%E6%80%BB%E7%BB%93.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">Hive 总结</source>
      <description>Hive 总结 总结人：XXX 2020.04.29 0.补充 0.1 什么是hive 0.2 优缺点 0.3 Hive架构原理 image-20200720000427660 0.4 hive与数据库的比较 由于 Hive 采用了类似SQL 的查询语言 HQL(Hive Query Language)，因此很容易将 Hive 理解为数据库。其实从结构...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<hr>
<p>总结人：XXX 2020.04.29</p>
<h2>0.补充</h2>
<h3>0.1 什么是hive</h3>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. Hive：由Facebook开源用于解决</span><span style="color:#98C379;--shiki-dark:#98C379">'海量结构化日志'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">的数据统计</span><span style="color:#98C379;--shiki-dark:#98C379">'工具'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. Hive是基于Hadoop的一个</span><span style="color:#98C379;--shiki-dark:#98C379">'数据仓库工具'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">，可以将结构化的数据文件</span><span style="color:#98C379;--shiki-dark:#98C379">'映射'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">为一张表，并提供类SQL查询功能。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. </span><span style="color:#98C379;--shiki-dark:#98C379">'本质'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">：将HQL转化成MapReduce程序</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. </span><span style="color:#98C379;--shiki-dark:#98C379">'原理介绍'</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   	（</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">）Hive处理的数据存储在HDFS</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    （</span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">）Hive分析数据底层的实现是MapReduce</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    （</span><span style="color:#D19A66;--shiki-dark:#D19A66">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">）执行程序运行在Yarn上</span></span></code></pre>
</div><h3>0.2 优缺点</h3>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 1. 优点：</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">   1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. 操作接口采用类SQL语法，提供快速开发的能力（简单、容易上手）。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">   2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. 避免了去写MapReduce，减少开发人员的学习成本。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">   3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. Hive的执行延迟比较高，因此Hive常用于数据分析，对实时性要求不高的场合。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">   4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. Hive优势在于处理大数据，对于处理小数据没有优势，因为Hive的执行延迟比较高。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">   5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. Hive支持用户自定义函数，用户可以根据自己的需求来实现自己的函数。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 2. 缺点</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">   1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. Hive的HQL表达能力有限</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">   2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. 迭代式算法无法表达</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">   3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. 数据挖掘方面不擅长，由于MapReduce数据处理流程的限制，效率更高的算法却无法实现。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">   4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. Hive的效率比较低</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    （</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">）Hive自动生成的MapReduce作业，通常情况下不够智能化</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    （</span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">）Hive调优比较困难，粒度较粗</span></span></code></pre>
</div><h3>0.3 Hive架构原理</h3>
<img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200720000427.png" alt="image-20200720000427660" style="zoom: 67%;">
<div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 1. 用户接口：Client</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">	CLI（command-</span><span style="color:#C678DD;--shiki-dark:#C678DD">line</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> interface）、JDBC/ODBC(jdbc访问hive)、WEBUI（浏览器访问hive）</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 2. 元数据：Metastore</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">	元数据包括：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">	   a、表名</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">	   b、表所属的数据库（默认是default）</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">	   c、表的拥有者</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">	   d、列/分区字段</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">	   e、表的类型（是否是外部表）、</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">	   f、表的数据所在目录等；</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">	'默认存储在自带的derby数据库中，推荐使用MySQL存储Metastore'</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 3. Hadoop</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">	使用HDFS进行存储，使用MapReduce进行计算。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 4. 驱动器：Driver</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">	1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. </span><span style="color:#98C379;--shiki-dark:#98C379">'解析器'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">（</span><span style="color:#C678DD;--shiki-dark:#C678DD">SQL</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> Parser）：将SQL字符串转换成抽象语法树AST，这一步一般都用第三方工具库完成，</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">	   比如antlr；对AST进行语法分析，比如表是否存在、字段是否存在、SQL语义是否有误。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">    2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. </span><span style="color:#98C379;--shiki-dark:#98C379">'编译器'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">（Physical Plan）：将AST编译生成逻辑执行计划。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">    3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. </span><span style="color:#98C379;--shiki-dark:#98C379">'优化器'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">（Query Optimizer）：对逻辑执行计划进行优化。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">    4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. </span><span style="color:#98C379;--shiki-dark:#98C379">'执行器'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">（Execution）：把逻辑执行计划转换成可以运行的物理计划。对于Hive来说，就是MR/Spark。</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>0.4 hive与数据库的比较</h3>
<blockquote>
<p>由于 Hive 采用了类似SQL 的查询语言 HQL(Hive Query Language)，因此很容易将 Hive 理解为数据库。其实从结构上来看，Hive 和数据库除了拥有类似的查询语言，再无类似之处</p>
</blockquote>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 1. 查询语言</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    hive有类似sql的hql查询语言</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 2. 数据更新</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">	1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. hive针对数据仓库而设计，适合读多写少的场景</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">	2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. mysql的数据需要经常进行修改。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 3.  执行延迟</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">	1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. hive没有索引 + 基于mr计算，延迟性高；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">	2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. 这个低是有条件的，即数据规模较小，当数据规模大到超过数据库的处理能力的时候，Hive的并行计算显然能体现出优势</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 4. 数据规模</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">    1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. 支持大数据规模的数据</span></span></code></pre>
</div><h3>0.5 tez引擎</h3>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. </span><span style="color:#98C379;--shiki-dark:#98C379">'mr引擎'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">：每个任务及任务之间都需要落盘</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. </span><span style="color:#98C379;--shiki-dark:#98C379">'Tez引擎'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">：可以将多个有依赖的作业转换为一个作业，这样只需写一次HDFS，且中间节点较少，从而大大提升作业的计算性能。</span></span></code></pre>
</div><p>![image-20200720001521940](<a href="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic" target="_blank" rel="noopener noreferrer">https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic</a> GO/20200720001522.png)</p>
<h2>一、HiveJDBC客户端基本操作</h2>
<h3>1.1 HvieJDBC的登入与退出</h3>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 方式一：使用beeline方式</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">访问方式：beeline -u jdbc:hive2://hadoop102:</span><span style="color:#D19A66;--shiki-dark:#D19A66">10000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> -n lianzp</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">退出方式：！quit  、!exit 、 ctrl + c</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">前提：mysql服务和hiveservice2服务一定要启动</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 方式二： 使用hive的方式</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">访问方式：hive</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">退出方式：quit； exit；</span></span></code></pre>
</div><h3>1.2 Hive常用的交互命令</h3>
<blockquote>
<ul>
<li>
<p>“-e” 不进入hive的交互窗口执行sql语句**</p>
</li>
<li>
<p>“-f” 执行脚本中sql语句**</p>
</li>
</ul>
</blockquote>
<h3>1.3 Hive数据类型</h3>
<ul>
<li>基本数据类型</li>
</ul>
<p>| Hive数据类型 | Java数据类型 | 长度                                                 | 例子                                 |<br>
|</p>
]]></content:encoded>
      <enclosure url="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200720001522.png" type="image/png"/>
    </item>
    <item>
      <title>Hive自定义函数</title>
      <link>https://mrjackc.github.io/posts/BigData/02_Hive%E6%80%BB%E7%BB%93/Hive%E8%87%AA%E5%AE%9A%E4%B9%89%E5%87%BD%E6%95%B0.html</link>
      <guid>https://mrjackc.github.io/posts/BigData/02_Hive%E6%80%BB%E7%BB%93/Hive%E8%87%AA%E5%AE%9A%E4%B9%89%E5%87%BD%E6%95%B0.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">Hive自定义函数</source>
      <description>Hive自定义函数 一、概述 二、UDTF函数 2.1 UDTF解析 2.2 代码实现 三、UDF函数 3.1 代码实现</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<hr>
<h2>一、概述</h2>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">--1. 在hive中有三种自定义函数：</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. UDF  ：一进一出  </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">--一行变一行</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. UDTF : 一进多出  </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 一行变多行</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. UDAF ：多进一出  </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 多行变一行</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 2. 实现步骤：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   a、进入函数的是什么参数</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   b、希望得到什么结果</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   c、考虑通用性</span></span></code></pre>
</div><h2>二、UDTF函数</h2>
<h3>2.1 UDTF解析</h3>
<div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 1. 说明</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">A custom UDTF can be created </span><span style="color:#C678DD;--shiki-dark:#C678DD">by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> extending the GenericUDTF abstract class </span><span style="color:#C678DD;--shiki-dark:#C678DD">and</span><span style="color:#C678DD;--shiki-dark:#C678DD"> then</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> implementing the initialize, process, </span><span style="color:#C678DD;--shiki-dark:#C678DD">and</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> possibly </span><span style="color:#C678DD;--shiki-dark:#C678DD">close</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> methods. The initialize method </span><span style="color:#C678DD;--shiki-dark:#C678DD">is</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> called </span><span style="color:#C678DD;--shiki-dark:#C678DD">by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> Hive </span><span style="color:#C678DD;--shiki-dark:#C678DD">to</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> notify the UDTF the argument types </span><span style="color:#C678DD;--shiki-dark:#C678DD">to</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> expect. The UDTF must </span><span style="color:#C678DD;--shiki-dark:#C678DD">then</span><span style="color:#C678DD;--shiki-dark:#C678DD"> return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> an </span><span style="color:#C678DD;--shiki-dark:#C678DD">object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> inspector corresponding </span><span style="color:#C678DD;--shiki-dark:#C678DD">to</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> the </span><span style="color:#C678DD;--shiki-dark:#C678DD">row</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> objects that the UDTF will generate. Once initialize() has been called, Hive will give </span><span style="color:#C678DD;--shiki-dark:#C678DD">rows</span><span style="color:#C678DD;--shiki-dark:#C678DD"> to</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> the UDTF </span><span style="color:#C678DD;--shiki-dark:#C678DD">using</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> the process() method. </span><span style="color:#C678DD;--shiki-dark:#C678DD">While</span><span style="color:#C678DD;--shiki-dark:#C678DD"> in</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> process(), the UDTF can produce </span><span style="color:#C678DD;--shiki-dark:#C678DD">and</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> forward </span><span style="color:#C678DD;--shiki-dark:#C678DD">rows</span><span style="color:#C678DD;--shiki-dark:#C678DD"> to</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> other operators </span><span style="color:#C678DD;--shiki-dark:#C678DD">by</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> calling forward(). Lastly, Hive will </span><span style="color:#C678DD;--shiki-dark:#C678DD">call</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> the </span><span style="color:#C678DD;--shiki-dark:#C678DD">close</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() method </span><span style="color:#C678DD;--shiki-dark:#C678DD">when</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> all the </span><span style="color:#C678DD;--shiki-dark:#C678DD">rows</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> have passed </span><span style="color:#C678DD;--shiki-dark:#C678DD">to</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> the UDTF.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    -- 解析如上内容：</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">    1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. 自定义UDTF函数，继承于抽象类GenericUDTF;</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">    2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. 实现initialize, process,</span><span style="color:#C678DD;--shiki-dark:#C678DD">close</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> 的三个方法；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">    3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. 三个方法的作用说明：</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">       1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. </span><span style="color:#98C379;--shiki-dark:#98C379">'initialize()'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">          a、规定形参的参数类型：Hive调用initialize()方法，来告诉UDTF函数接收参数的类型，然后在这个方法中就可以对参数的</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">          类型进行校验，参数类型包括个数、数据类型等等</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">          b、规定函数返回结果数据类型：返回initialize()方法必须返回一个与UDTF将生成的行对象对应的对象检查器   </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">       2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. </span><span style="color:#98C379;--shiki-dark:#98C379">'process()'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">          a、调用时机：initialize()被调用以后，即对输入的数据进行了检查满足条件以后，执行这个方法</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">          b、作用：一行数据调用一次process方法，process方法的内部，会遍历这一行数据，如果是数组，那就遍历数组，遍历以后的</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">          一个元素，调用一次forward()方法，对数据进行输出。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">       3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. </span><span style="color:#98C379;--shiki-dark:#98C379">'close()'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">          a、调用时机：当hive中的所有行都通过了UDTF函数以后，则Hive会调用这个close方法</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">          b、作用：关闭资源。</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>2.2 代码实现</h3>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">package</span><span style="color:#C678DD;--shiki-dark:#C678DD"> com.atguigu.hive</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.apache.hadoop.hive.ql.exec.UDFArgumentException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.apache.hadoop.hive.ql.metadata.HiveException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.apache.hadoop.hive.ql.udf.generic.GenericUDTF</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.apache.hadoop.hive.serde2.objectinspector.ObjectInspector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.apache.hadoop.hive.serde2.objectinspector.ObjectInspectorFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.apache.hadoop.hive.serde2.objectinspector.StructField</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.apache.hadoop.hive.serde2.objectinspector.StructObjectInspector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.apache.hadoop.hive.serde2.objectinspector.primitive.PrimitiveObjectInspectorFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.json.JSONArray</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> java.util.ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> java.util.List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@author</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> lianzhipeng</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * @Description</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * @create 2020-06-30 18:25:10</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ExplodeJSONArray</span><span style="color:#C678DD;--shiki-dark:#C678DD"> extends</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> GenericUDTF</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    StructObjectInspector:结构体,输出数据类型和返回数据类型均是结构体</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    UDTF：返回的数据可以是多列，多列可以封装到struct类型中</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    [agr1:type1,agr2:type2,agr3:type3,...]</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> StructObjectInspector</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> initialize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">StructObjectInspector</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> argOIs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#C678DD;--shiki-dark:#C678DD"> throws</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> UDFArgumentException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 1. 获取输入的参数，并对输入的参数进行检测</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         1.1 获取形参，获取的数据为一个数组。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">             List(agr1:type1,agr2:type2,agr3:type3,...)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">          */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#C678DD;--shiki-dark:#C678DD">?</span><span style="color:#C678DD;--shiki-dark:#C678DD"> extends</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> StructField</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75">fieldRefs</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> argOIs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getAllStructFieldRefs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         1.2 检验一：检验数据的个数是否为1个，在本案例中，传进来一个json数组</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">          */</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">fieldRefs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">size</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            throw</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> UDFArgumentException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"传递参数的个数超过1个"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        1.3 校验2 ：判断形参的数据类型是否为string类型</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         */</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 返回一个参数，因为我们规定只能是一个参数，返回参数的检查器</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        ObjectInspector</span><span style="color:#E06C75;--shiki-dark:#E06C75"> fieldObjectInspector</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> fieldRefs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getFieldObjectInspector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 通过参数的检查器返回参数的数据类型判定需要是字符串类型</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!</span><span style="color:#98C379;--shiki-dark:#98C379">"string"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">equals</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">fieldObjectInspector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getTypeName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">())) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            throw</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> UDFArgumentException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"传入的参数类型错误，需要是string类型"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 2. 返回函数结果的检查器</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 创建两个数组，一个用来包装列名，另外一个用来包装列名的数据类型</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 数组1：包装列名</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75">filenames</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 数组2：包装列名的数据类型</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ObjectInspector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75">fileOIS</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ObjectInspector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 添加元素</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        filenames</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"actions"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        fileOIS</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PrimitiveObjectInspectorFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">javaStringObjectInspector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ObjectInspectorFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getStandardStructObjectInspector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(filenames, fileOIS);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 对数据进行处理，执行函数逻辑的方法，每一行数据会调用一次process方法</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 1.为什么是object类型？</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 表示任意参数</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 2.为什么是一个数组？</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 表示可以传多个</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> args</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 每一行数据会调用一次process方法</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@throws</span><span style="color:#E5C07B;font-style:italic;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic"> HiveException</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> process</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[] </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">args</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#C678DD;--shiki-dark:#C678DD"> throws</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> HiveException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         1.在initialize方法中，已经对输入的数据进行校验，此时的形参中只能是一个</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         参数，参数为一个json数组。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">       [{"action_id":"favor_add","item":"7","item_type":"sku_id","ts":1592668888084}]</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">           */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> json</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> args[</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">].</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">toString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        2. 对上面的json进行解析</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        jsonArray ： List({"action_id":"favor_add","item":"7","item_type":"sku_id","ts":1592668888084},....)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         */</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        JSONArray</span><span style="color:#E06C75;--shiki-dark:#E06C75"> jsonArray</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> JSONArray</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(json);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 3. 遍历上面的json数组，行中的每一个数据都需要调用一次forward方法，将结果进行写出</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> i</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ; i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> jsonArray</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">length</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() ; i++){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 创建一个数组，数组的长度为1</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[] </span><span style="color:#E06C75;--shiki-dark:#E06C75">result</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">];</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 获取jsonArray指定位置的json数据，并存放到数组中</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            result[</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">] </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> jsonArray</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(i);</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF">            forward</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(result);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> void</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> close</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">()</span><span style="color:#C678DD;--shiki-dark:#C678DD"> throws</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> HiveException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2>三、UDF函数</h2>
<h3>3.1 代码实现</h3>
<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">package</span><span style="color:#C678DD;--shiki-dark:#C678DD"> com.atguigu.hive.udf</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.apache.hadoop.hive.ql.exec.UDFArgumentException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.apache.hadoop.hive.ql.metadata.HiveException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.apache.hadoop.hive.ql.udf.generic.GenericUDF</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.apache.hadoop.hive.serde2.objectinspector.ConstantObjectInspector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.apache.hadoop.hive.serde2.objectinspector.ObjectInspector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.apache.hadoop.hive.serde2.objectinspector.ObjectInspectorFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.apache.hadoop.hive.serde2.objectinspector.primitive.PrimitiveObjectInspectorFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.json.JSONArray</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> org.json.JSONObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> java.util.ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">import</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> java.util.List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@author</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> lianzhipeng</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * @Description</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * @create 2020-07-01 2:03:24</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">public</span><span style="color:#C678DD;--shiki-dark:#C678DD"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> JsonArrayToStructArray</span><span style="color:#C678DD;--shiki-dark:#C678DD"> extends</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> GenericUDF</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    本案例中实现的目的：</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    原始数据：</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">   [{"action_id":"favor_add","item":"5","item_type":"sku_id","ts":1592668884186},{...}]</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     转换后数据：</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     array&lt;struct("action_id":"favor_add","item":"5","item_type":"sku_id","ts":1592668884186),struct(...)&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 用来校验输入的参数类型和个数，同时返回函数返回结果的检查器</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> arguments</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 输入的参数</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@return</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@throws</span><span style="color:#E5C07B;font-style:italic;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic"> UDFArgumentException</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ObjectInspector</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> initialize</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ObjectInspector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[] </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">arguments</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#C678DD;--shiki-dark:#C678DD"> throws</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> UDFArgumentException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    1. 为了实现代码的通用性，由传入的形参的数据列类型和列名来确定返回值的检查器。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    2. 则在实际的调用的过程中，使用：如下案例所示</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">       a、"id","name","age"，表示从json对象获取的字段</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">       b、“id:string”,"name:string","age:int"：表示每个字段的数据类型</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">       如上两个参数完全由用户自定义，作为参数传入到udf的方法中。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    JsonArrayToStructArray(jsonarray,"id","name","age",“id:string”,"name:string","age:int")</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     3. 实现步骤：</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        a、获取形参中的第一个参数，返回一个字符串类型的json对象</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        array&lt;Struct&lt;k1:v1,k2:v2,k3:v3,....&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        b、创建两个集合，一个集合用来接收k1~kn列名，另外一个集合用来接收v1~vn的数据类型</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 1. 对输入的参数进行校验</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 判断参数的个数</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">arguments</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">length</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> &lt;</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            throw</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> UDFArgumentException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"JsonArrayToStructArray至少需要3个参数"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 判断参数的数据类型</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ObjectInspector</span><span style="color:#E06C75;--shiki-dark:#E06C75"> argument</span><span style="color:#C678DD;--shiki-dark:#C678DD"> :</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> arguments) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!</span><span style="color:#98C379;--shiki-dark:#98C379">"string"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">equals</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">argument</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getTypeName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">())) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                throw</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> UDFArgumentException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"JsonArrayToStructArray输入的参数类型不对，只能是string类型"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 2. 对返回结果的数据类型和名字进行封装</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // array&lt;Struct&lt;k1:v1,k2:v2,k3:v3,....&gt;,...&gt;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75">FieldNames</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ObjectInspector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75">fieldOIS</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 2.1 获取传递参数的“id:string”,"name:string","age:string"</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //     然后将id、name，age加入到FieldNames中</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //     将string、string、int加入到fieldOIS中</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // JsonArrayToStructArray(jsonarray,"id","name","age",“id:string”,"name:string","age:int")</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> i</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">arguments</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">length</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">/</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">; i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> arguments</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">length</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">; i++) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">!</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(arguments[i] </span><span style="color:#C678DD;--shiki-dark:#C678DD">instanceof</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ConstantObjectInspector)) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                throw</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> UDFArgumentException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"JsonArrayToStructArray输入的参数类型不对，只能是string常量"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 此时获取：field=“id:string”</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> field</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ((ConstantObjectInspector) arguments[i]).</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getWritableConstantValue</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">toString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 对上诉数据进行切分</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[] </span><span style="color:#E06C75;--shiki-dark:#E06C75">split</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> field</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">split</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">":"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 添加数据</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            FieldNames</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(split[</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            switch</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (split[</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">]) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                case</span><span style="color:#98C379;--shiki-dark:#98C379"> "int"</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    fieldOIS</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PrimitiveObjectInspectorFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">javaIntObjectInspector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                    break</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                case</span><span style="color:#98C379;--shiki-dark:#98C379"> "string"</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    fieldOIS</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PrimitiveObjectInspectorFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">javaStringObjectInspector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                    break</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                case</span><span style="color:#98C379;--shiki-dark:#98C379"> "bigint"</span><span style="color:#C678DD;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    fieldOIS</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">PrimitiveObjectInspectorFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">javaLongObjectInspector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                    break</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                default:</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                    throw</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> UDFArgumentException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"json_array_to_struct_array 不支持"</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> split[</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">] </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">+</span><span style="color:#98C379;--shiki-dark:#98C379"> "类型"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ObjectInspectorFactory</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">               .</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getStandardListObjectInspector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">ObjectInspectorFactory</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getStandardStructObjectInspector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(FieldNames, fieldOIS));</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 处理的逻辑</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * array类型：传入一个数组或集合</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * map类型：Map</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * struct：数组或集合</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> arguments</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@return</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@throws</span><span style="color:#E5C07B;font-style:italic;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic"> HiveException</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> Object</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> evaluate</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">DeferredObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[] </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">arguments</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#C678DD;--shiki-dark:#C678DD"> throws</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> HiveException</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // JsonArrayToStructArray(jsonarray,"id","name","age",“id:string”,"name:string","age:int")</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // arguments = 'jsonarray',"id","name","age",“id:string”,"name:string","age:int"</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 获取第一个数据jsonarray，判断是否为空</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (arguments[</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">].</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">==</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            return</span><span style="color:#D19A66;--shiki-dark:#D19A66"> null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        };</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 获取第一个数据jsonarray:"[{"name":"scala"},{"name":"python"}]"</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> strArray</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> arguments[</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">].</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">toString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 解析json数据:jsonArray = {"name":"scala"},{"name":"python"}</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        JSONArray</span><span style="color:#E06C75;--shiki-dark:#E06C75"> jsonArray</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> JSONArray</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(strArray);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 创建一个集合，最外层的集合</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //array&lt;struct("action_id":"favor_add","item":"5","item_type":"sku_id","ts":1592668884186),struct(...)&gt;</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">        ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">List</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt;&gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75">array</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 接下来就是遍历这个json对象，每一个对象封装成struct类型的对象</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> i</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66">0</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ; i </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> jsonArray</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">length</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">() ; i ++){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 创建一个集合，用来接收value值</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&gt; </span><span style="color:#E06C75;--shiki-dark:#E06C75">struct</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> new</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> ArrayList</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 获取一个json对象:{"name":"scala"}</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            JSONObject</span><span style="color:#E06C75;--shiki-dark:#E06C75"> jsonObject</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> jsonArray</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">getJSONObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(i);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 遍历"id","name","age"</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">            for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#C678DD;--shiki-dark:#C678DD">int</span><span style="color:#E06C75;--shiki-dark:#E06C75"> j</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ; j </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">&lt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">arguments</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">length</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> +</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ) </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">/</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ;j++){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">             // 轮询的方式获取"id","name","age"</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                String</span><span style="color:#E06C75;--shiki-dark:#E06C75"> key</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> arguments[j].</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">().</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">toString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">               // 判断当前的json对象中是否有key</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">                if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">jsonObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">has</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key)){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    // 获取key的value值</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    Object</span><span style="color:#E06C75;--shiki-dark:#E06C75"> value</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> jsonObject</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">get</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(key);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    // 添加元素</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    struct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(value);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                }</span><span style="color:#C678DD;--shiki-dark:#C678DD">else</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">                    struct</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#D19A66;--shiki-dark:#D19A66">null</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 将获取json的指定key【"id","name","age"】的value值放进数组中</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B">            array</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(struct);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> array;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     *   这个方法也可以不实现。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> children</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="color:#C678DD;font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@return</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    @</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">    public</span><span style="color:#E5C07B;--shiki-dark:#E5C07B"> String</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getDisplayString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#E5C07B;--shiki-dark:#E5C07B">String</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">[] </span><span style="color:#E06C75;font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">children</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // json_array_struct_array:指函数的名字</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">        return</span><span style="color:#61AFEF;--shiki-dark:#61AFEF"> getStandardDisplayString</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">(</span><span style="color:#98C379;--shiki-dark:#98C379">"json_array_struct_array"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,children);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>MySQL数据库</title>
      <link>https://mrjackc.github.io/posts/BigData/02_Hive%E6%80%BB%E7%BB%93/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93.html</link>
      <guid>https://mrjackc.github.io/posts/BigData/02_Hive%E6%80%BB%E7%BB%93/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">MySQL数据库</source>
      <description>MySQL数据库 一、为什么要使用数据库 持久化(persistence)：把数据保存到可掉电式存储设备中以供之后使用。大多数情况下，特别是企业级应用，数据持久化意味着将内存中的数据保存到硬盘上加以”固化”，而持久化的实现过程大多通过各种关系数据库来完成。 持久化的主要作用是将内存中的数据存储在关系型数据库中，当然也可以存储在磁盘文件、XML数据文件中...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<hr>
<h2>一、为什么要使用数据库</h2>
<ul>
<li>持久化(persistence)：<strong>把数据保存到可掉电式存储设备中以供之后使用</strong>。大多数情况下，特别是企业级应用，<strong>数据持久化意味着将内存中的数据保存到硬盘上加以”固化”</strong>，而持久化的实现过程大多通过各种关系数据库来完成。</li>
<li>持久化的主要作用是<strong>将内存中的数据存储在关系型数据库中</strong>，当然也可以存储在磁盘文件、XML数据文件中。</li>
</ul>
<figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716141737.png" alt="1554944967857" tabindex="0" loading="lazy"><figcaption>1554944967857</figcaption></figure>
<hr>
<h2>二、什么是数据库</h2>
<h3>2.1 数据库的相关概念</h3>
<p>| DB：数据库（Database）                                       |<br>
|</p>
]]></content:encoded>
      <enclosure url="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716141737.png" type="image/png"/>
    </item>
    <item>
      <title>SQL开发</title>
      <link>https://mrjackc.github.io/posts/BigData/02_Hive%E6%80%BB%E7%BB%93/SQL%E5%BC%80%E5%8F%91.html</link>
      <guid>https://mrjackc.github.io/posts/BigData/02_Hive%E6%80%BB%E7%BB%93/SQL%E5%BC%80%E5%8F%91.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">SQL开发</source>
      <description>SQL开发 第1章：SQL概述 SQL：Structured Query Language结构化查询语言，它是使用关系模型的数据库应用语言，由IBM上世纪70年代开发出来。后由美国国家标准局（ANSI）开始着手制定SQL标准，先后有SQL-86，SQL-89，SQL-92，SQL-99等标准。 1. SQL的语言规范 mysql对于SQL语句不区分大小...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<hr>
<h2>第1章：SQL概述</h2>
<p>SQL：Structured Query Language结构化查询语言，它是使用关系模型的数据库应用语言，由IBM上世纪70年代开发出来。后由美国国家标准局（ANSI）开始着手制定SQL标准，先后有SQL-86，SQL-89，SQL-92，SQL-99等标准。</p>
<h3>1. SQL的语言规范</h3>
<ul>
<li>mysql对于SQL语句不区分大小写，SQL语句关键字尽量大写</li>
<li>SQL 可以写在一行或者多行。为了提高可读性，各子句分行写，必要时使用缩进</li>
<li>关键字不能被缩写也不能分行</li>
<li>值，除了数值型，<strong>字符串型和日期时间类型使用单引号（' '）</strong></li>
<li>别名，尽量使用双引号（" "），而且不建议省略as</li>
<li>所有标点符号使用英文状态下的半角输入方式</li>
<li>必须保证所有(),单引号，双引号是成对结束的</li>
<li>可以使用（1）#单行注释 （2）--空格单行注释 （3）/*  多行注释  */</li>
</ul>
<h3>2. 命名规则</h3>
<ul>
<li>数据库、表名不得超过30个字符，变量名限制为29个</li>
<li>必须只能包含 A–Z, a–z, 0–9, _共63个字符</li>
<li>不能在对象名的字符间留空格</li>
<li>必须不能和用户定义的其他对象重名</li>
<li>必须保证你的字段没有和保留字、数据库系统或常用方法冲突</li>
<li>保持字段名和类型的一致性,在命名字段并为其指定数据类型的时候一定要保证一致性。假如数据类型在一个表里是整数,那在另一个表里可就别变成字符型了</li>
<li>在命令行中的要求：</li>
</ul>
<figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716145050.png" alt="1554944183905" tabindex="0" loading="lazy"><figcaption>1554944183905</figcaption></figure>
<blockquote>
<p>说明：一个语句可以分开多行编写，以;或\g结束</p>
</blockquote>
<h3>3. SQL分类</h3>
<ul>
<li>
<p><strong>DDL（Data Definition Languages)：数据定义语言</strong>，这些语句定义了不同的数据段、数据库、表、列、索引等数据库对象。</p>
<ul>
<li>主要的语句关键字包括<code>CREATE</code>、<code>DROP</code>、<code>ALTER</code>等。</li>
</ul>
</li>
<li>
<p><strong>DML（Data Manipulation Language）：数据操作语言</strong>，用于添加、删除、更新和查询数据库记录，并检查数据完整性。</p>
<ul>
<li>主要的语句关键字包括<code>INSERT</code>、<code>DELETE</code>、<code>UPDATE</code>、<code>SELECT</code>等。</li>
<li><strong>SELECT是SQL语言的基础，最为重要。</strong></li>
</ul>
</li>
<li>
<p><strong>DCL（Data Control Language）：数据控制语言</strong>，用于控制不同数据段直接的许可和访问级别的语句。这些语句定义了数据库、表、字段、用户的访问权限和安全级别。</p>
<ul>
<li>主要的语句关键字包括<code>GRANT</code>、<code>REVOKE</code>、<code>COMMIT</code>、<code>ROLLBACK</code>、<code>SAVEPOINT</code>等。</li>
</ul>
</li>
</ul>
<hr>
<h2>第2章：数据处理之查询</h2>
<h3>2.1 基本的SELECT语句</h3>
<h4>2.1.1 SELECT ... FROM</h4>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">SELECT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   标识选择哪些列</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">FROM</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">     标识从哪个表中选择</span></span></code></pre>
</div><ul>
<li>选择全部列：</li>
</ul>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">SELECT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> *</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">FROM</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   departments;</span></span></code></pre>
</div><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716145100.png" alt="1554950890895" tabindex="0" loading="lazy"><figcaption>1554950890895</figcaption></figure>
<figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716150437.png" alt="1554950903518" tabindex="0" loading="lazy"><figcaption>1554950903518</figcaption></figure>
<ul>
<li>选择特定的列：</li>
</ul>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">SELECT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> department_id, location_id</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">FROM</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   departments;</span></span></code></pre>
</div><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716150441.png" alt="1554950947969" tabindex="0" loading="lazy"><figcaption>1554950947969</figcaption></figure>
<figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716145129.png" alt="1554950953272" tabindex="0" loading="lazy"><figcaption>1554950953272</figcaption></figure>
<h4>2.1.2 列的别名</h4>
<ul>
<li>
<p>重命名一个列</p>
</li>
<li>
<p>便于计算</p>
</li>
<li>
<p>紧跟列名，也可以<strong>在列名和别名之间加入关键字AS，别名使用双引号</strong>，以便在别名中包含空格或特殊的字符并区分大小写。</p>
</li>
</ul>
<p>使用别名</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">SELECT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> last_name </span><span style="color:#C678DD;--shiki-dark:#C678DD">AS</span><span style="color:#C678DD;--shiki-dark:#C678DD"> name</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, commission_pct comm</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">FROM</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   employees;</span></span></code></pre>
</div><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716150459.png" alt="1554951616598" tabindex="0" loading="lazy"><figcaption>1554951616598</figcaption></figure>
<figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716150502.png" alt="1554951622467" tabindex="0" loading="lazy"><figcaption>1554951622467</figcaption></figure>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">SELECT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> last_name </span><span style="color:#98C379;--shiki-dark:#98C379">"Name"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">, salary*</span><span style="color:#D19A66;--shiki-dark:#D19A66">12</span><span style="color:#98C379;--shiki-dark:#98C379"> "Annual Salary"</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">FROM</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   employees;</span></span></code></pre>
</div><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716173835.png" alt="1554951648377" tabindex="0" loading="lazy"><figcaption>1554951648377</figcaption></figure>
<figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716173833.png" alt="1554951655368" tabindex="0" loading="lazy"><figcaption>1554951655368</figcaption></figure>
<h4>2.1.3 去除重复行</h4>
<p>默认情况下，查询会返回全部行，包括重复行。</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">SELECT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> department_id</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">FROM</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   employees;</span></span></code></pre>
</div><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716173829.png" alt="1554951711115" tabindex="0" loading="lazy"><figcaption>1554951711115</figcaption></figure>
<figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716173827.png" alt="1554951715923" tabindex="0" loading="lazy"><figcaption>1554951715923</figcaption></figure>
<p><strong>在SELECT语句中使用关键字DISTINCT去除重复行。</strong></p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">SELECT DISTINCT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> department_id</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">FROM</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   employees;</span></span></code></pre>
</div><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716173824.png" alt="1554951796570" tabindex="0" loading="lazy"><figcaption>1554951796570</figcaption></figure>
<figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716173822.png" alt="1554951801044" tabindex="0" loading="lazy"><figcaption>1554951801044</figcaption></figure>
<h4>2.1.4 空值参与运算</h4>
<ul>
<li>所有运算符或列值遇到null值，运算的结果都为null</li>
</ul>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">SELECT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> employee_id,salary,commission_pct,</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">12</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> * salary * (</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> + commission_pct) </span><span style="color:#98C379;--shiki-dark:#98C379">"annual_sal"</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">FROM</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> employees;</span></span></code></pre>
</div><h4>2.1.5 显示表结构</h4>
<p>使用DESCRIBE 或 DESC 命令，表示表结构。</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">DESCRIBE employees;</span></span></code></pre>
</div><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716173818.png" alt="1554951856201" tabindex="0" loading="lazy"><figcaption>1554951856201</figcaption></figure>
<h3>2.2 过滤数据</h3>
<h4>2.2.1 SELECT ... FROM ... WHERE</h4>
<p>背景：</p>
<figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716173815.png" alt="1554952199742" tabindex="0" loading="lazy"><figcaption>1554952199742</figcaption></figure>
<ul>
<li>使用WHERE 子句，将不满足条件的行过滤掉</li>
<li><strong>WHERE子句紧随 FROM子句</strong></li>
</ul>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">SELECT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> employee_id, last_name, job_id, department_id</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">FROM</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   employees</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">WHERE</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  department_id </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 90</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ;</span></span></code></pre>
</div><figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200716173812.png" alt="1554952277028" tabindex="0" loading="lazy"><figcaption>1554952277028</figcaption></figure>
<h4>2.2.2 比较运算符</h4>
<h5>① 基本操作符</h5>
<p>| 操作符    | 含义         |<br>
|</p>
]]></content:encoded>
      <enclosure url="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200716145050.png" type="image/png"/>
    </item>
    <item>
      <title>数据清洗</title>
      <link>https://mrjackc.github.io/posts/BigData/02_Hive%E6%80%BB%E7%BB%93/%E6%95%B0%E6%8D%AE%E6%B8%85%E6%B4%97.html</link>
      <guid>https://mrjackc.github.io/posts/BigData/02_Hive%E6%80%BB%E7%BB%93/%E6%95%B0%E6%8D%AE%E6%B8%85%E6%B4%97.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">数据清洗</source>
      <description>数据清洗 一、背景 二、数据清洗思想 三、代码实现 3.0 准备工作 添加依赖 在resource目录下创建一个log4j2.xml文件，并添加如下配置内容 3.1 创建一个工具类 3.2 创建mapper类 3.3 创建driver类 四、代码打包 将ETL程序打包为etl.jar 并上传到Linux的 /opt/module/hive/datas 目录下</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<hr>
<h2>一、背景</h2>
<div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 1. 清洗的原因：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">     在数仓项目中，数据经常不是我们想要的，数据可能存在不完整的情况，或有一些null，或者格式不对，那么我们需要对数据进行清洗。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 2. 本案例的事件：</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">   --用户数据：</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">   	   '一条数据'</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   		barelypolitical	</span><span style="color:#D19A66;--shiki-dark:#D19A66">151</span><span style="color:#D19A66;--shiki-dark:#D19A66">	5106</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">   		'每个字段代表的含义'</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   		uploader:barelypolitical</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        videos: </span><span style="color:#D19A66;--shiki-dark:#D19A66">151</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">        friends: </span><span style="color:#D19A66;--shiki-dark:#D19A66">5106</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">   --viedo数据：</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">   	   '一条数据'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">       LKh7zAJ4nwo	TheReceptionist	</span><span style="color:#D19A66;--shiki-dark:#D19A66">653</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">	Entertainment	</span><span style="color:#D19A66;--shiki-dark:#D19A66">424</span><span style="color:#D19A66;--shiki-dark:#D19A66">	13021</span><span style="color:#D19A66;--shiki-dark:#D19A66">	4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">34</span><span style="color:#D19A66;--shiki-dark:#D19A66">	1305</span><span style="color:#D19A66;--shiki-dark:#D19A66">	744</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">	DjdA-5oKYFQ	NxTDlnOuybo	</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">       c-8VuICzXtU	DH56yrIO5nI		</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">       '每个字段代表的含义'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">：</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">       'videoId'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">：LKh7zAJ4nwo</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">       'uploader'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">：TheReceptionist</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">       'age'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">：</span><span style="color:#D19A66;--shiki-dark:#D19A66">653</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">       'category'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">：People &amp; Blogs   </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">--(Array`&lt;String&gt;`)</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">       'length'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">：</span><span style="color:#D19A66;--shiki-dark:#D19A66">424</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">       'views'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">：</span><span style="color:#D19A66;--shiki-dark:#D19A66">13021</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">       'rate'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">：</span><span style="color:#D19A66;--shiki-dark:#D19A66">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">34</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">       'Ratings'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">：</span><span style="color:#D19A66;--shiki-dark:#D19A66">1305</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">       'conments'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">：</span><span style="color:#D19A66;--shiki-dark:#D19A66">744</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">       'relatedId'</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">：DjdA-5oKYFQ	NxTDlnOuybo	c-8VuICzXtU	DH56yrIO5nI	 </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 相关视频id(Array`&lt;String&gt;`)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 3.  我们需要做的清洗工作是：</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">       1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. 格式转换成统一的格式</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">          视频类别的分隔符和相关视频的id两个数据格式进行处理。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">       2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. 进行一些数据处理，数据格式不完整的不要。</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>| 字段      | 备注                        | 详细描述               |<br>
|</p>
]]></content:encoded>
    </item>
    <item>
      <title>Flume</title>
      <link>https://mrjackc.github.io/posts/BigData/04_Flume%E6%80%BB%E7%BB%93/Flume.html</link>
      <guid>https://mrjackc.github.io/posts/BigData/04_Flume%E6%80%BB%E7%BB%93/Flume.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">Flume</source>
      <description>Flume 一、写flume的步骤 1.0.0 Flume 事务 image-20200705115942823image-20200705115942823 1.0.1 Flume Agent内部原理 图1 图1 1.1 画拓扑图 总结：一个channel只能输出一个结果文件。 一个flume agent 由 source + channel + s...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>一、写flume的步骤</h2>
<h3>1.0.0 Flume 事务</h3>
<figure><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200705115942.png" alt="image-20200705115942823" tabindex="0" loading="lazy"><figcaption>image-20200705115942823</figcaption></figure>
<h3>1.0.1 Flume Agent内部原理</h3>
<p><img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200710174541.png" alt="图1" loading="lazy">												图1</p>
<h3>1.1 画拓扑图</h3>
<blockquote>
<p>总结：一个channel只能输出一个结果文件。</p>
<p>一个flume agent 由 source + channel + sink 构成，类比于mapper + shuffer + reducer。</p>
</blockquote>
<h4>1.1.1 确定source类型</h4>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">	常用类型：</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">    1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) arvo:  用于Flume agent 之间的数据源传递</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">    2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) netcat: 用于监听端口</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">    3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">）</span><span style="color:#C678DD;--shiki-dark:#C678DD">exec</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: 用于执行linux中的操作指令</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">    4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) spooldir: 用于监视文件或目录</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">    5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) taildir: 用于监视文件或目录，同时支持追加的监听</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">	总结 ，</span><span style="color:#D19A66;--shiki-dark:#D19A66">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/</span><span style="color:#D19A66;--shiki-dark:#D19A66">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/5三种方式，最常用的是5，适合用于监听多个实时追加的文件，并且能够实现断点续传。</span></span></code></pre>
</div><h4>1.1.2 <strong>确定channel selector 的选择器</strong></h4>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">    1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">）replicating channel selector：复制，每个channel发一份数据 </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 默认的选择器</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">    2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) multiplexing channel selector : 根据配置配件，指定source源获取的数据发往一个或多个channel</span></span></code></pre>
</div><h4><strong>1.1.3 确认channel类型参数</strong></h4>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">    1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">） Memory Channel ： 加载在内存中，存在数据丢失的风险 </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 学习阶段使用此参数</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">    2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">） </span><span style="color:#C678DD;--shiki-dark:#C678DD">File</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> Channel ：落入磁盘</span></span></code></pre>
</div><h4><strong>1.1.4 确定sinkprocessor参数</strong></h4>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">    1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">） DefaultSinkProcessor：对应的是单个的Sink</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">    2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">） LoadBalancingSinkProcessor ：对应的是多个的Sink，可以实现负载均衡的功能</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">    3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">） FailoverSinkProcessor ：对应的是多个的Sink，容错功能，先指定一个sink，所有的数据都走指定的sink，当sink故障以后，其他的sink顶上，如果开始sink恢复了，那么数据继续走原有指定的sink。</span></span></code></pre>
</div><h4><strong>1.1.5 确定sink的类型</strong></h4>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">    常使用的类型有：</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">    1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) avro: 用于输出到下一个Flume Agent ，一个开源的序列化框架</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">    2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) hdfs: 输出到hdfs</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">    3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) fill_roll: 输出到本地</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">    4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) logger: 输出到控制台</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">    5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) hbase: 输出到hbase</span></span></code></pre>
</div><h4>1.1.6 拓扑例图</h4>
<p>​										<img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200710174547.png" alt="图2" loading="lazy"></p>
<p>​										<img src="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200710174550.png" alt="图3" loading="lazy"></p>
<p>​	图3</p>
<h3>1.2 写配置文件</h3>
<h4>1.2.1 配置文件的构成</h4>
<ol>
<li>Name the components on this agent  -- agent Name</li>
<li>Describe/configure the source  -- source</li>
<li>channel selector</li>
<li>Describe the channel  -- channel</li>
<li>sinkprocessor</li>
<li>Describe the sink   --sink</li>
<li>Bind the source and sink to the channel -- 连接source、channel、sink</li>
</ol>
<h4>1.2.2   agent Name</h4>
<p>情况1：source、channel、sink各一个</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> r1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> k1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span></code></pre>
</div><p>情况2：source一个、channel一个、sink多个</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> r1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinkgroups</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> g1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> k1 k2</span></span></code></pre>
</div><p>情况3：source一个、channel多个、sink多个</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> r1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> k1 k2</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1 c2</span></span></code></pre>
</div><h4>1.2.3  source</h4>
<p>情况1：avro</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> avro</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">bind</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> hadoop102 </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- hosename</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">port</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 4141</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> -- 端口号</span></span></code></pre>
</div><p>情况2：netcat</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> netcat</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">bind</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> localhost </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 指接收来自ip为localhost发来的数据，如果是0.0.0.0，则表示可以接收来自任意ip地址发来的数据</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">port</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 44444</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  -- 本机的端口号，从该端口接收数据</span></span></code></pre>
</div><p>情况3：exec</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> exec</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">command</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> tail -F /opt/module/hive/logs/</span><span style="color:#D19A66;--shiki-dark:#D19A66">hive</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">log</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> --&gt;linux执行的命令</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">shell</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> /bin/bash -c </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- linux的解析器</span></span></code></pre>
</div><p>情况4: sqooldir</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe/configure the source</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> spooldir </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 定义source类型</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">spoolDir</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> /opt/module/flume/upload </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 定义监控的文件或目录</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">fileSuffix</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> .COMPLETED </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 定义文件上传后的后缀</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">fileHeader</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> true </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 是否有文件头</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#</span><span style="color:#D19A66;--shiki-dark:#D19A66">忽略所有以</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">tmp结尾的文件</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">，不上传</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">ignorePattern</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E06C75;--shiki-dark:#E06C75">[^ ]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">*\.tmp)</span></span></code></pre>
</div><p>情况5：talidir</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe/configure the source</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> TAILDIR </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">positionFile</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> /opt/module/flume/</span><span style="color:#D19A66;--shiki-dark:#D19A66">tail_dir</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">json</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> -- 指定position_file 的位置，(记录每次上传后的偏移量，实现断点续传的关键)</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">batchSize</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66">500</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">filegroups</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> f1 f2 </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 监控的文件目录集合</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">filegroups</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.f1 </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> /opt/module/flume/files/.*</span><span style="color:#C678DD;--shiki-dark:#C678DD">file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.* </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 定义监控的文件目录1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">filegroups</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.f2 </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> /opt/module/flume/files/.*</span><span style="color:#C678DD;--shiki-dark:#C678DD">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.* </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 定义监控的文件目录2</span></span></code></pre>
</div><h4>1.2.4 channel selector</h4>
<p>情况1： replicating channel selector</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span># 将数据流复制给所有channel</span></span>
<span class="line"><span>a1.sources.r1.selector.type = replicating</span></span></code></pre>
</div><p>情况2：multiplexing channel selector 需配合指定的拦截器使用（interceptor）</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 指定拦截器</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">interceptors</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> i1 </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 指定拦截器的名称</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">interceptors</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">i1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> com</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">atguigu</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">flume</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">interceptor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.CustomInterceptor$Builder</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 指定拦截器的类型 = 自定义拦截器中builder的实现类的全类名</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 指定channel的选择器</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">selector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#C678DD;--shiki-dark:#C678DD">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> multiplexing  </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 定义channel的选择器类型</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">selector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.header </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> type</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  -- 自定义拦截器的header的k</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">selector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">mapping</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">letter</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1 </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- letter是map中一个value值，相同的letter进入一个channel中</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">selector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">mapping</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">number</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c2 </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- number是map中一个value值，相同的number进入一个channel中</span></span></code></pre>
</div><h4>1.2.5 channel</h4>
<p>情况1： memory</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe the channel</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> memory</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">capacity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1000</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> --表示channel总容量为1000个event</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">transactionCapacity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 100</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> -- 表示channel传输时收集到的100条event</span></span></code></pre>
</div><p>情况2 ： flie</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD">file</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  --channel类型</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">checkpointDir</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/opt/module/flume/</span><span style="color:#C678DD;--shiki-dark:#C678DD">checkpoint</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/behavior1 </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">--checkpoint文件存储的地址</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">dataDirs</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/opt/module/flume/</span><span style="color:#C678DD;--shiki-dark:#C678DD">data</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/behavior1/  </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- channel中event文件在磁盘中存储的地址</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">capacity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66">1000000</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> --checkpoint个数的最大容量</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">maxFileSize</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66">2146435071</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> --一个event文件存储的最大的大小</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">keep</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">-alive</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66">6</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> --当put事务将数据提交到channel队列中，channel队列没有足够的空间时，提交事务等待的最大时间</span></span></code></pre>
</div><h4>1.2.6 sinkprocessor</h4>
<p>情况1：DefaultSinkProcessor --对应单个Sink</p>
<div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span>不用写任何配置信息，默认值。</span></span></code></pre>
</div><p>情况2：FailoverSinkProcessor --对应的是Sink Group</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinkgroups</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">g1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">processor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#C678DD;--shiki-dark:#C678DD">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> failover</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> -- 指定类型</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinkgroups</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">g1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">processor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">priority</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 5</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> --设置K1的sink的优先级</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinkgroups</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">g1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">processor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">priority</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k2</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 10</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> --设置K2的sink的优先级</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinkgroups</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">g1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">processor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.maxpenalty </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 10000</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> -- 设置故障的转换时间10s。默认值为30s</span></span></code></pre>
</div><p>情况3：LoadBalancingSinkProcessor --对应的是Sink Group</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinkgroups</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">g1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">processor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#C678DD;--shiki-dark:#C678DD">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">load_balance </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 指定类型</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinkgroups</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">g1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">processor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.backoff </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> true </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 暂不讨论</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinkgroups</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">g1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">processor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.selector </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD">round_robin</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> -- 暂不讨论</span></span></code></pre>
</div><h4>1.2.7 sink</h4>
<p>情况1：avro</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe the sink</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> avro</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hostname</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> hadoop104 </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- hosaname</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">port</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 4141</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  -- 端口</span></span></code></pre>
</div><p>情况2：hdfs</p>
<div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> hdfs</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#C678DD;--shiki-dark:#C678DD">path</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> hdfs://hadoop102:</span><span style="color:#D19A66;--shiki-dark:#D19A66">9820</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/flume/upload2/%Y%m%d/%H   </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 上传到HDFS的路径</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#上传文件的前缀</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.filePrefix </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> upload-</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#是否按照时间滚动文件夹</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.round </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> true</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#多少时间单位创建一个新的文件夹</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.roundValue </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#重新定义时间单位</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.roundUnit </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> hour</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#是否使用本地时间戳</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.useLocalTimeStamp </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> true</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#积攒多少个Event才flush到HDFS一次</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#C678DD;--shiki-dark:#C678DD">batchSize</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 100</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#设置文件类型，可支持压缩</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.fileType </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> DataStream</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#多久生成一个新的文件</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.rollInterval </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 60</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  -- 单位是秒</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#设置每个文件的滚动大小大概是128M</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.rollSize </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 134217700</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#文件的滚动与Event数量无关</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.rollCount </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>情况3：fill_roll</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe the sink</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> file_roll</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sink</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.directory </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> /opt/module/flume/datas/flume3 </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 指定上传到本地的路径</span></span></code></pre>
</div><p>情况4：logger</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe the sink</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> logger</span></span></code></pre>
</div><p>情况5：hbase</p>
]]></content:encoded>
      <enclosure url="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic%20GO/20200705115942.png" type="image/png"/>
    </item>
    <item>
      <title>Flume练习题</title>
      <link>https://mrjackc.github.io/posts/BigData/04_Flume%E6%80%BB%E7%BB%93/Flume%E7%BB%83%E4%B9%A0%E9%A2%98.html</link>
      <guid>https://mrjackc.github.io/posts/BigData/04_Flume%E6%80%BB%E7%BB%93/Flume%E7%BB%83%E4%B9%A0%E9%A2%98.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">Flume练习题</source>
      <description>Flume练习题 题目1 需求：使用Flume监听一个端口，收集该端口数据，并打印到控制台。 题目2 实时监控Hive日志，并上传到HDFS中 题目3 使用Flume监听整个目录的文件，并上传至HDFS 题目4 使用Flume监听整个目录的实时追加文件，并上传至HDFS 题目5 使用Flume-1监控文件变动，Flume-1将变动内容传递给Flume-...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<hr>
<h2>题目1</h2>
<p>需求：使用Flume监听一个端口，收集该端口数据，并打印到控制台。</p>
<div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤一：agent </span><span style="color:#C678DD;--shiki-dark:#C678DD">Name</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> r1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> k1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤二：source</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> netcat</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">bind</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> localhost </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">port</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 44444</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  </span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤三： channel selector</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">selector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#C678DD;--shiki-dark:#C678DD">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> replicating</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤四： channel</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe the channel</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> memory</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">capacity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">transactionCapacity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 100</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤五： sinkprocessor，默认配置defaultsinkprocessor</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤六： sink</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe the sink</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> logger</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤七：连接source、channel、sink</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channel</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2>题目2</h2>
<p>实时监控Hive日志，并上传到HDFS中</p>
<div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤一：agent </span><span style="color:#C678DD;--shiki-dark:#C678DD">Name</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> r1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> k1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤二：source</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> exec</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">command</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> tail -F /opt/module/hive/logs/</span><span style="color:#D19A66;--shiki-dark:#D19A66">hive</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">shell</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> /bin/bash -c</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤三： channel selector</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">selector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#C678DD;--shiki-dark:#C678DD">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> replicating</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤四： channel</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe the channel</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> memory</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">capacity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">transactionCapacity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 100</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤五： sinkprocessor，默认配置defaultsinkprocessor</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤六： sink</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> hdfs</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#C678DD;--shiki-dark:#C678DD">path</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> hdfs://hadoop102:</span><span style="color:#D19A66;--shiki-dark:#D19A66">9820</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/flume/upload2/%Y%m%d/%H   </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#上传文件的前缀</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.filePrefix </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> upload-</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#是否按照时间滚动文件夹</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.round </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> true</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#多少时间单位创建一个新的文件夹</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.roundValue </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#重新定义时间单位</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.roundUnit </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> hour</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#是否使用本地时间戳</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.useLocalTimeStamp </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> true</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#积攒多少个Event才flush到HDFS一次</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#C678DD;--shiki-dark:#C678DD">batchSize</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 100</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#设置文件类型，可支持压缩</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.fileType </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> DataStream</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#多久生成一个新的文件</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.rollInterval </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 60</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#设置每个文件的滚动大小大概是128M</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.rollSize </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 134217700</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#文件的滚动与Event数量无关</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.rollCount </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤七：连接source、channel、sink</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channel</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2>题目3</h2>
<p>使用Flume监听整个目录的文件，并上传至HDFS</p>
<div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤一：agent </span><span style="color:#C678DD;--shiki-dark:#C678DD">Name</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> r1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> k1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤二：source</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe/configure the source</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> spooldir </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">spoolDir</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> /opt/module/flume/upload </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">fileSuffix</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> .COMPLETED </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">fileHeader</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> true </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#</span><span style="color:#D19A66;--shiki-dark:#D19A66">忽略所有以</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">tmp结尾的文件</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">，不上传</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">ignorePattern</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> (</span><span style="color:#E06C75;--shiki-dark:#E06C75">[^ ]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">*\.tmp)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤三： channel selector</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">selector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#C678DD;--shiki-dark:#C678DD">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> replicating</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤四： channel</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe the channel</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> memory</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">capacity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">transactionCapacity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 100</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤五： sinkprocessor，默认配置defaultsinkprocessor</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤六： sink</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> hdfs</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#C678DD;--shiki-dark:#C678DD">path</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> hdfs://hadoop102:</span><span style="color:#D19A66;--shiki-dark:#D19A66">9820</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/flume/upload/%Y%m%d/%H   </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#上传文件的前缀</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.filePrefix </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> upload-</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#是否按照时间滚动文件夹</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.round </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> true</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#多少时间单位创建一个新的文件夹</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.roundValue </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#重新定义时间单位</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.roundUnit </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> hour</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#是否使用本地时间戳</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.useLocalTimeStamp </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> true</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#积攒多少个Event才flush到HDFS一次</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#C678DD;--shiki-dark:#C678DD">batchSize</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 100</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#设置文件类型，可支持压缩</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.fileType </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> DataStream</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#多久生成一个新的文件</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.rollInterval </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 60</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#设置每个文件的滚动大小大概是128M</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.rollSize </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 134217700</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#文件的滚动与Event数量无关</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.rollCount </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤七：连接source、channel、sink</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channel</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2>题目4</h2>
<p>使用Flume监听整个目录的实时追加文件，并上传至HDFS</p>
<div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤一：agent </span><span style="color:#C678DD;--shiki-dark:#C678DD">Name</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> r1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> k1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤二：source</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe/configure the source</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> TAILDIR </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">positionFile</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> /opt/module/flume/</span><span style="color:#D19A66;--shiki-dark:#D19A66">tail_dir</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">json</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> -- 指定position_file 的位置(记录每次上传后的偏移量，实现断点续传的关键)</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">filegroups</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> f1 f2 </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 监控的文件目录集合</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">filegroups</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.f1 </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> /opt/module/flume/files/.*</span><span style="color:#C678DD;--shiki-dark:#C678DD">file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.* </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 定义监控的文件目录1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">filegroups</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.f2 </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> /opt/module/flume/files/.*</span><span style="color:#C678DD;--shiki-dark:#C678DD">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.* </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 定义监控的文件目录2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤三： channel selector</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">selector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#C678DD;--shiki-dark:#C678DD">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> replicating</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤四： channel</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe the channel</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> memory</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">capacity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">transactionCapacity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 100</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤五： sinkprocessor，默认配置defaultsinkprocessor</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤六： sink</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> hdfs</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#C678DD;--shiki-dark:#C678DD">path</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> hdfs://hadoop102:</span><span style="color:#D19A66;--shiki-dark:#D19A66">9820</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/flume/upload3/%Y%m%d/%H   </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#上传文件的前缀</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.filePrefix </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> upload-</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#是否按照时间滚动文件夹</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.round </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> true</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#多少时间单位创建一个新的文件夹</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.roundValue </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#重新定义时间单位</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.roundUnit </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> hour</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#是否使用本地时间戳</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.useLocalTimeStamp </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> true</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#积攒多少个Event才flush到HDFS一次</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#C678DD;--shiki-dark:#C678DD">batchSize</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 100</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#设置文件类型，可支持压缩</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.fileType </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> DataStream</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#多久生成一个新的文件</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.rollInterval </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 60</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#设置每个文件的滚动大小大概是128M</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.rollSize </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 134217700</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#文件的滚动与Event数量无关</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.rollCount </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤七：连接source、channel、sink</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channel</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2>题目5</h2>
<p>使用Flume-1监控文件变动，Flume-1将变动内容传递给Flume-2，Flume-2负责存储到HDFS。同时Flume-1将变动内容传递给Flume-3，Flume-3负责输出到Local FileSystem。</p>
<ul>
<li>flume1：</li>
</ul>
<div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤一：agent </span><span style="color:#C678DD;--shiki-dark:#C678DD">Name</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> r1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> k1 k2</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1 c2</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤二：source</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe/configure the source</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> TAILDIR </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">positionFile</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> /opt/module/flume/</span><span style="color:#D19A66;--shiki-dark:#D19A66">tail_dir</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">json</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">filegroups</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> f1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">filegroups</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.f1 </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> /opt/module/flume/files/.*</span><span style="color:#C678DD;--shiki-dark:#C678DD">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.* </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤三： channel selector</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">selector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#C678DD;--shiki-dark:#C678DD">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> replicating</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤四： channel</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe the channel</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> memory</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">capacity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">transactionCapacity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 100</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> memory</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">capacity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">transactionCapacity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 100</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤五： sinkprocessor，默认配置defaultsinkprocessor</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤六： sink</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe the sink</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> avro</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hostname</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> hadoop103 </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">port</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 6666</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  </span></span>
<span class="line"></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> avro</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hostname</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> hadoop104 </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">port</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 8888</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  </span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤七：连接source、channel、sink</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1 c2</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channel</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channel</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c2</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li>flume2:</li>
</ul>
<div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤一：agent </span><span style="color:#C678DD;--shiki-dark:#C678DD">Name</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> r1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> k1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤二：source</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe/configure the source</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> avro</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">bind</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> hadoop103 </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">port</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 6666</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤三： channel selector</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">selector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#C678DD;--shiki-dark:#C678DD">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> replicating</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤四： channel</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe the channel</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> memory</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">capacity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">transactionCapacity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 100</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤五： sinkprocessor，默认配置defaultsinkprocessor</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤六： sink</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe the sink</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> hdfs</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#C678DD;--shiki-dark:#C678DD">path</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> hdfs://hadoop102:</span><span style="color:#D19A66;--shiki-dark:#D19A66">9820</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/flume/upload4/%Y%m%d/%H   </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#上传文件的前缀</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.filePrefix </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> upload-</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#是否按照时间滚动文件夹</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.round </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> true</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#多少时间单位创建一个新的文件夹</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.roundValue </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#重新定义时间单位</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.roundUnit </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> hour</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#是否使用本地时间戳</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.useLocalTimeStamp </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> true</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#积攒多少个Event才flush到HDFS一次</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#C678DD;--shiki-dark:#C678DD">batchSize</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 100</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#设置文件类型，可支持压缩</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.fileType </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> DataStream</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#多久生成一个新的文件</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.rollInterval </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 60</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#设置每个文件的滚动大小大概是128M</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.rollSize </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 134217700</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#文件的滚动与Event数量无关</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.rollCount </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤七：连接source、channel、sink</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channel</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li>flum3:</li>
</ul>
<div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤一：agent </span><span style="color:#C678DD;--shiki-dark:#C678DD">Name</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> r1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> k1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤二：source</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe/configure the source</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> avro</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">bind</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> hadoop104 </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">port</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 8888</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤三： channel selector</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">selector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#C678DD;--shiki-dark:#C678DD">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> replicating</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤四： channel</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe the channel</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> memory</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">capacity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">transactionCapacity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 100</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤五： sinkprocessor，默认配置defaultsinkprocessor</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤六： sink</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe the sink</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> file_roll</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sink</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.directory </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> /opt/module/flume/datas/flume3</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤七：连接source、channel、sink</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channel</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2>题目6</h2>
<p>使用Flume1监控一个端口，其sink组中的sink分别对接Flume2和Flume3，采用FailoverSinkProcessor，实现故障转移的功能</p>
<ul>
<li>flume1</li>
</ul>
<div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤一：agent </span><span style="color:#C678DD;--shiki-dark:#C678DD">Name</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> r1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinkgroups</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> g1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> k1 k2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤二：source</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe/configure the source</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> netcat</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">bind</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> localhost </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">port</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 44444</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤三： channel selector</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">selector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#C678DD;--shiki-dark:#C678DD">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> replicating</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤四： channel</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe the channel</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> memory</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">capacity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">transactionCapacity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 100</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤五： sinkprocessor</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinkgroups</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">g1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">processor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#C678DD;--shiki-dark:#C678DD">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> failover</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinkgroups</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">g1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">processor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">priority</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 10</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinkgroups</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">g1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">processor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">priority</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k2</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinkgroups</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">g1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">processor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.maxpenalty </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 10000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤六： sink</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe the sink</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> avro</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hostname</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> hadoop103</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">port</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1111</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  </span></span>
<span class="line"></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> avro</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hostname</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> hadoop104</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">port</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 2222</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  </span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤七：连接source、channel、sink</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinkgroups</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">g1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> k1 k2</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channel</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channel</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li>flume2</li>
</ul>
<div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤一：agent </span><span style="color:#C678DD;--shiki-dark:#C678DD">Name</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> r1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> k1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤二：source</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe/configure the source</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> avro</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">bind</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> hadoop103</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">port</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1111</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤三： channel selector</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">selector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#C678DD;--shiki-dark:#C678DD">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> replicating</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤四： channel</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe the channel</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> memory</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">capacity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">transactionCapacity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 100</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤五： sinkprocessor，默认配置defaultsinkprocessor</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤六： sink</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe the sink</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> logger </span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤七：连接source、channel、sink</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channel</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li>flume3</li>
</ul>
<div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤一：agent </span><span style="color:#C678DD;--shiki-dark:#C678DD">Name</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> r1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> k1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤二：source</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe/configure the source</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> avro</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">bind</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> hadoop104</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">port</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 2222</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤三： channel selector</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">selector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#C678DD;--shiki-dark:#C678DD">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> replicating</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤四： channel</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe the channel</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> memory</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">capacity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">transactionCapacity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 100</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤五： sinkprocessor，默认配置defaultsinkprocessor</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤六： sink</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe the sink</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> logger </span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤七：连接source、channel、sink</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channel</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2>题目7</h2>
<p>hadoop102上的Flume-1监控文件/opt/module/group.log，</p>
<p>hadoop103上的Flume-2监控某一个端口的数据流，</p>
<p>Flume-1与Flume-2将数据发送给hadoop104上的Flume-3，Flume-3将最终数据打印到控制台。</p>
<ul>
<li>flume1</li>
</ul>
<div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤一：agent </span><span style="color:#C678DD;--shiki-dark:#C678DD">Name</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> r1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> k1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤二：source</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> TAILDIR </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">positionFile</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> /opt/module/flume/</span><span style="color:#D19A66;--shiki-dark:#D19A66">tail_dir</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">json</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">filegroups</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> f1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">filegroups</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.f1 </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> /opt/module/flume/files/.*</span><span style="color:#C678DD;--shiki-dark:#C678DD">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.* </span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤三： channel selector</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">selector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#C678DD;--shiki-dark:#C678DD">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> replicating</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤四： channel</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe the channel</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> memory</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">capacity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">transactionCapacity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 100</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤五： sinkprocessor，默认配置defaultsinkprocessor</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤六： sink</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe the sink</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> avro</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hostname</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> hadoop104</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">port</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 4141</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  </span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤七：连接source、channel、sink</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channel</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li>flume2</li>
</ul>
<div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤一：agent </span><span style="color:#C678DD;--shiki-dark:#C678DD">Name</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> r1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> k1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤二：source</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> netcat</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">bind</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> localhost </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">port</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 3333</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤三： channel selector</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">selector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#C678DD;--shiki-dark:#C678DD">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> replicating</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤四： channel</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe the channel</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> memory</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">capacity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">transactionCapacity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 100</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤五： sinkprocessor，默认配置defaultsinkprocessor</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤六： sink</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe the sink</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> avro</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hostname</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> hadoop104</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">port</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 4141</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  </span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤七：连接source、channel、sink</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channel</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li>flume3</li>
</ul>
<div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤一：agent </span><span style="color:#C678DD;--shiki-dark:#C678DD">Name</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> r1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> k1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤二：source</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> avro</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">bind</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> hadoop104</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">port</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 4141</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤三： channel selector</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">selector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#C678DD;--shiki-dark:#C678DD">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> replicating</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤四： channel</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe the channel</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> memory</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">capacity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">transactionCapacity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 100</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤五： sinkprocessor，默认配置defaultsinkprocessor</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤六： sink</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe the sink</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> logger </span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤七：连接source、channel、sink</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channel</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2>题目8</h2>
<p>需求：</p>
<ol>
<li>
<p>a1 102 接收TailDirSource数据，监控/var/log/*.log，复制输出到a2 a3</p>
</li>
<li>
<p>a2 103 接收a1数据，输出到HDFS，failover到本地FileRoll</p>
</li>
<li>
<p>a3 104 接收a1数据，输出到控制台</p>
</li>
</ol>
<ul>
<li>flume1</li>
</ul>
<div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤一：agent </span><span style="color:#C678DD;--shiki-dark:#C678DD">Name</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> r1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> k1 k2</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1 c2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤二：source</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> TAILDIR </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">positionFile</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> /opt/module/flume/</span><span style="color:#D19A66;--shiki-dark:#D19A66">tail_dir</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">json</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">filegroups</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> f1 </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">filegroups</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.f1 </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> /opt/module/flume/files/.*</span><span style="color:#C678DD;--shiki-dark:#C678DD">file</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.* </span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤三： channel selector</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">selector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#C678DD;--shiki-dark:#C678DD">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> replicating</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤四： channel</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe the channel</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> memory</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">capacity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">transactionCapacity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 100</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> memory</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">capacity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">transactionCapacity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 100</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤五： sinkprocessor，默认配置defaultsinkprocessor</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤六： sink</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe the sink</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> avro</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hostname</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> hadoop103</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">port</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 6666</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> avro</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hostname</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> hadoop104 </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">port</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 8888</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤七：连接source、channel、sink</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1 c2</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channel</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channel</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c2</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li>flume2:</li>
</ul>
<div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤一：agent </span><span style="color:#C678DD;--shiki-dark:#C678DD">Name</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> r1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinkgroups</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> g1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> k1 k2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤二：source</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> avro</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">bind</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> hadoop103</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">port</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 6666</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤三： channel selector</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">selector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#C678DD;--shiki-dark:#C678DD">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> replicating</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤四： channel</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe the channel</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> memory</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">capacity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">transactionCapacity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 100</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤五： sinkprocessor，默认配置defaultsinkprocessor</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinkgroups</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">g1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">processor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#C678DD;--shiki-dark:#C678DD">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#C678DD;--shiki-dark:#C678DD"> failover</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinkgroups</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">g1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">processor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">priority</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 10</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinkgroups</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">g1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">processor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">priority</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k2</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinkgroups</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">g1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">processor</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.maxpenalty </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 10000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤六： sink</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe the sink</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> hdfs</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#C678DD;--shiki-dark:#C678DD">path</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> hdfs://hadoop102:</span><span style="color:#D19A66;--shiki-dark:#D19A66">9820</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/flume/upload2/%Y%m%d/%H  </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#上传文件的前缀</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.filePrefix </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> upload-</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#是否按照时间滚动文件夹</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.round </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> true</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#多少时间单位创建一个新的文件夹</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.roundValue </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#重新定义时间单位</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.roundUnit </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#C678DD;--shiki-dark:#C678DD"> hour</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#是否使用本地时间戳</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.useLocalTimeStamp </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> true</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#积攒多少个Event才flush到HDFS一次</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#C678DD;--shiki-dark:#C678DD">batchSize</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 100</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#设置文件类型，可支持压缩</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.fileType </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> DataStream</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#多久生成一个新的文件</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.rollInterval </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 60</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  </span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#设置每个文件的滚动大小大概是128M</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.rollSize </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 134217700</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#文件的滚动与Event数量无关</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">hdfs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.rollCount </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> logger</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤七：连接source、channel、sink</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinkgroups</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">g1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> k1 k2</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channel</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channel</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li>flume3:</li>
</ul>
<div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤一：agent </span><span style="color:#C678DD;--shiki-dark:#C678DD">Name</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> r1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> k1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤二：source</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> avro</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">bind</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> hadoop104</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">port</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 8888</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤三： channel selector</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">selector</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#C678DD;--shiki-dark:#C678DD">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> replicating</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤四： channel</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe the channel</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> memory</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">capacity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">c1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">transactionCapacity</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 100</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤五： sinkprocessor，默认配置defaultsinkprocessor</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤六： sink</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"># Describe the sink</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">type</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> logger</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#步骤七：连接source、channel、sink</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sources</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">r1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channels</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">a1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sinks</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">k1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">channel</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> c1</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Sqoop一些常用命令及参数</title>
      <link>https://mrjackc.github.io/posts/BigData/04_%E6%8E%A5%E5%85%A5%E5%B1%82/Sqoop%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%8F%8A%E5%8F%82%E6%95%B0.html</link>
      <guid>https://mrjackc.github.io/posts/BigData/04_%E6%8E%A5%E5%85%A5%E5%B1%82/Sqoop%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%8F%8A%E5%8F%82%E6%95%B0.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">Sqoop一些常用命令及参数</source>
      <description>Sqoop一些常用命令及参数 5.1 常用命令列举 5.2 命令&amp;参数详解 刚才列举了一些Sqoop的常用命令，对于不同的命令，有不同的参数，让我们来一一列举说明。 首先来我们来介绍一下公用的参数，所谓公用参数，就是大多数命令都支持的参数。 5.2.1 公用参数：数据库连接 5.2.2 **公用参数：**import 5.2.3 **公用参数：**ex...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<h2><strong>5.1</strong> <strong>常用命令列举</strong></h2>
<p>| <strong>序号</strong> | <strong>命令</strong>          | <strong>类</strong>              | <strong>说明</strong>                                                     |<br>
|</p>
]]></content:encoded>
    </item>
    <item>
      <title>zookeeper总结</title>
      <link>https://mrjackc.github.io/posts/BigData/05_Zookeeper%E6%80%BB%E7%BB%93/zookeeper%E6%80%BB%E7%BB%93.html</link>
      <guid>https://mrjackc.github.io/posts/BigData/05_Zookeeper%E6%80%BB%E7%BB%93/zookeeper%E6%80%BB%E7%BB%93.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">zookeeper总结</source>
      <description>zookeeper总结 总结： 时间：2020.05.02 一、zookeeper入门 1.1 概述 1.2 zookeeper特点 1.3 zookeeper数据结构 1.4 应用场景 1.5 配置参数解读 1.6 zookeeper的四字命令 二、zookeeper内部原理 2.1 节点类型 2.2 Stat结构体 2.3 监听器原理（重点） 2....</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<hr>
<p>总结：     时间：2020.05.02</p>
<h2>一、zookeeper入门</h2>
<h3>1.1 概述</h3>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 理解</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">) Apache一个分布式项目；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">）是一个基于观察者模式设计的分布服务管理框架，负责存储和管理大家都关心的数据，然后接受观察者的注册，一旦数据发生变化，则zookeeper通知观察者。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- zookeeper = 文件系统 + 通知机制。</span></span></code></pre>
</div><h3>1.2 zookeeper特点</h3>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 特点</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)  每一节点都有一个不重复的myid标识zookeeper集群；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">） 一个领导者（leader） 和 n 个追随者 （follower）组成的集群；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">） 集群只要有半数以上的节点存活就能对外提供服务，即使是在leader失败的情况下；</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 半数机制</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">） 根据半数机制，可知一般搭建奇数台的机器是有优势的；</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">	假设是4台，半数为2，故障一台，还有3台，</span><span style="color:#D19A66;--shiki-dark:#D19A66">3</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> &gt;</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ,所以继续提供服务，再故障一台，剩下2台， </span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> &gt;</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ,错误，此时，不再对外提供服务；</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">	假设是 3台，半数为 </span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ，故障1台，还有2台， </span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> &gt;</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> , 所以继续提供服务，再故障一台，剩下1台， </span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#56B6C2;--shiki-dark:#56B6C2"> &gt;</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ,错误，此时不再对外提供服务。</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">	综上，4台机器，允许故障1台，3台机器，也允许故障一台，所以奇数台机器有优势。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">） 全局数据一致：所有节点的数据是保持一致的，所以客户端无论连接到哪台机器，获取的数据都是一样的； </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 基于zab机制；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">6</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">） 更新请求按照顺序执行；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">7</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">） 数据更新的原子性：要么成功，要么失败；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">8</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">） 实时性： 在一定时间范围内，client能够获得最新的数据。</span></span></code></pre>
</div><h3>1.3 zookeeper数据结构</h3>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">） 与linux文件结构相似，也是一个根目录。整体呈一颗树的形状；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">） 每一个节点称作一个znode，每一个znode可以存储1M的数据；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">） 每个znode通过其路径进行唯一标识。</span></span></code></pre>
</div><h3>1.4 应用场景</h3>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">） 统一命名服务；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">） 统一配置管理；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">） 服务器节点动态上下线；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">） 软负载均衡。</span></span></code></pre>
</div><h3>1.5  配置参数解读</h3>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">）tickTime </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66">2000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">：通信心跳数，Zookeeper服务器与客户端心跳时间，单位毫秒</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">Zookeeper使用的基本时间，服务器之间或客户端与服务器之间维持心跳的时间间隔，也就是每个tickTime时间就会发送一个心跳，时间单位为毫秒。</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">它用于心跳机制，并且设置最小的session超时时间为两倍心跳时间。(session的最小超时时间是2*tickTime)</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">）initLimit </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66">10</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">：LF初始通信时限</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">集群中的Follower跟随者服务器与Leader领导者服务器之间初始连接时能容忍的最多心跳数（tickTime的数量），用它来限定集群中的Zookeeper服务器连接到Leader的时限。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">）syncLimit </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66">5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">：LF同步通信时限</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">集群中Leader与Follower之间的最大响应时间单位，假如响应超过syncLimit * tickTime，Leader认为Follwer死掉，从服务器列表中删除Follwer。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">）dataDir：数据文件目录+数据持久化路径</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">主要用于保存Zookeeper中的数据。</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">）clientPort </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66">2181</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">：客户端连接端口</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">监听客户端连接的端口。</span></span></code></pre>
</div><p>1.6 zookeeper的四字命令</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">需要在Zookeeper的配置文件/opt/module/zookeeper-</span><span style="color:#D19A66;--shiki-dark:#D19A66">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">7</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/conf/</span><span style="color:#D19A66;--shiki-dark:#D19A66">zoo</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">cfg中加入如下配置</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">4lw</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">commands</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.whitelist</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 语法：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">连接方式： nc  机器名 端口号 （如果nc功能没有，则使用yum进行安装）</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 示例：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">nc hadoop102 </span><span style="color:#D19A66;--shiki-dark:#D19A66">2181</span></span></code></pre>
</div><p>| ruok | 测试服务是否长度处于正确状态，如果确实如此，那么服务返回 imok ,否则不做任何响应。 |<br>
|</p>
]]></content:encoded>
    </item>
    <item>
      <title>Kafka总结</title>
      <link>https://mrjackc.github.io/posts/BigData/06_Kafka%E6%80%BB%E7%BB%93/Kafka%E6%80%BB%E7%BB%93.html</link>
      <guid>https://mrjackc.github.io/posts/BigData/06_Kafka%E6%80%BB%E7%BB%93/Kafka%E6%80%BB%E7%BB%93.html</guid>
      <source url="https://mrjackc.github.io/rss.xml">Kafka总结</source>
      <description>Kafka总结 一、kafka概述 1.1 kafka定义 Kafka是一个分布式的基于发布/订阅模式的消息队列，主要应用于大数据实时处理领域。 订阅式模式：一对多的关系，一个生产者，数据存储在消息队列中，多个消费者均可从这个消息对列中获取数据，消费者消费数据之后不会清除消息。 1.2 框架说明 一般都是从命令行和API两个方面进行讲解。 数据处理框架...</description>
      <pubDate>Mon, 28 Oct 2024 01:58:08 GMT</pubDate>
      <content:encoded><![CDATA[
<hr>
<h2>一、kafka概述</h2>
<h3>1.1 kafka定义</h3>
<blockquote>
<p>Kafka是一个分布式的基于<strong>发布/订阅</strong>模式的<strong>消息队列，<strong>主要应用于大数据</strong>实时</strong>处理领域。</p>
<p>订阅式模式：一对多的关系，一个生产者，数据存储在消息队列中，多个消费者均可从这个消息对列中获取数据，<strong>消费者消费数据之后不会清除消息。</strong></p>
</blockquote>
<h3>1.2 框架说明</h3>
<blockquote>
<p>一般都是从命令行和API两个方面进行讲解。</p>
<p>数据处理框架需要从数据的安全性以及效率两个方面深入了解。</p>
</blockquote>
<h3>1.3 Kafka涉及的关键词</h3>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. producer: 消息的生产者，即为向kafka broker发消息;</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. </span><span style="color:#C678DD;--shiki-dark:#C678DD">broker</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ： kafka集群的节点；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. topic : 队列（话题），生产者和消费者面向的都是一个topic；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. </span><span style="color:#C678DD;--shiki-dark:#C678DD">message</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">：消息，队列中的一条消息；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">5</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. </span><span style="color:#C678DD;--shiki-dark:#C678DD">partition</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">: 分区，为方便扩展和提高吞吐量，将一个topic分为了多个partition；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">6</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. </span><span style="color:#C678DD;--shiki-dark:#C678DD">index</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ： 消息数据在log文件中的索引；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">7</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. </span><span style="color:#C678DD;--shiki-dark:#C678DD">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> ：消息的具体数据；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">8</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. timeindex： 时间索引，代表发送的数据时间索引；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">9</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. offset ： 消息的偏移量，每一条消息都对应一个offset；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">10</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. segment : 一个分片数据；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">11</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. leader ：每个分区多个副本的“主”，生产者发送数据的对象，以及消费者消费数据的对象都是leader；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">12</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">. follower : 每个分区多个副本中的“从”，实时从leader中同步数据，保持和leader数据的同步。leader发生故障时，某个follower会成为新的leader</span></span></code></pre>
</div><h2>二、Kafka安装</h2>
<h3>2.1 集群部署</h3>
<h4>2.2.1  解压安装包</h4>
<p>在/opt/software目录下</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">tar -zxvf </span><span style="color:#D19A66;--shiki-dark:#D19A66">kafka_2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">11</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">-</span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.tgz -C /opt/module/</span></span></code></pre>
</div><h4>2.2.2  修改解压后的文件名称</h4>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> mv </span><span style="color:#D19A66;--shiki-dark:#D19A66">kafka_2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">11</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">-</span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/ kafka</span></span></code></pre>
</div><h4>2.2.3 创建logs文件夹</h4>
<p>在/opt/module/kafka目录下</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">mkdir logs</span></span></code></pre>
</div><h4>2.2.4 修改配置文件</h4>
<p>/opt/module/kafk路径下</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">vim config/</span><span style="color:#D19A66;--shiki-dark:#D19A66">server</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">properties</span></span></code></pre>
</div><p>修改如下三个参数，修改后的值如下：</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">broker</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">id</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">dirs</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/opt/module/kafka/logs</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">zookeeper</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">connect</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">hadoop102:</span><span style="color:#D19A66;--shiki-dark:#D19A66">2181</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,hadoop103:</span><span style="color:#D19A66;--shiki-dark:#D19A66">2181</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">,hadoop104:</span><span style="color:#D19A66;--shiki-dark:#D19A66">2181</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/kafka</span></span></code></pre>
</div><h4>2.2.5 配置环境变量</h4>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">sudo vim /etc/</span><span style="color:#D19A66;--shiki-dark:#D19A66">profile</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">d</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/</span><span style="color:#D19A66;--shiki-dark:#D19A66">my_env</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sh</span></span></code></pre>
</div><p>增加如下配置：</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#KAFKA_HOME</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">KAFKA_HOME</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">/opt/module/kafka</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">PATH</span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">$</span><span style="color:#C678DD;--shiki-dark:#C678DD">PATH</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">:$KAFKA_HOME/bin</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">export KAFKA_HOME</span></span></code></pre>
</div><p>生效配置文件：</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">source /etc/</span><span style="color:#C678DD;--shiki-dark:#C678DD">profile</span></span></code></pre>
</div><h4>2.2.6  分发安装包</h4>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">xsync kafka/</span></span></code></pre>
</div><p>注意：分发之后记得配置其他机器的环境变量</p>
<h4>2.2.7 修改其他机器的配置文件</h4>
<ul>
<li>
<p>/opt/module/kafka/config/server.properties中的broker.id=3、broker.id=4</p>
<p>注：broker.id不得重复</p>
</li>
</ul>
<h4>2.2.8  启动集群</h4>
<ol>
<li>
<p>首先启动zookeeper集群和hadoop集群</p>
</li>
<li>
<p>依次在hadoop102、hadoop103、hadoop104节点上启动kafka</p>
</li>
</ol>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">kafka-</span><span style="color:#C678DD;--shiki-dark:#C678DD">server</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">-</span><span style="color:#D19A66;--shiki-dark:#D19A66">start</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sh</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> -daemon $KAFKA_HOME/config/</span><span style="color:#D19A66;--shiki-dark:#D19A66">server</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">properties</span></span></code></pre>
</div><ul>
<li>-daemon属于后台启动，没有-daemon则为前台启动</li>
</ul>
<h4>2.2.9 关闭集群</h4>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">kafka-</span><span style="color:#C678DD;--shiki-dark:#C678DD">server</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">-</span><span style="color:#D19A66;--shiki-dark:#D19A66">stop</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sh</span></span></code></pre>
</div><h4>2.2.10 kafka群起群停脚本</h4>
<div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">#！bin/bash</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">if</span><span style="color:#E06C75;--shiki-dark:#E06C75"> [ $# -lt 1 ]</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD"> then</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   echo </span><span style="color:#98C379;--shiki-dark:#98C379">"No Args Input Error"</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">   exit</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">fi</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">case</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> $</span><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#C678DD;--shiki-dark:#C678DD"> in</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">"start"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> i </span><span style="color:#C678DD;--shiki-dark:#C678DD">in</span><span style="color:#98C379;--shiki-dark:#98C379"> `cat /opt/module/hadoop-3.1.3/etc/hadoop/workers`</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">do</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">echo </span><span style="color:#98C379;--shiki-dark:#98C379">"==========start $i kafka=========="</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">ssh $i </span><span style="color:#98C379;--shiki-dark:#98C379">'$KAFKA_HOME/bin/kafka-server-start.sh -daemon /opt/module/kafka/config/server.properties'</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">done</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;;</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">"stop"</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">for</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> i </span><span style="color:#C678DD;--shiki-dark:#C678DD">in</span><span style="color:#98C379;--shiki-dark:#98C379"> `cat /opt/module/hadoop-3.1.3/etc/hadoop/workers`</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">do</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">echo </span><span style="color:#98C379;--shiki-dark:#98C379">"==========stop $i kafka=========="</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">ssh $i </span><span style="color:#98C379;--shiki-dark:#98C379">'$KAFKA_HOME/bin/kafka-server-stop.sh'</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">done</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">*)</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">  echo </span><span style="color:#98C379;--shiki-dark:#98C379">"Input Args Error"</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">;;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">esac</span></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>2.2 Kafka命令操作</h3>
<h4>2.2.1 查看当前服务器中的所有topic</h4>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">kafka-</span><span style="color:#D19A66;--shiki-dark:#D19A66">topics</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sh</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  --bootstrap-server hadoop102:9092 --list</span></span></code></pre>
</div><p>选项说明：</p>
<ul>
<li>--list ：查看kafka所有的topic</li>
<li>--bootstrap-server : 连接kafka集群</li>
<li>--hadoop102:9092：hadoop102是指连接kafka任意一台机器，9092：kafka内部通信的端口</li>
</ul>
<h4>2.2.2  创建topic</h4>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">kafka-</span><span style="color:#D19A66;--shiki-dark:#D19A66">topics</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sh</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  --bootstrap-server hadoop102:9092 --create --topic first --partitions 2 --replication-factor 2</span></span></code></pre>
</div><p>选项说明：</p>
<ul>
<li>--topic  : 定义topic名字</li>
<li>--partitions  : 定义分区数</li>
<li>--replication-factor : 定义副本数</li>
</ul>
<h4>2.2.3 查看某个Topic的详情</h4>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> kafka-</span><span style="color:#D19A66;--shiki-dark:#D19A66">topics</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sh</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> --bootstrap-server hadoop102:9092 --describe --topic first</span></span></code></pre>
</div><p>选项说明：</p>
<ul>
<li>--topic first ： 查看指定的话题，如果不加此选项，则表示查看所有的话题</li>
</ul>
<h4>2.2.4  修改分区数</h4>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">kafka-</span><span style="color:#D19A66;--shiki-dark:#D19A66">topics</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sh</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> --bootstrap-server hadoop102:9092 --alter --topic first --partitions 6</span></span></code></pre>
</div><p>说明：</p>
<ul>
<li>--分区数只能增加不能减少</li>
<li>分区内部消息有序，分区之间消息无序</li>
</ul>
<h4>2.2.5 发送消息</h4>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">kafka-console-</span><span style="color:#D19A66;--shiki-dark:#D19A66">producer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sh</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> --broker-list  hadoop102:9092,hadoop103:9092,hadoop104:9092 --topic first</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">hello world</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2">&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">atguigu  atguigu</span></span></code></pre>
</div><p>选项说明：</p>
<ul>
<li>hadoop102:9092,hadoop103:9092,hadoop104:9092 : kafka的集群中的broker，其实写一个也是可以的，写3个的目的只是避免当连接的kafka集群broker故障时连不上kafka集群的情况。</li>
</ul>
<h4>2.2.6  消费消息</h4>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">kafka-console-</span><span style="color:#D19A66;--shiki-dark:#D19A66">consumer</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sh</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> --bootstrap-server hadoop102:9092 --from-beginning --topic first</span></span></code></pre>
</div><p>选项说明：</p>
<ul>
<li>
<p>--from-beginning ：</p>
<p>加上：会把topic中以往所有的数据都读取出来</p>
<p>不加：此时只会消费最新的数据，原来topic中的数据不会被消费</p>
</li>
</ul>
<h4>2.2.7  删除topic</h4>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">kafka-</span><span style="color:#D19A66;--shiki-dark:#D19A66">topics</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">sh</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> --bootstrap-server hadoop102:9820 --delete --topic first</span></span></code></pre>
</div><h2>三、 Kafka深入流程</h2>
<p>说明：此框架步步引导，采取提出问题解决问题的方式阐述。</p>
<h3>3.1 Kafka工作流程及文件存储机制</h3>
<p>![图2](<a href="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic" target="_blank" rel="noopener noreferrer">https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic</a> GO/20200529005434.png)</p>
<ol>
<li>kafka 以topic（话题）为单位，每一个话题分为多个区（创建话题的时候指定分区的个数），每个分区中存储的数据是不一样的，同时每个分区的数据在其他分区也会创建副本。</li>
<li>不同的分区分布在kafka集群不同的机器（broker，代理人）上面；</li>
<li>消息的生产和消费均是分区为单位；</li>
<li>分区内的数据是有序的，分区之间的顺序是无序的；</li>
<li>offset 指消息的偏移量；</li>
<li>每个分区都是一个文件夹，文件中包含index（数据在log中的索引）、log（真实的数据）、timeindex (数据发送的时间索引) ，时间索引和index索引均是用来提高查询数据效率；</li>
<li>当产生新的数据以后会向log文件中进行追加，同时index和timeindex也会增加；</li>
<li>Kafka采取了<strong>分片</strong>和<strong>索引</strong>机制。</li>
<li>topic是逻辑上的概念，而partition是物理上的概念，每个partition对应于一个log文件，该log文件中存储的就是producer生产的数据。Producer生产的数据会被不断追加到该log文件末端，且每条数据都有自己的offset。消费者组中的每个消费者，都会实时记录自己消费到了哪个offset，以便出错恢复时，从上次的位置继续消费</li>
</ol>
<p>![图1](<a href="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic" target="_blank" rel="noopener noreferrer">https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic</a> GO/20200610151457.png)</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 灵魂拷问1：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">产生的数据一直向同一个log中进行追加，会有什么问题呢？</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 答案：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">log中的数据会越来越大，查询和读取效率会变慢。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 解决方式：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">数据达到一定程度以后（默认值为1G：</span><span style="color:#D19A66;--shiki-dark:#D19A66">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#D19A66;--shiki-dark:#D19A66">segment</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.bytes </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF"> 1G），log会进行数据切分，生成多个segment切分文件。</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">切分后的文件依然包含index、</span><span style="color:#C678DD;--shiki-dark:#C678DD">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">、timeindex 。所以三个文件是作为一个整体的。 </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">--切分机制</span></span></code></pre>
</div><p>![image-20200714205920775](<a href="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic" target="_blank" rel="noopener noreferrer">https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic</a> GO/20200714205928.png)</p>
<p>![image-20200714210619003](<a href="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic" target="_blank" rel="noopener noreferrer">https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic</a> GO/20200714210619.png)</p>
<blockquote>
<p>切分的文件位于同一个文件夹下，该文件夹的命名规则为：<mark>topic名称+分区序号</mark>。</p>
<p>例如，first这个topic有三个分区，则其对应的文件夹为first-0,first-1,first-2</p>
</blockquote>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 灵魂拷问2：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">现在假如有两个切分的文件，当有一个消费者需要消费一条消息（假如是 offset </span><span style="color:#56B6C2;--shiki-dark:#56B6C2">=</span><span style="color:#D19A66;--shiki-dark:#D19A66"> 3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">），怎么知道这个消息在哪个切分文件中，以及真实数据如何查询？</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">--答案：</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">）log和index文件名说明： </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 牢记log、index、timeindex是一个整体</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">index</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">：</span><span style="color:#D19A66;--shiki-dark:#D19A66">00000000000000000000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#C678DD;--shiki-dark:#C678DD">index</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD">log</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">：</span><span style="color:#D19A66;--shiki-dark:#D19A66">00000000000000000000</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">.</span><span style="color:#C678DD;--shiki-dark:#C678DD">log</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">前面的数字00000000000000000000：代表此log文件中第一条消息的offset。</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379">'.index文件存储大量的索引信息，“.log”文件存储大量的数据，索引文件中的元数据指向对应数据文件中message的物理偏移地址'</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">） 查询的方式：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">根据消费消息的offset值 </span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">--&gt;找到指定的index文件 --&gt; 匹配此条消息在log文件中数据的偏移量（即该数据在log文件中起始位置）--&gt; 找到待消费的数据</span></span></code></pre>
</div><div class="language-sql" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 灵魂拷问3：</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">为什么kafka要采取向一个log文件中追加数据呢？</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 答案：</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">）减少IO；</span></span>
<span class="line"><span style="color:#D19A66;--shiki-dark:#D19A66">2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF">）消费数据是连续进行消费，连续读取数据的效率高。</span></span></code></pre>
</div><h3>3.2 Kafka之生产者producer</h3>
<h4>3.2.1 分区策略</h4>
<ol>
<li>首先producer发送的数据会被封装成 ProducerRecord 对象，根据对象的参数，分区情况如下：
<ul>
<li>
<p>情况1 ：指定了partition；</p>
</li>
<li>
<p>情况2 ：未指定partition，封装key，则按照key的hashcode % 分区数量 得出在哪个分区；</p>
</li>
<li>
<p>情况3：未指定partition，也未封装key处理方式 :</p>
<p>参数1：producer发送的数据量：batch.size，默认值为16Kb；</p>
<p>条件2：<a href="http://linger.ms" target="_blank" rel="noopener noreferrer">linger.ms</a>：两条数据发送的间隔时间 t ，默认值为0s；</p>
<p>当发送的数据量 &lt; batch.size 并且 发送的数据时间间隔  &lt; t   时，所有的数据在一个分区；</p>
<p>当发送的数据量 &gt; batch.size 或者 发送的数据时间间隔  &gt;  t 时，则数据会进入下一个分区；</p>
<p>分区与分区之间采取轮询的方式。</p>
<p>![图4](<a href="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic" target="_blank" rel="noopener noreferrer">https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic</a> GO/20200529005453.png)</p>
<p>![图3](<a href="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic" target="_blank" rel="noopener noreferrer">https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic</a> GO/20200529005450.png)</p>
</li>
</ul>
</li>
</ol>
<h4>3.2.2 数据可靠性保证</h4>
<p>数据传输流程：</p>
<p>producer</p>
]]></content:encoded>
      <enclosure url="https://lian-zp.oss-cn-shenzhen.aliyuncs.com/pic GO/20200529005434.png" type="image/png"/>
    </item>
  </channel>
</rss>